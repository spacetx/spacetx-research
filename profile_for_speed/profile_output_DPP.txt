Command line: test_speed.py
Total duration: 476.015s
File: <frozen importlib._bootstrap>
File duration: 29.5067s (6.20%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         0|            0|            0|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         0|            0|            0|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         0|            0|            0|  0.00%|
     9|         0|            0|            0|  0.00%|
    10|         0|            0|            0|  0.00%|
    11|         0|            0|            0|  0.00%|
    12|         0|            0|            0|  0.00%|
    13|         0|            0|            0|  0.00%|
    14|         0|            0|            0|  0.00%|
    15|         0|            0|            0|  0.00%|
    16|         0|            0|            0|  0.00%|
    17|         0|            0|            0|  0.00%|
    18|         0|            0|            0|  0.00%|
    19|         0|            0|            0|  0.00%|
    20|         0|            0|            0|  0.00%|
    21|         0|            0|            0|  0.00%|
    22|         0|            0|            0|  0.00%|
    23|         0|            0|            0|  0.00%|
    24|         0|            0|            0|  0.00%|
    25|         0|            0|            0|  0.00%|
    26|         0|            0|            0|  0.00%|
    27|         0|            0|            0|  0.00%|
    28|         0|            0|            0|  0.00%|
    29|         0|            0|            0|  0.00%|
    30|         0|            0|            0|  0.00%|
    31|         0|            0|            0|  0.00%|
    32|         0|            0|            0|  0.00%|
    33|         0|            0|            0|  0.00%|
    34|         0|            0|            0|  0.00%|
    35|      2856|   0.00668001|  2.33894e-06|  0.00%|
    36|      2856|    0.0144367|  5.05487e-06|  0.00%|
    37|         0|            0|            0|  0.00%|
    38|         0|            0|            0|  0.00%|
    39|         0|            0|            0|  0.00%|
    40|         0|            0|            0|  0.00%|
    41|         0|            0|            0|  0.00%|
    42|         0|            0|            0|  0.00%|
    43|         0|            0|            0|  0.00%|
    44|         0|            0|            0|  0.00%|
    45|         0|            0|            0|  0.00%|
    46|         0|            0|            0|  0.00%|
    47|         0|            0|            0|  0.00%|
    48|         0|            0|            0|  0.00%|
    49|         0|            0|            0|  0.00%|
    50|         0|            0|            0|  0.00%|
    51|         0|            0|            0|  0.00%|
    52|         0|            0|            0|  0.00%|
    53|         0|            0|            0|  0.00%|
    54|         0|            0|            0|  0.00%|
    55|         0|            0|            0|  0.00%|
    56|         0|            0|            0|  0.00%|
    57|         0|            0|            0|  0.00%|
    58|     39156|     0.112218|  2.86592e-06|  0.02%|
    59|     39156|     0.184724|  4.71764e-06|  0.04%|
    60|     39156|     0.148307|   3.7876e-06|  0.03%|
    61|     39156|     0.132617|  3.38689e-06|  0.03%|
    62|     39156|     0.141363|  3.61024e-06|  0.03%|
    63|     39156|     0.139047|  3.55111e-06|  0.03%|
    64|     39156|     0.128218|  3.27454e-06|  0.03%|
    65|         0|            0|            0|  0.00%|
    66|         0|            0|            0|  0.00%|
    67|         0|            0|            0|  0.00%|
    68|         0|            0|            0|  0.00%|
    69|         0|            0|            0|  0.00%|
    70|         0|            0|            0|  0.00%|
    71|         0|            0|            0|  0.00%|
    72|         0|            0|            0|  0.00%|
    73|         0|            0|            0|  0.00%|
    74|         0|            0|            0|  0.00%|
    75|         0|            0|            0|  0.00%|
    76|         0|            0|            0|  0.00%|
    77|         0|            0|            0|  0.00%|
    78|     41599|     0.110379|  2.65342e-06|  0.02%|
    79|         0|            0|            0|  0.00%|
    80|         0|            0|            0|  0.00%|
    81|         0|            0|            0|  0.00%|
    82|         0|            0|            0|  0.00%|
    83|         0|            0|            0|  0.00%|
    84|     41599|     0.170307|  4.09401e-06|  0.04%|
    85|     41599|     0.157658|  3.78994e-06|  0.03%|
    86|     41599|     0.145398|  3.49523e-06|  0.03%|
    87|     41599|      0.13439|   3.2306e-06|  0.03%|
    88|     41599|     0.177586|  4.26899e-06|  0.04%|
    89|     41599|     0.146876|  3.53075e-06|  0.03%|
    90|     41599|     0.140939|  3.38805e-06|  0.03%|
    91|     41599|     0.145718|  3.50291e-06|  0.03%|
    92|     41599|     0.165163|  3.97036e-06|  0.03%|
    93|         0|            0|            0|  0.00%|
    94|         0|            0|            0|  0.00%|
    95|         0|            0|            0|  0.00%|
    96|         0|            0|            0|  0.00%|
    97|         0|            0|            0|  0.00%|
    98|         0|            0|            0|  0.00%|
    99|         0|            0|            0|  0.00%|
   100|         0|            0|            0|  0.00%|
   101|     41599|     0.148448|  3.56854e-06|  0.03%|
   102|         0|            0|            0|  0.00%|
   103|     41599|     0.114302|  2.74771e-06|  0.02%|
   104|     41599|     0.155603|  3.74055e-06|  0.03%|
   105|     41599|     0.167003|  4.01458e-06|  0.04%|
   106|     41599|     0.147509|  3.54598e-06|  0.03%|
   107|         0|            0|            0|  0.00%|
   108|     41599|     0.139744|  3.35931e-06|  0.03%|
   109|     41599|     0.147313|  3.54126e-06|  0.03%|
   110|     41599|     0.142781|  3.43233e-06|  0.03%|
   111|     39156|     0.131564|  3.36001e-06|  0.03%|
   112|     39156|     0.148528|  3.79324e-06|  0.03%|
   113|         0|            0|            0|  0.00%|
   114|         0|            0|            0|  0.00%|
   115|         0|            0|            0|  0.00%|
   116|         0|            0|            0|  0.00%|
   117|         0|            0|            0|  0.00%|
   118|         0|            0|            0|  0.00%|
   119|         0|            0|            0|  0.00%|
   120|         0|            0|            0|  0.00%|
   121|         0|            0|            0|  0.00%|
   122|         0|            0|            0|  0.00%|
   123|         0|            0|            0|  0.00%|
   124|         0|            0|            0|  0.00%|
   125|         0|            0|            0|  0.00%|
   126|         0|            0|            0|  0.00%|
   127|         0|            0|            0|  0.00%|
   128|         0|            0|            0|  0.00%|
   129|         0|            0|            0|  0.00%|
   130|         0|            0|            0|  0.00%|
   131|         0|            0|            0|  0.00%|
   132|         0|            0|            0|  0.00%|
   133|         0|            0|            0|  0.00%|
   134|         0|            0|            0|  0.00%|
   135|         0|            0|            0|  0.00%|
   136|         0|            0|            0|  0.00%|
   137|         0|            0|            0|  0.00%|
   138|         0|            0|            0|  0.00%|
   139|         0|            0|            0|  0.00%|
   140|         0|            0|            0|  0.00%|
   141|         0|            0|            0|  0.00%|
   142|         0|            0|            0|  0.00%|
   143|     21207|    0.0621285|  2.92962e-06|  0.01%|
   144|     21207|    0.0922091|  4.34805e-06|  0.02%|
   145|     21207|    0.0841699|  3.96897e-06|  0.02%|
   146|         0|            0|            0|  0.00%|
   147|     21207|    0.0521562|  2.45939e-06|  0.01%|
   148|     21207|     0.232938|   1.0984e-05|  0.05%|
(call)|     21207|      2.00496|  9.45424e-05|  0.42%|# <frozen importlib._bootstrap>:157 _get_module_lock
   149|     21207|     0.234641|  1.10643e-05|  0.05%|
(call)|     21207|     0.859386|  4.05237e-05|  0.18%|# <frozen importlib._bootstrap>:78 acquire
   150|         0|            0|            0|  0.00%|
   151|     21207|    0.0715868|  3.37562e-06|  0.02%|
   152|     21207|      0.23592|  1.11246e-05|  0.05%|
(call)|     21207|      0.68099|  3.21116e-05|  0.14%|# <frozen importlib._bootstrap>:103 release
   153|         0|            0|            0|  0.00%|
   154|         0|            0|            0|  0.00%|
   155|         0|            0|            0|  0.00%|
   156|         0|            0|            0|  0.00%|
   157|     41599|     0.121992|  2.93257e-06|  0.03%|
   158|         0|            0|            0|  0.00%|
   159|         0|            0|            0|  0.00%|
   160|         0|            0|            0|  0.00%|
   161|         0|            0|            0|  0.00%|
   162|         0|            0|            0|  0.00%|
   163|     41599|     0.183901|  4.42081e-06|  0.04%|
   164|     41599|     0.174486|  4.19449e-06|  0.04%|
   165|     41599|     0.156851|  3.77055e-06|  0.03%|
   166|     41599|     0.262204|  6.30314e-06|  0.06%|
   167|     39156|     0.179702|  4.58939e-06|  0.04%|
   168|     39156|     0.158196|  4.04014e-06|  0.03%|
   169|         0|            0|            0|  0.00%|
   170|     41599|     0.151203|  3.63478e-06|  0.03%|
   171|     39156|     0.150248|  3.83715e-06|  0.03%|
   172|         0|            0|            0|  0.00%|
   173|         0|            0|            0|  0.00%|
   174|     39156|     0.442046|  1.12894e-05|  0.09%|
(call)|     39156|     0.986494|  2.51939e-05|  0.21%|# <frozen importlib._bootstrap>:58 __init__
   175|         0|            0|            0|  0.00%|
   176|     78312|     0.250519|  3.19899e-06|  0.05%|
   177|     39156|     0.149979|  3.83029e-06|  0.03%|
   178|     39156|     0.142191|   3.6314e-06|  0.03%|
   179|         0|            0|            0|  0.00%|
   180|         0|            0|            0|  0.00%|
   181|         0|            0|            0|  0.00%|
   182|     39156|     0.150963|  3.85543e-06|  0.03%|
   183|     39156|     0.137982|  3.52391e-06|  0.03%|
   184|         0|            0|            0|  0.00%|
   185|     39156|     0.141826|  3.62208e-06|  0.03%|
   186|         0|            0|            0|  0.00%|
   187|     39156|     0.172702|   4.4106e-06|  0.04%|
   188|         0|            0|            0|  0.00%|
   189|     41599|     0.173114|   4.1615e-06|  0.04%|
   190|         0|            0|            0|  0.00%|
   191|     41599|      0.15364|  3.69336e-06|  0.03%|
   192|         0|            0|            0|  0.00%|
   193|         0|            0|            0|  0.00%|
   194|     20392|    0.0901954|  4.42308e-06|  0.02%|
   195|         0|            0|            0|  0.00%|
   196|         0|            0|            0|  0.00%|
   197|         0|            0|            0|  0.00%|
   198|         0|            0|            0|  0.00%|
   199|         0|            0|            0|  0.00%|
   200|     20392|     0.217257|  1.06541e-05|  0.05%|
(call)|     20392|      1.61694|   7.9293e-05|  0.34%|# <frozen importlib._bootstrap>:157 _get_module_lock
   201|     20392|    0.0692513|    3.396e-06|  0.01%|
   202|     20392|     0.216725|  1.06279e-05|  0.05%|
(call)|     20392|     0.783476|  3.84207e-05|  0.16%|# <frozen importlib._bootstrap>:78 acquire
   203|         0|            0|            0|  0.00%|
   204|         0|            0|            0|  0.00%|
   205|         0|            0|            0|  0.00%|
   206|         0|            0|            0|  0.00%|
   207|         0|            0|            0|  0.00%|
   208|     20392|     0.202061|  9.90886e-06|  0.04%|
(call)|     20392|     0.613358|  3.00783e-05|  0.13%|# <frozen importlib._bootstrap>:103 release
   209|         0|            0|            0|  0.00%|
   210|         0|            0|            0|  0.00%|
   211|      4641|    0.0136244|  2.93567e-06|  0.00%|
   212|         0|            0|            0|  0.00%|
   213|         0|            0|            0|  0.00%|
   214|         0|            0|            0|  0.00%|
   215|         0|            0|            0|  0.00%|
   216|         0|            0|            0|  0.00%|
   217|         0|            0|            0|  0.00%|
   218|         0|            0|            0|  0.00%|
   219|      4641|       13.861|   0.00298663|  2.91%|
(call)|         1|  5.67436e-05|  5.67436e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/envs.py:18 <module>
(call)|      1417|      70.1754|     0.049524| 14.74%|# <frozen importlib._bootstrap>:978 _find_and_load
(call)|       825|     0.110789|  0.000134289|  0.02%|# <frozen importlib._bootstrap>:194 _lock_unlock_module
(call)|         1|   2.5034e-05|   2.5034e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/constants.py:17 <module>
(call)|         1|   0.00177336|   0.00177336|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/exceptions.py:16 <module>
(call)|        46|   0.00100231|  2.17894e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/__init__.py:1 <module>
(call)|         1|   0.00957465|   0.00957465|  0.00%|# /opt/anaconda3/lib/python3.7/uuid.py:45 <module>
(call)|         1|    0.0109468|    0.0109468|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/click/_compat.py:2 <module>
(call)|         1|   0.00014019|   0.00014019|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/click/_unicodefun.py:1 <module>
(call)|         1|  0.000119686|  0.000119686|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/click/globals.py:1 <module>
(call)|         1|    0.0385704|    0.0385704|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/click/utils.py:1 <module>
(call)|         1|    0.0452621|    0.0452621|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/click/exceptions.py:1 <module>
(call)|         1|   0.00106239|   0.00106239|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/click/parser.py:20 <module>
(call)|         1|    0.0037508|    0.0037508|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/click/types.py:1 <module>
(call)|         1|    0.0109913|    0.0109913|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/click/termui.py:1 <module>
(call)|         1|    0.0294502|    0.0294502|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/click/formatting.py:1 <module>
(call)|         1|     0.163673|     0.163673|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/click/core.py:1 <module>
(call)|         1|   0.00100017|   0.00100017|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/click/decorators.py:1 <module>
(call)|         1|     0.219795|     0.219795|  0.05%|# /opt/anaconda3/lib/python3.7/site-packages/click/__init__.py:6 <module>
(call)|         1|  6.84261e-05|  6.84261e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/urllib3/packages/ssl_match_hostname/__init__.py:1 <module>
(call)|         1|   0.00354075|   0.00354075|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/urllib3/packages/__init__.py:1 <module>
(call)|         1|    0.0354166|    0.0354166|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/urllib3/packages/six.py:21 <module>
(call)|         1|    0.0511296|    0.0511296|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/urllib3/exceptions.py:1 <module>
(call)|         1|  0.000260353|  0.000260353|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/urllib3/util/wait.py:1 <module>
(call)|         1|  4.74453e-05|  4.74453e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/urllib3/contrib/_appengine_environ.py:3 <module>
(call)|         1|   0.00974679|   0.00974679|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/urllib3/util/connection.py:1 <module>
(call)|         1|      0.01085|      0.01085|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/brotli/brotli.py:2 <module>
(call)|         1|    0.0140748|    0.0140748|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/brotli/__init__.py:3 <module>
(call)|         1|     0.019959|     0.019959|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/urllib3/util/request.py:1 <module>
(call)|         1|  0.000259638|  0.000259638|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/urllib3/util/response.py:1 <module>
(call)|         1|    0.0088017|    0.0088017|  0.00%|# /opt/anaconda3/lib/python3.7/hmac.py:4 <module>
(call)|         1|      1.07235|      1.07235|  0.23%|# /opt/anaconda3/lib/python3.7/site-packages/urllib3/util/url.py:1 <module>
(call)|         1|      1.08882|      1.08882|  0.23%|# /opt/anaconda3/lib/python3.7/site-packages/urllib3/util/ssl_.py:1 <module>
(call)|         1|  0.000342131|  0.000342131|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/urllib3/util/timeout.py:1 <module>
(call)|         1|   0.00300407|   0.00300407|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/urllib3/util/retry.py:1 <module>
(call)|         1|      1.13954|      1.13954|  0.24%|# /opt/anaconda3/lib/python3.7/site-packages/urllib3/util/__init__.py:1 <module>
(call)|         1|   0.00116992|   0.00116992|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/urllib3/_collections.py:1 <module>
(call)|         1|      1.15751|      1.15751|  0.24%|# /opt/anaconda3/lib/python3.7/site-packages/urllib3/connection.py:1 <module>
(call)|         1|  0.000787258|  0.000787258|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/urllib3/fields.py:1 <module>
(call)|         1|   0.00394392|   0.00394392|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/urllib3/filepost.py:1 <module>
(call)|         1|    0.0097127|    0.0097127|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/urllib3/request.py:1 <module>
(call)|         1|   0.00364876|   0.00364876|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/urllib3/response.py:1 <module>
(call)|         1|  0.000239134|  0.000239134|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/urllib3/util/queue.py:1 <module>
(call)|         1|      1.23998|      1.23998|  0.26%|# /opt/anaconda3/lib/python3.7/site-packages/urllib3/connectionpool.py:1 <module>
(call)|         1|   0.00586295|   0.00586295|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/urllib3/poolmanager.py:1 <module>
(call)|         1|      1.25363|      1.25363|  0.26%|# /opt/anaconda3/lib/python3.7/site-packages/urllib3/__init__.py:3 <module>
(call)|         1|  4.24385e-05|  4.24385e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/chardet/compat.py:22 <module>
(call)|         1|  0.000456572|  0.000456572|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/chardet/enums.py:5 <module>
(call)|         1|  0.000264883|  0.000264883|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/chardet/charsetprober.py:29 <module>
(call)|         1|   0.00623608|   0.00623608|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/chardet/charsetgroupprober.py:28 <module>
(call)|         1|  0.000205278|  0.000205278|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/chardet/codingstatemachine.py:28 <module>
(call)|         1|   0.00105238|   0.00105238|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/chardet/escsm.py:28 <module>
(call)|         1|   0.00688314|   0.00688314|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/chardet/escprober.py:28 <module>
(call)|         1|  0.000555992|  0.000555992|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/chardet/latin1prober.py:29 <module>
(call)|         1|   0.00472736|   0.00472736|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/chardet/mbcssm.py:28 <module>
(call)|         1|   0.00771737|   0.00771737|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/chardet/utf8prober.py:28 <module>
(call)|         1|   0.00022459|   0.00022459|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/chardet/mbcharsetprober.py:30 <module>
(call)|         1|   0.00017643|   0.00017643|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/chardet/euctwfreq.py:44 <module>
(call)|         1|   0.00012064|   0.00012064|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/chardet/euckrfreq.py:41 <module>
(call)|         1|  0.000154972|  0.000154972|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/chardet/gb2312freq.py:42 <module>
(call)|         1|  0.000169754|  0.000169754|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/chardet/big5freq.py:43 <module>
(call)|         1|  0.000159979|  0.000159979|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/chardet/jisfreq.py:44 <module>
(call)|         1|     0.016386|     0.016386|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/chardet/chardistribution.py:28 <module>
(call)|         1|   0.00122666|   0.00122666|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/chardet/jpcntx.py:31 <module>
(call)|         1|    0.0265975|    0.0265975|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/chardet/sjisprober.py:28 <module>
(call)|         1|  0.000463009|  0.000463009|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/chardet/eucjpprober.py:28 <module>
(call)|         1|  0.000294685|  0.000294685|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/chardet/gb2312prober.py:28 <module>
(call)|         1|  0.000288725|  0.000288725|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/chardet/euckrprober.py:28 <module>
(call)|         1|  0.000282288|  0.000282288|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/chardet/cp949prober.py:28 <module>
(call)|         1|  0.000352621|  0.000352621|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/chardet/big5prober.py:28 <module>
(call)|         1|  0.000279188|  0.000279188|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/chardet/euctwprober.py:28 <module>
(call)|         1|    0.0577028|    0.0577028|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/chardet/mbcsgroupprober.py:30 <module>
(call)|         1|  0.000416756|  0.000416756|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/chardet/sbcharsetprober.py:29 <module>
(call)|         1|   0.00274897|   0.00274897|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/chardet/langcyrillicmodel.py:31 <module>
(call)|         1|  0.000809193|  0.000809193|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/chardet/langgreekmodel.py:35 <module>
(call)|         1|  0.000859976|  0.000859976|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/chardet/langbulgarianmodel.py:38 <module>
(call)|         1|  0.000471354|  0.000471354|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/chardet/langthaimodel.py:37 <module>
(call)|         1|  0.000406504|  0.000406504|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/chardet/langhebrewmodel.py:38 <module>
(call)|         1|  0.000363588|  0.000363588|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/chardet/hebrewprober.py:28 <module>
(call)|         1|  0.000796318|  0.000796318|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/chardet/langturkishmodel.py:37 <module>
(call)|         1|    0.0302787|    0.0302787|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/chardet/sbcsgroupprober.py:29 <module>
(call)|         1|     0.124167|     0.124167|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/chardet/universaldetector.py:36 <module>
(call)|         1|  3.17097e-05|  3.17097e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/chardet/version.py:6 <module>
(call)|         1|      0.13294|      0.13294|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/chardet/__init__.py:19 <module>
(call)|         1|   0.00151086|   0.00151086|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/requests/exceptions.py:8 <module>
(call)|         1|  6.27041e-05|  6.27041e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/requests/__version__.py:5 <module>
(call)|         1|   0.00482988|   0.00482988|  0.00%|# /opt/anaconda3/lib/python3.7/importlib/resources.py:1 <module>
(call)|         1|   0.00771904|   0.00771904|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/certifi/core.py:8 <module>
(call)|         1|    0.0107324|    0.0107324|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/certifi/__init__.py:1 <module>
(call)|         1|    0.0158165|    0.0158165|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/requests/certs.py:14 <module>
(call)|         1|   0.00269246|   0.00269246|  0.00%|# /opt/anaconda3/lib/python3.7/numbers.py:6 <module>
(call)|         3|  0.000220299|  7.34329e-05|  0.00%|# /opt/anaconda3/lib/python3.7/abc.py:130 register
(call)|         3|   0.00402546|   0.00134182|  0.00%|# /opt/anaconda3/lib/python3.7/collections/__init__.py:316 namedtuple
(call)|         3|  0.000147581|  4.91937e-05|  0.00%|# /opt/anaconda3/lib/python3.7/abc.py:125 __new__
(call)|         1|    0.0122855|    0.0122855|  0.00%|# /opt/anaconda3/lib/python3.7/decimal.py:2 <module>
(call)|         1|  0.000108957|  0.000108957|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/simplejson/errors.py:2 <module>
(call)|         1|   6.1512e-05|   6.1512e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/simplejson/raw_json.py:2 <module>
(call)|         1|  0.000169516|  0.000169516|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/simplejson/compat.py:2 <module>
(call)|         1|   0.00279403|   0.00279403|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/simplejson/scanner.py:2 <module>
(call)|         1|   0.00925612|   0.00925612|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/simplejson/decoder.py:2 <module>
(call)|         1|    0.0119889|    0.0119889|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/simplejson/encoder.py:2 <module>
(call)|         1|    0.0495846|    0.0495846|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/simplejson/__init__.py:119 <module>
(call)|         1|        0.317|        0.317|  0.07%|# /opt/anaconda3/lib/python3.7/http/cookiejar.py:26 <module>
(call)|         1|     0.156641|     0.156641|  0.03%|# /opt/anaconda3/lib/python3.7/http/cookies.py:127 <module>
(call)|         1|     0.535491|     0.535491|  0.11%|# /opt/anaconda3/lib/python3.7/site-packages/requests/compat.py:9 <module>
(call)|         1|      0.53818|      0.53818|  0.11%|# /opt/anaconda3/lib/python3.7/site-packages/requests/_internal_utils.py:9 <module>
(call)|         1|   0.00147367|   0.00147367|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/requests/cookies.py:10 <module>
(call)|         1|  0.000420809|  0.000420809|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/requests/structures.py:8 <module>
(call)|         1|     0.584334|     0.584334|  0.12%|# /opt/anaconda3/lib/python3.7/site-packages/requests/utils.py:9 <module>
(call)|         1|  1.54972e-05|  1.54972e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/idna/package_data.py:1 <module>
(call)|         1|    0.0252802|    0.0252802|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/idna/idnadata.py:3 <module>
(call)|         1|  5.05447e-05|  5.05447e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/idna/intranges.py:6 <module>
(call)|         1|    0.0458381|    0.0458381|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/idna/core.py:1 <module>
(call)|         1|    0.0517452|    0.0517452|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/idna/__init__.py:1 <module>
(call)|         1|    0.0723336|    0.0723336|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/requests/packages.py:1 <module>
(call)|         1|   0.00322914|   0.00322914|  0.00%|# /opt/anaconda3/lib/python3.7/stringprep.py:6 <module>
(call)|         1|   0.00764847|   0.00764847|  0.00%|# /opt/anaconda3/lib/python3.7/encodings/idna.py:3 <module>
(call)|         1|  3.24249e-05|  3.24249e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/requests/hooks.py:13 <module>
(call)|         1|  0.000941277|  0.000941277|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/requests/auth.py:8 <module>
(call)|         1|   0.00731492|   0.00731492|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/requests/status_codes.py:21 <module>
(call)|         1|    0.0295238|    0.0295238|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/requests/models.py:8 <module>
(call)|         1|   0.00414562|   0.00414562|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/socks.py:1 <module>
(call)|         1|    0.0105913|    0.0105913|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/urllib3/contrib/socks.py:36 <module>
(call)|         1|    0.0154979|    0.0154979|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/requests/adapters.py:9 <module>
(call)|         1|    0.0206072|    0.0206072|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/requests/sessions.py:9 <module>
(call)|         1|    0.0238214|    0.0238214|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/requests/api.py:11 <module>
(call)|         1|      2.12764|      2.12764|  0.45%|# /opt/anaconda3/lib/python3.7/site-packages/requests/__init__.py:41 <module>
(call)|         1|  2.93255e-05|  2.93255e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/bravado/__init__.py:2 <module>
(call)|         1|   2.5034e-05|   2.5034e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/bravado_core/__init__.py:2 <module>
(call)|         1|   0.00044322|   0.00044322|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/bravado_core/docstring.py:2 <module>
(call)|         1|  0.000385046|  0.000385046|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/bravado_core/exception.py:2 <module>
(call)|         1|  3.00407e-05|  3.00407e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/dateutil/_version.py:4 <module>
(call)|         1|   0.00294971|   0.00294971|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/dateutil/__init__.py:2 <module>
(call)|         1|  0.000122547|  0.000122547|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/dateutil/_common.py:3 <module>
(call)|         1|   0.00412512|   0.00412512|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/dateutil/relativedelta.py:2 <module>
(call)|         1|  0.000830412|  0.000830412|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/dateutil/tz/_common.py:1 <module>
(call)|         1|  0.000519276|  0.000519276|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/dateutil/tz/_factories.py:1 <module>
(call)|         1|   0.00114822|   0.00114822|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/dateutil/tz/win.py:8 <module>
(call)|         1|    0.0203478|    0.0203478|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/dateutil/tz/tz.py:9 <module>
(call)|         1|    0.0240483|    0.0240483|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/dateutil/tz/__init__.py:2 <module>
(call)|         1|    0.0439298|    0.0439298|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/dateutil/parser/_parser.py:30 <module>
(call)|         1|   0.00722575|   0.00722575|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/dateutil/parser/isoparser.py:9 <module>
(call)|         1|    0.0585637|    0.0585637|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/dateutil/parser/__init__.py:2 <module>
(call)|         1|  0.000281334|  0.000281334|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pytz/exceptions.py:3 <module>
(call)|         1|  0.000994921|  0.000994921|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pytz/lazy.py:1 <module>
(call)|         1|   0.00109577|   0.00109577|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pytz/tzinfo.py:1 <module>
(call)|         1|  0.000221014|  0.000221014|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pytz/tzfile.py:4 <module>
(call)|         1|    0.0488615|    0.0488615|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/pytz/__init__.py:9 <module>
(call)|         1|  0.000128984|  0.000128984|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/bravado_core/_compat.py:2 <module>
(call)|         1|   0.00375223|   0.00375223|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/bravado_core/schema.py:2 <module>
(call)|         1|     0.155974|     0.155974|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/bravado_core/formatter.py:5 <module>
(call)|         1|  2.19345e-05|  2.19345e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/bravado_core/content_type.py:2 <module>
(call)|         1|    0.0218644|    0.0218644|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/bravado_core/util.py:2 <module>
(call)|         1|    0.0278068|    0.0278068|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/bravado_core/_decorators.py:2 <module>
(call)|         1|  0.000210524|  0.000210524|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/yaml/error.py:2 <module>
(call)|         1|   0.00121903|   0.00121903|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/yaml/tokens.py:2 <module>
(call)|         1|  0.000745296|  0.000745296|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/yaml/events.py:4 <module>
(call)|         1|  0.000270367|  0.000270367|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/yaml/nodes.py:2 <module>
(call)|         1|      1.29936|      1.29936|  0.27%|# /opt/anaconda3/lib/python3.7/site-packages/yaml/reader.py:18 <module>
(call)|         1|   0.00348592|   0.00348592|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/yaml/scanner.py:27 <module>
(call)|         1|   0.00115609|   0.00115609|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/yaml/parser.py:62 <module>
(call)|         1|   0.00042367|   0.00042367|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/yaml/composer.py:2 <module>
(call)|         1|    0.0887868|    0.0887868|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/yaml/constructor.py:3 <module>
(call)|         1|     0.235004|     0.235004|  0.05%|# /opt/anaconda3/lib/python3.7/site-packages/yaml/resolver.py:2 <module>
(call)|         1|      1.64736|      1.64736|  0.35%|# /opt/anaconda3/lib/python3.7/site-packages/yaml/loader.py:2 <module>
(call)|         1|   0.00313783|   0.00313783|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/yaml/emitter.py:9 <module>
(call)|         1|  0.000419617|  0.000419617|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/yaml/serializer.py:2 <module>
(call)|         1|   0.00249839|   0.00249839|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/yaml/representer.py:2 <module>
(call)|         1|    0.0154681|    0.0154681|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/yaml/dumper.py:2 <module>
(call)|       173|   0.00492311|  2.84573e-05|  0.00%|# <frozen importlib._bootstrap>:416 parent
(call)|         1|   0.00564098|   0.00564098|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/yaml/cyaml.py:3 <module>
(call)|         1|      1.69208|      1.69208|  0.36%|# /opt/anaconda3/lib/python3.7/site-packages/yaml/__init__.py:2 <module>
(call)|         1|  1.69277e-05|  1.69277e-05|  0.00%|# /opt/anaconda3/lib/python3.7/xml/parsers/__init__.py:8 <module>
(call)|         1|    0.0035944|    0.0035944|  0.00%|# /opt/anaconda3/lib/python3.7/xml/parsers/expat.py:1 <module>
(call)|         1|    0.0579236|    0.0579236|  0.01%|# /opt/anaconda3/lib/python3.7/plistlib.py:47 <module>
(call)|         1|  0.000225067|  0.000225067|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pkg_resources/extern/__init__.py:1 <module>
(call)|         1|    0.0316796|    0.0316796|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/pkg_resources/_vendor/six.py:1 <module>
(call)|         1|   0.00124574|   0.00124574|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pkg_resources/_vendor/appdirs.py:9 <module>
(call)|         1|  0.000115633|  0.000115633|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pkg_resources/_vendor/packaging/__about__.py:4 <module>
(call)|         2|    0.0254183|    0.0127091|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/pkg_resources/_vendor/packaging/__init__.py:4 <module>
(call)|         1|  0.000277519|  0.000277519|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pkg_resources/_vendor/packaging/_structures.py:4 <module>
(call)|         1|     0.182738|     0.182738|  0.04%|# /opt/anaconda3/lib/python3.7/site-packages/pkg_resources/_vendor/packaging/version.py:4 <module>
(call)|         1|   8.7738e-05|   8.7738e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pkg_resources/_vendor/packaging/_compat.py:4 <module>
(call)|         1|     0.604667|     0.604667|  0.13%|# /opt/anaconda3/lib/python3.7/site-packages/pkg_resources/_vendor/packaging/specifiers.py:4 <module>
(call)|         1|     0.683199|     0.683199|  0.14%|# /opt/anaconda3/lib/python3.7/site-packages/pkg_resources/_vendor/pyparsing.py:75 <module>
(call)|         1|    0.0338359|    0.0338359|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/pkg_resources/_vendor/packaging/markers.py:4 <module>
(call)|         1|      1.40914|      1.40914|  0.30%|# /opt/anaconda3/lib/python3.7/site-packages/pkg_resources/_vendor/packaging/requirements.py:4 <module>
(call)|         1|      6.80663|      6.80663|  1.43%|# /opt/anaconda3/lib/python3.7/site-packages/pkg_resources/__init__.py:16 <module>
(call)|         1|      8.51252|      8.51252|  1.79%|# /opt/anaconda3/lib/python3.7/site-packages/swagger_spec_validator/common.py:2 <module>
(call)|         1|  6.67572e-05|  6.67572e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/attr/_config.py:1 <module>
(call)|         1|  0.000919104|  0.000919104|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/attr/_compat.py:1 <module>
(call)|         1|  0.000417709|  0.000417709|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/attr/exceptions.py:1 <module>
(call)|         1|    0.0346692|    0.0346692|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/attr/_make.py:1 <module>
(call)|         1|    0.0378945|    0.0378945|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/attr/converters.py:3 <module>
(call)|         1|  0.000277758|  0.000277758|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/attr/filters.py:3 <module>
(call)|         1|    0.0440958|    0.0440958|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/attr/validators.py:3 <module>
(call)|         1|  0.000518322|  0.000518322|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/attr/_funcs.py:1 <module>
(call)|         1|    0.0071547|    0.0071547|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/attr/_version_info.py:1 <module>
(call)|         1|     0.105088|     0.105088|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/attr/__init__.py:1 <module>
(call)|         1|  0.000268936|  0.000268936|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/jsonschema/compat.py:5 <module>
(call)|         1|   0.00354314|   0.00354314|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/jsonschema/_utils.py:1 <module>
(call)|         1|     0.122989|     0.122989|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/jsonschema/exceptions.py:3 <module>
(call)|         1|      1.32398|      1.32398|  0.28%|# /opt/anaconda3/lib/python3.7/site-packages/regex/_regex_core.py:16 <module>
(call)|         1|        1.338|        1.338|  0.28%|# /opt/anaconda3/lib/python3.7/site-packages/regex/regex.py:231 <module>
(call)|         1|      1.34157|      1.34157|  0.28%|# /opt/anaconda3/lib/python3.7/site-packages/regex/__init__.py:1 <module>
(call)|         1|  0.000372171|  0.000372171|  0.00%|# /opt/anaconda3/lib/python3.7/encodings/raw_unicode_escape.py:8 <module>
(call)|         1|      1.47419|      1.47419|  0.31%|# /opt/anaconda3/lib/python3.7/site-packages/rfc3987.py:125 <module>
(call)|         1|    0.0314829|    0.0314829|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/strict_rfc3339.py:20 <module>
(call)|         1|    0.0229042|    0.0229042|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/webcolors.py:9 <module>
(call)|         1|    0.0128706|    0.0128706|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/jsonpointer.py:33 <module>
(call)|         1|  0.000523329|  0.000523329|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/uritemplate/orderedset.py:3 <module>
(call)|         1|  0.000542879|  0.000542879|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/uritemplate/variable.py:16 <module>
(call)|         1|    0.0084343|    0.0084343|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/uritemplate/template.py:16 <module>
(call)|         1|    0.0147526|    0.0147526|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/uritemplate/api.py:8 <module>
(call)|         1|    0.0179398|    0.0179398|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/uritemplate/__init__.py:13 <module>
(call)|         1|      1.61377|      1.61377|  0.34%|# /opt/anaconda3/lib/python3.7/site-packages/jsonschema/_format.py:1 <module>
(call)|         1|  0.000140429|  0.000140429|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pyrsistent/_compat.py:1 <module>
(call)|         1|  0.000250578|  0.000250578|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pyrsistent/_transformations.py:1 <module>
(call)|         1|    0.0103862|    0.0103862|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pyrsistent/_pvector.py:1 <module>
(call)|         1|    0.0185118|    0.0185118|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pyrsistent/_pmap.py:1 <module>
(call)|         1|   0.00115371|   0.00115371|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pyrsistent/_pset.py:1 <module>
(call)|         1|  0.000947714|  0.000947714|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pyrsistent/_pbag.py:1 <module>
(call)|         1|   0.00159597|   0.00159597|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pyrsistent/_plist.py:1 <module>
(call)|         1|   0.00116515|   0.00116515|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pyrsistent/_pdeque.py:1 <module>
(call)|         1|   0.00566792|   0.00566792|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pyrsistent/_checked_types.py:1 <module>
(call)|         1|  0.000932693|  0.000932693|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pyrsistent/_field_common.py:1 <module>
(call)|         1|   0.00120425|   0.00120425|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pyrsistent/_precord.py:1 <module>
(call)|         1|   0.00135398|   0.00135398|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pyrsistent/_pclass.py:1 <module>
(call)|         1|  3.74317e-05|  3.74317e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pyrsistent/_immutable.py:1 <module>
(call)|         1|   0.00016737|   0.00016737|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pyrsistent/_helpers.py:1 <module>
(call)|         1|  0.000174999|  0.000174999|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pyrsistent/_toolz.py:40 <module>
(call)|         1|     0.067255|     0.067255|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/pyrsistent/__init__.py:3 <module>
(call)|         1|    0.0802836|    0.0802836|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/jsonschema/_types.py:1 <module>
(call)|         1|   0.00036025|   0.00036025|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/jsonschema/_legacy_validators.py:1 <module>
(call)|         1|  0.000736713|  0.000736713|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/jsonschema/_validators.py:1 <module>
(call)|         1|    0.0184181|    0.0184181|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/jsonschema/validators.py:3 <module>
(call)|         1|   0.00512743|   0.00512743|  0.00%|# /opt/anaconda3/lib/python3.7/csv.py:4 <module>
(call)|         1|  0.000672817|  0.000672817|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/zipp.py:1 <module>
(call)|         1|     0.180367|     0.180367|  0.04%|# /opt/anaconda3/lib/python3.7/configparser.py:139 <module>
(call)|         1|     0.185215|     0.185215|  0.04%|# /opt/anaconda3/lib/python3.7/site-packages/importlib_metadata/_compat.py:1 <module>
(call)|         1|      0.30005|      0.30005|  0.06%|# /opt/anaconda3/lib/python3.7/site-packages/importlib_metadata/__init__.py:1 <module>
(call)|         1|      2.20913|      2.20913|  0.46%|# /opt/anaconda3/lib/python3.7/site-packages/jsonschema/__init__.py:9 <module>
(call)|         1|   0.00131202|   0.00131202|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/swagger_spec_validator/ref_validators.py:2 <module>
(call)|         1|      2.22271|      2.22271|  0.47%|# /opt/anaconda3/lib/python3.7/site-packages/swagger_spec_validator/validator12.py:10 <module>
(call)|         1|   0.00283766|   0.00283766|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/swagger_spec_validator/validator20.py:2 <module>
(call)|         1|      2.23632|      2.23632|  0.47%|# /opt/anaconda3/lib/python3.7/site-packages/swagger_spec_validator/util.py:2 <module>
(call)|         1|      10.7901|      10.7901|  2.27%|# /opt/anaconda3/lib/python3.7/site-packages/swagger_spec_validator/__init__.py:2 <module>
(call)|         1|      10.8011|      10.8011|  2.27%|# /opt/anaconda3/lib/python3.7/site-packages/bravado_core/model.py:2 <module>
(call)|         1|      10.8393|      10.8393|  2.28%|# /opt/anaconda3/lib/python3.7/site-packages/bravado_core/marshal.py:2 <module>
(call)|         1|   0.00253606|   0.00253606|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/bravado_core/unmarshal.py:7 <module>
(call)|         1|   0.00191283|   0.00191283|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/bravado_core/swagger20_validator.py:2 <module>
(call)|         1|    0.0069387|    0.0069387|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/bravado_core/validate.py:6 <module>
(call)|         1|      10.9562|      10.9562|  2.30%|# /opt/anaconda3/lib/python3.7/site-packages/bravado_core/param.py:2 <module>
(call)|         1|    0.0152011|    0.0152011|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/proxytypes.py:4 <module>
(call)|         1|     0.051266|     0.051266|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/jsonref.py:1 <module>
(call)|         1|  0.000523806|  0.000523806|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/bravado_core/security_requirement.py:2 <module>
(call)|         1|   0.00609469|   0.00609469|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/bravado_core/operation.py:2 <module>
(call)|         1|    0.0109363|    0.0109363|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/bravado_core/resource.py:2 <module>
(call)|         1|  0.000605583|  0.000605583|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/bravado_core/security_definition.py:2 <module>
(call)|         1|   0.00228524|   0.00228524|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/bravado_core/spec_flattening.py:2 <module>
(call)|         1|     0.115971|     0.115971|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/bravado_core/spec.py:2 <module>
(call)|         1|  1.74046e-05|  1.74046e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/msgpack/_version.py:1 <module>
(call)|         1|  0.000452757|  0.000452757|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/msgpack/exceptions.py:1 <module>
(call)|       167|   0.00431037|  2.58106e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
(call)|         1|    0.0552685|    0.0552685|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/msgpack/__init__.py:2 <module>
(call)|         1|    0.0746987|    0.0746987|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/bravado_core/response.py:2 <module>
(call)|         1|  5.72205e-05|  5.72205e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/monotonic.py:40 <module>
(call)|         1|   0.00702643|   0.00702643|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/bravado/response.py:2 <module>
(call)|         1|    0.0946648|    0.0946648|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/bravado/config.py:2 <module>
(call)|         1|  0.000230074|  0.000230074|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/bravado/docstring_property.py:12 <module>
(call)|         1|  0.000106812|  0.000106812|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/bravado/_equality_util.py:2 <module>
(call)|         1|   0.00915766|   0.00915766|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/bravado/exception.py:2 <module>
(call)|         1|    0.0174844|    0.0174844|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/bravado/http_future.py:2 <module>
(call)|         1|    0.0211937|    0.0211937|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/bravado/http_client.py:2 <module>
(call)|         1|    0.0327153|    0.0327153|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/bravado/requests_client.py:2 <module>
(call)|         1|   0.00114083|   0.00114083|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/bravado/swagger_model.py:2 <module>
(call)|         1|  4.36306e-05|  4.36306e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/bravado/warning.py:2 <module>
(call)|         1|       11.543|       11.543|  2.42%|# /opt/anaconda3/lib/python3.7/site-packages/bravado/client.py:45 <module>
(call)|         1|  0.000190258|  0.000190258|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/packaging/__about__.py:4 <module>
(call)|         1|  0.000378132|  0.000378132|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/packaging/_structures.py:4 <module>
(call)|         1|  4.05312e-05|  4.05312e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/packaging/_typing.py:27 <module>
(call)|         1|    0.0452943|    0.0452943|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/packaging/version.py:4 <module>
(call)|         1|   0.00141883|   0.00141883|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/api_exceptions.py:16 <module>
(call)|         1|   0.00153208|   0.00153208|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/backend.py:17 <module>
(call)|         1|  5.81741e-05|  5.81741e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/checkpoint.py:18 <module>
(call)|         1|  0.000137806|  0.000137806|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/backends/client_config.py:18 <module>
(call)|         1|  0.000341654|  0.000341654|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/_globals.py:17 <module>
(call)|         1|  0.000322819|  0.000322819|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/__config__.py:3 <module>
(call)|         1|  3.88622e-05|  3.88622e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/version.py:5 <module>
(call)|         1|     0.730773|     0.730773|  0.15%|# /opt/anaconda3/lib/python3.7/site-packages/mkl/__init__.py:26 <module>
(call)|         1|     0.738703|     0.738703|  0.16%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/_distributor_init.py:10 <module>
(call)|         1|  0.000407219|  0.000407219|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/compat/_inspect.py:7 <module>
(call)|         1|   0.00516438|   0.00516438|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/compat/py3k.py:12 <module>
(call)|         1|    0.0484939|    0.0484939|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/compat/__init__.py:10 <module>
(call)|         1|     0.166576|     0.166576|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/overrides.py:1 <module>
(call)|         1|     0.182865|     0.182865|  0.04%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/multiarray.py:7 <module>
(call)|         1|  0.000569582|  0.000569582|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/umath.py:7 <module>
(call)|         1|   0.00095582|   0.00095582|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/_string_helpers.py:5 <module>
(call)|         1|  0.000510216|  0.000510216|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/_dtype.py:5 <module>
(call)|         1|    0.0143201|    0.0143201|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/_type_aliases.py:24 <module>
(call)|         1|    0.0267868|    0.0267868|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/numerictypes.py:81 <module>
(call)|         1|  0.000548601|  0.000548601|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/_asarray.py:5 <module>
(call)|         1|    0.0016098|    0.0016098|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/_exceptions.py:7 <module>
(call)|         1|   0.00785208|   0.00785208|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/_methods.py:5 <module>
(call)|         1|    0.0543272|    0.0543272|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/fromnumeric.py:3 <module>
(call)|         1|     0.110184|     0.110184|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/shape_base.py:1 <module>
(call)|         1|   0.00117803|   0.00117803|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/_ufunc_config.py:5 <module>
(call)|         1|    0.0120764|    0.0120764|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/arrayprint.py:5 <module>
(call)|         1|     0.215821|     0.215821|  0.05%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/numeric.py:1 <module>
(call)|         1|    0.0472448|    0.0472448|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/defchararray.py:17 <module>
(call)|         1|   0.00278115|   0.00278115|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/records.py:35 <module>
(call)|         1|  0.000699282|  0.000699282|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/memmap.py:1 <module>
(call)|         1|   0.00371003|   0.00371003|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/function_base.py:1 <module>
(call)|         1|  0.000363827|  0.000363827|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/machar.py:7 <module>
(call)|         1|   0.00263357|   0.00263357|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/getlimits.py:3 <module>
(call)|         1|   0.00239491|   0.00239491|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/einsumfunc.py:4 <module>
(call)|         1|    0.0816915|    0.0816915|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/_add_newdocs.py:10 <module>
(call)|         1|  0.000255585|  0.000255585|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/_dtype_ctypes.py:24 <module>
(call)|         1|    0.0391572|    0.0391572|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/_internal.py:6 <module>
(call)|         1|  0.000119925|  0.000119925|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/_pytesttester.py:29 <module>
(call)|         1|     0.899865|     0.899865|  0.19%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/__init__.py:7 <module>
(call)|         1|   0.00191379|   0.00191379|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/mixins.py:1 <module>
(call)|         1|   0.00216866|   0.00216866|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/ufunclike.py:5 <module>
(call)|         1|     0.015379|     0.015379|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/type_check.py:3 <module>
(call)|         1|    0.0511966|    0.0511966|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/scimath.py:17 <module>
(call)|         1|   0.00897622|   0.00897622|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/twodim_base.py:3 <module>
(call)|         1|     0.121316|     0.121316|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/linalg/linalg.py:10 <module>
(call)|         1|     0.166678|     0.166678|  0.04%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/linalg/__init__.py:71 <module>
(call)|         1|     0.172831|     0.172831|  0.04%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/matrixlib/defmatrix.py:1 <module>
(call)|         1|     0.190344|     0.190344|  0.04%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/matrixlib/__init__.py:3 <module>
(call)|         1|   0.00343943|   0.00343943|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/histograms.py:3 <module>
(call)|         1|    0.0509546|    0.0509546|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/function_base.py:1 <module>
(call)|         1|   0.00189972|   0.00189972|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/stride_tricks.py:7 <module>
(call)|         1|     0.307539|     0.307539|  0.06%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/index_tricks.py:1 <module>
(call)|         1|    0.0134835|    0.0134835|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/nanfunctions.py:22 <module>
(call)|         1|    0.0122268|    0.0122268|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/shape_base.py:1 <module>
(call)|         1|    0.0167892|    0.0167892|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/polynomial.py:4 <module>
(call)|         1|    0.0152698|    0.0152698|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/utils.py:1 <module>
(call)|         1|   0.00681925|   0.00681925|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/arraysetops.py:27 <module>
(call)|         1|  0.000843287|  0.000843287|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/format.py:163 <module>
(call)|         1|  0.000859737|  0.000859737|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/_datasource.py:36 <module>
(call)|         1|   0.00183153|   0.00183153|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/_iotools.py:3 <module>
(call)|         1|    0.0260932|    0.0260932|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/npyio.py:1 <module>
(call)|         1|    0.0614879|    0.0614879|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/financial.py:12 <module>
(call)|         1|  0.000416994|  0.000416994|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/arrayterator.py:9 <module>
(call)|         1|   0.00134873|   0.00134873|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/arraypad.py:5 <module>
(call)|         1|   0.00022006|   0.00022006|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/_version.py:7 <module>
(call)|         1|     0.631422|     0.631422|  0.13%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/__init__.py:13 <module>
(call)|         1|    0.0155315|    0.0155315|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/fft/_pocketfft.py:29 <module>
(call)|         1|   0.00209641|   0.00209641|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/fft/helper.py:4 <module>
(call)|         1|    0.0259874|    0.0259874|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/fft/__init__.py:192 <module>
(call)|         1|  0.000927448|  0.000927448|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/polynomial/polyutils.py:45 <module>
(call)|         1|    0.0038476|    0.0038476|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/polynomial/_polybase.py:8 <module>
(call)|         1|    0.0166252|    0.0166252|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/polynomial/polynomial.py:74 <module>
(call)|         1|   0.00237346|   0.00237346|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/polynomial/chebyshev.py:109 <module>
(call)|         1|   0.00175858|   0.00175858|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/polynomial/legendre.py:81 <module>
(call)|         1|   0.00168824|   0.00168824|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/polynomial/hermite.py:77 <module>
(call)|         1|   0.00165653|   0.00165653|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/polynomial/hermite_e.py:77 <module>
(call)|         1|   0.00172448|   0.00172448|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/polynomial/laguerre.py:77 <module>
(call)|         1|    0.0700896|    0.0700896|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/polynomial/__init__.py:15 <module>
(call)|         8|   0.00103569|  0.000129461|  0.00%|# <string>_16:1 <module>
(call)|        16|   0.00053668|  3.35425e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/getlimits.py:498 __init__
(call)|        12|  0.000262737|  2.18948e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/getlimits.py:522 max
(call)|         1|  0.000514507|  0.000514507|  0.00%|# /opt/anaconda3/lib/python3.7/secrets.py:7 <module>
(call)|         9|    0.0479453|   0.00532725|  0.01%|# /opt/anaconda3/lib/python3.7/re.py:232 compile
(call)|         2|  2.52724e-05|  1.26362e-05|  0.00%|# /opt/anaconda3/lib/python3.7/abc.py:7 abstractmethod
(call)|         1|  2.12193e-05|  2.12193e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/_ufunc_config.py:429 __init__
(call)|         1|  0.000195026|  0.000195026|  0.00%|# /opt/anaconda3/lib/python3.7/contextlib.py:70 __call__
(call)|         1|  6.79493e-05|  6.79493e-05|  0.00%|# /opt/anaconda3/lib/python3.7/abc.py:137 __instancecheck__
(call)|         1|  0.000167608|  0.000167608|  0.00%|# /opt/anaconda3/lib/python3.7/random.py:681 getrandbits
(call)|         1|  7.43866e-05|  7.43866e-05|  0.00%|# <__array_function__ internals>_0:2 concatenate
(call)|         1|  0.000501394|  0.000501394|  0.00%|# /opt/anaconda3/lib/python3.7/contextlib.py:71 inner
(call)|         1|     0.255025|     0.255025|  0.05%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/random/_pickle.py:1 <module>
(call)|         1|     0.260417|     0.260417|  0.05%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/random/__init__.py:124 <module>
(call)|         1|   0.00564075|   0.00564075|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/ctypeslib.py:51 <module>
(call)|         1|     0.140645|     0.140645|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/ma/core.py:21 <module>
(call)|         1|   0.00833106|   0.00833106|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/ma/extras.py:10 <module>
(call)|         1|       0.1621|       0.1621|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/ma/__init__.py:41 <module>
(call)|         1|      4.45926|      4.45926|  0.94%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/__init__.py:106 <module>
(call)|         1|  0.000273228|  0.000273228|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/compat/__init__.py:9 <module>
(call)|         1|  3.26633e-05|  3.26633e-05|  0.00%|# /opt/anaconda3/lib/python3.7/distutils/__init__.py:9 <module>
(call)|         1|    0.0273516|    0.0273516|  0.01%|# /opt/anaconda3/lib/python3.7/distutils/version.py:27 <module>
(call)|         1|    0.0403256|    0.0403256|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/compat/numpy/__init__.py:1 <module>
(call)|         1|   0.00586081|   0.00586081|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/_config/config.py:49 <module>
(call)|         1|   0.00479889|   0.00479889|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/_config/dates.py:3 <module>
(call)|         1|  0.000859976|  0.000859976|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/_config/display.py:3 <module>
(call)|         1|    0.0249028|    0.0249028|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/_config/__init__.py:7 <module>
(call)|         1|  0.000360966|  0.000360966|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/_config/localization.py:5 <module>
(call)|         2|   0.00030756|   0.00015378|  0.00%|# /opt/anaconda3/lib/python3.7/locale.py:575 getlocale
(call)|        14|  0.000280619|  2.00442e-05|  0.00%|# /opt/anaconda3/lib/python3.7/calendar.py:77 __getitem__
(call)|        26|  0.000472069|  1.81565e-05|  0.00%|# /opt/anaconda3/lib/python3.7/calendar.py:58 __getitem__
(call)|       633|   0.00598097|  9.44861e-06|  0.00%|# /opt/anaconda3/lib/python3.7/re.py:252 escape
(call)|         1|     0.334134|     0.334134|  0.07%|# /opt/anaconda3/lib/python3.7/site-packages/pytz/lazy.py:97 _lazy
(call)|         6|    0.0012958|  0.000215967|  0.00%|# /opt/anaconda3/lib/python3.7/re.py:307 _subx
(call)|         5|  0.000161886|  3.23772e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/getlimits.py:509 min
(call)|         1|      0.56523|      0.56523|  0.12%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/_libs/tslibs/__init__.py:3 <module>
(call)|         1|     0.575034|     0.575034|  0.12%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/_libs/__init__.py:3 <module>
(call)|         1|    0.0770237|    0.0770237|  0.02%|# /opt/anaconda3/lib/python3.7/fractions.py:4 <module>
(call)|         1|    0.0218272|    0.0218272|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/config_init.py:11 <module>
(call)|         1|   0.00184321|   0.00184321|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/dtypes/generic.py:1 <module>
(call)|         1|  0.000673532|  0.000673532|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/errors/__init__.py:5 <module>
(call)|         1|    0.0074923|    0.0074923|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/dtypes/base.py:1 <module>
(call)|         1|   0.00151014|   0.00151014|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/dtypes/inference.py:1 <module>
(call)|         1|    0.0773504|    0.0773504|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/dtypes/dtypes.py:1 <module>
(call)|         1|   0.00507522|   0.00507522|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/_typing.py:1 <module>
(call)|         1|     0.107928|     0.107928|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/dtypes/common.py:1 <module>
(call)|         1|     0.122373|     0.122373|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/arrays/array_.py:1 <module>
(call)|         1|    0.0130966|    0.0130966|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/util/_decorators.py:1 <module>
(call)|         1|  0.000822067|  0.000822067|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/dtypes/missing.py:3 <module>
(call)|         1|   0.00729394|   0.00729394|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/dtypes/cast.py:1 <module>
(call)|         1|    0.0220668|    0.0220668|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/util/hashing.py:3 <module>
(call)|         1|    0.0485525|    0.0485525|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/util/__init__.py:1 <module>
(call)|         1|  0.000152588|  0.000152588|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/util/_validators.py:4 <module>
(call)|         1|     0.143287|     0.143287|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/compat/numpy/function.py:19 <module>
(call)|         1|   0.00320816|   0.00320816|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/common.py:5 <module>
(call)|         1|  0.000105858|  0.000105858|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/ops/roperator.py:4 <module>
(call)|         1|     0.004071|     0.004071|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/ops/missing.py:23 <module>
(call)|         1|   0.00082612|   0.00082612|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/ops/docstrings.py:3 <module>
(call)|         1|    0.0317066|    0.0317066|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/ops/__init__.py:5 <module>
(call)|         1|  0.000160694|  0.000160694|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/indexers.py:3 <module>
(call)|         1|     0.015002|     0.015002|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/algorithms.py:4 <module>
(call)|         1|    0.0223844|    0.0223844|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/sorting.py:1 <module>
(call)|         1|     0.219061|     0.219061|  0.05%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/arrays/base.py:7 <module>
(call)|         1|   0.00369763|   0.00369763|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/accessor.py:6 <module>
(call)|         1|  0.000354528|  0.000354528|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/compat/_optional.py:1 <module>
(call)|         1|  0.000340462|  0.000340462|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/bottleneck/slow/reduce.py:1 <module>
(call)|         1|  3.14713e-05|  3.14713e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/bottleneck/slow/nonreduce.py:1 <module>
(call)|         1|  0.000169516|  0.000169516|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/bottleneck/slow/nonreduce_axis.py:1 <module>
(call)|         1|  0.000272989|  0.000272989|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/bottleneck/slow/move.py:1 <module>
(call)|         1|    0.0140762|    0.0140762|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/bottleneck/slow/__init__.py:3 <module>
(call)|         1|  4.29153e-05|  4.29153e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/bottleneck/benchmark/autotimeit.py:1 <module>
(call)|         1|   0.00374866|   0.00374866|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/bottleneck/benchmark/bench.py:1 <module>
(call)|         1|  0.000355721|  0.000355721|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/bottleneck/benchmark/bench_detailed.py:1 <module>
(call)|         1|  0.000276089|  0.000276089|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/bottleneck/tests/util.py:1 <module>
(call)|         1|  0.000154257|  0.000154257|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/bottleneck/_pytesttester.py:5 <module>
(call)|         1|  3.00407e-05|  3.00407e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/bottleneck/_version.py:7 <module>
(call)|         1|     0.168403|     0.168403|  0.04%|# /opt/anaconda3/lib/python3.7/site-packages/bottleneck/__init__.py:1 <module>
(call)|         1|     0.238819|     0.238819|  0.05%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/nanops.py:1 <module>
(call)|         1|     0.257646|     0.257646|  0.05%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/base.py:3 <module>
(call)|         1|   0.00067687|   0.00067687|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/missing.py:3 <module>
(call)|         1|  8.32081e-05|  8.32081e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/io/formats/console.py:3 <module>
(call)|         1|     0.307683|     0.307683|  0.06%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/arrays/categorical.py:1 <module>
(call)|         1|  5.24521e-05|  5.24521e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/dateutil/easter.py:5 <module>
(call)|         1|   0.00753307|   0.00753307|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/tools/datetimes.py:1 <module>
(call)|         1|    0.0526378|    0.0526378|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/tseries/offsets.py:1 <module>
(call)|         1|    0.0600364|    0.0600364|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/tseries/frequencies.py:1 <module>
(call)|         1|     0.133617|     0.133617|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/arrays/datetimelike.py:1 <module>
(call)|         1|  0.000905752|  0.000905752|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/arrays/_ranges.py:4 <module>
(call)|         1|     0.153214|     0.153214|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/arrays/datetimes.py:1 <module>
(call)|         1|  0.000345945|  0.000345945|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/tools/numeric.py:1 <module>
(call)|         1|    0.0100627|    0.0100627|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/arrays/integer.py:1 <module>
(call)|         1|  0.000557184|  0.000557184|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/dtypes/concat.py:3 <module>
(call)|         1|  0.000472546|  0.000472546|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/io/formats/printing.py:3 <module>
(call)|         1|   0.00473118|   0.00473118|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/indexes/frozen.py:9 <module>
(call)|         1|    0.0453684|    0.0453684|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/strings.py:1 <module>
(call)|         1|     0.149391|     0.149391|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/indexes/base.py:1 <module>
(call)|         1|      0.17192|      0.17192|  0.04%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/arrays/interval.py:1 <module>
(call)|         1|   0.00495124|   0.00495124|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/arrays/numpy_.py:1 <module>
(call)|         1|    0.0114729|    0.0114729|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/arrays/period.py:1 <module>
(call)|         1|    0.0203815|    0.0203815|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/arrays/sparse.py:3 <module>
(call)|         1|   0.00549841|   0.00549841|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/arrays/timedeltas.py:1 <module>
(call)|         1|      1.07292|      1.07292|  0.23%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/arrays/__init__.py:1 <module>
(call)|         1|    0.0144796|    0.0144796|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/indexes/category.py:1 <module>
(call)|         1|  0.000508785|  0.000508785|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/tools/timedeltas.py:3 <module>
(call)|         1|    0.0114748|    0.0114748|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/indexes/datetimelike.py:3 <module>
(call)|         1|    0.0169365|    0.0169365|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/indexes/numeric.py:1 <module>
(call)|         1|    0.0483668|    0.0483668|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/indexes/datetimes.py:1 <module>
(call)|         1|  0.000193119|  0.000193119|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/util/_exceptions.py:1 <module>
(call)|         1|    0.0315163|    0.0315163|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/indexes/multi.py:1 <module>
(call)|         1|   0.00805497|   0.00805497|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/indexes/timedeltas.py:1 <module>
(call)|         1|    0.0855997|    0.0855997|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/indexes/interval.py:1 <module>
(call)|         1|    0.0123012|    0.0123012|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/indexes/period.py:1 <module>
(call)|         1|    0.0074048|    0.0074048|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/indexes/range.py:1 <module>
(call)|         1|     0.192157|     0.192157|  0.04%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/indexes/api.py:1 <module>
(call)|         1|     0.195598|     0.195598|  0.04%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/index.py:1 <module>
(call)|         1|    0.0111217|    0.0111217|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/indexing.py:1 <module>
(call)|         1|  7.08103e-05|  7.08103e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/internals/arrays.py:3 <module>
(call)|         1|    0.0347059|    0.0347059|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/internals/blocks.py:1 <module>
(call)|         1|   0.00107408|   0.00107408|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/internals/concat.py:2 <module>
(call)|         1|    0.0212011|    0.0212011|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/internals/managers.py:1 <module>
(call)|         1|    0.0673633|    0.0673633|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/internals/__init__.py:1 <module>
(call)|         1|   0.00145602|   0.00145602|  0.00%|# /opt/anaconda3/lib/python3.7/gzip.py:4 <module>
(call)|         1|    0.0106716|    0.0106716|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/io/common.py:1 <module>
(call)|         1|    0.0235198|    0.0235198|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/io/formats/format.py:4 <module>
(call)|         1|     0.420509|     0.420509|  0.09%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/generic.py:1 <module>
(call)|         1|   0.00200963|   0.00200963|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/internals/construction.py:4 <module>
(call)|         1|   0.00548363|   0.00548363|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/indexes/accessors.py:3 <module>
(call)|         1|  0.000679493|  0.000679493|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/cbook/deprecation.py:1 <module>
(call)|         1|    0.0458362|    0.0458362|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/cbook/__init__.py:7 <module>
(call)|         1|     0.630673|     0.630673|  0.13%|# /opt/anaconda3/lib/python3.7/site-packages/pyparsing.py:96 <module>
(call)|         1|     0.738457|     0.738457|  0.16%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/fontconfig_pattern.py:6 <module>
(call)|         1|   0.00251508|   0.00251508|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/docstring.py:1 <module>
(call)|         1|    0.0433629|    0.0433629|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/_color_data.py:1 <module>
(call)|         1|     0.148426|     0.148426|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/colors.py:66 <module>
(call)|         1|    0.0010829|    0.0010829|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/cycler.py:41 <module>
(call)|         1|     0.961857|     0.961857|  0.20%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/rcsetup.py:15 <module>
(call)|         1|  7.70092e-05|  7.70092e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/_version.py:7 <module>
(call)|         1|      1.88492|      1.88492|  0.40%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/__init__.py:101 <module>
(call)|         1|    0.0109458|    0.0109458|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/path.py:10 <module>
(call)|         1|    0.0210204|    0.0210204|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/transforms.py:30 <module>
(call)|         1|     0.283081|     0.283081|  0.06%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/artist.py:1 <module>
(call)|         1|   0.00472379|   0.00472379|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/dateutil/rrule.py:7 <module>
(call)|         1|  0.000706434|  0.000706434|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/units.py:43 <module>
(call)|         1|    0.0208528|    0.0208528|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/ticker.py:165 <module>
(call)|         1|     0.112208|     0.112208|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/dates.py:133 <module>
(call)|         1|     0.125173|     0.125173|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/plotting/_matplotlib/converter.py:1 <module>
(call)|         1|  0.000154257|  0.000154257|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/plotting/_matplotlib/compat.py:2 <module>
(call)|         1|    0.0656581|    0.0656581|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/_cm.py:7 <module>
(call)|         1|     0.436924|     0.436924|  0.09%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/_cm_listed.py:1 <module>
(call)|         1|     0.636462|     0.636462|  0.13%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/cm.py:16 <module>
(call)|         1|     0.677694|     0.677694|  0.14%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/plotting/_matplotlib/style.py:2 <module>
(call)|         1|    0.0108869|    0.0108869|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/markers.py:128 <module>
(call)|         1|     0.275723|     0.275723|  0.06%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/lines.py:4 <module>
(call)|         1|   0.00890756|   0.00890756|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/bezier.py:3 <module>
(call)|         1|     0.588135|     0.588135|  0.12%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/patches.py:1 <module>
(call)|         1|     0.162103|     0.162103|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/_mathtext_data.py:3 <module>
(call)|         1|     0.172065|     0.172065|  0.04%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/afm.py:34 <module>
(call)|         1|      0.29714|      0.29714|  0.06%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/font_manager.py:14 <module>
(call)|         1|   0.00012064|   0.00012064|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/_text_layout.py:3 <module>
(call)|         1|    0.0232253|    0.0232253|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/dviread.py:18 <module>
(call)|         1|     0.171789|     0.171789|  0.04%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/mathtext.py:16 <module>
(call)|         1|     0.237788|     0.237788|  0.05%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/textpath.py:1 <module>
(call)|         1|     0.949158|     0.949158|  0.20%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/text.py:3 <module>
(call)|         1|      1.61151|      1.61151|  0.34%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/table.py:20 <module>
(call)|         1|      1.61591|      1.61591|  0.34%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/plotting/_matplotlib/tools.py:2 <module>
(call)|         1|      2.31308|      2.31308|  0.49%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/plotting/_matplotlib/core.py:1 <module>
(call)|         1|      4.70347|      4.70347|  0.99%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/plotting/_matplotlib/boxplot.py:1 <module>
(call)|         1|   0.00147223|   0.00147223|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/plotting/_matplotlib/hist.py:1 <module>
(call)|         1|   0.00051403|   0.00051403|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/plotting/_matplotlib/misc.py:1 <module>
(call)|         1|  0.000812292|  0.000812292|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/plotting/_matplotlib/timeseries.py:3 <module>
(call)|         1|      4.72267|      4.72267|  0.99%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/plotting/_matplotlib/__init__.py:1 <module>
(call)|         1|      4.73261|      4.73261|  0.99%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/plotting/_core.py:1 <module>
(call)|         1|   0.00140715|   0.00140715|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/plotting/_misc.py:1 <module>
(call)|         1|      4.74193|      4.74193|  1.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/plotting/__init__.py:58 <module>
(call)|         1|  0.000332355|  0.000332355|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/groupby/base.py:5 <module>
(call)|         1|    0.0771606|    0.0771606|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/window.py:4 <module>
(call)|         1|      4.95651|      4.95651|  1.04%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/series.py:3 <module>
(call)|         1|      5.58834|      5.58834|  1.17%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/frame.py:10 <module>
(call)|         1|  0.000169516|  0.000169516|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/api/extensions/__init__.py:1 <module>
(call)|         1|   0.00012064|   0.00012064|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/dtypes/api.py:3 <module>
(call)|         1|   0.00343418|   0.00343418|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/api/types/__init__.py:1 <module>
(call)|         1|    0.0141547|    0.0141547|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/api/__init__.py:1 <module>
(call)|         1|    0.0651326|    0.0651326|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/groupby/groupby.py:8 <module>
(call)|         1|  0.000213146|  0.000213146|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/sparse/scipy_sparse.py:5 <module>
(call)|         1|    0.0376704|    0.0376704|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/sparse/series.py:4 <module>
(call)|         1|     0.119558|     0.119558|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/sparse/frame.py:4 <module>
(call)|         1|      5.82552|      5.82552|  1.22%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/groupby/generic.py:7 <module>
(call)|         1|    0.0109169|    0.0109169|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/groupby/ops.py:7 <module>
(call)|         1|    0.0165575|    0.0165575|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/groupby/grouper.py:4 <module>
(call)|         1|      5.85153|      5.85153|  1.23%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/groupby/__init__.py:1 <module>
(call)|         1|   0.00245738|   0.00245738|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/reshape/reshape.py:1 <module>
(call)|         1|      6.94887|      6.94887|  1.46%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/api.py:3 <module>
(call)|         1|  0.000108242|  0.000108242|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/sparse/api.py:2 <module>
(call)|         1|  0.000232935|  0.000232935|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/tseries/api.py:3 <module>
(call)|         1|  0.000294209|  0.000294209|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/computation/common.py:1 <module>
(call)|         1|   0.00458121|   0.00458121|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/computation/align.py:2 <module>
(call)|         1|  0.000233173|  0.000233173|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/compat/chainmap.py:1 <module>
(call)|         1|   0.00472546|   0.00472546|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/computation/scope.py:3 <module>
(call)|         1|    0.0113118|    0.0113118|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/computation/ops.py:2 <module>
(call)|         1|    0.0239506|    0.0239506|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/computation/engines.py:3 <module>
(call)|         1|    0.0278492|    0.0278492|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/computation/eval.py:5 <module>
(call)|         1|      0.03159|      0.03159|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/computation/api.py:3 <module>
(call)|         1|   0.00124216|   0.00124216|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/reshape/concat.py:3 <module>
(call)|         1|    0.0023005|    0.0023005|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/reshape/melt.py:1 <module>
(call)|         1|   0.00742054|   0.00742054|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/reshape/merge.py:3 <module>
(call)|         1|  0.000142574|  0.000142574|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/reshape/util.py:1 <module>
(call)|         1|   0.00902057|   0.00902057|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/reshape/pivot.py:1 <module>
(call)|         1|    0.0011394|    0.0011394|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/reshape/tile.py:3 <module>
(call)|         1|    0.0418279|    0.0418279|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/reshape/api.py:3 <module>
(call)|         1|  0.000161648|  0.000161648|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/util/_print_versions.py:1 <module>
(call)|         1|  0.000345707|  0.000345707|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/io/clipboards.py:1 <module>
(call)|         1|  0.000197172|  0.000197172|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/io/excel/_util.py:1 <module>
(call)|         1|  2.24113e-05|  2.24113e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/compat/__init__.py:72 _import_lzma
(call)|         1|  0.000132084|  0.000132084|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/io/date_converters.py:1 <module>
(call)|         1|    0.0462637|    0.0462637|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/io/parsers.py:3 <module>
(call)|         1|    0.0025034|    0.0025034|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/io/excel/_odfreader.py:1 <module>
(call)|         1|   0.00129676|   0.00129676|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/io/excel/_openpyxl.py:1 <module>
(call)|         1|  0.000515699|  0.000515699|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/io/excel/_xlrd.py:1 <module>
(call)|         1|    0.0780966|    0.0780966|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/io/excel/_base.py:1 <module>
(call)|         1|   0.00608969|   0.00608969|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/io/excel/_xlsxwriter.py:1 <module>
(call)|         1|  0.000542164|  0.000542164|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/io/excel/_xlwt.py:1 <module>
(call)|         1|    0.0963111|    0.0963111|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/io/excel/__init__.py:1 <module>
(call)|         1|  0.000629187|  0.000629187|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/io/feather_format.py:1 <module>
(call)|         1|  9.46522e-05|  9.46522e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/io/gbq.py:1 <module>
(call)|         1|   0.00879645|   0.00879645|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/io/html.py:4 <module>
(call)|         1|    0.0101094|    0.0101094|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/io/json/_normalize.py:4 <module>
(call)|         1|  0.000801802|  0.000801802|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/io/json/_table_schema.py:5 <module>
(call)|         1|    0.0225997|    0.0225997|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/io/json/_json.py:1 <module>
(call)|         1|     0.114589|     0.114589|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/io/json/__init__.py:1 <module>
(call)|         1|  0.000366688|  0.000366688|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/io/msgpack/exceptions.py:1 <module>
(call)|         1|  1.78814e-05|  1.78814e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/io/msgpack/_version.py:1 <module>
(call)|         1|    0.0182834|    0.0182834|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/io/msgpack/__init__.py:3 <module>
(call)|         1|    0.0523591|    0.0523591|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/io/packers.py:39 <module>
(call)|         1|  0.000867605|  0.000867605|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/io/parquet.py:1 <module>
(call)|         1|  0.000840187|  0.000840187|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/compat/pickle_compat.py:3 <module>
(call)|         1|   0.00497532|   0.00497532|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/io/pickle.py:1 <module>
(call)|         1|    0.0374107|    0.0374107|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/computation/expr.py:2 <module>
(call)|         1|     0.045105|     0.045105|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/computation/pytables.py:1 <module>
(call)|         1|     0.105648|     0.105648|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/io/pytables.py:4 <module>
(call)|         1|  6.55651e-05|  6.55651e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/io/sas/sasreader.py:3 <module>
(call)|         1|   0.00429296|   0.00429296|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/io/sas/__init__.py:1 <module>
(call)|         1|   0.00196218|   0.00196218|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/io/spss.py:1 <module>
(call)|         1|   0.00556731|   0.00556731|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/io/sql.py:4 <module>
(call)|         1|    0.0205526|    0.0205526|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/io/stata.py:11 <module>
(call)|         1|     0.518141|     0.518141|  0.11%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/io/api.py:3 <module>
(call)|         1|   0.00025773|   0.00025773|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/util/_tester.py:3 <module>
(call)|         1|    0.0273032|    0.0273032|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/util/testing.py:1 <module>
(call)|         1|    0.0323331|    0.0323331|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/testing.py:5 <module>
(call)|         1|  0.000276089|  0.000276089|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/arrays/__init__.py:5 <module>
(call)|         1|  0.000304699|  0.000304699|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/_version.py:7 <module>
(call)|         1|      12.9959|      12.9959|  2.73%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/__init__.py:3 <module>
(call)|         1|   0.00720549|   0.00720549|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/channels/channels.py:16 <module>
(call)|         1|  0.000203371|  0.000203371|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/threads/neptune_thread.py:16 <module>
(call)|         1|    0.0416734|    0.0416734|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/channels/channels_values_sender.py:16 <module>
(call)|         1|    0.0396922|    0.0396922|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/psutil/_common.py:5 <module>
(call)|         1|  0.000641584|  0.000641584|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/psutil/_compat.py:5 <module>
(call)|         1|  0.000921965|  0.000921965|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/psutil/_psposix.py:5 <module>
(call)|         1|     0.135027|     0.135027|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/psutil/_pslinux.py:5 <module>
(call)|         1|     0.253177|     0.253177|  0.05%|# /opt/anaconda3/lib/python3.7/site-packages/psutil/__init__.py:21 <module>
(call)|         1|     0.279539|     0.279539|  0.06%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/abort.py:17 <module>
(call)|         1|  8.15392e-05|  8.15392e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/hardware/gauges/gauge_mode.py:18 <module>
(call)|         1|  0.000138044|  0.000138044|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/hardware/cgroup/cgroup_filesystem_reader.py:17 <module>
(call)|         1|   0.00013566|   0.00013566|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/hardware/system/system_monitor.py:17 <module>
(call)|         1|    0.0124195|    0.0124195|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/hardware/cgroup/cgroup_monitor.py:17 <module>
(call)|         1|   0.00019908|   0.00019908|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/hardware/gauges/gauge.py:17 <module>
(call)|         1|     0.024379|     0.024379|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/hardware/gauges/cpu.py:17 <module>
(call)|         1|  2.26498e-05|  2.26498e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/hardware/constants.py:17 <module>
(call)|         1|     0.130379|     0.130379|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/py3nvml/py3nvml.py:32 <module>
(call)|         1|  0.000714779|  0.000714779|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/py3nvml/nvidia_smi.py:42 <module>
(call)|         1|   0.00041461|   0.00041461|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/py3nvml/utils.py:1 <module>
(call)|         1|      0.22294|      0.22294|  0.05%|# /opt/anaconda3/lib/python3.7/site-packages/py3nvml/__init__.py:1 <module>
(call)|         1|     0.266824|     0.266824|  0.06%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/hardware/gpu/gpu_monitor.py:17 <module>
(call)|         1|     0.278919|     0.278919|  0.06%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/hardware/gauges/gpu.py:16 <module>
(call)|         1|  0.000311375|  0.000311375|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/hardware/gauges/memory.py:17 <module>
(call)|         1|      0.31385|      0.31385|  0.07%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/hardware/gauges/gauge_factory.py:16 <module>
(call)|         1|  0.000449657|  0.000449657|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/hardware/metrics/metric.py:18 <module>
(call)|         1|  6.05583e-05|  6.05583e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/hardware/metrics/metrics_container.py:18 <module>
(call)|         1|   0.00747371|   0.00747371|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/hardware/metrics/metrics_factory.py:16 <module>
(call)|         1|   0.00222802|   0.00222802|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/hardware/metrics/reports/metric_report.py:17 <module>
(call)|         1|   0.00556231|   0.00556231|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/hardware/metrics/reports/metric_reporter.py:16 <module>
(call)|         1|   0.00896621|   0.00896621|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/hardware/metrics/reports/metric_reporter_factory.py:16 <module>
(call)|         1|  6.29425e-05|  6.29425e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/hardware/metrics/service/metric_service.py:18 <module>
(call)|         1|  9.29832e-05|  9.29832e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/hardware/resources/gpu_card_indices_provider.py:17 <module>
(call)|         1|  0.000116825|  0.000116825|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/hardware/resources/system_resource_info.py:18 <module>
(call)|         1|   0.00712395|   0.00712395|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/hardware/resources/system_resource_info_factory.py:17 <module>
(call)|         1|     0.365489|     0.365489|  0.08%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/hardware/metrics/service/metric_service_factory.py:16 <module>
(call)|         1|   0.00438213|   0.00438213|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/streams/channel_writer.py:17 <module>
(call)|         1|  0.000316381|  0.000316381|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/streams/stdstream_uploader.py:16 <module>
(call)|         1|  0.000442266|  0.000442266|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/websocket/_exceptions.py:21 <module>
(call)|         1|   0.00527501|   0.00527501|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/websocket/_utils.py:21 <module>
(call)|         1|    0.0144703|    0.0144703|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/websocket/_abnf.py:21 <module>
(call)|         1|   0.00445461|   0.00445461|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/websocket/_cookiejar.py:1 <module>
(call)|         1|   0.00107551|   0.00107551|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/websocket/_logging.py:21 <module>
(call)|         1|  0.000150681|  0.000150681|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/websocket/_ssl_compat.py:21 <module>
(call)|         1|   0.00394273|   0.00394273|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/websocket/_socket.py:21 <module>
(call)|         1|  0.000178576|  0.000178576|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/websocket/_url.py:21 <module>
(call)|         1|    0.0161524|    0.0161524|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/websocket/_http.py:21 <module>
(call)|         1|    0.0285814|    0.0285814|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/websocket/_handshake.py:21 <module>
(call)|         1|    0.0334918|    0.0334918|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/websocket/_core.py:21 <module>
(call)|         1|    0.0382073|    0.0382073|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/websocket/_app.py:21 <module>
(call)|         1|    0.0613732|    0.0613732|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/websocket/__init__.py:21 <module>
(call)|         1|  0.000621557|  0.000621557|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/websockets/message.py:18 <module>
(call)|         1|  0.000129938|  0.000129938|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/websockets/websocket_message_processor.py:16 <module>
(call)|         1|     0.183431|     0.183431|  0.04%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/threads/aborting_thread.py:16 <module>
(call)|         1|  0.000675917|  0.000675917|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/threads/hardware_metric_reporting_thread.py:16 <module>
(call)|         1|  0.000540495|  0.000540495|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/threads/ping_thread.py:16 <module>
(call)|         1|  0.000101805|  0.000101805|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/future/__init__.py:82 <module>
(call)|         1|   0.00185037|   0.00185037|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/future/utils/__init__.py:50 <module>
(call)|         1|      0.13064|      0.13064|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/websockets/websocket_client_adapter.py:17 <module>
(call)|         1|     0.134343|     0.134343|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/websockets/reconnecting_websocket.py:17 <module>
(call)|         1|     0.137798|     0.137798|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/websockets/reconnecting_websocket_factory.py:16 <module>
(call)|         1|  9.60827e-05|  9.60827e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/git_info.py:18 <module>
(call)|         1|   0.00428748|   0.00428748|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/utils.py:17 <module>
(call)|         1|      1.10688|      1.10688|  0.23%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/execution/execution_context.py:16 <module>
(call)|         1|    0.0123529|    0.0123529|  0.00%|# /opt/anaconda3/lib/python3.7/tarfile.py:30 <module>
(call)|         1|  0.000154734|  0.000154734|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/future/builtins/iterators.py:33 <module>
(call)|         1|  0.000226021|  0.000226021|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/future/builtins/misc.py:39 <module>
(call)|         1|    0.0375707|    0.0375707|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/future/builtins/__init__.py:8 <module>
(call)|         1|    0.0875328|    0.0875328|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/storage/datastream.py:17 <module>
(call)|         1|    0.0926831|    0.0926831|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/storage/storage_utils.py:16 <module>
(call)|         1|  1.78814e-05|  1.78814e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/PIL/_version.py:2 <module>
(call)|         1|   0.00542092|   0.00542092|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/PIL/__init__.py:15 <module>
(call)|         1|  0.000114679|  0.000114679|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/PIL/ImageMode.py:17 <module>
(call)|         1|    0.0101373|    0.0101373|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/PIL/TiffTags.py:20 <module>
(call)|         1|  0.000166655|  0.000166655|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/PIL/_util.py:1 <module>
(call)|         1|    0.0037477|    0.0037477|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/PIL/_binary.py:14 <module>
(call)|         1|  8.13007e-05|  8.13007e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/cffi/lock.py:1 <module>
(call)|         1|  0.000267982|  0.000267982|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/cffi/error.py:2 <module>
(call)|         1|   0.00444627|   0.00444627|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/cffi/model.py:1 <module>
(call)|         1|    0.0200162|    0.0200162|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/cffi/api.py:1 <module>
(call)|         1|    0.0252044|    0.0252044|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/cffi/__init__.py:1 <module>
(call)|         1|     0.322479|     0.322479|  0.07%|# /opt/anaconda3/lib/python3.7/site-packages/PIL/Image.py:27 <module>
(call)|         1|     0.344692|     0.344692|  0.07%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/utils/image.py:16 <module>
(call)|         1|      14.9892|      14.9892|  3.15%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/experiments.py:16 <module>
(call)|         1|  0.000786781|  0.000786781|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/backends/credentials.py:17 <module>
(call)|         1|  0.000372648|  0.000372648|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/utils/http.py:16 <module>
(call)|         1|  0.000484705|  0.000484705|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/model.py:18 <module>
(call)|         1|  0.000164032|  0.000164032|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/notebook.py:17 <module>
(call)|         1|  0.000125885|  0.000125885|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/jwt/compat.py:4 <module>
(call)|         1|  0.000811815|  0.000811815|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/jwt/exceptions.py:1 <module>
(call)|         1|  0.000101805|  0.000101805|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/cryptography/__about__.py:5 <module>
(call)|         1|   0.00399947|   0.00399947|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/cryptography/__init__.py:5 <module>
(call)|         1|  5.07832e-05|  5.07832e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/cryptography/hazmat/__init__.py:10 <module>
(call)|         1|  8.24928e-05|  8.24928e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/cryptography/hazmat/primitives/__init__.py:5 <module>
(call)|         1|  0.000610828|  0.000610828|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/cryptography/hazmat/primitives/asymmetric/__init__.py:5 <module>
(call)|         1|  0.000633717|  0.000633717|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/cryptography/utils.py:5 <module>
(call)|         1|  0.000446081|  0.000446081|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/cryptography/hazmat/_der.py:5 <module>
(call)|         1|   0.00645876|   0.00645876|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/cryptography/exceptions.py:5 <module>
(call)|         1|  5.96046e-05|  5.96046e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/cryptography/hazmat/backends/__init__.py:5 <module>
(call)|         1|   0.00491548|   0.00491548|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/cryptography/hazmat/backends/interfaces.py:5 <module>
(call)|         1|    0.0353804|    0.0353804|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/cryptography/hazmat/primitives/hashes.py:5 <module>
(call)|         1|     0.171981|     0.171981|  0.04%|# /opt/anaconda3/lib/python3.7/site-packages/cryptography/hazmat/primitives/asymmetric/utils.py:5 <module>
(call)|         1|     0.301965|     0.301965|  0.06%|# /opt/anaconda3/lib/python3.7/site-packages/jwt/utils.py:1 <module>
(call)|         1|    0.0117729|    0.0117729|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/cryptography/hazmat/primitives/serialization/base.py:5 <module>
(call)|         1|   0.00223422|   0.00223422|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/cryptography/hazmat/primitives/asymmetric/dsa.py:5 <module>
(call)|         1|   0.00024271|   0.00024271|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/cryptography/hazmat/_oid.py:5 <module>
(call)|         1|    0.0178053|    0.0178053|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/cryptography/hazmat/primitives/asymmetric/ec.py:5 <module>
(call)|         1|  0.000649929|  0.000649929|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/cryptography/hazmat/primitives/asymmetric/ed25519.py:5 <module>
(call)|         1|   0.00208044|   0.00208044|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/cryptography/hazmat/primitives/asymmetric/rsa.py:5 <module>
(call)|         1|    0.0762746|    0.0762746|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/cryptography/hazmat/primitives/serialization/ssh.py:5 <module>
(call)|         1|     0.130003|     0.130003|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/cryptography/hazmat/primitives/serialization/__init__.py:5 <module>
(call)|         1|   0.00107789|   0.00107789|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/cryptography/hazmat/primitives/asymmetric/padding.py:5 <module>
(call)|         1|      0.45387|      0.45387|  0.10%|# /opt/anaconda3/lib/python3.7/site-packages/jwt/algorithms.py:1 <module>
(call)|         1|     0.458503|     0.458503|  0.10%|# /opt/anaconda3/lib/python3.7/site-packages/jwt/api_jws.py:1 <module>
(call)|         1|     0.476459|     0.476459|  0.10%|# /opt/anaconda3/lib/python3.7/site-packages/jwt/api_jwt.py:1 <module>
(call)|         1|     0.480577|     0.480577|  0.10%|# /opt/anaconda3/lib/python3.7/site-packages/jwt/__init__.py:9 <module>
(call)|         1|  0.000686884|  0.000686884|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/__init__.py:10 <module>
(call)|         1|    0.0320225|    0.0320225|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/common.py:8 <module>
(call)|         1|   0.00651145|   0.00651145|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth2/rfc6749/utils.py:7 <module>
(call)|         1|   0.00277972|   0.00277972|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth2/rfc6749/errors.py:8 <module>
(call)|         1|   0.00726199|   0.00726199|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth2/rfc6749/endpoints/base.py:8 <module>
(call)|         1|    0.0576589|    0.0576589|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth2/rfc6749/endpoints/authorization.py:8 <module>
(call)|         1|   0.00101614|   0.00101614|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth2/rfc6749/endpoints/introspect.py:9 <module>
(call)|         1|   0.00102425|   0.00102425|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth2/rfc6749/endpoints/token.py:8 <module>
(call)|         1|  0.000859261|  0.000859261|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth2/rfc6749/endpoints/revocation.py:9 <module>
(call)|         1|  0.000468016|  0.000468016|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/uri_validate.py:10 <module>
(call)|         1|  0.000808477|  0.000808477|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth2/rfc6749/request_validator.py:5 <module>
(call)|         1|   0.00983906|   0.00983906|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth2/rfc6749/grant_types/base.py:5 <module>
(call)|         1|    0.0143905|    0.0143905|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth2/rfc6749/grant_types/authorization_code.py:5 <module>
(call)|         1|  0.000932932|  0.000932932|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth2/rfc6749/grant_types/implicit.py:5 <module>
(call)|         1|  0.000913382|  0.000913382|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth2/rfc6749/grant_types/resource_owner_password_credentials.py:5 <module>
(call)|         1|   0.00110579|   0.00110579|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth2/rfc6749/grant_types/client_credentials.py:5 <module>
(call)|         1|  0.000901699|  0.000901699|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth2/rfc6749/grant_types/refresh_token.py:5 <module>
(call)|         1|    0.0369406|    0.0369406|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth2/rfc6749/grant_types/__init__.py:5 <module>
(call)|         1|    0.0518048|    0.0518048|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth2/rfc6749/endpoints/metadata.py:9 <module>
(call)|         1|  0.000809431|  0.000809431|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth2/rfc6749/endpoints/resource.py:8 <module>
(call)|         1|   0.00557399|   0.00557399|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth2/rfc6749/tokens.py:9 <module>
(call)|         1|    0.0111499|    0.0111499|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth2/rfc6749/endpoints/pre_configured.py:8 <module>
(call)|         1|     0.141233|     0.141233|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth2/rfc6749/endpoints/__init__.py:8 <module>
(call)|         1|     0.147696|     0.147696|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth2/rfc6749/__init__.py:8 <module>
(call)|         1|   0.00480032|   0.00480032|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/signals.py:6 <module>
(call)|         1|     0.013366|     0.013366|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth2/rfc6749/parameters.py:9 <module>
(call)|         1|    0.0179746|    0.0179746|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth2/rfc6749/clients/base.py:8 <module>
(call)|         1|  0.000293255|  0.000293255|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth2/rfc6749/clients/web_application.py:8 <module>
(call)|         1|  0.000259399|  0.000259399|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth2/rfc6749/clients/mobile_application.py:8 <module>
(call)|         1|   0.00024581|   0.00024581|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth2/rfc6749/clients/legacy_application.py:8 <module>
(call)|         1|  0.000230312|  0.000230312|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth2/rfc6749/clients/backend_application.py:8 <module>
(call)|         1|  0.000277042|  0.000277042|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth2/rfc6749/clients/service_application.py:8 <module>
(call)|         1|    0.0416181|    0.0416181|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth2/rfc6749/clients/__init__.py:8 <module>
(call)|         1|     0.202244|     0.202244|  0.04%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth2/__init__.py:8 <module>
(call)|         1|   0.00438142|   0.00438142|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth1/rfc5849/utils.py:8 <module>
(call)|         1|    0.0127587|    0.0127587|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth1/rfc5849/parameters.py:9 <module>
(call)|         1|   0.00562739|   0.00562739|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth1/rfc5849/signature.py:23 <module>
(call)|         1|    0.0311968|    0.0311968|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth1/rfc5849/__init__.py:8 <module>
(call)|         1|   0.00091362|   0.00091362|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth1/rfc5849/request_validator.py:8 <module>
(call)|         1|  0.000455618|  0.000455618|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth1/rfc5849/errors.py:8 <module>
(call)|         1|   0.00450063|   0.00450063|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth1/rfc5849/endpoints/base.py:8 <module>
(call)|         1|  0.000768185|  0.000768185|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth1/rfc5849/endpoints/request_token.py:10 <module>
(call)|         1|   0.00226569|   0.00226569|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth1/rfc5849/endpoints/authorization.py:8 <module>
(call)|         1|  0.000669718|  0.000669718|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth1/rfc5849/endpoints/access_token.py:10 <module>
(call)|         1|  0.000686884|  0.000686884|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth1/rfc5849/endpoints/resource.py:8 <module>
(call)|         1|  0.000551701|  0.000551701|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth1/rfc5849/endpoints/signature_only.py:7 <module>
(call)|         1|  0.000369787|  0.000369787|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth1/rfc5849/endpoints/pre_configured.py:1 <module>
(call)|         1|    0.0354674|    0.0354674|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth1/rfc5849/endpoints/__init__.py:1 <module>
(call)|         1|    0.0825634|    0.0825634|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth1/__init__.py:8 <module>
(call)|         1|    0.0883884|    0.0883884|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/requests_oauthlib/oauth1_auth.py:2 <module>
(call)|         1|   0.00582862|   0.00582862|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/requests_oauthlib/oauth1_session.py:1 <module>
(call)|         1|  0.000237465|  0.000237465|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/requests_oauthlib/oauth2_auth.py:1 <module>
(call)|         1|   0.00116205|   0.00116205|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/requests_oauthlib/oauth2_session.py:1 <module>
(call)|         1|     0.111396|     0.111396|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/requests_oauthlib/__init__.py:1 <module>
(call)|         1|     0.845659|     0.845659|  0.18%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/oauth.py:16 <module>
(call)|         1|  0.000533104|  0.000533104|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/notebooks/comm.py:16 <module>
(call)|         1|   0.00442243|   0.00442243|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/notebooks/notebooks.py:16 <module>
(call)|         1|    0.0159221|    0.0159221|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/projects.py:17 <module>
(call)|         1|      30.2268|      30.2268|  6.35%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/backends/hosted_neptune_backend.py:16 <module>
(call)|         1|   0.00119472|   0.00119472|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/backends/offline_backend.py:16 <module>
(call)|         1|  2.00272e-05|  2.00272e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/patterns.py:18 <module>
(call)|         1|   0.00426173|   0.00426173|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/sessions.py:17 <module>
(call)|         1|  2.95639e-05|  2.95639e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/_version.py:7 <module>
(call)|         1|       30.358|       30.358|  6.38%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/__init__.py:16 <module>
(call)|         1|  0.000953913|  0.000953913|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/_utils.py:1 <module>
(call)|         1|  0.000442982|  0.000442982|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/_utils_internal.py:1 <module>
(call)|         1|  5.24521e-05|  5.24521e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/version.py:1 <module>
(call)|         1|  0.000700235|  0.000700235|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/_six.py:21 <module>
(call)|         1|  0.000350237|  0.000350237|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/random.py:1 <module>
(call)|         1|   0.00373244|   0.00373244|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/serialization.py:1 <module>
(call)|         1|  0.000595331|  0.000595331|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/_tensor_str.py:1 <module>
(call)|         1|  0.000421286|  0.000421286|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/_namedtensor_internals.py:1 <module>
(call)|         1|  0.000465631|  0.000465631|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/utils/throughput_benchmark.py:1 <module>
(call)|         1|    0.0174189|    0.0174189|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/utils/__init__.py:1 <module>
(call)|         1|  0.000405073|  0.000405073|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/utils/hooks.py:1 <module>
(call)|         1|     0.100473|     0.100473|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/torch/tensor.py:1 <module>
(call)|         1|  0.000792503|  0.000792503|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/storage.py:1 <module>
(call)|         1|  0.000328064|  0.000328064|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/cuda/_utils.py:1 <module>
(call)|         1|  0.000918865|  0.000918865|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/cuda/memory.py:1 <module>
(call)|         1|  0.000699043|  0.000699043|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/cuda/random.py:1 <module>
(call)|         1|  0.000492334|  0.000492334|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/cuda/profiler.py:1 <module>
(call)|         1|  9.84669e-05|  9.84669e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/cuda/nvtx.py:1 <module>
(call)|         1|    0.0008564|    0.0008564|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/cuda/streams.py:1 <module>
(call)|         1|  0.000909567|  0.000909567|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/cuda/amp/grad_scaler.py:1 <module>
(call)|         1|   0.00541568|   0.00541568|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/cuda/amp/__init__.py:1 <module>
(call)|         1|     0.329835|     0.329835|  0.07%|# /opt/anaconda3/lib/python3.7/site-packages/torch/cuda/__init__.py:9 <module>
(call)|         1|  0.000244856|  0.000244856|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/sparse/__init__.py:2 <module>
(call)|         1|  0.000329733|  0.000329733|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/parameter.py:1 <module>
(call)|         1|      0.01894|      0.01894|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:1 <module>
(call)|         1|  4.45843e-05|  4.45843e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/_reduction.py:1 <module>
(call)|         1|  0.000359774|  0.000359774|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/utils.py:1 <module>
(call)|         1|  0.000338316|  0.000338316|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/grad.py:1 <module>
(call)|         1|  0.000286818|  0.000286818|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/_VF.py:1 <module>
(call)|         1|    0.0177722|    0.0177722|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/typing_extensions.py:1 <module>
(call)|         1|    0.0453091|    0.0453091|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torch/_jit_internal.py:5 <module>
(call)|         1|    0.0015111|    0.0015111|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/_overrides.py:16 <module>
(call)|         1|     0.211753|     0.211753|  0.04%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/functional.py:1 <module>
(call)|         1|   0.00144267|   0.00144267|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/init.py:1 <module>
(call)|         1|      0.27092|      0.27092|  0.06%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/linear.py:1 <module>
(call)|         1|   0.00303006|   0.00303006|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/conv.py:2 <module>
(call)|         1|   0.00544262|   0.00544262|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/activation.py:1 <module>
(call)|         1|   0.00344467|   0.00344467|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/loss.py:1 <module>
(call)|         1|   0.00231695|   0.00231695|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/container.py:1 <module>
(call)|         1|   0.00385165|   0.00385165|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/pooling.py:1 <module>
(call)|         1|  0.000640392|  0.000640392|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/variable.py:1 <module>
(call)|         1|   0.00253534|   0.00253534|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/function.py:1 <module>
(call)|         1|   0.00032258|   0.00032258|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/testing/__init__.py:3 <module>
(call)|         1|    0.0397439|    0.0397439|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/gradcheck.py:1 <module>
(call)|         1|  0.000574112|  0.000574112|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/grad_mode.py:1 <module>
(call)|         1|  0.000377178|  0.000377178|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/anomaly_mode.py:1 <module>
(call)|         1|   0.00397706|   0.00397706|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/profiler.py:1 <module>
(call)|         1|  0.000428677|  0.000428677|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/functional.py:1 <module>
(call)|         1|     0.175884|     0.175884|  0.04%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/__init__.py:6 <module>
(call)|         1|     0.258605|     0.258605|  0.05%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/_functions.py:1 <module>
(call)|         1|     0.288375|     0.288375|  0.06%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/batchnorm.py:1 <module>
(call)|         1|  0.000775814|  0.000775814|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/instancenorm.py:1 <module>
(call)|         1|   0.00134611|   0.00134611|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/normalization.py:1 <module>
(call)|         1|  0.000751972|  0.000751972|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/dropout.py:1 <module>
(call)|         1|   0.00146079|   0.00146079|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/padding.py:1 <module>
(call)|         1|   0.00111604|   0.00111604|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/sparse.py:1 <module>
(call)|         1|    0.0024116|    0.0024116|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/utils/rnn.py:1 <module>
(call)|         1|  0.000267267|  0.000267267|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/utils/clip_grad.py:1 <module>
(call)|         1|  0.000527143|  0.000527143|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/utils/weight_norm.py:3 <module>
(call)|         1|  0.000192642|  0.000192642|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/utils/convert_parameters.py:1 <module>
(call)|         1|  0.000560045|  0.000560045|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/utils/spectral_norm.py:3 <module>
(call)|         1|  0.000242472|  0.000242472|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/utils/fusion.py:2 <module>
(call)|         1|  0.000169277|  0.000169277|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/utils/memory_format.py:1 <module>
(call)|         1|    0.0888622|    0.0888622|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/utils/__init__.py:1 <module>
(call)|         1|     0.107616|     0.107616|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/rnn.py:1 <module>
(call)|         1|  0.000358343|  0.000358343|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/pixelshuffle.py:1 <module>
(call)|         1|  0.000532389|  0.000532389|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/upsampling.py:1 <module>
(call)|         1|  0.000435829|  0.000435829|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/distance.py:1 <module>
(call)|         1|  0.000543356|  0.000543356|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/fold.py:2 <module>
(call)|         1|   0.00183511|   0.00183511|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/adaptive.py:3 <module>
(call)|         1|    0.0016346|    0.0016346|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/transformer.py:1 <module>
(call)|         1|   0.00016284|   0.00016284|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/flatten.py:1 <module>
(call)|         1|      1.20143|      1.20143|  0.25%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/__init__.py:1 <module>
(call)|         1|  0.000275373|  0.000275373|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/parallel/parallel_apply.py:1 <module>
(call)|         1|  0.000278473|  0.000278473|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/cuda/nccl.py:1 <module>
(call)|         1|    0.0282366|    0.0282366|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torch/cuda/comm.py:1 <module>
(call)|         1|    0.0327027|    0.0327027|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/parallel/replicate.py:1 <module>
(call)|         1|   0.00129199|   0.00129199|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/parallel/_functions.py:1 <module>
(call)|         1|   0.00506306|   0.00506306|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/parallel/scatter_gather.py:1 <module>
(call)|         1|   0.00932717|   0.00932717|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/parallel/data_parallel.py:1 <module>
(call)|         1|  5.76973e-05|  5.76973e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributed/constants.py:1 <module>
(call)|         1|  0.000764847|  0.000764847|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributed/rendezvous.py:1 <module>
(call)|         1|     0.015835|     0.015835|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributed/distributed_c10d.py:1 <module>
(call)|         1|    0.0241184|    0.0241184|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributed/__init__.py:1 <module>
(call)|         1|     0.038409|     0.038409|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/parallel/distributed.py:1 <module>
(call)|         1|     0.144569|     0.144569|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/parallel/__init__.py:1 <module>
(call)|         1|      1.46712|      1.46712|  0.31%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/__init__.py:1 <module>
(call)|         1|  0.000267267|  0.000267267|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/_linalg_utils.py:3 <module>
(call)|         1|      0.01056|      0.01056|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/_lowrank.py:2 <module>
(call)|         1|      1.48997|      1.48997|  0.31%|# /opt/anaconda3/lib/python3.7/site-packages/torch/functional.py:1 <module>
(call)|         1|  0.000796556|  0.000796556|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/intrinsic/modules/fused.py:1 <module>
(call)|         1|   0.00592518|   0.00592518|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/intrinsic/modules/__init__.py:3 <module>
(call)|         1|    0.0270045|    0.0270045|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/intrinsic/__init__.py:3 <module>
(call)|         1|   0.00081706|   0.00081706|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/quantized/functional.py:1 <module>
(call)|         1|   0.00499439|   0.00499439|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/quantized/modules/activation.py:1 <module>
(call)|         1|  0.000775099|  0.000775099|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/quantized/modules/batchnorm.py:1 <module>
(call)|         1|  0.000693798|  0.000693798|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/qat/modules/linear.py:1 <module>
(call)|         1|  0.000481367|  0.000481367|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/qat/modules/conv.py:1 <module>
(call)|         1|    0.0372193|    0.0372193|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/qat/modules/__init__.py:3 <module>
(call)|         1|    0.0427418|    0.0427418|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/qat/__init__.py:1 <module>
(call)|         1|    0.0485532|    0.0485532|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/intrinsic/qat/modules/linear_relu.py:1 <module>
(call)|         1|   0.00166035|   0.00166035|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/intrinsic/qat/modules/conv_fused.py:1 <module>
(call)|         1|     0.071856|     0.071856|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/intrinsic/qat/modules/__init__.py:1 <module>
(call)|         1|    0.0776501|    0.0776501|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/intrinsic/qat/__init__.py:1 <module>
(call)|         1|   0.00164175|   0.00164175|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/jit/annotations.py:1 <module>
(call)|         1|   0.00478053|   0.00478053|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/jit/frontend.py:1 <module>
(call)|         1|  0.000492573|  0.000492573|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/backends/__init__.py:1 <module>
(call)|         1|  0.000926018|  0.000926018|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/backends/cudnn/__init__.py:1 <module>
(call)|         1|     0.107037|     0.107037|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/torch/jit/_builtins.py:1 <module>
(call)|         1|     0.121978|     0.121978|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/torch/jit/_recursive.py:1 <module>
(call)|         1|   0.00083065|   0.00083065|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributed/autograd/__init__.py:1 <module>
(call)|         1|     0.241334|     0.241334|  0.05%|# /opt/anaconda3/lib/python3.7/site-packages/torch/jit/__init__.py:1 <module>
(call)|         1|     0.286303|     0.286303|  0.06%|# /opt/anaconda3/lib/python3.7/site-packages/torch/_ops.py:1 <module>
(call)|         1|  0.000257969|  0.000257969|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/quantized/modules/utils.py:1 <module>
(call)|         1|     0.379211|     0.379211|  0.08%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/quantized/modules/conv.py:2 <module>
(call)|         1|   0.00117993|   0.00117993|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/quantized/modules/linear.py:1 <module>
(call)|         1|  0.000546932|  0.000546932|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/quantized/modules/functional_modules.py:1 <module>
(call)|         1|     0.597054|     0.597054|  0.13%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/quantized/modules/__init__.py:3 <module>
(call)|         1|     0.602597|     0.602597|  0.13%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/quantized/__init__.py:1 <module>
(call)|         1|  0.000721931|  0.000721931|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/optim/optimizer.py:1 <module>
(call)|         1|   0.00490093|   0.00490093|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/optim/adadelta.py:1 <module>
(call)|         1|  0.000549316|  0.000549316|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/optim/adagrad.py:1 <module>
(call)|         1|  0.000674248|  0.000674248|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/optim/adam.py:1 <module>
(call)|         1|  0.000630617|  0.000630617|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/optim/adamw.py:1 <module>
(call)|         1|  0.000575304|  0.000575304|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/optim/sparse_adam.py:1 <module>
(call)|         1|  0.000623226|  0.000623226|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/optim/adamax.py:1 <module>
(call)|         1|  0.000520706|  0.000520706|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/optim/asgd.py:1 <module>
(call)|         1|  0.000528336|  0.000528336|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/optim/sgd.py:1 <module>
(call)|         1|   0.00053525|   0.00053525|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/optim/rprop.py:1 <module>
(call)|         1|  0.000648975|  0.000648975|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/optim/rmsprop.py:1 <module>
(call)|         1|  0.000758648|  0.000758648|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/optim/lbfgs.py:1 <module>
(call)|         1|   0.00321126|   0.00321126|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/optim/lr_scheduler.py:1 <module>
(call)|         1|    0.0565498|    0.0565498|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torch/optim/__init__.py:6 <module>
(call)|         1|   0.00280762|   0.00280762|  0.00%|# /opt/anaconda3/lib/python3.7/multiprocessing/process.py:10 <module>
(call)|         1|   0.00182748|   0.00182748|  0.00%|# /opt/anaconda3/lib/python3.7/multiprocessing/reduction.py:10 <module>
(call)|         1|    0.0136764|    0.0136764|  0.00%|# /opt/anaconda3/lib/python3.7/multiprocessing/context.py:1 <module>
(call)|         1|    0.0178828|    0.0178828|  0.00%|# /opt/anaconda3/lib/python3.7/multiprocessing/__init__.py:15 <module>
(call)|         1|   0.00146914|   0.00146914|  0.00%|# /opt/anaconda3/lib/python3.7/multiprocessing/util.py:10 <module>
(call)|         1|   0.00103855|   0.00103855|  0.00%|# /opt/anaconda3/lib/python3.7/multiprocessing/resource_sharer.py:11 <module>
(call)|         1|    0.0762503|    0.0762503|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/torch/multiprocessing/reductions.py:1 <module>
(call)|         1|    0.0118971|    0.0118971|  0.00%|# /opt/anaconda3/lib/python3.7/multiprocessing/connection.py:10 <module>
(call)|         1|    0.0155013|    0.0155013|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/multiprocessing/spawn.py:1 <module>
(call)|         1|     0.101959|     0.101959|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/torch/multiprocessing/__init__.py:15 <module>
(call)|         1|  0.000272989|  0.000272989|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/utils/backcompat/__init__.py:1 <module>
(call)|         1|  0.000401974|  0.000401974|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/onnx/__init__.py:1 <module>
(call)|         1|   0.00832868|   0.00832868|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/tqdm/utils.py:1 <module>
(call)|         1|  0.000320673|  0.000320673|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/tqdm/_monitor.py:1 <module>
(call)|         1|    0.0203285|    0.0203285|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/tqdm/std.py:9 <module>
(call)|         1|  0.000608683|  0.000608683|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/tqdm/gui.py:9 <module>
(call)|         1|   4.1008e-05|   4.1008e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/tqdm/_tqdm_pandas.py:1 <module>
(call)|         1|  0.000737429|  0.000737429|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/tqdm/_version.py:2 <module>
(call)|         1|    0.0286922|    0.0286922|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/tqdm/cli.py:1 <module>
(call)|         1|    0.0662856|    0.0662856|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/tqdm/__init__.py:1 <module>
(call)|         1|  0.000297785|  0.000297785|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/tqdm/autonotebook.py:1 <module>
(call)|         1|   0.00414181|   0.00414181|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/tqdm/auto.py:1 <module>
(call)|         1|    0.0884206|    0.0884206|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/torch/hub.py:1 <module>
(call)|         1|   0.00325942|   0.00325942|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/constraints.py:21 <module>
(call)|         1|  0.000539541|  0.000539541|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/utils.py:1 <module>
(call)|         1|    0.0055685|    0.0055685|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/distribution.py:1 <module>
(call)|         1|   0.00961947|   0.00961947|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/exp_family.py:1 <module>
(call)|         1|    0.0208664|    0.0208664|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/bernoulli.py:1 <module>
(call)|         1|   0.00117803|   0.00117803|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/dirichlet.py:1 <module>
(call)|         1|   0.00527954|   0.00527954|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/beta.py:1 <module>
(call)|         1|   0.00108147|   0.00108147|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/binomial.py:1 <module>
(call)|         1|   0.00115299|   0.00115299|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/categorical.py:1 <module>
(call)|         1|  0.000846863|  0.000846863|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/cauchy.py:1 <module>
(call)|         1|   0.00116944|   0.00116944|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/gamma.py:1 <module>
(call)|         1|   0.00489163|   0.00489163|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/chi2.py:1 <module>
(call)|         1|   0.00538278|   0.00538278|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/transforms.py:1 <module>
(call)|         1|    0.0117328|    0.0117328|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/constraint_registry.py:66 <module>
(call)|         1|   0.00142455|   0.00142455|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/continuous_bernoulli.py:1 <module>
(call)|         1|  0.000720978|  0.000720978|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/exponential.py:1 <module>
(call)|         1|  0.000717163|  0.000717163|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/fishersnedecor.py:1 <module>
(call)|         1|  0.000968933|  0.000968933|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/geometric.py:1 <module>
(call)|         1|  0.000734568|  0.000734568|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/uniform.py:1 <module>
(call)|         1|  0.000708342|  0.000708342|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/transformed_distribution.py:1 <module>
(call)|         1|   0.00875616|   0.00875616|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/gumbel.py:1 <module>
(call)|         1|   0.00067687|   0.00067687|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/half_cauchy.py:1 <module>
(call)|         1|  0.000780106|  0.000780106|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/normal.py:1 <module>
(call)|         1|   0.00462723|   0.00462723|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/half_normal.py:1 <module>
(call)|         1|  0.000700951|  0.000700951|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/independent.py:1 <module>
(call)|         1|  0.000724554|  0.000724554|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/laplace.py:1 <module>
(call)|         1|   0.00195003|   0.00195003|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/multivariate_normal.py:1 <module>
(call)|         1|    0.0066545|    0.0066545|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/lowrank_multivariate_normal.py:1 <module>
(call)|         1|  0.000652552|  0.000652552|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/one_hot_categorical.py:1 <module>
(call)|         1|  0.000482082|  0.000482082|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/pareto.py:1 <module>
(call)|         1|  0.000670671|  0.000670671|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/poisson.py:1 <module>
(call)|         1|    0.0448101|    0.0448101|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/kl.py:1 <module>
(call)|         1|  0.000471592|  0.000471592|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/log_normal.py:1 <module>
(call)|         1|  0.000549793|  0.000549793|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/logistic_normal.py:1 <module>
(call)|         1|  0.000866175|  0.000866175|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/mixture_same_family.py:1 <module>
(call)|         1|  0.000882387|  0.000882387|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/multinomial.py:1 <module>
(call)|         1|   0.00132346|   0.00132346|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/negative_binomial.py:1 <module>
(call)|         1|   0.00119114|   0.00119114|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/relaxed_bernoulli.py:1 <module>
(call)|         1|  0.000931263|  0.000931263|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/relaxed_categorical.py:1 <module>
(call)|         1|  0.000747442|  0.000747442|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/studentT.py:1 <module>
(call)|         1|  0.000481129|  0.000481129|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributed/rpc/constants.py:1 <module>
(call)|         1|    0.0100672|    0.0100672|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributed/rpc/backend_registry.py:1 <module>
(call)|         1|   0.00525236|   0.00525236|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributed/rpc/internal.py:1 <module>
(call)|         1|    0.0261176|    0.0261176|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributed/rpc/api.py:1 <module>
(call)|         1|    0.0877655|    0.0877655|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributed/rpc/__init__.py:1 <module>
(call)|         1|     0.626333|     0.626333|  0.13%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/von_mises.py:1 <module>
(call)|         1|  0.000660181|  0.000660181|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/weibull.py:1 <module>
(call)|         1|     0.854575|     0.854575|  0.18%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/__init__.py:72 <module>
(call)|         1|   0.00070715|   0.00070715|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/backends/cuda/__init__.py:1 <module>
(call)|         1|  0.000179768|  0.000179768|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/backends/mkl/__init__.py:1 <module>
(call)|         1|   0.00079155|   0.00079155|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/backends/mkldnn/__init__.py:1 <module>
(call)|         1|  0.000162363|  0.000162363|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/backends/openmp/__init__.py:1 <module>
(call)|         1|   0.00058198|   0.00058198|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/backends/quantized/__init__.py:1 <module>
(call)|         1|  0.000638723|  0.000638723|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/intrinsic/quantized/modules/linear_relu.py:1 <module>
(call)|         1|  0.000950813|  0.000950813|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/intrinsic/quantized/modules/conv_relu.py:1 <module>
(call)|         1|   0.00854301|   0.00854301|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/intrinsic/quantized/modules/__init__.py:3 <module>
(call)|         1|    0.0175447|    0.0175447|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/intrinsic/quantized/__init__.py:1 <module>
(call)|         1|  0.000687122|  0.000687122|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/quantized/dynamic/modules/linear.py:1 <module>
(call)|         1|   0.00230551|   0.00230551|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/quantized/dynamic/modules/rnn.py:1 <module>
(call)|         1|    0.0230963|    0.0230963|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/quantized/dynamic/modules/__init__.py:3 <module>
(call)|         1|    0.0285802|    0.0285802|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/quantized/dynamic/__init__.py:2 <module>
(call)|         1|  0.000407219|  0.000407219|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/quantization/stubs.py:2 <module>
(call)|         1|    0.0635054|    0.0635054|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torch/quantization/default_mappings.py:2 <module>
(call)|         1|    0.0051403|    0.0051403|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/quantization/observer.py:1 <module>
(call)|         1|   0.00126648|   0.00126648|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/quantization/fake_quantize.py:1 <module>
(call)|         1|    0.0163713|    0.0163713|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/quantization/qconfig.py:1 <module>
(call)|         1|      0.08729|      0.08729|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/torch/quantization/quantize.py:1 <module>
(call)|         1|  0.000457048|  0.000457048|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/quantization/fuse_modules.py:1 <module>
(call)|         1|     0.122439|     0.122439|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/torch/quantization/__init__.py:1 <module>
(call)|         1|  0.000745535|  0.000745535|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/utils/data/sampler.py:1 <module>
(call)|         1|   0.00069499|   0.00069499|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/utils/data/distributed.py:1 <module>
(call)|         1|  0.000882864|  0.000882864|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/utils/data/dataset.py:1 <module>
(call)|         1|  0.000326395|  0.000326395|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/utils/data/_utils/signal_handling.py:31 <module>
(call)|         1|    0.0415893|    0.0415893|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torch/utils/data/_utils/worker.py:5 <module>
(call)|         1|  0.000493526|  0.000493526|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/utils/data/_utils/pin_memory.py:6 <module>
(call)|         1|   0.00428367|   0.00428367|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/utils/data/_utils/collate.py:6 <module>
(call)|         1|  0.000200033|  0.000200033|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/utils/data/_utils/fetch.py:4 <module>
(call)|         1|    0.0899541|    0.0899541|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/torch/utils/data/_utils/__init__.py:8 <module>
(call)|         1|    0.0968502|    0.0968502|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/torch/utils/data/dataloader.py:6 <module>
(call)|         1|     0.114958|     0.114958|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/torch/utils/data/__init__.py:1 <module>
(call)|         1|  0.000184298|  0.000184298|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/__config__.py:1 <module>
(call)|         1|    4.673e-05|    4.673e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/__future__.py:11 <module>
(call)|         1|    0.0140595|    0.0140595|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/_torch_docs.py:1 <module>
(call)|         1|    0.0242453|    0.0242453|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torch/_tensor_docs.py:1 <module>
(call)|         1|   0.00044322|   0.00044322|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/_storage_docs.py:1 <module>
(call)|         1|  0.000352144|  0.000352144|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/_classes.py:1 <module>
(call)|         1|   0.00027442|   0.00027442|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/quasirandom.py:1 <module>
(call)|         1|  9.46522e-05|  9.46522e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/multiprocessing/_atfork.py:1 <module>
(call)|         1|  0.000958204|  0.000958204|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/_lobpcg.py:2 <module>
(call)|         1|      12.9633|      12.9633|  2.72%|# /opt/anaconda3/lib/python3.7/site-packages/torch/__init__.py:11 <module>
(call)|         1|  0.000230789|  0.000230789|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/_pylab_helpers.py:3 <module>
(call)|         1|    0.0169897|    0.0169897|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/backend_tools.py:12 <module>
(call)|         1|  8.51154e-05|  8.51154e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/tight_bbox.py:3 <module>
(call)|         1|    0.0101216|    0.0101216|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/widgets.py:10 <module>
(call)|         1|     0.146683|     0.146683|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/backend_bases.py:33 <module>
(call)|         1|     0.203125|     0.203125|  0.04%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/backends/__init__.py:1 <module>
(call)|         1|   0.00100827|   0.00100827|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/category.py:11 <module>
(call)|         1|     0.305303|     0.305303|  0.06%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/collections.py:10 <module>
(call)|         1|     0.020195|     0.020195|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/texmanager.py:29 <module>
(call)|         1|    0.0011301|    0.0011301|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/blocking_input.py:20 <module>
(call)|         1|    0.0315006|    0.0315006|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/contour.py:3 <module>
(call)|         1|    0.0447156|    0.0447156|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/image.py:4 <module>
(call)|         1|   0.00735378|   0.00735378|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/offsetbox.py:15 <module>
(call)|         1|  0.000395536|  0.000395536|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/container.py:1 <module>
(call)|         1|   0.00220704|   0.00220704|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/legend_handler.py:25 <module>
(call)|         1|     0.055686|     0.055686|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/legend.py:22 <module>
(call)|         1|    0.0154197|    0.0154197|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/mlab.py:54 <module>
(call)|         1|     0.003932|     0.003932|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/quiver.py:15 <module>
(call)|         1|  5.36442e-05|  5.36442e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/stackplot.py:8 <module>
(call)|         1|   0.00107813|   0.00107813|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/streamplot.py:4 <module>
(call)|         1|  0.000292301|  0.000292301|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/tri/triangulation.py:1 <module>
(call)|         1|  0.000263691|  0.000263691|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/tri/tricontour.py:1 <module>
(call)|         1|  0.000446081|  0.000446081|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/tri/tritools.py:3 <module>
(call)|         1|  0.000557899|  0.000557899|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/tri/trifinder.py:1 <module>
(call)|         1|   0.00389361|   0.00389361|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/tri/triinterpolate.py:3 <module>
(call)|         1|  0.000309467|  0.000309467|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/tri/trirefine.py:3 <module>
(call)|         1|  0.000197172|  0.000197172|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/tri/tripcolor.py:1 <module>
(call)|         1|  8.58307e-05|  8.58307e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/tri/triplot.py:1 <module>
(call)|         1|     0.135706|     0.135706|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/tri/__init__.py:3 <module>
(call)|         1|    0.0183094|    0.0183094|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/scale.py:8 <module>
(call)|         1|     0.133726|     0.133726|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axis.py:3 <module>
(call)|         1|   0.00316739|   0.00316739|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/spines.py:1 <module>
(call)|         1|     0.281277|     0.281277|  0.06%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_base.py:1 <module>
(call)|         1|   0.00237727|   0.00237727|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_secondary_axes.py:1 <module>
(call)|         1|      1.30736|      1.30736|  0.27%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:1 <module>
(call)|         1|  0.000298262|  0.000298262|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/tight_layout.py:10 <module>
(call)|         1|   0.00185585|   0.00185585|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/_layoutbox.py:16 <module>
(call)|         1|    0.0113671|    0.0113671|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/gridspec.py:10 <module>
(call)|         1|       1.7693|       1.7693|  0.37%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_subplots.py:1 <module>
(call)|         1|      1.79965|      1.79965|  0.38%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/__init__.py:1 <module>
(call)|         1|   0.00458241|   0.00458241|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/projections/geo.py:1 <module>
(call)|         1|   0.00844908|   0.00844908|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/projections/polar.py:1 <module>
(call)|         1|    0.0043385|    0.0043385|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/mpl_toolkits/mplot3d/proj3d.py:3 <module>
(call)|         1|    0.0172942|    0.0172942|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/mpl_toolkits/mplot3d/art3d.py:8 <module>
(call)|         1|    0.0037055|    0.0037055|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/mpl_toolkits/mplot3d/axis3d.py:5 <module>
(call)|         1|    0.0497799|    0.0497799|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/mpl_toolkits/mplot3d/axes3d.py:11 <module>
(call)|         1|    0.0549326|    0.0549326|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/mpl_toolkits/mplot3d/__init__.py:1 <module>
(call)|         1|      1.89446|      1.89446|  0.40%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/projections/__init__.py:1 <module>
(call)|         1|  0.000648022|  0.000648022|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/_constrained_layout.py:16 <module>
(call)|         1|    0.0115008|    0.0115008|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/colorbar.py:20 <module>
(call)|         1|      2.35232|      2.35232|  0.49%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/figure.py:12 <module>
(call)|         1|  4.24385e-05|  4.24385e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/dill/info.py:2 <module>
(call)|         1|    0.0123763|    0.0123763|  0.00%|# /opt/anaconda3/lib/python3.7/_pyio.py:3 <module>
(call)|         1|  9.67979e-05|  9.67979e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/dill/settings.py:10 <module>
(call)|         1|     0.123257|     0.123257|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/dill/_dill.py:17 <module>
(call)|         1|   0.00165772|   0.00165772|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/dill/source.py:19 <module>
(call)|         1|   0.00151443|   0.00151443|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/dill/temp.py:11 <module>
(call)|         1|  0.000263214|  0.000263214|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/dill/pointers.py:9 <module>
(call)|         1|   0.00620246|   0.00620246|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/dill/detect.py:10 <module>
(call)|         1|  0.000302315|  0.000302315|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/dill/objtypes.py:13 <module>
(call)|         1|     0.253133|     0.253133|  0.05%|# /opt/anaconda3/lib/python3.7/site-packages/dill/__init__.py:10 <module>
(call)|         1|  8.41618e-05|  8.41618e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/_shared/version_requirements.py:1 <module>
(call)|         1|   0.00165176|   0.00165176|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/util/dtype.py:1 <module>
(call)|         1|  0.000127316|  0.000127316|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/util/shape.py:1 <module>
(call)|         1|  0.000104189|  0.000104189|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/util/noise.py:1 <module>
(call)|         1|  5.34058e-05|  5.34058e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/util/apply_parallel.py:1 <module>
(call)|         1|  3.79086e-05|  3.79086e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/util/arraycrop.py:4 <module>
(call)|         1|  0.000329494|  0.000329494|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/util/compare.py:1 <module>
(call)|         1|  3.71933e-05|  3.71933e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/util/_regular_grid.py:1 <module>
(call)|         1|  2.69413e-05|  2.69413e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/util/unique.py:1 <module>
(call)|         1|  8.96454e-05|  8.96454e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/util/_invert.py:1 <module>
(call)|         1|  6.27041e-05|  6.27041e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/util/_montage.py:1 <module>
(call)|         1|  0.000537157|  0.000537157|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/_shared/_warnings.py:1 <module>
(call)|         1|   0.00501299|   0.00501299|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/_shared/utils.py:1 <module>
(call)|         1|     0.148327|     0.148327|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/util/__init__.py:1 <module>
(call)|         1|  3.09944e-05|  3.09944e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/data/_binary_blobs.py:1 <module>
(call)|         1|  0.000438452|  0.000438452|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/data/_detect.py:1 <module>
(call)|         1|    0.0205314|    0.0205314|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/data/__init__.py:7 <module>
(call)|         1|  3.55244e-05|  3.55244e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/util/lookfor.py:1 <module>
(call)|         1|     0.273466|     0.273466|  0.06%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/__init__.py:67 <module>
(call)|         1|  0.000272751|  0.000272751|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/_lib/_testutils.py:4 <module>
(call)|         1|    0.0254881|    0.0254881|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/_lib/__init__.py:11 <module>
(call)|         1|  0.000124454|  0.000124454|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/_lib/deprecation.py:1 <module>
(call)|         1|   2.3365e-05|   2.3365e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/_distributor_init.py:10 <module>
(call)|         1|  0.000267744|  0.000267744|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/__config__.py:3 <module>
(call)|         1|  4.02927e-05|  4.02927e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/version.py:3 <module>
(call)|         1|   0.00330281|   0.00330281|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/_lib/_pep440.py:5 <module>
(call)|         4|  0.000457287|  0.000114322|  0.00%|# /opt/anaconda3/lib/python3.7/ctypes/__init__.py:73 CFUNCTYPE
(call)|         4|  4.86374e-05|  1.21593e-05|  0.00%|# /opt/anaconda3/lib/python3.7/ctypes/__init__.py:497 cast
(call)|         1|    0.0372119|    0.0372119|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/_lib/_ccallback.py:1 <module>
(call)|         1|    0.0429974|    0.0429974|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/_lib/_uarray/_backend.py:1 <module>
(call)|         1|    0.0846865|    0.0846865|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/_lib/_uarray/__init__.py:113 <module>
(call)|         1|     0.138494|     0.138494|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/_lib/uarray.py:8 <module>
(call)|         1|     0.183209|     0.183209|  0.04%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/fft/_basic.py:1 <module>
(call)|         1|    0.0181384|    0.0181384|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/fft/_realtransforms.py:1 <module>
(call)|         1|  0.000544786|  0.000544786|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/fft/_pocketfft/helper.py:1 <module>
(call)|         1|    0.0967247|    0.0967247|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/fft/_pocketfft/basic.py:3 <module>
(call)|         1|  0.000447273|  0.000447273|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/fft/_pocketfft/realtransforms.py:1 <module>
(call)|         1|     0.145613|     0.145613|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/fft/_pocketfft/__init__.py:1 <module>
(call)|         1|     0.152806|     0.152806|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/fft/_helper.py:1 <module>
(call)|         1|  0.000707388|  0.000707388|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/fft/_backend.py:1 <module>
(call)|         1|     0.437185|     0.437185|  0.09%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/fft/__init__.py:72 <module>
(call)|         1|     0.849767|     0.849767|  0.18%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/__init__.py:58 <module>
(call)|         1|     0.165848|     0.165848|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/linalg/blas.py:202 <module>
(call)|         1|   0.00230527|   0.00230527|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/_lib/_util.py:1 <module>
(call)|         1|       0.2236|       0.2236|  0.05%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/linalg/lapack.py:776 <module>
(call)|         1|     0.438971|     0.438971|  0.09%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/linalg/misc.py:1 <module>
(call)|         1|   0.00414348|   0.00414348|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/linalg/flinalg.py:5 <module>
(call)|         1|   0.00140285|   0.00140285|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/linalg/decomp.py:16 <module>
(call)|         1|  0.000458479|  0.000458479|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/linalg/decomp_svd.py:1 <module>
(call)|         1|     0.107867|     0.107867|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/linalg/basic.py:7 <module>
(call)|         1|  0.000402451|  0.000402451|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/linalg/decomp_lu.py:1 <module>
(call)|         1|  0.000458956|  0.000458956|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/linalg/_decomp_ldl.py:1 <module>
(call)|         1|  0.000345469|  0.000345469|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/linalg/decomp_cholesky.py:1 <module>
(call)|         1|    0.0002141|    0.0002141|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/linalg/decomp_qr.py:1 <module>
(call)|         1|  0.000414133|  0.000414133|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/linalg/_decomp_qz.py:1 <module>
(call)|         1|   0.00161266|   0.00161266|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/linalg/decomp_schur.py:1 <module>
(call)|         1|  0.000254869|  0.000254869|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/linalg/_decomp_polar.py:1 <module>
(call)|         1|  0.000609636|  0.000609636|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/linalg/special_matrices.py:1 <module>
(call)|         1|  0.000374556|  0.000374556|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/linalg/_expm_frechet.py:1 <module>
(call)|         1|   0.00033927|   0.00033927|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/linalg/_matfuncs_sqrtm.py:6 <module>
(call)|         1|    0.0436132|    0.0436132|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/linalg/matfuncs.py:5 <module>
(call)|         1|   0.00111747|   0.00111747|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/linalg/_solvers.py:1 <module>
(call)|         1|  0.000101566|  0.000101566|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/linalg/_procrustes.py:4 <module>
(call)|         1|  0.000509739|  0.000509739|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/sputils.py:2 <module>
(call)|         1|   0.00899267|   0.00899267|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/base.py:1 <module>
(call)|         1|   0.00224638|   0.00224638|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/data.py:7 <module>
(call)|         1|  0.000983715|  0.000983715|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/dia.py:1 <module>
(call)|         1|  0.000545025|  0.000545025|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/_index.py:2 <module>
(call)|         1|    0.0215108|    0.0215108|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/compressed.py:1 <module>
(call)|         1|    0.0827322|    0.0827322|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/csr.py:1 <module>
(call)|         1|  0.000698805|  0.000698805|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/csc.py:1 <module>
(call)|         1|    0.0307434|    0.0307434|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/lil.py:2 <module>
(call)|         1|    0.0018208|    0.0018208|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/dok.py:1 <module>
(call)|         1|   0.00117087|   0.00117087|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/coo.py:1 <module>
(call)|         1|   0.00289655|   0.00289655|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/bsr.py:1 <module>
(call)|         1|   0.00114989|   0.00114989|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/construct.py:2 <module>
(call)|         1|  0.000129938|  0.000129938|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/extract.py:2 <module>
(call)|         1|  0.000211477|  0.000211477|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/_matrix_io.py:1 <module>
(call)|         1|  0.000350475|  0.000350475|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/csgraph/_laplacian.py:3 <module>
(call)|         1|    0.0363894|    0.0363894|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/csgraph/_validation.py:1 <module>
(call)|         1|     0.275375|     0.275375|  0.06%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/csgraph/__init__.py:151 <module>
(call)|         1|     0.576386|     0.576386|  0.12%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/__init__.py:219 <module>
(call)|         1|     0.667193|     0.667193|  0.14%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/linalg/_sketches.py:1 <module>
(call)|         1|   0.00041151|   0.00041151|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/linalg/_decomp_cossin.py:2 <module>
(call)|         1|      1.61658|      1.61658|  0.34%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/linalg/__init__.py:192 <module>
(call)|         1|      3.08814|      3.08814|  0.65%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/color/colorconv.py:50 <module>
(call)|         1|   0.00385928|   0.00385928|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/color/rgb_colors.py:1 <module>
(call)|         1|    0.0814872|    0.0814872|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/color/colorlabel.py:1 <module>
(call)|         1|  0.000163317|  0.000163317|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/color/delta_e.py:19 <module>
(call)|         1|      3.18275|      3.18275|  0.67%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/color/__init__.py:1 <module>
(call)|         1|     0.390557|     0.390557|  0.08%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/style/core.py:12 <module>
(call)|         1|     0.394569|     0.394569|  0.08%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/style/__init__.py:1 <module>
(call)|         2|   0.00449967|   0.00224984|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/backends/backend_macosx.py:1 <module>
(call)|         1|    0.0291228|    0.0291228|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/backends/backend_agg.py:21 <module>
(call)|         1|      1.08489|      1.08489|  0.23%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/backends/qt_compat.py:12 <module>
(call)|         1|   0.00399613|   0.00399613|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/backends/qt_editor/_formlayout.py:33 <module>
(call)|         1|      1.09679|      1.09679|  0.23%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/backends/qt_editor/figureoptions.py:6 <module>
(call)|         1|  0.000129223|  0.000129223|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/backends/qt_editor/formsubplottool.py:1 <module>
(call)|         1|  0.000979424|  0.000979424|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/backend_managers.py:1 <module>
(call)|         1|      1.12579|      1.12579|  0.24%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/backends/backend_qt5.py:1 <module>
(call)|         1|      1.16526|      1.16526|  0.24%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/backends/backend_qt5agg.py:3 <module>
(call)|         1|  0.000368357|  0.000368357|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/backends/backend_qt4agg.py:3 <module>
(call)|         1|   0.00951743|   0.00951743|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/backends/backend_cairo.py:7 <module>
(call)|         1|    0.0132999|    0.0132999|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/backends/backend_gtk3agg.py:1 <module>
(call)|         1|  0.000510454|  0.000510454|  0.00%|# /opt/anaconda3/lib/python3.7/tkinter/constants.py:4 <module>
(call)|         1|     0.374583|     0.374583|  0.08%|# /opt/anaconda3/lib/python3.7/tkinter/__init__.py:31 <module>
(call)|         1|  0.000242949|  0.000242949|  0.00%|# /opt/anaconda3/lib/python3.7/tkinter/commondialog.py:11 <module>
(call)|         1|    0.0213909|    0.0213909|  0.00%|# /opt/anaconda3/lib/python3.7/tkinter/messagebox.py:25 <module>
(call)|         1|     0.036314|     0.036314|  0.01%|# /opt/anaconda3/lib/python3.7/tkinter/simpledialog.py:24 <module>
(call)|         1|  0.000281096|  0.000281096|  0.00%|# /opt/anaconda3/lib/python3.7/tkinter/dialog.py:3 <module>
(call)|         1|      0.02069|      0.02069|  0.00%|# /opt/anaconda3/lib/python3.7/tkinter/filedialog.py:13 <module>
(call)|         1|      0.65557|      0.65557|  0.14%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/backends/_backend_tk.py:1 <module>
(call)|         1|     0.660128|     0.660128|  0.14%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/backends/backend_tkagg.py:1 <module>
(call)|         1|   0.00465965|   0.00465965|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/backends/backend_wxagg.py:1 <module>
(call)|         1|      2.38276|      2.38276|  0.50%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/pyplot.py:19 <module>
(call)|         1|      5.99685|      5.99685|  1.26%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/namedtuple.py:1 <module>
(call)|         1|       6.3996|       6.3996|  1.34%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities.py:1 <module>
(call)|         1|  0.000777245|  0.000777245|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptunecontrib/_version.py:12 <module>
(call)|         1|     0.061377|     0.061377|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/neptunecontrib/__init__.py:17 <module>
(call)|         1|  5.05447e-05|  5.05447e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptunecontrib/api/audio.py:16 <module>
(call)|         1|  0.000118017|  0.000118017|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptunecontrib/api/chart.py:17 <module>
(call)|         1|  0.000340939|  0.000340939|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptunecontrib/api/explainers.py:17 <module>
(call)|         1|  3.62396e-05|  3.62396e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptunecontrib/api/html.py:17 <module>
(call)|         1|  3.83854e-05|  3.83854e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptunecontrib/api/table.py:17 <module>
(call)|         1|  0.000741005|  0.000741005|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/joblib/hashing.py:4 <module>
(call)|         1|  0.000254393|  0.000254393|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/joblib/disk.py:3 <module>
(call)|         1|    0.0268064|    0.0268064|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/joblib/logger.py:5 <module>
(call)|         1|    0.0325572|    0.0325572|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/joblib/func_inspect.py:3 <module>
(call)|         1|  0.000248671|  0.000248671|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/joblib/backports.py:3 <module>
(call)|         1|    0.0071106|    0.0071106|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/joblib/compressor.py:1 <module>
(call)|         1|  0.000684023|  0.000684023|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/joblib/numpy_pickle_utils.py:1 <module>
(call)|         1|  0.000725985|  0.000725985|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/joblib/numpy_pickle_compat.py:1 <module>
(call)|         1|    0.0609267|    0.0609267|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/joblib/numpy_pickle.py:1 <module>
(call)|         1|    0.0711784|    0.0711784|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/joblib/_store_backends.py:1 <module>
(call)|         1|     0.166828|     0.166828|  0.04%|# /opt/anaconda3/lib/python3.7/site-packages/joblib/memory.py:5 <module>
(call)|         1|   0.00170207|   0.00170207|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/joblib/_multiprocessing_helpers.py:5 <module>
(call)|         1|   0.00614262|   0.00614262|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/joblib/_deprecated_my_exceptions.py:5 <module>
(call)|         1|    0.0343833|    0.0343833|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/joblib/my_exceptions.py:1 <module>
(call)|         1|   0.00102687|   0.00102687|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/joblib/externals/loky/_base.py:13 <module>
(call)|         1|  0.000157118|  0.000157118|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/joblib/externals/loky/backend/compat_posix.py:7 <module>
(call)|         1|    0.0246801|    0.0246801|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/joblib/externals/loky/backend/compat.py:7 <module>
(call)|         1|      0.05165|      0.05165|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/joblib/externals/loky/backend/process.py:9 <module>
(call)|         1|     0.077549|     0.077549|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/joblib/externals/loky/backend/context.py:13 <module>
(call)|         1|   0.00164366|   0.00164366|  0.00%|# /opt/anaconda3/lib/python3.7/multiprocessing/synchronize.py:11 <module>
(call)|         1|     0.129252|     0.129252|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/joblib/externals/loky/backend/__init__.py:1 <module>
(call)|         1|  0.000588655|  0.000588655|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/joblib/externals/loky/backend/_posix_reduction.py:9 <module>
(call)|         1|   0.00696588|   0.00696588|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/joblib/externals/cloudpickle/cloudpickle.py:42 <module>
(call)|         1|    0.0339978|    0.0339978|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/joblib/externals/cloudpickle/__init__.py:1 <module>
(call)|         1|     0.110337|     0.110337|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/joblib/externals/loky/backend/reduction.py:11 <module>
(call)|         1|   0.00120878|   0.00120878|  0.00%|# /opt/anaconda3/lib/python3.7/multiprocessing/queues.py:10 <module>
(call)|         1|   0.00520658|   0.00520658|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/joblib/externals/loky/backend/queues.py:12 <module>
(call)|         1|  0.000173807|  0.000173807|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/joblib/externals/loky/backend/utils.py:1 <module>
(call)|         1|   0.00201941|   0.00201941|  0.00%|# /opt/anaconda3/lib/python3.7/concurrent/futures/process.py:44 <module>
(call)|         1|    0.0660453|    0.0660453|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/joblib/externals/loky/process_executor.py:56 <module>
(call)|         1|    0.0988765|    0.0988765|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/joblib/externals/loky/reusable_executor.py:6 <module>
(call)|         1|   0.00031352|   0.00031352|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/joblib/externals/loky/cloudpickle_wrapper.py:1 <module>
(call)|         1|     0.441881|     0.441881|  0.09%|# /opt/anaconda3/lib/python3.7/site-packages/joblib/externals/loky/__init__.py:5 <module>
(call)|         1|  0.000391006|  0.000391006|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/joblib/externals/loky/backend/spawn.py:9 <module>
(call)|         1|    0.0270593|    0.0270593|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/joblib/externals/loky/backend/resource_tracker.py:42 <module>
(call)|         1|     0.624776|     0.624776|  0.13%|# /opt/anaconda3/lib/python3.7/site-packages/joblib/_memmapping_reducer.py:3 <module>
(call)|         1|   0.00271344|   0.00271344|  0.00%|# /opt/anaconda3/lib/python3.7/multiprocessing/pool.py:10 <module>
(call)|         1|     0.687459|     0.687459|  0.14%|# /opt/anaconda3/lib/python3.7/site-packages/joblib/pool.py:11 <module>
(call)|         1|  0.000380516|  0.000380516|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/joblib/executor.py:6 <module>
(call)|         1|     0.973018|     0.973018|  0.20%|# /opt/anaconda3/lib/python3.7/site-packages/joblib/_parallel_backends.py:3 <module>
(call)|         1|     0.984538|     0.984538|  0.21%|# /opt/anaconda3/lib/python3.7/site-packages/joblib/parallel.py:3 <module>
(call)|         1|      1.16215|      1.16215|  0.24%|# /opt/anaconda3/lib/python3.7/site-packages/joblib/__init__.py:91 <module>
(call)|         1|      1.19837|      1.19837|  0.25%|# /opt/anaconda3/lib/python3.7/site-packages/neptunecontrib/api/utils.py:16 <module>
(call)|         1|   5.8651e-05|   5.8651e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptunecontrib/api/video.py:16 <module>
(call)|         1|      1.22461|      1.22461|  0.26%|# /opt/anaconda3/lib/python3.7/site-packages/neptunecontrib/api/__init__.py:17 <module>
(call)|         1|      23.2275|      23.2275|  4.88%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_neptune.py:1 <module>
(call)|         1|   0.00159287|   0.00159287|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/PIL/ImageColor.py:20 <module>
(call)|         1|   0.00598788|   0.00598788|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/PIL/ImageDraw.py:33 <module>
(call)|         1|  6.67572e-05|  6.67572e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/models/utils.py:1 <module>
(call)|         1|    0.0216076|    0.0216076|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/models/alexnet.py:1 <module>
(call)|         1|  0.000813961|  0.000813961|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/models/resnet.py:1 <module>
(call)|         1|  0.000604391|  0.000604391|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/models/vgg.py:1 <module>
(call)|         1|  0.000324249|  0.000324249|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/models/squeezenet.py:1 <module>
(call)|         1|    0.0026648|    0.0026648|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/models/inception.py:1 <module>
(call)|         1|  0.000424147|  0.000424147|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/utils/checkpoint.py:1 <module>
(call)|         1|    0.0260406|    0.0260406|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/models/densenet.py:1 <module>
(call)|         1|   0.00231385|   0.00231385|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/models/googlenet.py:1 <module>
(call)|         1|  0.000514269|  0.000514269|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/models/mobilenet.py:1 <module>
(call)|         1|  0.000663042|  0.000663042|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/models/mnasnet.py:1 <module>
(call)|         1|  0.000527382|  0.000527382|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/models/shufflenetv2.py:1 <module>
(call)|         1|  0.000339746|  0.000339746|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/models/_utils.py:1 <module>
(call)|         1|  0.000244856|  0.000244856|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/models/segmentation/_utils.py:1 <module>
(call)|         1|   0.00388861|   0.00388861|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/models/segmentation/deeplabv3.py:1 <module>
(call)|         1|  0.000325203|  0.000325203|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/models/segmentation/fcn.py:1 <module>
(call)|         1|    0.0149028|    0.0149028|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/models/segmentation/segmentation.py:1 <module>
(call)|         1|    0.0187519|    0.0187519|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/models/segmentation/__init__.py:1 <module>
(call)|         1|  0.000333786|  0.000333786|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/ops/boxes.py:1 <module>
(call)|         1|  0.000117779|  0.000117779|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/ops/new_empty_tensor.py:1 <module>
(call)|         1|  0.000439167|  0.000439167|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/ops/deform_conv.py:1 <module>
(call)|         1|  0.000124454|  0.000124454|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/ops/_utils.py:1 <module>
(call)|         1|    0.0044663|    0.0044663|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/ops/roi_align.py:1 <module>
(call)|         1|  0.000314474|  0.000314474|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/ops/roi_pool.py:1 <module>
(call)|         1|  0.000336885|  0.000336885|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/ops/ps_roi_align.py:1 <module>
(call)|         1|   0.00029397|   0.00029397|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/ops/ps_roi_pool.py:1 <module>
(call)|         1|     0.223396|     0.223396|  0.05%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/ops/poolers.py:2 <module>
(call)|         1|  0.000538588|  0.000538588|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/ops/feature_pyramid_network.py:1 <module>
(call)|         1|  5.22137e-05|  5.22137e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/ops/_register_onnx_ops.py:1 <module>
(call)|         1|    0.0106254|    0.0106254|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/onnx/utils.py:1 <module>
(call)|         1|    0.0412412|    0.0412412|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torch/onnx/symbolic_helper.py:1 <module>
(call)|         1|    0.0961411|    0.0961411|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/torch/onnx/symbolic_opset9.py:1 <module>
(call)|         1|  0.000413418|  0.000413418|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/onnx/symbolic_opset7.py:1 <module>
(call)|         1|   0.00347614|   0.00347614|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/onnx/symbolic_opset8.py:1 <module>
(call)|         1|   0.00362015|   0.00362015|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/onnx/symbolic_opset10.py:1 <module>
(call)|         1|   0.00798678|   0.00798678|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/onnx/symbolic_opset11.py:1 <module>
(call)|         1|  0.000339031|  0.000339031|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/onnx/symbolic_opset12.py:1 <module>
(call)|         1|     0.134989|     0.134989|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/torch/onnx/symbolic_registry.py:1 <module>
(call)|         1|      0.70908|      0.70908|  0.15%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/ops/__init__.py:1 <module>
(call)|         1|  0.000874996|  0.000874996|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/ops/misc.py:1 <module>
(call)|         1|  0.000451803|  0.000451803|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/models/detection/generalized_rcnn.py:4 <module>
(call)|         1|        1.047|        1.047|  0.22%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/models/detection/_utils.py:1 <module>
(call)|         1|    0.0612824|    0.0612824|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/models/detection/image_list.py:2 <module>
(call)|         1|      1.15729|      1.15729|  0.24%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/models/detection/rpn.py:2 <module>
(call)|         1|      2.55943|      2.55943|  0.54%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/models/detection/roi_heads.py:1 <module>
(call)|         1|  0.000983477|  0.000983477|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/models/detection/transform.py:1 <module>
(call)|         1|  0.000838518|  0.000838518|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/models/detection/backbone_utils.py:1 <module>
(call)|         1|      4.45808|      4.45808|  0.94%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/models/detection/faster_rcnn.py:1 <module>
(call)|         1|  0.000834227|  0.000834227|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/models/detection/mask_rcnn.py:1 <module>
(call)|         1|  0.000750303|  0.000750303|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/models/detection/keypoint_rcnn.py:1 <module>
(call)|         1|      4.47097|      4.47097|  0.94%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/models/detection/__init__.py:1 <module>
(call)|         1|   0.00115776|   0.00115776|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/models/video/resnet.py:1 <module>
(call)|         1|   0.00521994|   0.00521994|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/models/video/__init__.py:1 <module>
(call)|         1|  9.98974e-05|  9.98974e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/models/quantization/utils.py:1 <module>
(call)|         1|   0.00380397|   0.00380397|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/models/quantization/mobilenet.py:1 <module>
(call)|         1|  0.000790834|  0.000790834|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/models/quantization/resnet.py:1 <module>
(call)|         1|   0.00067687|   0.00067687|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/models/quantization/googlenet.py:1 <module>
(call)|         1|   0.00134778|   0.00134778|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/models/quantization/inception.py:1 <module>
(call)|         1|  0.000659466|  0.000659466|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/models/quantization/shufflenetv2.py:1 <module>
(call)|         1|    0.0244639|    0.0244639|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/models/quantization/__init__.py:1 <module>
(call)|         1|      4.80306|      4.80306|  1.01%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/models/__init__.py:1 <module>
(call)|         1|  0.000277758|  0.000277758|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/datasets/vision.py:1 <module>
(call)|         1|  4.93526e-05|  4.93526e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/utils/model_zoo.py:2 <module>
(call)|         1|   0.00382185|   0.00382185|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/datasets/utils.py:1 <module>
(call)|         1|    0.0115292|    0.0115292|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/datasets/lsun.py:1 <module>
(call)|         1|  0.000459433|  0.000459433|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/datasets/folder.py:1 <module>
(call)|         1|  0.000337124|  0.000337124|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/datasets/coco.py:1 <module>
(call)|         1|  0.000731707|  0.000731707|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/datasets/cifar.py:1 <module>
(call)|         1|  0.000515699|  0.000515699|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/datasets/stl10.py:1 <module>
(call)|         1|   0.00171304|   0.00171304|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/datasets/mnist.py:1 <module>
(call)|         1|  0.000385523|  0.000385523|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/datasets/svhn.py:1 <module>
(call)|         1|  0.000795603|  0.000795603|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/datasets/phototour.py:1 <module>
(call)|         1|  0.000455856|  0.000455856|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/PIL/ImageOps.py:20 <module>
(call)|         1|   0.00266099|   0.00266099|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/PIL/ImageFilter.py:18 <module>
(call)|         1|  0.000243187|  0.000243187|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/PIL/ImageStat.py:24 <module>
(call)|         1|    0.0103354|    0.0103354|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/PIL/ImageEnhance.py:21 <module>
(call)|         1|    0.0297952|    0.0297952|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/transforms/functional.py:1 <module>
(call)|         1|    0.0459299|    0.0459299|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/transforms/transforms.py:1 <module>
(call)|         1|    0.0504224|    0.0504224|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/transforms/__init__.py:1 <module>
(call)|         1|    0.0556445|    0.0556445|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/datasets/fakedata.py:1 <module>
(call)|         1|  0.000350237|  0.000350237|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/datasets/semeion.py:1 <module>
(call)|         1|  0.000415325|  0.000415325|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/datasets/omniglot.py:1 <module>
(call)|         1|  0.000381947|  0.000381947|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/datasets/sbu.py:1 <module>
(call)|         1|    0.0301402|    0.0301402|  0.01%|# /opt/anaconda3/lib/python3.7/_markupbase.py:6 <module>
(call)|         1|     0.208678|     0.208678|  0.04%|# /opt/anaconda3/lib/python3.7/html/parser.py:1 <module>
(call)|         1|     0.212235|     0.212235|  0.04%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/datasets/flickr.py:1 <module>
(call)|         1|    0.0277035|    0.0277035|  0.01%|# /opt/anaconda3/lib/python3.7/xml/etree/ElementPath.py:59 <module>
(call)|         1|    0.0400002|    0.0400002|  0.01%|# /opt/anaconda3/lib/python3.7/xml/etree/ElementTree.py:34 <module>
(call)|         1|    0.0479245|    0.0479245|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/datasets/voc.py:1 <module>
(call)|         1|   0.00377822|   0.00377822|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/datasets/cityscapes.py:1 <module>
(call)|         1|  0.000589371|  0.000589371|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/datasets/imagenet.py:1 <module>
(call)|         1|  0.000521421|  0.000521421|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/datasets/caltech.py:1 <module>
(call)|         1|  0.000497818|  0.000497818|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/datasets/celeba.py:1 <module>
(call)|         1|  0.000589132|  0.000589132|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/datasets/sbd.py:1 <module>
(call)|         1|  0.000340939|  0.000340939|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/datasets/usps.py:1 <module>
(call)|         1|     0.138809|     0.138809|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/io/_video_opt.py:2 <module>
(call)|         1|   0.00518227|   0.00518227|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/io/video.py:1 <module>
(call)|         1|     0.152389|     0.152389|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/io/__init__.py:1 <module>
(call)|         1|     0.182977|     0.182977|  0.04%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/datasets/video_utils.py:1 <module>
(call)|         1|     0.186839|     0.186839|  0.04%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/datasets/kinetics.py:1 <module>
(call)|         1|  0.000477791|  0.000477791|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/datasets/hmdb51.py:1 <module>
(call)|         1|  0.000485182|  0.000485182|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/datasets/ucf101.py:1 <module>
(call)|         1|     0.609451|     0.609451|  0.13%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/datasets/__init__.py:1 <module>
(call)|         1|  5.50747e-05|  5.50747e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/utils.py:1 <module>
(call)|         1|     0.222604|     0.222604|  0.05%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/extension.py:1 <module>
(call)|         1|  0.000317097|  0.000317097|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/version.py:1 <module>
(call)|         1|      5.70981|      5.70981|  1.20%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/__init__.py:1 <module>
(call)|         1|  7.58171e-05|  7.58171e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/ndimage/_ni_support.py:31 <module>
(call)|         1|  0.000122309|  0.000122309|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/_lib/doccer.py:2 <module>
(call)|         1|    0.0331905|    0.0331905|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/ndimage/_ni_docstrings.py:1 <module>
(call)|         1|     0.154261|     0.154261|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/ndimage/filters.py:31 <module>
(call)|         1|  0.000670433|  0.000670433|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/ndimage/fourier.py:31 <module>
(call)|         1|    0.0172615|    0.0172615|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/ndimage/interpolation.py:31 <module>
(call)|         1|   0.00185776|   0.00185776|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/ndimage/morphology.py:31 <module>
(call)|         1|    0.0587924|    0.0587924|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/ndimage/measurements.py:31 <module>
(call)|         1|     0.338094|     0.338094|  0.07%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/ndimage/__init__.py:119 <module>
(call)|         1|  4.74453e-05|  4.74453e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/_shared/_geometry.py:1 <module>
(call)|         1|    0.0760341|    0.0760341|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/draw/draw.py:1 <module>
(call)|         1|  0.000285864|  0.000285864|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/special/sf_error.py:1 <module>
(call)|         1|   0.00686502|   0.00686502|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/special/orthogonal.py:72 <module>
(call)|         1|     0.122009|     0.122009|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/special/_basic.py:5 <module>
(call)|         1|  0.000137568|  0.000137568|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/special/_logsumexp.py:1 <module>
(call)|         1|  0.000271082|  0.000271082|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/special/spfun_stats.py:33 <module>
(call)|         1|    0.0056076|    0.0056076|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/special/_ellip_harm.py:1 <module>
(call)|         1|  9.46522e-05|  9.46522e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/special/_lambertw.py:1 <module>
(call)|         1|  0.000104666|  0.000104666|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/special/_spherical_bessel.py:1 <module>
(call)|         1|     0.414395|     0.414395|  0.09%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/special/__init__.py:629 <module>
(call)|         1|     0.439528|     0.439528|  0.09%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/draw/draw3d.py:1 <module>
(call)|         1|  0.000571728|  0.000571728|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/draw/_random_shapes.py:1 <module>
(call)|         1|   0.00025034|   0.00025034|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/draw/_polygon2mask.py:1 <module>
(call)|         1|  3.55244e-05|  3.55244e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/draw/draw_nd.py:1 <module>
(call)|         1|     0.586889|     0.586889|  0.12%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/draw/__init__.py:1 <module>
(call)|         1|     0.620845|     0.620845|  0.13%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/morphology/selem.py:1 <module>
(call)|         1|     0.634586|     0.634586|  0.13%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/morphology/misc.py:1 <module>
(call)|         1|       1.0694|       1.0694|  0.22%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/morphology/binary.py:3 <module>
(call)|         1|   0.00172162|   0.00172162|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/morphology/grey.py:3 <module>
(call)|         1|    0.0616388|    0.0616388|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/measure/_find_contours.py:1 <module>
(call)|         1|  0.000374079|  0.000374079|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/measure/_marching_cubes_lewiner_luts.py:6 <module>
(call)|         1|    0.0544622|    0.0544622|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/measure/_marching_cubes_lewiner.py:1 <module>
(call)|         1|    0.0426087|    0.0426087|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/measure/_marching_cubes_classic.py:1 <module>
(call)|         1|    0.0233943|    0.0233943|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/measure/_label.py:1 <module>
(call)|         1|   0.00932503|   0.00932503|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/measure/_moments.py:1 <module>
(call)|         1|    0.0719182|    0.0719182|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/measure/_regionprops.py:1 <module>
(call)|         1|  4.00543e-05|  4.00543e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/metrics/_contingency_table.py:1 <module>
(call)|         1|   0.00353765|   0.00353765|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/metrics/_adapted_rand_error.py:1 <module>
(call)|         1|   0.00019455|   0.00019455|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/metrics/_variation_of_information.py:1 <module>
(call)|         1|  0.000172377|  0.000172377|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/metrics/simple_metrics.py:1 <module>
(call)|         1|  0.000360012|  0.000360012|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/metrics/_structural_similarity.py:1 <module>
(call)|         1|    0.0228839|    0.0228839|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/metrics/__init__.py:1 <module>
(call)|         1|    0.0416186|    0.0416186|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/measure/simple_metrics.py:1 <module>
(call)|         1|  0.000131845|  0.000131845|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/measure/_structural_similarity.py:1 <module>
(call)|         1|   0.00499582|   0.00499582|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/signal/windows/windows.py:1 <module>
(call)|         1|   0.00945115|   0.00945115|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/signal/windows/__init__.py:39 <module>
(call)|         1|  0.000427485|  0.000427485|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/signal/waveforms.py:7 <module>
(call)|         1|    0.0252399|    0.0252399|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/signal/_max_len_seq.py:4 <module>
(call)|         1|    0.0453739|    0.0453739|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/signal/_upfirdn.py:34 <module>
(call)|         1|  0.000829697|  0.000829697|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/signal/bsplines.py:1 <module>
(call)|         1|   0.00448442|   0.00448442|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/linesearch.py:13 <module>
(call)|         1|   0.00260425|   0.00260425|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/linalg/interface.py:41 <module>
(call)|         1|  0.000336409|  0.000336409|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/linalg/isolve/utils.py:1 <module>
(call)|         1|   0.00474572|   0.00474572|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/_lib/decorator.py:33 <module>
(call)|         1|    0.0280161|    0.0280161|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/_lib/_threadsafety.py:1 <module>
(call)|         1|     0.145676|     0.145676|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/linalg/isolve/iterative.py:1 <module>
(call)|         1|  0.000321388|  0.000321388|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/linalg/isolve/minres.py:1 <module>
(call)|         1|  0.000431299|  0.000431299|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/linalg/isolve/_gcrotmk.py:4 <module>
(call)|         1|   0.00418568|   0.00418568|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/linalg/isolve/lgmres.py:4 <module>
(call)|         1|  0.000248194|  0.000248194|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/linalg/isolve/lsqr.py:50 <module>
(call)|         1|  0.000314236|  0.000314236|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/linalg/isolve/lsmr.py:17 <module>
(call)|         1|     0.177046|     0.177046|  0.04%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/linalg/isolve/__init__.py:1 <module>
(call)|         1|    0.0110447|    0.0110447|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/linalg/dsolve/linsolve.py:1 <module>
(call)|         1|  0.000999212|  0.000999212|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/linalg/dsolve/_add_newdocs.py:1 <module>
(call)|         1|    0.0232353|    0.0232353|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/linalg/dsolve/__init__.py:52 <module>
(call)|         1|  0.000613451|  0.000613451|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/linalg/eigen/lobpcg/lobpcg.py:18 <module>
(call)|         1|   0.00786304|   0.00786304|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/linalg/eigen/lobpcg/__init__.py:9 <module>
(call)|         1|    0.0408161|    0.0408161|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/linalg/eigen/arpack/arpack.py:7 <module>
(call)|         1|    0.0473983|    0.0473983|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/linalg/eigen/arpack/__init__.py:19 <module>
(call)|         1|    0.0530043|    0.0530043|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/linalg/eigen/__init__.py:8 <module>
(call)|         1|   0.00161624|   0.00161624|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/linalg/_expm_multiply.py:2 <module>
(call)|         1|   0.00771666|   0.00771666|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/linalg/matfuncs.py:3 <module>
(call)|         1|  0.000510931|  0.000510931|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/linalg/_onenormest.py:2 <module>
(call)|         1|  0.000263691|  0.000263691|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/linalg/_norm.py:3 <module>
(call)|         1|     0.293132|     0.293132|  0.06%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/linalg/__init__.py:109 <module>
(call)|         1|     0.409613|     0.409613|  0.09%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_numdiff.py:1 <module>
(call)|         1|   0.00165892|   0.00165892|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_hessian_update_strategy.py:1 <module>
(call)|         1|   0.00616026|   0.00616026|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_differentiable_functions.py:1 <module>
(call)|         1|     0.548293|     0.548293|  0.12%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/optimize.py:20 <module>
(call)|         1|  0.000323296|  0.000323296|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_trustregion.py:1 <module>
(call)|         1|   0.00403094|   0.00403094|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_trustregion_dogleg.py:1 <module>
(call)|         1|  0.000220299|  0.000220299|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_trustregion_ncg.py:1 <module>
(call)|         1|    0.0106454|    0.0106454|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_trlib/__init__.py:1 <module>
(call)|         1|     0.015352|     0.015352|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_trustregion_krylov.py:1 <module>
(call)|         1|  0.000492334|  0.000492334|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_trustregion_exact.py:1 <module>
(call)|         1|   0.00146556|   0.00146556|  0.00%|# /opt/anaconda3/lib/python3.7/unittest/util.py:1 <module>
(call)|         1|    0.0365958|    0.0365958|  0.01%|# /opt/anaconda3/lib/python3.7/unittest/result.py:1 <module>
(call)|         1|   0.00841093|   0.00841093|  0.00%|# /opt/anaconda3/lib/python3.7/unittest/case.py:1 <module>
(call)|         1|   0.00120807|   0.00120807|  0.00%|# /opt/anaconda3/lib/python3.7/unittest/suite.py:1 <module>
(call)|         1|     0.012897|     0.012897|  0.00%|# /opt/anaconda3/lib/python3.7/unittest/loader.py:1 <module>
(call)|         1|  0.000317812|  0.000317812|  0.00%|# /opt/anaconda3/lib/python3.7/unittest/signals.py:1 <module>
(call)|         1|    0.0232592|    0.0232592|  0.00%|# /opt/anaconda3/lib/python3.7/unittest/runner.py:1 <module>
(call)|         1|    0.0510674|    0.0510674|  0.01%|# /opt/anaconda3/lib/python3.7/unittest/main.py:1 <module>
(call)|         1|     0.218215|     0.218215|  0.05%|# /opt/anaconda3/lib/python3.7/unittest/__init__.py:45 <module>
(call)|         1|   0.00822949|   0.00822949|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/testing/_private/utils.py:4 <module>
(call)|         1|  0.000267982|  0.000267982|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/testing/_private/decorators.py:15 <module>
(call)|         1|  0.000415802|  0.000415802|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/testing/_private/nosetester.py:6 <module>
(call)|         1|     0.326049|     0.326049|  0.07%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/testing/__init__.py:7 <module>
(call)|         1|     0.388009|     0.388009|  0.08%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_constraints.py:1 <module>
(call)|         1|   0.00528622|   0.00528622|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_trustregion_constr/projections.py:1 <module>
(call)|         1|  0.000439882|  0.000439882|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_trustregion_constr/qp_subproblem.py:1 <module>
(call)|         1|    0.0183725|    0.0183725|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_trustregion_constr/equality_constrained_sqp.py:1 <module>
(call)|         1|  0.000334978|  0.000334978|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_trustregion_constr/canonical_constraint.py:1 <module>
(call)|         1|   0.00053525|   0.00053525|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_trustregion_constr/tr_interior_point.py:13 <module>
(call)|         1|  0.000389576|  0.000389576|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_trustregion_constr/report.py:1 <module>
(call)|         1|     0.433205|     0.433205|  0.09%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_trustregion_constr/minimize_trustregion_constr.py:1 <module>
(call)|         1|     0.438105|     0.438105|  0.09%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_trustregion_constr/__init__.py:1 <module>
(call)|         1|    0.0205846|    0.0205846|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/lbfgsb.py:9 <module>
(call)|         1|   0.00405431|   0.00405431|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/tnc.py:33 <module>
(call)|         1|   0.00645709|   0.00645709|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/cobyla.py:11 <module>
(call)|         1|    0.0355093|    0.0355093|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/slsqp.py:14 <module>
(call)|         1|     0.646259|     0.646259|  0.14%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_minimize.py:8 <module>
(call)|         1|   0.00105667|   0.00105667|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_lsq/common.py:1 <module>
(call)|         1|   0.00762916|   0.00762916|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_lsq/trf.py:95 <module>
(call)|         1|  0.000519037|  0.000519037|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_lsq/dogbox.py:42 <module>
(call)|         1|    0.0174992|    0.0174992|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_lsq/least_squares.py:1 <module>
(call)|         1|    0.0539896|    0.0539896|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_lsq/trf_linear.py:2 <module>
(call)|         1|  0.000377178|  0.000377178|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_lsq/bvls.py:1 <module>
(call)|         1|    0.0622959|    0.0622959|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_lsq/lsq_linear.py:1 <module>
(call)|         1|    0.0899823|    0.0899823|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_lsq/__init__.py:1 <module>
(call)|         1|     0.125072|     0.125072|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/minpack.py:1 <module>
(call)|         1|  0.000634909|  0.000634909|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_spectral.py:3 <module>
(call)|         1|    0.0226638|    0.0226638|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/nonlin.py:106 <module>
(call)|         1|     0.175098|     0.175098|  0.04%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_root.py:7 <module>
(call)|         1|    0.0596952|    0.0596952|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/zeros.py:1 <module>
(call)|         1|     0.064122|     0.064122|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_root_scalar.py:8 <module>
(call)|         1|    0.0068891|    0.0068891|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_nnls.py:1 <module>
(call)|         1|   0.00124717|   0.00124717|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_basinhopping.py:3 <module>
(call)|         1|  0.000294685|  0.000294685|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_remove_redundancy.py:4 <module>
(call)|         1|   0.00950003|   0.00950003|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_linprog_util.py:3 <module>
(call)|         1|    0.0483878|    0.0483878|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_linprog_ip.py:18 <module>
(call)|         1|  0.000361204|  0.000361204|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_linprog_simplex.py:29 <module>
(call)|         1|    0.0331903|    0.0331903|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_linprog_rs.py:17 <module>
(call)|         1|     0.142946|     0.142946|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_linprog.py:16 <module>
(call)|         1|   0.00360751|   0.00360751|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_lsap.py:12 <module>
(call)|         1|   0.00234485|   0.00234485|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_differentialevolution.py:4 <module>
(call)|         1|   0.00115991|   0.00115991|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/spatial/kdtree.py:3 <module>
(call)|         1|  6.46114e-05|  6.46114e-05|  0.00%|# /opt/anaconda3/lib/python3.7/multiprocessing/context.py:40 cpu_count
(call)|         1|   0.00621915|   0.00621915|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/spatial/_spherical_voronoi.py:6 <module>
(call)|         1|    0.0065918|    0.0065918|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/spatial/_plotutils.py:1 <module>
(call)|         1|  9.63211e-05|  9.63211e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/spatial/_procrustes.py:6 <module>
(call)|         1|     0.019027|     0.019027|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/spatial/distance.py:72 <module>
(call)|         1|    0.0230875|    0.0230875|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/spatial/_geometric_slerp.py:1 <module>
(call)|         1|    0.0607989|    0.0607989|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/constants/codata.py:51 <module>
(call)|         1|   0.00212622|   0.00212622|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/constants/constants.py:8 <module>
(call)|         1|    0.0966146|    0.0966146|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/constants/__init__.py:317 <module>
(call)|         1|     0.119293|     0.119293|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/spatial/transform/_rotation_groups.py:1 <module>
(call)|         1|     0.125155|     0.125155|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/spatial/transform/rotation.py:1 <module>
(call)|         1|   0.00038743|   0.00038743|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/spatial/transform/_rotation_spline.py:1 <module>
(call)|         1|     0.133937|     0.133937|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/spatial/transform/__init__.py:18 <module>
(call)|         1|     0.280074|     0.280074|  0.06%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/spatial/__init__.py:94 <module>
(call)|         1|  0.000138044|  0.000138044|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_shgo_lib/sobol_seq.py:21 <module>
(call)|         1|  0.000887632|  0.000887632|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_shgo_lib/triangulation.py:1 <module>
(call)|         1|     0.301187|     0.301187|  0.06%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_shgo.py:3 <module>
(call)|         1|   0.00136805|   0.00136805|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_dual_annealing.py:8 <module>
(call)|         1|       1.9985|       1.9985|  0.42%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/__init__.py:385 <module>
(call)|         1|       2.0217|       2.0217|  0.42%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/signal/filter_design.py:2 <module>
(call)|         1|   0.00100756|   0.00100756|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/signal/fir_filter_design.py:2 <module>
(call)|         1|   0.00148058|   0.00148058|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/integrate/_quadrature.py:1 <module>
(call)|         1|   0.00902677|   0.00902677|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/integrate/odepack.py:3 <module>
(call)|         1|   0.00539446|   0.00539446|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/integrate/quadpack.py:3 <module>
(call)|         1|    0.0443175|    0.0443175|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/integrate/_ode.py:39 <module>
(call)|         1|   0.00100613|   0.00100613|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/integrate/_bvp.py:1 <module>
(call)|         1|  0.000645399|  0.000645399|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/integrate/_ivp/common.py:1 <module>
(call)|         1|  0.000335932|  0.000335932|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/integrate/_ivp/base.py:1 <module>
(call)|         1|   0.00986862|   0.00986862|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/integrate/_ivp/bdf.py:1 <module>
(call)|         1|   0.00135589|   0.00135589|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/integrate/_ivp/radau.py:1 <module>
(call)|         1|   0.00290227|   0.00290227|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/integrate/_ivp/dop853_coefficients.py:1 <module>
(call)|         1|   0.00815129|   0.00815129|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/integrate/_ivp/rk.py:1 <module>
(call)|         1|  0.000589609|  0.000589609|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/integrate/_ivp/lsoda.py:1 <module>
(call)|         1|     0.035111|     0.035111|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/integrate/_ivp/ivp.py:1 <module>
(call)|         1|     0.066412|     0.066412|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/integrate/_ivp/__init__.py:1 <module>
(call)|         1|  0.000947475|  0.000947475|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/integrate/_quad_vec.py:1 <module>
(call)|         1|     0.228275|     0.228275|  0.05%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/integrate/__init__.py:89 <module>
(call)|         1|    0.0400212|    0.0400212|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/interpolate/_fitpack_impl.py:22 <module>
(call)|         1|    0.0597832|    0.0597832|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/interpolate/_bsplines.py:1 <module>
(call)|         1|     0.108619|     0.108619|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/interpolate/fitpack.py:1 <module>
(call)|         1|  0.000673532|  0.000673532|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/interpolate/polyint.py:1 <module>
(call)|         1|   0.00400925|   0.00400925|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/interpolate/fitpack2.py:7 <module>
(call)|         1|      0.14091|      0.14091|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/interpolate/interpolate.py:1 <module>
(call)|         1|  0.000420094|  0.000420094|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/interpolate/rbf.py:45 <module>
(call)|         1|    0.0011332|    0.0011332|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/interpolate/_cubic.py:1 <module>
(call)|         1|  0.000257254|  0.000257254|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/interpolate/ndgriddata.py:6 <module>
(call)|         1|  0.000207901|  0.000207901|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/interpolate/_pade.py:1 <module>
(call)|         1|     0.189557|     0.189557|  0.04%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/interpolate/__init__.py:164 <module>
(call)|         1|   0.00050354|   0.00050354|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/signal/lti_conversion.py:4 <module>
(call)|         1|     0.450402|     0.450402|  0.09%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/signal/ltisys.py:4 <module>
(call)|         1|  7.05719e-05|  7.05719e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/signal/_arraytools.py:3 <module>
(call)|         1|    0.0148075|    0.0148075|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/signal/signaltools.py:4 <module>
(call)|         1|  0.000341892|  0.000341892|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/signal/_savitzky_golay.py:1 <module>
(call)|         1|     0.112207|     0.112207|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/signal/spectral.py:2 <module>
(call)|         1|  0.000550032|  0.000550032|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/signal/wavelets.py:1 <module>
(call)|         1|   0.00174403|   0.00174403|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/stats/_distr_params.py:3 <module>
(call)|         1|    0.0015831|    0.0015831|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/misc/doccer.py:2 <module>
(call)|         1|  0.000260115|  0.000260115|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/misc/common.py:4 <module>
(call)|         1|    0.0096209|    0.0096209|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/misc/__init__.py:19 <module>
(call)|         1|  0.000214815|  0.000214815|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/stats/_constants.py:4 <module>
(call)|         1|    0.0524223|    0.0524223|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/stats/_distn_infrastructure.py:5 <module>
(call)|         1|  6.81877e-05|  6.81877e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/stats/_rvs_sampling.py:1 <module>
(call)|         1|   0.00141048|   0.00141048|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/stats/_tukeylambda_stats.py:1 <module>
(call)|         1|   0.00062871|   0.00062871|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/stats/_ksstats.py:68 <module>
(call)|         1|      1.95167|      1.95167|  0.41%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/stats/_continuous_distns.py:6 <module>
(call)|         1|     0.245045|     0.245045|  0.05%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/stats/_discrete_distns.py:5 <module>
(call)|         1|      2.26702|      2.26702|  0.48%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/stats/distributions.py:8 <module>
(call)|         1|   0.00158238|   0.00158238|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/stats/_stats_mstats_common.py:1 <module>
(call)|         1|     0.031116|     0.031116|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/stats/mstats_basic.py:4 <module>
(call)|         1|   0.00338078|   0.00338078|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/stats/_wilcoxon_data.py:1 <module>
(call)|         1|   0.00799012|   0.00799012|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/stats/_hypotests.py:1 <module>
(call)|         1|      2.37874|      2.37874|  0.50%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/stats/stats.py:164 <module>
(call)|         1|  0.000267267|  0.000267267|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/stats/contingency.py:2 <module>
(call)|         1|    0.0247955|    0.0247955|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/stats/morestats.py:1 <module>
(call)|         1|   0.00344467|   0.00344467|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/stats/_binned_statistic.py:1 <module>
(call)|         1|   0.00561929|   0.00561929|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/stats/kde.py:21 <module>
(call)|         1|  0.000874281|  0.000874281|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/stats/mstats_extras.py:4 <module>
(call)|         1|   0.00617576|   0.00617576|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/stats/mstats.py:130 <module>
(call)|         1|    0.0750418|    0.0750418|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/stats/_multivariate.py:4 <module>
(call)|         1|      2.54579|      2.54579|  0.53%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/stats/__init__.py:387 <module>
(call)|         1|      2.55663|      2.55663|  0.54%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/signal/_peak_finding.py:3 <module>
(call)|         1|      5.47681|      5.47681|  1.15%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/signal/__init__.py:288 <module>
(call)|         1|      5.50649|      5.50649|  1.16%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/measure/_polygon.py:1 <module>
(call)|         1|    0.0577302|    0.0577302|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/measure/pnpoly.py:1 <module>
(call)|         1|  0.000103951|  0.000103951|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/measure/profile.py:1 <module>
(call)|         1|  0.000918865|  0.000918865|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/measure/fit.py:1 <module>
(call)|         1|   0.00010252|   0.00010252|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/measure/block.py:1 <module>
(call)|         1|  0.000124931|  0.000124931|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/measure/entropy.py:1 <module>
(call)|         1|      5.93062|      5.93062|  1.25%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/measure/__init__.py:1 <module>
(call)|         1|  9.15527e-05|  9.15527e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/_shared/fft.py:7 <module>
(call)|         1|   0.00438643|   0.00438643|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/filters/lpi_filter.py:4 <module>
(call)|         1|  0.000277281|  0.000277281|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/filters/_gaussian.py:1 <module>
(call)|         1|  0.000212431|  0.000212431|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/restoration/uft.py:20 <module>
(call)|         1|   0.00390768|   0.00390768|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/restoration/deconvolution.py:1 <module>
(call)|         1|     0.014029|     0.014029|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/restoration/unwrap.py:1 <module>
(call)|         1|  0.000328302|  0.000328302|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pywt/_functions.py:8 <module>
(call)|         1|  1.69277e-05|  1.69277e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pywt/_c99_config.py:3 <module>
(call)|         1|  0.000180006|  0.000180006|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pywt/_utils.py:4 <module>
(call)|         1|   0.00754595|   0.00754595|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pywt/_dwt.py:1 <module>
(call)|         1|  0.000459194|  0.000459194|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pywt/_multidim.py:8 <module>
(call)|         1|     0.018028|     0.018028|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pywt/_multilevel.py:9 <module>
(call)|         1|   0.00017643|   0.00017643|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pywt/_thresholding.py:9 <module>
(call)|         1|   0.00176454|   0.00176454|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pywt/_wavelet_packets.py:6 <module>
(call)|         1|   0.00673223|   0.00673223|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pywt/_swt.py:1 <module>
(call)|         1|  0.000213623|  0.000213623|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pywt/_cwt.py:1 <module>
(call)|         1|  6.62804e-05|  6.62804e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pywt/data/_readers.py:1 <module>
(call)|         1|  0.000265121|  0.000265121|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pywt/data/_wavelab_signals.py:2 <module>
(call)|         1|    0.0080328|    0.0080328|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pywt/data/__init__.py:1 <module>
(call)|         1|  4.45843e-05|  4.45843e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pywt/version.py:3 <module>
(call)|         1|   0.00018096|   0.00018096|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pywt/_pytesttester.py:26 <module>
(call)|         1|     0.110879|     0.110879|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/pywt/__init__.py:11 <module>
(call)|         1|     0.190357|     0.190357|  0.04%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/restoration/_denoise.py:1 <module>
(call)|         1|     0.261732|     0.261732|  0.05%|# /opt/anaconda3/lib/python3.7/site-packages/dask/config.py:1 <module>
(call)|         1|  0.000219822|  0.000219822|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/dask/utils_test.py:1 <module>
(call)|         1|   0.00485969|   0.00485969|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/dask/core.py:1 <module>
(call)|         1|   0.00749326|   0.00749326|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/dask/optimization.py:1 <module>
(call)|         1|    0.0585477|    0.0585477|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/dask/utils.py:1 <module>
(call)|         1|    0.0912175|    0.0912175|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/dask/datasets.py:1 <module>
(call)|         1|  0.000505209|  0.000505209|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/dask/order.py:77 <module>
(call)|         1|   0.00051713|   0.00051713|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/dask/callbacks.py:1 <module>
(call)|         1|    0.0488312|    0.0488312|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/dask/local.py:106 <module>
(call)|         1|    0.0002141|    0.0002141|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/toolz/compatibility.py:1 <module>
(call)|         1|  3.02792e-05|  3.02792e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/toolz/utils.py:1 <module>
(call)|         1|   0.00668716|   0.00668716|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/toolz/itertoolz.py:1 <module>
(call)|         1|     0.018708|     0.018708|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/toolz/_signatures.py:14 <module>
(call)|         1|    0.0263004|    0.0263004|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/toolz/functoolz.py:1 <module>
(call)|         1|     0.000211|     0.000211|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/toolz/dicttoolz.py:1 <module>
(call)|         1|  0.000129461|  0.000129461|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/toolz/recipes.py:1 <module>
(call)|         1|     0.599818|     0.599818|  0.13%|# /opt/anaconda3/lib/python3.7/site-packages/toolz/curried/operator.py:1 <module>
(call)|         1|  0.000348568|  0.000348568|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/toolz/curried/exceptions.py:1 <module>
(call)|         1|     0.610184|     0.610184|  0.13%|# /opt/anaconda3/lib/python3.7/site-packages/toolz/curried/__init__.py:25 <module>
(call)|         1|   0.00022316|   0.00022316|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/toolz/sandbox/core.py:1 <module>
(call)|         1|  0.000133991|  0.000133991|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/toolz/sandbox/parallel.py:1 <module>
(call)|         1|   0.00612831|   0.00612831|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/toolz/sandbox/__init__.py:1 <module>
(call)|         1|     0.894211|     0.894211|  0.19%|# /opt/anaconda3/lib/python3.7/site-packages/toolz/__init__.py:1 <module>
(call)|         1|  0.000210047|  0.000210047|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/cytoolz/compatibility.py:1 <module>
(call)|         1|  8.24928e-05|  8.24928e-05|  0.00%|# <string>_337:1 <module>
(call)|         1|   0.00148797|   0.00148797|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/cytoolz/_signatures.py:1 <module>
(call)|         1|     0.588042|     0.588042|  0.12%|# /opt/anaconda3/lib/python3.7/site-packages/cytoolz/curried/operator.py:1 <module>
(call)|         1|  0.000239134|  0.000239134|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/cytoolz/curried/exceptions.py:1 <module>
(call)|         1|     0.596006|     0.596006|  0.13%|# /opt/anaconda3/lib/python3.7/site-packages/cytoolz/curried/__init__.py:25 <module>
(call)|         1|  2.24113e-05|  2.24113e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/cytoolz/_version.py:1 <module>
(call)|         1|     0.756594|     0.756594|  0.16%|# /opt/anaconda3/lib/python3.7/site-packages/cytoolz/__init__.py:1 <module>
(call)|         1|      1.70197|      1.70197|  0.36%|# /opt/anaconda3/lib/python3.7/site-packages/tlz/_build_tlz.py:1 <module>
(call)|         1|      1.70937|      1.70937|  0.36%|# /opt/anaconda3/lib/python3.7/site-packages/tlz/__init__.py:7 <module>
(call)|         1|   0.00182676|   0.00182676|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/dask/system.py:1 <module>
(call)|         1|    0.0252464|    0.0252464|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/dask/threaded.py:5 <module>
(call)|         1|     0.016012|     0.016012|  0.00%|# /opt/anaconda3/lib/python3.7/dataclasses.py:1 <module>
(call)|         1|    0.0216973|    0.0216973|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/dask/compatibility.py:1 <module>
(call)|         1|  0.000365734|  0.000365734|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/dask/context.py:3 <module>
(call)|         1|    0.0134828|    0.0134828|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/dask/hashing.py:1 <module>
(call)|         1|   0.00490594|   0.00490594|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/cloudpickle/compat.py:1 <module>
(call)|         1|    0.0302773|    0.0302773|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/cloudpickle/cloudpickle.py:42 <module>
(call)|         1|   0.00169516|   0.00169516|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/cloudpickle/cloudpickle_fast.py:12 <module>
(call)|         1|     0.085309|     0.085309|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/cloudpickle/__init__.py:1 <module>
(call)|         1|  0.000665188|  0.000665188|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/tblib/cpython.py:5 <module>
(call)|         1|    0.0286288|    0.0286288|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/tblib/__init__.py:1 <module>
(call)|         1|  0.000291586|  0.000291586|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/tblib/pickling_support.py:1 <module>
(call)|         1|     0.216689|     0.216689|  0.05%|# /opt/anaconda3/lib/python3.7/site-packages/dask/multiprocessing.py:1 <module>
(call)|         1|     0.401871|     0.401871|  0.08%|# /opt/anaconda3/lib/python3.7/site-packages/dask/base.py:1 <module>
(call)|         1|  0.000730991|  0.000730991|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/dask/highlevelgraph.py:1 <module>
(call)|         1|      2.41427|      2.41427|  0.51%|# /opt/anaconda3/lib/python3.7/site-packages/dask/delayed.py:1 <module>
(call)|         1|  4.12464e-05|  4.12464e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/dask/_version.py:7 <module>
(call)|         1|       2.9473|       2.9473|  0.62%|# /opt/anaconda3/lib/python3.7/site-packages/dask/__init__.py:1 <module>
(call)|         1|       3.1134|       3.1134|  0.65%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/restoration/_cycle_spin.py:1 <module>
(call)|         1|     0.030942|     0.030942|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/restoration/non_local_means.py:1 <module>
(call)|         1|  0.000287533|  0.000287533|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/restoration/inpaint.py:2 <module>
(call)|         1|      3.41399|      3.41399|  0.72%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/restoration/__init__.py:3 <module>
(call)|         1|      3.43878|      3.43878|  0.72%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/filters/edges.py:11 <module>
(call)|         1|  4.62532e-05|  4.62532e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/filters/_rank_order.py:10 <module>
(call)|         1|  0.000182152|  0.000182152|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/filters/_gabor.py:1 <module>
(call)|         1|   0.00100946|   0.00100946|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/exposure/exposure.py:1 <module>
(call)|         1|  0.000216484|  0.000216484|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/color/adapt_rgb.py:1 <module>
(call)|         1|    0.0292912|    0.0292912|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/exposure/_adapthist.py:15 <module>
(call)|         1|  3.55244e-05|  3.55244e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/exposure/histogram_matching.py:1 <module>
(call)|         1|    0.0599735|    0.0599735|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/exposure/__init__.py:1 <module>
(call)|         1|    0.0001719|    0.0001719|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/transform/histogram_matching.py:1 <module>
(call)|         1|    0.0104163|    0.0104163|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/transform/hough_transform.py:1 <module>
(call)|         1|   0.00209546|   0.00209546|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/transform/_geometric.py:1 <module>
(call)|         1|    0.0121677|    0.0121677|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/transform/_warps.py:1 <module>
(call)|         1|    0.0211098|    0.0211098|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/transform/radon_transform.py:1 <module>
(call)|         1|  0.000132322|  0.000132322|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/transform/finite_radon_transform.py:4 <module>
(call)|         1|  0.000129223|  0.000129223|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/transform/integral.py:1 <module>
(call)|         1|  0.000962019|  0.000962019|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/transform/pyramids.py:1 <module>
(call)|         1|     0.118948|     0.118948|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/transform/__init__.py:1 <module>
(call)|         1|     0.309469|     0.309469|  0.07%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/filters/thresholding.py:1 <module>
(call)|         1|  0.000448465|  0.000448465|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/filters/ridges.py:9 <module>
(call)|         1|     0.130235|     0.130235|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/filters/rank/generic.py:49 <module>
(call)|         1|    0.0225978|    0.0225978|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/filters/rank/_percentile.py:23 <module>
(call)|         1|    0.0411873|    0.0411873|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/filters/rank/bilateral.py:24 <module>
(call)|         1|      0.20612|      0.20612|  0.04%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/filters/rank/__init__.py:1 <module>
(call)|         1|  0.000404358|  0.000404358|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/filters/_median.py:2 <module>
(call)|         1|  0.000129938|  0.000129938|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/filters/_unsharp_mask.py:1 <module>
(call)|         1|      4.14395|      4.14395|  0.87%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/filters/__init__.py:1 <module>
(call)|         1|      4.18351|      4.18351|  0.88%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/morphology/greyreconstruct.py:11 <module>
(call)|         1|   0.00010705|   0.00010705|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/morphology/_util.py:1 <module>
(call)|         1|       4.1972|       4.1972|  0.88%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/morphology/extrema.py:11 <module>
(call)|         1|      4.26946|      4.26946|  0.90%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/morphology/watershed.py:25 <module>
(call)|         1|    0.0103719|    0.0103719|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/morphology/_skeletonize.py:3 <module>
(call)|         1|    0.0654571|    0.0654571|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/morphology/convex_hull.py:1 <module>
(call)|         1|    0.0594084|    0.0594084|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/morphology/_flood_fill.py:5 <module>
(call)|         1|   0.00821161|   0.00821161|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/morphology/max_tree.py:38 <module>
(call)|         1|      11.5588|      11.5588|  2.43%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/morphology/__init__.py:1 <module>
(call)|         1|      17.3671|      17.3671|  3.65%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_visualization.py:1 <module>
(call)|         1|      17.3983|      17.3983|  3.65%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:1 <module>
(call)|         1|  0.000323772|  0.000323772|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/cropper_uncropper.py:1 <module>
(call)|         1|  0.000290632|  0.000290632|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/unet_parts.py:1 <module>
(call)|         1|   0.00129128|   0.00129128|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/encoders_decoders.py:1 <module>
(call)|         1|   0.00838852|   0.00838852|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/unet_model.py:1 <module>
(call)|         1|  0.000290155|  0.000290155|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/non_max_suppression.py:1 <module>
(call)|         1|    0.0442417|    0.0442417|  0.01%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/vae_parts.py:1 <module>
(call)|         1|      17.5296|      17.5296|  3.68%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/vae_model.py:1 <module>
(call)|         1|   0.00802016|   0.00802016|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/segmentation/random_walker_segmentation.py:9 <module>
(call)|         1|  0.000377893|  0.000377893|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/segmentation/active_contour_model.py:1 <module>
(call)|         1|    0.0500643|    0.0500643|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/segmentation/_felzenszwalb.py:1 <module>
(call)|         1|    0.0910888|    0.0910888|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/segmentation/slic_superpixels.py:1 <module>
(call)|         1|    0.0558567|    0.0558567|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/segmentation/_quickshift.py:1 <module>
(call)|         1|  0.000473499|  0.000473499|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/segmentation/boundaries.py:2 <module>
(call)|         1|  0.000112534|  0.000112534|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/segmentation/_clear_border.py:1 <module>
(call)|         1|  0.000510454|  0.000510454|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/segmentation/_join.py:1 <module>
(call)|         1|  0.000266075|  0.000266075|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/segmentation/_chan_vese.py:1 <module>
(call)|         1|   0.00203919|   0.00203919|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/segmentation/morphsnakes.py:1 <module>
(call)|         1|     0.245265|     0.245265|  0.05%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/segmentation/__init__.py:1 <module>
(call)|         1|  0.000171423|  0.000171423|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/igraph/compat.py:6 <module>
(call)|         1|   0.00406146|   0.00406146|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/igraph/configuration.py:9 <module>
(call)|         1|   0.00123954|   0.00123954|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/igraph/datatypes.py:3 <module>
(call)|         1|    0.0013659|    0.0013659|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/igraph/utils.py:6 <module>
(call)|         1|     0.334994|     0.334994|  0.07%|# /opt/anaconda3/lib/python3.7/site-packages/igraph/drawing/colors.py:5 <module>
(call)|         1|   0.00164318|   0.00164318|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/igraph/drawing/utils.py:3 <module>
(call)|         1|   0.00599241|   0.00599241|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/igraph/drawing/baseclasses.py:3 <module>
(call)|         1|  0.000643492|  0.000643492|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/igraph/drawing/metamagic.py:61 <module>
(call)|         1|  0.000679493|  0.000679493|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/igraph/drawing/text.py:5 <module>
(call)|         1|    0.0196662|    0.0196662|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/igraph/drawing/edge.py:3 <module>
(call)|         1|   0.00193596|   0.00193596|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/igraph/drawing/shapes.py:17 <module>
(call)|         1|  0.000408411|  0.000408411|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/igraph/drawing/vertex.py:6 <module>
(call)|         1|  0.000989914|  0.000989914|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/igraph/statistics.py:5 <module>
(call)|         1|    0.0052526|    0.0052526|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/igraph/layout.py:7 <module>
(call)|         1|    0.0755117|    0.0755117|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/igraph/drawing/graph.py:14 <module>
(call)|         1|     0.480522|     0.480522|  0.10%|# /opt/anaconda3/lib/python3.7/site-packages/igraph/drawing/__init__.py:16 <module>
(call)|         1|   0.00630569|   0.00630569|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/texttable.py:57 <module>
(call)|         1|    0.0365911|    0.0365911|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/igraph/summary.py:6 <module>
(call)|         1|     0.626042|     0.626042|  0.13%|# /opt/anaconda3/lib/python3.7/site-packages/igraph/clustering.py:5 <module>
(call)|         1|  0.000294685|  0.000294685|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/igraph/cut.py:3 <module>
(call)|         1|  0.000183821|  0.000183821|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/igraph/formula.py:9 <module>
(call)|         1|  0.000302315|  0.000302315|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/igraph/matching.py:3 <module>
(call)|         1|  9.67979e-05|  9.67979e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/igraph/version.py:1 <module>
(call)|         1|      1.27933|      1.27933|  0.27%|# /opt/anaconda3/lib/python3.7/site-packages/igraph/__init__.py:8 <module>
(call)|         1|   0.00179458|   0.00179458|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/leidenalg/VertexPartition.py:1 <module>
(call)|         1|   0.00119042|   0.00119042|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/leidenalg/Optimiser.py:1 <module>
(call)|         1|      1.55542|      1.55542|  0.33%|# /opt/anaconda3/lib/python3.7/site-packages/leidenalg/functions.py:1 <module>
(call)|         1|      1.58195|      1.58195|  0.33%|# /opt/anaconda3/lib/python3.7/site-packages/leidenalg/__init__.py:34 <module>
(call)|         1|      1.91829|      1.91829|  0.40%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/graph_clustering.py:1 <module>
(call)|         1|  0.000222683|  0.000222683|  0.00%|# /opt/anaconda3/lib/python3.7/netrc.py:1 <module>
(call)|         1|    0.0052526|    0.0052526|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/gitdb/__init__.py:5 <module>
(call)|         1|    0.0108724|    0.0108724|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/git/__init__.py:8 <module>
(call)|         1|  0.000431299|  0.000431299|  0.00%|# /opt/anaconda3/lib/python3.7/encodings/ascii.py:8 <module>
(call)|         1|   0.00141454|   0.00141454|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/PIL/ImageFile.py:30 <module>
(call)|         1|  0.000307083|  0.000307083|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/PIL/GimpGradientFile.py:16 <module>
(call)|         1|  0.000151157|  0.000151157|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/PIL/GimpPaletteFile.py:17 <module>
(call)|         1|  0.000153542|  0.000153542|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/PIL/PaletteFile.py:16 <module>
(call)|         1|    0.0118709|    0.0118709|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/PIL/ImagePalette.py:19 <module>
(call)|         1|     0.022326|     0.022326|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/PIL/BmpImagePlugin.py:27 <module>
(call)|         1|  0.000262022|  0.000262022|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/PIL/ImageChops.py:18 <module>
(call)|         1|  0.000123501|  0.000123501|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/PIL/ImageSequence.py:19 <module>
(call)|         1|   0.00883245|   0.00883245|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/PIL/GifImagePlugin.py:27 <module>
(call)|         1|     0.021853|     0.021853|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/PIL/TiffImagePlugin.py:42 <module>
(call)|         1|   0.00158215|   0.00158215|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/PIL/JpegPresets.py:68 <module>
(call)|         1|    0.0345666|    0.0345666|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/PIL/JpegImagePlugin.py:35 <module>
(call)|         1|  0.000561953|  0.000561953|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/PIL/PpmImagePlugin.py:18 <module>
(call)|         1|    0.0126081|    0.0126081|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/PIL/PngImagePlugin.py:34 <module>
(call)|         1|  0.000476122|  0.000476122|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/_plotly_utils/optional_imports.py:4 <module>
(call)|         1|    0.0423465|    0.0423465|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/_plotly_utils/basevalidators.py:1 <module>
(call)|         1|    0.0509799|    0.0509799|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/_plotly_utils/utils.py:1 <module>
(call)|         1|   0.00420189|   0.00420189|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/subplots.py:2 <module>
(call)|         1|  4.43459e-05|  4.43459e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/optional_imports.py:1 <module>
(call)|         1|  0.000176191|  0.000176191|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/animation.py:1 <module>
(call)|         1|  0.000353098|  0.000353098|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/utils.py:1 <module>
(call)|         1|    0.0044899|    0.0044899|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/callbacks.py:1 <module>
(call)|         1|   0.00961566|   0.00961566|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/__init__.py:1 <module>
(call)|         1|     0.170263|     0.170263|  0.04%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/basedatatypes.py:1 <module>
(call)|         1|  0.000192404|  0.000192404|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/waterfall/totals/marker/__init__.py:1 <module>
(call)|         1|   0.00673866|   0.00673866|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/waterfall/totals/__init__.py:1 <module>
(call)|         1|  0.000162601|  0.000162601|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/waterfall/increasing/marker/__init__.py:1 <module>
(call)|         1|   0.00627971|   0.00627971|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/waterfall/increasing/__init__.py:1 <module>
(call)|         1|  0.000306845|  0.000306845|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/waterfall/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000192165|  0.000192165|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/waterfall/decreasing/marker/__init__.py:1 <module>
(call)|         1|   0.00636029|   0.00636029|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/waterfall/decreasing/__init__.py:1 <module>
(call)|         1|  0.000207186|  0.000207186|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/waterfall/connector/__init__.py:1 <module>
(call)|         1|      0.05194|      0.05194|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/waterfall/__init__.py:1 <module>
(call)|         1|   0.00074625|   0.00074625|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/volume/slices/__init__.py:1 <module>
(call)|         1|  0.000265121|  0.000265121|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/volume/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000185728|  0.000185728|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/volume/colorbar/title/__init__.py:1 <module>
(call)|         1|   0.00668049|   0.00668049|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/volume/colorbar/__init__.py:1 <module>
(call)|         1|  0.000535965|  0.000535965|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/volume/caps/__init__.py:1 <module>
(call)|         1|     0.041621|     0.041621|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/volume/__init__.py:1 <module>
(call)|         1|  0.000197887|  0.000197887|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/violin/unselected/__init__.py:1 <module>
(call)|         1|  0.000216484|  0.000216484|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/violin/selected/__init__.py:1 <module>
(call)|         1|  0.000256062|  0.000256062|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/violin/marker/__init__.py:1 <module>
(call)|         1|  0.000303268|  0.000303268|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/violin/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000170708|  0.000170708|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/violin/box/__init__.py:1 <module>
(call)|         1|    0.0331573|    0.0331573|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/violin/__init__.py:1 <module>
(call)|         1|  0.000266075|  0.000266075|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/treemap/pathbar/__init__.py:1 <module>
(call)|         1|  0.000201225|  0.000201225|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/treemap/marker/colorbar/title/__init__.py:1 <module>
(call)|         1|   0.00667286|   0.00667286|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/treemap/marker/colorbar/__init__.py:1 <module>
(call)|         1|    0.0155916|    0.0155916|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/treemap/marker/__init__.py:1 <module>
(call)|         1|  0.000259399|  0.000259399|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/treemap/hoverlabel/__init__.py:1 <module>
(call)|         1|    0.0400441|    0.0400441|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/treemap/__init__.py:1 <module>
(call)|         1|  0.000329494|  0.000329494|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/table/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000672102|  0.000672102|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/table/header/__init__.py:1 <module>
(call)|         1|  0.000711441|  0.000711441|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/table/cells/__init__.py:1 <module>
(call)|         1|    0.0210576|    0.0210576|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/table/__init__.py:1 <module>
(call)|         1|  0.000253439|  0.000253439|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/surface/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000193596|  0.000193596|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/surface/contours/z/__init__.py:1 <module>
(call)|         1|  0.000224352|  0.000224352|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/surface/contours/y/__init__.py:1 <module>
(call)|         1|  0.000207901|  0.000207901|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/surface/contours/x/__init__.py:1 <module>
(call)|         1|    0.0262673|    0.0262673|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/surface/contours/__init__.py:1 <module>
(call)|         1|   0.00022459|   0.00022459|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/surface/colorbar/title/__init__.py:1 <module>
(call)|         1|    0.0068872|    0.0068872|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/surface/colorbar/__init__.py:1 <module>
(call)|         1|    0.0567319|    0.0567319|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/surface/__init__.py:1 <module>
(call)|         1|  0.000228405|  0.000228405|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/sunburst/marker/colorbar/title/__init__.py:1 <module>
(call)|         1|   0.00704551|   0.00704551|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/sunburst/marker/colorbar/__init__.py:1 <module>
(call)|         1|    0.0154831|    0.0154831|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/sunburst/marker/__init__.py:1 <module>
(call)|         1|  0.000382423|  0.000382423|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/sunburst/hoverlabel/__init__.py:1 <module>
(call)|         1|    0.0316641|    0.0316641|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/sunburst/__init__.py:1 <module>
(call)|         1|  0.000357628|  0.000357628|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/streamtube/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000249863|  0.000249863|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/streamtube/colorbar/title/__init__.py:1 <module>
(call)|         1|   0.00702071|   0.00702071|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/streamtube/colorbar/__init__.py:1 <module>
(call)|         1|    0.0234206|    0.0234206|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/streamtube/__init__.py:1 <module>
(call)|         1|  0.000180244|  0.000180244|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/splom/unselected/__init__.py:1 <module>
(call)|         1|  0.000185728|  0.000185728|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/splom/selected/__init__.py:1 <module>
(call)|         1|  0.000221252|  0.000221252|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/splom/marker/colorbar/title/__init__.py:1 <module>
(call)|         1|   0.00704193|   0.00704193|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/splom/marker/colorbar/__init__.py:1 <module>
(call)|         1|    0.0160289|    0.0160289|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/splom/marker/__init__.py:1 <module>
(call)|         1|  0.000290394|  0.000290394|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/splom/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000180244|  0.000180244|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/splom/dimension/__init__.py:1 <module>
(call)|         1|    0.0497756|    0.0497756|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/splom/__init__.py:1 <module>
(call)|         1|  0.000355721|  0.000355721|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scatterternary/unselected/__init__.py:1 <module>
(call)|         1|  0.000333548|  0.000333548|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scatterternary/selected/__init__.py:1 <module>
(call)|         1|  0.000269175|  0.000269175|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scatterternary/marker/colorbar/title/__init__.py:1 <module>
(call)|         1|   0.00689316|   0.00689316|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scatterternary/marker/colorbar/__init__.py:1 <module>
(call)|         1|    0.0161538|    0.0161538|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scatterternary/marker/__init__.py:1 <module>
(call)|         1|  0.000276566|  0.000276566|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scatterternary/hoverlabel/__init__.py:1 <module>
(call)|         1|    0.0435002|    0.0435002|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scatterternary/__init__.py:1 <module>
(call)|         1|  0.000344753|  0.000344753|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scatterpolargl/unselected/__init__.py:1 <module>
(call)|         1|  0.000337601|  0.000337601|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scatterpolargl/selected/__init__.py:1 <module>
(call)|         1|  0.000208616|  0.000208616|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scatterpolargl/marker/colorbar/title/__init__.py:1 <module>
(call)|         1|   0.00679803|   0.00679803|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scatterpolargl/marker/colorbar/__init__.py:1 <module>
(call)|         1|    0.0156138|    0.0156138|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scatterpolargl/marker/__init__.py:1 <module>
(call)|         1|   0.00026989|   0.00026989|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scatterpolargl/hoverlabel/__init__.py:1 <module>
(call)|         1|     0.044435|     0.044435|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scatterpolargl/__init__.py:1 <module>
(call)|         1|  0.000351191|  0.000351191|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scatterpolar/unselected/__init__.py:1 <module>
(call)|         1|   0.00035882|   0.00035882|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scatterpolar/selected/__init__.py:1 <module>
(call)|         1|  0.000197411|  0.000197411|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scatterpolar/marker/colorbar/title/__init__.py:1 <module>
(call)|         1|   0.00726891|   0.00726891|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scatterpolar/marker/colorbar/__init__.py:1 <module>
(call)|         1|    0.0163136|    0.0163136|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scatterpolar/marker/__init__.py:1 <module>
(call)|         1|  0.000309229|  0.000309229|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scatterpolar/hoverlabel/__init__.py:1 <module>
(call)|         1|    0.0484447|    0.0484447|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scatterpolar/__init__.py:1 <module>
(call)|         1|  0.000218868|  0.000218868|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scattermapbox/unselected/__init__.py:1 <module>
(call)|         1|  0.000205755|  0.000205755|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scattermapbox/selected/__init__.py:1 <module>
(call)|         1|  0.000190496|  0.000190496|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scattermapbox/marker/colorbar/title/__init__.py:1 <module>
(call)|         1|   0.00672626|   0.00672626|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scattermapbox/marker/colorbar/__init__.py:1 <module>
(call)|         1|    0.0151112|    0.0151112|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scattermapbox/marker/__init__.py:1 <module>
(call)|         1|  0.000254154|  0.000254154|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scattermapbox/hoverlabel/__init__.py:1 <module>
(call)|         1|    0.0434141|    0.0434141|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scattermapbox/__init__.py:1 <module>
(call)|         1|  0.000373125|  0.000373125|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scattergl/unselected/__init__.py:1 <module>
(call)|         1|  0.000420809|  0.000420809|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scattergl/selected/__init__.py:1 <module>
(call)|         1|  0.000797033|  0.000797033|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scattergl/marker/colorbar/title/__init__.py:1 <module>
(call)|         1|   0.00727129|   0.00727129|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scattergl/marker/colorbar/__init__.py:1 <module>
(call)|         1|    0.0160651|    0.0160651|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scattergl/marker/__init__.py:1 <module>
(call)|         1|  0.000264883|  0.000264883|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scattergl/hoverlabel/__init__.py:1 <module>
(call)|         1|    0.0465093|    0.0465093|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scattergl/__init__.py:1 <module>
(call)|         1|  0.000394583|  0.000394583|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scattergeo/unselected/__init__.py:1 <module>
(call)|         1|  0.000352621|  0.000352621|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scattergeo/selected/__init__.py:1 <module>
(call)|         1|  0.000200033|  0.000200033|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scattergeo/marker/colorbar/title/__init__.py:1 <module>
(call)|         1|   0.00721741|   0.00721741|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scattergeo/marker/colorbar/__init__.py:1 <module>
(call)|         1|    0.0163865|    0.0163865|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scattergeo/marker/__init__.py:1 <module>
(call)|         1|  0.000256777|  0.000256777|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scattergeo/hoverlabel/__init__.py:1 <module>
(call)|         1|     0.045897|     0.045897|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scattergeo/__init__.py:1 <module>
(call)|         1|  0.000338554|  0.000338554|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scattercarpet/unselected/__init__.py:1 <module>
(call)|         1|  0.000405312|  0.000405312|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scattercarpet/selected/__init__.py:1 <module>
(call)|         1|  0.000212193|  0.000212193|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scattercarpet/marker/colorbar/title/__init__.py:1 <module>
(call)|         1|   0.00671363|   0.00671363|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scattercarpet/marker/colorbar/__init__.py:1 <module>
(call)|         1|    0.0159802|    0.0159802|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scattercarpet/marker/__init__.py:1 <module>
(call)|         1|  0.000271797|  0.000271797|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scattercarpet/hoverlabel/__init__.py:1 <module>
(call)|         1|    0.0438404|    0.0438404|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scattercarpet/__init__.py:1 <module>
(call)|         1|  0.000665903|  0.000665903|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scatter3d/projection/__init__.py:1 <module>
(call)|         1|  0.000203371|  0.000203371|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scatter3d/marker/colorbar/title/__init__.py:1 <module>
(call)|         1|   0.00686765|   0.00686765|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scatter3d/marker/colorbar/__init__.py:1 <module>
(call)|         1|    0.0158999|    0.0158999|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scatter3d/marker/__init__.py:1 <module>
(call)|         1|  0.000241518|  0.000241518|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scatter3d/line/colorbar/title/__init__.py:1 <module>
(call)|         1|   0.00668097|   0.00668097|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scatter3d/line/colorbar/__init__.py:1 <module>
(call)|         1|    0.0151229|    0.0151229|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scatter3d/line/__init__.py:1 <module>
(call)|         1|  0.000266552|  0.000266552|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scatter3d/hoverlabel/__init__.py:1 <module>
(call)|         1|    0.0797088|    0.0797088|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scatter3d/__init__.py:1 <module>
(call)|         1|  0.000381947|  0.000381947|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scatter/unselected/__init__.py:1 <module>
(call)|         1|  0.000389576|  0.000389576|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scatter/selected/__init__.py:1 <module>
(call)|         1|  0.000228167|  0.000228167|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scatter/marker/colorbar/title/__init__.py:1 <module>
(call)|         1|   0.00668955|   0.00668955|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scatter/marker/colorbar/__init__.py:1 <module>
(call)|         1|    0.0165975|    0.0165975|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scatter/marker/__init__.py:1 <module>
(call)|         1|   0.00032711|   0.00032711|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scatter/hoverlabel/__init__.py:1 <module>
(call)|         1|    0.0509646|    0.0509646|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scatter/__init__.py:1 <module>
(call)|         1|  0.000427961|  0.000427961|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/sankey/node/hoverlabel/__init__.py:1 <module>
(call)|         1|   0.00714016|   0.00714016|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/sankey/node/__init__.py:1 <module>
(call)|         1|  0.000287056|  0.000287056|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/sankey/link/hoverlabel/__init__.py:1 <module>
(call)|         1|   0.00741053|   0.00741053|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/sankey/link/__init__.py:1 <module>
(call)|         1|  0.000340939|  0.000340939|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/sankey/hoverlabel/__init__.py:1 <module>
(call)|         1|    0.0363917|    0.0363917|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/sankey/__init__.py:1 <module>
(call)|         1|  0.000182629|  0.000182629|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/pointcloud/marker/__init__.py:1 <module>
(call)|         1|  0.000331879|  0.000331879|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/pointcloud/hoverlabel/__init__.py:1 <module>
(call)|         1|    0.0126739|    0.0126739|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/pointcloud/__init__.py:1 <module>
(call)|         1|  0.000252962|  0.000252962|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/pie/title/__init__.py:1 <module>
(call)|         1|  0.000255346|  0.000255346|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/pie/marker/__init__.py:1 <module>
(call)|         1|  0.000262976|  0.000262976|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/pie/hoverlabel/__init__.py:1 <module>
(call)|         1|    0.0356572|    0.0356572|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/pie/__init__.py:1 <module>
(call)|         1|  0.000263453|  0.000263453|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/parcoords/line/colorbar/title/__init__.py:1 <module>
(call)|         1|   0.00705242|   0.00705242|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/parcoords/line/colorbar/__init__.py:1 <module>
(call)|         1|    0.0153525|    0.0153525|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/parcoords/line/__init__.py:1 <module>
(call)|         1|    0.0249453|    0.0249453|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/parcoords/__init__.py:1 <module>
(call)|         1|  0.000196218|  0.000196218|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/parcats/line/colorbar/title/__init__.py:1 <module>
(call)|         1|   0.00693202|   0.00693202|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/parcats/line/colorbar/__init__.py:1 <module>
(call)|         1|    0.0155251|    0.0155251|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/parcats/line/__init__.py:1 <module>
(call)|         1|    0.0243781|    0.0243781|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/parcats/__init__.py:1 <module>
(call)|         1|  0.000220537|  0.000220537|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/ohlc/increasing/__init__.py:1 <module>
(call)|         1|  0.000310183|  0.000310183|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/ohlc/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000231028|  0.000231028|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/ohlc/decreasing/__init__.py:1 <module>
(call)|         1|    0.0187883|    0.0187883|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/ohlc/__init__.py:1 <module>
(call)|         1|  0.000273228|  0.000273228|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/mesh3d/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000209332|  0.000209332|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/mesh3d/colorbar/title/__init__.py:1 <module>
(call)|         1|   0.00710082|   0.00710082|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/mesh3d/colorbar/__init__.py:1 <module>
(call)|         1|    0.0253112|    0.0253112|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/mesh3d/__init__.py:1 <module>
(call)|         1|  0.000696182|  0.000696182|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/isosurface/slices/__init__.py:1 <module>
(call)|         1|  0.000276804|  0.000276804|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/isosurface/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000238419|  0.000238419|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/isosurface/colorbar/title/__init__.py:1 <module>
(call)|         1|   0.00722647|   0.00722647|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/isosurface/colorbar/__init__.py:1 <module>
(call)|         1|  0.000523806|  0.000523806|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/isosurface/caps/__init__.py:1 <module>
(call)|         1|    0.0408087|    0.0408087|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/isosurface/__init__.py:1 <module>
(call)|         1|  0.000205278|  0.000205278|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/indicator/title/__init__.py:1 <module>
(call)|         1|  0.000209332|  0.000209332|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/indicator/number/__init__.py:1 <module>
(call)|         1|  0.000193596|  0.000193596|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/indicator/gauge/threshold/__init__.py:1 <module>
(call)|         1|  0.000210524|  0.000210524|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/indicator/gauge/step/__init__.py:1 <module>
(call)|         1|  0.000263691|  0.000263691|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/indicator/gauge/bar/__init__.py:1 <module>
(call)|         1|   0.00043869|   0.00043869|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/indicator/gauge/axis/__init__.py:1 <module>
(call)|         1|    0.0267785|    0.0267785|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/indicator/gauge/__init__.py:1 <module>
(call)|         1|  0.000584602|  0.000584602|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/indicator/delta/__init__.py:1 <module>
(call)|         1|    0.0547311|    0.0547311|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/indicator/__init__.py:1 <module>
(call)|         1|  0.000255108|  0.000255108|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/image/hoverlabel/__init__.py:1 <module>
(call)|         1|   0.00667763|   0.00667763|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/image/__init__.py:1 <module>
(call)|         1|  0.000240326|  0.000240326|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/histogram2dcontour/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000189543|  0.000189543|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/histogram2dcontour/contours/__init__.py:1 <module>
(call)|         1|  0.000194788|  0.000194788|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/histogram2dcontour/colorbar/title/__init__.py:1 <module>
(call)|         1|   0.00634098|   0.00634098|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/histogram2dcontour/colorbar/__init__.py:1 <module>
(call)|         1|    0.0292444|    0.0292444|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/histogram2dcontour/__init__.py:1 <module>
(call)|         1|  0.000298977|  0.000298977|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/histogram2d/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000228167|  0.000228167|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/histogram2d/colorbar/title/__init__.py:1 <module>
(call)|         1|   0.00688672|   0.00688672|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/histogram2d/colorbar/__init__.py:1 <module>
(call)|         1|    0.0233483|    0.0233483|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/histogram2d/__init__.py:1 <module>
(call)|         1|  0.000356197|  0.000356197|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/histogram/unselected/__init__.py:1 <module>
(call)|         1|  0.000317335|  0.000317335|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/histogram/selected/__init__.py:1 <module>
(call)|         1|  0.000188112|  0.000188112|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/histogram/marker/colorbar/title/__init__.py:1 <module>
(call)|         1|   0.00730109|   0.00730109|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/histogram/marker/colorbar/__init__.py:1 <module>
(call)|         1|     0.016989|     0.016989|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/histogram/marker/__init__.py:1 <module>
(call)|         1|  0.000313759|  0.000313759|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/histogram/hoverlabel/__init__.py:1 <module>
(call)|         1|    0.0480967|    0.0480967|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/histogram/__init__.py:1 <module>
(call)|         1|  0.000254154|  0.000254154|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/heatmapgl/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000185966|  0.000185966|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/heatmapgl/colorbar/title/__init__.py:1 <module>
(call)|         1|   0.00643873|   0.00643873|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/heatmapgl/colorbar/__init__.py:1 <module>
(call)|         1|    0.0217602|    0.0217602|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/heatmapgl/__init__.py:1 <module>
(call)|         1|  0.000259161|  0.000259161|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/heatmap/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000231981|  0.000231981|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/heatmap/colorbar/title/__init__.py:1 <module>
(call)|         1|   0.00785518|   0.00785518|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/heatmap/colorbar/__init__.py:1 <module>
(call)|         1|    0.0231893|    0.0231893|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/heatmap/__init__.py:1 <module>
(call)|         1|    0.0003016|    0.0003016|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/funnelarea/title/__init__.py:1 <module>
(call)|         1|  0.000215292|  0.000215292|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/funnelarea/marker/__init__.py:1 <module>
(call)|         1|  0.000316858|  0.000316858|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/funnelarea/hoverlabel/__init__.py:1 <module>
(call)|         1|    0.0208833|    0.0208833|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/funnelarea/__init__.py:1 <module>
(call)|         1|   0.00024724|   0.00024724|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/funnel/marker/colorbar/title/__init__.py:1 <module>
(call)|         1|    0.0069747|    0.0069747|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/funnel/marker/colorbar/__init__.py:1 <module>
(call)|         1|    0.0194969|    0.0194969|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/funnel/marker/__init__.py:1 <module>
(call)|         1|  0.000264168|  0.000264168|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/funnel/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000271559|  0.000271559|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/funnel/connector/__init__.py:1 <module>
(call)|         1|    0.0436394|    0.0436394|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/funnel/__init__.py:1 <module>
(call)|         1|   0.00028944|   0.00028944|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/densitymapbox/hoverlabel/__init__.py:1 <module>
(call)|         1|   0.00018096|   0.00018096|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/densitymapbox/colorbar/title/__init__.py:1 <module>
(call)|         1|   0.00753617|   0.00753617|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/densitymapbox/colorbar/__init__.py:1 <module>
(call)|         1|    0.0230203|    0.0230203|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/densitymapbox/__init__.py:1 <module>
(call)|         1|  0.000222206|  0.000222206|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/contourcarpet/contours/__init__.py:1 <module>
(call)|         1|  0.000208378|  0.000208378|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/contourcarpet/colorbar/title/__init__.py:1 <module>
(call)|         1|   0.00666976|   0.00666976|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/contourcarpet/colorbar/__init__.py:1 <module>
(call)|         1|    0.0229957|    0.0229957|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/contourcarpet/__init__.py:1 <module>
(call)|         1|  0.000272036|  0.000272036|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/contour/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000222921|  0.000222921|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/contour/contours/__init__.py:1 <module>
(call)|         1|  0.000239372|  0.000239372|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/contour/colorbar/title/__init__.py:1 <module>
(call)|         1|   0.00691366|   0.00691366|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/contour/colorbar/__init__.py:1 <module>
(call)|         1|    0.0317147|    0.0317147|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/contour/__init__.py:1 <module>
(call)|         1|  0.000257015|  0.000257015|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/cone/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000199318|  0.000199318|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/cone/colorbar/title/__init__.py:1 <module>
(call)|         1|   0.00660253|   0.00660253|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/cone/colorbar/__init__.py:1 <module>
(call)|         1|     0.023242|     0.023242|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/cone/__init__.py:1 <module>
(call)|         1|  0.000226498|  0.000226498|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/choroplethmapbox/unselected/__init__.py:1 <module>
(call)|         1|   0.00015521|   0.00015521|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/choroplethmapbox/selected/__init__.py:1 <module>
(call)|         1|  0.000264406|  0.000264406|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/choroplethmapbox/marker/__init__.py:1 <module>
(call)|         1|   0.00029707|   0.00029707|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/choroplethmapbox/hoverlabel/__init__.py:1 <module>
(call)|         1|   0.00022912|   0.00022912|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/choroplethmapbox/colorbar/title/__init__.py:1 <module>
(call)|         1|    0.0062995|    0.0062995|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/choroplethmapbox/colorbar/__init__.py:1 <module>
(call)|         1|    0.0371361|    0.0371361|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/choroplethmapbox/__init__.py:1 <module>
(call)|         1|  0.000149012|  0.000149012|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/choropleth/unselected/__init__.py:1 <module>
(call)|         1|  0.000148296|  0.000148296|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/choropleth/selected/__init__.py:1 <module>
(call)|         1|  0.000274181|  0.000274181|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/choropleth/marker/__init__.py:1 <module>
(call)|         1|  0.000257969|  0.000257969|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/choropleth/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000196934|  0.000196934|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/choropleth/colorbar/title/__init__.py:1 <module>
(call)|         1|   0.00667787|   0.00667787|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/choropleth/colorbar/__init__.py:1 <module>
(call)|         1|    0.0406315|    0.0406315|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/choropleth/__init__.py:1 <module>
(call)|         1|  0.000208139|  0.000208139|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/carpet/baxis/title/__init__.py:1 <module>
(call)|         1|   0.00596809|   0.00596809|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/carpet/baxis/__init__.py:1 <module>
(call)|         1|  0.000189304|  0.000189304|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/carpet/aaxis/title/__init__.py:1 <module>
(call)|         1|   0.00652027|   0.00652027|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/carpet/aaxis/__init__.py:1 <module>
(call)|         1|    0.0322027|    0.0322027|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/carpet/__init__.py:1 <module>
(call)|         1|   0.00015831|   0.00015831|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/candlestick/increasing/__init__.py:1 <module>
(call)|         1|  0.000271082|  0.000271082|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/candlestick/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000185966|  0.000185966|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/candlestick/decreasing/__init__.py:1 <module>
(call)|         1|    0.0186105|    0.0186105|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/candlestick/__init__.py:1 <module>
(call)|         1|  0.000182629|  0.000182629|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/box/unselected/__init__.py:1 <module>
(call)|         1|  0.000233412|  0.000233412|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/box/selected/__init__.py:1 <module>
(call)|         1|  0.000282764|  0.000282764|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/box/marker/__init__.py:1 <module>
(call)|         1|  0.000301361|  0.000301361|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/box/hoverlabel/__init__.py:1 <module>
(call)|         1|    0.0233073|    0.0233073|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/box/__init__.py:1 <module>
(call)|         1|  0.000412941|  0.000412941|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/barpolar/unselected/__init__.py:1 <module>
(call)|         1|  0.000341654|  0.000341654|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/barpolar/selected/__init__.py:1 <module>
(call)|         1|   0.00018096|   0.00018096|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/barpolar/marker/colorbar/title/__init__.py:1 <module>
(call)|         1|   0.00672197|   0.00672197|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/barpolar/marker/colorbar/__init__.py:1 <module>
(call)|         1|    0.0154669|    0.0154669|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/barpolar/marker/__init__.py:1 <module>
(call)|         1|  0.000252962|  0.000252962|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/barpolar/hoverlabel/__init__.py:1 <module>
(call)|         1|    0.0419612|    0.0419612|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/barpolar/__init__.py:1 <module>
(call)|         1|  0.000392199|  0.000392199|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/bar/unselected/__init__.py:1 <module>
(call)|         1|  0.000298262|  0.000298262|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/bar/selected/__init__.py:1 <module>
(call)|         1|  0.000196218|  0.000196218|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/bar/marker/colorbar/title/__init__.py:1 <module>
(call)|         1|   0.00712609|   0.00712609|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/bar/marker/colorbar/__init__.py:1 <module>
(call)|         1|    0.0164225|    0.0164225|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/bar/marker/__init__.py:1 <module>
(call)|         1|  0.000246525|  0.000246525|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/bar/hoverlabel/__init__.py:1 <module>
(call)|         1|    0.0471008|    0.0471008|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/bar/__init__.py:1 <module>
(call)|         1|  0.000291348|  0.000291348|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/area/hoverlabel/__init__.py:1 <module>
(call)|         1|   0.00726175|   0.00726175|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/area/__init__.py:1 <module>
(call)|         1|   0.00019002|   0.00019002|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/yaxis/title/__init__.py:1 <module>
(call)|         1|   0.00721312|   0.00721312|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/yaxis/__init__.py:1 <module>
(call)|         1|  0.000253677|  0.000253677|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/xaxis/title/__init__.py:1 <module>
(call)|         1|  0.000271797|  0.000271797|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/xaxis/rangeslider/__init__.py:1 <module>
(call)|         1|  0.000742674|  0.000742674|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/xaxis/rangeselector/__init__.py:1 <module>
(call)|         1|     0.071043|     0.071043|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/xaxis/__init__.py:1 <module>
(call)|         1|  0.000902891|  0.000902891|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/updatemenu/__init__.py:1 <module>
(call)|         1|  0.000473499|  0.000473499|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/title/__init__.py:1 <module>
(call)|         1|  0.000206709|  0.000206709|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/ternary/caxis/title/__init__.py:1 <module>
(call)|         1|   0.00664496|   0.00664496|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/ternary/caxis/__init__.py:1 <module>
(call)|         1|  0.000214815|  0.000214815|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/ternary/baxis/title/__init__.py:1 <module>
(call)|         1|   0.00680566|   0.00680566|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/ternary/baxis/__init__.py:1 <module>
(call)|         1|  0.000231743|  0.000231743|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/ternary/aaxis/title/__init__.py:1 <module>
(call)|         1|   0.00635314|   0.00635314|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/ternary/aaxis/__init__.py:1 <module>
(call)|         1|    0.0443981|    0.0443981|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/ternary/__init__.py:1 <module>
(call)|         1|    0.0093987|    0.0093987|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/template/data/__init__.py:1 <module>
(call)|         1|    0.0182991|    0.0182991|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/template/__init__.py:1 <module>
(call)|         1|   0.00019145|   0.00019145|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/slider/currentvalue/__init__.py:1 <module>
(call)|         1|   0.00737715|   0.00737715|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/slider/__init__.py:1 <module>
(call)|         1|  0.000197411|  0.000197411|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/shape/__init__.py:1 <module>
(call)|         1|  0.000195742|  0.000195742|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/scene/zaxis/title/__init__.py:1 <module>
(call)|         1|    0.0066576|    0.0066576|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/scene/zaxis/__init__.py:1 <module>
(call)|         1|  0.000202417|  0.000202417|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/scene/yaxis/title/__init__.py:1 <module>
(call)|         1|    0.0068357|    0.0068357|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/scene/yaxis/__init__.py:1 <module>
(call)|         1|  0.000193834|  0.000193834|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/scene/xaxis/title/__init__.py:1 <module>
(call)|         1|   0.00659776|   0.00659776|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/scene/xaxis/__init__.py:1 <module>
(call)|         1|  0.000903368|  0.000903368|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/scene/camera/__init__.py:1 <module>
(call)|         1|  0.000203371|  0.000203371|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/scene/annotation/hoverlabel/__init__.py:1 <module>
(call)|         1|   0.00686884|   0.00686884|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/scene/annotation/__init__.py:1 <module>
(call)|         1|    0.0754752|    0.0754752|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/scene/__init__.py:1 <module>
(call)|         1|  0.000212669|  0.000212669|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/polar/radialaxis/title/__init__.py:1 <module>
(call)|         1|   0.00657034|   0.00657034|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/polar/radialaxis/__init__.py:1 <module>
(call)|         1|  0.000532866|  0.000532866|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/polar/angularaxis/__init__.py:1 <module>
(call)|         1|    0.0348995|    0.0348995|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/polar/__init__.py:1 <module>
(call)|         1|  0.000196218|  0.000196218|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/mapbox/layer/symbol/__init__.py:1 <module>
(call)|         1|   0.00645638|   0.00645638|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/mapbox/layer/__init__.py:1 <module>
(call)|         1|    0.0134449|    0.0134449|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/mapbox/__init__.py:1 <module>
(call)|         1|  0.000214577|  0.000214577|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/legend/title/__init__.py:1 <module>
(call)|         1|   0.00638366|   0.00638366|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/legend/__init__.py:1 <module>
(call)|         1|  0.000247478|  0.000247478|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000174761|  0.000174761|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/grid/__init__.py:1 <module>
(call)|         1|  0.000191212|  0.000191212|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/geo/projection/__init__.py:1 <module>
(call)|         1|   0.00787163|   0.00787163|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/geo/__init__.py:1 <module>
(call)|         1|  0.000196457|  0.000196457|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/coloraxis/colorbar/title/__init__.py:1 <module>
(call)|         1|   0.00722742|   0.00722742|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/coloraxis/colorbar/__init__.py:1 <module>
(call)|         1|    0.0157316|    0.0157316|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/coloraxis/__init__.py:1 <module>
(call)|         1|   0.00020504|   0.00020504|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/annotation/hoverlabel/__init__.py:1 <module>
(call)|         1|   0.00667667|   0.00667667|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/annotation/__init__.py:1 <module>
(call)|         1|     0.494628|     0.494628|  0.10%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/__init__.py:1 <module>
(call)|         1|    0.0117385|    0.0117385|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/_figure.py:1 <module>
(call)|         1|    0.0144074|    0.0144074|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/_deprecations.py:1 <module>
(call)|         1|   6.7234e-05|   6.7234e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/ipywidgets/_version.py:4 <module>
(call)|         1|  4.62532e-05|  4.62532e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/ipykernel/_version.py:1 <module>
(call)|         1|    4.673e-05|    4.673e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/jupyter_client/_version.py:1 <module>
(call)|         1|  0.000100374|  0.000100374|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/zmq/backend/select.py:1 <module>
(call)|         1|   0.00105572|   0.00105572|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/zmq/error.py:1 <module>
(call)|         1|    0.0351799|    0.0351799|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/zmq/backend/cython/__init__.py:1 <module>
(call)|         1|     0.041837|     0.041837|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/zmq/backend/__init__.py:1 <module>
(call)|         1|   0.00338602|   0.00338602|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/zmq/utils/constant_names.py:1 <module>
(call)|         1|      0.01877|      0.01877|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/zmq/sugar/constants.py:1 <module>
(call)|         1|  0.000330925|  0.000330925|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/zmq/sugar/attrsettr.py:2 <module>
(call)|         1|  0.000457764|  0.000457764|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/zmq/sugar/poll.py:1 <module>
(call)|         1|  8.74996e-05|  8.74996e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/zmq/utils/strtypes.py:6 <module>
(call)|         1|   0.00278163|   0.00278163|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/zmq/utils/jsonapi.py:13 <module>
(call)|         1|    0.0155742|    0.0155742|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/zmq/sugar/socket.py:2 <module>
(call)|         1|    0.0232427|    0.0232427|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/zmq/sugar/context.py:2 <module>
(call)|         1|  0.000389099|  0.000389099|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/zmq/sugar/frame.py:2 <module>
(call)|         1|  0.000357628|  0.000357628|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/zmq/sugar/tracker.py:1 <module>
(call)|         1|  0.000149012|  0.000149012|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/zmq/sugar/version.py:1 <module>
(call)|         1|   8.2016e-05|   8.2016e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/zmq/sugar/stopwatch.py:1 <module>
(call)|         1|    0.0608811|    0.0608811|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/zmq/sugar/__init__.py:1 <module>
(call)|         1|     0.116367|     0.116367|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/zmq/__init__.py:1 <module>
(call)|         1|    0.0301282|    0.0301282|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/jupyter_client/localinterfaces.py:1 <module>
(call)|         1|  2.76566e-05|  2.76566e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/jupyter_core/version.py:4 <module>
(call)|         1|    0.0238502|    0.0238502|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/jupyter_core/__init__.py:1 <module>
(call)|         1|   0.00105667|   0.00105667|  0.00%|# /opt/anaconda3/lib/python3.7/distutils/errors.py:9 <module>
(call)|         1|  8.91685e-05|  8.91685e-05|  0.00%|# /opt/anaconda3/lib/python3.7/distutils/dep_util.py:5 <module>
(call)|         1|  0.000146866|  0.000146866|  0.00%|# /opt/anaconda3/lib/python3.7/distutils/debug.py:1 <module>
(call)|         1|  0.000258207|  0.000258207|  0.00%|# /opt/anaconda3/lib/python3.7/distutils/log.py:1 <module>
(call)|         1|   0.00602388|   0.00602388|  0.00%|# /opt/anaconda3/lib/python3.7/distutils/spawn.py:7 <module>
(call)|         1|    0.0258086|    0.0258086|  0.01%|# /opt/anaconda3/lib/python3.7/distutils/util.py:5 <module>
(call)|         1|    0.0305276|    0.0305276|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/jupyter_core/paths.py:2 <module>
(call)|         1|     0.232588|     0.232588|  0.05%|# /opt/anaconda3/lib/python3.7/site-packages/jupyter_client/connect.py:5 <module>
(call)|         1|  3.95775e-05|  3.95775e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/traitlets/log.py:1 <module>
(call)|         1|   0.00276971|   0.00276971|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/jupyter_client/launcher.py:1 <module>
(call)|         1|  0.000528812|  0.000528812|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/jupyter_client/channelsabc.py:1 <module>
(call)|         1|   0.00403762|   0.00403762|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/jupyter_client/channels.py:1 <module>
(call)|         1|  0.000419855|  0.000419855|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/jupyter_client/clientabc.py:1 <module>
(call)|         1|    0.0134389|    0.0134389|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/jupyter_client/client.py:1 <module>
(call)|         1|    0.0160916|    0.0160916|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/jupyter_client/kernelspec.py:1 <module>
(call)|         1|  0.000415564|  0.000415564|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/jupyter_client/managerabc.py:1 <module>
(call)|         1|    0.0302224|    0.0302224|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/jupyter_client/manager.py:1 <module>
(call)|         1|   0.00022769|   0.00022769|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/jupyter_client/blocking/channels.py:4 <module>
(call)|         1|   0.00561166|   0.00561166|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/jupyter_client/blocking/client.py:4 <module>
(call)|         1|   0.00874925|   0.00874925|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/jupyter_client/blocking/__init__.py:1 <module>
(call)|         1|   0.00229955|   0.00229955|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/zmq/_future.py:1 <module>
(call)|         1|    0.0109854|    0.0109854|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/zmq/asyncio/__init__.py:4 <module>
(call)|         1|  0.000224113|  0.000224113|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/jupyter_client/asynchronous/channels.py:1 <module>
(call)|         1|    0.0253007|    0.0253007|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/jupyter_client/asynchronous/client.py:1 <module>
(call)|         1|    0.0284505|    0.0284505|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/jupyter_client/asynchronous/__init__.py:1 <module>
(call)|         1|   0.00774121|   0.00774121|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/jupyter_client/multikernelmanager.py:1 <module>
(call)|         1|       0.3481|       0.3481|  0.07%|# /opt/anaconda3/lib/python3.7/site-packages/jupyter_client/__init__.py:1 <module>
(call)|         1|     0.353529|     0.353529|  0.07%|# /opt/anaconda3/lib/python3.7/site-packages/ipykernel/connect.py:2 <module>
(call)|         1|     0.359161|     0.359161|  0.08%|# /opt/anaconda3/lib/python3.7/site-packages/ipykernel/__init__.py:1 <module>
(call)|         1|  2.67029e-05|  2.67029e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/tornado/__init__.py:16 <module>
(call)|         1|   0.00382996|   0.00382996|  0.00%|# /opt/anaconda3/lib/python3.7/logging/handlers.py:24 <module>
(call)|         1|    0.0120988|    0.0120988|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/tornado/util.py:11 <module>
(call)|         1|     0.069278|     0.069278|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/tornado/escape.py:20 <module>
(call)|         1|   0.00568819|   0.00568819|  0.00%|# /opt/anaconda3/lib/python3.7/curses/__init__.py:11 <module>
(call)|         1|    0.0915635|    0.0915635|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/tornado/log.py:29 <module>
(call)|         1|    0.0064795|    0.0064795|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/tornado/concurrent.py:26 <module>
(call)|         1|    0.0212877|    0.0212877|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/tornado/ioloop.py:31 <module>
(call)|         1|    0.0128672|    0.0128672|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/tornado/gen.py:68 <module>
(call)|         1|    0.0184021|    0.0184021|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/tornado/platform/asyncio.py:20 <module>
(call)|         1|     0.149419|     0.149419|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/zmq/eventloop/ioloop.py:8 <module>
(call)|         1|     0.152535|     0.152535|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/zmq/eventloop/__init__.py:1 <module>
(call)|         1|  0.000721693|  0.000721693|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/tornado/stack_context.py:72 <module>
(call)|         1|   0.00971818|   0.00971818|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/zmq/eventloop/zmqstream.py:24 <module>
(call)|         1|   0.00654149|   0.00654149|  0.00%|# /opt/anaconda3/lib/python3.7/_strptime.py:12 <module>
(call)|         1|    0.0554349|    0.0554349|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/jupyter_client/jsonutil.py:2 <module>
(call)|         1|    0.0263851|    0.0263851|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/jupyter_client/adapter.py:1 <module>
(call)|         1|      0.27306|      0.27306|  0.06%|# /opt/anaconda3/lib/python3.7/site-packages/jupyter_client/session.py:10 <module>
(call)|         1|   0.00356102|   0.00356102|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/tornado/locks.py:15 <module>
(call)|         1|    0.0114646|    0.0114646|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/tornado/queues.py:26 <module>
(call)|         1|    0.0272291|    0.0272291|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/ipykernel/jsonutil.py:1 <module>
(call)|         1|     0.336807|     0.336807|  0.07%|# /opt/anaconda3/lib/python3.7/site-packages/ipykernel/kernelbase.py:1 <module>
(call)|         1|     0.344033|     0.344033|  0.07%|# /opt/anaconda3/lib/python3.7/site-packages/ipykernel/comm/comm.py:1 <module>
(call)|         1|     0.349106|     0.349106|  0.07%|# /opt/anaconda3/lib/python3.7/site-packages/ipykernel/comm/manager.py:1 <module>
(call)|         1|     0.353712|     0.353712|  0.07%|# /opt/anaconda3/lib/python3.7/site-packages/ipykernel/comm/__init__.py:1 <module>
(call)|         1|     0.803967|     0.803967|  0.17%|# /opt/anaconda3/lib/python3.7/site-packages/ipywidgets/widgets/widget.py:8 <module>
(call)|         1|  5.91278e-05|  5.91278e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/ipywidgets/widgets/util.py:6 <module>
(call)|         1|     0.209695|     0.209695|  0.04%|# /opt/anaconda3/lib/python3.7/site-packages/ipywidgets/widgets/trait_types.py:6 <module>
(call)|         1|    0.0135753|    0.0135753|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/ipywidgets/widgets/widget_layout.py:4 <module>
(call)|         1|   0.00092864|   0.00092864|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/ipywidgets/widgets/widget_style.py:4 <module>
(call)|         1|     0.239054|     0.239054|  0.05%|# /opt/anaconda3/lib/python3.7/site-packages/ipywidgets/widgets/domwidget.py:4 <module>
(call)|         1|  0.000597239|  0.000597239|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/ipywidgets/widgets/valuewidget.py:4 <module>
(call)|         1|  0.000974417|  0.000974417|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/ipywidgets/widgets/widget_core.py:4 <module>
(call)|         1|   0.00482535|   0.00482535|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/ipywidgets/widgets/widget_description.py:4 <module>
(call)|         1|    0.0221977|    0.0221977|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/ipywidgets/widgets/widget_bool.py:7 <module>
(call)|         1|    0.0101449|    0.0101449|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/ipywidgets/widgets/widget_button.py:8 <module>
(call)|         1|  3.67165e-05|  3.67165e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/ipywidgets/widgets/docutils.py:4 <module>
(call)|         1|    0.0218318|    0.0218318|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/ipywidgets/widgets/widget_box.py:9 <module>
(call)|         1|    0.0432978|    0.0432978|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/ipywidgets/widgets/widget_int.py:7 <module>
(call)|         1|    0.0850737|    0.0850737|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/ipywidgets/widgets/widget_float.py:4 <module>
(call)|         1|   0.00470781|   0.00470781|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/ipywidgets/widgets/widget_color.py:7 <module>
(call)|         1|   0.00458169|   0.00458169|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/ipywidgets/widgets/widget_date.py:7 <module>
(call)|         1|   0.00612736|   0.00612736|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/ipywidgets/widgets/widget_output.py:7 <module>
(call)|         1|    0.0532084|    0.0532084|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/ipywidgets/widgets/widget_selection.py:7 <module>
(call)|         1|   0.00899577|   0.00899577|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/ipywidgets/widgets/widget_selectioncontainer.py:8 <module>
(call)|         1|    0.0302324|    0.0302324|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/ipywidgets/widgets/widget_string.py:7 <module>
(call)|         1|      0.01367|      0.01367|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/ipywidgets/widgets/widget_controller.py:7 <module>
(call)|         1|   0.00327039|   0.00327039|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/ipywidgets/widgets/interaction.py:4 <module>
(call)|         1|   0.00848579|   0.00848579|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/ipywidgets/widgets/widget_link.py:7 <module>
(call)|         1|    0.0185673|    0.0185673|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/ipywidgets/widgets/widget_media.py:4 <module>
(call)|         1|   0.00783753|   0.00783753|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/ipywidgets/widgets/widget_templates.py:1 <module>
(call)|         1|   0.00808144|   0.00808144|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/ipywidgets/widgets/widget_upload.py:7 <module>
(call)|         1|      1.44897|      1.44897|  0.30%|# /opt/anaconda3/lib/python3.7/site-packages/ipywidgets/widgets/__init__.py:4 <module>
(call)|         1|      1.45886|      1.45886|  0.31%|# /opt/anaconda3/lib/python3.7/site-packages/ipywidgets/__init__.py:19 <module>
(call)|         1|  0.000202179|  0.000202179|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/serializers.py:1 <module>
(call)|         1|   3.0756e-05|   3.0756e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/_version.py:7 <module>
(call)|         1|  1.90735e-05|  1.90735e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/_widget_version.py:5 <module>
(call)|         1|   0.00689554|   0.00689554|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/version.py:1 <module>
(call)|         1|    0.0319636|    0.0319636|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/basewidget.py:1 <module>
(call)|         1|    0.0507033|    0.0507033|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/_figurewidget.py:1 <module>
(call)|         1|      5.05308|      5.05308|  1.06%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/__init__.py:1 <module>
(call)|         1|  0.000449181|  0.000449181|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/_plotly_utils/exceptions.py:1 <module>
(call)|         1|   0.00402403|   0.00402403|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/exceptions.py:1 <module>
(call)|         1|  0.000629902|  0.000629902|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/_plotly_utils/files.py:1 <module>
(call)|         1|   0.00405955|   0.00405955|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/files.py:1 <module>
(call)|         1|     0.034126|     0.034126|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/tools.py:9 <module>
(call)|         1|  1.81198e-05|  1.81198e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/offline/_plotlyjs_version.py:3 <module>
(call)|         1|   0.00459027|   0.00459027|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/offline/offline.py:5 <module>
(call)|         1|   0.00880408|   0.00880408|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/offline/__init__.py:5 <module>
(call)|         1|  3.24249e-05|  3.24249e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/_plotly_utils/colors/_swatches.py:1 <module>
(call)|         1|   0.00401855|   0.00401855|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/_plotly_utils/colors/colorbrewer.py:7 <module>
(call)|         1|   0.00309992|   0.00309992|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/_plotly_utils/colors/carto.py:7 <module>
(call)|         1|    0.0186114|    0.0186114|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/_plotly_utils/colors/qualitative.py:5 <module>
(call)|         1|   0.00459909|   0.00459909|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/_plotly_utils/colors/plotlyjs.py:4 <module>
(call)|         1|   0.00223923|   0.00223923|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/_plotly_utils/colors/cmocean.py:7 <module>
(call)|         1|    0.0162041|    0.0162041|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/_plotly_utils/colors/sequential.py:6 <module>
(call)|         1|  0.000638723|  0.000638723|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/_plotly_utils/colors/diverging.py:7 <module>
(call)|         1|   0.00106215|   0.00106215|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/_plotly_utils/colors/cyclical.py:5 <module>
(call)|         1|    0.0536349|    0.0536349|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/_plotly_utils/colors/__init__.py:75 <module>
(call)|         1|    0.0588222|    0.0588222|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/colors.py:1 <module>
(call)|         1|  0.000502825|  0.000502825|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/retrying.py:15 <module>
(call)|         1|     0.000386|     0.000386|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/io/_utils.py:1 <module>
(call)|         1|    0.0158296|    0.0158296|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/io/_orca.py:1 <module>
(call)|         1|  7.29561e-05|  7.29561e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/io/orca.py:1 <module>
(call)|         1|  0.000193119|  0.000193119|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/io/_json.py:1 <module>
(call)|         1|  0.000796795|  0.000796795|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/io/_templates.py:1 <module>
(call)|         1|   0.00258708|   0.00258708|  0.00%|# /opt/anaconda3/lib/python3.7/webbrowser.py:2 <module>
(call)|         1|   0.00727606|   0.00727606|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/io/_html.py:1 <module>
(call)|         1|    0.0029211|    0.0029211|  0.00%|# /opt/anaconda3/lib/python3.7/socketserver.py:119 <module>
(call)|         1|    0.0659282|    0.0659282|  0.01%|# /opt/anaconda3/lib/python3.7/http/server.py:32 <module>
(call)|         1|    0.0734231|    0.0734231|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/io/_base_renderers.py:1 <module>
(call)|         1|   3.3617e-05|   3.3617e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/nbformat/_version.py:2 <module>
(call)|         1|  0.000238419|  0.000238419|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/ipython_genutils/ipstruct.py:5 <module>
(call)|         1|   0.00301218|   0.00301218|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/nbformat/v1/nbbase.py:6 <module>
(call)|         1|  0.000123739|  0.000123739|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/nbformat/v1/rwbase.py:6 <module>
(call)|         1|   0.00290084|   0.00290084|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/nbformat/v1/nbjson.py:6 <module>
(call)|         1|  2.74181e-05|  2.74181e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/nbformat/v1/convert.py:1 <module>
(call)|         1|    0.0140688|    0.0140688|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/nbformat/v1/__init__.py:1 <module>
(call)|         1|  0.000205755|  0.000205755|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/nbformat/v2/nbbase.py:11 <module>
(call)|         1|  5.48363e-05|  5.48363e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/nbformat/_compat.py:1 <module>
(call)|         1|   0.00283146|   0.00283146|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/nbformat/v2/rwbase.py:6 <module>
(call)|         1|   0.00576615|   0.00576615|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/nbformat/v2/nbjson.py:6 <module>
(call)|         1|  3.76701e-05|  3.76701e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/nbformat/v2/nbxml.py:2 <module>
(call)|         1|    0.0106683|    0.0106683|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/nbformat/v2/nbpy.py:6 <module>
(call)|         1|  8.82149e-05|  8.82149e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/nbformat/v2/convert.py:7 <module>
(call)|         1|    0.0304708|    0.0304708|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/nbformat/v2/__init__.py:6 <module>
(call)|         1|  0.000310659|  0.000310659|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/nbformat/v3/nbbase.py:7 <module>
(call)|         1|  0.000337601|  0.000337601|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/nbformat/v3/rwbase.py:1 <module>
(call)|         1|   0.00328803|   0.00328803|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/nbformat/v3/nbjson.py:1 <module>
(call)|         1|  0.000585318|  0.000585318|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/nbformat/v3/nbpy.py:6 <module>
(call)|         1|  0.000422955|  0.000422955|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/nbformat/v3/convert.py:1 <module>
(call)|         1|    0.0160186|    0.0160186|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/nbformat/v3/__init__.py:2 <module>
(call)|         1|  0.000167847|  0.000167847|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/nbformat/notebooknode.py:1 <module>
(call)|         1|   0.00286007|   0.00286007|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/nbformat/v4/nbbase.py:7 <module>
(call)|         1|  0.000233412|  0.000233412|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/nbformat/v4/rwbase.py:1 <module>
(call)|         1|   0.00321603|   0.00321603|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/nbformat/v4/nbjson.py:1 <module>
(call)|         1|  0.000555277|  0.000555277|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/nbformat/v4/convert.py:1 <module>
(call)|         1|    0.0149496|    0.0149496|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/nbformat/v4/__init__.py:1 <module>
(call)|         1|  8.17776e-05|  8.17776e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/nbformat/sentinel.py:1 <module>
(call)|         1|  0.000102997|  0.000102997|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/nbformat/reader.py:1 <module>
(call)|         1|   0.00324321|   0.00324321|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/nbformat/validator.py:4 <module>
(call)|         1|  0.000286579|  0.000286579|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/nbformat/converter.py:1 <module>
(call)|         1|     0.104023|     0.104023|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/nbformat/__init__.py:4 <module>
(call)|         1|     0.198481|     0.198481|  0.04%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/io/_renderers.py:1 <module>
(call)|         1|  9.39369e-05|  9.39369e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/io/base_renderers.py:1 <module>
(call)|         1|     0.250713|     0.250713|  0.05%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/io/__init__.py:1 <module>
(call)|         1|  7.89165e-05|  7.89165e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/data/__init__.py:3 <module>
(call)|         1|    0.0128515|    0.0128515|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/_docstring_gen.py:1 <module>
(call)|         1|      5.52049|      5.52049|  1.16%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/__init__.py:27 <module>
(call)|         1|   0.00105357|   0.00105357|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/matplotlylib/mplexporter/utils.py:4 <module>
(call)|         1|  7.67708e-05|  7.67708e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/matplotlylib/mplexporter/_py3k_compat.py:3 <module>
(call)|         1|    0.0100076|    0.0100076|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/matplotlylib/mplexporter/renderers/base.py:1 <module>
(call)|         1|  0.000782013|  0.000782013|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/matplotlylib/mplexporter/exporter.py:6 <module>
(call)|         1|   0.00486231|   0.00486231|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/matplotlylib/mplexporter/renderers/vega_renderer.py:1 <module>
(call)|         1|  0.000267506|  0.000267506|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/matplotlylib/mplexporter/renderers/vincent_renderer.py:1 <module>
(call)|         1|  0.000302315|  0.000302315|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/matplotlylib/mplexporter/renderers/fake_renderer.py:1 <module>
(call)|         1|    0.0298579|    0.0298579|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/matplotlylib/mplexporter/renderers/__init__.py:7 <module>
(call)|         1|    0.0363221|    0.0363221|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/matplotlylib/mplexporter/__init__.py:1 <module>
(call)|         1|   0.00106525|   0.00106525|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/matplotlylib/mpltools.py:6 <module>
(call)|         1|    0.0477872|    0.0477872|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/matplotlylib/renderer.py:8 <module>
(call)|         1|    0.0529587|    0.0529587|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/matplotlylib/__init__.py:11 <module>
(call)|         1|    0.0200913|    0.0200913|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/__init__.py:1 <module>
(call)|         1|   0.00101042|   0.00101042|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/angularaxis/__init__.py:1 <module>
(call)|         1|   0.00710869|   0.00710869|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/annotation/__init__.py:1 <module>
(call)|         1|  0.000221252|  0.000221252|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/annotation/font/__init__.py:1 <module>
(call)|         1|  0.000193357|  0.000193357|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/annotation/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000202417|  0.000202417|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/annotation/hoverlabel/font/__init__.py:1 <module>
(call)|         1|  0.000760078|  0.000760078|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/coloraxis/__init__.py:1 <module>
(call)|         1|   0.00646234|   0.00646234|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/coloraxis/colorbar/__init__.py:1 <module>
(call)|         1|  0.000197172|  0.000197172|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/coloraxis/colorbar/tickfont/__init__.py:1 <module>
(call)|         1|   0.00039053|   0.00039053|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/coloraxis/colorbar/tickformatstop/__init__.py:1 <module>
(call)|         1|   0.00025773|   0.00025773|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/coloraxis/colorbar/title/__init__.py:1 <module>
(call)|         1|  0.000216246|  0.000216246|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/coloraxis/colorbar/title/font/__init__.py:1 <module>
(call)|         1|  0.000223637|  0.000223637|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/colorscale/__init__.py:1 <module>
(call)|         1|  0.000253916|  0.000253916|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/font/__init__.py:1 <module>
(call)|         1|   0.00392938|   0.00392938|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/geo/__init__.py:1 <module>
(call)|         1|  0.000173807|  0.000173807|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/geo/center/__init__.py:1 <module>
(call)|         1|   0.00026226|   0.00026226|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/geo/domain/__init__.py:1 <module>
(call)|         1|  0.000441551|  0.000441551|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/geo/lataxis/__init__.py:1 <module>
(call)|         1|   0.00052619|   0.00052619|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/geo/lonaxis/__init__.py:1 <module>
(call)|         1|  0.000249863|  0.000249863|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/geo/projection/__init__.py:1 <module>
(call)|         1|  0.000201464|  0.000201464|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/geo/projection/rotation/__init__.py:1 <module>
(call)|         1|   0.00106287|   0.00106287|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/grid/__init__.py:1 <module>
(call)|         1|  0.000140667|  0.000140667|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/grid/domain/__init__.py:1 <module>
(call)|         1|  0.000344753|  0.000344753|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000278711|  0.000278711|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/hoverlabel/font/__init__.py:1 <module>
(call)|         1|   0.00131321|   0.00131321|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/image/__init__.py:1 <module>
(call)|         1|   0.00160766|   0.00160766|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/legend/__init__.py:1 <module>
(call)|         1|  0.000230074|  0.000230074|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/legend/font/__init__.py:1 <module>
(call)|         1|  0.000188828|  0.000188828|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/legend/title/__init__.py:1 <module>
(call)|         1|  0.000202894|  0.000202894|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/legend/title/font/__init__.py:1 <module>
(call)|         1|  0.000738382|  0.000738382|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/mapbox/__init__.py:1 <module>
(call)|         1|    0.0001266|    0.0001266|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/mapbox/center/__init__.py:1 <module>
(call)|         1|  0.000273705|  0.000273705|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/mapbox/domain/__init__.py:1 <module>
(call)|         1|   0.00174141|   0.00174141|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/mapbox/layer/__init__.py:1 <module>
(call)|         1|  7.27177e-05|  7.27177e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/mapbox/layer/circle/__init__.py:1 <module>
(call)|         1|  8.98838e-05|  8.98838e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/mapbox/layer/fill/__init__.py:1 <module>
(call)|         1|  0.000250101|  0.000250101|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/mapbox/layer/line/__init__.py:1 <module>
(call)|         1|  0.000432968|  0.000432968|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/mapbox/layer/symbol/__init__.py:1 <module>
(call)|         1|  0.000264883|  0.000264883|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/mapbox/layer/symbol/textfont/__init__.py:1 <module>
(call)|         1|  0.000594616|  0.000594616|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/margin/__init__.py:1 <module>
(call)|         1|  0.000333309|  0.000333309|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/modebar/__init__.py:1 <module>
(call)|         1|  0.000770092|  0.000770092|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/polar/__init__.py:1 <module>
(call)|         1|   0.00678611|   0.00678611|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/polar/angularaxis/__init__.py:1 <module>
(call)|         1|  0.000265598|  0.000265598|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/polar/angularaxis/tickfont/__init__.py:1 <module>
(call)|         1|  0.000332117|  0.000332117|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/polar/angularaxis/tickformatstop/__init__.py:1 <module>
(call)|         1|  0.000267267|  0.000267267|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/polar/domain/__init__.py:1 <module>
(call)|         1|    0.0080049|    0.0080049|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/polar/radialaxis/__init__.py:1 <module>
(call)|         1|  0.000193596|  0.000193596|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/polar/radialaxis/tickfont/__init__.py:1 <module>
(call)|         1|  0.000481129|  0.000481129|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/polar/radialaxis/tickformatstop/__init__.py:1 <module>
(call)|         1|  0.000154734|  0.000154734|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/polar/radialaxis/title/__init__.py:1 <module>
(call)|         1|  0.000285625|  0.000285625|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/polar/radialaxis/title/font/__init__.py:1 <module>
(call)|         1|   0.00102758|   0.00102758|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/radialaxis/__init__.py:1 <module>
(call)|         1|   0.00129557|   0.00129557|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/scene/__init__.py:1 <module>
(call)|         1|   0.00515938|   0.00515938|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/scene/annotation/__init__.py:1 <module>
(call)|         1|  0.000204086|  0.000204086|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/scene/annotation/font/__init__.py:1 <module>
(call)|         1|  0.000211716|  0.000211716|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/scene/annotation/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000199795|  0.000199795|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/scene/annotation/hoverlabel/font/__init__.py:1 <module>
(call)|         1|  0.000247717|  0.000247717|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/scene/aspectratio/__init__.py:1 <module>
(call)|         1|  0.000251055|  0.000251055|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/scene/camera/__init__.py:1 <module>
(call)|         1|   0.00020647|   0.00020647|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/scene/camera/center/__init__.py:1 <module>
(call)|         1|  0.000189066|  0.000189066|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/scene/camera/eye/__init__.py:1 <module>
(call)|         1|  7.84397e-05|  7.84397e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/scene/camera/projection/__init__.py:1 <module>
(call)|         1|  0.000207424|  0.000207424|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/scene/camera/up/__init__.py:1 <module>
(call)|         1|  0.000302792|  0.000302792|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/scene/domain/__init__.py:1 <module>
(call)|         1|    0.0105507|    0.0105507|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/scene/xaxis/__init__.py:1 <module>
(call)|         1|  0.000188589|  0.000188589|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/scene/xaxis/tickfont/__init__.py:1 <module>
(call)|         1|  0.000385046|  0.000385046|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/scene/xaxis/tickformatstop/__init__.py:1 <module>
(call)|         1|   0.00014019|   0.00014019|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/scene/xaxis/title/__init__.py:1 <module>
(call)|         1|  0.000211716|  0.000211716|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/scene/xaxis/title/font/__init__.py:1 <module>
(call)|         1|   0.00968742|   0.00968742|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/scene/yaxis/__init__.py:1 <module>
(call)|         1|   0.00018096|   0.00018096|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/scene/yaxis/tickfont/__init__.py:1 <module>
(call)|         1|  0.000315905|  0.000315905|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/scene/yaxis/tickformatstop/__init__.py:1 <module>
(call)|         1|   0.00014019|   0.00014019|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/scene/yaxis/title/__init__.py:1 <module>
(call)|         1|  0.000216246|  0.000216246|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/scene/yaxis/title/font/__init__.py:1 <module>
(call)|         1|    0.0097487|    0.0097487|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/scene/zaxis/__init__.py:1 <module>
(call)|         1|  0.000182629|  0.000182629|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/scene/zaxis/tickfont/__init__.py:1 <module>
(call)|         1|  0.000334263|  0.000334263|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/scene/zaxis/tickformatstop/__init__.py:1 <module>
(call)|         1|  0.000141382|  0.000141382|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/scene/zaxis/title/__init__.py:1 <module>
(call)|         1|  0.000183105|  0.000183105|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/scene/zaxis/title/font/__init__.py:1 <module>
(call)|         1|   0.00185871|   0.00185871|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/shape/__init__.py:1 <module>
(call)|         1|  0.000185728|  0.000185728|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/shape/line/__init__.py:1 <module>
(call)|         1|   0.00258303|   0.00258303|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/slider/__init__.py:1 <module>
(call)|         1|  0.000439167|  0.000439167|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/slider/currentvalue/__init__.py:1 <module>
(call)|         1|  0.000201941|  0.000201941|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/slider/currentvalue/font/__init__.py:1 <module>
(call)|         1|  0.000222921|  0.000222921|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/slider/font/__init__.py:1 <module>
(call)|         1|  0.000265837|  0.000265837|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/slider/pad/__init__.py:1 <module>
(call)|         1|  0.000626564|  0.000626564|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/slider/step/__init__.py:1 <module>
(call)|         1|  0.000148535|  0.000148535|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/slider/transition/__init__.py:1 <module>
(call)|         1|   0.00051713|   0.00051713|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/ternary/__init__.py:1 <module>
(call)|         1|   0.00507164|   0.00507164|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/ternary/aaxis/__init__.py:1 <module>
(call)|         1|  0.000199318|  0.000199318|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/ternary/aaxis/tickfont/__init__.py:1 <module>
(call)|         1|  0.000318289|  0.000318289|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/ternary/aaxis/tickformatstop/__init__.py:1 <module>
(call)|         1|  0.000166893|  0.000166893|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/ternary/aaxis/title/__init__.py:1 <module>
(call)|         1|  0.000221252|  0.000221252|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/ternary/aaxis/title/font/__init__.py:1 <module>
(call)|         1|   0.00508237|   0.00508237|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/ternary/baxis/__init__.py:1 <module>
(call)|         1|   0.00019145|   0.00019145|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/ternary/baxis/tickfont/__init__.py:1 <module>
(call)|         1|  0.000324965|  0.000324965|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/ternary/baxis/tickformatstop/__init__.py:1 <module>
(call)|         1|  0.000146151|  0.000146151|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/ternary/baxis/title/__init__.py:1 <module>
(call)|         1|  0.000207424|  0.000207424|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/ternary/baxis/title/font/__init__.py:1 <module>
(call)|         1|   0.00519371|   0.00519371|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/ternary/caxis/__init__.py:1 <module>
(call)|         1|  0.000196695|  0.000196695|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/ternary/caxis/tickfont/__init__.py:1 <module>
(call)|         1|  0.000322342|  0.000322342|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/ternary/caxis/tickformatstop/__init__.py:1 <module>
(call)|         1|  0.000178814|  0.000178814|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/ternary/caxis/title/__init__.py:1 <module>
(call)|         1|  0.000233173|  0.000233173|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/ternary/caxis/title/font/__init__.py:1 <module>
(call)|         1|  0.000267029|  0.000267029|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/ternary/domain/__init__.py:1 <module>
(call)|         1|   0.00063467|   0.00063467|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/title/__init__.py:1 <module>
(call)|         1|  0.000190735|  0.000190735|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/title/font/__init__.py:1 <module>
(call)|         1|  0.000258923|  0.000258923|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/title/pad/__init__.py:1 <module>
(call)|         1|  0.000228405|  0.000228405|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/transition/__init__.py:1 <module>
(call)|         1|  0.000160217|  0.000160217|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/uniformtext/__init__.py:1 <module>
(call)|         1|   0.00163937|   0.00163937|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/updatemenu/__init__.py:1 <module>
(call)|         1|  0.000573158|  0.000573158|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/updatemenu/button/__init__.py:1 <module>
(call)|         1|  0.000197887|  0.000197887|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/updatemenu/font/__init__.py:1 <module>
(call)|         1|   0.00026226|   0.00026226|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/updatemenu/pad/__init__.py:1 <module>
(call)|         1|    0.0178185|    0.0178185|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/xaxis/__init__.py:1 <module>
(call)|         1|  0.000916958|  0.000916958|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/xaxis/rangeselector/__init__.py:1 <module>
(call)|         1|  0.000562906|  0.000562906|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/xaxis/rangeselector/button/__init__.py:1 <module>
(call)|         1|  0.000193357|  0.000193357|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/xaxis/rangeselector/font/__init__.py:1 <module>
(call)|         1|    0.0005548|    0.0005548|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/xaxis/rangeslider/__init__.py:1 <module>
(call)|         1|  0.000170231|  0.000170231|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/xaxis/rangeslider/yaxis/__init__.py:1 <module>
(call)|         1|  0.000190496|  0.000190496|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/xaxis/tickfont/__init__.py:1 <module>
(call)|         1|  0.000398874|  0.000398874|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/xaxis/tickformatstop/__init__.py:1 <module>
(call)|         1|  0.000864506|  0.000864506|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/xaxis/title/__init__.py:1 <module>
(call)|         1|  0.000203609|  0.000203609|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/xaxis/title/font/__init__.py:1 <module>
(call)|         1|    0.0164475|    0.0164475|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/yaxis/__init__.py:1 <module>
(call)|         1|  0.000170708|  0.000170708|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/yaxis/tickfont/__init__.py:1 <module>
(call)|         1|  0.000362158|  0.000362158|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/yaxis/tickformatstop/__init__.py:1 <module>
(call)|         1|  0.000188112|  0.000188112|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/yaxis/title/__init__.py:1 <module>
(call)|         1|  0.000184774|  0.000184774|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/yaxis/title/font/__init__.py:1 <module>
(call)|         1|  0.000198364|  0.000198364|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/template/__init__.py:1 <module>
(call)|         1|   0.00720668|   0.00720668|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/template/data/__init__.py:1 <module>
(call)|         1|   0.00640416|   0.00640416|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/barpolar/__init__.py:1 <module>
(call)|         1|  0.000635624|  0.000635624|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/barpolar/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000379562|  0.000379562|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/barpolar/hoverlabel/font/__init__.py:1 <module>
(call)|         1|   0.00123096|   0.00123096|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/barpolar/marker/__init__.py:1 <module>
(call)|         1|   0.00602269|   0.00602269|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/barpolar/marker/colorbar/__init__.py:1 <module>
(call)|         1|  0.000195265|  0.000195265|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/barpolar/marker/colorbar/tickfont/__init__.py:1 <module>
(call)|         1|   0.00033927|   0.00033927|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/barpolar/marker/colorbar/tickformatstop/__init__.py:1 <module>
(call)|         1|  0.000213623|  0.000213623|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/barpolar/marker/colorbar/title/__init__.py:1 <module>
(call)|         1|  0.000221491|  0.000221491|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/barpolar/marker/colorbar/title/font/__init__.py:1 <module>
(call)|         1|   0.00104022|   0.00104022|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/barpolar/marker/line/__init__.py:1 <module>
(call)|         1|  0.000158072|  0.000158072|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/barpolar/selected/__init__.py:1 <module>
(call)|         1|  0.000218868|  0.000218868|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/barpolar/selected/marker/__init__.py:1 <module>
(call)|         1|  8.13007e-05|  8.13007e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/barpolar/selected/textfont/__init__.py:1 <module>
(call)|         1|  0.000152349|  0.000152349|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/barpolar/stream/__init__.py:1 <module>
(call)|         1|   0.00015974|   0.00015974|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/barpolar/unselected/__init__.py:1 <module>
(call)|         1|   0.00014472|   0.00014472|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/barpolar/unselected/marker/__init__.py:1 <module>
(call)|         1|   0.00011158|   0.00011158|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/barpolar/unselected/textfont/__init__.py:1 <module>
(call)|         1|     0.013206|     0.013206|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/bar/__init__.py:1 <module>
(call)|         1|   0.00132656|   0.00132656|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/bar/error_x/__init__.py:1 <module>
(call)|         1|   0.00122476|   0.00122476|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/bar/error_y/__init__.py:1 <module>
(call)|         1|  0.000660419|  0.000660419|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/bar/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000462294|  0.000462294|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/bar/hoverlabel/font/__init__.py:1 <module>
(call)|         1|  0.000410318|  0.000410318|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/bar/insidetextfont/__init__.py:1 <module>
(call)|         1|   0.00135469|   0.00135469|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/bar/marker/__init__.py:1 <module>
(call)|         1|   0.00616837|   0.00616837|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/bar/marker/colorbar/__init__.py:1 <module>
(call)|         1|  0.000210762|  0.000210762|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/bar/marker/colorbar/tickfont/__init__.py:1 <module>
(call)|         1|  0.000337601|  0.000337601|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/bar/marker/colorbar/tickformatstop/__init__.py:1 <module>
(call)|         1|  0.000195742|  0.000195742|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/bar/marker/colorbar/title/__init__.py:1 <module>
(call)|         1|  0.000186682|  0.000186682|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/bar/marker/colorbar/title/font/__init__.py:1 <module>
(call)|         1|  0.000950098|  0.000950098|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/bar/marker/line/__init__.py:1 <module>
(call)|         1|  0.000381231|  0.000381231|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/bar/outsidetextfont/__init__.py:1 <module>
(call)|         1|  0.000132561|  0.000132561|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/bar/selected/__init__.py:1 <module>
(call)|         1|  0.000141859|  0.000141859|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/bar/selected/marker/__init__.py:1 <module>
(call)|         1|  7.84397e-05|  7.84397e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/bar/selected/textfont/__init__.py:1 <module>
(call)|         1|  0.000142574|  0.000142574|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/bar/stream/__init__.py:1 <module>
(call)|         1|  0.000438213|  0.000438213|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/bar/textfont/__init__.py:1 <module>
(call)|         1|  0.000189781|  0.000189781|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/bar/unselected/__init__.py:1 <module>
(call)|         1|  0.000143051|  0.000143051|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/bar/unselected/marker/__init__.py:1 <module>
(call)|         1|  7.70092e-05|  7.70092e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/bar/unselected/textfont/__init__.py:1 <module>
(call)|         1|   0.00393629|   0.00393629|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/carpet/__init__.py:1 <module>
(call)|         1|   0.00944543|   0.00944543|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/carpet/aaxis/__init__.py:1 <module>
(call)|         1|  0.000258684|  0.000258684|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/carpet/aaxis/tickfont/__init__.py:1 <module>
(call)|         1|   0.00032115|   0.00032115|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/carpet/aaxis/tickformatstop/__init__.py:1 <module>
(call)|         1|  0.000185728|  0.000185728|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/carpet/aaxis/title/__init__.py:1 <module>
(call)|         1|  0.000196218|  0.000196218|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/carpet/aaxis/title/font/__init__.py:1 <module>
(call)|         1|   0.00992131|   0.00992131|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/carpet/baxis/__init__.py:1 <module>
(call)|         1|  0.000295162|  0.000295162|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/carpet/baxis/tickfont/__init__.py:1 <module>
(call)|         1|  0.000333786|  0.000333786|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/carpet/baxis/tickformatstop/__init__.py:1 <module>
(call)|         1|  0.000192642|  0.000192642|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/carpet/baxis/title/__init__.py:1 <module>
(call)|         1|  0.000215292|  0.000215292|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/carpet/baxis/title/font/__init__.py:1 <module>
(call)|         1|   0.00019908|   0.00019908|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/carpet/font/__init__.py:1 <module>
(call)|         1|  0.000148535|  0.000148535|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/carpet/stream/__init__.py:1 <module>
(call)|         1|   0.00687003|   0.00687003|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/choropleth/__init__.py:1 <module>
(call)|         1|   0.00695848|   0.00695848|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/choropleth/colorbar/__init__.py:1 <module>
(call)|         1|  0.000262022|  0.000262022|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/choropleth/colorbar/tickfont/__init__.py:1 <module>
(call)|         1|   0.00033021|   0.00033021|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/choropleth/colorbar/tickformatstop/__init__.py:1 <module>
(call)|         1|  0.000217676|  0.000217676|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/choropleth/colorbar/title/__init__.py:1 <module>
(call)|         1|  0.000222445|  0.000222445|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/choropleth/colorbar/title/font/__init__.py:1 <module>
(call)|         1|   0.00075984|   0.00075984|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/choropleth/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000497103|  0.000497103|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/choropleth/hoverlabel/font/__init__.py:1 <module>
(call)|         1|  0.000201225|  0.000201225|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/choropleth/marker/__init__.py:1 <module>
(call)|         1|  0.000290155|  0.000290155|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/choropleth/marker/line/__init__.py:1 <module>
(call)|         1|  8.70228e-05|  8.70228e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/choropleth/selected/__init__.py:1 <module>
(call)|         1|   7.4625e-05|   7.4625e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/choropleth/selected/marker/__init__.py:1 <module>
(call)|         1|  0.000172138|  0.000172138|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/choropleth/stream/__init__.py:1 <module>
(call)|         1|  8.27312e-05|  8.27312e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/choropleth/unselected/__init__.py:1 <module>
(call)|         1|  7.51019e-05|  7.51019e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/choropleth/unselected/marker/__init__.py:1 <module>
(call)|         1|   0.00888991|   0.00888991|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/contourcarpet/__init__.py:1 <module>
(call)|         1|   0.00663948|   0.00663948|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/contourcarpet/colorbar/__init__.py:1 <module>
(call)|         1|  0.000225067|  0.000225067|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/contourcarpet/colorbar/tickfont/__init__.py:1 <module>
(call)|         1|  0.000432968|  0.000432968|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/contourcarpet/colorbar/tickformatstop/__init__.py:1 <module>
(call)|         1|  0.000221491|  0.000221491|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/contourcarpet/colorbar/title/__init__.py:1 <module>
(call)|         1|  0.000207424|  0.000207424|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/contourcarpet/colorbar/title/font/__init__.py:1 <module>
(call)|         1|  0.000967979|  0.000967979|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/contourcarpet/contours/__init__.py:1 <module>
(call)|         1|  0.000270844|  0.000270844|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/contourcarpet/contours/labelfont/__init__.py:1 <module>
(call)|         1|  0.000262499|  0.000262499|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/contourcarpet/line/__init__.py:1 <module>
(call)|         1|  0.000156164|  0.000156164|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/contourcarpet/stream/__init__.py:1 <module>
(call)|         1|    0.0112054|    0.0112054|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/contour/__init__.py:1 <module>
(call)|         1|   0.00606942|   0.00606942|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/contour/colorbar/__init__.py:1 <module>
(call)|         1|  0.000234127|  0.000234127|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/contour/colorbar/tickfont/__init__.py:1 <module>
(call)|         1|  0.000365257|  0.000365257|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/contour/colorbar/tickformatstop/__init__.py:1 <module>
(call)|         1|  0.000219584|  0.000219584|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/contour/colorbar/title/__init__.py:1 <module>
(call)|         1|   0.00025034|   0.00025034|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/contour/colorbar/title/font/__init__.py:1 <module>
(call)|         1|  0.000957251|  0.000957251|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/contour/contours/__init__.py:1 <module>
(call)|         1|  0.000303268|  0.000303268|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/contour/contours/labelfont/__init__.py:1 <module>
(call)|         1|  0.000653982|  0.000653982|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/contour/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000424385|  0.000424385|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/contour/hoverlabel/font/__init__.py:1 <module>
(call)|         1|  0.000339985|  0.000339985|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/contour/line/__init__.py:1 <module>
(call)|         1|  0.000141144|  0.000141144|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/contour/stream/__init__.py:1 <module>
(call)|         1|   0.00660658|   0.00660658|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/heatmapgl/__init__.py:1 <module>
(call)|         1|   0.00597382|   0.00597382|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/heatmapgl/colorbar/__init__.py:1 <module>
(call)|         1|  0.000178337|  0.000178337|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/heatmapgl/colorbar/tickfont/__init__.py:1 <module>
(call)|         1|  0.000322104|  0.000322104|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/heatmapgl/colorbar/tickformatstop/__init__.py:1 <module>
(call)|         1|  0.000198841|  0.000198841|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/heatmapgl/colorbar/title/__init__.py:1 <module>
(call)|         1|  0.000227928|  0.000227928|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/heatmapgl/colorbar/title/font/__init__.py:1 <module>
(call)|         1|  0.000653028|  0.000653028|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/heatmapgl/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000431538|  0.000431538|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/heatmapgl/hoverlabel/font/__init__.py:1 <module>
(call)|         1|  0.000138283|  0.000138283|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/heatmapgl/stream/__init__.py:1 <module>
(call)|         1|    0.0104194|    0.0104194|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/heatmap/__init__.py:1 <module>
(call)|         1|   0.00600266|   0.00600266|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/heatmap/colorbar/__init__.py:1 <module>
(call)|         1|  0.000209332|  0.000209332|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/heatmap/colorbar/tickfont/__init__.py:1 <module>
(call)|         1|  0.000315189|  0.000315189|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/heatmap/colorbar/tickformatstop/__init__.py:1 <module>
(call)|         1|  0.000199795|  0.000199795|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/heatmap/colorbar/title/__init__.py:1 <module>
(call)|         1|  0.000209093|  0.000209093|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/heatmap/colorbar/title/font/__init__.py:1 <module>
(call)|         1|  0.000641823|  0.000641823|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/heatmap/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000518799|  0.000518799|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/heatmap/hoverlabel/font/__init__.py:1 <module>
(call)|         1|   0.00013876|   0.00013876|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/heatmap/stream/__init__.py:1 <module>
(call)|         1|    0.0110321|    0.0110321|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram2dcontour/__init__.py:1 <module>
(call)|         1|   0.00603914|   0.00603914|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram2dcontour/colorbar/__init__.py:1 <module>
(call)|         1|  0.000212193|  0.000212193|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram2dcontour/colorbar/tickfont/__init__.py:1 <module>
(call)|         1|    0.0005126|    0.0005126|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram2dcontour/colorbar/tickformatstop/__init__.py:1 <module>
(call)|         1|  0.000220537|  0.000220537|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram2dcontour/colorbar/title/__init__.py:1 <module>
(call)|         1|  0.000204563|  0.000204563|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram2dcontour/colorbar/title/font/__init__.py:1 <module>
(call)|         1|  0.000840902|  0.000840902|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram2dcontour/contours/__init__.py:1 <module>
(call)|         1|  0.000211716|  0.000211716|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram2dcontour/contours/labelfont/__init__.py:1 <module>
(call)|         1|  0.000639439|  0.000639439|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram2dcontour/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000387907|  0.000387907|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram2dcontour/hoverlabel/font/__init__.py:1 <module>
(call)|         1|   0.00029707|   0.00029707|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram2dcontour/line/__init__.py:1 <module>
(call)|         1|   0.00013423|   0.00013423|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram2dcontour/marker/__init__.py:1 <module>
(call)|         1|  0.000127077|  0.000127077|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram2dcontour/stream/__init__.py:1 <module>
(call)|         1|   0.00019002|   0.00019002|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram2dcontour/xbins/__init__.py:1 <module>
(call)|         1|  0.000199318|  0.000199318|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram2dcontour/ybins/__init__.py:1 <module>
(call)|         1|    0.0102351|    0.0102351|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram2d/__init__.py:1 <module>
(call)|         1|   0.00640702|   0.00640702|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram2d/colorbar/__init__.py:1 <module>
(call)|         1|  0.000215054|  0.000215054|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram2d/colorbar/tickfont/__init__.py:1 <module>
(call)|         1|  0.000378132|  0.000378132|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram2d/colorbar/tickformatstop/__init__.py:1 <module>
(call)|         1|  0.000231028|  0.000231028|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram2d/colorbar/title/__init__.py:1 <module>
(call)|         1|  0.000191927|  0.000191927|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram2d/colorbar/title/font/__init__.py:1 <module>
(call)|         1|  0.000727415|  0.000727415|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram2d/hoverlabel/__init__.py:1 <module>
(call)|         1|   0.00037837|   0.00037837|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram2d/hoverlabel/font/__init__.py:1 <module>
(call)|         1|    0.0001297|    0.0001297|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram2d/marker/__init__.py:1 <module>
(call)|         1|  0.000140429|  0.000140429|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram2d/stream/__init__.py:1 <module>
(call)|         1|  0.000253916|  0.000253916|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram2d/xbins/__init__.py:1 <module>
(call)|         1|  0.000181198|  0.000181198|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram2d/ybins/__init__.py:1 <module>
(call)|         1|   0.00822735|   0.00822735|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram/__init__.py:1 <module>
(call)|         1|  0.000183344|  0.000183344|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram/cumulative/__init__.py:1 <module>
(call)|         1|   0.00133061|   0.00133061|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram/error_x/__init__.py:1 <module>
(call)|         1|   0.00121379|   0.00121379|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram/error_y/__init__.py:1 <module>
(call)|         1|   0.00072813|   0.00072813|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000394821|  0.000394821|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram/hoverlabel/font/__init__.py:1 <module>
(call)|         1|   0.00129366|   0.00129366|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram/marker/__init__.py:1 <module>
(call)|         1|   0.00592756|   0.00592756|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram/marker/colorbar/__init__.py:1 <module>
(call)|         1|  0.000219345|  0.000219345|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram/marker/colorbar/tickfont/__init__.py:1 <module>
(call)|         1|  0.000330925|  0.000330925|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram/marker/colorbar/tickformatstop/__init__.py:1 <module>
(call)|         1|  0.000213861|  0.000213861|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram/marker/colorbar/title/__init__.py:1 <module>
(call)|         1|  0.000210285|  0.000210285|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram/marker/colorbar/title/font/__init__.py:1 <module>
(call)|         1|   0.00103474|   0.00103474|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram/marker/line/__init__.py:1 <module>
(call)|         1|  0.000240088|  0.000240088|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram/selected/__init__.py:1 <module>
(call)|         1|    0.0001297|    0.0001297|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram/selected/marker/__init__.py:1 <module>
(call)|         1|  7.84397e-05|  7.84397e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram/selected/textfont/__init__.py:1 <module>
(call)|         1|  0.000132322|  0.000132322|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram/stream/__init__.py:1 <module>
(call)|         1|  0.000129938|  0.000129938|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram/unselected/__init__.py:1 <module>
(call)|         1|   0.00013423|   0.00013423|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram/unselected/marker/__init__.py:1 <module>
(call)|         1|  7.00951e-05|  7.00951e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram/unselected/textfont/__init__.py:1 <module>
(call)|         1|  0.000252485|  0.000252485|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram/xbins/__init__.py:1 <module>
(call)|         1|  0.000175714|  0.000175714|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram/ybins/__init__.py:1 <module>
(call)|         1|    0.0127215|    0.0127215|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/mesh3d/__init__.py:1 <module>
(call)|         1|   0.00596786|   0.00596786|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/mesh3d/colorbar/__init__.py:1 <module>
(call)|         1|  0.000258684|  0.000258684|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/mesh3d/colorbar/tickfont/__init__.py:1 <module>
(call)|         1|  0.000337124|  0.000337124|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/mesh3d/colorbar/tickformatstop/__init__.py:1 <module>
(call)|         1|  0.000202417|  0.000202417|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/mesh3d/colorbar/title/__init__.py:1 <module>
(call)|         1|  0.000187159|  0.000187159|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/mesh3d/colorbar/title/font/__init__.py:1 <module>
(call)|         1|  0.000186205|  0.000186205|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/mesh3d/contour/__init__.py:1 <module>
(call)|         1|  0.000756979|  0.000756979|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/mesh3d/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000405073|  0.000405073|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/mesh3d/hoverlabel/font/__init__.py:1 <module>
(call)|         1|  0.000500202|  0.000500202|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/mesh3d/lighting/__init__.py:1 <module>
(call)|         1|  0.000197411|  0.000197411|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/mesh3d/lightposition/__init__.py:1 <module>
(call)|         1|  0.000138998|  0.000138998|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/mesh3d/stream/__init__.py:1 <module>
(call)|         1|   0.00189066|   0.00189066|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/parcoords/__init__.py:1 <module>
(call)|         1|   0.00121975|   0.00121975|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/parcoords/dimension/__init__.py:1 <module>
(call)|         1|  0.000263214|  0.000263214|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/parcoords/domain/__init__.py:1 <module>
(call)|         1|  0.000210285|  0.000210285|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/parcoords/labelfont/__init__.py:1 <module>
(call)|         1|  0.000968933|  0.000968933|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/parcoords/line/__init__.py:1 <module>
(call)|         1|   0.00616312|   0.00616312|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/parcoords/line/colorbar/__init__.py:1 <module>
(call)|         1|  0.000195265|  0.000195265|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/parcoords/line/colorbar/tickfont/__init__.py:1 <module>
(call)|         1|  0.000316143|  0.000316143|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/parcoords/line/colorbar/tickformatstop/__init__.py:1 <module>
(call)|         1|  0.000197649|  0.000197649|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/parcoords/line/colorbar/title/__init__.py:1 <module>
(call)|         1|  0.000200272|  0.000200272|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/parcoords/line/colorbar/title/font/__init__.py:1 <module>
(call)|         1|  0.000219822|  0.000219822|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/parcoords/rangefont/__init__.py:1 <module>
(call)|         1|  0.000152826|  0.000152826|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/parcoords/stream/__init__.py:1 <module>
(call)|         1|  0.000208139|  0.000208139|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/parcoords/tickfont/__init__.py:1 <module>
(call)|         1|   0.00826478|   0.00826478|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/pie/__init__.py:1 <module>
(call)|         1|  0.000290394|  0.000290394|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/pie/domain/__init__.py:1 <module>
(call)|         1|  0.000701904|  0.000701904|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/pie/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000421047|  0.000421047|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/pie/hoverlabel/font/__init__.py:1 <module>
(call)|         1|  0.000528812|  0.000528812|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/pie/insidetextfont/__init__.py:1 <module>
(call)|         1|  0.000216722|  0.000216722|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/pie/marker/__init__.py:1 <module>
(call)|         1|  0.000253916|  0.000253916|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/pie/marker/line/__init__.py:1 <module>
(call)|         1|  0.000431061|  0.000431061|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/pie/outsidetextfont/__init__.py:1 <module>
(call)|         1|  0.000148535|  0.000148535|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/pie/stream/__init__.py:1 <module>
(call)|         1|  0.000420809|  0.000420809|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/pie/textfont/__init__.py:1 <module>
(call)|         1|  0.000252724|  0.000252724|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/pie/title/__init__.py:1 <module>
(call)|         1|  0.000410557|  0.000410557|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/pie/title/font/__init__.py:1 <module>
(call)|         1|    0.0077517|    0.0077517|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter3d/__init__.py:1 <module>
(call)|         1|   0.00143647|   0.00143647|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter3d/error_x/__init__.py:1 <module>
(call)|         1|   0.00128126|   0.00128126|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter3d/error_y/__init__.py:1 <module>
(call)|         1|   0.00122571|   0.00122571|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter3d/error_z/__init__.py:1 <module>
(call)|         1|  0.000713348|  0.000713348|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter3d/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000417948|  0.000417948|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter3d/hoverlabel/font/__init__.py:1 <module>
(call)|         1|   0.00123286|   0.00123286|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter3d/line/__init__.py:1 <module>
(call)|         1|   0.00615287|   0.00615287|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter3d/line/colorbar/__init__.py:1 <module>
(call)|         1|  0.000232458|  0.000232458|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter3d/line/colorbar/tickfont/__init__.py:1 <module>
(call)|         1|  0.000421762|  0.000421762|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter3d/line/colorbar/tickformatstop/__init__.py:1 <module>
(call)|         1|  0.000232697|  0.000232697|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter3d/line/colorbar/title/__init__.py:1 <module>
(call)|         1|  0.000227928|  0.000227928|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter3d/line/colorbar/title/font/__init__.py:1 <module>
(call)|         1|   0.00230241|   0.00230241|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter3d/marker/__init__.py:1 <module>
(call)|         1|    0.0062921|    0.0062921|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter3d/marker/colorbar/__init__.py:1 <module>
(call)|         1|  0.000249624|  0.000249624|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter3d/marker/colorbar/tickfont/__init__.py:1 <module>
(call)|         1|  0.000350952|  0.000350952|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter3d/marker/colorbar/tickformatstop/__init__.py:1 <module>
(call)|         1|  0.000207901|  0.000207901|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter3d/marker/colorbar/title/__init__.py:1 <module>
(call)|         1|  0.000211954|  0.000211954|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter3d/marker/colorbar/title/font/__init__.py:1 <module>
(call)|         1|  0.000956297|  0.000956297|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter3d/marker/line/__init__.py:1 <module>
(call)|         1|  0.000210285|  0.000210285|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter3d/projection/__init__.py:1 <module>
(call)|         1|   0.00018239|   0.00018239|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter3d/projection/x/__init__.py:1 <module>
(call)|         1|  0.000209332|  0.000209332|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter3d/projection/y/__init__.py:1 <module>
(call)|         1|  0.000204802|  0.000204802|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter3d/projection/z/__init__.py:1 <module>
(call)|         1|  0.000132799|  0.000132799|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter3d/stream/__init__.py:1 <module>
(call)|         1|    0.0003407|    0.0003407|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter3d/textfont/__init__.py:1 <module>
(call)|         1|   0.00762844|   0.00762844|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattercarpet/__init__.py:1 <module>
(call)|         1|  0.000669718|  0.000669718|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattercarpet/hoverlabel/__init__.py:1 <module>
(call)|         1|   0.00044775|   0.00044775|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattercarpet/hoverlabel/font/__init__.py:1 <module>
(call)|         1|  0.000422716|  0.000422716|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattercarpet/line/__init__.py:1 <module>
(call)|         1|   0.00289917|   0.00289917|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattercarpet/marker/__init__.py:1 <module>
(call)|         1|   0.00641203|   0.00641203|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattercarpet/marker/colorbar/__init__.py:1 <module>
(call)|         1|  0.000240088|  0.000240088|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattercarpet/marker/colorbar/tickfont/__init__.py:1 <module>
(call)|         1|  0.000293493|  0.000293493|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattercarpet/marker/colorbar/tickformatstop/__init__.py:1 <module>
(call)|         1|  0.000186205|  0.000186205|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattercarpet/marker/colorbar/title/__init__.py:1 <module>
(call)|         1|  0.000204563|  0.000204563|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattercarpet/marker/colorbar/title/font/__init__.py:1 <module>
(call)|         1|  0.000415802|  0.000415802|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattercarpet/marker/gradient/__init__.py:1 <module>
(call)|         1|  0.000873804|  0.000873804|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattercarpet/marker/line/__init__.py:1 <module>
(call)|         1|  0.000169039|  0.000169039|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattercarpet/selected/__init__.py:1 <module>
(call)|         1|  0.000262022|  0.000262022|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattercarpet/selected/marker/__init__.py:1 <module>
(call)|         1|  7.03335e-05|  7.03335e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattercarpet/selected/textfont/__init__.py:1 <module>
(call)|         1|  0.000132561|  0.000132561|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattercarpet/stream/__init__.py:1 <module>
(call)|         1|  0.000385761|  0.000385761|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattercarpet/textfont/__init__.py:1 <module>
(call)|         1|  0.000154495|  0.000154495|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattercarpet/unselected/__init__.py:1 <module>
(call)|         1|  0.000186682|  0.000186682|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattercarpet/unselected/marker/__init__.py:1 <module>
(call)|         1|  6.98566e-05|  6.98566e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattercarpet/unselected/textfont/__init__.py:1 <module>
(call)|         1|   0.00835276|   0.00835276|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergeo/__init__.py:1 <module>
(call)|         1|  0.000737906|  0.000737906|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergeo/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000460386|  0.000460386|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergeo/hoverlabel/font/__init__.py:1 <module>
(call)|         1|  0.000235319|  0.000235319|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergeo/line/__init__.py:1 <module>
(call)|         1|   0.00296044|   0.00296044|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergeo/marker/__init__.py:1 <module>
(call)|         1|   0.00591278|   0.00591278|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergeo/marker/colorbar/__init__.py:1 <module>
(call)|         1|  0.000204086|  0.000204086|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergeo/marker/colorbar/tickfont/__init__.py:1 <module>
(call)|         1|  0.000343084|  0.000343084|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergeo/marker/colorbar/tickformatstop/__init__.py:1 <module>
(call)|         1|  0.000198841|  0.000198841|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergeo/marker/colorbar/title/__init__.py:1 <module>
(call)|         1|  0.000199556|  0.000199556|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergeo/marker/colorbar/title/font/__init__.py:1 <module>
(call)|         1|  0.000266075|  0.000266075|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergeo/marker/gradient/__init__.py:1 <module>
(call)|         1|   0.00101447|   0.00101447|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergeo/marker/line/__init__.py:1 <module>
(call)|         1|  0.000237703|  0.000237703|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergeo/selected/__init__.py:1 <module>
(call)|         1|  0.000219345|  0.000219345|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergeo/selected/marker/__init__.py:1 <module>
(call)|         1|  7.03335e-05|  7.03335e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergeo/selected/textfont/__init__.py:1 <module>
(call)|         1|  0.000190258|  0.000190258|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergeo/stream/__init__.py:1 <module>
(call)|         1|   0.00039649|   0.00039649|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergeo/textfont/__init__.py:1 <module>
(call)|         1|  0.000151873|  0.000151873|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergeo/unselected/__init__.py:1 <module>
(call)|         1|  0.000217676|  0.000217676|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergeo/unselected/marker/__init__.py:1 <module>
(call)|         1|  7.72476e-05|  7.72476e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergeo/unselected/textfont/__init__.py:1 <module>
(call)|         1|   0.00971818|   0.00971818|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergl/__init__.py:1 <module>
(call)|         1|   0.00141907|   0.00141907|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergl/error_x/__init__.py:1 <module>
(call)|         1|   0.00111723|   0.00111723|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergl/error_y/__init__.py:1 <module>
(call)|         1|  0.000645161|  0.000645161|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergl/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000482559|  0.000482559|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergl/hoverlabel/font/__init__.py:1 <module>
(call)|         1|  0.000313044|  0.000313044|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergl/line/__init__.py:1 <module>
(call)|         1|   0.00265288|   0.00265288|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergl/marker/__init__.py:1 <module>
(call)|         1|   0.00615811|   0.00615811|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergl/marker/colorbar/__init__.py:1 <module>
(call)|         1|  0.000189543|  0.000189543|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergl/marker/colorbar/tickfont/__init__.py:1 <module>
(call)|         1|   0.00032115|   0.00032115|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergl/marker/colorbar/tickformatstop/__init__.py:1 <module>
(call)|         1|  0.000200272|  0.000200272|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergl/marker/colorbar/title/__init__.py:1 <module>
(call)|         1|  0.000265121|  0.000265121|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergl/marker/colorbar/title/font/__init__.py:1 <module>
(call)|         1|  0.000993013|  0.000993013|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergl/marker/line/__init__.py:1 <module>
(call)|         1|  0.000167608|  0.000167608|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergl/selected/__init__.py:1 <module>
(call)|         1|  0.000205278|  0.000205278|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergl/selected/marker/__init__.py:1 <module>
(call)|         1|  0.000102758|  0.000102758|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergl/selected/textfont/__init__.py:1 <module>
(call)|         1|  0.000128508|  0.000128508|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergl/stream/__init__.py:1 <module>
(call)|         1|  0.000441074|  0.000441074|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergl/textfont/__init__.py:1 <module>
(call)|         1|  0.000137568|  0.000137568|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergl/unselected/__init__.py:1 <module>
(call)|         1|  0.000203371|  0.000203371|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergl/unselected/marker/__init__.py:1 <module>
(call)|         1|  8.41618e-05|  8.41618e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergl/unselected/textfont/__init__.py:1 <module>
(call)|         1|   0.00672364|   0.00672364|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattermapbox/__init__.py:1 <module>
(call)|         1|  0.000616074|  0.000616074|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattermapbox/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000409842|  0.000409842|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattermapbox/hoverlabel/font/__init__.py:1 <module>
(call)|         1|  0.000121355|  0.000121355|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattermapbox/line/__init__.py:1 <module>
(call)|         1|   0.00223136|   0.00223136|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattermapbox/marker/__init__.py:1 <module>
(call)|         1|   0.00622463|   0.00622463|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattermapbox/marker/colorbar/__init__.py:1 <module>
(call)|         1|  0.000238419|  0.000238419|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattermapbox/marker/colorbar/tickfont/__init__.py:1 <module>
(call)|         1|  0.000352859|  0.000352859|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattermapbox/marker/colorbar/tickformatstop/__init__.py:1 <module>
(call)|         1|  0.000188112|  0.000188112|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattermapbox/marker/colorbar/title/__init__.py:1 <module>
(call)|         1|  0.000229359|  0.000229359|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattermapbox/marker/colorbar/title/font/__init__.py:1 <module>
(call)|         1|  7.08103e-05|  7.08103e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattermapbox/selected/__init__.py:1 <module>
(call)|         1|  0.000327826|  0.000327826|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattermapbox/selected/marker/__init__.py:1 <module>
(call)|         1|   0.00015378|   0.00015378|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattermapbox/stream/__init__.py:1 <module>
(call)|         1|  0.000228643|  0.000228643|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattermapbox/textfont/__init__.py:1 <module>
(call)|         1|  7.65324e-05|  7.65324e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattermapbox/unselected/__init__.py:1 <module>
(call)|         1|  0.000240564|  0.000240564|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattermapbox/unselected/marker/__init__.py:1 <module>
(call)|         1|   0.00805211|   0.00805211|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterpolargl/__init__.py:1 <module>
(call)|         1|   0.00131559|   0.00131559|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterpolargl/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000455618|  0.000455618|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterpolargl/hoverlabel/font/__init__.py:1 <module>
(call)|         1|   0.00034523|   0.00034523|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterpolargl/line/__init__.py:1 <module>
(call)|         1|   0.00270677|   0.00270677|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterpolargl/marker/__init__.py:1 <module>
(call)|         1|   0.00607848|   0.00607848|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterpolargl/marker/colorbar/__init__.py:1 <module>
(call)|         1|  0.000212669|  0.000212669|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterpolargl/marker/colorbar/tickfont/__init__.py:1 <module>
(call)|         1|  0.000311136|  0.000311136|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterpolargl/marker/colorbar/tickformatstop/__init__.py:1 <module>
(call)|         1|  0.000225544|  0.000225544|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterpolargl/marker/colorbar/title/__init__.py:1 <module>
(call)|         1|  0.000185251|  0.000185251|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterpolargl/marker/colorbar/title/font/__init__.py:1 <module>
(call)|         1|  0.000957966|  0.000957966|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterpolargl/marker/line/__init__.py:1 <module>
(call)|         1|  0.000157595|  0.000157595|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterpolargl/selected/__init__.py:1 <module>
(call)|         1|  0.000192881|  0.000192881|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterpolargl/selected/marker/__init__.py:1 <module>
(call)|         1|  7.67708e-05|  7.67708e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterpolargl/selected/textfont/__init__.py:1 <module>
(call)|         1|  0.000222206|  0.000222206|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterpolargl/stream/__init__.py:1 <module>
(call)|         1|  0.000438213|  0.000438213|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterpolargl/textfont/__init__.py:1 <module>
(call)|         1|  0.000153542|  0.000153542|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterpolargl/unselected/__init__.py:1 <module>
(call)|         1|  0.000191689|  0.000191689|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterpolargl/unselected/marker/__init__.py:1 <module>
(call)|         1|  7.12872e-05|  7.12872e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterpolargl/unselected/textfont/__init__.py:1 <module>
(call)|         1|   0.00769019|   0.00769019|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterpolar/__init__.py:1 <module>
(call)|         1|    0.0008533|    0.0008533|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterpolar/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000409842|  0.000409842|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterpolar/hoverlabel/font/__init__.py:1 <module>
(call)|         1|  0.000336885|  0.000336885|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterpolar/line/__init__.py:1 <module>
(call)|         1|   0.00302362|   0.00302362|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterpolar/marker/__init__.py:1 <module>
(call)|         1|   0.00607967|   0.00607967|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterpolar/marker/colorbar/__init__.py:1 <module>
(call)|         1|  0.000267506|  0.000267506|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterpolar/marker/colorbar/tickfont/__init__.py:1 <module>
(call)|         1|  0.000322819|  0.000322819|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterpolar/marker/colorbar/tickformatstop/__init__.py:1 <module>
(call)|         1|  0.000200033|  0.000200033|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterpolar/marker/colorbar/title/__init__.py:1 <module>
(call)|         1|  0.000734806|  0.000734806|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterpolar/marker/colorbar/title/font/__init__.py:1 <module>
(call)|         1|  0.000276089|  0.000276089|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterpolar/marker/gradient/__init__.py:1 <module>
(call)|         1|  0.000903845|  0.000903845|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterpolar/marker/line/__init__.py:1 <module>
(call)|         1|  0.000118732|  0.000118732|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterpolar/selected/__init__.py:1 <module>
(call)|         1|  0.000268936|  0.000268936|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterpolar/selected/marker/__init__.py:1 <module>
(call)|         1|  7.43866e-05|  7.43866e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterpolar/selected/textfont/__init__.py:1 <module>
(call)|         1|  0.000119209|  0.000119209|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterpolar/stream/__init__.py:1 <module>
(call)|         1|  0.000553846|  0.000553846|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterpolar/textfont/__init__.py:1 <module>
(call)|         1|  0.000170708|  0.000170708|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterpolar/unselected/__init__.py:1 <module>
(call)|         1|  0.000207186|  0.000207186|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterpolar/unselected/marker/__init__.py:1 <module>
(call)|         1|  7.03335e-05|  7.03335e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterpolar/unselected/textfont/__init__.py:1 <module>
(call)|         1|    0.0123951|    0.0123951|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter/__init__.py:1 <module>
(call)|         1|   0.00133896|   0.00133896|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter/error_x/__init__.py:1 <module>
(call)|         1|   0.00114346|   0.00114346|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter/error_y/__init__.py:1 <module>
(call)|         1|  0.000674963|  0.000674963|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000392437|  0.000392437|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter/hoverlabel/font/__init__.py:1 <module>
(call)|         1|  0.000473022|  0.000473022|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter/line/__init__.py:1 <module>
(call)|         1|   0.00299883|   0.00299883|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter/marker/__init__.py:1 <module>
(call)|         1|   0.00606537|   0.00606537|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter/marker/colorbar/__init__.py:1 <module>
(call)|         1|  0.000259399|  0.000259399|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter/marker/colorbar/tickfont/__init__.py:1 <module>
(call)|         1|  0.000336885|  0.000336885|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter/marker/colorbar/tickformatstop/__init__.py:1 <module>
(call)|         1|  0.000207186|  0.000207186|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter/marker/colorbar/title/__init__.py:1 <module>
(call)|         1|  0.000267982|  0.000267982|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter/marker/colorbar/title/font/__init__.py:1 <module>
(call)|         1|  0.000281334|  0.000281334|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter/marker/gradient/__init__.py:1 <module>
(call)|         1|    0.0010438|    0.0010438|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter/marker/line/__init__.py:1 <module>
(call)|         1|  0.000144958|  0.000144958|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter/selected/__init__.py:1 <module>
(call)|         1|  0.000176191|  0.000176191|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter/selected/marker/__init__.py:1 <module>
(call)|         1|  7.62939e-05|  7.62939e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter/selected/textfont/__init__.py:1 <module>
(call)|         1|  0.000136137|  0.000136137|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter/stream/__init__.py:1 <module>
(call)|         1|  0.000457287|  0.000457287|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter/textfont/__init__.py:1 <module>
(call)|         1|  0.000145435|  0.000145435|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter/unselected/__init__.py:1 <module>
(call)|         1|   0.00020647|   0.00020647|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter/unselected/marker/__init__.py:1 <module>
(call)|         1|  8.51154e-05|  8.51154e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter/unselected/textfont/__init__.py:1 <module>
(call)|         1|   0.00831556|   0.00831556|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterternary/__init__.py:1 <module>
(call)|         1|  0.000717163|  0.000717163|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterternary/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000429869|  0.000429869|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterternary/hoverlabel/font/__init__.py:1 <module>
(call)|         1|  0.000347137|  0.000347137|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterternary/line/__init__.py:1 <module>
(call)|         1|   0.00268579|   0.00268579|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterternary/marker/__init__.py:1 <module>
(call)|         1|   0.00684381|   0.00684381|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterternary/marker/colorbar/__init__.py:1 <module>
(call)|         1|  0.000189066|  0.000189066|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterternary/marker/colorbar/tickfont/__init__.py:1 <module>
(call)|         1|  0.000319719|  0.000319719|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterternary/marker/colorbar/tickformatstop/__init__.py:1 <module>
(call)|         1|  0.000201464|  0.000201464|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterternary/marker/colorbar/title/__init__.py:1 <module>
(call)|         1|   0.00019002|   0.00019002|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterternary/marker/colorbar/title/font/__init__.py:1 <module>
(call)|         1|  0.000267029|  0.000267029|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterternary/marker/gradient/__init__.py:1 <module>
(call)|         1|  0.000981569|  0.000981569|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterternary/marker/line/__init__.py:1 <module>
(call)|         1|  0.000137091|  0.000137091|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterternary/selected/__init__.py:1 <module>
(call)|         1|  0.000212431|  0.000212431|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterternary/selected/marker/__init__.py:1 <module>
(call)|         1|  7.24792e-05|  7.24792e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterternary/selected/textfont/__init__.py:1 <module>
(call)|         1|  0.000164032|  0.000164032|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterternary/stream/__init__.py:1 <module>
(call)|         1|  0.000449419|  0.000449419|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterternary/textfont/__init__.py:1 <module>
(call)|         1|  0.000217676|  0.000217676|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterternary/unselected/__init__.py:1 <module>
(call)|         1|  0.000217676|  0.000217676|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterternary/unselected/marker/__init__.py:1 <module>
(call)|         1|  7.60555e-05|  7.60555e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterternary/unselected/textfont/__init__.py:1 <module>
(call)|         1|   0.00921845|   0.00921845|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/surface/__init__.py:1 <module>
(call)|         1|   0.00607371|   0.00607371|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/surface/colorbar/__init__.py:1 <module>
(call)|         1|  0.000202179|  0.000202179|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/surface/colorbar/tickfont/__init__.py:1 <module>
(call)|         1|  0.000457048|  0.000457048|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/surface/colorbar/tickformatstop/__init__.py:1 <module>
(call)|         1|  0.000239849|  0.000239849|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/surface/colorbar/title/__init__.py:1 <module>
(call)|         1|  0.000185013|  0.000185013|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/surface/colorbar/title/font/__init__.py:1 <module>
(call)|         1|  0.000202894|  0.000202894|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/surface/contours/__init__.py:1 <module>
(call)|         1|  0.000807047|  0.000807047|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/surface/contours/x/__init__.py:1 <module>
(call)|         1|  0.000231504|  0.000231504|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/surface/contours/x/project/__init__.py:1 <module>
(call)|         1|   0.00136447|   0.00136447|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/surface/contours/y/__init__.py:1 <module>
(call)|         1|  0.000264168|  0.000264168|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/surface/contours/y/project/__init__.py:1 <module>
(call)|         1|  0.000888348|  0.000888348|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/surface/contours/z/__init__.py:1 <module>
(call)|         1|  0.000193596|  0.000193596|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/surface/contours/z/project/__init__.py:1 <module>
(call)|         1|  0.000680923|  0.000680923|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/surface/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000533342|  0.000533342|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/surface/hoverlabel/font/__init__.py:1 <module>
(call)|         1|  0.000396252|  0.000396252|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/surface/lighting/__init__.py:1 <module>
(call)|         1|   0.00027895|   0.00027895|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/surface/lightposition/__init__.py:1 <module>
(call)|         1|  0.000175714|  0.000175714|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/surface/stream/__init__.py:1 <module>
(call)|         1|   0.00221682|   0.00221682|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/table/__init__.py:1 <module>
(call)|         1|   0.00114393|   0.00114393|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/table/cells/__init__.py:1 <module>
(call)|         1|  0.000147104|  0.000147104|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/table/cells/fill/__init__.py:1 <module>
(call)|         1|  0.000475168|  0.000475168|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/table/cells/font/__init__.py:1 <module>
(call)|         1|  0.000352859|  0.000352859|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/table/cells/line/__init__.py:1 <module>
(call)|         1|   0.00029254|   0.00029254|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/table/domain/__init__.py:1 <module>
(call)|         1|   0.00117874|   0.00117874|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/table/header/__init__.py:1 <module>
(call)|         1|  0.000140905|  0.000140905|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/table/header/fill/__init__.py:1 <module>
(call)|         1|  0.000411987|  0.000411987|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/table/header/font/__init__.py:1 <module>
(call)|         1|  0.000343561|  0.000343561|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/table/header/line/__init__.py:1 <module>
(call)|         1|  0.000637293|  0.000637293|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/table/hoverlabel/__init__.py:1 <module>
(call)|         1|   0.00037837|   0.00037837|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/table/hoverlabel/font/__init__.py:1 <module>
(call)|         1|   0.00015831|   0.00015831|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/table/stream/__init__.py:1 <module>
   220|         0|            0|            0|  0.00%|
   221|         0|            0|            0|  0.00%|
   222|     23362|    0.0703633|  3.01187e-06|  0.01%|
   223|         0|            0|            0|  0.00%|
   224|     23362|    0.0965867|  4.13435e-06|  0.02%|
   225|         0|            0|            0|  0.00%|
   226|         0|            0|            0|  0.00%|
   227|         0|            0|            0|  0.00%|
   228|         0|            0|            0|  0.00%|
   229|         0|            0|            0|  0.00%|
   230|         0|            0|            0|  0.00%|
   231|         0|            0|            0|  0.00%|
   232|         0|            0|            0|  0.00%|
   233|         0|            0|            0|  0.00%|
   234|         0|            0|            0|  0.00%|
   235|         0|            0|            0|  0.00%|
   236|         0|            0|            0|  0.00%|
   237|         0|            0|            0|  0.00%|
   238|         0|            0|            0|  0.00%|
   239|         0|            0|            0|  0.00%|
   240|         0|            0|            0|  0.00%|
   241|         0|            0|            0|  0.00%|
   242|         0|            0|            0|  0.00%|
   243|         0|            0|            0|  0.00%|
   244|         0|            0|            0|  0.00%|
   245|         0|            0|            0|  0.00%|
   246|         0|            0|            0|  0.00%|
   247|         0|            0|            0|  0.00%|
   248|         0|            0|            0|  0.00%|
   249|         0|            0|            0|  0.00%|
   250|         0|            0|            0|  0.00%|
   251|         0|            0|            0|  0.00%|
   252|         0|            0|            0|  0.00%|
   253|         0|            0|            0|  0.00%|
   254|         0|            0|            0|  0.00%|
   255|         0|            0|            0|  0.00%|
   256|         0|            0|            0|  0.00%|
   257|         0|            0|            0|  0.00%|
   258|         0|            0|            0|  0.00%|
   259|         0|            0|            0|  0.00%|
   260|         0|            0|            0|  0.00%|
   261|         0|            0|            0|  0.00%|
   262|         0|            0|            0|  0.00%|
   263|         0|            0|            0|  0.00%|
   264|         0|            0|            0|  0.00%|
   265|         0|            0|            0|  0.00%|
   266|         0|            0|            0|  0.00%|
   267|         0|            0|            0|  0.00%|
   268|         0|            0|            0|  0.00%|
   269|        15|  6.79493e-05|  4.52995e-06|  0.00%|
   270|         0|            0|            0|  0.00%|
   271|        15|  7.70092e-05|  5.13395e-06|  0.00%|
   272|        15|  8.17776e-05|  5.45184e-06|  0.00%|
   273|         0|            0|            0|  0.00%|
   274|         0|            0|            0|  0.00%|
   275|         0|            0|            0|  0.00%|
   276|        14|  7.20024e-05|  5.14303e-06|  0.00%|
   277|        14|  0.000160694|  1.14782e-05|  0.00%|
(call)|        14|  0.000130653|  9.33238e-06|  0.00%|# <frozen importlib._bootstrap>:710 module_repr
   278|         0|            0|            0|  0.00%|
   279|         0|            0|            0|  0.00%|
   280|         1|   3.8147e-06|   3.8147e-06|  0.00%|
   281|         1|  9.05991e-06|  9.05991e-06|  0.00%|
   282|         0|            0|            0|  0.00%|
   283|         0|            0|            0|  0.00%|
   284|         0|            0|            0|  0.00%|
   285|         1|  5.24521e-06|  5.24521e-06|  0.00%|
   286|         1|  2.09808e-05|  2.09808e-05|  0.00%|
(call)|         1|  8.96454e-05|  8.96454e-05|  0.00%|# <frozen importlib._bootstrap>:593 _module_repr_from_spec
   287|         0|            0|            0|  0.00%|
   288|         0|            0|            0|  0.00%|
   289|         0|            0|            0|  0.00%|
   290|         0|            0|            0|  0.00%|
   291|         0|            0|            0|  0.00%|
   292|         0|            0|            0|  0.00%|
   293|         0|            0|            0|  0.00%|
   294|         0|            0|            0|  0.00%|
   295|         0|            0|            0|  0.00%|
   296|         0|            0|            0|  0.00%|
   297|         0|            0|            0|  0.00%|
   298|         0|            0|            0|  0.00%|
   299|         0|            0|            0|  0.00%|
   300|         0|            0|            0|  0.00%|
   301|         0|            0|            0|  0.00%|
   302|         0|            0|            0|  0.00%|
   303|         0|            0|            0|  0.00%|
   304|         0|            0|            0|  0.00%|
   305|         0|            0|            0|  0.00%|
   306|         0|            0|            0|  0.00%|
   307|      3079|   0.00805831|  2.61718e-06|  0.00%|
   308|      3079|    0.0121133|  3.93418e-06|  0.00%|
   309|      3079|    0.0115087|  3.73781e-06|  0.00%|
   310|         0|            0|            0|  0.00%|
   311|      3079|   0.00827003|  2.68595e-06|  0.00%|
   312|         0|            0|            0|  0.00%|
   313|         0|            0|            0|  0.00%|
   314|         0|            0|            0|  0.00%|
   315|      3079|    0.0114529|  3.71969e-06|  0.00%|
   316|      3079|    0.0132778|  4.31236e-06|  0.00%|
   317|         0|            0|            0|  0.00%|
   318|      3079|    0.0114031|   3.7035e-06|  0.00%|
   319|      3079|    0.0136397|  4.42991e-06|  0.00%|
   320|      3079|    0.0126393|    4.105e-06|  0.00%|
   321|     27671|      0.17203|  6.21699e-06|  0.04%|
(call)|     12300|    0.0749927|  6.09696e-06|  0.02%|# <frozen importlib._bootstrap>:321 <genexpr>
   322|         8|  4.26769e-05|  5.33462e-06|  0.00%|
   323|         8|  4.19617e-05|  5.24521e-06|  0.00%|
   324|         0|            0|            0|  0.00%|
   325|         0|            0|            0|  0.00%|
   326|         0|            0|            0|  0.00%|
   327|      3071|    0.0355761|  1.15845e-05|  0.01%|
(call)|      3071|     0.022629|  7.36862e-06|  0.00%|# <frozen importlib._bootstrap>:222 _verbose_message
   328|         0|            0|            0|  0.00%|
   329|      3079|    0.0133421|  4.33327e-06|  0.00%|
   330|         0|            0|            0|  0.00%|
   331|         0|            0|            0|  0.00%|
   332|         0|            0|            0|  0.00%|
   333|         0|            0|            0|  0.00%|
   334|         0|            0|            0|  0.00%|
   335|         0|            0|            0|  0.00%|
   336|         0|            0|            0|  0.00%|
   337|         0|            0|            0|  0.00%|
   338|         0|            0|            0|  0.00%|
   339|         0|            0|            0|  0.00%|
   340|         0|            0|            0|  0.00%|
   341|         0|            0|            0|  0.00%|
   342|         0|            0|            0|  0.00%|
   343|         0|            0|            0|  0.00%|
   344|         0|            0|            0|  0.00%|
   345|         0|            0|            0|  0.00%|
   346|         0|            0|            0|  0.00%|
   347|         0|            0|            0|  0.00%|
   348|         0|            0|            0|  0.00%|
   349|         0|            0|            0|  0.00%|
   350|         0|            0|            0|  0.00%|
   351|         0|            0|            0|  0.00%|
   352|         0|            0|            0|  0.00%|
   353|         0|            0|            0|  0.00%|
   354|         0|            0|            0|  0.00%|
   355|         0|            0|            0|  0.00%|
   356|         0|            0|            0|  0.00%|
   357|         0|            0|            0|  0.00%|
   358|         0|            0|            0|  0.00%|
   359|         0|            0|            0|  0.00%|
   360|         0|            0|            0|  0.00%|
   361|         0|            0|            0|  0.00%|
   362|         0|            0|            0|  0.00%|
   363|         0|            0|            0|  0.00%|
   364|         0|            0|            0|  0.00%|
   365|         0|            0|            0|  0.00%|
   366|         0|            0|            0|  0.00%|
   367|         0|            0|            0|  0.00%|
   368|         0|            0|            0|  0.00%|
   369|      4332|    0.0142896|  3.29862e-06|  0.00%|
   370|         0|            0|            0|  0.00%|
   371|      4332|    0.0201209|   4.6447e-06|  0.00%|
   372|      4332|    0.0166314|  3.83919e-06|  0.00%|
   373|      4332|    0.0162868|  3.75966e-06|  0.00%|
   374|      4332|    0.0158792|  3.66555e-06|  0.00%|
   375|      4332|    0.0159159|  3.67402e-06|  0.00%|
   376|         0|            0|            0|  0.00%|
   377|         0|            0|            0|  0.00%|
   378|      4332|    0.0161436|  3.72658e-06|  0.00%|
   379|      4332|    0.0164468|  3.79659e-06|  0.00%|
   380|         0|            0|            0|  0.00%|
   381|         0|            0|            0|  0.00%|
   382|         0|            0|            0|  0.00%|
   383|         0|            0|            0|  0.00%|
   384|         0|            0|            0|  0.00%|
   385|         0|            0|            0|  0.00%|
   386|         0|            0|            0|  0.00%|
   387|         0|            0|            0|  0.00%|
   388|         0|            0|            0|  0.00%|
   389|         0|            0|            0|  0.00%|
   390|         0|            0|            0|  0.00%|
   391|         0|            0|            0|  0.00%|
   392|         0|            0|            0|  0.00%|
   393|         0|            0|            0|  0.00%|
   394|         0|            0|            0|  0.00%|
   395|         0|            0|            0|  0.00%|
   396|         0|            0|            0|  0.00%|
   397|         0|            0|            0|  0.00%|
   398|         0|            0|            0|  0.00%|
   399|         0|            0|            0|  0.00%|
   400|         0|            0|            0|  0.00%|
   401|         0|            0|            0|  0.00%|
   402|         0|            0|            0|  0.00%|
   403|      5925|    0.0152309|  2.57062e-06|  0.00%|
   404|         0|            0|            0|  0.00%|
   405|      5925|    0.0215652|   3.6397e-06|  0.00%|
   406|      3070|    0.0112362|     3.66e-06|  0.00%|
   407|      3070|    0.0106487|  3.46864e-06|  0.00%|
   408|         0|            0|            0|  0.00%|
   409|      3070|    0.0347729|  1.13267e-05|  0.01%|
(call)|      3070|     0.487143|  0.000158678|  0.10%|# <frozen importlib._bootstrap_external>:369 _get_cached
   410|      5925|    0.0212233|  3.58199e-06|  0.00%|
   411|         0|            0|            0|  0.00%|
   412|         0|            0|            0|  0.00%|
   413|         0|            0|            0|  0.00%|
   414|         0|            0|            0|  0.00%|
   415|         0|            0|            0|  0.00%|
   416|      6648|    0.0417023|   6.2729e-06|  0.01%|
   417|         0|            0|            0|  0.00%|
   418|         0|            0|            0|  0.00%|
   419|      6648|    0.0281532|  4.23483e-06|  0.01%|
   420|      4328|    0.0201716|  4.66073e-06|  0.00%|
   421|         0|            0|            0|  0.00%|
   422|      2320|   0.00804424|  3.46735e-06|  0.00%|
   423|         0|            0|            0|  0.00%|
   424|      3072|    0.0080595|  2.62354e-06|  0.00%|
   425|         0|            0|            0|  0.00%|
   426|      3072|    0.0112453|  3.66056e-06|  0.00%|
   427|         0|            0|            0|  0.00%|
   428|         0|            0|            0|  0.00%|
   429|         0|            0|            0|  0.00%|
   430|         0|            0|            0|  0.00%|
   431|         0|            0|            0|  0.00%|
   432|         0|            0|            0|  0.00%|
   433|        16|   6.1512e-05|   3.8445e-06|  0.00%|
   434|         0|            0|            0|  0.00%|
   435|        16|  9.13143e-05|  5.70714e-06|  0.00%|
   436|         0|            0|            0|  0.00%|
   437|         0|            0|            0|  0.00%|
   438|         0|            0|            0|  0.00%|
   439|         0|            0|            0|  0.00%|
   440|         0|            0|            0|  0.00%|
   441|         0|            0|            0|  0.00%|
   442|         0|            0|            0|  0.00%|
   443|         0|            0|            0|  0.00%|
   444|         0|            0|            0|  0.00%|
   445|         0|            0|            0|  0.00%|
   446|        16|  6.93798e-05|  4.33624e-06|  0.00%|
   447|        16|  8.27312e-05|   5.1707e-06|  0.00%|
   448|        10|    4.673e-05|    4.673e-06|  0.00%|
   449|        10|  0.000129461|  1.29461e-05|  0.00%|
(call)|         4|  0.000168085|  4.20213e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/urllib3/packages/six.py:205 is_package
(call)|         6|  0.000207901|  3.46502e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/six.py:209 is_package
   450|         0|            0|            0|  0.00%|
   451|         0|            0|            0|  0.00%|
   452|         0|            0|            0|  0.00%|
   453|         0|            0|            0|  0.00%|
   454|         6|  2.55108e-05|   4.2518e-06|  0.00%|
   455|         0|            0|            0|  0.00%|
   456|        16|  0.000212908|  1.33067e-05|  0.00%|
(call)|        16|  0.000440598|  2.75373e-05|  0.00%|# <frozen importlib._bootstrap>:369 __init__
   457|         0|            0|            0|  0.00%|
   458|         0|            0|            0|  0.00%|
   459|         0|            0|            0|  0.00%|
   460|         0|            0|            0|  0.00%|
   461|         0|            0|            0|  0.00%|
   462|         0|            0|            0|  0.00%|
   463|         0|            0|            0|  0.00%|
   464|         0|            0|            0|  0.00%|
   465|         0|            0|            0|  0.00%|
   466|         0|            0|            0|  0.00%|
   467|         0|            0|            0|  0.00%|
   468|         0|            0|            0|  0.00%|
   469|         0|            0|            0|  0.00%|
   470|         0|            0|            0|  0.00%|
   471|         0|            0|            0|  0.00%|
   472|         0|            0|            0|  0.00%|
   473|         0|            0|            0|  0.00%|
   474|         0|            0|            0|  0.00%|
   475|         0|            0|            0|  0.00%|
   476|         0|            0|            0|  0.00%|
   477|         0|            0|            0|  0.00%|
   478|         0|            0|            0|  0.00%|
   479|         0|            0|            0|  0.00%|
   480|         0|            0|            0|  0.00%|
   481|         0|            0|            0|  0.00%|
   482|         0|            0|            0|  0.00%|
   483|         0|            0|            0|  0.00%|
   484|         0|            0|            0|  0.00%|
   485|         0|            0|            0|  0.00%|
   486|         0|            0|            0|  0.00%|
   487|         0|            0|            0|  0.00%|
   488|         0|            0|            0|  0.00%|
   489|         0|            0|            0|  0.00%|
   490|         0|            0|            0|  0.00%|
   491|         0|            0|            0|  0.00%|
   492|         0|            0|            0|  0.00%|
   493|         0|            0|            0|  0.00%|
   494|         0|            0|            0|  0.00%|
   495|         0|            0|            0|  0.00%|
   496|         0|            0|            0|  0.00%|
   497|         0|            0|            0|  0.00%|
   498|         0|            0|            0|  0.00%|
   499|         0|            0|            0|  0.00%|
   500|         0|            0|            0|  0.00%|
   501|         0|            0|            0|  0.00%|
   502|         0|            0|            0|  0.00%|
   503|         0|            0|            0|  0.00%|
   504|      3079|    0.0100701|  3.27057e-06|  0.00%|
   505|         0|            0|            0|  0.00%|
   506|         0|            0|            0|  0.00%|
   507|         0|            0|            0|  0.00%|
   508|      3079|    0.0145159|  4.71448e-06|  0.00%|
   509|         0|            0|            0|  0.00%|
   510|         0|            0|            0|  0.00%|
   511|         0|            0|            0|  0.00%|
   512|         0|            0|            0|  0.00%|
   513|         0|            0|            0|  0.00%|
   514|      3079|    0.0135176|  4.39026e-06|  0.00%|
   515|      2940|    0.0115988|  3.94518e-06|  0.00%|
   516|      2940|    0.0112662|  3.83205e-06|  0.00%|
   517|         0|            0|            0|  0.00%|
   518|         1|  3.57628e-06|  3.57628e-06|  0.00%|
   519|         1|  5.24521e-06|  5.24521e-06|  0.00%|
   520|         0|            0|            0|  0.00%|
   521|         1|  9.29832e-06|  9.29832e-06|  0.00%|
   522|         0|            0|            0|  0.00%|
   523|         1|  7.15256e-06|  7.15256e-06|  0.00%|
   524|         1|  1.35899e-05|  1.35899e-05|  0.00%|
   525|         1|  5.72205e-06|  5.72205e-06|  0.00%|
   526|         0|            0|            0|  0.00%|
   527|         0|            0|            0|  0.00%|
   528|         0|            0|            0|  0.00%|
   529|         0|            0|            0|  0.00%|
   530|         0|            0|            0|  0.00%|
   531|         0|            0|            0|  0.00%|
   532|         0|            0|            0|  0.00%|
   533|         0|            0|            0|  0.00%|
   534|         0|            0|            0|  0.00%|
   535|         0|            0|            0|  0.00%|
   536|         1|  5.24521e-06|  5.24521e-06|  0.00%|
   537|      2940|     0.011502|  3.91225e-06|  0.00%|
   538|      2940|    0.0120356|  4.09374e-06|  0.00%|
   539|         0|            0|            0|  0.00%|
   540|         0|            0|            0|  0.00%|
   541|         0|            0|            0|  0.00%|
   542|      3079|    0.0124168|  4.03275e-06|  0.00%|
   543|      2940|    0.0110686|  3.76482e-06|  0.00%|
   544|      2940|     0.033788|  1.14925e-05|  0.01%|
(call)|      2932|    0.0304723|   1.0393e-05|  0.01%|# <frozen importlib._bootstrap>:416 parent
   545|         0|            0|            0|  0.00%|
   546|         0|            0|            0|  0.00%|
   547|         0|            0|            0|  0.00%|
   548|      3079|     0.012018|   3.9032e-06|  0.00%|
   549|      3079|    0.0129545|  4.20736e-06|  0.00%|
   550|         0|            0|            0|  0.00%|
   551|         0|            0|            0|  0.00%|
   552|         0|            0|            0|  0.00%|
   553|      3079|    0.0207336|  6.73387e-06|  0.00%|
   554|      3079|    0.0128884|  4.18591e-06|  0.00%|
   555|      1159|   0.00444651|   3.8365e-06|  0.00%|
   556|      1159|   0.00482059|  4.15926e-06|  0.00%|
   557|         0|            0|            0|  0.00%|
   558|         0|            0|            0|  0.00%|
   559|         0|            0|            0|  0.00%|
   560|      3079|    0.0339065|  1.10122e-05|  0.01%|
(call)|      3071|    0.0192766|  6.27698e-06|  0.00%|# <frozen importlib._bootstrap>:424 has_location
   561|      3070|    0.0152452|  4.96586e-06|  0.00%|
   562|      2856|    0.0110457|  3.86754e-06|  0.00%|
   563|      2856|    0.0118318|  4.14277e-06|  0.00%|
   564|         0|            0|            0|  0.00%|
   565|         0|            0|            0|  0.00%|
   566|         0|            0|            0|  0.00%|
   567|      3070|    0.0144842|  4.71797e-06|  0.00%|
   568|      3070|    0.0354443|  1.15454e-05|  0.01%|
(call)|      3070|     0.574792|  0.000187229|  0.12%|# <frozen importlib._bootstrap>:403 cached
   569|      2855|     0.011889|  4.16427e-06|  0.00%|
   570|      2855|    0.0308685|  1.08121e-05|  0.01%|
(call)|      2855|    0.0270278|  9.46685e-06|  0.01%|# <frozen importlib._bootstrap>:403 cached
   571|         0|            0|            0|  0.00%|
   572|         0|            0|            0|  0.00%|
   573|      3079|    0.0124931|  4.05753e-06|  0.00%|
   574|         0|            0|            0|  0.00%|
   575|         0|            0|            0|  0.00%|
   576|      3079|   0.00844336|  2.74224e-06|  0.00%|
   577|         0|            0|            0|  0.00%|
   578|         0|            0|            0|  0.00%|
   579|      3079|    0.0116594|  3.78674e-06|  0.00%|
   580|      3079|    0.0122361|  3.97406e-06|  0.00%|
   581|         0|            0|            0|  0.00%|
   582|         0|            0|            0|  0.00%|
   583|      3078|    0.0338502|  1.09975e-05|  0.01%|
(call)|      2855|    0.0175133|  6.13425e-06|  0.00%|# <frozen importlib._bootstrap_external>:719 create_module
(call)|       215|      13.6917|    0.0636823|  2.88%|# <frozen importlib._bootstrap_external>:1040 create_module
(call)|         8|  7.20024e-05|   9.0003e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/tlz/_build_tlz.py:50 create_module
   584|         1|   3.8147e-06|   3.8147e-06|  0.00%|
   585|         0|            0|            0|  0.00%|
   586|         0|            0|            0|  0.00%|
   587|      3079|    0.0112755|  3.66208e-06|  0.00%|
   588|      2856|    0.0296752|  1.03905e-05|  0.01%|
(call)|      2856|    0.0211167|  7.39381e-06|  0.00%|# <frozen importlib._bootstrap>:35 _new_module
   589|      3079|    0.0365438|  1.18687e-05|  0.01%|
(call)|      3079|      1.03847|  0.000337274|  0.22%|# <frozen importlib._bootstrap>:504 _init_module_attrs
   590|      3079|    0.0114799|  3.72844e-06|  0.00%|
   591|         0|            0|            0|  0.00%|
   592|         0|            0|            0|  0.00%|
   593|         1|  8.34465e-06|  8.34465e-06|  0.00%|
   594|         0|            0|            0|  0.00%|
   595|         0|            0|            0|  0.00%|
   596|         1|  1.12057e-05|  1.12057e-05|  0.00%|
   597|         1|  8.10623e-06|  8.10623e-06|  0.00%|
   598|         0|            0|            0|  0.00%|
   599|         0|            0|            0|  0.00%|
   600|         0|            0|            0|  0.00%|
   601|         0|            0|            0|  0.00%|
   602|         0|            0|            0|  0.00%|
   603|         1|  2.40803e-05|  2.40803e-05|  0.00%|
(call)|         1|  2.81334e-05|  2.81334e-05|  0.00%|# <frozen importlib._bootstrap>:424 has_location
   604|         1|  9.77516e-06|  9.77516e-06|  0.00%|
   605|         0|            0|            0|  0.00%|
   606|         0|            0|            0|  0.00%|
   607|         0|            0|            0|  0.00%|
   608|         0|            0|            0|  0.00%|
   609|         0|            0|            0|  0.00%|
   610|         0|            0|            0|  0.00%|
   611|         0|            0|            0|  0.00%|
   612|         0|            0|            0|  0.00%|
   613|         0|            0|            0|  0.00%|
   614|         0|            0|            0|  0.00%|
   615|         0|            0|            0|  0.00%|
   616|         0|            0|            0|  0.00%|
   617|         0|            0|            0|  0.00%|
   618|         0|            0|            0|  0.00%|
   619|         0|            0|            0|  0.00%|
   620|         0|            0|            0|  0.00%|
   621|         0|            0|            0|  0.00%|
   622|         0|            0|            0|  0.00%|
   623|         0|            0|            0|  0.00%|
   624|         0|            0|            0|  0.00%|
   625|         0|            0|            0|  0.00%|
   626|         0|            0|            0|  0.00%|
   627|         0|            0|            0|  0.00%|
   628|         0|            0|            0|  0.00%|
   629|         0|            0|            0|  0.00%|
   630|         0|            0|            0|  0.00%|
   631|         0|            0|            0|  0.00%|
   632|         0|            0|            0|  0.00%|
   633|         0|            0|            0|  0.00%|
   634|        16|  4.31538e-05|  2.69711e-06|  0.00%|
   635|         0|            0|            0|  0.00%|
   636|         0|            0|            0|  0.00%|
   637|         0|            0|            0|  0.00%|
   638|        16|  0.000209808|   1.3113e-05|  0.00%|
(call)|         4|  0.000353098|  8.82745e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/urllib3/packages/six.py:191 load_module
(call)|         6|  0.000466824|  7.78039e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/six.py:195 load_module
(call)|         6|      0.73918|     0.123197|  0.16%|# /opt/anaconda3/lib/python3.7/site-packages/pkg_resources/extern/__init__.py:35 load_module
   639|         0|            0|            0|  0.00%|
   640|        16|  7.20024e-05|  4.50015e-06|  0.00%|
   641|        16|  7.41482e-05|  4.63426e-06|  0.00%|
   642|         0|            0|            0|  0.00%|
   643|         0|            0|            0|  0.00%|
   644|         0|            0|            0|  0.00%|
   645|         0|            0|            0|  0.00%|
   646|        16|  6.96182e-05|  4.35114e-06|  0.00%|
   647|         9|  3.33786e-05|  3.70873e-06|  0.00%|
   648|         0|            0|            0|  0.00%|
   649|         0|            0|            0|  0.00%|
   650|         0|            0|            0|  0.00%|
   651|         9|  4.14848e-05|  4.60943e-06|  0.00%|
   652|         9|  4.07696e-05|  4.52995e-06|  0.00%|
   653|         3|  1.43051e-05|  4.76837e-06|  0.00%|
   654|         0|            0|            0|  0.00%|
   655|         0|            0|            0|  0.00%|
   656|        16|  8.55923e-05|  5.34952e-06|  0.00%|
   657|         9|    4.673e-05|  5.19223e-06|  0.00%|
   658|         9|  3.43323e-05|   3.8147e-06|  0.00%|
   659|         0|            0|            0|  0.00%|
   660|         0|            0|            0|  0.00%|
   661|        16|   5.8651e-05|  3.66569e-06|  0.00%|
   662|         0|            0|            0|  0.00%|
   663|      3095|   0.00900316|  2.90894e-06|  0.00%|
   664|         0|            0|            0|  0.00%|
   665|      3095|    0.0119648|  3.86585e-06|  0.00%|
   666|         0|            0|            0|  0.00%|
   667|      3094|    0.0133581|  4.31743e-06|  0.00%|
   668|        16|  0.000185013|  1.15633e-05|  0.00%|
(call)|        16|     0.740573|    0.0462858|  0.16%|# <frozen importlib._bootstrap>:634 _load_backward_compatible
   669|         0|            0|            0|  0.00%|
   670|      3079|     0.034723|  1.12774e-05|  0.01%|
(call)|      3079|      14.9232|   0.00484677|  3.14%|# <frozen importlib._bootstrap>:576 module_from_spec
   671|      3079|    0.0565853|  1.83778e-05|  0.01%|
(call)|      3079|    0.0316803|  1.02892e-05|  0.01%|# <frozen importlib._bootstrap>:307 __init__
(call)|      3079|    0.0330007|   1.0718e-05|  0.01%|# <frozen importlib._bootstrap>:311 __enter__
   672|      3079|     0.011821|  3.83924e-06|  0.00%|
   673|         0|            0|            0|  0.00%|
   674|         0|            0|            0|  0.00%|
   675|         0|            0|            0|  0.00%|
   676|         0|            0|            0|  0.00%|
   677|      3079|    0.0670748|  2.17846e-05|  0.01%|
(call)|      2855|      80.9051|     0.028338| 17.00%|# <frozen importlib._bootstrap_external>:722 exec_module
(call)|      3079|     0.281344|  9.13752e-05|  0.06%|# <frozen importlib._bootstrap>:318 __exit__
(call)|       215|       1.1652|   0.00541954|  0.24%|# <frozen importlib._bootstrap_external>:1048 exec_module
(call)|         1|  9.05991e-06|  9.05991e-06|  0.00%|# <frozen importlib._bootstrap_external>:1159 exec_module
(call)|         8|     0.019361|   0.00242013|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/tlz/_build_tlz.py:53 exec_module
   678|         0|            0|            0|  0.00%|
   679|         0|            0|            0|  0.00%|
   680|         0|            0|            0|  0.00%|
   681|         0|            0|            0|  0.00%|
   682|      3071|    0.0141954|  4.62242e-06|  0.00%|
   683|         0|            0|            0|  0.00%|
   684|         0|            0|            0|  0.00%|
   685|         0|            0|            0|  0.00%|
   686|         0|            0|            0|  0.00%|
   687|         0|            0|            0|  0.00%|
   688|         0|            0|            0|  0.00%|
   689|         0|            0|            0|  0.00%|
   690|         0|            0|            0|  0.00%|
   691|         0|            0|            0|  0.00%|
   692|         0|            0|            0|  0.00%|
   693|         0|            0|            0|  0.00%|
   694|         0|            0|            0|  0.00%|
   695|         0|            0|            0|  0.00%|
   696|         0|            0|            0|  0.00%|
   697|         0|            0|            0|  0.00%|
   698|         0|            0|            0|  0.00%|
   699|         0|            0|            0|  0.00%|
   700|         0|            0|            0|  0.00%|
   701|         0|            0|            0|  0.00%|
   702|         0|            0|            0|  0.00%|
   703|         0|            0|            0|  0.00%|
   704|         0|            0|            0|  0.00%|
   705|         0|            0|            0|  0.00%|
   706|         0|            0|            0|  0.00%|
   707|         0|            0|            0|  0.00%|
   708|         0|            0|            0|  0.00%|
   709|         0|            0|            0|  0.00%|
   710|        14|  5.22137e-05|  3.72955e-06|  0.00%|
   711|         0|            0|            0|  0.00%|
   712|         0|            0|            0|  0.00%|
   713|         0|            0|            0|  0.00%|
   714|         0|            0|            0|  0.00%|
   715|         0|            0|            0|  0.00%|
   716|         0|            0|            0|  0.00%|
   717|        14|  7.84397e-05|  5.60284e-06|  0.00%|
   718|         0|            0|            0|  0.00%|
   719|      3197|   0.00935364|  2.92575e-06|  0.00%|
   720|         0|            0|            0|  0.00%|
   721|      3197|    0.0125246|  3.91761e-06|  0.00%|
   722|      3020|     0.011071|  3.66588e-06|  0.00%|
   723|       177|   0.00116038|  6.55584e-06|  0.00%|
   724|         0|            0|            0|  0.00%|
   725|         0|            0|            0|  0.00%|
   726|       177|  0.000693321|  3.91707e-06|  0.00%|
   727|         0|            0|            0|  0.00%|
   728|         0|            0|            0|  0.00%|
   729|         0|            0|            0|  0.00%|
   730|         0|            0|            0|  0.00%|
   731|         0|            0|            0|  0.00%|
   732|         0|            0|            0|  0.00%|
   733|         0|            0|            0|  0.00%|
   734|         0|            0|            0|  0.00%|
   735|         0|            0|            0|  0.00%|
   736|         0|            0|            0|  0.00%|
   737|         0|            0|            0|  0.00%|
   738|         0|            0|            0|  0.00%|
   739|         0|            0|            0|  0.00%|
   740|         0|            0|            0|  0.00%|
   741|         0|            0|            0|  0.00%|
   742|         0|            0|            0|  0.00%|
   743|         0|            0|            0|  0.00%|
   744|         0|            0|            0|  0.00%|
   745|         0|            0|            0|  0.00%|
   746|         0|            0|            0|  0.00%|
   747|         0|            0|            0|  0.00%|
   748|         0|            0|            0|  0.00%|
   749|         0|            0|            0|  0.00%|
   750|         0|            0|            0|  0.00%|
   751|         0|            0|            0|  0.00%|
   752|         0|            0|            0|  0.00%|
   753|         0|            0|            0|  0.00%|
   754|         0|            0|            0|  0.00%|
   755|         0|            0|            0|  0.00%|
   756|         0|            0|            0|  0.00%|
   757|         0|            0|            0|  0.00%|
   758|         0|            0|            0|  0.00%|
   759|         0|            0|            0|  0.00%|
   760|         0|            0|            0|  0.00%|
   761|         0|            0|            0|  0.00%|
   762|         0|            0|            0|  0.00%|
   763|         0|            0|            0|  0.00%|
   764|         0|            0|            0|  0.00%|
   765|         0|            0|            0|  0.00%|
   766|         0|            0|            0|  0.00%|
   767|         0|            0|            0|  0.00%|
   768|         0|            0|            0|  0.00%|
   769|         0|            0|            0|  0.00%|
   770|         0|            0|            0|  0.00%|
   771|         0|            0|            0|  0.00%|
   772|         0|            0|            0|  0.00%|
   773|         0|            0|            0|  0.00%|
   774|         0|            0|            0|  0.00%|
   775|         0|            0|            0|  0.00%|
   776|         0|            0|            0|  0.00%|
   777|         0|            0|            0|  0.00%|
   778|         0|            0|            0|  0.00%|
   779|         0|            0|            0|  0.00%|
   780|         0|            0|            0|  0.00%|
   781|         0|            0|            0|  0.00%|
   782|         0|            0|            0|  0.00%|
   783|         0|            0|            0|  0.00%|
   784|         0|            0|            0|  0.00%|
   785|         0|            0|            0|  0.00%|
   786|         0|            0|            0|  0.00%|
   787|         0|            0|            0|  0.00%|
   788|         0|            0|            0|  0.00%|
   789|         0|            0|            0|  0.00%|
   790|         0|            0|            0|  0.00%|
   791|         0|            0|            0|  0.00%|
   792|      3197|   0.00889277|   2.7816e-06|  0.00%|
   793|         0|            0|            0|  0.00%|
   794|      3197|    0.0161362|  5.04728e-06|  0.00%|
   795|         0|            0|            0|  0.00%|
   796|         0|            0|            0|  0.00%|
   797|      3197|    0.0117276|  3.66831e-06|  0.00%|
   798|         0|            0|            0|  0.00%|
   799|         0|            0|            0|  0.00%|
   800|         0|            0|            0|  0.00%|
   801|         0|            0|            0|  0.00%|
   802|         0|            0|            0|  0.00%|
   803|         0|            0|            0|  0.00%|
   804|         0|            0|            0|  0.00%|
   805|         0|            0|            0|  0.00%|
   806|         0|            0|            0|  0.00%|
   807|         0|            0|            0|  0.00%|
   808|         0|            0|            0|  0.00%|
   809|         0|            0|            0|  0.00%|
   810|         0|            0|            0|  0.00%|
   811|         0|            0|            0|  0.00%|
   812|         0|            0|            0|  0.00%|
   813|         0|            0|            0|  0.00%|
   814|         0|            0|            0|  0.00%|
   815|         0|            0|            0|  0.00%|
   816|         0|            0|            0|  0.00%|
   817|         0|            0|            0|  0.00%|
   818|         0|            0|            0|  0.00%|
   819|         0|            0|            0|  0.00%|
   820|         0|            0|            0|  0.00%|
   821|         0|            0|            0|  0.00%|
   822|         0|            0|            0|  0.00%|
   823|         0|            0|            0|  0.00%|
   824|         0|            0|            0|  0.00%|
   825|         0|            0|            0|  0.00%|
   826|         0|            0|            0|  0.00%|
   827|         0|            0|            0|  0.00%|
   828|         0|            0|            0|  0.00%|
   829|         0|            0|            0|  0.00%|
   830|         0|            0|            0|  0.00%|
   831|         0|            0|            0|  0.00%|
   832|         0|            0|            0|  0.00%|
   833|         0|            0|            0|  0.00%|
   834|         0|            0|            0|  0.00%|
   835|         0|            0|            0|  0.00%|
   836|         0|            0|            0|  0.00%|
   837|         0|            0|            0|  0.00%|
   838|         0|            0|            0|  0.00%|
   839|         0|            0|            0|  0.00%|
   840|         0|            0|            0|  0.00%|
   841|         0|            0|            0|  0.00%|
   842|         0|            0|            0|  0.00%|
   843|         0|            0|            0|  0.00%|
   844|         0|            0|            0|  0.00%|
   845|         0|            0|            0|  0.00%|
   846|         0|            0|            0|  0.00%|
   847|         0|            0|            0|  0.00%|
   848|         0|            0|            0|  0.00%|
   849|         0|            0|            0|  0.00%|
   850|         0|            0|            0|  0.00%|
   851|         0|            0|            0|  0.00%|
   852|         0|            0|            0|  0.00%|
   853|         0|            0|            0|  0.00%|
   854|         0|            0|            0|  0.00%|
   855|     10223|    0.0249784|  2.44335e-06|  0.01%|
   856|         0|            0|            0|  0.00%|
   857|     10223|     0.038058|  3.72279e-06|  0.01%|
   858|         0|            0|            0|  0.00%|
   859|     10223|    0.0277755|  2.71696e-06|  0.01%|
   860|         0|            0|            0|  0.00%|
   861|     10223|    0.0419061|   4.0992e-06|  0.01%|
   862|         0|            0|            0|  0.00%|
   863|         0|            0|            0|  0.00%|
   864|         0|            0|            0|  0.00%|
   865|         0|            0|            0|  0.00%|
   866|         0|            0|            0|  0.00%|
   867|         0|            0|            0|  0.00%|
   868|         0|            0|            0|  0.00%|
   869|         0|            0|            0|  0.00%|
   870|         0|            0|            0|  0.00%|
   871|         0|            0|            0|  0.00%|
   872|         0|            0|            0|  0.00%|
   873|       473|   0.00127983|  2.70577e-06|  0.00%|
   874|         0|            0|            0|  0.00%|
   875|         0|            0|            0|  0.00%|
   876|       473|   0.00628805|   1.3294e-05|  0.00%|
(call)|       236|   0.00285029|  1.20775e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/six.py:184 find_module
(call)|       121|   0.00160122|  1.32332e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/urllib3/packages/six.py:180 find_module
(call)|       116|   0.00234723|  2.02347e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pkg_resources/extern/__init__.py:23 find_module
   877|       473|   0.00171828|  3.63273e-06|  0.00%|
   878|       457|   0.00153399|  3.35664e-06|  0.00%|
   879|        16|  0.000193357|  1.20848e-05|  0.00%|
(call)|        16|   0.00153613|  9.60082e-05|  0.00%|# <frozen importlib._bootstrap>:433 spec_from_loader
   880|         0|            0|            0|  0.00%|
   881|         0|            0|            0|  0.00%|
   882|      3197|    0.0126035|   3.9423e-06|  0.00%|
   883|         0|            0|            0|  0.00%|
   884|      3197|     0.016053|  5.02126e-06|  0.00%|
   885|      3197|    0.0151026|    4.724e-06|  0.00%|
   886|         0|            0|            0|  0.00%|
   887|         0|            0|            0|  0.00%|
   888|         0|            0|            0|  0.00%|
   889|         0|            0|            0|  0.00%|
   890|      3197|    0.0148582|  4.64756e-06|  0.00%|
   891|         0|            0|            0|  0.00%|
   892|         0|            0|            0|  0.00%|
   893|         0|            0|            0|  0.00%|
   894|         0|            0|            0|  0.00%|
   895|         0|            0|            0|  0.00%|
   896|      3197|     0.014842|  4.64249e-06|  0.00%|
   897|     10325|    0.0463095|  4.48518e-06|  0.01%|
   898|     10223|     0.116266|   1.1373e-05|  0.02%|
(call)|     10223|    0.0630364|  6.16614e-06|  0.01%|# <frozen importlib._bootstrap>:855 __enter__
   899|     10223|    0.0424113|  4.14862e-06|  0.01%|
   900|     10223|    0.0458176|  4.48182e-06|  0.01%|
   901|       473|   0.00224376|  4.74367e-06|  0.00%|
   902|       473|   0.00547218|  1.15691e-05|  0.00%|
(call)|       473|    0.0193484|  4.09057e-05|  0.00%|# <frozen importlib._bootstrap>:873 _find_spec_legacy
   903|       473|   0.00220466|  4.66101e-06|  0.00%|
(call)|        16|  0.000101805|   6.3628e-06|  0.00%|# <frozen importlib._bootstrap>:859 __exit__
   904|       457|   0.00505757|  1.10669e-05|  0.00%|
(call)|       457|   0.00276279|   6.0455e-06|  0.00%|# <frozen importlib._bootstrap>:859 __exit__
   905|         0|            0|            0|  0.00%|
   906|      9750|     0.189272|  1.94125e-05|  0.04%|
(call)|      3197|    0.0348029|  1.08861e-05|  0.01%|# <frozen importlib._bootstrap>:719 find_spec
(call)|      9750|     0.066817|  6.85303e-06|  0.01%|# <frozen importlib._bootstrap>:859 __exit__
(call)|      3197|    0.0367565|  1.14972e-05|  0.01%|# <frozen importlib._bootstrap>:792 find_spec
(call)|      3197|      6.35094|   0.00198653|  1.33%|# <frozen importlib._bootstrap_external>:1272 find_spec
(call)|       104|  0.000836372|  8.04204e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/importlib_metadata/_compat.py:94 find_spec
(call)|        55|   0.00117016|  2.12756e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/tlz/_build_tlz.py:45 find_spec
   907|      9766|    0.0417454|  4.27457e-06|  0.01%|
   908|         0|            0|            0|  0.00%|
   909|      3095|    0.0146329|  4.72793e-06|  0.00%|
   910|         0|            0|            0|  0.00%|
   911|         0|            0|            0|  0.00%|
   912|         0|            0|            0|  0.00%|
   913|         0|            0|            0|  0.00%|
   914|         0|            0|            0|  0.00%|
   915|         0|            0|            0|  0.00%|
   916|         0|            0|            0|  0.00%|
   917|         0|            0|            0|  0.00%|
   918|         0|            0|            0|  0.00%|
   919|         0|            0|            0|  0.00%|
   920|         0|            0|            0|  0.00%|
   921|         0|            0|            0|  0.00%|
   922|         0|            0|            0|  0.00%|
   923|         0|            0|            0|  0.00%|
   924|      3095|     0.013001|  4.20063e-06|  0.00%|
   925|         0|            0|            0|  0.00%|
   926|       102|  0.000409842|  4.01805e-06|  0.00%|
   927|         0|            0|            0|  0.00%|
   928|         0|            0|            0|  0.00%|
   929|     18001|    0.0522752|  2.90402e-06|  0.01%|
   930|         0|            0|            0|  0.00%|
   931|     18001|    0.0713303|  3.96257e-06|  0.01%|
   932|         0|            0|            0|  0.00%|
   933|     18001|    0.0772848|  4.29336e-06|  0.02%|
   934|         0|            0|            0|  0.00%|
   935|     18001|    0.0629952|  3.49954e-06|  0.01%|
   936|         0|            0|            0|  0.00%|
   937|         0|            0|            0|  0.00%|
   938|         0|            0|            0|  0.00%|
   939|         0|            0|            0|  0.00%|
   940|         0|            0|            0|  0.00%|
   941|     18001|     0.066308|  3.68357e-06|  0.01%|
   942|         0|            0|            0|  0.00%|
   943|         0|            0|            0|  0.00%|
   944|         0|            0|            0|  0.00%|
   945|         0|            0|            0|  0.00%|
   946|         0|            0|            0|  0.00%|
   947|         0|            0|            0|  0.00%|
   948|      3234|     0.012198|  3.77179e-06|  0.00%|
   949|      3234|    0.0150435|  4.65167e-06|  0.00%|
   950|      3234|    0.0176156|  5.44699e-06|  0.00%|
   951|      3234|    0.0147328|  4.55561e-06|  0.00%|
   952|      3057|     0.015017|  4.91234e-06|  0.00%|
   953|       109|   0.00153899|  1.41192e-05|  0.00%|
(call)|       109|      41.7969|     0.383458|  8.78%|# <frozen importlib._bootstrap>:211 _call_with_frames_removed
   954|         0|            0|            0|  0.00%|
   955|      3041|    0.0140111|  4.60741e-06|  0.00%|
   956|        20|  9.87053e-05|  4.93526e-06|  0.00%|
   957|      3021|    0.0137804|  4.56152e-06|  0.00%|
   958|      3021|    0.0125754|  4.16266e-06|  0.00%|
   959|      3021|    0.0134985|  4.46824e-06|  0.00%|
   960|         1|  5.48363e-06|  5.48363e-06|  0.00%|
   961|         1|  1.97887e-05|  1.97887e-05|  0.00%|
   962|         1|  1.09673e-05|  1.09673e-05|  0.00%|
   963|      3197|    0.0435319|  1.36165e-05|  0.01%|
(call)|      3197|      7.17487|   0.00224425|  1.51%|# <frozen importlib._bootstrap>:882 _find_spec
   964|      3197|     0.014442|  4.51735e-06|  0.00%|
   965|       102|   0.00102162|  1.00159e-05|  0.00%|
   966|         0|            0|            0|  0.00%|
   967|      3095|     0.041893|  1.35357e-05|  0.01%|
(call)|      3095|      81.2542|    0.0262534| 17.07%|# <frozen importlib._bootstrap>:663 _load_unlocked
   968|      3087|    0.0147355|  4.77339e-06|  0.00%|
   969|         0|            0|            0|  0.00%|
   970|      2969|    0.0138547|  4.66647e-06|  0.00%|
   971|      2969|     0.020757|  6.99123e-06|  0.00%|
   972|      3087|    0.0126212|  4.08849e-06|  0.00%|
   973|         0|            0|            0|  0.00%|
   974|         0|            0|            0|  0.00%|
   975|         0|            0|            0|  0.00%|
   976|         0|            0|            0|  0.00%|
   977|         0|            0|            0|  0.00%|
   978|     21207|    0.0785527|  3.70409e-06|  0.02%|
   979|         0|            0|            0|  0.00%|
   980|     21207|     0.406974|  1.91906e-05|  0.09%|
(call)|     21207|     0.238508|  1.12466e-05|  0.05%|# <frozen importlib._bootstrap>:143 __init__
(call)|     21207|      3.38408|  0.000159574|  0.71%|# <frozen importlib._bootstrap>:147 __enter__
   981|     21207|     0.115144|  5.42953e-06|  0.02%|
   982|     21207|     0.388762|  1.83318e-05|  0.08%|
(call)|     17973|     0.829981|  4.61793e-05|  0.17%|# <frozen importlib._bootstrap>:151 __exit__
(call)|     17971|      0.37694|  2.09749e-05|  0.08%|# <frozen importlib._bootstrap>:176 cb
   983|      3234|    0.0980468|  3.03175e-05|  0.02%|
(call)|      3234|      82.6099|    0.0255442| 17.35%|# <frozen importlib._bootstrap>:948 _find_and_load_unlocked
(call)|      3234|     0.158516|  4.90156e-05|  0.03%|# <frozen importlib._bootstrap>:151 __exit__
(call)|      3214|     0.070806|  2.20305e-05|  0.01%|# <frozen importlib._bootstrap>:176 cb
   984|         0|            0|            0|  0.00%|
   985|     17973|    0.0727754|  4.04915e-06|  0.02%|
   986|         0|            0|            0|  0.00%|
   987|         0|            0|            0|  0.00%|
   988|         0|            0|            0|  0.00%|
   989|         0|            0|            0|  0.00%|
   990|     17973|     0.345536|  1.92253e-05|  0.07%|
(call)|     17973|      3.43844|  0.000191311|  0.72%|# <frozen importlib._bootstrap>:194 _lock_unlock_module
(call)|     17971|     0.370591|  2.06216e-05|  0.08%|# <frozen importlib._bootstrap>:176 cb
   991|     17973|    0.0706716|   3.9321e-06|  0.01%|
   992|         0|            0|            0|  0.00%|
   993|         0|            0|            0|  0.00%|
   994|     18001|    0.0561128|   3.1172e-06|  0.01%|
   995|         0|            0|            0|  0.00%|
   996|         0|            0|            0|  0.00%|
   997|         0|            0|            0|  0.00%|
   998|         0|            0|            0|  0.00%|
   999|         0|            0|            0|  0.00%|
  1000|         0|            0|            0|  0.00%|
  1001|         0|            0|            0|  0.00%|
  1002|         0|            0|            0|  0.00%|
  1003|     18001|     0.203353|  1.12968e-05|  0.04%|
(call)|     18001|     0.330194|  1.83431e-05|  0.07%|# <frozen importlib._bootstrap>:929 _sanity_check
  1004|     18001|     0.068783|  3.82107e-06|  0.01%|
  1005|         0|            0|            0|  0.00%|
  1006|     18001|     0.193172|  1.07312e-05|  0.04%|
(call)|     18001|      12.6855|  0.000704711|  2.66%|# <frozen importlib._bootstrap>:978 _find_and_load
  1007|         0|            0|            0|  0.00%|
  1008|         0|            0|            0|  0.00%|
  1009|     35826|     0.280984|  7.84301e-06|  0.06%|
  1010|         0|            0|            0|  0.00%|
  1011|         0|            0|            0|  0.00%|
  1012|         0|            0|            0|  0.00%|
  1013|         0|            0|            0|  0.00%|
  1014|         0|            0|            0|  0.00%|
  1015|         0|            0|            0|  0.00%|
  1016|         0|            0|            0|  0.00%|
  1017|         0|            0|            0|  0.00%|
  1018|         0|            0|            0|  0.00%|
  1019|     35826|     0.219732|  6.13331e-06|  0.05%|
(call)|         1|  1.71661e-05|  1.71661e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/joblib/my_exceptions.py:19 __getattr__
  1020|     45817|     0.205571|  4.48678e-06|  0.04%|
  1021|     24288|      0.10846|  4.46557e-06|  0.02%|
  1022|         0|            0|            0|  0.00%|
  1023|         0|            0|            0|  0.00%|
  1024|         0|            0|            0|  0.00%|
  1025|         0|            0|            0|  0.00%|
  1026|         0|            0|            0|  0.00%|
  1027|         0|            0|            0|  0.00%|
  1028|     24288|     0.106596|  4.38882e-06|  0.02%|
  1029|        24|   0.00014782|  6.15915e-06|  0.00%|
  1030|        15|  9.29832e-05|  6.19888e-06|  0.00%|
  1031|        15|   0.00023222|  1.54813e-05|  0.00%|
(call)|        15|    0.0176187|   0.00117458|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
  1032|     24264|     0.116735|  4.81102e-06|  0.02%|
(call)|         1|  5.55515e-05|  5.55515e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/urllib3/packages/six.py:90 __get__
(call)|         6|  0.000501156|   8.3526e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/six.py:91 __get__
  1033|      1246|    0.0081346|  6.52857e-06|  0.00%|
  1034|      1246|   0.00552034|  4.43045e-06|  0.00%|
  1035|      1246|    0.0168056|  1.34877e-05|  0.00%|
(call)|      1246|      43.4925|    0.0349057|  9.14%|# <frozen importlib._bootstrap>:211 _call_with_frames_removed
  1036|        15|    9.799e-05|  6.53267e-06|  0.00%|
  1037|         0|            0|            0|  0.00%|
  1038|         0|            0|            0|  0.00%|
  1039|         0|            0|            0|  0.00%|
  1040|        14|  0.000105381|  7.52722e-06|  0.00%|
  1041|        14|   9.2268e-05|  6.59057e-06|  0.00%|
  1042|        14|  8.17776e-05|  5.84126e-06|  0.00%|
  1043|         0|            0|            0|  0.00%|
  1044|     35825|     0.150963|   4.2139e-06|  0.03%|
File: test_speed.py
File duration: 26.9905s (5.67%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|#!/usr/bin/env python
     2|         0|            0|            0|  0.00%|# coding: utf-8
     3|         0|            0|            0|  0.00%|
     4|         2|  7.22408e-05|  3.61204e-05|  0.00%|import neptune
(call)|         1|      30.4203|      30.4203|  6.39%|# <frozen importlib._bootstrap>:978 _find_and_load
     5|         1|  5.62668e-05|  5.62668e-05|  0.00%|from MODULES.utilities_neptune import log_object_as_artifact, log_model_summary, log_last_ckpt, log_img_only, log_dict_metrics
(call)|         1|      23.2911|      23.2911|  4.89%|# <frozen importlib._bootstrap>:978 _find_and_load
(call)|         1|  2.14577e-05|  2.14577e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
     6|         1|  8.05855e-05|  8.05855e-05|  0.00%|from MODULES.vae_model import *
(call)|         1|      17.5619|      17.5619|  3.69%|# <frozen importlib._bootstrap>:978 _find_and_load
(call)|         1|   2.0504e-05|   2.0504e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
     7|         1|  3.40939e-05|  3.40939e-05|  0.00%|from MODULES.utilities_visualization import show_batch, plot_tiling, plot_all_from_dictionary, plot_label_contours
(call)|         1|  1.78814e-05|  1.78814e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
     8|         1|  3.29018e-05|  3.29018e-05|  0.00%|from MODULES.utilities_visualization import plot_reconstruction_and_inference, plot_generation, plot_segmentation
(call)|         1|  1.69277e-05|  1.69277e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
     9|         1|  2.93255e-05|  2.93255e-05|  0.00%|from MODULES.utilities_ml import ConditionalRandomCrop, SpecialDataSet, process_one_epoch
(call)|         1|  1.71661e-05|  1.71661e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
    10|         1|  5.48363e-05|  5.48363e-05|  0.00%|from MODULES.graph_clustering import GraphSegmentation
(call)|         1|      1.92202|      1.92202|  0.40%|# <frozen importlib._bootstrap>:978 _find_and_load
(call)|         1|  1.85966e-05|  1.85966e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
    11|         0|            0|            0|  0.00%|
    12|         0|            0|            0|  0.00%|# Check versions
    13|         1|  2.83718e-05|  2.83718e-05|  0.00%|from platform import python_version
(call)|         1|  1.54972e-05|  1.54972e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
    14|         1|  7.00951e-05|  7.00951e-05|  0.00%|print("python_version() ---> ", python_version())
(call)|         1|  6.86646e-05|  6.86646e-05|  0.00%|# /opt/anaconda3/lib/python3.7/platform.py:1267 python_version
    15|         1|  1.97887e-05|  1.97887e-05|  0.00%|print("torch.__version__ --> ", torch.__version__)
    16|         0|            0|            0|  0.00%|
    17|         0|            0|            0|  0.00%|
    18|         1|  3.17097e-05|  3.17097e-05|  0.00%|params = load_json_as_dict("./ML_parameters.json")
(call)|         1|  0.000407934|  0.000407934|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities.py:134 load_json_as_dict
    19|         0|            0|            0|  0.00%|
    20|         1|  4.14848e-05|  4.14848e-05|  0.00%|neptune.set_project(params["neptune_project"])
(call)|         1|      8.89631|      8.89631|  1.87%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/__init__.py:163 set_project
    21|         0|            0|            0|  0.00%|exp: neptune.experiments.Experiment = \
    22|         1|  3.21865e-05|  3.21865e-05|  0.00%|    neptune.create_experiment(params=flatten_dict(params),
(call)|         1|   0.00278115|   0.00278115|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities.py:114 flatten_dict
    23|         1|  1.07288e-05|  1.07288e-05|  0.00%|                              upload_source_files=["./main.py", "./MODULES/vae_model.py", "./MODULES/encoders_decoders.py"],
    24|         1|  7.86781e-06|  7.86781e-06|  0.00%|                              upload_stdout=True,
    25|         1|  6.22272e-05|  6.22272e-05|  0.00%|                              upload_stderr=True)
(call)|         1|      7.12088|      7.12088|  1.50%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/__init__.py:202 create_experiment
    26|         0|            0|            0|  0.00%|
    27|         0|            0|            0|  0.00%|# Get the training and test data
    28|         1|  5.03063e-05|  5.03063e-05|  0.00%|preprocessed = load_obj("./data_train.pt")
(call)|         1|      1.14025|      1.14025|  0.24%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities.py:129 load_obj
    29|         1|     0.134191|     0.134191|  0.03%|img_torch = preprocessed.img.float()
    30|         1|  0.000173092|  0.000173092|  0.00%|roi_mask_torch = preprocessed.roi_mask.bool()
    31|         1|  2.52724e-05|  2.52724e-05|  0.00%|assert len(img_torch.shape) == len(roi_mask_torch.shape) == 4
    32|         0|            0|            0|  0.00%|# print("GPU GB after opening data ->",torch.cuda.memory_allocated()/1E9)
    33|         0|            0|            0|  0.00%|
    34|         1|  1.35899e-05|  1.35899e-05|  0.00%|BATCH_SIZE = params["simulation"]["batch_size"]
    35|         1|   1.0252e-05|   1.0252e-05|  0.00%|SIZE_CROPS = params["input_image"]["size_raw_image"]
    36|         1|  1.40667e-05|  1.40667e-05|  0.00%|N_TEST = params["simulation"]["N_test"]
    37|         1|  2.28882e-05|  2.28882e-05|  0.00%|N_TRAIN = params["simulation"]["N_train"]
    38|         1|  9.29832e-06|  9.29832e-06|  0.00%|conditional_crop_test = ConditionalRandomCrop(desired_w=SIZE_CROPS, desired_h=SIZE_CROPS,
    39|         1|  5.88894e-05|  5.88894e-05|  0.00%|                                              min_roi_fraction=0.9, n_crops_per_image=N_TEST)
(call)|         1|  6.53267e-05|  6.53267e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:337 __init__
    40|         0|            0|            0|  0.00%|
    41|         1|  1.12057e-05|  1.12057e-05|  0.00%|conditional_crop_train = ConditionalRandomCrop(desired_w=SIZE_CROPS, desired_h=SIZE_CROPS,
    42|         1|  4.02927e-05|  4.02927e-05|  0.00%|                                               min_roi_fraction=0.9, n_crops_per_image=N_TRAIN)
(call)|         1|  6.00815e-05|  6.00815e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:337 __init__
    43|         0|            0|            0|  0.00%|
    44|         1|  9.29832e-06|  9.29832e-06|  0.00%|test_data = conditional_crop_test.crop(img=img_torch,
    45|         1|  7.62939e-05|  7.62939e-05|  0.00%|                                       roi_mask=roi_mask_torch)
(call)|         1|     0.362722|     0.362722|  0.08%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:414 crop
    46|         0|            0|            0|  0.00%|# print("GPU GB after defining test data ->",torch.cuda.memory_allocated()/1E9)
    47|         0|            0|            0|  0.00%|
    48|         0|            0|            0|  0.00%|
    49|         1|  1.16825e-05|  1.16825e-05|  0.00%|test_loader = SpecialDataSet(img=test_data,
    50|         1|  8.58307e-06|  8.58307e-06|  0.00%|                             store_in_cuda=False,
    51|         1|  7.62939e-06|  7.62939e-06|  0.00%|                             shuffle=False,
    52|         1|  7.86781e-06|  7.86781e-06|  0.00%|                             drop_last=False,
    53|         1|  6.38962e-05|  6.38962e-05|  0.00%|                             batch_size=BATCH_SIZE)
(call)|         1|   0.00979447|   0.00979447|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:426 __init__
    54|         1|  8.05855e-05|  8.05855e-05|  0.00%|test_batch_example_fig = test_loader.check_batch()
(call)|         1|      1.79491|      1.79491|  0.38%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:510 check_batch
    55|         1|   5.8651e-05|   5.8651e-05|  0.00%|log_img_only(name="test_batch_example", fig=test_batch_example_fig, experiment=exp)
(call)|         1|      1.24742|      1.24742|  0.26%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_neptune.py:10 log_img_only
    56|         0|            0|            0|  0.00%|
    57|         1|  1.00136e-05|  1.00136e-05|  0.00%|train_loader = SpecialDataSet(img=img_torch,
    58|         1|  8.58307e-06|  8.58307e-06|  0.00%|                              roi_mask=roi_mask_torch,
    59|         1|  8.10623e-06|  8.10623e-06|  0.00%|                              data_augmentation=conditional_crop_train,
    60|         1|  2.31266e-05|  2.31266e-05|  0.00%|                              store_in_cuda=False,
    61|         1|  8.10623e-06|  8.10623e-06|  0.00%|                              shuffle=True,
    62|         1|  2.24113e-05|  2.24113e-05|  0.00%|                              drop_last=True,
    63|         1|  0.000173569|  0.000173569|  0.00%|                              batch_size=BATCH_SIZE)
(call)|         1|      0.26441|      0.26441|  0.06%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:426 __init__
    64|         1|  7.53403e-05|  7.53403e-05|  0.00%|train_batch_example_fig = train_loader.check_batch()
(call)|         1|       1.3564|       1.3564|  0.28%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:510 check_batch
    65|         1|  4.95911e-05|  4.95911e-05|  0.00%|log_img_only(name="train_batch_example", fig=train_batch_example_fig, experiment=exp)
(call)|         1|      1.15634|      1.15634|  0.24%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_neptune.py:10 log_img_only
    66|         0|            0|            0|  0.00%|# print("GPU GB after train_loader ->",torch.cuda.memory_allocated()/1E9)
    67|         0|            0|            0|  0.00%|
    68|         0|            0|            0|  0.00%|# Make a batch of reference images by cropping the train_data at consecutive locations
    69|         1|  1.40667e-05|  1.40667e-05|  0.00%|reference_imgs_list = []
    70|         1|  1.04904e-05|  1.04904e-05|  0.00%|crop_size = params["input_image"]["size_raw_image"]
    71|         3|  2.07424e-05|  6.91414e-06|  0.00%|for ni in range(2):
    72|         2|   1.4782e-05|  7.39098e-06|  0.00%|    i = 1000 + ni * crop_size
    73|        10|  7.53403e-05|  7.53403e-06|  0.00%|    for nj in range(4):
    74|         8|  4.72069e-05|  5.90086e-06|  0.00%|        j = 2100 + nj * crop_size
    75|         8|  0.000175476|  2.19345e-05|  0.00%|        reference_imgs_list.append(img_torch[..., i:i+crop_size, j:j+crop_size])
    76|         1|   0.00129032|   0.00129032|  0.00%|reference_imgs = torch.cat(reference_imgs_list, dim=-4)
    77|         1|  0.000103712|  0.000103712|  0.00%|if torch.cuda.is_available():
(call)|         1|     0.800225|     0.800225|  0.17%|# /opt/anaconda3/lib/python3.7/site-packages/torch/cuda/__init__.py:33 is_available
    78|         1|      26.8369|      26.8369|  5.64%|    reference_imgs = reference_imgs.cuda()
(call)|         1|    0.0311506|    0.0311506|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torch/cuda/__init__.py:124 _lazy_init
    79|         1|  0.000113964|  0.000113964|  0.00%|_ = show_batch(reference_imgs,
    80|         1|  1.16825e-05|  1.16825e-05|  0.00%|               n_padding=4,
    81|         1|  1.35899e-05|  1.35899e-05|  0.00%|               figsize=(12, 12),
    82|         1|  9.05991e-06|  9.05991e-06|  0.00%|               title="reference imgs",
    83|         1|  8.96454e-05|  8.96454e-05|  0.00%|               neptune_name="reference_imgs")
(call)|         1|      2.30661|      2.30661|  0.48%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_visualization.py:165 show_batch
    84|         0|            0|            0|  0.00%|
    85|         0|            0|            0|  0.00%|# Instantiate model, optimizer and checks
    86|         1|  8.44002e-05|  8.44002e-05|  0.00%|vae = CompositionalVae(params)
(call)|         1|     0.604134|     0.604134|  0.13%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/vae_model.py:117 __init__
    87|         1|  4.95911e-05|  4.95911e-05|  0.00%|log_model_summary(vae)
(call)|         1|     0.582849|     0.582849|  0.12%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_neptune.py:35 log_model_summary
    88|         1|  4.19617e-05|  4.19617e-05|  0.00%|optimizer = instantiate_optimizer(model=vae, dict_params_optimizer=params["optimizer"])
(call)|         1|    0.0550742|    0.0550742|  0.01%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/vae_model.py:70 instantiate_optimizer
    89|         0|            0|            0|  0.00%|# print("GPU GB after model and optimizer ->",torch.cuda.memory_allocated()/1E9)
    90|         0|            0|            0|  0.00%|
    91|         1|  0.000114441|  0.000114441|  0.00%|imgs_out = vae.inference_and_generator.unet.show_grid(reference_imgs)
(call)|         2|  9.70364e-05|  4.85182e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:580 __getattr__
(call)|         1|     0.260423|     0.260423|  0.05%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/unet_model.py:108 show_grid
    92|         1|  0.000119448|  0.000119448|  0.00%|unet_grid_fig = show_batch(imgs_out[:, 0], normalize_range=(0.0, 1.0), neptune_name="unet_grid")
(call)|         1|      2.18984|      2.18984|  0.46%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_visualization.py:165 show_batch
    93|         0|            0|            0|  0.00%|
    94|         0|            0|            0|  0.00%|# Check the constraint dictionary
    95|         1|  8.98838e-05|  8.98838e-05|  0.00%|print("simulation type = "+str(params["simulation"]["type"]))
(call)|         2|   0.00201344|   0.00100672|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/streams/stdstream_uploader.py:30 write
    96|         0|            0|            0|  0.00%|
    97|         1|  1.23978e-05|  1.23978e-05|  0.00%|if params["simulation"]["type"] == "scratch":
    98|         0|            0|            0|  0.00%|
    99|         1|  2.43187e-05|  2.43187e-05|  0.00%|    epoch_restart = -1
   100|         1|  8.10623e-06|  8.10623e-06|  0.00%|    history_dict = {}
   101|         1|  7.86781e-06|  7.86781e-06|  0.00%|    min_test_loss = 99999999
   102|         0|            0|            0|  0.00%|
   103|         0|            0|            0|  0.00%|elif params["simulation"]["type"] == "resume":
   104|         0|            0|            0|  0.00%|
   105|         0|            0|            0|  0.00%|    ckpt = file2ckpt(path="ckpt.pt", device=None)
   106|         0|            0|            0|  0.00%|    # ckpt = file2ckpt(path="ckpt.pt", device='cpu')
   107|         0|            0|            0|  0.00%|
   108|         0|            0|            0|  0.00%|    load_from_ckpt(ckpt=ckpt,
   109|         0|            0|            0|  0.00%|                   model=vae,
   110|         0|            0|            0|  0.00%|                   optimizer=optimizer,
   111|         0|            0|            0|  0.00%|                   overwrite_member_var=True)
   112|         0|            0|            0|  0.00%|
   113|         0|            0|            0|  0.00%|    epoch_restart = ckpt.epoch
   114|         0|            0|            0|  0.00%|    history_dict = ckpt.history_dict
   115|         0|            0|            0|  0.00%|    min_test_loss = min(history_dict["test_loss"])
   116|         0|            0|            0|  0.00%|
   117|         0|            0|            0|  0.00%|elif params["simulation"]["type"] == "pretrained":
   118|         0|            0|            0|  0.00%|
   119|         0|            0|            0|  0.00%|    ckpt = file2ckpt(path="ckpt.pt", device=None)
   120|         0|            0|            0|  0.00%|
   121|         0|            0|            0|  0.00%|    load_from_ckpt(ckpt=ckpt,
   122|         0|            0|            0|  0.00%|                   model=vae,
   123|         0|            0|            0|  0.00%|                   optimizer=None,
   124|         0|            0|            0|  0.00%|                   overwrite_member_var=False)
   125|         0|            0|            0|  0.00%|
   126|         0|            0|            0|  0.00%|    epoch_restart = -1
   127|         0|            0|            0|  0.00%|    history_dict = {}
   128|         0|            0|            0|  0.00%|    min_test_loss = 99999999
   129|         0|            0|            0|  0.00%|
   130|         0|            0|            0|  0.00%|else:
   131|         0|            0|            0|  0.00%|    raise Exception("simulation type is NOT recognized")
   132|         0|            0|            0|  0.00%|
   133|         0|            0|            0|  0.00%|# instantiate the scheduler if necessary
   134|         1|  9.05991e-06|  9.05991e-06|  0.00%|if params["optimizer"]["scheduler_is_active"]:
   135|         1|  2.90871e-05|  2.90871e-05|  0.00%|    scheduler = instantiate_scheduler(optimizer=optimizer, dict_params_scheduler=params["optimizer"])
(call)|         1|  0.000960588|  0.000960588|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/vae_model.py:103 instantiate_scheduler
   136|         0|            0|            0|  0.00%|
   137|         0|            0|            0|  0.00%|
   138|         1|  9.53674e-06|  9.53674e-06|  0.00%|TEST_FREQUENCY = params["simulation"]["TEST_FREQUENCY"]
   139|         1|  9.53674e-06|  9.53674e-06|  0.00%|CHECKPOINT_FREQUENCY = params["simulation"]["CHECKPOINT_FREQUENCY"]
   140|         1|  9.05991e-06|  9.05991e-06|  0.00%|NUM_EPOCHS = params["simulation"]["MAX_EPOCHS"]
   141|         1|  4.55379e-05|  4.55379e-05|  0.00%|torch.cuda.empty_cache()
(call)|         1|  0.000122547|  0.000122547|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/cuda/memory.py:74 empty_cache
   142|         6|   7.1764e-05|  1.19607e-05|  0.00%|for delta_epoch in range(1, NUM_EPOCHS+1):
   143|         5|   3.3617e-05|   6.7234e-06|  0.00%|    epoch = delta_epoch+epoch_restart
   144|         0|            0|            0|  0.00%|
   145|         5|  3.45707e-05|  6.91414e-06|  0.00%|    vae.prob_corr_factor = linear_interpolation(epoch,
   146|         5|  3.60012e-05|  7.20024e-06|  0.00%|                                                values=params["shortcut_prob_corr_factor"]["values"],
   147|         5|  0.000236988|  4.73976e-05|  0.00%|                                                times=params["shortcut_prob_corr_factor"]["times"])
(call)|         5|   0.00432611|  0.000865221|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities.py:82 linear_interpolation
(call)|         5|  0.000375986|  7.51972e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
   148|         5|   0.00534987|   0.00106997|  0.00%|    exp.log_metric("prob_corr_factor", vae.prob_corr_factor)
(call)|         5|     0.265529|    0.0531058|  0.06%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/experiments.py:302 log_metric
   149|         0|            0|            0|  0.00%|
   150|         5|  0.000221014|  4.42028e-05|  0.00%|    with torch.autograd.set_detect_anomaly(False):
(call)|         5|  0.000134945|   2.6989e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/anomaly_mode.py:97 __init__
(call)|         5|  4.81606e-05|  9.63211e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/anomaly_mode.py:101 __enter__
   151|         5|  0.000107527|  2.15054e-05|  0.00%|        with torch.enable_grad():
(call)|         5|  9.34601e-05|   1.8692e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/grad_mode.py:105 __enter__
   152|         5|  0.000125647|  2.51293e-05|  0.00%|            vae.train()
(call)|         5|     0.130259|    0.0260519|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:1055 train
   153|         5|  4.12464e-05|  8.24928e-06|  0.00%|            train_metrics = process_one_epoch(model=vae,
   154|         5|  3.14713e-05|  6.29425e-06|  0.00%|                                              dataloader=train_loader,
   155|         5|  2.93255e-05|   5.8651e-06|  0.00%|                                              optimizer=optimizer,
   156|         5|  2.93255e-05|   5.8651e-06|  0.00%|                                              verbose=(epoch == 0),
   157|         5|  2.81334e-05|  5.62668e-06|  0.00%|                                              weight_clipper=None,
   158|         5|  2.88486e-05|  5.76973e-06|  0.00%|                                              neptune_experiment=exp,
   159|         5|    0.0057838|   0.00115676|  0.00%|                                              neptune_prefix="train_")
(call)|         5|      92.9602|       18.592| 19.53%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:523 process_one_epoch
   160|         5|  0.000442982|  8.85963e-05|  0.00%|            print("Train " + train_metrics.pretty_print(epoch))
(call)|         5|  0.000474215|  9.48429e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/namedtuple.py:316 pretty_print
(call)|        10|    0.0153689|   0.00153689|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/streams/stdstream_uploader.py:30 write
   161|         0|            0|            0|  0.00%|
   162|         5|  6.27041e-05|  1.25408e-05|  0.00%|            if params["optimizer"]["scheduler_is_active"]:
   163|         5|   0.00013113|   2.6226e-05|  0.00%|                scheduler.step()
(call)|         5|     0.001508|    0.0003016|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/optim/lr_scheduler.py:106 step
   164|         0|            0|            0|  0.00%|
   165|         5|   0.00010705|    2.141e-05|  0.00%|            with torch.no_grad():
(call)|         5|  8.96454e-05|  1.79291e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/grad_mode.py:65 __enter__
   166|         0|            0|            0|  0.00%|
   167|         5|  3.55244e-05|  7.10487e-06|  0.00%|                history_dict = append_to_dict(source=train_metrics,
   168|         5|  3.40939e-05|  6.81877e-06|  0.00%|                                              destination=history_dict,
   169|         5|   3.0756e-05|   6.1512e-06|  0.00%|                                              prefix_exclude="wrong_examples",
   170|         5|  0.000131607|  2.63214e-05|  0.00%|                                              prefix_to_add="train_")
(call)|         5|   0.00675726|   0.00135145|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities.py:163 append_to_dict
   171|         0|            0|            0|  0.00%|
   172|         5|  0.000195503|  3.91006e-05|  0.00%|                if (epoch % TEST_FREQUENCY) == 0:
(call)|         4|  0.000145674|  3.64184e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/grad_mode.py:69 __exit__
(call)|         4|  0.000123739|  3.09348e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/grad_mode.py:109 __exit__
(call)|         4|  6.38962e-05|   1.5974e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/anomaly_mode.py:104 __exit__
   173|         0|            0|            0|  0.00%|
   174|         1|  3.91006e-05|  3.91006e-05|  0.00%|                    vae.eval()
(call)|         1|    0.0177097|    0.0177097|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:1075 eval
   175|         1|  9.53674e-06|  9.53674e-06|  0.00%|                    test_metrics = process_one_epoch(model=vae,
   176|         1|  8.34465e-06|  8.34465e-06|  0.00%|                                                     dataloader=test_loader,
   177|         1|  8.34465e-06|  8.34465e-06|  0.00%|                                                     optimizer=optimizer,
   178|         1|  8.10623e-06|  8.10623e-06|  0.00%|                                                     verbose=(epoch == 0),
   179|         1|  7.86781e-06|  7.86781e-06|  0.00%|                                                     weight_clipper=None,
   180|         1|  8.10623e-06|  8.10623e-06|  0.00%|                                                     neptune_experiment=exp,
   181|         1|  0.000102758|  0.000102758|  0.00%|                                                     neptune_prefix="test_")
(call)|         1|      6.42197|      6.42197|  1.35%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:523 process_one_epoch
   182|         1|  7.00951e-05|  7.00951e-05|  0.00%|                    print("Test  "+test_metrics.pretty_print(epoch))
(call)|         1|  0.000105381|  0.000105381|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/namedtuple.py:316 pretty_print
(call)|         2|   0.00160217|  0.000801086|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/streams/stdstream_uploader.py:30 write
   183|         1|  1.16825e-05|  1.16825e-05|  0.00%|                    history_dict = append_to_dict(source=test_metrics,
   184|         1|  8.82149e-06|  8.82149e-06|  0.00%|                                                  destination=history_dict,
   185|         1|  7.86781e-06|  7.86781e-06|  0.00%|                                                  prefix_exclude="wrong_examples",
   186|         1|  3.00407e-05|  3.00407e-05|  0.00%|                                                  prefix_to_add="test_")
(call)|         1|   0.00142217|   0.00142217|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities.py:163 append_to_dict
   187|         0|            0|            0|  0.00%|
   188|         1|  5.50747e-05|  5.50747e-05|  0.00%|                    output: Output = vae.forward(reference_imgs, draw_image=True, draw_boxes=True, verbose=False)
(call)|         1|     0.363409|     0.363409|  0.08%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/vae_model.py:628 forward
   189|         1|  4.45843e-05|  4.45843e-05|  0.00%|                    plot_reconstruction_and_inference(output, epoch=epoch, prefix="rec_")
(call)|         1|      7.94148|      7.94148|  1.67%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_visualization.py:543 plot_reconstruction_and_inference
   190|         1|  0.000325203|  0.000325203|  0.00%|                    reference_n_cells = output.inference.sample_c_map.sum().item()
   191|         1|  1.95503e-05|  1.95503e-05|  0.00%|                    tmp_dict = {"reference_n_cells": reference_n_cells}
   192|         1|  5.50747e-05|  5.50747e-05|  0.00%|                    log_dict_metrics(tmp_dict)
(call)|         1|      0.22186|      0.22186|  0.05%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_neptune.py:83 log_dict_metrics
   193|         1|  1.09673e-05|  1.09673e-05|  0.00%|                    history_dict = append_to_dict(source=tmp_dict,
   194|         1|  2.90871e-05|  2.90871e-05|  0.00%|                                                  destination=history_dict)
(call)|         1|  0.000105619|  0.000105619|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities.py:163 append_to_dict
   195|         0|            0|            0|  0.00%|
   196|         1|  0.000109911|  0.000109911|  0.00%|                    segmentation: Segmentation = vae.segment(batch_imgs=reference_imgs)
(call)|         1|      0.23041|      0.23041|  0.05%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/vae_model.py:343 segment
   197|         1|  5.45979e-05|  5.45979e-05|  0.00%|                    plot_segmentation(segmentation, epoch=epoch, prefix="seg_")
(call)|         1|      4.38552|      4.38552|  0.92%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_visualization.py:578 plot_segmentation
   198|         0|            0|            0|  0.00%|
   199|         1|  7.98702e-05|  7.98702e-05|  0.00%|                    generated: Output = vae.generate(imgs_in=reference_imgs, draw_boxes=True)
(call)|         1|     0.481305|     0.481305|  0.10%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/vae_model.py:650 generate
   200|         1|  4.26769e-05|  4.26769e-05|  0.00%|                    plot_generation(generated, epoch=epoch, prefix="gen_")
(call)|         1|      6.50639|      6.50639|  1.37%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_visualization.py:514 plot_generation
   201|         0|            0|            0|  0.00%|
   202|         1|  1.21593e-05|  1.21593e-05|  0.00%|                    test_loss = test_metrics.loss
   203|         1|  1.12057e-05|  1.12057e-05|  0.00%|                    min_test_loss = min(min_test_loss, test_loss)
   204|         0|            0|            0|  0.00%|
   205|         1|  8.58307e-06|  8.58307e-06|  0.00%|                    if (test_loss == min_test_loss) or (epoch % CHECKPOINT_FREQUENCY == 0):
   206|         1|  9.05991e-06|  9.05991e-06|  0.00%|                        ckpt = create_ckpt(model=vae,
   207|         1|  7.86781e-06|  7.86781e-06|  0.00%|                                           optimizer=None,
   208|         1|  8.58307e-06|  8.58307e-06|  0.00%|                                           epoch=epoch,
   209|         1|  8.58307e-06|  8.58307e-06|  0.00%|                                           hyperparams_dict=params,
   210|         1|  3.21865e-05|  3.21865e-05|  0.00%|                                           history_dict=history_dict)
(call)|         1|    0.0110726|    0.0110726|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/vae_model.py:9 create_ckpt
   211|         1|  4.69685e-05|  4.69685e-05|  0.00%|                        log_object_as_artifact(name="last_ckpt", obj=ckpt)  # log file into neptune
(call)|         1|      20.1477|      20.1477|  4.23%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_neptune.py:52 log_object_as_artifact
   212|         1|  1.16825e-05|  1.16825e-05|  0.00%|                        plot_all_from_dictionary(history_dict,
   213|         1|  8.58307e-06|  8.58307e-06|  0.00%|                                                 params,
   214|         1|  8.58307e-06|  8.58307e-06|  0.00%|                                                 test_frequency=TEST_FREQUENCY,
   215|         1|  8.10623e-06|  8.10623e-06|  0.00%|                                                 train_or_test="test",
   216|         1|  4.48227e-05|  4.48227e-05|  0.00%|                                                 verbose=True)
(call)|         1|      110.136|      110.136| 23.14%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_visualization.py:493 plot_all_from_dictionary
   217|         1|  1.07288e-05|  1.07288e-05|  0.00%|                        plot_all_from_dictionary(history_dict,
   218|         1|  8.82149e-06|  8.82149e-06|  0.00%|                                                 params,
   219|         1|  2.47955e-05|  2.47955e-05|  0.00%|                                                 test_frequency=TEST_FREQUENCY,
   220|         1|  8.10623e-06|  8.10623e-06|  0.00%|                                                 train_or_test="train",
   221|         1|  0.000186205|  0.000186205|  0.00%|                                                 verbose=True)
(call)|         1|      94.6149|      94.6149| 19.88%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_visualization.py:493 plot_all_from_dictionary
(call)|         1|  7.86781e-05|  7.86781e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/grad_mode.py:69 __exit__
(call)|         1|  6.91414e-05|  6.91414e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/grad_mode.py:109 __exit__
(call)|         1|  3.62396e-05|  3.62396e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/anomaly_mode.py:104 __exit__
   222|         0|            0|            0|  0.00%|
   223|         0|            0|            0|  0.00%|##### # Check segmentation WITH and WITHOUT tiling
   224|         0|            0|            0|  0.00%|####img_to_segment = train_loader.img[0, :, 1000:1300, 2100:2400]
   225|         0|            0|            0|  0.00%|####roi_mask_to_segment = train_loader.roi_mask[0, :, 1000:1300, 2100:2400]
   226|         0|            0|            0|  0.00%|####
   227|         0|            0|            0|  0.00%|##### check simple segmentation
   228|         0|            0|            0|  0.00%|####crop_size = params["input_image"]["size_raw_image"]
   229|         0|            0|            0|  0.00%|####small_img_to_segment = img_to_segment[None, ..., :crop_size, :crop_size]
   230|         0|            0|            0|  0.00%|####if torch.cuda.is_available():
   231|         0|            0|            0|  0.00%|####    small_img_to_segment = small_img_to_segment.cuda()
   232|         0|            0|            0|  0.00%|####segmentation: Segmentation = vae.segment(batch_imgs=small_img_to_segment)
   233|         0|            0|            0|  0.00%|####plot_segmentation(segmentation, epoch="", prefix="seg_", postfix="_tiling")
   234|         0|            0|            0|  0.00%|####
   235|         0|            0|            0|  0.00%|##### tiling segmentation
   236|         0|            0|            0|  0.00%|####tiling: Segmentation = vae.segment_with_tiling(single_img=img_to_segment,
   237|         0|            0|            0|  0.00%|####                                               roi_mask=roi_mask_to_segment,
   238|         0|            0|            0|  0.00%|####                                               crop_size=None,
   239|         0|            0|            0|  0.00%|####                                               stride=(40, 40),
   240|         0|            0|            0|  0.00%|####                                               n_objects_max_per_patch=None,
   241|         0|            0|            0|  0.00%|####                                               prob_corr_factor=None,
   242|         0|            0|            0|  0.00%|####                                               overlap_threshold=None,
   243|         0|            0|            0|  0.00%|####                                               radius_nn=10,
   244|         0|            0|            0|  0.00%|####                                               batch_size=64)
   245|         0|            0|            0|  0.00%|####log_object_as_artifact(name="tiling", obj=tiling, verbose=True)
   246|         0|            0|            0|  0.00%|####tiling_fig = plot_tiling(tiling, neptune_name="tiling_before_graph")
   247|         0|            0|            0|  0.00%|####
   248|         0|            0|            0|  0.00%|##### perform graph analysis
   249|         0|            0|            0|  0.00%|####g = GraphSegmentation(tiling, min_fg_prob=0.1, min_edge_weight=0.01, normalize_graph_edges=True)
   250|         0|            0|            0|  0.00%|####partition = g.find_partition_leiden(resolution=1.0,
   251|         0|            0|            0|  0.00%|####                                    window=None,
   252|         0|            0|            0|  0.00%|####                                    min_size=30,
   253|         0|            0|            0|  0.00%|####                                    cpm_or_modularity="modularity",
   254|         0|            0|            0|  0.00%|####                                    each_cc_separately=False,
   255|         0|            0|            0|  0.00%|####                                    n_iterations=10,
   256|         0|            0|            0|  0.00%|####                                    initial_membership=None)
   257|         0|            0|            0|  0.00%|####g.plot_partition(partition, neptune_name="tiling_after_graph")
   258|         0|            0|            0|  0.00%|####
   259|         0|            0|            0|  0.00%|####label = g.partition_2_label(partition)
   260|         0|            0|            0|  0.00%|####try:
   261|         0|            0|            0|  0.00%|####    label_after_QC = g.QC_on_label(label, min_area=30)
   262|         0|            0|            0|  0.00%|####except:
   263|         0|            0|            0|  0.00%|####    label_after_QC = label
   264|         0|            0|            0|  0.00%|####
   265|         0|            0|            0|  0.00%|####plot_label_contours(label=tiling.integer_mask[0, 0],
   266|         0|            0|            0|  0.00%|####                    image=tiling.raw_image[0, 0],
   267|         0|            0|            0|  0.00%|####                    contour_thickness=2,
   268|         0|            0|            0|  0.00%|####                    neptune_name="tiling_contours_based_on_sample")
   269|         0|            0|            0|  0.00%|####
   270|         0|            0|            0|  0.00%|####plot_label_contours(label=label_after_QC,
   271|         0|            0|            0|  0.00%|####                    image=tiling.raw_image[0, 0],
   272|         0|            0|            0|  0.00%|####                    contour_thickness=2,
   273|         0|            0|            0|  0.00%|####                    neptune_name="tiling_contours_based_on_graph")
   274|         0|            0|            0|  0.00%|####
   275|         1|   4.8399e-05|   4.8399e-05|  0.00%|exp.stop()
(call)|         1|     0.774407|     0.774407|  0.16%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/experiments.py:1048 stop
File: <frozen importlib._bootstrap_external>
File duration: 25.2965s (5.31%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         0|            0|            0|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         0|            0|            0|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         0|            0|            0|  0.00%|
     9|         0|            0|            0|  0.00%|
    10|         0|            0|            0|  0.00%|
    11|         0|            0|            0|  0.00%|
    12|         0|            0|            0|  0.00%|
    13|         0|            0|            0|  0.00%|
    14|         0|            0|            0|  0.00%|
    15|         0|            0|            0|  0.00%|
    16|         0|            0|            0|  0.00%|
    17|         0|            0|            0|  0.00%|
    18|         0|            0|            0|  0.00%|
    19|         0|            0|            0|  0.00%|
    20|         0|            0|            0|  0.00%|
    21|         0|            0|            0|  0.00%|
    22|         0|            0|            0|  0.00%|
    23|         0|            0|            0|  0.00%|
    24|         0|            0|            0|  0.00%|
    25|         0|            0|            0|  0.00%|
    26|         0|            0|            0|  0.00%|
    27|         0|            0|            0|  0.00%|
    28|         0|            0|            0|  0.00%|
    29|         0|            0|            0|  0.00%|
    30|         0|            0|            0|  0.00%|
    31|         0|            0|            0|  0.00%|
    32|         0|            0|            0|  0.00%|
    33|         0|            0|            0|  0.00%|
    34|         0|            0|            0|  0.00%|
    35|         0|            0|            0|  0.00%|
    36|         0|            0|            0|  0.00%|
    37|         0|            0|            0|  0.00%|
    38|         0|            0|            0|  0.00%|
    39|         0|            0|            0|  0.00%|
    40|      5075|    0.0139043|  2.73977e-06|  0.00%|
    41|         0|            0|            0|  0.00%|
    42|      5075|    0.0175536|  3.45883e-06|  0.00%|
    43|         0|            0|            0|  0.00%|
    44|         0|            0|            0|  0.00%|
    45|         0|            0|            0|  0.00%|
    46|         3|  8.58307e-06|  2.86102e-06|  0.00%|
    47|         0|            0|            0|  0.00%|
    48|         3|  1.54972e-05|  5.16574e-06|  0.00%|
    49|         0|            0|            0|  0.00%|
    50|         0|            0|            0|  0.00%|
    51|      8564|    0.0213604|  2.49421e-06|  0.00%|
    52|         0|            0|            0|  0.00%|
    53|      8564|     0.037679|  4.39969e-06|  0.01%|
    54|         0|            0|            0|  0.00%|
    55|         0|            0|            0|  0.00%|
    56|     31239|    0.0835972|  2.67605e-06|  0.02%|
    57|         0|            0|            0|  0.00%|
    58|    161905|     0.521606|  3.22168e-06|  0.11%|
    59|     99427|     0.565283|  5.68541e-06|  0.12%|
(call)|     31239|     0.647652|  2.07322e-05|  0.14%|# <frozen importlib._bootstrap_external>:58 <listcomp>
    60|         0|            0|            0|  0.00%|
    61|         0|            0|            0|  0.00%|
    62|      5714|    0.0185795|  3.25157e-06|  0.00%|
    63|         0|            0|            0|  0.00%|
    64|      5714|    0.0259266|  4.53738e-06|  0.01%|
    65|      5714|    0.0267835|  4.68734e-06|  0.01%|
    66|      5714|    0.0223072|  3.90395e-06|  0.00%|
    67|         0|            0|            0|  0.00%|
    68|         0|            0|            0|  0.00%|
    69|         0|            0|            0|  0.00%|
    70|         0|            0|            0|  0.00%|
    71|         0|            0|            0|  0.00%|
    72|         0|            0|            0|  0.00%|
    73|         0|            0|            0|  0.00%|
    74|     20469|    0.0479748|  2.34378e-06|  0.01%|
    75|         0|            0|            0|  0.00%|
    76|         0|            0|            0|  0.00%|
    77|         0|            0|            0|  0.00%|
    78|         0|            0|            0|  0.00%|
    79|         0|            0|            0|  0.00%|
    80|         0|            0|            0|  0.00%|
    81|     20469|      3.35158|  0.000163739|  0.70%|
    82|         0|            0|            0|  0.00%|
    83|         0|            0|            0|  0.00%|
    84|     12538|    0.0309496|  2.46846e-06|  0.01%|
    85|         0|            0|            0|  0.00%|
    86|     12538|    0.0447948|  3.57272e-06|  0.01%|
    87|     12538|     0.156773|  1.25038e-05|  0.03%|
(call)|     12538|      3.28202|  0.000261766|  0.69%|# <frozen importlib._bootstrap_external>:74 _path_stat
    88|      7728|    0.0310974|  4.02399e-06|  0.01%|
    89|      7728|    0.0300527|   3.8888e-06|  0.01%|
    90|      4810|    0.0202608|  4.21223e-06|  0.00%|
    91|         0|            0|            0|  0.00%|
    92|         0|            0|            0|  0.00%|
    93|     11470|    0.0289433|  2.52339e-06|  0.01%|
    94|         0|            0|            0|  0.00%|
    95|     11470|     0.117299|  1.02266e-05|  0.02%|
(call)|     11470|      3.56009|  0.000310383|  0.75%|# <frozen importlib._bootstrap_external>:84 _path_is_mode_type
    96|         0|            0|            0|  0.00%|
    97|         0|            0|            0|  0.00%|
    98|      1068|   0.00302744|  2.83468e-06|  0.00%|
    99|         0|            0|            0|  0.00%|
   100|      1068|   0.00394225|  3.69125e-06|  0.00%|
   101|         1|  1.52588e-05|  1.52588e-05|  0.00%|
   102|      1068|    0.0114837|  1.07525e-05|  0.00%|
(call)|      1068|    0.0358615|  3.35782e-05|  0.01%|# <frozen importlib._bootstrap_external>:84 _path_is_mode_type
   103|         0|            0|            0|  0.00%|
   104|         0|            0|            0|  0.00%|
   105|         1|  7.39098e-06|  7.39098e-06|  0.00%|
   106|         0|            0|            0|  0.00%|
   107|         0|            0|            0|  0.00%|
   108|         0|            0|            0|  0.00%|
   109|         0|            0|            0|  0.00%|
   110|         1|  8.82149e-06|  8.82149e-06|  0.00%|
   111|         1|  5.96046e-06|  5.96046e-06|  0.00%|
   112|         1|  5.84126e-05|  5.84126e-05|  0.00%|
   113|         1|  9.29832e-06|  9.29832e-06|  0.00%|
   114|         0|            0|            0|  0.00%|
   115|         0|            0|            0|  0.00%|
   116|         1|  9.77516e-06|  9.77516e-06|  0.00%|
   117|         1|  4.26769e-05|  4.26769e-05|  0.00%|
   118|         1|  0.000135422|  0.000135422|  0.00%|
   119|         0|            0|            0|  0.00%|
   120|         0|            0|            0|  0.00%|
   121|         0|            0|            0|  0.00%|
   122|         0|            0|            0|  0.00%|
   123|         0|            0|            0|  0.00%|
   124|         0|            0|            0|  0.00%|
   125|         0|            0|            0|  0.00%|
   126|         0|            0|            0|  0.00%|
   127|         0|            0|            0|  0.00%|
   128|         0|            0|            0|  0.00%|
   129|         0|            0|            0|  0.00%|
   130|         0|            0|            0|  0.00%|
   131|         0|            0|            0|  0.00%|
   132|         0|            0|            0|  0.00%|
   133|         0|            0|            0|  0.00%|
   134|         0|            0|            0|  0.00%|
   135|         0|            0|            0|  0.00%|
   136|         0|            0|            0|  0.00%|
   137|         0|            0|            0|  0.00%|
   138|         0|            0|            0|  0.00%|
   139|         0|            0|            0|  0.00%|
   140|         0|            0|            0|  0.00%|
   141|         0|            0|            0|  0.00%|
   142|         0|            0|            0|  0.00%|
   143|         0|            0|            0|  0.00%|
   144|         0|            0|            0|  0.00%|
   145|         0|            0|            0|  0.00%|
   146|         0|            0|            0|  0.00%|
   147|         0|            0|            0|  0.00%|
   148|         0|            0|            0|  0.00%|
   149|         0|            0|            0|  0.00%|
   150|         0|            0|            0|  0.00%|
   151|         0|            0|            0|  0.00%|
   152|         0|            0|            0|  0.00%|
   153|         0|            0|            0|  0.00%|
   154|         0|            0|            0|  0.00%|
   155|         0|            0|            0|  0.00%|
   156|         0|            0|            0|  0.00%|
   157|         0|            0|            0|  0.00%|
   158|         0|            0|            0|  0.00%|
   159|         0|            0|            0|  0.00%|
   160|         0|            0|            0|  0.00%|
   161|         0|            0|            0|  0.00%|
   162|         0|            0|            0|  0.00%|
   163|         0|            0|            0|  0.00%|
   164|         0|            0|            0|  0.00%|
   165|         0|            0|            0|  0.00%|
   166|         0|            0|            0|  0.00%|
   167|         0|            0|            0|  0.00%|
   168|         0|            0|            0|  0.00%|
   169|         0|            0|            0|  0.00%|
   170|         0|            0|            0|  0.00%|
   171|         0|            0|            0|  0.00%|
   172|         0|            0|            0|  0.00%|
   173|         0|            0|            0|  0.00%|
   174|         0|            0|            0|  0.00%|
   175|         0|            0|            0|  0.00%|
   176|         0|            0|            0|  0.00%|
   177|         0|            0|            0|  0.00%|
   178|         0|            0|            0|  0.00%|
   179|         0|            0|            0|  0.00%|
   180|         0|            0|            0|  0.00%|
   181|         0|            0|            0|  0.00%|
   182|         0|            0|            0|  0.00%|
   183|         0|            0|            0|  0.00%|
   184|         0|            0|            0|  0.00%|
   185|         0|            0|            0|  0.00%|
   186|         0|            0|            0|  0.00%|
   187|         0|            0|            0|  0.00%|
   188|         0|            0|            0|  0.00%|
   189|         0|            0|            0|  0.00%|
   190|         0|            0|            0|  0.00%|
   191|         0|            0|            0|  0.00%|
   192|         0|            0|            0|  0.00%|
   193|         0|            0|            0|  0.00%|
   194|         0|            0|            0|  0.00%|
   195|         0|            0|            0|  0.00%|
   196|         0|            0|            0|  0.00%|
   197|         0|            0|            0|  0.00%|
   198|         0|            0|            0|  0.00%|
   199|         0|            0|            0|  0.00%|
   200|         0|            0|            0|  0.00%|
   201|         0|            0|            0|  0.00%|
   202|         0|            0|            0|  0.00%|
   203|         0|            0|            0|  0.00%|
   204|         0|            0|            0|  0.00%|
   205|         0|            0|            0|  0.00%|
   206|         0|            0|            0|  0.00%|
   207|         0|            0|            0|  0.00%|
   208|         0|            0|            0|  0.00%|
   209|         0|            0|            0|  0.00%|
   210|         0|            0|            0|  0.00%|
   211|         0|            0|            0|  0.00%|
   212|         0|            0|            0|  0.00%|
   213|         0|            0|            0|  0.00%|
   214|         0|            0|            0|  0.00%|
   215|         0|            0|            0|  0.00%|
   216|         0|            0|            0|  0.00%|
   217|         0|            0|            0|  0.00%|
   218|         0|            0|            0|  0.00%|
   219|         0|            0|            0|  0.00%|
   220|         0|            0|            0|  0.00%|
   221|         0|            0|            0|  0.00%|
   222|         0|            0|            0|  0.00%|
   223|         0|            0|            0|  0.00%|
   224|         0|            0|            0|  0.00%|
   225|         0|            0|            0|  0.00%|
   226|         0|            0|            0|  0.00%|
   227|         0|            0|            0|  0.00%|
   228|         0|            0|            0|  0.00%|
   229|         0|            0|            0|  0.00%|
   230|         0|            0|            0|  0.00%|
   231|         0|            0|            0|  0.00%|
   232|         0|            0|            0|  0.00%|
   233|         0|            0|            0|  0.00%|
   234|         0|            0|            0|  0.00%|
   235|         0|            0|            0|  0.00%|
   236|         0|            0|            0|  0.00%|
   237|         0|            0|            0|  0.00%|
   238|         0|            0|            0|  0.00%|
   239|         0|            0|            0|  0.00%|
   240|         0|            0|            0|  0.00%|
   241|         0|            0|            0|  0.00%|
   242|         0|            0|            0|  0.00%|
   243|         0|            0|            0|  0.00%|
   244|         0|            0|            0|  0.00%|
   245|         0|            0|            0|  0.00%|
   246|         0|            0|            0|  0.00%|
   247|         0|            0|            0|  0.00%|
   248|         0|            0|            0|  0.00%|
   249|         0|            0|            0|  0.00%|
   250|         0|            0|            0|  0.00%|
   251|         0|            0|            0|  0.00%|
   252|         0|            0|            0|  0.00%|
   253|         0|            0|            0|  0.00%|
   254|         0|            0|            0|  0.00%|
   255|         0|            0|            0|  0.00%|
   256|         0|            0|            0|  0.00%|
   257|         0|            0|            0|  0.00%|
   258|         0|            0|            0|  0.00%|
   259|         0|            0|            0|  0.00%|
   260|         0|            0|            0|  0.00%|
   261|         0|            0|            0|  0.00%|
   262|         0|            0|            0|  0.00%|
   263|         0|            0|            0|  0.00%|
   264|         0|            0|            0|  0.00%|
   265|         0|            0|            0|  0.00%|
   266|         0|            0|            0|  0.00%|
   267|         0|            0|            0|  0.00%|
   268|         0|            0|            0|  0.00%|
   269|         0|            0|            0|  0.00%|
   270|         0|            0|            0|  0.00%|
   271|      5710|    0.0244515|  4.28222e-06|  0.01%|
   272|         0|            0|            0|  0.00%|
   273|         0|            0|            0|  0.00%|
   274|         0|            0|            0|  0.00%|
   275|         0|            0|            0|  0.00%|
   276|         0|            0|            0|  0.00%|
   277|         0|            0|            0|  0.00%|
   278|         0|            0|            0|  0.00%|
   279|         0|            0|            0|  0.00%|
   280|         0|            0|            0|  0.00%|
   281|         0|            0|            0|  0.00%|
   282|         0|            0|            0|  0.00%|
   283|         0|            0|            0|  0.00%|
   284|         0|            0|            0|  0.00%|
   285|         0|            0|            0|  0.00%|
   286|         0|            0|            0|  0.00%|
   287|         0|            0|            0|  0.00%|
   288|         0|            0|            0|  0.00%|
   289|      5710|    0.0289614|  5.07205e-06|  0.01%|
   290|         0|            0|            0|  0.00%|
   291|         0|            0|            0|  0.00%|
   292|         0|            0|            0|  0.00%|
   293|         0|            0|            0|  0.00%|
   294|         0|            0|            0|  0.00%|
   295|         0|            0|            0|  0.00%|
   296|      5710|    0.0313644|   5.4929e-06|  0.01%|
   297|      5710|    0.0733736|    1.285e-05|  0.02%|
(call)|      5710|    0.0935292|  1.63799e-05|  0.02%|# <frozen importlib._bootstrap_external>:62 _path_split
   298|      5710|    0.0306334|  5.36488e-06|  0.01%|
   299|      5710|    0.0286419|   5.0161e-06|  0.01%|
   300|      5710|     0.024925|  4.36515e-06|  0.01%|
   301|         0|            0|            0|  0.00%|
   302|      5710|    0.0282841|  4.95343e-06|  0.01%|
   303|      5710|    0.0238183|  4.17132e-06|  0.01%|
   304|      5710|    0.0259852|  4.55083e-06|  0.01%|
   305|      5710|     0.023551|  4.12452e-06|  0.00%|
   306|         0|            0|            0|  0.00%|
   307|         0|            0|            0|  0.00%|
   308|      5710|    0.0243859|  4.27074e-06|  0.01%|
   309|      5710|    0.0236568|  4.14306e-06|  0.00%|
   310|         0|            0|            0|  0.00%|
   311|         0|            0|            0|  0.00%|
   312|         0|            0|            0|  0.00%|
   313|      5710|    0.0690527|  1.20933e-05|  0.01%|
(call)|      5710|     0.251666|  4.40745e-05|  0.05%|# <frozen importlib._bootstrap_external>:56 _path_join
   314|         0|            0|            0|  0.00%|
   315|         0|            0|            0|  0.00%|
   316|         0|            0|            0|  0.00%|
   317|         0|            0|            0|  0.00%|
   318|         0|            0|            0|  0.00%|
   319|         0|            0|            0|  0.00%|
   320|         0|            0|            0|  0.00%|
   321|         0|            0|            0|  0.00%|
   322|         0|            0|            0|  0.00%|
   323|         0|            0|            0|  0.00%|
   324|         0|            0|            0|  0.00%|
   325|         0|            0|            0|  0.00%|
   326|         0|            0|            0|  0.00%|
   327|         0|            0|            0|  0.00%|
   328|         0|            0|            0|  0.00%|
   329|         0|            0|            0|  0.00%|
   330|         0|            0|            0|  0.00%|
   331|         0|            0|            0|  0.00%|
   332|         0|            0|            0|  0.00%|
   333|         0|            0|            0|  0.00%|
   334|         0|            0|            0|  0.00%|
   335|         0|            0|            0|  0.00%|
   336|         0|            0|            0|  0.00%|
   337|         0|            0|            0|  0.00%|
   338|         0|            0|            0|  0.00%|
   339|         0|            0|            0|  0.00%|
   340|         0|            0|            0|  0.00%|
   341|         0|            0|            0|  0.00%|
   342|         0|            0|            0|  0.00%|
   343|         0|            0|            0|  0.00%|
   344|         0|            0|            0|  0.00%|
   345|         0|            0|            0|  0.00%|
   346|         0|            0|            0|  0.00%|
   347|         0|            0|            0|  0.00%|
   348|         0|            0|            0|  0.00%|
   349|         0|            0|            0|  0.00%|
   350|         0|            0|            0|  0.00%|
   351|         0|            0|            0|  0.00%|
   352|         0|            0|            0|  0.00%|
   353|         0|            0|            0|  0.00%|
   354|         0|            0|            0|  0.00%|
   355|         0|            0|            0|  0.00%|
   356|         0|            0|            0|  0.00%|
   357|         0|            0|            0|  0.00%|
   358|         0|            0|            0|  0.00%|
   359|         0|            0|            0|  0.00%|
   360|         0|            0|            0|  0.00%|
   361|         0|            0|            0|  0.00%|
   362|         0|            0|            0|  0.00%|
   363|         0|            0|            0|  0.00%|
   364|         0|            0|            0|  0.00%|
   365|         0|            0|            0|  0.00%|
   366|         0|            0|            0|  0.00%|
   367|         0|            0|            0|  0.00%|
   368|         0|            0|            0|  0.00%|
   369|      3070|   0.00764489|  2.49019e-06|  0.00%|
   370|      3070|    0.0173655|   5.6565e-06|  0.00%|
   371|      2855|    0.0101542|  3.55665e-06|  0.00%|
   372|      2855|    0.0364058|  1.27516e-05|  0.01%|
(call)|      2855|     0.413634|  0.000144881|  0.09%|# <frozen importlib._bootstrap_external>:271 cache_from_source
   373|         0|            0|            0|  0.00%|
   374|         0|            0|            0|  0.00%|
   375|       215|   0.00105429|  4.90366e-06|  0.00%|
   376|         0|            0|            0|  0.00%|
   377|         0|            0|            0|  0.00%|
   378|       215|  0.000883579|  4.10967e-06|  0.00%|
   379|         0|            0|            0|  0.00%|
   380|         0|            0|            0|  0.00%|
   381|         1|   6.4373e-06|   6.4373e-06|  0.00%|
   382|         0|            0|            0|  0.00%|
   383|         1|  5.00679e-06|  5.00679e-06|  0.00%|
   384|         1|  1.35899e-05|  1.35899e-05|  0.00%|
(call)|         1|  1.74046e-05|  1.74046e-05|  0.00%|# <frozen importlib._bootstrap_external>:74 _path_stat
   385|         0|            0|            0|  0.00%|
   386|         0|            0|            0|  0.00%|
   387|         0|            0|            0|  0.00%|
   388|         0|            0|            0|  0.00%|
   389|         1|  5.24521e-06|  5.24521e-06|  0.00%|
   390|         1|  4.29153e-06|  4.29153e-06|  0.00%|
   391|         0|            0|            0|  0.00%|
   392|         0|            0|            0|  0.00%|
   393|         0|            0|            0|  0.00%|
   394|         0|            0|            0|  0.00%|
   395|         0|            0|            0|  0.00%|
   396|         0|            0|            0|  0.00%|
   397|         0|            0|            0|  0.00%|
   398|         0|            0|            0|  0.00%|
   399|         0|            0|            0|  0.00%|
   400|         0|            0|            0|  0.00%|
   401|      2857|   0.00970888|  3.39828e-06|  0.00%|
   402|      2857|      0.01175|   4.1127e-06|  0.00%|
   403|         0|            0|            0|  0.00%|
   404|      2857|    0.0108867|  3.81052e-06|  0.00%|
   405|         0|            0|            0|  0.00%|
   406|         0|            0|            0|  0.00%|
   407|      2857|    0.0330594|  1.15714e-05|  0.01%|
(call)|      2856|    0.0176387|  6.17601e-06|  0.00%|# <frozen importlib._bootstrap_external>:909 get_filename
(call)|         1|   0.00010705|   0.00010705|  0.00%|# <frozen importlib._bootstrap_external>:921 get_resource_reader
   408|         0|            0|            0|  0.00%|
   409|         0|            0|            0|  0.00%|
   410|         0|            0|            0|  0.00%|
   411|         0|            0|            0|  0.00%|
   412|         0|            0|            0|  0.00%|
   413|         0|            0|            0|  0.00%|
   414|         0|            0|            0|  0.00%|
   415|         0|            0|            0|  0.00%|
   416|         0|            0|            0|  0.00%|
   417|         0|            0|            0|  0.00%|
   418|         0|            0|            0|  0.00%|
   419|         0|            0|            0|  0.00%|
   420|         0|            0|            0|  0.00%|
   421|        25|  9.46522e-05|  3.78609e-06|  0.00%|
   422|         0|            0|            0|  0.00%|
   423|         0|            0|            0|  0.00%|
   424|         0|            0|            0|  0.00%|
   425|         0|            0|            0|  0.00%|
   426|         0|            0|            0|  0.00%|
   427|         0|            0|            0|  0.00%|
   428|         0|            0|            0|  0.00%|
   429|         0|            0|            0|  0.00%|
   430|         0|            0|            0|  0.00%|
   431|        25|   0.00029397|  1.17588e-05|  0.00%|
(call)|        25|    0.0128644|  0.000514574|  0.00%|# <frozen importlib._bootstrap_external>:1339 find_loader
   432|        25|  0.000121832|  4.87328e-06|  0.00%|
   433|         0|            0|            0|  0.00%|
   434|         0|            0|            0|  0.00%|
   435|        25|  9.56059e-05|  3.82423e-06|  0.00%|
   436|         0|            0|            0|  0.00%|
   437|         0|            0|            0|  0.00%|
   438|      2855|    0.0125871|  4.40878e-06|  0.00%|
   439|         0|            0|            0|  0.00%|
   440|         0|            0|            0|  0.00%|
   441|         0|            0|            0|  0.00%|
   442|         0|            0|            0|  0.00%|
   443|         0|            0|            0|  0.00%|
   444|         0|            0|            0|  0.00%|
   445|         0|            0|            0|  0.00%|
   446|         0|            0|            0|  0.00%|
   447|         0|            0|            0|  0.00%|
   448|         0|            0|            0|  0.00%|
   449|         0|            0|            0|  0.00%|
   450|         0|            0|            0|  0.00%|
   451|         0|            0|            0|  0.00%|
   452|         0|            0|            0|  0.00%|
   453|         0|            0|            0|  0.00%|
   454|      2855|    0.0148654|  5.20679e-06|  0.00%|
   455|      2855|    0.0131183|  4.59484e-06|  0.00%|
   456|         0|            0|            0|  0.00%|
   457|         0|            0|            0|  0.00%|
   458|         0|            0|            0|  0.00%|
   459|      2855|    0.0143995|  5.04362e-06|  0.00%|
   460|         0|            0|            0|  0.00%|
   461|         0|            0|            0|  0.00%|
   462|         0|            0|            0|  0.00%|
   463|      2855|    0.0345118|  1.20882e-05|  0.01%|
(call)|      2855|    0.0235372|  8.24419e-06|  0.00%|# <frozen importlib._bootstrap_external>:51 _r_long
   464|         0|            0|            0|  0.00%|
   465|      2855|    0.0138216|  4.84119e-06|  0.00%|
   466|         0|            0|            0|  0.00%|
   467|         0|            0|            0|  0.00%|
   468|      2855|    0.0113916|  3.99007e-06|  0.00%|
   469|         0|            0|            0|  0.00%|
   470|         0|            0|            0|  0.00%|
   471|      2855|    0.0107944|  3.78088e-06|  0.00%|
   472|         0|            0|            0|  0.00%|
   473|         0|            0|            0|  0.00%|
   474|         0|            0|            0|  0.00%|
   475|         0|            0|            0|  0.00%|
   476|         0|            0|            0|  0.00%|
   477|         0|            0|            0|  0.00%|
   478|         0|            0|            0|  0.00%|
   479|         0|            0|            0|  0.00%|
   480|         0|            0|            0|  0.00%|
   481|         0|            0|            0|  0.00%|
   482|         0|            0|            0|  0.00%|
   483|         0|            0|            0|  0.00%|
   484|         0|            0|            0|  0.00%|
   485|         0|            0|            0|  0.00%|
   486|         0|            0|            0|  0.00%|
   487|         0|            0|            0|  0.00%|
   488|         0|            0|            0|  0.00%|
   489|         0|            0|            0|  0.00%|
   490|      2855|    0.0329471|  1.15401e-05|  0.01%|
(call)|      2855|    0.0186703|  6.53952e-06|  0.00%|# <frozen importlib._bootstrap_external>:51 _r_long
   491|         1|  5.72205e-06|  5.72205e-06|  0.00%|
   492|         1|  2.24113e-05|  2.24113e-05|  0.00%|
(call)|         1|  1.00136e-05|  1.00136e-05|  0.00%|# <frozen importlib._bootstrap>:222 _verbose_message
   493|         1|   1.0252e-05|   1.0252e-05|  0.00%|
   494|      2854|    0.0116556|  4.08394e-06|  0.00%|
   495|      2854|    0.0311508|  1.09148e-05|  0.01%|
(call)|      2854|    0.0168319|  5.89764e-06|  0.00%|# <frozen importlib._bootstrap_external>:51 _r_long
   496|         0|            0|            0|  0.00%|
   497|         0|            0|            0|  0.00%|
   498|         0|            0|            0|  0.00%|
   499|         0|            0|            0|  0.00%|
   500|         0|            0|            0|  0.00%|
   501|         0|            0|            0|  0.00%|
   502|         0|            0|            0|  0.00%|
   503|         0|            0|            0|  0.00%|
   504|         0|            0|            0|  0.00%|
   505|         0|            0|            0|  0.00%|
   506|         0|            0|            0|  0.00%|
   507|         0|            0|            0|  0.00%|
   508|         0|            0|            0|  0.00%|
   509|         0|            0|            0|  0.00%|
   510|         0|            0|            0|  0.00%|
   511|         0|            0|            0|  0.00%|
   512|         0|            0|            0|  0.00%|
   513|         0|            0|            0|  0.00%|
   514|         0|            0|            0|  0.00%|
   515|         0|            0|            0|  0.00%|
   516|         0|            0|            0|  0.00%|
   517|         0|            0|            0|  0.00%|
   518|         0|            0|            0|  0.00%|
   519|         0|            0|            0|  0.00%|
   520|         0|            0|            0|  0.00%|
   521|         0|            0|            0|  0.00%|
   522|         0|            0|            0|  0.00%|
   523|      2854|    0.0100021|   3.5046e-06|  0.00%|
   524|         0|            0|            0|  0.00%|
   525|      2854|      0.47019|  0.000164748|  0.10%|
   526|      2854|    0.0214226|  7.50618e-06|  0.00%|
   527|      2854|    0.0365059|  1.27911e-05|  0.01%|
(call)|      2854|    0.0242541|  8.49828e-06|  0.01%|# <frozen importlib._bootstrap>:222 _verbose_message
   528|      2854|    0.0117586|  4.12003e-06|  0.00%|
   529|      2854|    0.0192163|  6.73311e-06|  0.00%|
   530|      2854|    0.0115345|   4.0415e-06|  0.00%|
   531|         0|            0|            0|  0.00%|
   532|         0|            0|            0|  0.00%|
   533|         0|            0|            0|  0.00%|
   534|         0|            0|            0|  0.00%|
   535|         0|            0|            0|  0.00%|
   536|         1|  1.21593e-05|  1.21593e-05|  0.00%|
   537|         0|            0|            0|  0.00%|
   538|         1|  7.39098e-06|  7.39098e-06|  0.00%|
   539|         1|  1.57356e-05|  1.57356e-05|  0.00%|
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# <frozen importlib._bootstrap_external>:46 _w_long
   540|         1|  1.16825e-05|  1.16825e-05|  0.00%|
(call)|         1|  6.67572e-06|  6.67572e-06|  0.00%|# <frozen importlib._bootstrap_external>:46 _w_long
   541|         1|  1.12057e-05|  1.12057e-05|  0.00%|
(call)|         1|  5.96046e-06|  5.96046e-06|  0.00%|# <frozen importlib._bootstrap_external>:46 _w_long
   542|         1|  0.000197649|  0.000197649|  0.00%|
   543|         1|  8.82149e-06|  8.82149e-06|  0.00%|
   544|         0|            0|            0|  0.00%|
   545|         0|            0|            0|  0.00%|
   546|         0|            0|            0|  0.00%|
   547|         0|            0|            0|  0.00%|
   548|         0|            0|            0|  0.00%|
   549|         0|            0|            0|  0.00%|
   550|         0|            0|            0|  0.00%|
   551|         0|            0|            0|  0.00%|
   552|         0|            0|            0|  0.00%|
   553|         0|            0|            0|  0.00%|
   554|         0|            0|            0|  0.00%|
   555|         0|            0|            0|  0.00%|
   556|         0|            0|            0|  0.00%|
   557|         0|            0|            0|  0.00%|
   558|         0|            0|            0|  0.00%|
   559|         0|            0|            0|  0.00%|
   560|         0|            0|            0|  0.00%|
   561|         0|            0|            0|  0.00%|
   562|         0|            0|            0|  0.00%|
   563|         0|            0|            0|  0.00%|
   564|         0|            0|            0|  0.00%|
   565|         0|            0|            0|  0.00%|
   566|         0|            0|            0|  0.00%|
   567|         0|            0|            0|  0.00%|
   568|         0|            0|            0|  0.00%|
   569|         0|            0|            0|  0.00%|
   570|         0|            0|            0|  0.00%|
   571|         0|            0|            0|  0.00%|
   572|         0|            0|            0|  0.00%|
   573|         0|            0|            0|  0.00%|
   574|      3743|    0.0148139|  3.95776e-06|  0.00%|
   575|         0|            0|            0|  0.00%|
   576|         0|            0|            0|  0.00%|
   577|         0|            0|            0|  0.00%|
   578|         0|            0|            0|  0.00%|
   579|         0|            0|            0|  0.00%|
   580|         0|            0|            0|  0.00%|
   581|         0|            0|            0|  0.00%|
   582|         0|            0|            0|  0.00%|
   583|         0|            0|            0|  0.00%|
   584|         0|            0|            0|  0.00%|
   585|         0|            0|            0|  0.00%|
   586|      3743|    0.0172613|  4.61161e-06|  0.00%|
   587|         0|            0|            0|  0.00%|
   588|         0|            0|            0|  0.00%|
   589|         0|            0|            0|  0.00%|
   590|         0|            0|            0|  0.00%|
   591|         0|            0|            0|  0.00%|
   592|         0|            0|            0|  0.00%|
   593|         0|            0|            0|  0.00%|
   594|         0|            0|            0|  0.00%|
   595|         0|            0|            0|  0.00%|
   596|         0|            0|            0|  0.00%|
   597|         0|            0|            0|  0.00%|
   598|      3743|    0.0206733|  5.52318e-06|  0.00%|
   599|         0|            0|            0|  0.00%|
   600|         0|            0|            0|  0.00%|
   601|         0|            0|            0|  0.00%|
   602|         0|            0|            0|  0.00%|
   603|         0|            0|            0|  0.00%|
   604|         0|            0|            0|  0.00%|
   605|         0|            0|            0|  0.00%|
   606|      3743|    0.0548332|  1.46495e-05|  0.01%|
(call)|      3743|       0.1145|  3.05903e-05|  0.02%|# <frozen importlib._bootstrap>:369 __init__
   607|      3743|     0.017767|  4.74671e-06|  0.00%|
   608|         0|            0|            0|  0.00%|
   609|         0|            0|            0|  0.00%|
   610|      3743|    0.0165663|  4.42594e-06|  0.00%|
   611|         0|            0|            0|  0.00%|
   612|         0|            0|            0|  0.00%|
   613|         0|            0|            0|  0.00%|
   614|         0|            0|            0|  0.00%|
   615|         0|            0|            0|  0.00%|
   616|         0|            0|            0|  0.00%|
   617|         0|            0|            0|  0.00%|
   618|         0|            0|            0|  0.00%|
   619|         0|            0|            0|  0.00%|
   620|      3743|     0.016587|  4.43148e-06|  0.00%|
   621|         0|            0|            0|  0.00%|
   622|         0|            0|            0|  0.00%|
   623|         0|            0|            0|  0.00%|
   624|         0|            0|            0|  0.00%|
   625|         0|            0|            0|  0.00%|
   626|         0|            0|            0|  0.00%|
   627|         0|            0|            0|  0.00%|
   628|         0|            0|            0|  0.00%|
   629|         0|            0|            0|  0.00%|
   630|         0|            0|            0|  0.00%|
   631|      3743|    0.0164754|  4.40167e-06|  0.00%|
   632|      3743|    0.0177228|  4.73493e-06|  0.00%|
   633|         0|            0|            0|  0.00%|
   634|         0|            0|            0|  0.00%|
   635|         0|            0|            0|  0.00%|
   636|         0|            0|            0|  0.00%|
   637|      3743|    0.0159194|  4.25313e-06|  0.00%|
   638|         0|            0|            0|  0.00%|
   639|         0|            0|            0|  0.00%|
   640|         0|            0|            0|  0.00%|
   641|         0|            0|            0|  0.00%|
   642|         0|            0|            0|  0.00%|
   643|         0|            0|            0|  0.00%|
   644|         0|            0|            0|  0.00%|
   645|         0|            0|            0|  0.00%|
   646|         0|            0|            0|  0.00%|
   647|         0|            0|            0|  0.00%|
   648|         0|            0|            0|  0.00%|
   649|         0|            0|            0|  0.00%|
   650|         0|            0|            0|  0.00%|
   651|         0|            0|            0|  0.00%|
   652|         0|            0|            0|  0.00%|
   653|         0|            0|            0|  0.00%|
   654|         0|            0|            0|  0.00%|
   655|         0|            0|            0|  0.00%|
   656|         0|            0|            0|  0.00%|
   657|         0|            0|            0|  0.00%|
   658|         0|            0|            0|  0.00%|
   659|         0|            0|            0|  0.00%|
   660|         0|            0|            0|  0.00%|
   661|         0|            0|            0|  0.00%|
   662|         0|            0|            0|  0.00%|
   663|         0|            0|            0|  0.00%|
   664|         0|            0|            0|  0.00%|
   665|         0|            0|            0|  0.00%|
   666|         0|            0|            0|  0.00%|
   667|         0|            0|            0|  0.00%|
   668|         0|            0|            0|  0.00%|
   669|         0|            0|            0|  0.00%|
   670|         0|            0|            0|  0.00%|
   671|         0|            0|            0|  0.00%|
   672|         0|            0|            0|  0.00%|
   673|         0|            0|            0|  0.00%|
   674|         0|            0|            0|  0.00%|
   675|         0|            0|            0|  0.00%|
   676|         0|            0|            0|  0.00%|
   677|         0|            0|            0|  0.00%|
   678|         0|            0|            0|  0.00%|
   679|         0|            0|            0|  0.00%|
   680|         0|            0|            0|  0.00%|
   681|         0|            0|            0|  0.00%|
   682|         0|            0|            0|  0.00%|
   683|         0|            0|            0|  0.00%|
   684|         0|            0|            0|  0.00%|
   685|         0|            0|            0|  0.00%|
   686|         0|            0|            0|  0.00%|
   687|         0|            0|            0|  0.00%|
   688|         0|            0|            0|  0.00%|
   689|         0|            0|            0|  0.00%|
   690|         0|            0|            0|  0.00%|
   691|         0|            0|            0|  0.00%|
   692|         0|            0|            0|  0.00%|
   693|         0|            0|            0|  0.00%|
   694|         0|            0|            0|  0.00%|
   695|         0|            0|            0|  0.00%|
   696|         0|            0|            0|  0.00%|
   697|         0|            0|            0|  0.00%|
   698|         0|            0|            0|  0.00%|
   699|         0|            0|            0|  0.00%|
   700|         0|            0|            0|  0.00%|
   701|         0|            0|            0|  0.00%|
   702|         0|            0|            0|  0.00%|
   703|         0|            0|            0|  0.00%|
   704|         0|            0|            0|  0.00%|
   705|         0|            0|            0|  0.00%|
   706|         0|            0|            0|  0.00%|
   707|         0|            0|            0|  0.00%|
   708|         0|            0|            0|  0.00%|
   709|         0|            0|            0|  0.00%|
   710|         0|            0|            0|  0.00%|
   711|         1|   3.8147e-06|   3.8147e-06|  0.00%|
   712|         0|            0|            0|  0.00%|
   713|         0|            0|            0|  0.00%|
   714|         1|  2.09808e-05|  2.09808e-05|  0.00%|
(call)|         1|  2.88486e-05|  2.88486e-05|  0.00%|# <frozen importlib._bootstrap_external>:401 _check_name_wrapper
(call)|         1|  1.62125e-05|  1.62125e-05|  0.00%|# <frozen importlib._bootstrap_external>:62 _path_split
   715|         1|  6.91414e-06|  6.91414e-06|  0.00%|
   716|         1|  4.76837e-06|  4.76837e-06|  0.00%|
   717|         1|  4.29153e-06|  4.29153e-06|  0.00%|
   718|         0|            0|            0|  0.00%|
   719|      2855|   0.00701666|  2.45767e-06|  0.00%|
   720|      2855|    0.0104966|  3.67657e-06|  0.00%|
   721|         0|            0|            0|  0.00%|
   722|      2855|   0.00777102|   2.7219e-06|  0.00%|
   723|         0|            0|            0|  0.00%|
   724|      2855|    0.0446305|  1.56324e-05|  0.01%|
(call)|      2855|      17.5211|   0.00613699|  3.68%|# <frozen importlib._bootstrap_external>:793 get_code
   725|      2855|    0.0123348|  4.32043e-06|  0.00%|
   726|         0|            0|            0|  0.00%|
   727|         0|            0|            0|  0.00%|
   728|      2855|    0.0422699|  1.48056e-05|  0.01%|
(call)|      2855|      79.4255|    0.0278198| 16.69%|# <frozen importlib._bootstrap>:211 _call_with_frames_removed
   729|         0|            0|            0|  0.00%|
   730|         0|            0|            0|  0.00%|
   731|         0|            0|            0|  0.00%|
   732|         0|            0|            0|  0.00%|
   733|         0|            0|            0|  0.00%|
   734|         0|            0|            0|  0.00%|
   735|         0|            0|            0|  0.00%|
   736|         0|            0|            0|  0.00%|
   737|         0|            0|            0|  0.00%|
   738|         0|            0|            0|  0.00%|
   739|         0|            0|            0|  0.00%|
   740|         0|            0|            0|  0.00%|
   741|         0|            0|            0|  0.00%|
   742|         0|            0|            0|  0.00%|
   743|         0|            0|            0|  0.00%|
   744|         0|            0|            0|  0.00%|
   745|         0|            0|            0|  0.00%|
   746|         0|            0|            0|  0.00%|
   747|         0|            0|            0|  0.00%|
   748|         0|            0|            0|  0.00%|
   749|         0|            0|            0|  0.00%|
   750|         0|            0|            0|  0.00%|
   751|         0|            0|            0|  0.00%|
   752|         0|            0|            0|  0.00%|
   753|         0|            0|            0|  0.00%|
   754|         0|            0|            0|  0.00%|
   755|         0|            0|            0|  0.00%|
   756|         0|            0|            0|  0.00%|
   757|         0|            0|            0|  0.00%|
   758|         0|            0|            0|  0.00%|
   759|         0|            0|            0|  0.00%|
   760|         0|            0|            0|  0.00%|
   761|         0|            0|            0|  0.00%|
   762|         0|            0|            0|  0.00%|
   763|         0|            0|            0|  0.00%|
   764|         0|            0|            0|  0.00%|
   765|         0|            0|            0|  0.00%|
   766|         0|            0|            0|  0.00%|
   767|         0|            0|            0|  0.00%|
   768|         0|            0|            0|  0.00%|
   769|         0|            0|            0|  0.00%|
   770|         0|            0|            0|  0.00%|
   771|         0|            0|            0|  0.00%|
   772|         0|            0|            0|  0.00%|
   773|         0|            0|            0|  0.00%|
   774|         0|            0|            0|  0.00%|
   775|         0|            0|            0|  0.00%|
   776|         0|            0|            0|  0.00%|
   777|         0|            0|            0|  0.00%|
   778|         0|            0|            0|  0.00%|
   779|         0|            0|            0|  0.00%|
   780|         0|            0|            0|  0.00%|
   781|         0|            0|            0|  0.00%|
   782|         0|            0|            0|  0.00%|
   783|         0|            0|            0|  0.00%|
   784|         0|            0|            0|  0.00%|
   785|         1|  2.38419e-05|  2.38419e-05|  0.00%|
   786|         0|            0|            0|  0.00%|
   787|         0|            0|            0|  0.00%|
   788|         0|            0|            0|  0.00%|
   789|         0|            0|            0|  0.00%|
   790|         1|  7.39098e-06|  7.39098e-06|  0.00%|
   791|         1|  2.93255e-05|  2.93255e-05|  0.00%|
(call)|         1|   0.00543809|   0.00543809|  0.00%|# <frozen importlib._bootstrap>:211 _call_with_frames_removed
   792|         0|            0|            0|  0.00%|
   793|      2855|    0.0137863|  4.82883e-06|  0.00%|
   794|         0|            0|            0|  0.00%|
   795|         0|            0|            0|  0.00%|
   796|         0|            0|            0|  0.00%|
   797|         0|            0|            0|  0.00%|
   798|         0|            0|            0|  0.00%|
   799|         0|            0|            0|  0.00%|
   800|      2855|    0.0418177|  1.46472e-05|  0.01%|
(call)|      2855|    0.0829909|  2.90686e-05|  0.02%|# <frozen importlib._bootstrap_external>:401 _check_name_wrapper
   801|      2855|    0.0159702|  5.59378e-06|  0.00%|
   802|      2855|    0.0150125|  5.25832e-06|  0.00%|
   803|      2855|     0.015511|  5.43294e-06|  0.00%|
   804|      2855|    0.0143538|  5.02758e-06|  0.00%|
   805|      2855|    0.0145402|  5.09289e-06|  0.00%|
   806|      2855|    0.0138407|  4.84787e-06|  0.00%|
   807|      2855|    0.0425251|  1.48949e-05|  0.01%|
(call)|      2855|     0.392646|  0.000137529|  0.08%|# <frozen importlib._bootstrap_external>:271 cache_from_source
   808|         0|            0|            0|  0.00%|
   809|         0|            0|            0|  0.00%|
   810|         0|            0|            0|  0.00%|
   811|      2855|    0.0153689|  5.38317e-06|  0.00%|
   812|      2855|    0.0393476|   1.3782e-05|  0.01%|
(call)|      2855|    0.0930476|  3.25911e-05|  0.02%|# <frozen importlib._bootstrap_external>:951 path_stats
   813|         0|            0|            0|  0.00%|
   814|         0|            0|            0|  0.00%|
   815|         0|            0|            0|  0.00%|
   816|      2855|    0.0179412|  6.28415e-06|  0.00%|
   817|      2855|    0.0137208|  4.80587e-06|  0.00%|
   818|      2855|    0.0791833|   2.7735e-05|  0.02%|
(call)|      2855|      15.3509|   0.00537685|  3.22%|# <frozen importlib._bootstrap_external>:914 get_data
   819|         0|            0|            0|  0.00%|
   820|         0|            0|            0|  0.00%|
   821|         0|            0|            0|  0.00%|
   822|         0|            0|            0|  0.00%|
   823|      2855|    0.0166836|  5.84364e-06|  0.00%|
   824|      2855|     0.015291|  5.35586e-06|  0.00%|
   825|         0|            0|            0|  0.00%|
   826|      2855|    0.0143309|  5.01957e-06|  0.00%|
   827|      2855|    0.0409305|  1.43364e-05|  0.01%|
(call)|      2855|     0.138232|  4.84177e-05|  0.03%|# <frozen importlib._bootstrap_external>:438 _classify_pyc
   828|      2855|    0.0206132|  7.22003e-06|  0.00%|
   829|      2855|    0.0147369|  5.16178e-06|  0.00%|
   830|      2855|    0.0130219|   4.5611e-06|  0.00%|
   831|         0|            0|            0|  0.00%|
   832|         0|            0|            0|  0.00%|
   833|         0|            0|            0|  0.00%|
   834|         0|            0|            0|  0.00%|
   835|         0|            0|            0|  0.00%|
   836|         0|            0|            0|  0.00%|
   837|         0|            0|            0|  0.00%|
   838|         0|            0|            0|  0.00%|
   839|         0|            0|            0|  0.00%|
   840|         0|            0|            0|  0.00%|
   841|         0|            0|            0|  0.00%|
   842|         0|            0|            0|  0.00%|
   843|      2855|    0.0128062|  4.48553e-06|  0.00%|
   844|      2855|    0.0126686|  4.43734e-06|  0.00%|
   845|      2855|     0.012871|  4.50824e-06|  0.00%|
   846|      2855|    0.0125127|  4.38273e-06|  0.00%|
   847|      2855|    0.0125048|  4.37997e-06|  0.00%|
   848|      2855|    0.0374632|   1.3122e-05|  0.01%|
(call)|      2855|     0.122098|  4.27665e-05|  0.03%|# <frozen importlib._bootstrap_external>:471 _validate_timestamp_pyc
   849|         0|            0|            0|  0.00%|
   850|         1|  5.72205e-06|  5.72205e-06|  0.00%|
   851|         1|  6.67572e-06|  6.67572e-06|  0.00%|
   852|         0|            0|            0|  0.00%|
   853|      2854|    0.0147483|   5.1676e-06|  0.00%|
   854|      2854|    0.0366087|  1.28272e-05|  0.01%|
(call)|      2854|    0.0230701|  8.08343e-06|  0.00%|# <frozen importlib._bootstrap>:222 _verbose_message
   855|      2854|    0.0135453|  4.74607e-06|  0.00%|
   856|      2854|    0.0126801|  4.44291e-06|  0.00%|
   857|      2854|    0.0397303|  1.39209e-05|  0.01%|
(call)|      2854|     0.604884|  0.000211942|  0.13%|# <frozen importlib._bootstrap_external>:523 _compile_bytecode
   858|         1|  5.96046e-06|  5.96046e-06|  0.00%|
   859|         1|  1.81198e-05|  1.81198e-05|  0.00%|
(call)|         1|  6.00815e-05|  6.00815e-05|  0.00%|# <frozen importlib._bootstrap_external>:914 get_data
   860|         1|  2.36034e-05|  2.36034e-05|  0.00%|
(call)|         1|   0.00549865|   0.00549865|  0.00%|# <frozen importlib._bootstrap_external>:785 source_to_code
   861|         1|  1.71661e-05|  1.71661e-05|  0.00%|
(call)|         1|  8.82149e-06|  8.82149e-06|  0.00%|# <frozen importlib._bootstrap>:222 _verbose_message
   862|         1|  6.91414e-06|  6.91414e-06|  0.00%|
   863|         1|  5.24521e-06|  5.24521e-06|  0.00%|
   864|         1|  5.72205e-06|  5.72205e-06|  0.00%|
   865|         0|            0|            0|  0.00%|
   866|         0|            0|            0|  0.00%|
   867|         0|            0|            0|  0.00%|
   868|         0|            0|            0|  0.00%|
   869|         1|  5.48363e-06|  5.48363e-06|  0.00%|
   870|         1|  1.81198e-05|  1.81198e-05|  0.00%|
(call)|         1|  0.000288725|  0.000288725|  0.00%|# <frozen importlib._bootstrap_external>:536 _code_to_timestamp_pyc
   871|         1|  5.96046e-06|  5.96046e-06|  0.00%|
   872|         1|  2.07424e-05|  2.07424e-05|  0.00%|
(call)|         1|  0.000552654|  0.000552654|  0.00%|# <frozen importlib._bootstrap_external>:956 _cache_bytecode
   873|         1|  1.40667e-05|  1.40667e-05|  0.00%|
(call)|         1|   6.4373e-06|   6.4373e-06|  0.00%|# <frozen importlib._bootstrap>:222 _verbose_message
   874|         0|            0|            0|  0.00%|
   875|         0|            0|            0|  0.00%|
   876|         1|  5.00679e-06|  5.00679e-06|  0.00%|
   877|         0|            0|            0|  0.00%|
   878|         0|            0|            0|  0.00%|
   879|         0|            0|            0|  0.00%|
   880|         0|            0|            0|  0.00%|
   881|         0|            0|            0|  0.00%|
   882|         0|            0|            0|  0.00%|
   883|         0|            0|            0|  0.00%|
   884|      3527|   0.00921726|  2.61334e-06|  0.00%|
   885|         0|            0|            0|  0.00%|
   886|         0|            0|            0|  0.00%|
   887|      3527|    0.0146728|  4.16012e-06|  0.00%|
   888|      3527|    0.0132952|  3.76954e-06|  0.00%|
   889|         0|            0|            0|  0.00%|
   890|         0|            0|            0|  0.00%|
   891|         0|            0|            0|  0.00%|
   892|         0|            0|            0|  0.00%|
   893|         0|            0|            0|  0.00%|
   894|        18|  4.36306e-05|  2.42392e-06|  0.00%|
   895|        18|  7.48634e-05|  4.15908e-06|  0.00%|
   896|         0|            0|            0|  0.00%|
   897|         0|            0|            0|  0.00%|
   898|         0|            0|            0|  0.00%|
   899|         0|            0|            0|  0.00%|
   900|         0|            0|            0|  0.00%|
   901|         0|            0|            0|  0.00%|
   902|         0|            0|            0|  0.00%|
   903|         0|            0|            0|  0.00%|
   904|         0|            0|            0|  0.00%|
   905|         0|            0|            0|  0.00%|
   906|         0|            0|            0|  0.00%|
   907|         0|            0|            0|  0.00%|
   908|         0|            0|            0|  0.00%|
   909|      2856|     0.007411|  2.59489e-06|  0.00%|
   910|         0|            0|            0|  0.00%|
   911|         0|            0|            0|  0.00%|
   912|      2856|    0.0102277|  3.58112e-06|  0.00%|
   913|         0|            0|            0|  0.00%|
   914|      2871|   0.00874257|  3.04513e-06|  0.00%|
   915|         0|            0|            0|  0.00%|
   916|      2871|      1.81533|    0.0006323|  0.38%|
   917|      2871|      13.5583|   0.00472249|  2.85%|
   918|         0|            0|            0|  0.00%|
   919|         0|            0|            0|  0.00%|
   920|         0|            0|            0|  0.00%|
   921|         1|  2.86102e-06|  2.86102e-06|  0.00%|
   922|         0|            0|            0|  0.00%|
   923|         1|  1.40667e-05|  1.40667e-05|  0.00%|
(call)|         1|  8.58307e-05|  8.58307e-05|  0.00%|# <frozen importlib._bootstrap_external>:711 is_package
   924|         1|  4.29153e-06|  4.29153e-06|  0.00%|
   925|         0|            0|            0|  0.00%|
   926|         0|            0|            0|  0.00%|
   927|         0|            0|            0|  0.00%|
   928|         0|            0|            0|  0.00%|
   929|         0|            0|            0|  0.00%|
   930|         0|            0|            0|  0.00%|
   931|         1|   3.8147e-06|   3.8147e-06|  0.00%|
   932|         1|  1.45435e-05|  1.45435e-05|  0.00%|
(call)|         1|  0.000139952|  0.000139952|  0.00%|# <frozen importlib._bootstrap_external>:937 is_resource
   933|         0|            0|            0|  0.00%|
   934|         1|  1.88351e-05|  1.88351e-05|  0.00%|
(call)|         1|  1.83582e-05|  1.83582e-05|  0.00%|# <frozen importlib._bootstrap_external>:62 _path_split
(call)|         1|  3.79086e-05|  3.79086e-05|  0.00%|# <frozen importlib._bootstrap_external>:56 _path_join
   935|         1|  4.52995e-06|  4.52995e-06|  0.00%|
   936|         0|            0|            0|  0.00%|
   937|         1|  3.09944e-06|  3.09944e-06|  0.00%|
   938|         1|  4.52995e-06|  4.52995e-06|  0.00%|
   939|         0|            0|            0|  0.00%|
   940|         1|  1.93119e-05|  1.93119e-05|  0.00%|
(call)|         1|   1.4782e-05|   1.4782e-05|  0.00%|# <frozen importlib._bootstrap_external>:62 _path_split
(call)|         1|  3.76701e-05|  3.76701e-05|  0.00%|# <frozen importlib._bootstrap_external>:56 _path_join
   941|         1|  1.16825e-05|  1.16825e-05|  0.00%|
(call)|         1|  4.88758e-05|  4.88758e-05|  0.00%|# <frozen importlib._bootstrap_external>:93 _path_isfile
   942|         0|            0|            0|  0.00%|
   943|         0|            0|            0|  0.00%|
   944|         0|            0|            0|  0.00%|
   945|         0|            0|            0|  0.00%|
   946|         0|            0|            0|  0.00%|
   947|         0|            0|            0|  0.00%|
   948|         0|            0|            0|  0.00%|
   949|         0|            0|            0|  0.00%|
   950|         0|            0|            0|  0.00%|
   951|      2855|   0.00894141|  3.13184e-06|  0.00%|
   952|         0|            0|            0|  0.00%|
   953|      2855|    0.0330989|  1.15933e-05|  0.01%|
(call)|      2855|    0.0388587|  1.36107e-05|  0.01%|# <frozen importlib._bootstrap_external>:74 _path_stat
   954|      2855|    0.0121486|  4.25521e-06|  0.00%|
   955|         0|            0|            0|  0.00%|
   956|         1|  5.48363e-06|  5.48363e-06|  0.00%|
   957|         0|            0|            0|  0.00%|
   958|         1|  1.35899e-05|  1.35899e-05|  0.00%|
(call)|         1|  5.19753e-05|  5.19753e-05|  0.00%|# <frozen importlib._bootstrap_external>:381 _calc_mode
   959|         1|  1.71661e-05|  1.71661e-05|  0.00%|
(call)|         1|  0.000464439|  0.000464439|  0.00%|# <frozen importlib._bootstrap_external>:961 set_data
   960|         0|            0|            0|  0.00%|
   961|         1|  8.82149e-06|  8.82149e-06|  0.00%|
   962|         0|            0|            0|  0.00%|
   963|         1|  1.43051e-05|  1.43051e-05|  0.00%|
(call)|         1|  1.81198e-05|  1.81198e-05|  0.00%|# <frozen importlib._bootstrap_external>:62 _path_split
   964|         1|  5.48363e-06|  5.48363e-06|  0.00%|
   965|         0|            0|            0|  0.00%|
   966|         1|  2.52724e-05|  2.52724e-05|  0.00%|
(call)|         1|  5.26905e-05|  5.26905e-05|  0.00%|# <frozen importlib._bootstrap_external>:98 _path_isdir
   967|         0|            0|            0|  0.00%|
   968|         0|            0|            0|  0.00%|
   969|         0|            0|            0|  0.00%|
   970|         1|  7.86781e-06|  7.86781e-06|  0.00%|
   971|         0|            0|            0|  0.00%|
   972|         0|            0|            0|  0.00%|
   973|         0|            0|            0|  0.00%|
   974|         0|            0|            0|  0.00%|
   975|         0|            0|            0|  0.00%|
   976|         0|            0|            0|  0.00%|
   977|         0|            0|            0|  0.00%|
   978|         0|            0|            0|  0.00%|
   979|         0|            0|            0|  0.00%|
   980|         0|            0|            0|  0.00%|
   981|         0|            0|            0|  0.00%|
   982|         0|            0|            0|  0.00%|
   983|         1|  5.00679e-06|  5.00679e-06|  0.00%|
   984|         1|  2.55108e-05|  2.55108e-05|  0.00%|
(call)|         1|  0.000277758|  0.000277758|  0.00%|# <frozen importlib._bootstrap_external>:105 _write_atomic
   985|         1|  1.45435e-05|  1.45435e-05|  0.00%|
(call)|         1|  9.05991e-06|  9.05991e-06|  0.00%|# <frozen importlib._bootstrap>:222 _verbose_message
   986|         0|            0|            0|  0.00%|
   987|         0|            0|            0|  0.00%|
   988|         0|            0|            0|  0.00%|
   989|         0|            0|            0|  0.00%|
   990|         0|            0|            0|  0.00%|
   991|         0|            0|            0|  0.00%|
   992|         0|            0|            0|  0.00%|
   993|         0|            0|            0|  0.00%|
   994|         0|            0|            0|  0.00%|
   995|         0|            0|            0|  0.00%|
   996|         0|            0|            0|  0.00%|
   997|         0|            0|            0|  0.00%|
   998|         0|            0|            0|  0.00%|
   999|         0|            0|            0|  0.00%|
  1000|         0|            0|            0|  0.00%|
  1001|         0|            0|            0|  0.00%|
  1002|         0|            0|            0|  0.00%|
  1003|         0|            0|            0|  0.00%|
  1004|         0|            0|            0|  0.00%|
  1005|         0|            0|            0|  0.00%|
  1006|         0|            0|            0|  0.00%|
  1007|         0|            0|            0|  0.00%|
  1008|         0|            0|            0|  0.00%|
  1009|         0|            0|            0|  0.00%|
  1010|         0|            0|            0|  0.00%|
  1011|         0|            0|            0|  0.00%|
  1012|         0|            0|            0|  0.00%|
  1013|         0|            0|            0|  0.00%|
  1014|         0|            0|            0|  0.00%|
  1015|         0|            0|            0|  0.00%|
  1016|         0|            0|            0|  0.00%|
  1017|         0|            0|            0|  0.00%|
  1018|         0|            0|            0|  0.00%|
  1019|         0|            0|            0|  0.00%|
  1020|         0|            0|            0|  0.00%|
  1021|         0|            0|            0|  0.00%|
  1022|         0|            0|            0|  0.00%|
  1023|         0|            0|            0|  0.00%|
  1024|         0|            0|            0|  0.00%|
  1025|         0|            0|            0|  0.00%|
  1026|         0|            0|            0|  0.00%|
  1027|         0|            0|            0|  0.00%|
  1028|         0|            0|            0|  0.00%|
  1029|       216|  0.000740051|  3.42616e-06|  0.00%|
  1030|       216|   0.00109315|  5.06088e-06|  0.00%|
  1031|       216|  0.000967741|  4.48028e-06|  0.00%|
  1032|         0|            0|            0|  0.00%|
  1033|         0|            0|            0|  0.00%|
  1034|         0|            0|            0|  0.00%|
  1035|         0|            0|            0|  0.00%|
  1036|         0|            0|            0|  0.00%|
  1037|         0|            0|            0|  0.00%|
  1038|         0|            0|            0|  0.00%|
  1039|         0|            0|            0|  0.00%|
  1040|       215|  0.000631094|  2.93532e-06|  0.00%|
  1041|         0|            0|            0|  0.00%|
  1042|       215|  0.000916719|  4.26381e-06|  0.00%|
  1043|       215|   0.00501704|  2.33351e-05|  0.00%|
(call)|       215|      13.6781|    0.0636189|  2.87%|# <frozen importlib._bootstrap>:211 _call_with_frames_removed
  1044|       215|   0.00120664|  5.61226e-06|  0.00%|
  1045|       215|   0.00307155|  1.42863e-05|  0.00%|
(call)|       215|   0.00204515|  9.51235e-06|  0.00%|# <frozen importlib._bootstrap>:222 _verbose_message
  1046|       215|  0.000884771|  4.11522e-06|  0.00%|
  1047|         0|            0|            0|  0.00%|
  1048|       215|  0.000687599|  3.19814e-06|  0.00%|
  1049|         0|            0|            0|  0.00%|
  1050|       215|   0.00328994|   1.5302e-05|  0.00%|
(call)|       215|      1.15755|   0.00538396|  0.24%|# <frozen importlib._bootstrap>:211 _call_with_frames_removed
  1051|       215|  0.000946283|  4.40132e-06|  0.00%|
  1052|       215|   0.00255036|  1.18622e-05|  0.00%|
(call)|       215|   0.00160575|   7.4686e-06|  0.00%|# <frozen importlib._bootstrap>:222 _verbose_message
  1053|         0|            0|            0|  0.00%|
  1054|         0|            0|            0|  0.00%|
  1055|         0|            0|            0|  0.00%|
  1056|         0|            0|            0|  0.00%|
  1057|         0|            0|            0|  0.00%|
  1058|         0|            0|            0|  0.00%|
  1059|         0|            0|            0|  0.00%|
  1060|         0|            0|            0|  0.00%|
  1061|         0|            0|            0|  0.00%|
  1062|         0|            0|            0|  0.00%|
  1063|         0|            0|            0|  0.00%|
  1064|         0|            0|            0|  0.00%|
  1065|         0|            0|            0|  0.00%|
  1066|         0|            0|            0|  0.00%|
  1067|         0|            0|            0|  0.00%|
  1068|         0|            0|            0|  0.00%|
  1069|         0|            0|            0|  0.00%|
  1070|         0|            0|            0|  0.00%|
  1071|         0|            0|            0|  0.00%|
  1072|         0|            0|            0|  0.00%|
  1073|         0|            0|            0|  0.00%|
  1074|         0|            0|            0|  0.00%|
  1075|         0|            0|            0|  0.00%|
  1076|         0|            0|            0|  0.00%|
  1077|         0|            0|            0|  0.00%|
  1078|         0|            0|            0|  0.00%|
  1079|         0|            0|            0|  0.00%|
  1080|         0|            0|            0|  0.00%|
  1081|         1|  4.52995e-06|  4.52995e-06|  0.00%|
  1082|         1|  5.48363e-06|  5.48363e-06|  0.00%|
  1083|         1|  5.72205e-06|  5.72205e-06|  0.00%|
  1084|         1|   2.6226e-05|   2.6226e-05|  0.00%|
(call)|         1|  4.02927e-05|  4.02927e-05|  0.00%|# <frozen importlib._bootstrap_external>:1097 _get_parent_path
  1085|         1|  5.72205e-06|  5.72205e-06|  0.00%|
  1086|         0|            0|            0|  0.00%|
  1087|        18|  5.60284e-05|  3.11269e-06|  0.00%|
  1088|         0|            0|            0|  0.00%|
  1089|        18|  8.53539e-05|  4.74188e-06|  0.00%|
  1090|        18|  7.10487e-05|  3.94715e-06|  0.00%|
  1091|         0|            0|            0|  0.00%|
  1092|        18|  6.58035e-05|  3.65575e-06|  0.00%|
  1093|         0|            0|            0|  0.00%|
  1094|         0|            0|            0|  0.00%|
  1095|         0|            0|            0|  0.00%|
  1096|         0|            0|            0|  0.00%|
  1097|        18|   6.8903e-05|  3.82794e-06|  0.00%|
  1098|        18|  0.000207663|  1.15368e-05|  0.00%|
(call)|        18|  0.000278234|  1.54575e-05|  0.00%|# <frozen importlib._bootstrap_external>:1087 _find_parent_path_names
  1099|        18|  8.36849e-05|  4.64916e-06|  0.00%|
  1100|         0|            0|            0|  0.00%|
  1101|        17|   5.8651e-05|  3.45006e-06|  0.00%|
  1102|         0|            0|            0|  0.00%|
  1103|        17|  0.000226498|  1.33234e-05|  0.00%|
(call)|        17|  0.000598192|  3.51878e-05|  0.00%|# <frozen importlib._bootstrap_external>:1097 _get_parent_path
  1104|        17|  8.86917e-05|  5.21716e-06|  0.00%|
  1105|         2|  3.98159e-05|   1.9908e-05|  0.00%|
(call)|         2|   0.00809145|   0.00404572|  0.00%|# <frozen importlib._bootstrap_external>:1240 _get_spec
  1106|         0|            0|            0|  0.00%|
  1107|         0|            0|            0|  0.00%|
  1108|         2|  1.00136e-05|  5.00679e-06|  0.00%|
  1109|         2|  2.38419e-05|  1.19209e-05|  0.00%|
  1110|         2|  1.66893e-05|  8.34465e-06|  0.00%|
  1111|         2|  2.43187e-05|  1.21593e-05|  0.00%|
  1112|        17|  6.29425e-05|   3.7025e-06|  0.00%|
  1113|         0|            0|            0|  0.00%|
  1114|        17|  6.65188e-05|  3.91287e-06|  0.00%|
  1115|        17|  0.000264406|  1.55533e-05|  0.00%|
(call)|        17|    0.0092411|  0.000543594|  0.00%|# <frozen importlib._bootstrap_external>:1101 _recalculate
  1116|         0|            0|            0|  0.00%|
  1117|         0|            0|            0|  0.00%|
  1118|         0|            0|            0|  0.00%|
  1119|         0|            0|            0|  0.00%|
  1120|         0|            0|            0|  0.00%|
  1121|         0|            0|            0|  0.00%|
  1122|         0|            0|            0|  0.00%|
  1123|         0|            0|            0|  0.00%|
  1124|         0|            0|            0|  0.00%|
  1125|         0|            0|            0|  0.00%|
  1126|         0|            0|            0|  0.00%|
  1127|         0|            0|            0|  0.00%|
  1128|         0|            0|            0|  0.00%|
  1129|         0|            0|            0|  0.00%|
  1130|         0|            0|            0|  0.00%|
  1131|         0|            0|            0|  0.00%|
  1132|         0|            0|            0|  0.00%|
  1133|         0|            0|            0|  0.00%|
  1134|         0|            0|            0|  0.00%|
  1135|         0|            0|            0|  0.00%|
  1136|         0|            0|            0|  0.00%|
  1137|         0|            0|            0|  0.00%|
  1138|         0|            0|            0|  0.00%|
  1139|         0|            0|            0|  0.00%|
  1140|         0|            0|            0|  0.00%|
  1141|         0|            0|            0|  0.00%|
  1142|         0|            0|            0|  0.00%|
  1143|         0|            0|            0|  0.00%|
  1144|         0|            0|            0|  0.00%|
  1145|         0|            0|            0|  0.00%|
  1146|         0|            0|            0|  0.00%|
  1147|         0|            0|            0|  0.00%|
  1148|         0|            0|            0|  0.00%|
  1149|         0|            0|            0|  0.00%|
  1150|         0|            0|            0|  0.00%|
  1151|         0|            0|            0|  0.00%|
  1152|         0|            0|            0|  0.00%|
  1153|         0|            0|            0|  0.00%|
  1154|         0|            0|            0|  0.00%|
  1155|         0|            0|            0|  0.00%|
  1156|         0|            0|            0|  0.00%|
  1157|         0|            0|            0|  0.00%|
  1158|         0|            0|            0|  0.00%|
  1159|         1|  4.29153e-06|  4.29153e-06|  0.00%|
  1160|         1|  4.76837e-06|  4.76837e-06|  0.00%|
  1161|         0|            0|            0|  0.00%|
  1162|         0|            0|            0|  0.00%|
  1163|         0|            0|            0|  0.00%|
  1164|         0|            0|            0|  0.00%|
  1165|         0|            0|            0|  0.00%|
  1166|         0|            0|            0|  0.00%|
  1167|         0|            0|            0|  0.00%|
  1168|         0|            0|            0|  0.00%|
  1169|         0|            0|            0|  0.00%|
  1170|         0|            0|            0|  0.00%|
  1171|         0|            0|            0|  0.00%|
  1172|         0|            0|            0|  0.00%|
  1173|         0|            0|            0|  0.00%|
  1174|         0|            0|            0|  0.00%|
  1175|         0|            0|            0|  0.00%|
  1176|         0|            0|            0|  0.00%|
  1177|         0|            0|            0|  0.00%|
  1178|         0|            0|            0|  0.00%|
  1179|         0|            0|            0|  0.00%|
  1180|         0|            0|            0|  0.00%|
  1181|         0|            0|            0|  0.00%|
  1182|         0|            0|            0|  0.00%|
  1183|         0|            0|            0|  0.00%|
  1184|         0|            0|            0|  0.00%|
  1185|         0|            0|            0|  0.00%|
  1186|         0|            0|            0|  0.00%|
  1187|         0|            0|            0|  0.00%|
  1188|         0|            0|            0|  0.00%|
  1189|         0|            0|            0|  0.00%|
  1190|       614|   0.00211835|  3.45008e-06|  0.00%|
  1191|         0|            0|            0|  0.00%|
  1192|         0|            0|            0|  0.00%|
  1193|       614|   0.00279808|  4.55713e-06|  0.00%|
  1194|         0|            0|            0|  0.00%|
  1195|      1230|   0.00480294|  3.90483e-06|  0.00%|
  1196|      1228|   0.00449157|  3.65763e-06|  0.00%|
  1197|      1228|    0.0167549|   1.3644e-05|  0.00%|
(call)|       614|     0.156205|  0.000254406|  0.03%|# <frozen importlib._bootstrap_external>:1445 path_hook_for_FileFinder
  1198|       616|   0.00304031|  4.93557e-06|  0.00%|
  1199|       616|   0.00296664|  4.81598e-06|  0.00%|
  1200|         0|            0|            0|  0.00%|
  1201|         2|   6.4373e-06|  3.21865e-06|  0.00%|
  1202|         0|            0|            0|  0.00%|
  1203|      4121|    0.0131407|  3.18871e-06|  0.00%|
  1204|         0|            0|            0|  0.00%|
  1205|         0|            0|            0|  0.00%|
  1206|         0|            0|            0|  0.00%|
  1207|         0|            0|            0|  0.00%|
  1208|         0|            0|            0|  0.00%|
  1209|         0|            0|            0|  0.00%|
  1210|         0|            0|            0|  0.00%|
  1211|      4121|     0.016505|   4.0051e-06|  0.00%|
  1212|       180|  0.000631809|  3.51005e-06|  0.00%|
  1213|       180|   0.00208545|  1.15858e-05|  0.00%|
  1214|         0|            0|            0|  0.00%|
  1215|         0|            0|            0|  0.00%|
  1216|         0|            0|            0|  0.00%|
  1217|         0|            0|            0|  0.00%|
  1218|      4121|    0.0151594|  3.67857e-06|  0.00%|
  1219|      4121|    0.0186431|  4.52394e-06|  0.00%|
  1220|       614|   0.00272369|  4.43598e-06|  0.00%|
  1221|       614|    0.0075767|  1.23399e-05|  0.00%|
(call)|       614|     0.193184|  0.000314633|  0.04%|# <frozen importlib._bootstrap_external>:1190 _path_hooks
  1222|       614|   0.00298667|  4.86428e-06|  0.00%|
  1223|      4121|    0.0144627|  3.50951e-06|  0.00%|
  1224|         0|            0|            0|  0.00%|
  1225|         0|            0|            0|  0.00%|
  1226|         0|            0|            0|  0.00%|
  1227|         0|            0|            0|  0.00%|
  1228|         0|            0|            0|  0.00%|
  1229|         0|            0|            0|  0.00%|
  1230|         0|            0|            0|  0.00%|
  1231|         0|            0|            0|  0.00%|
  1232|         0|            0|            0|  0.00%|
  1233|         0|            0|            0|  0.00%|
  1234|         0|            0|            0|  0.00%|
  1235|         0|            0|            0|  0.00%|
  1236|         0|            0|            0|  0.00%|
  1237|         0|            0|            0|  0.00%|
  1238|         0|            0|            0|  0.00%|
  1239|         0|            0|            0|  0.00%|
  1240|      3200|    0.0136034|  4.25108e-06|  0.00%|
  1241|         0|            0|            0|  0.00%|
  1242|         0|            0|            0|  0.00%|
  1243|         0|            0|            0|  0.00%|
  1244|         0|            0|            0|  0.00%|
  1245|      3200|    0.0157452|  4.92036e-06|  0.00%|
  1246|      4250|    0.0221534|  5.21256e-06|  0.00%|
(call)|        14|   0.00516295|  0.000368782|  0.00%|# <frozen importlib._bootstrap_external>:1114 __iter__
  1247|      4121|    0.0203407|  4.93586e-06|  0.00%|
  1248|         0|            0|            0|  0.00%|
  1249|      4121|    0.0484684|  1.17613e-05|  0.01%|
(call)|      4121|       0.2871|  6.96675e-05|  0.06%|# <frozen importlib._bootstrap_external>:1203 _path_importer_cache
  1250|      4121|    0.0174127|  4.22535e-06|  0.00%|
  1251|      3911|     0.018939|   4.8425e-06|  0.00%|
  1252|      3911|    0.0574307|  1.46844e-05|  0.01%|
(call)|      3911|      5.69896|   0.00145716|  1.20%|# <frozen importlib._bootstrap_external>:1356 find_spec
  1253|         0|            0|            0|  0.00%|
  1254|         0|            0|            0|  0.00%|
  1255|      3911|    0.0172181|  4.40248e-06|  0.00%|
  1256|       837|   0.00322914|  3.85799e-06|  0.00%|
  1257|      3074|    0.0128279|  4.17302e-06|  0.00%|
  1258|      3071|    0.0124192|  4.04403e-06|  0.00%|
  1259|         3|   1.5974e-05|  5.32468e-06|  0.00%|
  1260|         3|   1.5974e-05|  5.32468e-06|  0.00%|
  1261|         0|            0|            0|  0.00%|
  1262|         0|            0|            0|  0.00%|
  1263|         0|            0|            0|  0.00%|
  1264|         0|            0|            0|  0.00%|
  1265|         0|            0|            0|  0.00%|
  1266|         3|  1.64509e-05|  5.48363e-06|  0.00%|
  1267|         0|            0|            0|  0.00%|
  1268|       129|   0.00172114|  1.33422e-05|  0.00%|
(call)|       129|   0.00392365|  3.04159e-05|  0.00%|# <frozen importlib._bootstrap>:369 __init__
  1269|       129|  0.000642776|  4.98276e-06|  0.00%|
  1270|       129|  0.000535011|  4.14737e-06|  0.00%|
  1271|         0|            0|            0|  0.00%|
  1272|      3198|   0.00962853|   3.0108e-06|  0.00%|
  1273|         0|            0|            0|  0.00%|
  1274|         0|            0|            0|  0.00%|
  1275|         0|            0|            0|  0.00%|
  1276|         0|            0|            0|  0.00%|
  1277|         0|            0|            0|  0.00%|
  1278|      3198|    0.0135865|  4.24844e-06|  0.00%|
  1279|       178|  0.000750542|  4.21653e-06|  0.00%|
  1280|      3198|    0.0414412|  1.29585e-05|  0.01%|
(call)|      3198|      6.24979|   0.00195428|  1.31%|# <frozen importlib._bootstrap_external>:1240 _get_spec
  1281|      3198|    0.0130782|   4.0895e-06|  0.00%|
  1282|         0|            0|            0|  0.00%|
  1283|      3198|    0.0125968|  3.93898e-06|  0.00%|
  1284|       127|  0.000505447|   3.9799e-06|  0.00%|
  1285|       127|  0.000509262|  4.00994e-06|  0.00%|
  1286|         0|            0|            0|  0.00%|
  1287|         0|            0|            0|  0.00%|
  1288|         1|   3.8147e-06|   3.8147e-06|  0.00%|
  1289|         1|  1.90735e-05|  1.90735e-05|  0.00%|
(call)|         1|  8.79765e-05|  8.79765e-05|  0.00%|# <frozen importlib._bootstrap_external>:1081 __init__
  1290|         1|  4.52995e-06|  4.52995e-06|  0.00%|
  1291|         0|            0|            0|  0.00%|
  1292|       126|  0.000463963|  3.68224e-06|  0.00%|
  1293|         0|            0|            0|  0.00%|
  1294|      3071|     0.011668|   3.7994e-06|  0.00%|
  1295|         0|            0|            0|  0.00%|
  1296|         0|            0|            0|  0.00%|
  1297|         0|            0|            0|  0.00%|
  1298|         0|            0|            0|  0.00%|
  1299|         0|            0|            0|  0.00%|
  1300|         0|            0|            0|  0.00%|
  1301|         0|            0|            0|  0.00%|
  1302|         0|            0|            0|  0.00%|
  1303|         0|            0|            0|  0.00%|
  1304|         0|            0|            0|  0.00%|
  1305|         0|            0|            0|  0.00%|
  1306|         0|            0|            0|  0.00%|
  1307|         0|            0|            0|  0.00%|
  1308|         0|            0|            0|  0.00%|
  1309|         0|            0|            0|  0.00%|
  1310|         0|            0|            0|  0.00%|
  1311|         0|            0|            0|  0.00%|
  1312|         0|            0|            0|  0.00%|
  1313|         0|            0|            0|  0.00%|
  1314|         0|            0|            0|  0.00%|
  1315|         0|            0|            0|  0.00%|
  1316|         0|            0|            0|  0.00%|
  1317|         0|            0|            0|  0.00%|
  1318|         0|            0|            0|  0.00%|
  1319|       615|   0.00292206|  4.75131e-06|  0.00%|
  1320|         0|            0|            0|  0.00%|
  1321|         0|            0|            0|  0.00%|
  1322|         0|            0|            0|  0.00%|
  1323|       615|   0.00297046|  4.83001e-06|  0.00%|
  1324|      2456|    0.0107846|  4.39113e-06|  0.00%|
  1325|     11665|    0.0741413|  6.35587e-06|  0.02%|
(call)|      4912|    0.0305531|  6.22009e-06|  0.01%|# <frozen importlib._bootstrap_external>:1325 <genexpr>
  1326|       615|   0.00257254|  4.18299e-06|  0.00%|
  1327|         0|            0|            0|  0.00%|
  1328|       615|   0.00259566|  4.22059e-06|  0.00%|
  1329|       615|   0.00233626|   3.7988e-06|  0.00%|
  1330|       615|   0.00277042|  4.50475e-06|  0.00%|
  1331|       615|   0.00268412|  4.36442e-06|  0.00%|
  1332|         0|            0|            0|  0.00%|
  1333|         0|            0|            0|  0.00%|
  1334|         0|            0|            0|  0.00%|
  1335|         0|            0|            0|  0.00%|
  1336|         0|            0|            0|  0.00%|
  1337|         0|            0|            0|  0.00%|
  1338|         0|            0|            0|  0.00%|
  1339|        25|  7.34329e-05|  2.93732e-06|  0.00%|
  1340|         0|            0|            0|  0.00%|
  1341|         0|            0|            0|  0.00%|
  1342|         0|            0|            0|  0.00%|
  1343|         0|            0|            0|  0.00%|
  1344|         0|            0|            0|  0.00%|
  1345|         0|            0|            0|  0.00%|
  1346|        25|  0.000333309|  1.33324e-05|  0.00%|
(call)|        25|    0.0122819|  0.000491276|  0.00%|# <frozen importlib._bootstrap_external>:1356 find_spec
  1347|        25|  8.89301e-05|  3.55721e-06|  0.00%|
  1348|        25|  8.67844e-05|  3.47137e-06|  0.00%|
  1349|         0|            0|            0|  0.00%|
  1350|         0|            0|            0|  0.00%|
  1351|      3743|    0.0129056|  3.44793e-06|  0.00%|
  1352|      3743|    0.0447865|  1.19654e-05|  0.01%|
(call)|      3527|    0.0371852|   1.0543e-05|  0.01%|# <frozen importlib._bootstrap_external>:884 __init__
(call)|       216|   0.00280094|  1.29673e-05|  0.00%|# <frozen importlib._bootstrap_external>:1029 __init__
  1353|      3743|    0.0145724|  3.89324e-06|  0.00%|
  1354|      3743|    0.0471485|  1.25964e-05|  0.01%|
(call)|      3743|     0.323119|  8.63263e-05|  0.07%|# <frozen importlib._bootstrap_external>:574 spec_from_file_location
  1355|         0|            0|            0|  0.00%|
  1356|      5075|    0.0226965|  4.47222e-06|  0.00%|
  1357|         0|            0|            0|  0.00%|
  1358|         0|            0|            0|  0.00%|
  1359|         0|            0|            0|  0.00%|
  1360|         0|            0|            0|  0.00%|
  1361|      5075|    0.0270965|  5.33921e-06|  0.01%|
  1362|      5075|     0.029295|  5.77241e-06|  0.01%|
  1363|      5075|    0.0260975|  5.14237e-06|  0.01%|
  1364|      5075|    0.0747523|  1.47295e-05|  0.02%|
(call)|      5075|    0.0786564|  1.54988e-05|  0.02%|# <frozen importlib._bootstrap_external>:74 _path_stat
  1365|         0|            0|            0|  0.00%|
  1366|         0|            0|            0|  0.00%|
  1367|      5075|    0.0291836|  5.75047e-06|  0.01%|
  1368|       615|    0.0100484|  1.63388e-05|  0.00%|
(call)|       615|     0.106018|  0.000172387|  0.02%|# <frozen importlib._bootstrap_external>:1404 _fill_cache
  1369|       615|   0.00342369|  5.56698e-06|  0.00%|
  1370|         0|            0|            0|  0.00%|
  1371|      5075|    0.0620012|   1.2217e-05|  0.01%|
(call)|      5075|    0.0314579|   6.1986e-06|  0.01%|# <frozen importlib._bootstrap_external>:40 _relax_case
  1372|         0|            0|            0|  0.00%|
  1373|         0|            0|            0|  0.00%|
  1374|         0|            0|            0|  0.00%|
  1375|      5075|    0.0262141|  5.16534e-06|  0.01%|
  1376|      5075|     0.024586|  4.84452e-06|  0.01%|
  1377|         0|            0|            0|  0.00%|
  1378|      5075|    0.0265245|  5.22651e-06|  0.01%|
  1379|      2274|    0.0281284|  1.23696e-05|  0.01%|
(call)|      2274|    0.0869477|  3.82356e-05|  0.02%|# <frozen importlib._bootstrap_external>:56 _path_join
  1380|     10000|    0.0486536|  4.86536e-06|  0.01%|
  1381|      9548|    0.0437987|  4.58721e-06|  0.01%|
  1382|      9548|     0.109587|  1.14775e-05|  0.02%|
(call)|      9548|     0.340494|  3.56613e-05|  0.07%|# <frozen importlib._bootstrap_external>:56 _path_join
  1383|      9548|     0.109157|  1.14325e-05|  0.02%|
(call)|      9548|      3.56505|  0.000373382|  0.75%|# <frozen importlib._bootstrap_external>:93 _path_isfile
  1384|      1822|      0.02475|   1.3584e-05|  0.01%|
(call)|      1822|     0.231837|  0.000127243|  0.05%|# <frozen importlib._bootstrap_external>:1351 _get_spec
  1385|         0|            0|            0|  0.00%|
  1386|         0|            0|            0|  0.00%|
  1387|         0|            0|            0|  0.00%|
  1388|       452|     0.005059|  1.11925e-05|  0.00%|
(call)|       452|    0.0197968|  4.37983e-05|  0.00%|# <frozen importlib._bootstrap_external>:98 _path_isdir
  1389|         0|            0|            0|  0.00%|
  1390|     15037|    0.0696328|  4.63076e-06|  0.01%|
  1391|     13705|     0.164355|  1.19924e-05|  0.03%|
(call)|     13705|     0.491303|  3.58485e-05|  0.10%|# <frozen importlib._bootstrap_external>:56 _path_join
  1392|     13705|      0.16299|  1.18927e-05|  0.03%|
(call)|     13705|    0.0905879|  6.60984e-06|  0.02%|# <frozen importlib._bootstrap>:222 _verbose_message
  1393|     13705|    0.0668452|  4.87743e-06|  0.01%|
  1394|      1921|    0.0235386|  1.22533e-05|  0.00%|
(call)|      1921|      0.14123|  7.35189e-05|  0.03%|# <frozen importlib._bootstrap_external>:93 _path_isfile
  1395|      1921|    0.0102258|  5.32315e-06|  0.00%|
  1396|      1921|    0.0263326|  1.37078e-05|  0.01%|
(call)|      1921|     0.250681|  0.000130495|  0.05%|# <frozen importlib._bootstrap_external>:1351 _get_spec
  1397|      1332|   0.00565815|  4.24786e-06|  0.00%|
  1398|       444|   0.00506306|  1.14033e-05|  0.00%|
(call)|       444|   0.00272369|  6.13445e-06|  0.00%|# <frozen importlib._bootstrap>:222 _verbose_message
  1399|       444|   0.00569391|  1.28241e-05|  0.00%|
(call)|       444|    0.0128503|  2.89421e-05|  0.00%|# <frozen importlib._bootstrap>:369 __init__
  1400|       444|   0.00199366|  4.49022e-06|  0.00%|
  1401|       444|    0.0018754|  4.22388e-06|  0.00%|
  1402|       888|   0.00383425|  4.31785e-06|  0.00%|
  1403|         0|            0|            0|  0.00%|
  1404|       615|   0.00291395|  4.73813e-06|  0.00%|
  1405|         0|            0|            0|  0.00%|
  1406|       615|   0.00314689|  5.11689e-06|  0.00%|
  1407|       615|   0.00286603|  4.66021e-06|  0.00%|
  1408|       615|    0.0832062|  0.000135295|  0.02%|
  1409|         0|            0|            0|  0.00%|
  1410|         0|            0|            0|  0.00%|
  1411|         0|            0|            0|  0.00%|
  1412|         0|            0|            0|  0.00%|
  1413|         0|            0|            0|  0.00%|
  1414|         0|            0|            0|  0.00%|
  1415|       615|   0.00558043|  9.07386e-06|  0.00%|
  1416|       615|   0.00477409|  7.76275e-06|  0.00%|
  1417|         0|            0|            0|  0.00%|
  1418|         0|            0|            0|  0.00%|
  1419|         0|            0|            0|  0.00%|
  1420|         0|            0|            0|  0.00%|
  1421|         0|            0|            0|  0.00%|
  1422|         0|            0|            0|  0.00%|
  1423|         0|            0|            0|  0.00%|
  1424|         0|            0|            0|  0.00%|
  1425|         0|            0|            0|  0.00%|
  1426|         0|            0|            0|  0.00%|
  1427|         0|            0|            0|  0.00%|
  1428|         0|            0|            0|  0.00%|
  1429|         0|            0|            0|  0.00%|
  1430|         0|            0|            0|  0.00%|
  1431|         0|            0|            0|  0.00%|
  1432|       615|   0.00353074|  5.74104e-06|  0.00%|
  1433|         0|            0|            0|  0.00%|
  1434|         0|            0|            0|  0.00%|
  1435|         0|            0|            0|  0.00%|
  1436|         0|            0|            0|  0.00%|
  1437|         0|            0|            0|  0.00%|
  1438|         0|            0|            0|  0.00%|
  1439|         0|            0|            0|  0.00%|
  1440|         0|            0|            0|  0.00%|
  1441|         0|            0|            0|  0.00%|
  1442|         0|            0|            0|  0.00%|
  1443|         0|            0|            0|  0.00%|
  1444|         0|            0|            0|  0.00%|
  1445|       615|   0.00225639|  3.66893e-06|  0.00%|
  1446|         0|            0|            0|  0.00%|
  1447|       615|   0.00704622|  1.14573e-05|  0.00%|
(call)|       615|    0.0344806|   5.6066e-05|  0.01%|# <frozen importlib._bootstrap_external>:98 _path_isdir
  1448|         2|  1.33514e-05|  6.67572e-06|  0.00%|
  1449|       613|   0.00915599|  1.49364e-05|  0.00%|
(call)|       613|     0.103545|  0.000168915|  0.02%|# <frozen importlib._bootstrap_external>:1319 __init__
File: /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py
File duration: 24.9873s (5.25%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  9.29832e-05|  4.64916e-05|  0.00%|import torch
     2|         1|  1.45435e-05|  1.45435e-05|  0.00%|import neptune
     3|         1|   2.5034e-05|   2.5034e-05|  0.00%|import numpy
     4|         1|   2.6226e-05|   2.6226e-05|  0.00%|import torch.nn.functional as F
     5|         1|  6.27041e-05|  6.27041e-05|  0.00%|from torch.distributions.utils import broadcast_all
(call)|         1|   3.6478e-05|   3.6478e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
     6|         1|  6.05583e-05|  6.05583e-05|  0.00%|from typing import Union, Callable, Optional, Tuple
(call)|         1|  2.43187e-05|  2.43187e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
     7|         1|  5.93662e-05|  5.93662e-05|  0.00%|from collections import OrderedDict
(call)|         1|  4.45843e-05|  4.45843e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
     8|         1|  6.86646e-05|  6.86646e-05|  0.00%|from torch.distributions.distribution import Distribution
(call)|         1|  2.28882e-05|  2.28882e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
     9|         1|  5.93662e-05|  5.93662e-05|  0.00%|from torch.distributions import constraints
(call)|         1|  4.31538e-05|  4.31538e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
    10|         0|            0|            0|  0.00%|
    11|         1|  5.88894e-05|  5.88894e-05|  0.00%|from MODULES.utilities import compute_average_in_box, compute_ranking, convert_to_box_list
(call)|         1|  2.28882e-05|  2.28882e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
    12|         1|  5.72205e-05|  5.72205e-05|  0.00%|from MODULES.utilities import pass_bernoulli
(call)|         1|  2.24113e-05|  2.24113e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
    13|         1|  0.000208139|  0.000208139|  0.00%|from MODULES.utilities_visualization import show_batch
(call)|         1|      17.3911|      17.3911|  3.65%|# <frozen importlib._bootstrap>:978 _find_and_load
(call)|         1|   4.8399e-05|   4.8399e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
    14|         1|  8.70228e-05|  8.70228e-05|  0.00%|from MODULES.namedtuple import DIST, MetricMiniBatch, BB
(call)|         1|  2.28882e-05|  2.28882e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
    15|         1|  6.34193e-05|  6.34193e-05|  0.00%|from MODULES.utilities_neptune import log_dict_metrics
(call)|         1|  3.67165e-05|  3.67165e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
    16|         0|            0|            0|  0.00%|
    17|        24|  0.000195265|  8.13603e-06|  0.00%|def are_broadcastable(a: torch.Tensor, b: torch.Tensor) -> bool:
    18|         0|            0|            0|  0.00%|    """ Return True if tensor are broadcastable to each other, False otherwise """
    19|       115|   0.00124931|  1.08636e-05|  0.00%|    return all((m == n) or (m == 1) or (n == 1) for m, n in zip(a.shape[::-1], b.shape[::-1]))
(call)|        46|  0.000471592|   1.0252e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:19 <genexpr>
    20|         0|            0|            0|  0.00%|
    21|         0|            0|            0|  0.00%|
    22|        49|  0.000365973|  7.46883e-06|  0.00%|def sample_and_kl_diagonal_normal(posterior_mu: torch.Tensor,
    23|         1|  2.00272e-05|  2.00272e-05|  0.00%|                                  posterior_std: torch.Tensor,
    24|         1|  1.97887e-05|  1.97887e-05|  0.00%|                                  prior_mu: torch.Tensor,
    25|         1|  1.90735e-05|  1.90735e-05|  0.00%|                                  prior_std: torch.Tensor,
    26|         1|  1.97887e-05|  1.97887e-05|  0.00%|                                  noisy_sampling: bool,
    27|         1|   2.6226e-05|   2.6226e-05|  0.00%|                                  sample_from_prior: bool) -> DIST:
    28|         0|            0|            0|  0.00%|
    29|        48|  0.000954628|  1.98881e-05|  0.00%|    post_mu, post_std, pr_mu, pr_std = broadcast_all(posterior_mu, posterior_std, prior_mu, prior_std)
(call)|        48|    0.0172689|  0.000359769|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/utils.py:7 broadcast_all
    30|        48|  0.000250578|  5.22037e-06|  0.00%|    if sample_from_prior:
    31|         0|            0|            0|  0.00%|        # working with the prior
    32|         2|  0.000176907|  8.84533e-05|  0.00%|        sample = pr_mu + pr_std * torch.randn_like(pr_mu) if noisy_sampling else pr_mu
    33|         2|  0.000109196|  5.45979e-05|  0.00%|        kl = torch.zeros_like(pr_mu)
    34|         0|            0|            0|  0.00%|    else:
    35|         0|            0|            0|  0.00%|        # working with the posterior
    36|        46|   0.00584888|   0.00012715|  0.00%|        sample = post_mu + post_std * torch.randn_like(post_mu) if noisy_sampling else post_mu
    37|        46|    0.0425732|  0.000925505|  0.01%|        tmp = (post_std + pr_std) * (post_std - pr_std) + (post_mu - pr_mu).pow(2)
    38|        46|   0.00875235|  0.000190268|  0.00%|        kl = tmp / (2 * pr_std * pr_std) - post_std.log() + pr_std.log()
    39|         0|            0|            0|  0.00%|
    40|        48|   0.00109744|  2.28633e-05|  0.00%|    return DIST(sample=sample, kl=kl)
(call)|        48|  0.000491142|  1.02321e-05|  0.00%|# <string>_115:1 __new__
    41|         0|            0|            0|  0.00%|
    42|         0|            0|            0|  0.00%|
    43|        25|  0.000329733|  1.31893e-05|  0.00%|def sample_and_kl_prob(logit_map: torch.Tensor,
    44|         1|  2.19345e-05|  2.19345e-05|  0.00%|                       similarity_kernel: torch.Tensor,
    45|         1|  1.93119e-05|  1.93119e-05|  0.00%|                       images: torch.Tensor,
    46|         1|  2.88486e-05|  2.88486e-05|  0.00%|                       background: torch.Tensor,
    47|         1|  2.36034e-05|  2.36034e-05|  0.00%|                       bounding_box_no_noise: BB,
    48|         1|  2.02656e-05|  2.02656e-05|  0.00%|                       prob_corr_factor: float,
    49|         1|  2.02656e-05|  2.02656e-05|  0.00%|                       noisy_sampling: bool,
    50|         1|  8.41618e-05|  8.41618e-05|  0.00%|                       sample_from_prior: bool) -> Tuple[DIST, torch.Tensor]:
(call)|         1|  0.000606537|  0.000606537|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:746 __getitem__
    51|         0|            0|            0|  0.00%|
    52|         0|            0|            0|  0.00%|    # Correction factor
    53|        24|  0.000174522|  7.27177e-06|  0.00%|    if sample_from_prior:
    54|         1|  1.90735e-05|  1.90735e-05|  0.00%|        with torch.no_grad():
(call)|         1|  1.33514e-05|  1.33514e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/grad_mode.py:65 __enter__
    55|         1|   3.0756e-05|   3.0756e-05|  0.00%|            batch_size = torch.Size([logit_map.shape[0]])
    56|         1|  1.78814e-05|  1.78814e-05|  0.00%|            s = similarity_kernel.requires_grad_(False)
    57|         1|  0.000165224|  0.000165224|  0.00%|            c_all = FiniteDPP(L=s).sample(sample_shape=batch_size).transpose(-1, -2).float()
(call)|         1|     0.114024|     0.114024|  0.02%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:166 __init__
(call)|         1|     0.178251|     0.178251|  0.04%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:211 sample
    58|         1|  6.10352e-05|  6.10352e-05|  0.00%|            kl = torch.zeros(logit_map.shape[0])
    59|         1|  6.50883e-05|  6.50883e-05|  0.00%|            q_all = torch.zeros_like(c_all).float()
(call)|         1|  3.69549e-05|  3.69549e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/grad_mode.py:69 __exit__
    60|         0|            0|            0|  0.00%|    else:
    61|         0|            0|            0|  0.00%|        # Work with posterior
    62|        23|  0.000431538|  1.87625e-05|  0.00%|        if (prob_corr_factor > 0) and (prob_corr_factor <= 1.0):
    63|        23|  0.000412703|  1.79436e-05|  0.00%|            with torch.no_grad():
(call)|        23|  0.000417948|  1.81716e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/grad_mode.py:65 __enter__
    64|        23|    0.0241849|   0.00105152|  0.01%|                av_intensity = compute_average_in_box((images - background).abs(), bounding_box_no_noise)
(call)|        23|     0.301733|    0.0131188|  0.06%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities.py:219 compute_average_in_box
    65|        23|  0.000354052|  1.53935e-05|  0.00%|                assert len(av_intensity.shape) == 2
    66|        23|  0.000315905|   1.3735e-05|  0.00%|                n_boxes_all, batch_size = av_intensity.shape
    67|        23|  0.000722408|  3.14091e-05|  0.00%|                ranking = compute_ranking(av_intensity)  # n_boxes_all, batch. It is in [0,n_box_all-1]
(call)|        23|    0.0403819|   0.00175574|  0.01%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities.py:205 compute_ranking
    68|        23|   0.00248885|  0.000108211|  0.00%|                tmp = ((ranking + 1).float() / (n_boxes_all + 1))
    69|        23|    0.0015285|  6.64566e-05|  0.00%|                q_approx = tmp.pow(10)
(call)|        23|  0.000963211|  4.18787e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/grad_mode.py:69 __exit__
    70|         0|            0|            0|  0.00%|
    71|        23|   0.00186706|  8.11763e-05|  0.00%|            q_uncorrected = torch.sigmoid(convert_to_box_list(logit_map).squeeze(-1))
(call)|        23|   0.00119281|  5.18612e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities.py:9 convert_to_box_list
    72|        23|    0.0463724|   0.00201619|  0.01%|            q_all = ((1 - prob_corr_factor) * q_uncorrected + prob_corr_factor * q_approx).clamp(min=1E-4, max=1 - 1E-4)
    73|        23|    0.0309417|   0.00134529|  0.01%|            log_q = torch.log(q_all)
    74|        23|      0.06551|   0.00284826|  0.01%|            log_one_minus_q = torch.log1p(-q_all)
    75|         0|            0|            0|  0.00%|        else:
    76|         0|            0|            0|  0.00%|            logit_reshaped = convert_to_box_list(logit_map).squeeze(-1)
    77|         0|            0|            0|  0.00%|            q_all = torch.sigmoid(logit_reshaped)
    78|         0|            0|            0|  0.00%|            log_q = F.logsigmoid(logit_reshaped)
    79|         0|            0|            0|  0.00%|            log_one_minus_q = F.logsigmoid(-logit_reshaped)
    80|         0|            0|            0|  0.00%|
    81|        23|  0.000726223|  3.15749e-05|  0.00%|        c_all = pass_bernoulli(prob=q_all, noisy_sampling=noisy_sampling)  # float variable which requires grad
(call)|        23|    0.0724237|   0.00314886|  0.02%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities.py:78 pass_bernoulli
    82|         0|            0|            0|  0.00%|
    83|         0|            0|            0|  0.00%|        # Here the gradients are only through log_q and similarity_kernel not c
    84|        23|   0.00113606|  4.93941e-05|  0.00%|        c_no_grad = c_all.bool().detach()  # bool variable has requires_grad = False
    85|        23|   0.00578499|  0.000251521|  0.00%|        log_prob_posterior = (c_no_grad * log_q + ~c_no_grad * log_one_minus_q).sum(dim=0)
    86|        23|    0.0086472|  0.000375965|  0.00%|        log_prob_prior = FiniteDPP(L=similarity_kernel).log_prob(c_no_grad.transpose(-1, -2))  # shape: batch_shape
(call)|        23|      9.71631|     0.422448|  2.04%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:166 __init__
(call)|        23|      8.49779|     0.369469|  1.79%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:229 log_prob
    87|        23|  0.000333309|  1.44917e-05|  0.00%|        assert log_prob_posterior.shape == log_prob_prior.shape
    88|        23|   0.00108981|  4.73831e-05|  0.00%|        kl = log_prob_posterior - log_prob_prior
    89|         0|            0|            0|  0.00%|
    90|        24|  0.000837088|  3.48787e-05|  0.00%|    return DIST(sample=c_all, kl=kl), q_all
(call)|        24|   0.00039196|  1.63317e-05|  0.00%|# <string>_115:1 __new__
    91|         0|            0|            0|  0.00%|
    92|         0|            0|            0|  0.00%|
    93|         3|  0.000130892|  4.36306e-05|  0.00%|class SimilarityKernel(torch.nn.Module):
(call)|         1|  8.22544e-05|  8.22544e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:93 SimilarityKernel
    94|         1|  5.48363e-06|  5.48363e-06|  0.00%|    """ Similarity based on sum of gaussian kernels of different strength and length_scales """
    95|         0|            0|            0|  0.00%|
    96|         2|  2.00272e-05|  1.00136e-05|  0.00%|    def __init__(self, n_kernels: int = 4, eps: float = 1E-4):
    97|         1|  2.36034e-05|  2.36034e-05|  0.00%|        super().__init__()
(call)|         1|  0.000551224|  0.000551224|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:71 __init__
    98|         0|            0|            0|  0.00%|
    99|         1|  1.97887e-05|  1.97887e-05|  0.00%|        self.n_kernels = n_kernels
(call)|         1|  5.05447e-05|  5.05447e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
   100|         1|  1.43051e-05|  1.43051e-05|  0.00%|        self.eps = eps
(call)|         1|  4.52995e-05|  4.52995e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
   101|         1|  3.79086e-05|  3.79086e-05|  0.00%|        self.device = torch.device('cuda') if torch.cuda.is_available() else torch.device('cpu')
(call)|         1|  3.43323e-05|  3.43323e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/cuda/__init__.py:33 is_available
(call)|         1|  5.10216e-05|  5.10216e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
   102|         0|            0|            0|  0.00%|
   103|         1|  1.57356e-05|  1.57356e-05|  0.00%|        self.similarity_w = torch.nn.Parameter(data=torch.ones(self.n_kernels,
   104|         1|  5.24521e-06|  5.24521e-06|  0.00%|                                                               device=self.device,
   105|         1|     0.133077|     0.133077|  0.03%|                                                               dtype=torch.float)/self.n_kernels, requires_grad=True)
(call)|         1|  0.000195503|  0.000195503|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/parameter.py:23 __new__
(call)|         1|  0.000319958|  0.000319958|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
   106|         1|  1.95503e-05|  1.95503e-05|  0.00%|        self.similarity_s2 = torch.nn.Parameter(data=100*torch.randn(self.n_kernels,
   107|         1|  5.72205e-06|  5.72205e-06|  0.00%|                                                                     device=self.device,
   108|         1|    0.0765655|    0.0765655|  0.02%|                                                                     dtype=torch.float), requires_grad=True)
(call)|         1|  0.000105143|  0.000105143|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/parameter.py:23 __new__
(call)|         1|  0.000231504|  0.000231504|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
   109|         0|            0|            0|  0.00%|
   110|         0|            0|            0|  0.00%|        # Initialization
   111|         1|  2.24113e-05|  2.24113e-05|  0.00%|        self.n_width = -1
(call)|         1|  7.08103e-05|  7.08103e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
   112|         1|  1.57356e-05|  1.57356e-05|  0.00%|        self.n_height = -1
(call)|         1|   4.3869e-05|   4.3869e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
   113|         1|  2.45571e-05|  2.45571e-05|  0.00%|        self.d2 = None
(call)|         1|   4.3869e-05|   4.3869e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
   114|         1|  1.52588e-05|  1.52588e-05|  0.00%|        self.diag = None
(call)|         1|  4.41074e-05|  4.41074e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
   115|         0|            0|            0|  0.00%|
   116|         2|  1.54972e-05|   7.7486e-06|  0.00%|    def _compute_d2_diag(self, n_width: int, n_height: int):
   117|         1|  1.90735e-05|  1.90735e-05|  0.00%|        with torch.no_grad():
(call)|         1|  1.64509e-05|  1.64509e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/grad_mode.py:65 __enter__
   118|         1|  5.74589e-05|  5.74589e-05|  0.00%|            ix_array = torch.arange(start=0, end=n_width, dtype=torch.int, device=self.device)
   119|         1|  3.45707e-05|  3.45707e-05|  0.00%|            iy_array = torch.arange(start=0, end=n_height, dtype=torch.int, device=self.device)
   120|         1|  2.47955e-05|  2.47955e-05|  0.00%|            ix_grid, iy_grid = torch.meshgrid([ix_array, iy_array])
(call)|         1|  0.000150442|  0.000150442|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/functional.py:295 meshgrid
   121|         1|    9.799e-05|    9.799e-05|  0.00%|            map_points = torch.stack((ix_grid, iy_grid), dim=-1)  # n_width, n_height, 2
   122|         1|  6.84261e-05|  6.84261e-05|  0.00%|            locations = map_points.flatten(start_dim=0, end_dim=-2)  # (n_width*n_height, 2)
   123|         1|     0.086165|     0.086165|  0.02%|            d2 = (locations.unsqueeze(-2) - locations.unsqueeze(-3)).pow(2).sum(dim=-1).float()
   124|         1|  4.00543e-05|  4.00543e-05|  0.00%|            diag = torch.eye(d2.shape[-2],
   125|         1|  8.58307e-06|  8.58307e-06|  0.00%|                             dtype=torch.float,
   126|         1|  8.10623e-06|  8.10623e-06|  0.00%|                             device=self.device,
   127|         1|    0.0305648|    0.0305648|  0.01%|                             requires_grad=False) * self.eps
   128|         1|  5.03063e-05|  5.03063e-05|  0.00%|            return d2, diag
(call)|         1|  6.55651e-05|  6.55651e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/grad_mode.py:69 __exit__
   129|         0|            0|            0|  0.00%|
   130|         1|   6.4373e-06|   6.4373e-06|  0.00%|    def sample_2_mask(self, sample):
   131|         0|            0|            0|  0.00%|        independent_dims = list(sample.shape[:-1])
   132|         0|            0|            0|  0.00%|        mask = sample.view(independent_dims + [self.n_width, self.n_height])
   133|         0|            0|            0|  0.00%|        return mask
   134|         0|            0|            0|  0.00%|
   135|        49|  0.000219345|  4.47643e-06|  0.00%|    def get_sigma2_w(self):
   136|        48|   0.00539207|  0.000112335|  0.00%|        return F.softplus(self.similarity_s2), F.softplus(self.similarity_w)
(call)|        96|   0.00219536|  2.28683e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:580 __getattr__
   137|         0|            0|            0|  0.00%|
   138|        25|  0.000156641|  6.26564e-06|  0.00%|    def forward(self, n_width: int, n_height: int):
   139|         0|            0|            0|  0.00%|        """ Implement L = sum_i a_i exp[-b_i d2] """
   140|        24|  0.000508547|  2.11895e-05|  0.00%|        sigma2, w = self.get_sigma2_w()
(call)|        24|   0.00367117|  0.000152965|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:135 get_sigma2_w
   141|         0|            0|            0|  0.00%|
   142|        24|  0.000133276|  5.55317e-06|  0.00%|        if (n_width != self.n_width) or (n_height != self.n_height):
   143|         1|  2.09808e-05|  2.09808e-05|  0.00%|            self.n_width = n_width
(call)|         1|  8.60691e-05|  8.60691e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
   144|         1|  1.50204e-05|  1.50204e-05|  0.00%|            self.n_height = n_height
(call)|         1|  4.41074e-05|  4.41074e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
   145|         1|  5.60284e-05|  5.60284e-05|  0.00%|            self.d2, self.diag = self._compute_d2_diag(n_width=n_width, n_height=n_height)
(call)|         1|     0.117379|     0.117379|  0.02%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:116 _compute_d2_diag
(call)|         2|  0.000101805|  5.09024e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
   146|         0|            0|            0|  0.00%|
   147|        24|      0.14221|   0.00592543|  0.03%|        likelihood_kernel = (w[..., None, None] * torch.exp(-0.5*self.d2/sigma2[..., None, None])).sum(dim=-3) + self.diag
   148|        24|   0.00037694|  1.57058e-05|  0.00%|        return likelihood_kernel  # shape (n_width*n_height, n_width*n_height)
   149|         0|            0|            0|  0.00%|
   150|         0|            0|            0|  0.00%|
   151|         3|  0.000139236|  4.64122e-05|  0.00%|class FiniteDPP(Distribution):
(call)|         1|  0.000142813|  0.000142813|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:151 FiniteDPP
   152|         0|            0|            0|  0.00%|    """ Finite DPP distribution defined via:
   153|         0|            0|            0|  0.00%|        1. L = likelihood kernel of shape *,n,n
   154|         0|            0|            0|  0.00%|        2. K = correlation kernel of shape *,n,n
   155|         0|            0|            0|  0.00%|
   156|         0|            0|            0|  0.00%|        The constraints are:
   157|         0|            0|            0|  0.00%|        K = positive semidefinite, symmetric, eigenvalues in [0,1]
   158|         0|            0|            0|  0.00%|        L = positive semidefinite, symmetric, eigenvalues >= 0
   159|         1|  4.76837e-06|  4.76837e-06|  0.00%|    """
   160|         0|            0|            0|  0.00%|
   161|         1|  7.86781e-06|  7.86781e-06|  0.00%|    arg_constraints = {'K': constraints.positive_definite,
   162|         1|  6.91414e-06|  6.91414e-06|  0.00%|                       'L': constraints.positive_definite}
   163|         1|  2.40803e-05|  2.40803e-05|  0.00%|    support = constraints.boolean
   164|         1|  6.67572e-06|  6.67572e-06|  0.00%|    has_rsample = False
   165|         0|            0|            0|  0.00%|
   166|        25|  0.000192404|  7.69615e-06|  0.00%|    def __init__(self, K=None, L=None, validate_args=None):
   167|         0|            0|            0|  0.00%|
   168|        24|  0.000172615|  7.19229e-06|  0.00%|        if (K is None and L is None) or (K is not None and L is not None):
   169|         0|            0|            0|  0.00%|            raise Exception("only one among K and L need to be defined")
   170|         0|            0|            0|  0.00%|
   171|        24|  0.000133753|  5.57303e-06|  0.00%|        elif K is not None:
   172|         0|            0|            0|  0.00%|            self.K = 0.5 * (K + K.transpose(-1, -2))  # make sure it is symmetrized
   173|         0|            0|            0|  0.00%|            u, s_k, v = torch.svd(self.K)
   174|         0|            0|            0|  0.00%|            s_l = s_k / (1.0 - s_k)
   175|         0|            0|            0|  0.00%|            self.L = torch.matmul(u * s_l.unsqueeze(-2), v.transpose(-1, -2))
   176|         0|            0|            0|  0.00%|
   177|         0|            0|            0|  0.00%|            tmp = torch.matmul(u * s_k.unsqueeze(-2), v.transpose(-1, -2))
   178|         0|            0|            0|  0.00%|            check = (tmp - self.K).abs().max()
   179|         0|            0|            0|  0.00%|            # print("check ->",check)
   180|         0|            0|            0|  0.00%|            assert check < 1E-4
   181|         0|            0|            0|  0.00%|
   182|         0|            0|            0|  0.00%|        else:
   183|        24|   0.00236082|  9.83675e-05|  0.00%|            self.L = 0.5 * (L + L.transpose(-1, -2))  # make sure it is symmetrized
   184|        24|      9.69664|     0.404027|  2.04%|            u, s_l, v = torch.svd(self.L)
   185|        24|   0.00671482|  0.000279784|  0.00%|            s_k = s_l / (1.0 + s_l)
   186|        24|    0.0589659|   0.00245691|  0.01%|            self.K = torch.matmul(u * s_k.unsqueeze(-2), v.transpose(-1, -2))
   187|         0|            0|            0|  0.00%|
   188|        24|   0.00288773|  0.000120322|  0.00%|            tmp = torch.matmul(u * s_l.unsqueeze(-2), v.transpose(-1, -2))
   189|        24|    0.0112901|   0.00047042|  0.00%|            check = (tmp - self.L).abs().max()
   190|         0|            0|            0|  0.00%|            # print("check ->",check)
   191|        24|    0.0441904|   0.00184127|  0.01%|            assert check < 1E-4
(call)|        24|    0.0045054|  0.000187725|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/tensor.py:25 wrapped
   192|         0|            0|            0|  0.00%|
   193|        24|  0.000343323|  1.43051e-05|  0.00%|        self.s_l = s_l
   194|        24|  0.000386477|  1.61032e-05|  0.00%|        batch_shape, event_shape = self.K.shape[:-2], self.K.shape[-1:]
   195|        24|  0.000649929|  2.70804e-05|  0.00%|        super(FiniteDPP, self).__init__(batch_shape, event_shape, validate_args=validate_args)
(call)|        24|  0.000900269|  3.75112e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/distribution.py:24 __init__
   196|         0|            0|            0|  0.00%|
   197|         1|  7.86781e-06|  7.86781e-06|  0.00%|    def expand(self, batch_shape, _instance=None):
   198|         0|            0|            0|  0.00%|        new = self._get_checked_instance(FiniteDPP, _instance)
   199|         0|            0|            0|  0.00%|        batch_shape = torch.Size(batch_shape)
   200|         0|            0|            0|  0.00%|        kernel_shape = batch_shape + self.event_shape + self.event_shape
   201|         0|            0|            0|  0.00%|        value_shape = batch_shape + self.event_shape
   202|         0|            0|            0|  0.00%|        new.s_l = self.s_l.expand(value_shape)
   203|         0|            0|            0|  0.00%|        new.L = self.L.expand(kernel_shape)
   204|         0|            0|            0|  0.00%|        new.K = self.K.expand(kernel_shape)
   205|         0|            0|            0|  0.00%|        super(FiniteDPP, new).__init__(batch_shape,
   206|         0|            0|            0|  0.00%|                                       self.event_shape,
   207|         0|            0|            0|  0.00%|                                       validate_args=False)
   208|         0|            0|            0|  0.00%|        new._validate_args = self._validate_args
   209|         0|            0|            0|  0.00%|        return new
   210|         0|            0|            0|  0.00%|
   211|         2|  3.95775e-05|  1.97887e-05|  0.00%|    def sample(self, sample_shape=torch.Size()):
   212|         1|  4.60148e-05|  4.60148e-05|  0.00%|        shape_value = self._extended_shape(sample_shape)  # shape = sample_shape + batch_shape + event_shape
(call)|         1|  2.45571e-05|  2.45571e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/distribution.py:209 _extended_shape
   213|         1|  7.15256e-06|  7.15256e-06|  0.00%|        shape_kernel = shape_value + self._event_shape  # shape = sample_shape + batch_shape + event_shape + event_shape
   214|         0|            0|            0|  0.00%|
   215|         1|  3.60012e-05|  3.60012e-05|  0.00%|        with torch.no_grad():
(call)|         1|  4.52995e-05|  4.52995e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/grad_mode.py:65 __enter__
   216|         1|  7.53403e-05|  7.53403e-05|  0.00%|            K = self.K.expand(shape_kernel).clone()
   217|         1|  7.89165e-05|  7.89165e-05|  0.00%|            value = torch.zeros(shape_value, dtype=torch.bool, device=K.device)
   218|         1|  0.000157595|  0.000157595|  0.00%|            rand = torch.rand(shape_value, dtype=K.dtype, device=K.device)
   219|         0|            0|            0|  0.00%|
   220|       401|   0.00422454|   1.0535e-05|  0.00%|            for j in range(rand.shape[-1]):
   221|       400|    0.0133486|  3.33714e-05|  0.00%|                c = rand[..., j] < K[..., j, j]
(call)|       400|    0.0178058|  4.45145e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/tensor.py:25 wrapped
   222|       400|      0.01423|   3.5575e-05|  0.00%|                value[..., j] = c
   223|       400|    0.0488696|  0.000122174|  0.01%|                K[..., j, j] -= (~c).to(K.dtype)
   224|       400|    0.0327718|  8.19296e-05|  0.01%|                K[..., j + 1:, j] /= K[..., j, j].unsqueeze(-1)
   225|       400|     0.046437|  0.000116093|  0.01%|                K[..., j + 1:, j + 1:] -= K[..., j + 1:, j].unsqueeze(-1) * K[..., j, j + 1:].unsqueeze(-2)
   226|         0|            0|            0|  0.00%|
   227|         1|  2.12193e-05|  2.12193e-05|  0.00%|            return value
(call)|         1|  6.10352e-05|  6.10352e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/grad_mode.py:69 __exit__
   228|         0|            0|            0|  0.00%|
   229|        24|  0.000292778|  1.21991e-05|  0.00%|    def log_prob(self, value):
   230|         0|            0|            0|  0.00%|        """ log_prob = logdet(Ls) - logdet(L+I)
   231|         0|            0|            0|  0.00%|            I am using the fact that eigen(L+I) = eigen(L)+1
   232|         0|            0|            0|  0.00%|            -> logdet(L+I)=log prod[ eigen(L+I) ] = sum log(eigen(L+I)) = sum log(eigen(L)+1)
   233|         0|            0|            0|  0.00%|
   234|         0|            0|            0|  0.00%|            # value.shape = sample_shape + batch_shape + event_shape
   235|         0|            0|            0|  0.00%|            # logdet(L+I).shape = batch_shape
   236|         0|            0|            0|  0.00%|            :rtype:
   237|         0|            0|            0|  0.00%|        """
   238|        23|   0.00100946|  4.38898e-05|  0.00%|        assert are_broadcastable(value, self.L[..., 0])
(call)|        23|   0.00142217|  6.18333e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:17 are_broadcastable
   239|        23|  0.000194311|  8.44831e-06|  0.00%|        assert self.L.device == value.device
   240|        23|  0.000249863|  1.08636e-05|  0.00%|        assert value.dtype == torch.bool
   241|         0|            0|            0|  0.00%|
   242|        23|  0.000161648|  7.02817e-06|  0.00%|        if self._validate_args:
   243|         0|            0|            0|  0.00%|            self._validate_sample(value)
   244|         0|            0|            0|  0.00%|
   245|        23|    0.0194669|  0.000846386|  0.00%|        logdet_L_plus_I = (self.s_l + 1).log().sum(dim=-1)  # batch_shape
   246|         0|            0|            0|  0.00%|
   247|         0|            0|            0|  0.00%|        # Reshapes
   248|        23|  0.000385284|  1.67515e-05|  0.00%|        independet_dims = list(value.shape[:-1])
   249|        23|  0.000396252|  1.72283e-05|  0.00%|        value = value.flatten(start_dim=0, end_dim=-2)  # *, event_shape
   250|        23|  0.000761032|  3.30884e-05|  0.00%|        L = self.L.expand(independet_dims + [-1, -1]).flatten(start_dim=0, end_dim=-3)  # *, event_shape, event_shape
   251|        23|    0.0097456|  0.000423722|  0.00%|        logdet_Ls = torch.zeros(independet_dims, dtype=self.L.dtype, device=value.device).view(-1)  # *
   252|         0|            0|            0|  0.00%|
   253|         0|            0|            0|  0.00%|        # Select rows and columns of the matrix which correspond to selected particles
   254|      2663|    0.0512934|  1.92615e-05|  0.01%|        for i in range(logdet_Ls.shape[0]):
   255|      2640|      1.21055|   0.00045854|  0.25%|            tmp = L[i, value[i], :][:, value[i]]
   256|      2640|      7.20001|   0.00272728|  1.51%|            logdet_Ls[i] = torch.logdet(tmp)
   257|        23|  0.000538111|  2.33961e-05|  0.00%|        logdet_Ls = logdet_Ls.view(independet_dims)  # sample_shape, batch_shape
   258|        23|   0.00132537|  5.76247e-05|  0.00%|        return logdet_Ls - logdet_L_plus_I
   259|         0|            0|            0|  0.00%|
   260|         0|            0|            0|  0.00%|
   261|         3|  0.000101566|  3.38554e-05|  0.00%|class Moving_Average_Calculator(object):
(call)|         1|  4.43459e-05|  4.43459e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:261 Moving_Average_Calculator
   262|         0|            0|            0|  0.00%|    """ Compute the moving average of a dictionary.
   263|         0|            0|            0|  0.00%|        Return the dictionary with the moving average up to that point
   264|         0|            0|            0|  0.00%|
   265|         0|            0|            0|  0.00%|        beta is the factor multiplying the moving average.
   266|         0|            0|            0|  0.00%|        Approximately we average the last 1/(1-beta) points.
   267|         0|            0|            0|  0.00%|        For example:
   268|         0|            0|            0|  0.00%|        beta = 0.9 -> 10 points
   269|         0|            0|            0|  0.00%|        beta = 0.99 -> 100 points
   270|         0|            0|            0|  0.00%|        The larger beta the longer the time average.
   271|         1|  4.05312e-06|  4.05312e-06|  0.00%|    """
   272|         0|            0|            0|  0.00%|
   273|         1|  4.76837e-06|  4.76837e-06|  0.00%|    def __init__(self, beta):
   274|         0|            0|            0|  0.00%|        super().__init__()
   275|         0|            0|            0|  0.00%|        self._bias = None
   276|         0|            0|            0|  0.00%|        self._steps = 0
   277|         0|            0|            0|  0.00%|        self._beta = beta
   278|         0|            0|            0|  0.00%|        self._dict_accumulate = {}
   279|         0|            0|            0|  0.00%|        self._dict_MA = {}
   280|         0|            0|            0|  0.00%|
   281|         1|  5.24521e-06|  5.24521e-06|  0.00%|    def accumulate(self, input_dict):
   282|         0|            0|            0|  0.00%|        self._steps += 1
   283|         0|            0|            0|  0.00%|        self._bias = 1 - self._beta ** self._steps
   284|         0|            0|            0|  0.00%|
   285|         0|            0|            0|  0.00%|        for key, value in input_dict.items():
   286|         0|            0|            0|  0.00%|            try:
   287|         0|            0|            0|  0.00%|                tmp = self._beta * self._dict_accumulate[key] + (1 - self._beta) * value
   288|         0|            0|            0|  0.00%|                self._dict_accumulate[key] = tmp
   289|         0|            0|            0|  0.00%|            except KeyError:
   290|         0|            0|            0|  0.00%|                self._dict_accumulate[key] = (1 - self._beta) * value
   291|         0|            0|            0|  0.00%|            self._dict_MA[key] = self._dict_accumulate[key] / self._bias
   292|         0|            0|            0|  0.00%|        return self._dict_MA
   293|         0|            0|            0|  0.00%|
   294|         0|            0|            0|  0.00%|
   295|         3|  0.000114679|  3.82264e-05|  0.00%|class Accumulator(object):
(call)|         1|  9.75132e-05|  9.75132e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:295 Accumulator
   296|         1|  4.52995e-06|  4.52995e-06|  0.00%|    """ accumulate a tuple or dictionary into a dictionary """
   297|         0|            0|            0|  0.00%|
   298|         7|  3.19481e-05|  4.56401e-06|  0.00%|    def __init__(self):
   299|         6|   3.8147e-05|  6.35783e-06|  0.00%|        super().__init__()
   300|         6|  3.14713e-05|  5.24521e-06|  0.00%|        self._counter = 0
   301|         6|  3.02792e-05|  5.04653e-06|  0.00%|        self._dict_accumulate = OrderedDict()
   302|         0|            0|            0|  0.00%|
   303|       421|   0.00106859|  2.53822e-06|  0.00%|    def _accumulate_key_value(self, key, value, counter_increment):
   304|       420|   0.00164056|  3.90609e-06|  0.00%|        if isinstance(value, torch.Tensor):
   305|        21|   0.00470233|   0.00022392|  0.00%|            x = value.detach().item() * counter_increment
   306|       399|   0.00138068|  3.46036e-06|  0.00%|        elif isinstance(value, float):
   307|       357|    0.0012207|  3.41934e-06|  0.00%|            x = value * counter_increment
   308|        42|  0.000169992|  4.04744e-06|  0.00%|        elif isinstance(value, numpy.ndarray):
   309|        42|  0.000835896|  1.99023e-05|  0.00%|            x = value * counter_increment
   310|         0|            0|            0|  0.00%|        else:
   311|         0|            0|            0|  0.00%|            print(type(value))
   312|         0|            0|            0|  0.00%|            raise Exception
   313|       420|    0.0020864|  4.96762e-06|  0.00%|        self._dict_accumulate[key] = x + self._dict_accumulate.get(key, 0)
   314|         0|            0|            0|  0.00%|
   315|        22|  0.000114441|  5.20186e-06|  0.00%|    def accumulate(self, source: Union[tuple, dict], counter_increment: int = 1):
(call)|         1|  2.83718e-05|  2.83718e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
   316|        21|  0.000115395|  5.49498e-06|  0.00%|        self._counter += counter_increment
   317|         0|            0|            0|  0.00%|
   318|        21|  0.000120878|  5.75611e-06|  0.00%|        if isinstance(source, tuple):
   319|       441|   0.00164533|   3.7309e-06|  0.00%|            for key in source._fields:
   320|       420|   0.00166345|  3.96059e-06|  0.00%|                value = getattr(source, key)
   321|       420|    0.0043087|  1.02588e-05|  0.00%|                self._accumulate_key_value(key, value, counter_increment)
(call)|       420|    0.0130997|  3.11897e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:303 _accumulate_key_value
   322|         0|            0|            0|  0.00%|        else:
   323|         0|            0|            0|  0.00%|            for key, value in source.items():
   324|         0|            0|            0|  0.00%|                self._accumulate_key_value(key, value, counter_increment)
   325|         0|            0|            0|  0.00%|
   326|         7|  7.55787e-05|   1.0797e-05|  0.00%|    def get_average(self):
   327|         6|  0.000186205|  3.10342e-05|  0.00%|        tmp = self._dict_accumulate.copy()
   328|       126|  0.000519514|  4.12313e-06|  0.00%|        for k, v in self._dict_accumulate.items():
   329|       120|  0.000659227|  5.49356e-06|  0.00%|            tmp[k] = v/self._counter
   330|         6|  1.88351e-05|  3.13918e-06|  0.00%|        return tmp
   331|         0|            0|            0|  0.00%|
   332|         0|            0|            0|  0.00%|
   333|         3|  0.000105381|   3.5127e-05|  0.00%|class ConditionalRandomCrop(object):
(call)|         1|   0.00026989|   0.00026989|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:333 ConditionalRandomCrop
   334|         0|            0|            0|  0.00%|    """ Crop a torch Tensor at random locations to obtain output of given size.
   335|         1|  4.52995e-06|  4.52995e-06|  0.00%|        The random crop is accepted only if it is inside the Region Of Interest (ROI) """
   336|         0|            0|            0|  0.00%|
   337|         3|  2.76566e-05|  9.21885e-06|  0.00%|    def __init__(self, desired_w, desired_h, min_roi_fraction: float = 0.0, n_crops_per_image: int = 1):
   338|         2|  1.78814e-05|   8.9407e-06|  0.00%|        super().__init__()
   339|         2|   2.7895e-05|  1.39475e-05|  0.00%|        self.desired_w = desired_w
   340|         2|  1.00136e-05|  5.00679e-06|  0.00%|        self.desired_h = desired_h
   341|         2|   2.7895e-05|  1.39475e-05|  0.00%|        self.min_roi_fraction = min_roi_fraction
   342|         2|  9.29832e-06|  4.64916e-06|  0.00%|        self.desired_area = desired_w * desired_h
   343|         2|  1.16825e-05|  5.84126e-06|  0.00%|        self.n_crops_per_image = n_crops_per_image
   344|         0|            0|            0|  0.00%|
   345|      4303|    0.0149984|  3.48558e-06|  0.00%|    @staticmethod
   346|         1|  7.15256e-06|  7.15256e-06|  0.00%|    def get_smallest_corner_for_crop(w_raw: int, h_raw: int, w_desired: int, h_desired: int):
   347|      4302|    0.0171578|  3.98833e-06|  0.00%|        assert w_desired <= w_raw
   348|      4302|    0.0161388|  3.75146e-06|  0.00%|        assert h_desired <= h_raw
   349|         0|            0|            0|  0.00%|
   350|      4302|    0.0159965|  3.71838e-06|  0.00%|        if w_raw == w_desired and h_raw == h_desired:
   351|         0|            0|            0|  0.00%|            return 0, 0
   352|         0|            0|            0|  0.00%|        else:
   353|      4302|     0.237865|  5.52917e-05|  0.05%|            i = torch.randint(low=0, high=w_raw - w_desired + 1, size=[1]).item()
   354|      4302|     0.141298|  3.28448e-05|  0.03%|            j = torch.randint(low=0, high=h_raw - h_desired + 1, size=[1]).item()
   355|      4302|    0.0219359|  5.09901e-06|  0.00%|            return i, j
   356|         0|            0|            0|  0.00%|
   357|      2569|    0.0113666|  4.42453e-06|  0.00%|    def get_index(self,
   358|         0|            0|            0|  0.00%|                  img: torch.Tensor,
   359|         0|            0|            0|  0.00%|                  roi_mask: Optional[torch.Tensor] = None,
   360|         0|            0|            0|  0.00%|                  cum_sum_roi_mask: Optional[torch.Tensor] = None,
   361|         1|  3.74317e-05|  3.74317e-05|  0.00%|                  n_crops_per_image: Optional[int] = None):
(call)|         3|  7.72476e-05|  2.57492e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
   362|         0|            0|            0|  0.00%|        """ img.shape: *,c,w,h where * might or might not be present
   363|         0|            0|            0|  0.00%|            roi_mask:  *,1,w,h where * might or might not be present
   364|         0|            0|            0|  0.00%|            cum_sum_roi_mask: *,1,w,h where * might or might not be present
   365|         0|            0|            0|  0.00%|
   366|         0|            0|            0|  0.00%|            return a list of images
   367|         0|            0|            0|  0.00%|        """
   368|      2569|    0.0135844|  5.28781e-06|  0.00%|        n_crops_per_image = self.n_crops_per_image if n_crops_per_image is None else n_crops_per_image
   369|         0|            0|            0|  0.00%|
   370|      2569|    0.0128102|  4.98647e-06|  0.00%|        if roi_mask is not None and cum_sum_roi_mask is not None:
   371|         0|            0|            0|  0.00%|            raise Exception("Only one between roi_mask and cum_sum_roi_mask can be specified")
   372|         0|            0|            0|  0.00%|
   373|      2569|    0.0158033|  6.15155e-06|  0.00%|        if len(img.shape) == 3:
   374|      2568|    0.0330727|  1.28788e-05|  0.01%|            img = img.unsqueeze(0)
   375|      2569|    0.0166552|  6.48315e-06|  0.00%|        if cum_sum_roi_mask is not None and len(cum_sum_roi_mask.shape) == 3:
   376|      2568|    0.0600665|  2.33904e-05|  0.01%|            cum_sum_roi_mask = cum_sum_roi_mask.unsqueeze(0)
   377|      2569|    0.0142615|  5.55138e-06|  0.00%|        if roi_mask is not None and len(roi_mask.shape) == 3:
   378|         0|            0|            0|  0.00%|            roi_mask = roi_mask.unsqueeze(0)
   379|         0|            0|            0|  0.00%|
   380|      2569|    0.0147331|  5.73495e-06|  0.00%|        assert len(img.shape) == 4
   381|      2569|     0.012862|   5.0066e-06|  0.00%|        assert (roi_mask is None or len(roi_mask.shape) == 4)
   382|      2569|    0.0142651|  5.55277e-06|  0.00%|        assert (cum_sum_roi_mask is None or len(cum_sum_roi_mask.shape) == 4)
   383|         0|            0|            0|  0.00%|
   384|      2569|    0.0358553|  1.39569e-05|  0.01%|        with torch.no_grad():
(call)|      2569|    0.0295961|  1.15205e-05|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/grad_mode.py:65 __enter__
   385|         0|            0|            0|  0.00%|
   386|      2569|    0.0140491|  5.46869e-06|  0.00%|            bij_list = []
   387|      5138|    0.0494652|  9.62732e-06|  0.01%|            for b in range(img.shape[0]):
(call)|      2569|    0.0755119|  2.93935e-05|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/grad_mode.py:69 __exit__
   388|      5201|    0.0256765|  4.93684e-06|  0.01%|                for n in range(n_crops_per_image):
   389|      2632|    0.0125725|   4.7768e-06|  0.00%|                    fraction = 0
   390|      6934|    0.0349393|  5.03884e-06|  0.01%|                    while fraction < self.min_roi_fraction:
(call)|        95|    0.0549157|   0.00057806|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torch/tensor.py:25 wrapped
   391|      4302|     0.100135|  2.32763e-05|  0.02%|                        i, j = self.get_smallest_corner_for_crop(w_raw=img[b].shape[-2],
   392|      4302|    0.0358894|  8.34249e-06|  0.01%|                                                                 h_raw=img[b].shape[-1],
   393|      4302|     0.021096|  4.90376e-06|  0.00%|                                                                 w_desired=self.desired_w,
   394|      4302|    0.0604601|  1.40539e-05|  0.01%|                                                                 h_desired=self.desired_h)
(call)|      4302|     0.465384|  0.000108179|  0.10%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:345 get_smallest_corner_for_crop
   395|         0|            0|            0|  0.00%|
   396|      4302|    0.0206034|  4.78927e-06|  0.00%|                        if cum_sum_roi_mask is not None:
   397|      4207|    0.0793314|   1.8857e-05|  0.02%|                            term1 = cum_sum_roi_mask[b, 0, i + self.desired_w - 1, j + self.desired_h - 1].item()
   398|      4207|    0.0692365|  1.64575e-05|  0.01%|                            term2 = 0 if i < 1 else cum_sum_roi_mask[b, 0, i - 1, j + self.desired_h - 1].item()
   399|      4207|    0.0627854|   1.4924e-05|  0.01%|                            term3 = 0 if j < 1 else cum_sum_roi_mask[b, 0, i + self.desired_w - 1, j - 1].item()
   400|      4207|     0.061908|  1.47155e-05|  0.01%|                            term4 = 0 if (i < 1 or j < 1) else cum_sum_roi_mask[b, 0, i - 1, j - 1].item()
   401|      4207|    0.0240736|  5.72227e-06|  0.01%|                            fraction = float(term1 - term2 - term3 + term4) / self.desired_area
   402|        95|  0.000409603|  4.31161e-06|  0.00%|                        elif roi_mask is not None:
   403|        95|  0.000438452|  4.61528e-06|  0.00%|                            fraction = roi_mask[b, 0, i:i+self.desired_w,
   404|        95|     0.111909|   0.00117799|  0.02%|                                       j:j+self.desired_h].sum().float()/self.desired_area
   405|         0|            0|            0|  0.00%|                        else:
   406|         0|            0|            0|  0.00%|                            fraction = 1.0
   407|         0|            0|            0|  0.00%|
   408|      2632|    0.0120323|  4.57153e-06|  0.00%|                    bij_list.append([b, i, j])
   409|      2569|    0.0112846|   4.3926e-06|  0.00%|        return bij_list
   410|         0|            0|            0|  0.00%|
   411|        23|  0.000121355|  5.27631e-06|  0.00%|    def collate_crops_from_list(self, img: torch.Tensor, bij_list: list):
   412|      2698|     0.121164|  4.49087e-05|  0.03%|        return torch.stack([img[b, :, i:i+self.desired_w, j:j+self.desired_h] for b, i, j in bij_list], dim=-4)
(call)|        22|    0.0316613|   0.00143915|  0.01%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:412 <listcomp>
   413|         0|            0|            0|  0.00%|
   414|         1|  8.34465e-06|  8.34465e-06|  0.00%|    def crop(self,
   415|         0|            0|            0|  0.00%|             img: torch.Tensor,
   416|         0|            0|            0|  0.00%|             roi_mask: Optional[torch.Tensor] = None,
   417|         0|            0|            0|  0.00%|             cum_sum_roi_mask: Optional[torch.Tensor] = None,
   418|         1|  3.45707e-05|  3.45707e-05|  0.00%|             n_crops_per_image: Optional[int] = None):
(call)|         3|   5.8651e-05|  1.95503e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
   419|         0|            0|            0|  0.00%|
   420|         1|  5.24521e-06|  5.24521e-06|  0.00%|        n_crops_per_image = self.n_crops_per_image if n_crops_per_image is None else n_crops_per_image
   421|         1|  2.76566e-05|  2.76566e-05|  0.00%|        bij_list = self.get_index(img, roi_mask, cum_sum_roi_mask, n_crops_per_image)
(call)|         1|     0.333608|     0.333608|  0.07%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:357 get_index
   422|         1|  0.000124454|  0.000124454|  0.00%|        return self.collate_crops_from_list(img, bij_list)
(call)|         1|    0.0289488|    0.0289488|  0.01%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:411 collate_crops_from_list
   423|         0|            0|            0|  0.00%|
   424|         0|            0|            0|  0.00%|
   425|         3|   0.00014019|    4.673e-05|  0.00%|class SpecialDataSet(object):
(call)|         1|   0.00106597|   0.00106597|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:425 SpecialDataSet
   426|         2|  5.17368e-05|  2.58684e-05|  0.00%|    def __init__(self,
   427|         0|            0|            0|  0.00%|                 img: torch.Tensor,
   428|         0|            0|            0|  0.00%|                 roi_mask: Optional[torch.Tensor] = None,
   429|         0|            0|            0|  0.00%|                 labels: Optional[torch.Tensor] = None,
   430|         0|            0|            0|  0.00%|                 data_augmentation: Optional[ConditionalRandomCrop] = None,
   431|         0|            0|            0|  0.00%|                 store_in_cuda: bool = False,
   432|         0|            0|            0|  0.00%|                 drop_last=False,
   433|         0|            0|            0|  0.00%|                 batch_size=4,
   434|         1|  5.10216e-05|  5.10216e-05|  0.00%|                 shuffle=False):
(call)|         3|  0.000935793|  0.000311931|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
   435|         0|            0|            0|  0.00%|        """ :param device: 'cpu' or 'cuda:0'
   436|         0|            0|            0|  0.00%|            Dataset returns random crops of a given size inside the Region Of Interest.
   437|         0|            0|            0|  0.00%|            The function getitem returns imgs, labels and indeces
   438|         0|            0|            0|  0.00%|        """
   439|         2|  3.52859e-05|   1.7643e-05|  0.00%|        assert len(img.shape) == 4
   440|         2|  1.23978e-05|  6.19888e-06|  0.00%|        assert (roi_mask is None or len(roi_mask.shape) == 4)
   441|         2|   2.5034e-05|   1.2517e-05|  0.00%|        assert (labels is None or labels.shape[0] == img.shape[0])
   442|         0|            0|            0|  0.00%|
   443|         2|  7.51019e-05|  3.75509e-05|  0.00%|        storing_device = torch.device('cuda') if store_in_cuda else torch.device('cpu')
   444|         0|            0|            0|  0.00%|
   445|         2|  1.54972e-05|   7.7486e-06|  0.00%|        self.drop_last = drop_last
   446|         2|  1.07288e-05|  5.36442e-06|  0.00%|        self.batch_size = batch_size
   447|         2|  1.04904e-05|  5.24521e-06|  0.00%|        self.shuffle = shuffle
   448|         0|            0|            0|  0.00%|
   449|         0|            0|            0|  0.00%|        # Expand the dataset so that I can do one crop per image
   450|         2|  9.77516e-06|  4.88758e-06|  0.00%|        if data_augmentation is None:
   451|         1|  2.26498e-05|  2.26498e-05|  0.00%|            new_batch_size = img.shape[0]
   452|         1|  6.19888e-06|  6.19888e-06|  0.00%|            self.data_augmentaion = None
   453|         0|            0|            0|  0.00%|        else:
   454|         1|  7.15256e-06|  7.15256e-06|  0.00%|            new_batch_size = img.shape[0] * data_augmentation.n_crops_per_image
   455|         1|  6.19888e-06|  6.19888e-06|  0.00%|            self.data_augmentaion = data_augmentation
   456|         0|            0|            0|  0.00%|
   457|         2|  9.29832e-06|  4.64916e-06|  0.00%|        if store_in_cuda:
   458|         0|            0|            0|  0.00%|            self.img = img.cuda().detach().expand(new_batch_size, -1, -1, -1)
   459|         0|            0|            0|  0.00%|        else:
   460|         2|   0.00113797|  0.000568986|  0.00%|            self.img = img.cpu().detach().expand(new_batch_size, -1, -1, -1)
   461|         0|            0|            0|  0.00%|
   462|         2|  3.09944e-05|  1.54972e-05|  0.00%|        if labels is None:
   463|         2|   0.00957251|   0.00478625|  0.00%|            self.labels = -1*torch.ones(self.img.shape[0], device=storing_device).detach()
   464|         0|            0|            0|  0.00%|        else:
   465|         0|            0|            0|  0.00%|            self.labels = labels.to(storing_device).detach()
   466|         2|  6.96182e-05|  3.48091e-05|  0.00%|        self.labels = self.labels.expand(new_batch_size)
   467|         0|            0|            0|  0.00%|
   468|         2|  2.95639e-05|   1.4782e-05|  0.00%|        if roi_mask is None:
   469|         1|  7.15256e-06|  7.15256e-06|  0.00%|            self.roi_mask = None
   470|         1|  2.71797e-05|  2.71797e-05|  0.00%|            self.cum_roi_mask = None
   471|         0|            0|            0|  0.00%|        else:
   472|         1|  6.67572e-05|  6.67572e-05|  0.00%|            self.roi_mask = roi_mask.to(storing_device).detach().expand(new_batch_size, -1, -1, -1)
   473|         1|    0.0645437|    0.0645437|  0.01%|            self.cum_roi_mask = roi_mask.to(storing_device).detach().cumsum(dim=-1).cumsum(
   474|         1|     0.198422|     0.198422|  0.04%|                dim=-2).expand(new_batch_size, -1, -1, -1)
   475|         0|            0|            0|  0.00%|
   476|        22|  6.98566e-05|   3.1753e-06|  0.00%|    def __len__(self):
   477|        21|  0.000165701|  7.89052e-06|  0.00%|        return self.img.shape[0]
   478|         0|            0|            0|  0.00%|
   479|        24|  0.000195503|  8.14597e-06|  0.00%|    def __getitem__(self, index: torch.Tensor):
   480|        23|  0.000164509|  7.15256e-06|  0.00%|        assert isinstance(index, torch.Tensor)
   481|         0|            0|            0|  0.00%|
   482|        23|  0.000115633|  5.02752e-06|  0.00%|        if self.data_augmentaion is None:
   483|         2|    0.0062201|   0.00311005|  0.00%|            return self.img[index], self.labels[index], index
   484|         0|            0|            0|  0.00%|        else:
   485|        21|  8.27312e-05|  3.93958e-06|  0.00%|            bij_list = []
   486|      2589|    0.0338168|  1.30617e-05|  0.01%|            for i in index:
(call)|        21|  0.000884295|  4.21093e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/tensor.py:454 __iter__
(call)|      2568|    0.0284672|  1.10853e-05|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torch/tensor.py:468 <lambda>
   487|      2568|    0.0239229|  9.31578e-06|  0.01%|                bij_list += self.data_augmentaion.get_index(img=self.img[i],
   488|      2568|    0.0199492|  7.76838e-06|  0.00%|                                                            cum_sum_roi_mask=self.cum_roi_mask[i],
   489|      2568|    0.0470948|  1.83391e-05|  0.01%|                                                            n_crops_per_image=1)
(call)|      2568|      1.35543|  0.000527816|  0.28%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:357 get_index
   490|        21|   0.00518942|  0.000247115|  0.00%|            return self.data_augmentaion.collate_crops_from_list(self.img, bij_list), self.labels[index], index
(call)|        21|    0.0923285|    0.0043966|  0.02%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:411 collate_crops_from_list
   491|         0|            0|            0|  0.00%|
   492|         7|  3.38554e-05|  4.83649e-06|  0.00%|    def __iter__(self, batch_size=None, drop_last=None, shuffle=None):
   493|         0|            0|            0|  0.00%|        # If not specified use defaults
   494|         6|   3.6478e-05|  6.07967e-06|  0.00%|        batch_size = self.batch_size if batch_size is None else batch_size
   495|         6|  4.26769e-05|  7.11282e-06|  0.00%|        drop_last = self.drop_last if drop_last is None else drop_last
   496|         6|  7.39098e-05|  1.23183e-05|  0.00%|        shuffle = self.shuffle if shuffle is None else shuffle
   497|         0|            0|            0|  0.00%|
   498|         0|            0|            0|  0.00%|        # Actual generation of iterator
   499|         6|  0.000123739|  2.06232e-05|  0.00%|        n_max = max(1, self.__len__() - (self.__len__() % batch_size) if drop_last else self.__len__())
(call)|        11|  0.000143766|  1.30697e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:476 __len__
   500|         6|   0.00179935|  0.000299891|  0.00%|        index = torch.randperm(self.__len__()).long() if shuffle else torch.arange(self.__len__()).long()
(call)|         6|  3.48091e-05|  5.80152e-06|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:476 __len__
   501|        27|  0.000202656|  7.50577e-06|  0.00%|        for pos in range(0, n_max, batch_size):
   502|        42|   0.00144339|  3.43663e-05|  0.00%|            yield self.__getitem__(index[pos:pos + batch_size])
(call)|        21|      1.60292|    0.0763294|  0.34%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:479 __getitem__
   503|         0|            0|            0|  0.00%|
   504|         1|  1.62125e-05|  1.62125e-05|  0.00%|    def load(self, batch_size=None, index=None):
   505|         0|            0|            0|  0.00%|        if (batch_size is None and index is None) or (batch_size is not None and index is not None):
   506|         0|            0|            0|  0.00%|            raise Exception("Only one between batch_size and index must be specified")
   507|         0|            0|            0|  0.00%|        index = torch.randint(low=0, high=self.__len__(), size=(batch_size,)).long() if index is None else index
   508|         0|            0|            0|  0.00%|        return self.__getitem__(index)
   509|         0|            0|            0|  0.00%|
   510|         3|  2.90871e-05|  9.69569e-06|  0.00%|    def check_batch(self, batch_size: int = 8):
   511|         2|  0.000151157|  7.55787e-05|  0.00%|        print("Dataset lenght:", self.__len__())
(call)|         2|  2.93255e-05|  1.46627e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:476 __len__
(call)|         8|   0.00446701|  0.000558376|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/streams/stdstream_uploader.py:30 write
   512|         2|  0.000132084|  6.60419e-05|  0.00%|        print("img.shape", self.img.shape)
(call)|         8|   0.00220275|  0.000275344|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/streams/stdstream_uploader.py:30 write
   513|         2|  0.000107765|  5.38826e-05|  0.00%|        print("img.dtype", self.img.dtype)
(call)|         8|   0.00213575|  0.000266969|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/streams/stdstream_uploader.py:30 write
   514|         2|  0.000123262|  6.16312e-05|  0.00%|        print("img.device", self.img.device)
(call)|         8|    0.0021069|  0.000263363|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/streams/stdstream_uploader.py:30 write
   515|         2|    0.0249944|    0.0124972|  0.01%|        index = torch.randperm(self.__len__(), dtype=torch.long, device=self.img.device, requires_grad=False)
(call)|         2|  1.93119e-05|  9.65595e-06|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:476 __len__
   516|         0|            0|            0|  0.00%|        # grab one minibatch
   517|         2|  0.000144482|  7.22408e-05|  0.00%|        img, labels, index = self.__getitem__(index[:batch_size])
(call)|         2|    0.0109377|   0.00546885|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:479 __getitem__
   518|         2|  0.000184059|  9.20296e-05|  0.00%|        print("MINIBATCH: img.shapes labels.shape, index.shape ->", img.shape, labels.shape, index.shape)
(call)|        16|   0.00276065|  0.000172541|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/streams/stdstream_uploader.py:30 write
   519|         2|   0.00444961|    0.0022248|  0.00%|        print("MINIBATCH: min and max of minibatch", torch.min(img), torch.max(img))
(call)|        12|   0.00337982|  0.000281652|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/streams/stdstream_uploader.py:30 write
(call)|         4|     0.130711|    0.0326778|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/torch/tensor.py:157 __repr__
   520|         2|  8.22544e-05|  4.11272e-05|  0.00%|        return show_batch(img, n_col=4, n_padding=4, pad_value=1, figsize=(24, 24))
(call)|         2|      2.96217|      1.48109|  0.62%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_visualization.py:165 show_batch
   521|         0|            0|            0|  0.00%|
   522|         0|            0|            0|  0.00%|
   523|         6|  4.57764e-05|  7.62939e-06|  0.00%|def process_one_epoch(model: torch.nn.Module,
   524|         0|            0|            0|  0.00%|                      dataloader: SpecialDataSet,
   525|         0|            0|            0|  0.00%|                      optimizer: Optional[torch.optim.Optimizer] = None,
   526|         0|            0|            0|  0.00%|                      weight_clipper: Optional[Callable[[None], None]] = None,
   527|         0|            0|            0|  0.00%|                      verbose: bool = False,
   528|         0|            0|            0|  0.00%|                      neptune_experiment: Optional[neptune.experiments.Experiment] = None,
   529|         1|   0.00022316|   0.00022316|  0.00%|                      neptune_prefix: Optional[str] = None) -> MetricMiniBatch:
(call)|         4|   0.00178456|  0.000446141|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
(call)|         1|  0.000683308|  0.000683308|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:746 __getitem__
   530|         0|            0|            0|  0.00%|    """ return a tuple with all the metrics averaged over a epoch """
   531|         6|  0.000118017|  1.96695e-05|  0.00%|    metric_accumulator = Accumulator()
(call)|         6|  0.000126123|  2.10206e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:298 __init__
   532|         0|            0|            0|  0.00%|
   533|        27|   0.00294805|  0.000109187|  0.00%|    for i, (imgs, labels, index) in enumerate(dataloader):
(call)|        27|      1.60684|    0.0595128|  0.34%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:492 __iter__
   534|         0|            0|            0|  0.00%|
   535|         0|            0|            0|  0.00%|        # Put data in GPU if available
   536|        21|  0.000845671|    4.027e-05|  0.00%|        if torch.cuda.is_available() and (imgs.device == torch.device('cpu')):
(call)|        21|  0.000689745|   3.2845e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/cuda/__init__.py:33 is_available
   537|        21|      3.62251|     0.172501|  0.76%|            imgs = imgs.cuda()
   538|         0|            0|            0|  0.00%|
   539|        21|    0.0207775|  0.000989403|  0.00%|        metrics = model.forward(imgs_in=imgs).metrics  # the forward function returns metric and other stuff
(call)|        21|      36.1567|      1.72175|  7.60%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/vae_model.py:628 forward
   540|        21|  0.000308275|  1.46798e-05|  0.00%|        if verbose:
   541|         5|  0.000479937|  9.59873e-05|  0.00%|            print("i = %3d train_loss=%.5f" % (i, metrics.loss))
(call)|        10|   0.00995588|  0.000995588|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/streams/stdstream_uploader.py:30 write
   542|         0|            0|            0|  0.00%|
   543|         0|            0|            0|  0.00%|        # Accumulate metrics over an epoch
   544|        21|  0.000366449|    1.745e-05|  0.00%|        with torch.no_grad():
(call)|        21|  0.000345469|  1.64509e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/grad_mode.py:65 __enter__
   545|        21|  0.000918388|  4.37328e-05|  0.00%|            metric_accumulator.accumulate(source=metrics, counter_increment=len(index))
(call)|        21|  0.000370979|  1.76657e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/tensor.py:449 __len__
(call)|        21|    0.0210521|   0.00100248|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:315 accumulate
(call)|        21|  0.000683546|  3.25498e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/grad_mode.py:69 __exit__
   546|         0|            0|            0|  0.00%|
   547|         0|            0|            0|  0.00%|        # Only if training I apply backward
   548|        21|  0.000177383|  8.44683e-06|  0.00%|        if model.training:
   549|        20|  0.000403881|  2.01941e-05|  0.00%|            optimizer.zero_grad()
(call)|        20|     0.122832|   0.00614161|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/torch/optim/optimizer.py:159 zero_grad
   550|        20|   0.00072217|  3.61085e-05|  0.00%|            metrics.loss.backward()  # do back_prop and compute all the gradients
(call)|        20|        45.28|        2.264|  9.51%|# /opt/anaconda3/lib/python3.7/site-packages/torch/tensor.py:170 backward
   551|        20|  0.000719786|  3.59893e-05|  0.00%|            optimizer.step()  # update the parameters
(call)|        20|      1.48784|     0.074392|  0.31%|# /opt/anaconda3/lib/python3.7/site-packages/torch/optim/lr_scheduler.py:62 wrapper
   552|         0|            0|            0|  0.00%|
   553|         0|            0|            0|  0.00%|            # apply the weight clipper
   554|        20|  0.000158548|  7.92742e-06|  0.00%|            if weight_clipper is not None:
   555|         0|            0|            0|  0.00%|                model.__self__.apply(weight_clipper)
   556|         0|            0|            0|  0.00%|
   557|         0|            0|            0|  0.00%|        # Delete stuff from GPU
   558|         0|            0|            0|  0.00%|        # del imgs
   559|         0|            0|            0|  0.00%|        # del labels
   560|         0|            0|            0|  0.00%|        # del index
   561|         0|            0|            0|  0.00%|        # del metrics
   562|         0|            0|            0|  0.00%|        # torch.cuda.empty_cache()
   563|         0|            0|            0|  0.00%|
   564|         0|            0|            0|  0.00%|    # At the end of the loop compute the average of the metrics
   565|         6|  0.000143528|  2.39213e-05|  0.00%|    with torch.no_grad():
(call)|         6|  0.000101805|  1.69675e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/grad_mode.py:65 __enter__
   566|         6|  0.000124454|  2.07424e-05|  0.00%|        metric_one_epoch = metric_accumulator.get_average()
(call)|         6|    0.0014534|  0.000242233|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:326 get_average
   567|         6|  2.93255e-05|  4.88758e-06|  0.00%|        if neptune_experiment is not None:
   568|         6|  6.29425e-05|  1.04904e-05|  0.00%|            log_dict_metrics(metrics=metric_one_epoch,
   569|         6|  2.71797e-05|  4.52995e-06|  0.00%|                             prefix=neptune_prefix,
   570|         6|  2.93255e-05|  4.88758e-06|  0.00%|                             experiment=neptune_experiment,
   571|         6|  0.000155449|  2.59082e-05|  0.00%|                             verbose=False)
(call)|         6|      11.0404|      1.84006|  2.32%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_neptune.py:83 log_dict_metrics
   572|         6|  0.000226736|  3.77893e-05|  0.00%|        return MetricMiniBatch._make(metric_one_epoch.values())
(call)|         6|  0.000188112|   3.1352e-05|  0.00%|# /opt/anaconda3/lib/python3.7/collections/__init__.py:403 _make
(call)|         6|   0.00023675|  3.94583e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/grad_mode.py:69 __exit__
File: /home/jupyter/REPOS/spacetx-research/src/MODULES/vae_model.py
File duration: 2.34331s (0.49%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  0.000154018|  7.70092e-05|  0.00%|from MODULES.utilities import *
(call)|         1|  5.24521e-05|  5.24521e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
     2|         1|  0.000118971|  0.000118971|  0.00%|from MODULES.utilities_ml import Moving_Average_Calculator
(call)|         1|       17.418|       17.418|  3.66%|# <frozen importlib._bootstrap>:978 _find_and_load
(call)|         1|  2.83718e-05|  2.83718e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
     3|         1|  4.98295e-05|  4.98295e-05|  0.00%|from MODULES.utilities_visualization import draw_bounding_boxes, draw_img
(call)|         1|  1.97887e-05|  1.97887e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
     4|         1|  0.000127316|  0.000127316|  0.00%|from MODULES.vae_parts import *
(call)|         1|      0.10733|      0.10733|  0.02%|# <frozen importlib._bootstrap>:978 _find_and_load
(call)|         1|  2.21729e-05|  2.21729e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
     5|         1|  9.25064e-05|  9.25064e-05|  0.00%|from MODULES.namedtuple import *
(call)|         1|  3.74317e-05|  3.74317e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
     6|         1|  5.19753e-05|  5.19753e-05|  0.00%|from typing import Optional
(call)|         1|  2.14577e-05|  2.14577e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
     7|         0|            0|            0|  0.00%|
     8|         0|            0|            0|  0.00%|
     9|         1|  1.12057e-05|  1.12057e-05|  0.00%|def create_ckpt(model: torch.nn.Module,
    10|         0|            0|            0|  0.00%|                optimizer: Optional[torch.optim.Optimizer] = None,
    11|         0|            0|            0|  0.00%|                history_dict: Optional[dict] = None,
    12|         0|            0|            0|  0.00%|                hyperparams_dict: Optional[dict] = None,
    13|         1|   0.00013876|   0.00013876|  0.00%|                epoch: Optional[int] = None) -> dict:\
(call)|         4|    0.0010457|  0.000261426|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
    14|         0|            0|            0|  0.00%|
    15|         1|  1.07288e-05|  1.07288e-05|  0.00%|    all_member_var = model.__dict__
    16|         1|  5.48363e-06|  5.48363e-06|  0.00%|    member_var_to_save = {}
    17|        15|  6.12736e-05|   4.0849e-06|  0.00%|    for k, v in all_member_var.items():
    18|        14|  5.43594e-05|  3.88282e-06|  0.00%|        if not k.startswith("_") and k != 'training':
    19|         5|  3.29018e-05|  6.58035e-06|  0.00%|            member_var_to_save[k] = v
    20|         0|            0|            0|  0.00%|
    21|         1|  3.33786e-06|  3.33786e-06|  0.00%|    ckpt = {'model_member_var': member_var_to_save,
    22|         1|  2.02656e-05|  2.02656e-05|  0.00%|            'model_state_dict': model.state_dict(),
(call)|         1|    0.0108225|    0.0108225|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:681 state_dict
    23|         1|  7.86781e-06|  7.86781e-06|  0.00%|            'optimizer_state_dict': None if (optimizer is None) else optimizer.state_dict(),
    24|         1|  2.59876e-05|  2.59876e-05|  0.00%|            'history_dict': history_dict,
    25|         1|  5.48363e-06|  5.48363e-06|  0.00%|            'hyperparam_dict': hyperparams_dict,
    26|         1|  5.96046e-06|  5.96046e-06|  0.00%|            'epoch': epoch}
    27|         0|            0|            0|  0.00%|
    28|         1|  5.24521e-06|  5.24521e-06|  0.00%|    return ckpt
    29|         0|            0|            0|  0.00%|
    30|         0|            0|            0|  0.00%|
    31|         1|  2.16961e-05|  2.16961e-05|  0.00%|def ckpt2file(ckpt: dict, path: str):
    32|         0|            0|            0|  0.00%|    torch.save(ckpt, path)
    33|         0|            0|            0|  0.00%|
    34|         0|            0|            0|  0.00%|
    35|         1|  5.07832e-05|  5.07832e-05|  0.00%|def file2ckpt(path: str, device: Optional[str] = None):
(call)|         1|   3.0756e-05|   3.0756e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
    36|         0|            0|            0|  0.00%|    """ wrapper around torch.load """
    37|         0|            0|            0|  0.00%|    if device is None:
    38|         0|            0|            0|  0.00%|        ckpt = torch.load(path)
    39|         0|            0|            0|  0.00%|    elif device == 'cuda':
    40|         0|            0|            0|  0.00%|        ckpt = torch.load(path, map_location="cuda:0")
    41|         0|            0|            0|  0.00%|    elif device == 'cpu':
    42|         0|            0|            0|  0.00%|        ckpt = torch.load(path, map_location=torch.device('cpu'))
    43|         0|            0|            0|  0.00%|    else:
    44|         0|            0|            0|  0.00%|        raise Exception("device is not recognized")
    45|         0|            0|            0|  0.00%|    return ckpt
    46|         0|            0|            0|  0.00%|
    47|         0|            0|            0|  0.00%|
    48|         0|            0|            0|  0.00%|def load_from_ckpt(ckpt,
    49|         0|            0|            0|  0.00%|                   model: Optional[torch.nn.Module] = None,
    50|         0|            0|            0|  0.00%|                   optimizer: Optional[torch.optim.Optimizer] = None,
    51|         1|  8.41618e-05|  8.41618e-05|  0.00%|                   overwrite_member_var: bool = False):
(call)|         2|  0.000900984|  0.000450492|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
    52|         0|            0|            0|  0.00%|
    53|         0|            0|            0|  0.00%|    device = torch.device('cuda') if torch.cuda.is_available() else torch.device('cpu')
    54|         0|            0|            0|  0.00%|
    55|         0|            0|            0|  0.00%|    if model is not None:
    56|         0|            0|            0|  0.00%|
    57|         0|            0|            0|  0.00%|        # load member variables
    58|         0|            0|            0|  0.00%|        if overwrite_member_var:
    59|         0|            0|            0|  0.00%|            for key, value in ckpt['model_member_var'].items():
    60|         0|            0|            0|  0.00%|                setattr(model, key, value)
    61|         0|            0|            0|  0.00%|
    62|         0|            0|            0|  0.00%|        # load the modules
    63|         0|            0|            0|  0.00%|        model.load_state_dict(ckpt['model_state_dict'])
    64|         0|            0|            0|  0.00%|        model.to(device)
    65|         0|            0|            0|  0.00%|
    66|         0|            0|            0|  0.00%|    if optimizer is not None:
    67|         0|            0|            0|  0.00%|        optimizer.load_state_dict(ckpt['optimizer_state_dict'])
    68|         0|            0|            0|  0.00%|
    69|         0|            0|            0|  0.00%|
    70|         2|  3.21865e-05|  1.60933e-05|  0.00%|def instantiate_optimizer(model: torch.nn.Module,
    71|         1|  2.12193e-05|  2.12193e-05|  0.00%|                          dict_params_optimizer: dict) -> torch.optim.Optimizer:
    72|         0|            0|            0|  0.00%|
    73|         0|            0|            0|  0.00%|    # split the parameters between GECO and NOT_GECO
    74|         1|  7.62939e-06|  7.62939e-06|  0.00%|    geco_params, similarity_params, other_params = [], [], []
    75|        85|   0.00099802|  1.17414e-05|  0.00%|    for name, param in model.named_parameters():
(call)|        85|    0.0501871|  0.000590437|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:887 named_parameters
    76|        84|  0.000375271|  4.46751e-06|  0.00%|        if name.startswith("geco"):
    77|         2|  7.39098e-06|  3.69549e-06|  0.00%|            geco_params.append(param)
    78|        82|  0.000326633|  3.98333e-06|  0.00%|        elif name.startswith("similarity"):
    79|         0|            0|            0|  0.00%|            similarity_params.append(param)
    80|         0|            0|            0|  0.00%|        else:
    81|        82|  0.000316381|  3.85831e-06|  0.00%|            other_params.append(param)
    82|         0|            0|            0|  0.00%|
    83|         1|   1.3113e-05|   1.3113e-05|  0.00%|    if dict_params_optimizer["type"] == "adam":
    84|         1|  2.67029e-05|  2.67029e-05|  0.00%|        optimizer = torch.optim.Adam([{'params': geco_params, 'lr': dict_params_optimizer["base_lr_geco"],
    85|         1|  2.45571e-05|  2.45571e-05|  0.00%|                                       'betas': dict_params_optimizer["betas_geco"]},
    86|         1|  5.48363e-06|  5.48363e-06|  0.00%|                                      {'params': similarity_params, 'lr': dict_params_optimizer["base_lr_similarity"],
    87|         1|  5.24521e-06|  5.24521e-06|  0.00%|                                       'betas': dict_params_optimizer["betas_similarity"]},
    88|         1|   6.4373e-06|   6.4373e-06|  0.00%|                                      {'params': other_params, 'lr': dict_params_optimizer["base_lr"],
    89|         1|  5.48363e-06|  5.48363e-06|  0.00%|                                       'betas': dict_params_optimizer["betas"]}],
    90|         1|  5.00679e-06|  5.00679e-06|  0.00%|                                     eps=dict_params_optimizer["eps"],
    91|         1|  3.38554e-05|  3.38554e-05|  0.00%|                                     weight_decay=dict_params_optimizer["weight_decay"])
(call)|         1|    0.0027132|    0.0027132|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/optim/adam.py:30 __init__
    92|         0|            0|            0|  0.00%|
    93|         0|            0|            0|  0.00%|    elif dict_params_optimizer["type"] == "SGD":
    94|         0|            0|            0|  0.00%|        optimizer = torch.optim.SGD([{'params': geco_params, 'lr': dict_params_optimizer["base_lr_geco"]},
    95|         0|            0|            0|  0.00%|                                     {'params': similarity_params, 'lr': dict_params_optimizer["base_lr_similarity"]},
    96|         0|            0|            0|  0.00%|                                     {'params': other_params, 'lr': dict_params_optimizer["base_lr"]}],
    97|         0|            0|            0|  0.00%|                                    weight_decay=dict_params_optimizer["weight_decay"])
    98|         0|            0|            0|  0.00%|    else:
    99|         0|            0|            0|  0.00%|        raise Exception
   100|         1|  5.96046e-06|  5.96046e-06|  0.00%|    return optimizer
   101|         0|            0|            0|  0.00%|
   102|         0|            0|            0|  0.00%|
   103|         2|  2.88486e-05|  1.44243e-05|  0.00%|def instantiate_scheduler(optimizer: torch.optim.Optimizer,
   104|         1|  2.00272e-05|  2.00272e-05|  0.00%|                          dict_params_scheduler: dict) -> torch.optim.lr_scheduler:
   105|         1|  6.67572e-06|  6.67572e-06|  0.00%|    if dict_params_scheduler["scheduler_type"] == "step_LR":
   106|         1|  1.81198e-05|  1.81198e-05|  0.00%|        scheduler = torch.optim.lr_scheduler.StepLR(optimizer,
   107|         1|  5.48363e-06|  5.48363e-06|  0.00%|                                                    step_size=dict_params_scheduler["scheduler_step_size"],
   108|         1|  4.52995e-06|  4.52995e-06|  0.00%|                                                    gamma=dict_params_scheduler["scheduler_gamma"],
   109|         1|  2.57492e-05|  2.57492e-05|  0.00%|                                                    last_epoch=-1)
(call)|         1|  0.000885725|  0.000885725|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/optim/lr_scheduler.py:343 __init__
   110|         0|            0|            0|  0.00%|    else:
   111|         0|            0|            0|  0.00%|        raise Exception
   112|         1|  5.00679e-06|  5.00679e-06|  0.00%|    return scheduler
   113|         0|            0|            0|  0.00%|
   114|         0|            0|            0|  0.00%|
   115|         3|  0.000145435|  4.84784e-05|  0.00%|class CompositionalVae(torch.nn.Module):
(call)|         1|   0.00106072|   0.00106072|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/vae_model.py:115 CompositionalVae
   116|         0|            0|            0|  0.00%|
   117|         2|  2.43187e-05|  1.21593e-05|  0.00%|    def __init__(self, params: dict) -> None:
   118|         1|  4.26769e-05|  4.26769e-05|  0.00%|        super().__init__()
(call)|         1|  0.000658274|  0.000658274|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:71 __init__
   119|         0|            0|            0|  0.00%|
   120|         0|            0|            0|  0.00%|        # Instantiate all the modules
   121|         1|  4.45843e-05|  4.45843e-05|  0.00%|        self.inference_and_generator = Inference_and_Generation(params)
(call)|         1|     0.516033|     0.516033|  0.11%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/vae_parts.py:34 __init__
(call)|         1|  7.65324e-05|  7.65324e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
   122|         0|            0|            0|  0.00%|        # self.ma_calculator = Moving_Average_Calculator(beta=0.999)  # i.e. average over the last 100 mini-batches
   123|         0|            0|            0|  0.00%|
   124|         0|            0|            0|  0.00%|        # Raw image parameters
   125|         1|  3.29018e-05|  3.29018e-05|  0.00%|        self.dict_soft_constraints = params["soft_constraint"]
(call)|         1|  4.55379e-05|  4.55379e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
   126|         1|  1.83582e-05|  1.83582e-05|  0.00%|        self.nms_dict = params["nms"]
(call)|         1|  4.41074e-05|  4.41074e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
   127|         1|  7.62939e-06|  7.62939e-06|  0.00%|        self.sigma_fg = torch.nn.Parameter(data=torch.tensor(params["GECO_loss"]["fg_std"],
   128|         1|  5.36442e-05|  5.36442e-05|  0.00%|                                                             dtype=torch.float)[..., None, None],  # singleton w,h
   129|         1|  3.17097e-05|  3.17097e-05|  0.00%|                                           requires_grad=False)
(call)|         1|  2.57492e-05|  2.57492e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/parameter.py:23 __new__
(call)|         1|  0.000165939|  0.000165939|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
   130|         1|  6.91414e-06|  6.91414e-06|  0.00%|        self.sigma_bg = torch.nn.Parameter(data=torch.tensor(params["GECO_loss"]["bg_std"],
   131|         1|  2.52724e-05|  2.52724e-05|  0.00%|                                                             dtype=torch.float)[..., None, None],  # singleton w,h
   132|         1|  2.98023e-05|  2.98023e-05|  0.00%|                                           requires_grad=False)
(call)|         1|  1.28746e-05|  1.28746e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/parameter.py:23 __new__
(call)|         1|  0.000162125|  0.000162125|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
   133|         0|            0|            0|  0.00%|
   134|         1|  1.50204e-05|  1.50204e-05|  0.00%|        self.geco_dict = params["GECO_loss"]
(call)|         1|  4.60148e-05|  4.60148e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
   135|         1|  1.50204e-05|  1.50204e-05|  0.00%|        self.input_img_dict = params["input_image"]
(call)|         1|  5.43594e-05|  5.43594e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
   136|         0|            0|            0|  0.00%|
   137|         1|  1.28746e-05|  1.28746e-05|  0.00%|        self.geco_sparsity_factor = torch.nn.Parameter(data=torch.tensor(self.geco_dict["factor_sparsity_range"][1],
   138|         1|  4.41074e-05|  4.41074e-05|  0.00%|                                                                         dtype=torch.float), requires_grad=True)
(call)|         1|  1.50204e-05|  1.50204e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/parameter.py:23 __new__
(call)|         1|  0.000163078|  0.000163078|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
   139|         1|  7.15256e-06|  7.15256e-06|  0.00%|        self.geco_balance_factor = torch.nn.Parameter(data=torch.tensor(self.geco_dict["factor_balance_range"][1],
   140|         1|  3.43323e-05|  3.43323e-05|  0.00%|                                                                        dtype=torch.float), requires_grad=True)
(call)|         1|  2.88486e-05|  2.88486e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/parameter.py:23 __new__
(call)|         1|  0.000180006|  0.000180006|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
   141|         0|            0|            0|  0.00%|
   142|         0|            0|            0|  0.00%|        # Put everything on the cude if cuda available
   143|         1|  1.74046e-05|  1.74046e-05|  0.00%|        if torch.cuda.is_available():
(call)|         1|  2.59876e-05|  2.59876e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/cuda/__init__.py:33 is_available
   144|         1|   2.3365e-05|   2.3365e-05|  0.00%|            self.cuda()
(call)|         1|    0.0859194|    0.0859194|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:293 cuda
   145|         0|            0|            0|  0.00%|
   146|        23|  0.000196695|  8.55197e-06|  0.00%|    def compute_regularizations(self,
   147|         0|            0|            0|  0.00%|                                inference: Inference,
   148|         0|            0|            0|  0.00%|                                verbose: bool = False,
   149|         1|  1.74046e-05|  1.74046e-05|  0.00%|                                chosen: int = None) -> RegMiniBatch:
   150|         0|            0|            0|  0.00%|        """ Compute the mean regularization over each image.
   151|         0|            0|            0|  0.00%|            These regularizations are written only in terms of p.detached and big_masks.
   152|         0|            0|            0|  0.00%|            1. fg_pixel_fraction determines the overall foreground budget
   153|         0|            0|            0|  0.00%|            2. overlap make sure that mask do not overlap
   154|         0|            0|            0|  0.00%|        """
   155|         0|            0|            0|  0.00%|
   156|         0|            0|            0|  0.00%|        # 1. Masks should not overlap:
   157|         0|            0|            0|  0.00%|        # A = (x1+x2+x3)^2 = x1^2 + x2^2 + x3^2 + 2 x1*x2 + 2 x1*x3 + 2 x2*x3
   158|         0|            0|            0|  0.00%|        # Therefore sum_{i \ne j} x_i x_j = x1*x2 + x1*x3 + x2*x3 = 0.5 * [(sum xi)^2 - (sum xi^2)]
   159|         0|            0|            0|  0.00%|        # print(inference.big_mask_NON_interacting.shape)  # n_box_few, batch, 1, w_big, h_big
   160|         0|            0|            0|  0.00%|        # print(inference.logit_few.shape)                 # n_box_few, batch
   161|         0|            0|            0|  0.00%|        # print(inference.sample_c.shape)                  # n_box_few, batch
   162|         0|            0|            0|  0.00%|
   163|        23|    0.0020721|  9.00911e-05|  0.00%|        x = inference.sample_c[..., None, None, None] * inference.big_mask_NON_interacting
   164|        23|   0.00125599|  5.46082e-05|  0.00%|        sum_x = torch.sum(x, dim=-5)  # sum over boxes
   165|        23|   0.00173569|  7.54647e-05|  0.00%|        sum_x_squared = torch.sum(x * x, dim=-5)
   166|        23|   0.00236058|  0.000102634|  0.00%|        tmp_value = (sum_x * sum_x - sum_x_squared).clamp(min=0)
   167|        23|   0.00203586|  8.85155e-05|  0.00%|        overlap = 0.5 * torch.sum(tmp_value, dim=(-1, -2, -3))  # sum over ch, w, h
   168|        23|  0.000346661|  1.50722e-05|  0.00%|        cost_overlap = sample_from_constraints_dict(dict_soft_constraints=self.dict_soft_constraints,
   169|        23|  0.000112295|   4.8824e-06|  0.00%|                                                    var_name="overlap",
   170|        23|  0.000106812|  4.64398e-06|  0.00%|                                                    var_value=overlap,
   171|        23|   0.00012207|   5.3074e-06|  0.00%|                                                    verbose=verbose,
   172|        23|  0.000590324|  2.56663e-05|  0.00%|                                                    chosen=chosen)
(call)|        23|   0.00580597|  0.000252433|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities.py:262 sample_from_constraints_dict
   173|         0|            0|            0|  0.00%|
   174|         0|            0|            0|  0.00%|        # Mask should have a min and max volume
   175|        23|   0.00118709|  5.16124e-05|  0.00%|        volume_mask_absolute = torch.sum(inference.big_mask, dim=(-1, -2, -3))  # sum over ch,w,h
   176|        23|  0.000237465|  1.03246e-05|  0.00%|        cost_volume_absolute = sample_from_constraints_dict(dict_soft_constraints=self.dict_soft_constraints,
   177|        23|  0.000133276|  5.79461e-06|  0.00%|                                                            var_name="mask_volume_absolute",
   178|        23|  0.000105858|  4.60252e-06|  0.00%|                                                            var_value=volume_mask_absolute,
   179|        23|  9.75132e-05|   4.2397e-06|  0.00%|                                                            verbose=verbose,
   180|        23|  0.000510931|  2.22144e-05|  0.00%|                                                            chosen=chosen)
(call)|        23|    0.0153694|  0.000668235|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities.py:262 sample_from_constraints_dict
   181|        23|    0.0262315|    0.0011405|  0.01%|        cost_volume_minibatch = (cost_volume_absolute * inference.sample_c).sum(dim=-2).mean()  # sum boxes, mean batch_size
   182|        23|  0.000976324|  4.24489e-05|  0.00%|        return RegMiniBatch(reg_overlap=cost_overlap.mean(),
   183|        23|  0.000626802|  2.72523e-05|  0.00%|                            reg_area_obj=cost_volume_minibatch)
(call)|        23|  0.000303268|  1.31856e-05|  0.00%|# <string>_123:1 __new__
   184|         0|            0|            0|  0.00%|
   185|        47|  0.000257015|  5.46841e-06|  0.00%|    @staticmethod
   186|         1|   1.7643e-05|   1.7643e-05|  0.00%|    def NLL_MSE(output: torch.tensor, target: torch.tensor, sigma: torch.tensor) -> torch.Tensor:
   187|        46|   0.00478745|  0.000104075|  0.00%|        return ((output - target) / sigma).pow(2)
   188|         0|            0|            0|  0.00%|
   189|        23|  0.000335693|  1.45954e-05|  0.00%|    def compute_metrics(self,
   190|         1|  2.19345e-05|  2.19345e-05|  0.00%|                        imgs_in: torch.Tensor,
   191|         1|   1.5974e-05|   1.5974e-05|  0.00%|                        inference: Inference,
   192|         1|  1.90735e-05|  1.90735e-05|  0.00%|                        regularizations: RegMiniBatch) -> MetricMiniBatch:
   193|         0|            0|            0|  0.00%|
   194|         0|            0|            0|  0.00%|        # Preparation
   195|        23|  0.000319958|  1.39112e-05|  0.00%|        batch_size, ch, w, h = imgs_in.shape
   196|         0|            0|            0|  0.00%|        # p_times_area_map = inference.p_map * inference.area_map
   197|        23|   0.00189352|   8.2327e-05|  0.00%|        mixing_k = inference.big_mask * inference.sample_c[..., None, None, None]
   198|        23|   0.00124288|  5.40381e-05|  0.00%|        mixing_fg = torch.sum(mixing_k, dim=-5)  # sum over boxes
   199|        23|   0.00170779|  7.42518e-05|  0.00%|        mixing_bg = torch.ones_like(mixing_fg) - mixing_fg
   200|        23|   0.00161266|  7.01158e-05|  0.00%|        fg_fraction = torch.mean(mixing_fg)  # mean over batch_size
   201|        23|  0.000392675|  1.70728e-05|  0.00%|        assert len(mixing_fg.shape) == 4  # batch, ch=1, w, h
   202|         0|            0|            0|  0.00%|
   203|         0|            0|            0|  0.00%|        # 0. Get the regularization
   204|         0|            0|            0|  0.00%|
   205|         0|            0|            0|  0.00%|        # 1. Observation model
   206|         0|            0|            0|  0.00%|        # if the observation_std is fixed then normalization 1.0/sqrt(2*pi*sigma^2) is irrelevant.
   207|         0|            0|            0|  0.00%|        # We are better off using MeanSquareError metric
   208|        23|   0.00108218|  4.70514e-05|  0.00%|        mse_k = CompositionalVae.NLL_MSE(output=inference.big_img, target=imgs_in, sigma=self.sigma_fg)
(call)|        23|  0.000627518|  2.72834e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:580 __getattr__
(call)|        23|   0.00290728|  0.000126403|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/vae_model.py:185 NLL_MSE
   209|        23|  0.000228882|  9.95138e-06|  0.00%|        mse_bg = CompositionalVae.NLL_MSE(output=inference.big_bg, target=imgs_in,
   210|        23|  0.000895739|  3.89452e-05|  0.00%|                                          sigma=self.sigma_bg)  # batch_size, ch, w, h
(call)|        23|  0.000517368|  2.24943e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:580 __getattr__
(call)|        23|   0.00212097|  9.22162e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/vae_model.py:185 NLL_MSE
   211|        23|   0.00376892|  0.000163866|  0.00%|        mse_av = (torch.sum(mixing_k * mse_k, dim=-5) + mixing_bg * mse_bg).mean()  # mean over batch_size, ch, w, h
   212|         0|            0|            0|  0.00%|
   213|         0|            0|            0|  0.00%|        # 2. Sparsity should encourage:
   214|         0|            0|            0|  0.00%|        # 1. small probabilities
   215|         0|            0|            0|  0.00%|        # 2. tight bounding boxes
   216|         0|            0|            0|  0.00%|        # 3. tight masks
   217|         0|            0|            0|  0.00%|        # The three terms take care of all these requirement.
   218|        23|  0.000449657|  1.95503e-05|  0.00%|        n_boxes = inference.sample_c.shape[-2]
   219|        23|  0.000944376|  4.10598e-05|  0.00%|        area_boxes = inference.sample_bb.bw * inference.sample_bb.bh
   220|        23|   0.00231647|  0.000100716|  0.00%|        sparsity_mask = torch.sum(mixing_fg) / torch.numel(mixing_fg)  # strictly smaller than 1
   221|        23|   0.00242758|  0.000105547|  0.00%|        sparsity_box = torch.sum(area_boxes * inference.sample_c) / torch.numel(mixing_fg)
   222|        23|   0.00174546|  7.58897e-05|  0.00%|        sparsity_prob = torch.sum(inference.sample_c_map) / (batch_size * n_boxes)
   223|        23|   0.00134134|  5.83193e-05|  0.00%|        sparsity_av = sparsity_mask + sparsity_box + sparsity_prob
   224|         0|            0|            0|  0.00%|
   225|         0|            0|            0|  0.00%|        # 3. compute KL
   226|         0|            0|            0|  0.00%|        # TODO: Can add KL background and make sure that all KL have the same order by adding self-balancing hyperparameters.
   227|        23|   0.00177431|   7.7144e-05|  0.00%|        kl_zinstance = torch.sum(inference.kl_zinstance) / batch_size
   228|        23|    0.0017395|  7.56305e-05|  0.00%|        kl_zwhere = torch.sum(inference.kl_zwhere) / batch_size
   229|        23|   0.00173521|  7.54439e-05|  0.00%|        kl_logit = torch.sum(inference.kl_logit) / batch_size
   230|        23|   0.00141239|  6.14083e-05|  0.00%|        kl_av = kl_zinstance + kl_zwhere + kl_logit
   231|         0|            0|            0|  0.00%|
   232|         0|            0|            0|  0.00%|        # 6. Note that I clamp in_place
   233|        23|  0.000671864|  2.92115e-05|  0.00%|        with torch.no_grad():
(call)|        23|  0.000522852|  2.27327e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/grad_mode.py:65 __enter__
   234|        23|  0.000726938|   3.1606e-05|  0.00%|            f_balance = self.geco_balance_factor.data.clamp_(min=min(self.geco_dict["factor_balance_range"]),
(call)|        23|  0.000567198|  2.46608e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:580 __getattr__
   235|        23|  0.000912905|  3.96915e-05|  0.00%|                                                             max=max(self.geco_dict["factor_balance_range"]))
   236|        23|  0.000686169|  2.98334e-05|  0.00%|            f_sparsity = self.geco_sparsity_factor.data.clamp_(min=min(self.geco_dict["factor_sparsity_range"]),
(call)|        23|  0.000479221|  2.08357e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:580 __getattr__
   237|        23|  0.000670433|  2.91493e-05|  0.00%|                                                               max=max(self.geco_dict["factor_sparsity_range"]))
   238|        23|   0.00197339|  8.57996e-05|  0.00%|            one_minus_f_balance = torch.ones_like(f_balance) - f_balance
(call)|        23|   0.00121069|  5.26387e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/grad_mode.py:69 __exit__
   239|         0|            0|            0|  0.00%|
   240|         0|            0|            0|  0.00%|        # 6. Loss_VAE
   241|         0|            0|            0|  0.00%|        # TODO:
   242|         0|            0|            0|  0.00%|        # 1. try: loss_vae = f_balance * (nll_av + reg_av) + (1.0-f_balance) * (kl_av + f_sparsity * sparsity_av)
   243|         0|            0|            0|  0.00%|        # 2. move reg_av to the other size, i.e. proportional to 1-f_balance
   244|        23|  0.000497341|  2.16235e-05|  0.00%|        reg_av = regularizations.total()
(call)|        23|   0.00164604|   7.1567e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/namedtuple.py:279 total
   245|         0|            0|            0|  0.00%|        loss_vae = f_sparsity * sparsity_av + \
   246|        23|   0.00247741|  0.000107713|  0.00%|                   f_balance * (mse_av + reg_av) + \
   247|        23|   0.00142694|  6.20407e-05|  0.00%|                   one_minus_f_balance * kl_av
   248|         0|            0|            0|  0.00%|
   249|         0|            0|            0|  0.00%|        # GECO BUSINESS
   250|        23|  0.000281096|  1.22215e-05|  0.00%|        if self.geco_dict["is_active"]:
   251|        23|  0.000455856|  1.98198e-05|  0.00%|            with torch.no_grad():
(call)|        23|  0.000308752|   1.3424e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/grad_mode.py:65 __enter__
   252|         0|            0|            0|  0.00%|                # If fg_fraction_av > max(target) -> tmp1 > 0 -> delta_1 < 0 -> too much fg -> increase sparsity
   253|         0|            0|            0|  0.00%|                # If fg_fraction_av < min(target) -> tmp2 > 0 -> delta_1 > 0 -> too little fg -> decrease sparsity
   254|        23|   0.00179291|  7.79525e-05|  0.00%|                tmp1 = (fg_fraction - max(self.geco_dict["target_fg_fraction"])).clamp(min=0)
   255|        23|   0.00134206|  5.83504e-05|  0.00%|                tmp2 = (min(self.geco_dict["target_fg_fraction"]) - fg_fraction).clamp(min=0)
(call)|        23|    0.0011785|  5.12393e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/tensor.py:402 __rsub__
   256|        23|   0.00119591|   5.1996e-05|  0.00%|                delta_1 = (tmp2 - tmp1).requires_grad_(False).to(loss_vae.device)
   257|         0|            0|            0|  0.00%|
   258|         0|            0|            0|  0.00%|                # If nll_av > max(target) -> tmp3 > 0 -> delta_2 < 0 -> bad reconstruction -> increase f_balance
   259|         0|            0|            0|  0.00%|                # If nll_av < min(target) -> tmp4 > 0 -> delta_2 > 0 -> too good reconstruction -> decrease f_balance
   260|        23|   0.00163722|  7.11835e-05|  0.00%|                tmp3 = (mse_av - max(self.geco_dict["target_mse"])).clamp(min=0)
   261|        23|   0.00131679|  5.72516e-05|  0.00%|                tmp4 = (min(self.geco_dict["target_mse"]) - mse_av).clamp(min=0)
(call)|        23|    0.0010376|  4.51129e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/tensor.py:402 __rsub__
   262|        23|   0.00123835|  5.38411e-05|  0.00%|                delta_2 = (tmp4 - tmp3).requires_grad_(False).to(loss_vae.device)
(call)|        23|  0.000854254|  3.71415e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/grad_mode.py:69 __exit__
   263|         0|            0|            0|  0.00%|
   264|        23|   0.00141335|  6.14498e-05|  0.00%|            loss_1 = self.geco_sparsity_factor * delta_1
(call)|        23|  0.000524521|  2.28053e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:580 __getattr__
   265|        23|   0.00128198|  5.57381e-05|  0.00%|            loss_2 = self.geco_balance_factor * delta_2
(call)|        23|  0.000452995|  1.96954e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:580 __getattr__
   266|        23|   0.00239205|  0.000104002|  0.00%|            loss_av = loss_vae + loss_1 + loss_2 - (loss_1 + loss_2).detach()
   267|         0|            0|            0|  0.00%|        else:
   268|         0|            0|            0|  0.00%|            delta_1 = torch.tensor(0.0, dtype=loss_vae.dtype, device=loss_vae.device)
   269|         0|            0|            0|  0.00%|            delta_2 = torch.tensor(0.0, dtype=loss_vae.dtype, device=loss_vae.device)
   270|         0|            0|            0|  0.00%|            loss_av = loss_vae
   271|         0|            0|            0|  0.00%|
   272|         0|            0|            0|  0.00%|        # add everything you want as long as there is one loss
   273|        23|   0.00028944|  1.25844e-05|  0.00%|        return MetricMiniBatch(loss=loss_av,
   274|        23|      2.20605|    0.0959153|  0.46%|                               mse_tot=mse_av.detach().item(),
   275|        23|   0.00252724|   0.00010988|  0.00%|                               reg_tot=reg_av.detach().item(),
   276|        23|   0.00168252|   7.3153e-05|  0.00%|                               kl_tot=kl_av.detach().item(),
   277|        23|   0.00086236|  3.74939e-05|  0.00%|                               sparsity_tot=sparsity_av.detach().item(),
   278|         0|            0|            0|  0.00%|
   279|        23|  0.000748158|  3.25286e-05|  0.00%|                               kl_instance=kl_zinstance.detach().item(),
   280|        23|  0.000799894|   3.4778e-05|  0.00%|                               kl_where=kl_zwhere.detach().item(),
   281|        23|  0.000748873|  3.25597e-05|  0.00%|                               kl_logit=kl_logit.detach().item(),
   282|        23|  0.000711679|  3.09426e-05|  0.00%|                               sparsity_mask=sparsity_mask.detach().item(),
   283|        23|  0.000754833|  3.28188e-05|  0.00%|                               sparsity_box=sparsity_box.detach().item(),
   284|        23|  0.000740528|  3.21969e-05|  0.00%|                               sparsity_prob=sparsity_prob.detach().item(),
   285|        23|  0.000869274|  3.77945e-05|  0.00%|                               reg_overlap=regularizations.reg_overlap.detach().item(),
   286|        23|  0.000813007|  3.53481e-05|  0.00%|                               reg_area_obj=regularizations.reg_area_obj.detach().item(),
   287|         0|            0|            0|  0.00%|
   288|        23|  0.000781536|  3.39798e-05|  0.00%|                               fg_fraction=fg_fraction.detach().item(),
   289|        23|  0.000875711|  3.80744e-05|  0.00%|                               geco_sparsity=f_sparsity.detach().item(),
   290|        23|   0.00078392|  3.40835e-05|  0.00%|                               geco_balance=f_balance.detach().item(),
   291|        23|  0.000756979|  3.29121e-05|  0.00%|                               delta_1=delta_1.detach().item(),
   292|        23|  0.000790119|   3.4353e-05|  0.00%|                               delta_2=delta_2.detach().item(),
   293|         0|            0|            0|  0.00%|
   294|        23|   0.00201654|  8.76758e-05|  0.00%|                               similarity_sigma2=inference.similarity_sigma2.detach().cpu().numpy(),
   295|        23|   0.00191998|  8.34776e-05|  0.00%|                               similarity_weights=inference.similarity_weights.detach().cpu().numpy())
(call)|        23|  0.000567436|  2.46711e-05|  0.00%|# <string>_124:1 __new__
   296|         0|            0|            0|  0.00%|
   297|         1|  1.88351e-05|  1.88351e-05|  0.00%|    @staticmethod
   298|         0|            0|            0|  0.00%|    def compute_sparse_similarity_matrix(mixing_k: torch.tensor,
   299|         0|            0|            0|  0.00%|                                         batch_of_index: torch.tensor,
   300|         0|            0|            0|  0.00%|                                         max_index: int,
   301|         0|            0|            0|  0.00%|                                         radius_nn: int,
   302|         1|  2.47955e-05|  2.47955e-05|  0.00%|                                         min_threshold: float = 0.01) -> torch.sparse.FloatTensor:
   303|         0|            0|            0|  0.00%|        """ Compute the similarity between two pixels by computing the product of mixing_k
   304|         0|            0|            0|  0.00%|            describing the probability that each pixel belong to a given foreground instance
   305|         0|            0|            0|  0.00%|            If the similarity is less than min_threshold the value is not recorded (i.e. effectively zero)
   306|         0|            0|            0|  0.00%|            to save memory.
   307|         0|            0|            0|  0.00%|
   308|         0|            0|            0|  0.00%|            INPUT: mixing_k of shape --> n_boxes, batch_shape, 1, w, h
   309|         0|            0|            0|  0.00%|            OUTPUT: sparse tensor fo size (max_index, max_index)
   310|         0|            0|            0|  0.00%|        """
   311|         0|            0|            0|  0.00%|        with torch.no_grad():
   312|         0|            0|            0|  0.00%|            # start_time = time.time()
   313|         0|            0|            0|  0.00%|            n_boxes, batch_shape, ch_in, w, h = mixing_k.shape
   314|         0|            0|            0|  0.00%|            assert ch_in == 1
   315|         0|            0|            0|  0.00%|            assert (batch_shape, 1, w, h) == batch_of_index.shape
   316|         0|            0|            0|  0.00%|
   317|         0|            0|            0|  0.00%|            # Pad width and height with zero before rolling to avoid spurious connections due to PBC
   318|         0|            0|            0|  0.00%|            pad = radius_nn + 1
   319|         0|            0|            0|  0.00%|            pad_mixing_k = F.pad(mixing_k, pad=[pad, pad, pad, pad], mode="constant", value=0.0)
   320|         0|            0|            0|  0.00%|            pad_index = F.pad(batch_of_index, pad=[pad, pad, pad, pad], mode="constant", value=-1)
   321|         0|            0|            0|  0.00%|            row = batch_of_index[:, 0]  # shape: batch, w, h
   322|         0|            0|            0|  0.00%|            row_ge_0 = (row >= 0)
   323|         0|            0|            0|  0.00%|
   324|         0|            0|            0|  0.00%|            sparse_similarity = torch.sparse.FloatTensor(max_index, max_index).to(mixing_k.device)
   325|         0|            0|            0|  0.00%|            for pad_mixing_k_shifted, pad_index_shifted in roller_2d(a=pad_mixing_k,
   326|         0|            0|            0|  0.00%|                                                                     b=pad_index,
   327|         0|            0|            0|  0.00%|                                                                     radius=radius_nn):
   328|         0|            0|            0|  0.00%|                v = (pad_mixing_k * pad_mixing_k_shifted).sum(dim=-5)[:, 0, pad:(pad + w),
   329|         0|            0|            0|  0.00%|                    pad:(pad + h)]  # shape: batch, w, h
   330|         0|            0|            0|  0.00%|                col = pad_index_shifted[:, 0, pad:(pad + w), pad:(pad + h)]  # shape: batch, w, h
   331|         0|            0|            0|  0.00%|
   332|         0|            0|            0|  0.00%|                mask = (v > min_threshold) * (col >= 0) * row_ge_0
   333|         0|            0|            0|  0.00%|
   334|         0|            0|            0|  0.00%|                index_tensor = torch.stack((row[mask], col[mask]), dim=0)
   335|         0|            0|            0|  0.00%|                tmp_similarity = torch.sparse.FloatTensor(index_tensor, v[mask],
   336|         0|            0|            0|  0.00%|                                                          torch.Size([max_index, max_index]))
   337|         0|            0|            0|  0.00%|                sparse_similarity.add_(tmp_similarity)
   338|         0|            0|            0|  0.00%|                sparse_similarity = sparse_similarity.coalesce()
   339|         0|            0|            0|  0.00%|
   340|         0|            0|            0|  0.00%|            # print("similarity time", time.time()-start_time)
   341|         0|            0|            0|  0.00%|            return sparse_similarity
   342|         0|            0|            0|  0.00%|
   343|         1|  3.19481e-05|  3.19481e-05|  0.00%|    def segment(self, batch_imgs: torch.tensor,
   344|         0|            0|            0|  0.00%|                n_objects_max: Optional[int] = None,
   345|         0|            0|            0|  0.00%|                prob_corr_factor: Optional[float] = None,
   346|         0|            0|            0|  0.00%|                overlap_threshold: Optional[float] = None,
   347|         0|            0|            0|  0.00%|                noisy_sampling: bool = True,
   348|         0|            0|            0|  0.00%|                draw_boxes: bool = False,
   349|         0|            0|            0|  0.00%|                batch_of_index: Optional[torch.tensor] = None,
   350|         0|            0|            0|  0.00%|                max_index: Optional[int] = None,
   351|         1|  0.000114679|  0.000114679|  0.00%|                radius_nn: int = 5) -> Segmentation:
(call)|         5|  0.000185013|  3.70026e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
   352|         0|            0|            0|  0.00%|        """ Segment the batch of images """
   353|         0|            0|            0|  0.00%|
   354|         0|            0|            0|  0.00%|        # start_time = time.time()
   355|         1|   1.3113e-05|   1.3113e-05|  0.00%|        n_objects_max = self.input_img_dict["n_objects_max"] if n_objects_max is None else n_objects_max
   356|         1|  8.10623e-06|  8.10623e-06|  0.00%|        prob_corr_factor = getattr(self, "prob_corr_factor", 0.0) if prob_corr_factor is None else prob_corr_factor
   357|         1|  1.81198e-05|  1.81198e-05|  0.00%|        overlap_threshold = self.nms_dict["overlap_threshold"] if overlap_threshold is None else overlap_threshold
   358|         0|            0|            0|  0.00%|
   359|         1|  2.38419e-05|  2.38419e-05|  0.00%|        with torch.no_grad():
(call)|         1|  2.76566e-05|  2.76566e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/grad_mode.py:65 __enter__
   360|         1|  2.21729e-05|  2.21729e-05|  0.00%|            inference: Inference = self.inference_and_generator(imgs_in=batch_imgs,
(call)|         1|  6.22272e-05|  6.22272e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:580 __getattr__
   361|         1|  6.91414e-06|  6.91414e-06|  0.00%|                                                                generate_synthetic_data=False,
   362|         1|  6.67572e-06|  6.67572e-06|  0.00%|                                                                prob_corr_factor=prob_corr_factor,
   363|         1|  6.67572e-06|  6.67572e-06|  0.00%|                                                                overlap_threshold=overlap_threshold,
   364|         1|  2.24113e-05|  2.24113e-05|  0.00%|                                                                n_objects_max=n_objects_max,
   365|         1|  7.39098e-06|  7.39098e-06|  0.00%|                                                                topk_only=False,
   366|         1|  6.19888e-06|  6.19888e-06|  0.00%|                                                                noisy_sampling=noisy_sampling,
   367|         1|   6.4373e-06|   6.4373e-06|  0.00%|                                                                bg_is_zero=True,
   368|         1|  3.69549e-05|  3.69549e-05|  0.00%|                                                                bg_resolution=(1, 1))
(call)|         1|     0.229494|     0.229494|  0.05%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:540 __call__
   369|         0|            0|            0|  0.00%|
   370|         1|  8.67844e-05|  8.67844e-05|  0.00%|            mixing_k = inference.big_mask * inference.sample_c[..., None, None, None]
   371|         0|            0|            0|  0.00%|
   372|         0|            0|            0|  0.00%|            # Now compute fg_prob, integer_segmentation_mask, similarity
   373|         1|  5.65052e-05|  5.65052e-05|  0.00%|            most_likely_mixing, index = torch.max(mixing_k, dim=-5, keepdim=True)  # 1, batch_size, 1, w, h
   374|         1|  0.000103951|  0.000103951|  0.00%|            integer_mask = ((most_likely_mixing > 0.5) * (index + 1)).squeeze(-5).to(
(call)|         1|  7.03335e-05|  7.03335e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/tensor.py:25 wrapped
   375|         1|   6.8903e-05|   6.8903e-05|  0.00%|                dtype=torch.int32)  # bg = 0 fg = 1,2,3,...
   376|         0|            0|            0|  0.00%|
   377|         1|  4.19617e-05|  4.19617e-05|  0.00%|            fg_prob = torch.sum(mixing_k, dim=-5)  # sum over instances
   378|         0|            0|            0|  0.00%|
   379|         0|            0|            0|  0.00%|            bounding_boxes = draw_bounding_boxes(c=inference.sample_c,
   380|         0|            0|            0|  0.00%|                                                 bounding_box=inference.sample_bb,
   381|         0|            0|            0|  0.00%|                                                 width=integer_mask.shape[-2],
   382|         1|  1.04904e-05|  1.04904e-05|  0.00%|                                                 height=integer_mask.shape[-1]) if draw_boxes else None
   383|         0|            0|            0|  0.00%|
   384|         0|            0|            0|  0.00%|            # print("inference time", time.time()-start_time)
   385|         0|            0|            0|  0.00%|
   386|         1|  5.96046e-06|  5.96046e-06|  0.00%|            if batch_of_index is None:
   387|         1|  2.74181e-05|  2.74181e-05|  0.00%|                return Segmentation(raw_image=batch_imgs,
   388|         1|  5.48363e-06|  5.48363e-06|  0.00%|                                    fg_prob=fg_prob,
   389|         1|  6.19888e-06|  6.19888e-06|  0.00%|                                    integer_mask=integer_mask,
   390|         1|  5.48363e-06|  5.48363e-06|  0.00%|                                    bounding_boxes=bounding_boxes,
   391|         1|  4.88758e-05|  4.88758e-05|  0.00%|                                    similarity=None)
(call)|         1|  1.33514e-05|  1.33514e-05|  0.00%|# <string>_120:1 __new__
(call)|         1|  5.76973e-05|  5.76973e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/grad_mode.py:69 __exit__
   392|         0|            0|            0|  0.00%|
   393|         0|            0|            0|  0.00%|            else:
   394|         0|            0|            0|  0.00%|                max_index = torch.max(batch_of_index) if max_index is None else max_index
   395|         0|            0|            0|  0.00%|                similarity_matrix = CompositionalVae.compute_sparse_similarity_matrix(mixing_k=mixing_k,
   396|         0|            0|            0|  0.00%|                                                                                      batch_of_index=batch_of_index,
   397|         0|            0|            0|  0.00%|                                                                                      max_index=max_index,
   398|         0|            0|            0|  0.00%|                                                                                      radius_nn=radius_nn,
   399|         0|            0|            0|  0.00%|                                                                                      min_threshold=0.1)
   400|         0|            0|            0|  0.00%|                return Segmentation(raw_image=batch_imgs,
   401|         0|            0|            0|  0.00%|                                    fg_prob=fg_prob,
   402|         0|            0|            0|  0.00%|                                    integer_mask=integer_mask,
   403|         0|            0|            0|  0.00%|                                    bounding_boxes=bounding_boxes,
   404|         0|            0|            0|  0.00%|                                    similarity=SparseSimilarity(sparse_matrix=similarity_matrix,
   405|         0|            0|            0|  0.00%|                                                                index_matrix=None))
   406|         0|            0|            0|  0.00%|
   407|         0|            0|            0|  0.00%|    def segment_with_tiling(self,
   408|         0|            0|            0|  0.00%|                            single_img: torch.Tensor,
   409|         0|            0|            0|  0.00%|                            roi_mask: Optional[torch.Tensor],
   410|         0|            0|            0|  0.00%|                            crop_size: Optional[tuple] = None,
   411|         0|            0|            0|  0.00%|                            stride: Optional[tuple] = None,
   412|         0|            0|            0|  0.00%|                            n_objects_max_per_patch: Optional[int] = None,
   413|         0|            0|            0|  0.00%|                            prob_corr_factor: Optional[float] = None,
   414|         0|            0|            0|  0.00%|                            overlap_threshold: Optional[float] = None,
   415|         0|            0|            0|  0.00%|                            radius_nn: int = 5,
   416|         1|  0.000148296|  0.000148296|  0.00%|                            batch_size: int = 32) -> Segmentation:
(call)|         6|  0.000163317|  2.72195e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
   417|         0|            0|            0|  0.00%|        """ Uses a sliding window approach to collect a co_objectiveness information
   418|         0|            0|            0|  0.00%|            about the pixels of a large image.
   419|         0|            0|            0|  0.00%|
   420|         0|            0|            0|  0.00%|            On CPU, pad the image with zeros (this lead to duplication of the data).
   421|         0|            0|            0|  0.00%|            Select the slices and then copy to GPU
   422|         0|            0|            0|  0.00%|        """
   423|         0|            0|            0|  0.00%|        assert len(single_img.shape) == 3
   424|         0|            0|            0|  0.00%|        assert roi_mask is None or len(roi_mask.shape) == 3
   425|         0|            0|            0|  0.00%|
   426|         0|            0|            0|  0.00%|        crop_size = (self.input_img_dict["size_raw_image"],
   427|         0|            0|            0|  0.00%|                     self.input_img_dict["size_raw_image"]) if crop_size is None else crop_size
   428|         0|            0|            0|  0.00%|        stride = (int(crop_size[0] // 4), int(crop_size[1] // 4)) if stride is None else stride
   429|         0|            0|            0|  0.00%|        n_objects_max_per_patch = self.input_img_dict["n_objects_max"] if n_objects_max_per_patch is None \
   430|         0|            0|            0|  0.00%|            else n_objects_max_per_patch
   431|         0|            0|            0|  0.00%|        prob_corr_factor = getattr(self, "prob_corr_factor", 0.0) if prob_corr_factor is None else prob_corr_factor
   432|         0|            0|            0|  0.00%|        overlap_threshold = self.nms_dict["overlap_threshold"] if overlap_threshold is None else overlap_threshold
   433|         0|            0|            0|  0.00%|
   434|         0|            0|            0|  0.00%|        assert crop_size[0] % stride[0] == 0, "crop and stride size are NOT compatible"
   435|         0|            0|            0|  0.00%|        assert crop_size[1] % stride[1] == 0, "crop and stride size are NOT compatible"
   436|         0|            0|            0|  0.00%|        assert len(single_img.shape) == 3  # ch, w, h
   437|         0|            0|            0|  0.00%|
   438|         0|            0|            0|  0.00%|        with torch.no_grad():
   439|         0|            0|            0|  0.00%|
   440|         0|            0|            0|  0.00%|            w_img, h_img = single_img.shape[-2:]
   441|         0|            0|            0|  0.00%|            n_prediction = (crop_size[0] // stride[0]) * (crop_size[1] // stride[1])
   442|         0|            0|            0|  0.00%|            print(f'Each pixel will be segmented {n_prediction} times')
   443|         0|            0|            0|  0.00%|
   444|         0|            0|            0|  0.00%|            pad_w = crop_size[0] - stride[0]
   445|         0|            0|            0|  0.00%|            pad_h = crop_size[1] - stride[1]
   446|         0|            0|            0|  0.00%|            pad_list = [pad_w, crop_size[0], pad_h, crop_size[1]]
   447|         0|            0|            0|  0.00%|
   448|         0|            0|            0|  0.00%|            # This is duplicating the single_img on the CPU
   449|         0|            0|            0|  0.00%|            # Note: unsqueeze, pad, suqeeze
   450|         0|            0|            0|  0.00%|            try:
   451|         0|            0|            0|  0.00%|                img_padded = F.pad(single_img.cpu().unsqueeze(0),
   452|         0|            0|            0|  0.00%|                                   pad=pad_list, mode='reflect')  # 1, ch_in, w_pad, h_pad
   453|         0|            0|            0|  0.00%|            except RuntimeError:
   454|         0|            0|            0|  0.00%|                img_padded = F.pad(single_img.cpu().unsqueeze(0),
   455|         0|            0|            0|  0.00%|                                   pad=pad_list, mode='constant', value=0)  # 1, ch_in, w_pad, h_pad
   456|         0|            0|            0|  0.00%|            w_paddded, h_padded = img_padded.shape[-2:]
   457|         0|            0|            0|  0.00%|
   458|         0|            0|            0|  0.00%|            # This is creating the index matrix on the cpu
   459|         0|            0|            0|  0.00%|            max_index = w_img * h_img
   460|         0|            0|            0|  0.00%|            index_matrix_padded = F.pad(torch.arange(max_index,
   461|         0|            0|            0|  0.00%|                                                     dtype=torch.long,
   462|         0|            0|            0|  0.00%|                                                     device=torch.device('cpu')).view(1, 1, w_img, h_img),
   463|         0|            0|            0|  0.00%|                                        pad=pad_list, mode='constant', value=-1)  # 1, 1, w_pad, h_pad
   464|         0|            0|            0|  0.00%|
   465|         0|            0|            0|  0.00%|            assert index_matrix_padded.shape[-2:] == img_padded.shape[-2:]
   466|         0|            0|            0|  0.00%|            assert index_matrix_padded.shape[0] == img_padded.shape[0]
   467|         0|            0|            0|  0.00%|            assert len(index_matrix_padded.shape) == len(img_padded.shape)
   468|         0|            0|            0|  0.00%|
   469|         0|            0|            0|  0.00%|            # Build a list with the locations of the corner of the images
   470|         0|            0|            0|  0.00%|            location_of_corner = []
   471|         0|            0|            0|  0.00%|            for i in range(0, w_img + pad_w, stride[0]):
   472|         0|            0|            0|  0.00%|                for j in range(0, h_img + pad_h, stride[1]):
   473|         0|            0|            0|  0.00%|                    location_of_corner.append([i, j])
   474|         0|            0|            0|  0.00%|
   475|         0|            0|            0|  0.00%|            ij_tmp = torch.tensor(location_of_corner, device=torch.device('cpu'), dtype=torch.long)  # shape: N, 2
   476|         0|            0|            0|  0.00%|            x1 = ij_tmp[..., 0]
   477|         0|            0|            0|  0.00%|            y1 = ij_tmp[..., 1]
   478|         0|            0|            0|  0.00%|            del ij_tmp
   479|         0|            0|            0|  0.00%|
   480|         0|            0|            0|  0.00%|            if roi_mask is not None:
   481|         0|            0|            0|  0.00%|                assert roi_mask.shape[-2:] == single_img.shape[-2:]
   482|         0|            0|            0|  0.00%|                cum_roi_mask = F.pad(torch.cumsum(torch.cumsum(roi_mask, dim=-1), dim=-2),
   483|         0|            0|            0|  0.00%|                                     pad=pad_list, mode='constant', value=0)
   484|         0|            0|            0|  0.00%|                assert cum_roi_mask.shape[-2:] == img_padded.shape[-2:]
   485|         0|            0|            0|  0.00%|
   486|         0|            0|            0|  0.00%|                # Exclude stuff if outside the roi_mask
   487|         0|            0|            0|  0.00%|                integral = cum_roi_mask[0, x1 + crop_size[0] - 1, y1 + crop_size[1] - 1] - \
   488|         0|            0|            0|  0.00%|                           cum_roi_mask[0, x1 - 1, y1 + crop_size[1] - 1] * (x1 > 0) - \
   489|         0|            0|            0|  0.00%|                           cum_roi_mask[0, x1 + crop_size[0] - 1, y1 - 1] * (y1 > 0) + \
   490|         0|            0|            0|  0.00%|                           cum_roi_mask[0, x1 - 1, y1 - 1] * (x1 > 0) * (y1 > 0)
   491|         0|            0|            0|  0.00%|                fraction = integral.float() / (crop_size[0] * crop_size[1])
   492|         0|            0|            0|  0.00%|                mask = fraction > 0.01  # if there is more than 1% ROI the patch will be processed.
   493|         0|            0|            0|  0.00%|                x1 = x1[mask]
   494|         0|            0|            0|  0.00%|                y1 = y1[mask]
   495|         0|            0|            0|  0.00%|                del cum_roi_mask
   496|         0|            0|            0|  0.00%|                del mask
   497|         0|            0|            0|  0.00%|
   498|         0|            0|            0|  0.00%|            print(f'I am going to process {x1.shape[0]} patches')
   499|         0|            0|            0|  0.00%|            if not (x1.shape[0] >= 1):
   500|         0|            0|            0|  0.00%|                raise Exception("No patches will be analyzed. Something went wrong!")
   501|         0|            0|            0|  0.00%|
   502|         0|            0|            0|  0.00%|            # split the list in chunks of batch_size
   503|         0|            0|            0|  0.00%|            index = torch.arange(0, x1.shape[0], dtype=torch.long, device=torch.device('cpu'))
   504|         0|            0|            0|  0.00%|            n_list_of_list = [index[n:n + batch_size] for n in range(0, index.shape[0], batch_size)]
   505|         0|            0|            0|  0.00%|            n_instances_tot = 0
   506|         0|            0|            0|  0.00%|            need_initialization = True
   507|         0|            0|            0|  0.00%|            for n_batches, n_list in enumerate(n_list_of_list):
   508|         0|            0|            0|  0.00%|
   509|         0|            0|            0|  0.00%|                batch_imgs = torch.cat([img_padded[...,
   510|         0|            0|            0|  0.00%|                                          x1[n]:x1[n] + crop_size[0],
   511|         0|            0|            0|  0.00%|                                          y1[n]:y1[n] + crop_size[1]] for n in n_list], dim=-4)
   512|         0|            0|            0|  0.00%|
   513|         0|            0|            0|  0.00%|                batch_index = torch.cat([index_matrix_padded[...,
   514|         0|            0|            0|  0.00%|                                           x1[n]:x1[n] + crop_size[0],
   515|         0|            0|            0|  0.00%|                                           y1[n]:y1[n] + crop_size[1]] for n in n_list], dim=-4)
   516|         0|            0|            0|  0.00%|
   517|         0|            0|            0|  0.00%|                # print progress
   518|         0|            0|            0|  0.00%|                if (n_batches % 10 == 0) or (n_batches == len(n_list_of_list) - 1):
   519|         0|            0|            0|  0.00%|                    print(f'{n_batches} out of {len(n_list_of_list) - 1} -> batch_of_imgs.shape = {batch_imgs.shape}')
   520|         0|            0|            0|  0.00%|
   521|         0|            0|            0|  0.00%|                segmentation = self.segment(batch_imgs=batch_imgs.to(self.sigma_fg.device),
   522|         0|            0|            0|  0.00%|                                            n_objects_max=n_objects_max_per_patch,
   523|         0|            0|            0|  0.00%|                                            prob_corr_factor=prob_corr_factor,
   524|         0|            0|            0|  0.00%|                                            overlap_threshold=overlap_threshold,
   525|         0|            0|            0|  0.00%|                                            noisy_sampling=True,
   526|         0|            0|            0|  0.00%|                                            draw_boxes=False,
   527|         0|            0|            0|  0.00%|                                            batch_of_index=batch_index.to(self.sigma_fg.device),
   528|         0|            0|            0|  0.00%|                                            max_index=max_index,
   529|         0|            0|            0|  0.00%|                                            radius_nn=radius_nn)
   530|         0|            0|            0|  0.00%|                # print("segmentation time", time.time()-start_time)
   531|         0|            0|            0|  0.00%|
   532|         0|            0|            0|  0.00%|                # Initialize only the fist time
   533|         0|            0|            0|  0.00%|                if need_initialization:
   534|         0|            0|            0|  0.00%|                    # Probability and integer mask are dense tensor
   535|         0|            0|            0|  0.00%|                    big_fg_prob = torch.zeros((w_paddded, h_padded),
   536|         0|            0|            0|  0.00%|                                              device=torch.device('cpu'),
   537|         0|            0|            0|  0.00%|                                              dtype=segmentation.fg_prob.dtype)
   538|         0|            0|            0|  0.00%|                    big_integer_mask = torch.zeros((w_paddded, h_padded),
   539|         0|            0|            0|  0.00%|                                                   device=torch.device('cpu'),
   540|         0|            0|            0|  0.00%|                                                   dtype=segmentation.integer_mask.dtype)
   541|         0|            0|            0|  0.00%|                    # Similarity is a sparse tensor
   542|         0|            0|            0|  0.00%|                    sparse_similarity_matrix = torch.sparse.FloatTensor(max_index, max_index).cpu()
   543|         0|            0|            0|  0.00%|                    need_initialization = False
   544|         0|            0|            0|  0.00%|
   545|         0|            0|            0|  0.00%|                # Unpack the data from batch
   546|         0|            0|            0|  0.00%|                sparse_similarity_matrix.add_(segmentation.similarity.sparse_matrix.cpu())
   547|         0|            0|            0|  0.00%|                sparse_similarity_matrix = sparse_similarity_matrix.coalesce()
   548|         0|            0|            0|  0.00%|                fg_prob = segmentation.fg_prob.cpu()
   549|         0|            0|            0|  0.00%|                integer_mask = segmentation.integer_mask.cpu()
   550|         0|            0|            0|  0.00%|
   551|         0|            0|            0|  0.00%|                for k, n in enumerate(n_list):
   552|         0|            0|            0|  0.00%|                    big_fg_prob[x1[n]:x1[n] + crop_size[0], y1[n]:y1[n] + crop_size[1]] += fg_prob[k, 0]
   553|         0|            0|            0|  0.00%|
   554|         0|            0|            0|  0.00%|                    # Find a set of not-overlapping tiles to obtain a sample segmentation (without graph clustering)
   555|         0|            0|            0|  0.00%|                    if ((x1[n] - pad_w) % crop_size[0] == 0) and ((y1[n] - pad_h) % crop_size[1] == 0):
   556|         0|            0|            0|  0.00%|                        n_instances = torch.max(integer_mask[k])
   557|         0|            0|            0|  0.00%|                        shifted_integer_mask = (integer_mask[k] > 0) * \
   558|         0|            0|            0|  0.00%|                                               (integer_mask[k] + n_instances_tot)
   559|         0|            0|            0|  0.00%|                        n_instances_tot += n_instances
   560|         0|            0|            0|  0.00%|                        big_integer_mask[x1[n]:x1[n] +
   561|         0|            0|            0|  0.00%|                                               crop_size[0], y1[n]:y1[n] + crop_size[1]] = shifted_integer_mask[0]
   562|         0|            0|            0|  0.00%|
   563|         0|            0|            0|  0.00%|            # End of loop over batches
   564|         0|            0|            0|  0.00%|            sparse_similarity_matrix.div_(n_prediction)
   565|         0|            0|            0|  0.00%|            big_fg_prob.div_(n_prediction)
   566|         0|            0|            0|  0.00%|
   567|         0|            0|            0|  0.00%|            return Segmentation(raw_image=single_img[None],
   568|         0|            0|            0|  0.00%|                                fg_prob=big_fg_prob[None, None, pad_w:pad_w + w_img, pad_h:pad_h + h_img],
   569|         0|            0|            0|  0.00%|                                integer_mask=big_integer_mask[None, None, pad_w:pad_w + w_img, pad_h:pad_h + h_img],
   570|         0|            0|            0|  0.00%|                                bounding_boxes=None,
   571|         0|            0|            0|  0.00%|                                similarity=SparseSimilarity(sparse_matrix=sparse_similarity_matrix,
   572|         0|            0|            0|  0.00%|                                                            index_matrix=index_matrix_padded[0, 0, pad_w:pad_w + w_img,
   573|         0|            0|            0|  0.00%|                                                                         pad_h:pad_h + h_img]))
   574|         0|            0|            0|  0.00%|
   575|         0|            0|            0|  0.00%|    # this is the generic function which has all the options unspecified
   576|        23|  0.000205994|  8.95625e-06|  0.00%|    def process_batch_imgs(self,
   577|         1|  1.74046e-05|  1.74046e-05|  0.00%|                           imgs_in: torch.tensor,
   578|         1|   1.5974e-05|   1.5974e-05|  0.00%|                           generate_synthetic_data: bool,
   579|         1|  1.52588e-05|  1.52588e-05|  0.00%|                           topk_only: bool,
   580|         1|  1.50204e-05|  1.50204e-05|  0.00%|                           draw_image: bool,
   581|         1|  1.57356e-05|  1.57356e-05|  0.00%|                           draw_bg: bool,
   582|         1|  1.50204e-05|  1.50204e-05|  0.00%|                           draw_boxes: bool,
   583|         1|  1.52588e-05|  1.52588e-05|  0.00%|                           verbose: bool,
   584|         1|  1.78814e-05|  1.78814e-05|  0.00%|                           noisy_sampling: bool,
   585|         1|  1.52588e-05|  1.52588e-05|  0.00%|                           prob_corr_factor: float,
   586|         1|  1.52588e-05|  1.52588e-05|  0.00%|                           overlap_threshold: float,
   587|         1|  1.50204e-05|  1.50204e-05|  0.00%|                           n_objects_max: int,
   588|         1|   1.4782e-05|   1.4782e-05|  0.00%|                           bg_is_zero: bool,
   589|         1|  1.62125e-05|  1.62125e-05|  0.00%|                           bg_resolution: tuple):
   590|         0|            0|            0|  0.00%|        """ It needs to return: metric (with a .loss member) and whatever else """
   591|         0|            0|            0|  0.00%|
   592|         0|            0|            0|  0.00%|        # Checks
   593|        23|   0.00027132|  1.17965e-05|  0.00%|        assert len(imgs_in.shape) == 4
   594|        23|   0.00019145|  8.32392e-06|  0.00%|        assert self.input_img_dict["ch_in"] == imgs_in.shape[-3]
   595|         0|            0|            0|  0.00%|        # End of Checks #
   596|         0|            0|            0|  0.00%|
   597|        23|  0.000658512|   2.8631e-05|  0.00%|        inference: Inference = self.inference_and_generator(imgs_in=imgs_in,
(call)|        23|   0.00148797|  6.46944e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:580 __getattr__
   598|        23|   0.00012517|  5.44216e-06|  0.00%|                                                            generate_synthetic_data=generate_synthetic_data,
   599|        23|  0.000115871|  5.03789e-06|  0.00%|                                                            prob_corr_factor=prob_corr_factor,
   600|        23|  0.000125408|  5.45253e-06|  0.00%|                                                            overlap_threshold=overlap_threshold,
   601|        23|  0.000106335|  4.62325e-06|  0.00%|                                                            n_objects_max=n_objects_max,
   602|        23|  0.000112772|  4.90313e-06|  0.00%|                                                            topk_only=topk_only,
   603|        23|  0.000105858|  4.60252e-06|  0.00%|                                                            noisy_sampling=noisy_sampling,
   604|        23|  0.000109434|  4.75801e-06|  0.00%|                                                            bg_is_zero=bg_is_zero,
   605|        23|  0.000754356|  3.27981e-05|  0.00%|                                                            bg_resolution=bg_resolution)
(call)|        23|      34.3668|      1.49421|  7.22%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:540 __call__
   606|         0|            0|            0|  0.00%|
   607|        23|  0.000234365|  1.01898e-05|  0.00%|        regularizations: RegMiniBatch = self.compute_regularizations(inference=inference,
   608|        23|  0.000777006|  3.37829e-05|  0.00%|                                                                     verbose=verbose)
(call)|        23|    0.0625205|   0.00271828|  0.01%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/vae_model.py:146 compute_regularizations
   609|         0|            0|            0|  0.00%|
   610|        23|  0.000194311|  8.44831e-06|  0.00%|        metrics: MetricMiniBatch = self.compute_metrics(imgs_in=imgs_in,
   611|        23|  0.000110626|  4.80984e-06|  0.00%|                                                        inference=inference,
   612|        23|   0.00168633|  7.33189e-05|  0.00%|                                                        regularizations=regularizations)
(call)|        23|      2.29481|    0.0997742|  0.48%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/vae_model.py:189 compute_metrics
   613|         0|            0|            0|  0.00%|
   614|        23|  0.000560999|  2.43913e-05|  0.00%|        with torch.no_grad():
(call)|        23|  0.000436783|  1.89906e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/grad_mode.py:65 __enter__
   615|        23|  0.000133514|  5.80497e-06|  0.00%|            if draw_image:
   616|         2|  1.14441e-05|  5.72205e-06|  0.00%|                imgs_rec = draw_img(c=inference.sample_c,
   617|         2|  1.66893e-05|  8.34465e-06|  0.00%|                                    bounding_box=inference.sample_bb,
   618|         2|  1.14441e-05|  5.72205e-06|  0.00%|                                    big_mask=inference.big_mask,
   619|         2|  1.07288e-05|  5.36442e-06|  0.00%|                                    big_img=inference.big_img,
   620|         2|  1.07288e-05|  5.36442e-06|  0.00%|                                    big_bg=inference.big_bg,
   621|         2|  4.12464e-05|  2.06232e-05|  0.00%|                                    draw_bg=draw_bg,
   622|         2|  0.000135183|  6.75917e-05|  0.00%|                                    draw_boxes=draw_boxes)
(call)|         2|     0.261543|     0.130772|  0.05%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_visualization.py:75 draw_img
(call)|         2|  9.72748e-05|  4.86374e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/grad_mode.py:69 __exit__
   623|         0|            0|            0|  0.00%|            else:
   624|        21|   0.00159836|  7.61123e-05|  0.00%|                imgs_rec = torch.zeros_like(imgs_in)
(call)|        21|   0.00092864|   4.4221e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/grad_mode.py:69 __exit__
   625|         0|            0|            0|  0.00%|
   626|        23|  0.000396967|  1.72594e-05|  0.00%|        return Output(metrics=metrics, inference=inference, imgs=imgs_rec)
(call)|        23|   0.00026536|  1.15374e-05|  0.00%|# <string>_125:1 __new__
   627|         0|            0|            0|  0.00%|
   628|        22|  0.000259876|  1.18126e-05|  0.00%|    def forward(self,
   629|         0|            0|            0|  0.00%|                imgs_in: torch.tensor,
   630|         0|            0|            0|  0.00%|                draw_image: bool = False,
   631|         0|            0|            0|  0.00%|                draw_bg: bool = False,
   632|         0|            0|            0|  0.00%|                draw_boxes: bool = False,
   633|         1|  1.74046e-05|  1.74046e-05|  0.00%|                verbose: bool = False):
   634|         0|            0|            0|  0.00%|
   635|        22|  0.000216484|  9.84018e-06|  0.00%|        return self.process_batch_imgs(imgs_in=imgs_in,
   636|        22|  9.82285e-05|  4.46493e-06|  0.00%|                                       generate_synthetic_data=False,
   637|        22|  9.03606e-05|   4.1073e-06|  0.00%|                                       topk_only=False,
   638|        22|  9.36985e-05|  4.25902e-06|  0.00%|                                       draw_image=draw_image,
   639|        22|  9.75132e-05|  4.43242e-06|  0.00%|                                       draw_bg=draw_bg,
   640|        22|  0.000101805|  4.62749e-06|  0.00%|                                       draw_boxes=draw_boxes,
   641|        22|  9.36985e-05|  4.25902e-06|  0.00%|                                       verbose=verbose,
   642|        22|  9.70364e-05|  4.41074e-06|  0.00%|                                       noisy_sampling=True,  # True if self.training else False,
   643|        22|  0.000129938|  5.90628e-06|  0.00%|                                       prob_corr_factor=getattr(self, "prob_corr_factor", 0.0),
   644|        22|  0.000135422|  6.15553e-06|  0.00%|                                       overlap_threshold=self.nms_dict.get("overlap_threshold", 0.3),
   645|        22|  0.000135183|   6.1447e-06|  0.00%|                                       n_objects_max=self.input_img_dict["n_objects_max"],
   646|        22|  0.000106096|  4.82256e-06|  0.00%|                                       bg_is_zero=self.input_img_dict.get("bg_is_zero", True),
   647|        22|  8.82149e-05|  4.00977e-06|  0.00%|                                       bg_resolution=self.input_img_dict.get("background_resolution_before_upsampling",
   648|        22|  0.000695229|  3.16013e-05|  0.00%|                                                                             (2, 2)))
(call)|        22|      36.5177|       1.6599|  7.67%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/vae_model.py:576 process_batch_imgs
   649|         0|            0|            0|  0.00%|
   650|         1|  1.33514e-05|  1.33514e-05|  0.00%|    def generate(self,
   651|         0|            0|            0|  0.00%|                 imgs_in: torch.tensor,
   652|         0|            0|            0|  0.00%|                 draw_bg: bool = False,
   653|         0|            0|            0|  0.00%|                 draw_boxes: bool = False,
   654|         1|  1.85966e-05|  1.85966e-05|  0.00%|                 verbose: bool = False):
   655|         0|            0|            0|  0.00%|
   656|         1|  2.24113e-05|  2.24113e-05|  0.00%|        with torch.no_grad():
(call)|         1|   2.6226e-05|   2.6226e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/grad_mode.py:65 __enter__
   657|         1|   0.00111294|   0.00111294|  0.00%|            return self.process_batch_imgs(imgs_in=torch.zeros_like(imgs_in),
   658|         1|  1.83582e-05|  1.83582e-05|  0.00%|                                           generate_synthetic_data=True,
   659|         1|  5.24521e-06|  5.24521e-06|  0.00%|                                           topk_only=False,
   660|         1|  4.52995e-06|  4.52995e-06|  0.00%|                                           draw_image=True,
   661|         1|  4.76837e-06|  4.76837e-06|  0.00%|                                           draw_bg=draw_bg,
   662|         1|  5.00679e-06|  5.00679e-06|  0.00%|                                           draw_boxes=draw_boxes,
   663|         1|  4.76837e-06|  4.76837e-06|  0.00%|                                           verbose=verbose,
   664|         1|  4.52995e-06|  4.52995e-06|  0.00%|                                           noisy_sampling=True,
   665|         1|  4.52995e-06|  4.52995e-06|  0.00%|                                           prob_corr_factor=0.0,
   666|         1|   6.4373e-06|   6.4373e-06|  0.00%|                                           overlap_threshold=self.nms_dict.get("overlap_threshold", 0.3),
   667|         1|   6.4373e-06|   6.4373e-06|  0.00%|                                           n_objects_max=self.input_img_dict["n_objects_max"],
   668|         1|  4.52995e-06|  4.52995e-06|  0.00%|                                           bg_is_zero=True,
   669|         1|  4.36306e-05|  4.36306e-05|  0.00%|                                           bg_resolution=(2, 2))
(call)|         1|     0.479988|     0.479988|  0.10%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/vae_model.py:576 process_batch_imgs
(call)|         1|  2.93255e-05|  2.93255e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/grad_mode.py:69 __exit__
File: /home/jupyter/REPOS/spacetx-research/src/MODULES/non_max_suppression.py
File duration: 1.91379s (0.40%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.90871e-05|  1.45435e-05|  0.00%|import torch
     2|         1|  1.97887e-05|  1.97887e-05|  0.00%|from MODULES.namedtuple import BB, NMSoutput
(call)|         1|  1.81198e-05|  1.81198e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         3|  7.15256e-05|  2.38419e-05|  0.00%|class NonMaxSuppression(object):
(call)|         1|  0.000165701|  0.000165701|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/non_max_suppression.py:5 NonMaxSuppression
     6|         0|            0|            0|  0.00%|    """ Use Intersection_over_Union criteria to put most of the entries to zero while leaving few detection unchanged.
     7|         0|            0|            0|  0.00%|        INPUT  has shape: BATCH x N_BOXES x ....
     8|         0|            0|            0|  0.00%|        OUTPUT has shape: BATCH x K_MAX   x ....
     9|         0|            0|            0|  0.00%|
    10|         0|            0|            0|  0.00%|        The non_max_suppression algorithm is as follows:
    11|         0|            0|            0|  0.00%|        1. Discard all voxels with p<p_threshold
    12|         0|            0|            0|  0.00%|        2. While there are any remaining voxels:
    13|         0|            0|            0|  0.00%|            - Pick the voxel with largest p and output it as a prediction
    14|         0|            0|            0|  0.00%|            - Discard any voxels which has a IoU> IoU_threshold with the box just exported.
    15|         1|  4.29153e-06|  4.29153e-06|  0.00%|    """
    16|         0|            0|            0|  0.00%|
    17|         1|  6.67572e-06|  6.67572e-06|  0.00%|    def __init__(self):
    18|         0|            0|            0|  0.00%|        super().__init__()
    19|         0|            0|            0|  0.00%|
    20|        25|     0.000211|  8.44002e-06|  0.00%|    @staticmethod
    21|         1|  6.67572e-06|  6.67572e-06|  0.00%|    def perform_nms_selection(mask_overlap: torch.Tensor,
    22|         1|  2.19345e-05|  2.19345e-05|  0.00%|                              score: torch.Tensor,
    23|         1|  6.19888e-06|  6.19888e-06|  0.00%|                              possible: torch.Tensor,
    24|         1|  2.64645e-05|  2.64645e-05|  0.00%|                              n_objects_max: int) -> torch.Tensor:
    25|         0|            0|            0|  0.00%|        """ Input:
    26|         0|            0|            0|  0.00%|            mask_overlap: n x n x batch
    27|         0|            0|            0|  0.00%|            score: n x batch
    28|         0|            0|            0|  0.00%|            possible: n x batch
    29|         0|            0|            0|  0.00%|            n_objects_max: integer
    30|         0|            0|            0|  0.00%|            Output: n x batch
    31|         0|            0|            0|  0.00%|
    32|         0|            0|            0|  0.00%|            It assumes score >= 0.0
    33|         0|            0|            0|  0.00%|        """
    34|         0|            0|            0|  0.00%|
    35|         0|            0|            0|  0.00%|        # check input formats
    36|        24|   0.00017333|   7.2221e-06|  0.00%|        assert len(mask_overlap.shape) == 3
    37|        24|  0.000170469|  7.10289e-06|  0.00%|        n_boxes, n_boxes, batch_size = mask_overlap.shape
    38|        24|  0.000146389|  6.09954e-06|  0.00%|        assert score.shape == possible.shape == (n_boxes, batch_size)
    39|         0|            0|            0|  0.00%|
    40|         0|            0|            0|  0.00%|        # reshape
    41|        24|  0.000379086|  1.57952e-05|  0.00%|        score: torch.Tensor = score.unsqueeze(0)                                           # 1 x n_box x batch
    42|        24|  0.000221014|  9.20892e-06|  0.00%|        possible: torch.Tensor = possible.unsqueeze(0)                                     # 1 x n_box x batch
    43|        24|  0.000132799|   5.5333e-06|  0.00%|        idx: torch.Tensor = torch.arange(start=0, end=n_boxes, step=1,
    44|        24|   0.00126672|  5.27799e-05|  0.00%|                                         device=score.device).view(n_boxes, 1, 1).long()   # n_box x 1 x 1
    45|        24|  0.000271082|  1.12951e-05|  0.00%|        selected: torch.Tensor = torch.zeros((n_boxes, 1, batch_size),
    46|        24|    0.0119097|  0.000496238|  0.00%|                                             device=score.device, dtype=torch.bool)        # n_box x 1 x batch
    47|         0|            0|            0|  0.00%|
    48|         0|            0|            0|  0.00%|        # Loop
    49|        24|   0.00020051|  8.35458e-06|  0.00%|        counter = 0
    50|       217|      1.64187|    0.0075662|  0.34%|        while counter <= n_objects_max and possible.any():  # you never need more than n_objects_max proposals
    51|       193|     0.014909|  7.72489e-05|  0.00%|            score_mask: torch.Tensor = mask_overlap*(score*possible)         # n_box x n_box x batch
    52|       193|   0.00915956|  4.74589e-05|  0.00%|            index = torch.max(score_mask, keepdim=True, dim=-2)[1]           # n_box x 1 x batch
    53|       193|    0.0343025|  0.000177733|  0.01%|            selected += possible.permute(1, 0, 2)*(idx == index)             # n_box x 1 x batch
(call)|       193|    0.0105977|  5.49104e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/tensor.py:25 wrapped
    54|       193|     0.012152|  6.29635e-05|  0.00%|            blocks = torch.sum(mask_overlap*selected, keepdim=True, dim=-3)  # 1 x n_box x batch
    55|       193|   0.00899076|  4.65843e-05|  0.00%|            possible *= (blocks == 0)                                        # 1 x n_box x batch
(call)|       193|    0.0113902|  5.90166e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/tensor.py:25 wrapped
    56|       193|   0.00143266|  7.42309e-06|  0.00%|            counter += 1
    57|         0|            0|            0|  0.00%|
    58|         0|            0|            0|  0.00%|        # return
    59|        24|  0.000529766|  2.20736e-05|  0.00%|        return selected.squeeze(-2)  # shape: n_box x batch
    60|         0|            0|            0|  0.00%|
    61|       121|  0.000564337|  4.66394e-06|  0.00%|    @staticmethod
    62|         1|  7.86781e-06|  7.86781e-06|  0.00%|    def unroll_and_compare(x: torch.Tensor, label: str) -> torch.Tensor:
    63|         0|            0|            0|  0.00%|        """ Given a vector of size: batch x n_boxes
    64|         0|            0|            0|  0.00%|        it creates a matrix of size: batch x n_boxes x n_boxes
    65|         0|            0|            0|  0.00%|        obtained by comparing all vecotr entries with all other vector entries
    66|         0|            0|            0|  0.00%|        The comparison is either: MIN,MAX """
    67|       120|  0.000625372|  5.21143e-06|  0.00%|        assert len(x.shape) == 2  # shape: n_box, batch_size
    68|       120|   0.00046134|   3.8445e-06|  0.00%|        if label == "MAX":
    69|        48|    0.0127668|  0.000265976|  0.00%|            return torch.max(x.unsqueeze(0), x.unsqueeze(1))
    70|        72|   0.00023818|  3.30806e-06|  0.00%|        elif label == "MIN":
    71|        72|     0.111452|   0.00154794|  0.02%|            return torch.min(x.unsqueeze(0), x.unsqueeze(1))
    72|         0|            0|            0|  0.00%|        else:
    73|         0|            0|            0|  0.00%|            raise Exception("label is unknown. It is ", label)
    74|         0|            0|            0|  0.00%|
    75|        25|  0.000146627|   5.8651e-06|  0.00%|    @staticmethod
    76|         1|  6.91414e-06|  6.91414e-06|  0.00%|    def compute_box_intersection_over_min_area(bounding_box: BB) -> torch.Tensor:
    77|         0|            0|            0|  0.00%|        """ compute the matrix of shape: batch x n_boxes x n_boxes with the Intersection Over Unions """
    78|         0|            0|            0|  0.00%|
    79|         0|            0|            0|  0.00%|        # compute x1,x3,y1,y3
    80|        24|   0.00171614|  7.15057e-05|  0.00%|        x1: torch.Tensor = bounding_box.bx - 0.5 * bounding_box.bw
    81|        24|   0.00142574|   5.9406e-05|  0.00%|        x3: torch.Tensor = bounding_box.bx + 0.5 * bounding_box.bw
    82|        24|   0.00125003|  5.20845e-05|  0.00%|        y1: torch.Tensor = bounding_box.by - 0.5 * bounding_box.bh
    83|        24|   0.00123763|   5.1568e-05|  0.00%|        y3: torch.Tensor = bounding_box.by + 0.5 * bounding_box.bh
    84|        24|  0.000725508|  3.02295e-05|  0.00%|        area: torch.Tensor = bounding_box.bw * bounding_box.bh
    85|         0|            0|            0|  0.00%|
    86|        24|  0.000753641|  3.14017e-05|  0.00%|        min_area: torch.Tensor = NonMaxSuppression.unroll_and_compare(area, "MIN")  # min of area between box1 and box2
(call)|        24|     0.109715|   0.00457144|  0.02%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/non_max_suppression.py:61 unroll_and_compare
    87|        24|  0.000515938|  2.14974e-05|  0.00%|        xi1: torch.Tensor = NonMaxSuppression.unroll_and_compare(x1, "MAX")  # max of x1 between box1 and box2
(call)|        24|    0.0118196|  0.000492483|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/non_max_suppression.py:61 unroll_and_compare
    88|        24|  0.000468969|  1.95404e-05|  0.00%|        yi1: torch.Tensor = NonMaxSuppression.unroll_and_compare(y1, "MAX")  # max of y1 between box1 and box2
(call)|        24|   0.00147343|  6.13928e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/non_max_suppression.py:61 unroll_and_compare
    89|        24|  0.000433922|  1.80801e-05|  0.00%|        xi3: torch.Tensor = NonMaxSuppression.unroll_and_compare(x3, "MIN")  # min of x3 between box1 and box2
(call)|        24|   0.00159979|  6.66579e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/non_max_suppression.py:61 unroll_and_compare
    90|        24|  0.000485659|  2.02358e-05|  0.00%|        yi3: torch.Tensor = NonMaxSuppression.unroll_and_compare(y3, "MIN")  # min of y3 between box1 and box2
(call)|        24|   0.00149107|  6.21279e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/non_max_suppression.py:61 unroll_and_compare
    91|         0|            0|            0|  0.00%|
    92|        24|   0.00422955|  0.000176231|  0.00%|        intersection_area: torch.Tensor = torch.clamp(xi3 - xi1, min=0) * torch.clamp(yi3 - yi1, min=0)
    93|        24|  0.000806093|  3.35872e-05|  0.00%|        return intersection_area / min_area
    94|         0|            0|            0|  0.00%|
    95|        25|  0.000216007|  8.64029e-06|  0.00%|    @staticmethod
    96|         1|   6.4373e-06|   6.4373e-06|  0.00%|    def compute_mask_and_index(score: torch.Tensor,
    97|         1|   6.4373e-06|   6.4373e-06|  0.00%|                               bounding_box: BB,
    98|         1|  6.67572e-06|  6.67572e-06|  0.00%|                               overlap_threshold: float,
    99|         1|  6.19888e-06|  6.19888e-06|  0.00%|                               n_objects_max: int,
   100|         1|   1.0252e-05|   1.0252e-05|  0.00%|                               topk_only: bool) -> NMSoutput:
   101|         0|            0|            0|  0.00%|        """ Compute the indices to do nms + topk filter based on noisy probabilities.
   102|         0|            0|            0|  0.00%|            Only the active elements do NMS """
   103|        24|  0.000267029|  1.11262e-05|  0.00%|        assert score.shape == bounding_box.bx.shape
   104|        24|  0.000152111|  6.33796e-06|  0.00%|        assert len(score.shape) == 2
   105|        24|  0.000159264|  6.63598e-06|  0.00%|        n_boxes, batch_size = score.shape
   106|         0|            0|            0|  0.00%|
   107|         0|            0|            0|  0.00%|        # this is O(N^2) algorithm
   108|        24|   0.00092721|  3.86337e-05|  0.00%|        overlap_measure = NonMaxSuppression.compute_box_intersection_over_min_area(bounding_box=bounding_box)
(call)|        24|     0.140287|    0.0058453|  0.03%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/non_max_suppression.py:75 compute_box_intersection_over_min_area
   109|        24|   0.00160503|  6.68764e-05|  0.00%|        binarized_overlap = (overlap_measure > overlap_threshold).float()
(call)|        24|    0.0231538|  0.000964741|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/tensor.py:25 wrapped
   110|         0|            0|            0|  0.00%|
   111|        24|  0.000214338|  8.93076e-06|  0.00%|        if topk_only:
   112|         0|            0|            0|  0.00%|            # If nms_mask = 1 then this is equivalent to do topk only
   113|         0|            0|            0|  0.00%|            chosen_nms_mask = torch.ones_like(score)
   114|         0|            0|            0|  0.00%|        else:
   115|        24|  0.000167608|  6.98368e-06|  0.00%|            chosen_nms_mask = NonMaxSuppression.perform_nms_selection(mask_overlap=binarized_overlap,
   116|        24|  0.000133276|  5.55317e-06|  0.00%|                                                                      score=score,
   117|        24|   0.00152016|  6.33399e-05|  0.00%|                                                                      possible=torch.ones_like(score).bool(),
   118|        24|  0.000932693|  3.88622e-05|  0.00%|                                                                      n_objects_max=n_objects_max)
(call)|        24|      1.76041|    0.0733502|  0.37%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/non_max_suppression.py:20 perform_nms_selection
   119|        24|   0.00026989|  1.12454e-05|  0.00%|        assert chosen_nms_mask.shape == (n_boxes, batch_size)
   120|         0|            0|            0|  0.00%|
   121|         0|            0|            0|  0.00%|        # select the indices of the top boxes according to the masked_score.
   122|         0|            0|            0|  0.00%|        # Note that masked_score are zero for the boxes which underwent NMS
   123|        24|   0.00090003|  3.75013e-05|  0.00%|        masked_score = chosen_nms_mask * score
   124|        24|  0.000249624|   1.0401e-05|  0.00%|        k = min(n_objects_max, n_boxes)
   125|        24|    0.0263729|   0.00109887|  0.01%|        indices_top_k: torch.Tensor = torch.topk(masked_score, k=k, dim=-2, largest=True, sorted=True)[1]
   126|        24|   0.00029254|  1.21891e-05|  0.00%|        return NMSoutput(nms_mask=chosen_nms_mask,
   127|        24|   0.00044322|  1.84675e-05|  0.00%|                         index_top_k=indices_top_k)
(call)|        24|  0.000299454|  1.24772e-05|  0.00%|# <string>_118:1 __new__
File: /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities.py
File duration: 1.89273s (0.40%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  6.17504e-05|  3.08752e-05|  0.00%|import json
     2|         1|  1.04904e-05|  1.04904e-05|  0.00%|import torch
     3|         1|  1.54972e-05|  1.54972e-05|  0.00%|import numpy
     4|         1|  5.91278e-05|  5.91278e-05|  0.00%|import dill
(call)|         1|     0.369292|     0.369292|  0.08%|# <frozen importlib._bootstrap>:978 _find_and_load
     5|         1|  3.74317e-05|  3.74317e-05|  0.00%|from typing import Union, Optional, NamedTuple
(call)|         1|  2.76566e-05|  2.76566e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
     6|         1|  0.000116587|  0.000116587|  0.00%|from MODULES.namedtuple import BB
(call)|         1|      6.02795|      6.02795|  1.27%|# <frozen importlib._bootstrap>:978 _find_and_load
(call)|         1|  2.40803e-05|  2.40803e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
     7|         0|            0|            0|  0.00%|
     8|         0|            0|            0|  0.00%|
     9|       240|   0.00108361|  4.51505e-06|  0.00%|def convert_to_box_list(x: torch.Tensor) -> torch.Tensor:
    10|         0|            0|            0|  0.00%|    """ takes input of shape: (batch, ch, width, height)
    11|         0|            0|            0|  0.00%|        and returns output of shape: (n_list, batch, ch)
    12|         0|            0|            0|  0.00%|        where n_list = width x height
    13|         0|            0|            0|  0.00%|    """
    14|       239|   0.00138426|  5.79188e-06|  0.00%|    assert len(x.shape) == 4
    15|       239|   0.00112319|  4.69954e-06|  0.00%|    batch_size, ch, width, height = x.shape
    16|       239|   0.00521469|  2.18188e-05|  0.00%|    return x.permute(2, 3, 0, 1).view(width*height, batch_size, ch)
    17|         0|            0|            0|  0.00%|
    18|         0|            0|            0|  0.00%|
    19|        49|  0.000305414|  6.23294e-06|  0.00%|def invert_convert_to_box_list(x: torch.Tensor, original_width: int, original_height: int) -> torch.Tensor:
    20|         0|            0|            0|  0.00%|    """ takes input of shape: (width x height, batch, ch)
    21|         0|            0|            0|  0.00%|        and return shape: (batch, ch, width, height)
    22|         0|            0|            0|  0.00%|    """
    23|        48|  0.000341654|  7.11779e-06|  0.00%|    assert len(x.shape) == 3
    24|        48|  0.000295162|  6.14921e-06|  0.00%|    n_list, batch_size, ch = x.shape
    25|        48|  0.000252962|  5.27004e-06|  0.00%|    assert n_list == original_width * original_height
    26|        48|   0.00133204|  2.77509e-05|  0.00%|    return x.permute(1, 2, 0).view(batch_size, ch, original_width, original_height)
    27|         0|            0|            0|  0.00%|
    28|         0|            0|            0|  0.00%|
    29|        49|  0.000379562|  7.74617e-06|  0.00%|def tmaps_to_bb(tmaps, width_raw_image: int, height_raw_image: int, min_box_size: float, max_box_size: float):
    30|        48|  0.000966549|  2.01364e-05|  0.00%|    tx_map, ty_map, tw_map, th_map = torch.split(tmaps, 1, dim=-3)
(call)|        48|   0.00392699|  8.18123e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/functional.py:65 split
    31|        48|   0.00061655|  1.28448e-05|  0.00%|    n_width, n_height = tx_map.shape[-2:]
    32|        48|    0.0236926|  0.000493596|  0.00%|    ix_array = torch.arange(start=0, end=n_width, dtype=tx_map.dtype, device=tx_map.device)
    33|        48|   0.00153518|  3.19829e-05|  0.00%|    iy_array = torch.arange(start=0, end=n_height, dtype=tx_map.dtype, device=tx_map.device)
    34|        48|   0.00125217|   2.6087e-05|  0.00%|    ix_grid, iy_grid = torch.meshgrid([ix_array, iy_array])
(call)|        48|   0.00908375|  0.000189245|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/functional.py:295 meshgrid
    35|         0|            0|            0|  0.00%|
    36|        48|   0.00566435|  0.000118007|  0.00%|    bx_map: torch.Tensor = width_raw_image * (ix_grid + tx_map) / n_width
    37|        48|   0.00417924|  8.70675e-05|  0.00%|    by_map: torch.Tensor = height_raw_image * (iy_grid + ty_map) / n_height
    38|        48|   0.00339723|  7.07755e-05|  0.00%|    bw_map: torch.Tensor = min_box_size + (max_box_size - min_box_size) * tw_map
    39|        48|   0.00340843|   7.1009e-05|  0.00%|    bh_map: torch.Tensor = min_box_size + (max_box_size - min_box_size) * th_map
    40|        48|   0.00194287|  4.04765e-05|  0.00%|    return BB(bx=convert_to_box_list(bx_map).squeeze(-1),
(call)|        48|   0.00233507|  4.86473e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities.py:9 convert_to_box_list
    41|        48|   0.00107741|  2.24461e-05|  0.00%|              by=convert_to_box_list(by_map).squeeze(-1),
(call)|        48|   0.00139236|  2.90076e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities.py:9 convert_to_box_list
    42|        48|  0.000998259|  2.07971e-05|  0.00%|              bw=convert_to_box_list(bw_map).squeeze(-1),
(call)|        48|   0.00127721|  2.66085e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities.py:9 convert_to_box_list
    43|        48|   0.00152969|  3.18686e-05|  0.00%|              bh=convert_to_box_list(bh_map).squeeze(-1))
(call)|        48|   0.00126266|  2.63055e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities.py:9 convert_to_box_list
(call)|        48|  0.000593662|   1.2368e-05|  0.00%|# <string>_117:1 __new__
    44|         0|            0|            0|  0.00%|
    45|         0|            0|            0|  0.00%|
    46|         0|            0|            0|  0.00%|### class PassMask(torch.autograd.Function):
    47|         0|            0|            0|  0.00%|###     """ Forward is c=c*mask. Backward is identity"""
    48|         0|            0|            0|  0.00%|###
    49|         0|            0|            0|  0.00%|###     @staticmethod
    50|         0|            0|            0|  0.00%|###     def forward(ctx, x, mask):
    51|         0|            0|            0|  0.00%|###         return x*mask
    52|         0|            0|            0|  0.00%|###
    53|         0|            0|            0|  0.00%|###     @staticmethod
    54|         0|            0|            0|  0.00%|###     def backward(ctx, grad_output):
    55|         0|            0|            0|  0.00%|###         return grad_output, None  # the gradient of mask is None
    56|         0|            0|            0|  0.00%|###
    57|         0|            0|            0|  0.00%|###
    58|         0|            0|            0|  0.00%|### def pass_mask(x, mask):
    59|         0|            0|            0|  0.00%|###     return PassMask.apply(x, mask)
    60|         0|            0|            0|  0.00%|
    61|         0|            0|            0|  0.00%|
    62|         3|  0.000111103|  3.70344e-05|  0.00%|class PassBernoulli(torch.autograd.Function):
(call)|         1|  3.33786e-05|  3.33786e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities.py:62 PassBernoulli
(call)|         1|  9.13143e-05|  9.13143e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/function.py:90 __init__
    63|         1|  3.57628e-06|  3.57628e-06|  0.00%|    """ Forward is c=Bernoulli(p). Backward is identity"""
    64|         0|            0|            0|  0.00%|
    65|        24|  0.000133753|  5.57303e-06|  0.00%|    @staticmethod
    66|         0|            0|            0|  0.00%|    def forward(ctx, p, noisy_sampling):
    67|        23|  0.000142097|  6.17815e-06|  0.00%|        if noisy_sampling:
    68|        23|    0.0383997|   0.00166955|  0.01%|            c = torch.rand_like(p) < p
(call)|        23|    0.0311139|   0.00135278|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torch/tensor.py:25 wrapped
    69|         0|            0|            0|  0.00%|        else:
    70|         0|            0|            0|  0.00%|            c = (p > 0.5)
    71|        23|   0.00111318|   4.8399e-05|  0.00%|        return c.float().requires_grad_(True)
    72|         0|            0|            0|  0.00%|
    73|         1|  5.00679e-06|  5.00679e-06|  0.00%|    @staticmethod
    74|         0|            0|            0|  0.00%|    def backward(ctx, grad_output):
    75|         0|            0|            0|  0.00%|        return grad_output, None  # the gradient of noisy_sampling is None
    76|         0|            0|            0|  0.00%|
    77|         0|            0|            0|  0.00%|
    78|        24|  0.000159025|  6.62605e-06|  0.00%|def pass_bernoulli(prob, noisy_sampling):
    79|        23|   0.00137997|  5.99986e-05|  0.00%|    return PassBernoulli.apply(prob, noisy_sampling)
(call)|        23|    0.0708966|   0.00308246|  0.01%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities.py:65 forward
    80|         0|            0|            0|  0.00%|
    81|         0|            0|            0|  0.00%|
    82|         6|  9.39369e-05|  1.56562e-05|  0.00%|def linear_interpolation(t: Union[numpy.array, float], values: tuple, times: tuple) -> Union[numpy.array, float]:
(call)|         2|  0.000696898|  0.000348449|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
    83|         0|            0|            0|  0.00%|    """ Makes an interpolation between (t_in,v_in) and (t_fin,v_fin)
    84|         0|            0|            0|  0.00%|        For time t>t_fin and t<t_in the value of v is clamped to either v_in or v_fin
    85|         0|            0|            0|  0.00%|        Usage:
    86|         0|            0|            0|  0.00%|        epoch = numpy.arange(0,100,1)
    87|         0|            0|            0|  0.00%|        v = linear_interpolation(epoch, values=[0.0,0.5], times=[20,40])
    88|         0|            0|            0|  0.00%|        plt.plot(epoch,v)
    89|         0|            0|            0|  0.00%|    """
    90|         5|  3.52859e-05|  7.05719e-06|  0.00%|    v_in, v_fin = values  # initial and final values
    91|         5|  3.00407e-05|  6.00815e-06|  0.00%|    t_in, t_fin = times   # initial and final times
    92|         0|            0|            0|  0.00%|
    93|         5|  2.38419e-05|  4.76837e-06|  0.00%|    if t_fin >= t_in:
    94|         5|  3.17097e-05|  6.34193e-06|  0.00%|        den = max(t_fin-t_in, 1E-8)
    95|         5|   3.0756e-05|   6.1512e-06|  0.00%|        m = (v_fin-v_in)/den
    96|         5|  2.40803e-05|  4.81606e-06|  0.00%|        v = v_in + m*(t-t_in)
    97|         0|            0|            0|  0.00%|    else:
    98|         0|            0|            0|  0.00%|        raise Exception("t_fin should be greater than t_in")
    99|         0|            0|            0|  0.00%|
   100|         5|  3.09944e-05|  6.19888e-06|  0.00%|    v_min = min(v_in, v_fin)
   101|         5|  2.36034e-05|  4.72069e-06|  0.00%|    v_max = max(v_in, v_fin)
   102|         5|  9.63211e-05|  1.92642e-05|  0.00%|    return numpy.clip(v, v_min, v_max)
(call)|         5|   0.00396299|  0.000792599|  0.00%|# <__array_function__ internals>_44:2 clip
   103|         0|            0|            0|  0.00%|
   104|         0|            0|            0|  0.00%|
   105|         1|  1.97887e-05|  1.97887e-05|  0.00%|def flatten_list(ll):
   106|         0|            0|            0|  0.00%|    if not ll:  # equivalent to if ll == []
   107|         0|            0|            0|  0.00%|        return ll
   108|         0|            0|            0|  0.00%|    elif isinstance(ll[0], list):
   109|         0|            0|            0|  0.00%|        return flatten_list(ll[0]) + flatten_list(ll[1:])
   110|         0|            0|            0|  0.00%|    else:
   111|         0|            0|            0|  0.00%|        return ll[:1] + flatten_list(ll[1:])
   112|         0|            0|            0|  0.00%|
   113|         0|            0|            0|  0.00%|
   114|        83|  0.000235319|  2.83517e-06|  0.00%|def flatten_dict(dd, separator='_', prefix=''):
   115|       105|  0.000372887|   3.5513e-06|  0.00%|    return {prefix + separator + k if prefix else k: v
   116|        81|  0.000285625|  3.52624e-06|  0.00%|            for kk, vv in dd.items()
   117|       232|   0.00149894|  6.46094e-06|  0.00%|            for k, v in flatten_dict(vv, separator, kk).items()
(call)|        81|   0.00233841|  2.88693e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities.py:114 flatten_dict
   118|        82|  0.000400305|  4.88177e-06|  0.00%|            } if isinstance(dd, dict) else {prefix: dd}
(call)|        12|   0.00275135|  0.000229279|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities.py:115 <dictcomp>
   119|         0|            0|            0|  0.00%|
   120|         0|            0|            0|  0.00%|
   121|         2|  1.64509e-05|  8.22544e-06|  0.00%|def save_obj(obj, path):
   122|         1|    0.0262613|    0.0262613|  0.01%|    with open(path, 'wb') as f:
   123|         1|  3.48091e-05|  3.48091e-05|  0.00%|        torch.save(obj, f,
   124|         1|  8.58307e-06|  8.58307e-06|  0.00%|                   pickle_module=dill,
   125|         1|  5.48363e-06|  5.48363e-06|  0.00%|                   pickle_protocol=2,
   126|         1|      1.42806|      1.42806|  0.30%|                   _use_new_zipfile_serialization=True)
(call)|         1|     0.888307|     0.888307|  0.19%|# /opt/anaconda3/lib/python3.7/site-packages/torch/serialization.py:335 save
   127|         0|            0|            0|  0.00%|
   128|         0|            0|            0|  0.00%|
   129|         2|  1.97887e-05|  9.89437e-06|  0.00%|def load_obj(path):
   130|         1|   0.00116467|   0.00116467|  0.00%|    with open(path, 'rb') as f:
   131|         1|  6.65188e-05|  6.65188e-05|  0.00%|        return torch.load(f, pickle_module=dill)
(call)|         1|      1.13901|      1.13901|  0.24%|# /opt/anaconda3/lib/python3.7/site-packages/torch/serialization.py:499 load
   132|         0|            0|            0|  0.00%|
   133|         0|            0|            0|  0.00%|
   134|         2|  1.95503e-05|  9.77516e-06|  0.00%|def load_json_as_dict(path):
   135|         1|  3.57628e-05|  3.57628e-05|  0.00%|    with open(path, 'rb') as f:
   136|         1|  3.71933e-05|  3.71933e-05|  0.00%|        return json.load(f)
(call)|         1|  0.000326633|  0.000326633|  0.00%|# /opt/anaconda3/lib/python3.7/json/__init__.py:274 load
   137|         0|            0|            0|  0.00%|
   138|         0|            0|            0|  0.00%|
   139|         1|  1.16825e-05|  1.16825e-05|  0.00%|def save_dict_as_json(my_dict, path):
   140|         0|            0|            0|  0.00%|    with open(path, 'w') as f:
   141|         0|            0|            0|  0.00%|        return json.dump(my_dict, f)
   142|         0|            0|            0|  0.00%|
   143|         0|            0|            0|  0.00%|
   144|         1|  3.48091e-05|  3.48091e-05|  0.00%|def roller_2d(a: torch.tensor, b: Optional[torch.tensor] = None, radius: int = 2):
(call)|         1|  2.71797e-05|  2.71797e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
   145|         0|            0|            0|  0.00%|    """ Performs rolling of the last two spatial dimensions.
   146|         0|            0|            0|  0.00%|        For each point consider half a square. Each pair of points will appear once.
   147|         0|            0|            0|  0.00%|        Number of channels: [(2r+1)**2 - 1]/2
   148|         0|            0|            0|  0.00%|        For example for a radius = 2 the full square is 5x5. The number of pairs is: 12
   149|         0|            0|            0|  0.00%|    """
   150|         0|            0|            0|  0.00%|    dxdy_list = []
   151|         0|            0|            0|  0.00%|    for dx in range(0, radius + 1):
   152|         0|            0|            0|  0.00%|        for dy in range(-radius, radius + 1):
   153|         0|            0|            0|  0.00%|            if dx == 0 and dy <= 0:
   154|         0|            0|            0|  0.00%|                continue
   155|         0|            0|            0|  0.00%|            dxdy_list.append((dx, dy))
   156|         0|            0|            0|  0.00%|
   157|         0|            0|            0|  0.00%|    for dxdy in dxdy_list:
   158|         0|            0|            0|  0.00%|        a_tmp = torch.roll(torch.roll(a, dxdy[0], dims=-2), dxdy[1], dims=-1)
   159|         0|            0|            0|  0.00%|        b_tmp = None if b is None else torch.roll(torch.roll(b, dxdy[0], dims=-2), dxdy[1], dims=-1)
   160|         0|            0|            0|  0.00%|        yield a_tmp, b_tmp
   161|         0|            0|            0|  0.00%|
   162|         0|            0|            0|  0.00%|
   163|         7|  6.77109e-05|  9.67298e-06|  0.00%|def append_to_dict(source: Union[tuple, dict],
   164|         0|            0|            0|  0.00%|                   destination: dict,
   165|         0|            0|            0|  0.00%|                   prefix_include: str = None,
   166|         0|            0|            0|  0.00%|                   prefix_exclude: str = None,
   167|         1|  3.83854e-05|  3.83854e-05|  0.00%|                   prefix_to_add: str = None):
(call)|         1|  0.000669241|  0.000669241|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
   168|         0|            0|            0|  0.00%|    """ Use typing.
   169|         0|            0|            0|  0.00%|        For now: prefix_include is str or tuple of str
   170|         0|            0|            0|  0.00%|        For now: prefix_exclude is str or tuple of str
   171|         0|            0|            0|  0.00%|        For now: prefix_to_add is str """
   172|         0|            0|            0|  0.00%|
   173|       128|   0.00042367|  3.30992e-06|  0.00%|    def _get_x_y(_key, _value):
   174|       121|  0.000484705|  4.00583e-06|  0.00%|        if (prefix_include is None or _key.startswith(prefix_include)) and (prefix_exclude is None or
   175|       120|   0.00050807|  4.23392e-06|  0.00%|                                                                            not _key.startswith(prefix_exclude)):
   176|       121|   0.00053978|  4.46099e-06|  0.00%|            x = _key if prefix_to_add is None else prefix_to_add + _key
   177|       121|  0.000437737|  3.61766e-06|  0.00%|            try:
   178|       121|  0.000635624|  5.25309e-06|  0.00%|                y = _value.item()
   179|       109|  0.000534773|  4.90617e-06|  0.00%|            except (AttributeError, ValueError):
   180|       109|  0.000465393|  4.26966e-06|  0.00%|                y = _value
   181|       121|    0.0004673|  3.86199e-06|  0.00%|            return x, y
   182|         0|            0|            0|  0.00%|        else:
   183|         0|            0|            0|  0.00%|            return None, None
   184|         0|            0|            0|  0.00%|
   185|         7|  4.43459e-05|  6.33512e-06|  0.00%|    if isinstance(source, dict):
   186|         2|  1.07288e-05|  5.36442e-06|  0.00%|        for key, value in source.items():
   187|         1|  1.66893e-05|  1.66893e-05|  0.00%|            x, y = _get_x_y(key, value)
(call)|         1|  3.93391e-05|  3.93391e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities.py:173 _get_x_y
   188|         1|  5.72205e-06|  5.72205e-06|  0.00%|            if x is not None:
   189|         1|  6.67572e-06|  6.67572e-06|  0.00%|                destination[x] = destination.get(x, []) + [y]
   190|         0|            0|            0|  0.00%|
   191|         6|  3.31402e-05|  5.52336e-06|  0.00%|    elif isinstance(source, tuple):
   192|       126|  0.000529766|  4.20449e-06|  0.00%|        for key in source._fields:
   193|       120|  0.000521421|  4.34518e-06|  0.00%|            value = getattr(source, key)
   194|       120|   0.00143337|  1.19448e-05|  0.00%|            x, y = _get_x_y(key, value)
(call)|       120|   0.00440383|  3.66986e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities.py:173 _get_x_y
   195|       120|  0.000510216|   4.2518e-06|  0.00%|            if x is not None:
   196|       120|  0.000583172|  4.85977e-06|  0.00%|                destination[x] = destination.get(x, []) + [y]
   197|         0|            0|            0|  0.00%|
   198|         0|            0|            0|  0.00%|    else:
   199|         0|            0|            0|  0.00%|        print(type(source))
   200|         0|            0|            0|  0.00%|        raise Exception
   201|         0|            0|            0|  0.00%|
   202|         7|   2.5034e-05|  3.57628e-06|  0.00%|    return destination
   203|         0|            0|            0|  0.00%|
   204|         0|            0|            0|  0.00%|
   205|        24|  0.000202894|  8.45393e-06|  0.00%|def compute_ranking(x: torch.Tensor) -> torch.Tensor:
   206|         0|            0|            0|  0.00%|    """ Given a vector of shape: n, batch_size
   207|         0|            0|            0|  0.00%|        For each batch dimension it ranks the n elements"""
   208|        23|  0.000182152|  7.91964e-06|  0.00%|    assert len(x.shape) == 2
   209|        23|  0.000184059|  8.00257e-06|  0.00%|    n, batch_size = x.shape
   210|        23|    0.0343397|   0.00149303|  0.01%|    _, order = torch.sort(x, dim=-2, descending=False)
   211|         0|            0|            0|  0.00%|
   212|         0|            0|            0|  0.00%|    # this is the fast way which uses indexing on the left
   213|        23|   0.00116515|  5.06588e-05|  0.00%|    rank = torch.zeros_like(order)
   214|        23|   0.00136876|  5.95114e-05|  0.00%|    batch_index = torch.arange(batch_size, dtype=order.dtype, device=order.device).view(1, -1).expand(n, batch_size)
   215|        23|   0.00270581|  0.000117644|  0.00%|    rank[order, batch_index] = torch.arange(n, dtype=order.dtype, device=order.device).view(-1, 1).expand(n, batch_size)
   216|        23|  0.000247717|  1.07703e-05|  0.00%|    return rank
   217|         0|            0|            0|  0.00%|
   218|         0|            0|            0|  0.00%|
   219|        24|  0.000304461|  1.26859e-05|  0.00%|def compute_average_in_box(imgs: torch.Tensor, bounding_box: BB) -> torch.Tensor:
   220|         0|            0|            0|  0.00%|    """ Input batch of images: batch_size x ch x w x h
   221|         0|            0|            0|  0.00%|        z_where collections of [bx,by,bw,bh]
   222|         0|            0|            0|  0.00%|        bx.shape = batch x n_box
   223|         0|            0|            0|  0.00%|        similarly for by,bw,bh
   224|         0|            0|            0|  0.00%|        Output:
   225|         0|            0|            0|  0.00%|        av_intensity = n_box x batch_size
   226|         0|            0|            0|  0.00%|    """
   227|         0|            0|            0|  0.00%|    # cumulative sum in width and height, standard sum in channels
   228|        23|      0.12269|   0.00533435|  0.03%|    cum_sum = torch.cumsum(torch.cumsum(imgs.sum(dim=-3), dim=-1), dim=-2)
   229|        23|  0.000419855|  1.82546e-05|  0.00%|    assert len(cum_sum.shape) == 3
   230|        23|  0.000195503|  8.50014e-06|  0.00%|    batch_size, w, h = cum_sum.shape
   231|         0|            0|            0|  0.00%|
   232|         0|            0|            0|  0.00%|    # compute the x1,y1,x3,y3
   233|        23|    0.0810857|   0.00352546|  0.02%|    x1 = (bounding_box.bx - 0.5 * bounding_box.bw).long().clamp(min=0, max=w)
   234|        23|   0.00338054|   0.00014698|  0.00%|    x3 = (bounding_box.bx + 0.5 * bounding_box.bw).long().clamp(min=0, max=w)
   235|        23|   0.00258517|  0.000112399|  0.00%|    y1 = (bounding_box.by - 0.5 * bounding_box.bh).long().clamp(min=0, max=h)
   236|        23|   0.00251031|  0.000109144|  0.00%|    y3 = (bounding_box.by + 0.5 * bounding_box.bh).long().clamp(min=0, max=h)
   237|        23|  0.000348568|  1.51551e-05|  0.00%|    assert x1.shape == x3.shape == y1.shape == y3.shape  # n_boxes, batch_size
   238|         0|            0|            0|  0.00%|
   239|         0|            0|            0|  0.00%|    # compute the area
   240|         0|            0|            0|  0.00%|    # Note that this way penalizes boxes that go out-of-bound
   241|         0|            0|            0|  0.00%|    # This is in contrast to area = (x3-x1)*(y3-y1) which does NOT penalize boxes out of bound
   242|        23|  0.000814915|  3.54311e-05|  0.00%|    area = bounding_box.bw * bounding_box.bh
   243|        23|  0.000264645|  1.15063e-05|  0.00%|    assert area.shape == x1.shape == x3.shape == y1.shape == y3.shape
   244|        23|  0.000163078|  7.09036e-06|  0.00%|    n_boxes, batch_size = area.shape
   245|         0|            0|            0|  0.00%|
   246|         0|            0|            0|  0.00%|    # compute the total intensity in each box
   247|        23|   0.00015831|  6.88304e-06|  0.00%|    b_index = torch.arange(start=0, end=batch_size, step=1, device=x1.device,
   248|        23|   0.00151014|  6.56584e-05|  0.00%|                           dtype=x1.dtype).view(1, -1).expand(n_boxes, -1)
   249|        23|  0.000282049|   1.2263e-05|  0.00%|    assert b_index.shape == x1.shape
   250|         0|            0|            0|  0.00%|
   251|        23|   0.00158787|  6.90377e-05|  0.00%|    x1_ge_1 = (x1 >= 1).float()
(call)|        23|     0.037096|   0.00161287|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torch/tensor.py:25 wrapped
   252|        23|   0.00120282|  5.22966e-05|  0.00%|    x3_ge_1 = (x3 >= 1).float()
(call)|        23|   0.00105071|  4.56831e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/tensor.py:25 wrapped
   253|        23|   0.00111008|  4.82642e-05|  0.00%|    y1_ge_1 = (y1 >= 1).float()
(call)|        23|  0.000949621|  4.12879e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/tensor.py:25 wrapped
   254|        23|   0.00116372|  5.05966e-05|  0.00%|    y3_ge_1 = (y3 >= 1).float()
(call)|        23|   0.00094676|  4.11635e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/tensor.py:25 wrapped
   255|         0|            0|            0|  0.00%|    tot_intensity = cum_sum[b_index, x3-1, y3-1] * x3_ge_1 * y3_ge_1 + \
   256|         0|            0|            0|  0.00%|                    cum_sum[b_index, x1-1, y1-1] * x1_ge_1 * y1_ge_1 - \
   257|        23|    0.0344081|     0.001496|  0.01%|                    cum_sum[b_index, x1-1, y3-1] * x1_ge_1 * y3_ge_1 - \
   258|        23|   0.00440717|  0.000191616|  0.00%|                    cum_sum[b_index, x3-1, y1-1] * x3_ge_1 * y1_ge_1
   259|        23|   0.00111032|  4.82746e-05|  0.00%|    return tot_intensity / area
   260|         0|            0|            0|  0.00%|
   261|         0|            0|            0|  0.00%|
   262|        46|  0.000323534|  7.03335e-06|  0.00%|def sample_from_constraints_dict(dict_soft_constraints: dict,
   263|         0|            0|            0|  0.00%|                                 var_name: str,
   264|         0|            0|            0|  0.00%|                                 var_value: torch.Tensor,
   265|         0|            0|            0|  0.00%|                                 verbose: bool = False,
   266|         1|  6.22272e-05|  6.22272e-05|  0.00%|                                 chosen: Optional[int] = None) -> torch.Tensor:
(call)|         1|  2.74181e-05|  2.74181e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
   267|         0|            0|            0|  0.00%|
   268|        46|   0.00184202|   4.0044e-05|  0.00%|    cost = torch.zeros_like(var_value)
   269|        46|  0.000540733|  1.17551e-05|  0.00%|    var_constraint_params = dict_soft_constraints[var_name]
   270|         0|            0|            0|  0.00%|
   271|        46|  0.000285864|  6.21443e-06|  0.00%|    if 'lower_bound_value' in var_constraint_params:
   272|        23|   0.00011301|   4.9135e-06|  0.00%|        left = var_constraint_params['lower_bound_value']
   273|        23|  0.000151873|  6.60316e-06|  0.00%|        width_low = var_constraint_params['lower_bound_width']
   274|        23|    0.0001266|  5.50436e-06|  0.00%|        exponent_low = var_constraint_params['lower_bound_exponent']
   275|        23|  0.000134945|  5.86717e-06|  0.00%|        strength_low = var_constraint_params['lower_bound_strength']
   276|        23|   0.00245047|  0.000106542|  0.00%|        activity_low = torch.clamp(left + width_low - var_value, min=0.) / width_low
(call)|        23|    0.0016551|  7.19609e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/tensor.py:402 __rsub__
   277|        23|   0.00247002|  0.000107392|  0.00%|        cost += strength_low * activity_low.pow(exponent_low)
   278|         0|            0|            0|  0.00%|
   279|        46|  0.000404596|  8.79557e-06|  0.00%|    if 'upper_bound_value' in var_constraint_params:
   280|        23|  0.000110388|  4.79947e-06|  0.00%|        right = var_constraint_params['upper_bound_value']
   281|        23|  0.000136852|   5.9501e-06|  0.00%|        width_up = var_constraint_params['upper_bound_width']
   282|        23|  0.000126362|  5.49399e-06|  0.00%|        exponent_up = var_constraint_params['upper_bound_exponent']
   283|        23|  0.000126362|  5.49399e-06|  0.00%|        strength_up = var_constraint_params['upper_bound_strength']
   284|        23|   0.00323534|  0.000140667|  0.00%|        activity_up = torch.clamp(var_value - right + width_up, min=0.) / width_up
   285|        23|   0.00242376|  0.000105381|  0.00%|        cost += strength_up * activity_up.pow(exponent_up)
   286|         0|            0|            0|  0.00%|
   287|        46|  0.000415802|  9.03917e-06|  0.00%|    if 'strength' in var_constraint_params:
   288|        23|  0.000152111|  6.61352e-06|  0.00%|        strength = var_constraint_params['strength']
   289|        23|  0.000151157|  6.57206e-06|  0.00%|        exponent = var_constraint_params['exponent']
   290|        23|   0.00313187|  0.000136168|  0.00%|        cost += strength * var_value.pow(exponent)
   291|         0|            0|            0|  0.00%|
   292|        46|  0.000414371|  9.00808e-06|  0.00%|    if verbose:
   293|         0|            0|            0|  0.00%|        if chosen is None:
   294|         0|            0|            0|  0.00%|            print("constraint name ->", var_name)
   295|         0|            0|            0|  0.00%|            print("input value ->", var_value)
   296|         0|            0|            0|  0.00%|            print("cost ->", cost)
   297|         0|            0|            0|  0.00%|        else:
   298|         0|            0|            0|  0.00%|            print("constraint name ->", var_name)
   299|         0|            0|            0|  0.00%|            print("input value ->", var_value[..., chosen])
   300|         0|            0|            0|  0.00%|            print("cost ->", cost[..., chosen])
   301|         0|            0|            0|  0.00%|
   302|        46|  0.000252247|  5.48363e-06|  0.00%|    return cost
File: /home/jupyter/REPOS/spacetx-research/src/MODULES/unet_parts.py
File duration: 0.907241s (0.19%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.81334e-05|  1.40667e-05|  0.00%|import torch
     2|         1|  7.15256e-06|  7.15256e-06|  0.00%|import torch.nn as nn
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         3|  8.10623e-05|  2.70208e-05|  0.00%|class DoubleConvolutionBlock(nn.Module):
(call)|         1|  4.19617e-05|  4.19617e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/unet_parts.py:5 DoubleConvolutionBlock
     6|         0|            0|            0|  0.00%|    """ [ conv(f=3,p=1,s=1) => BN => ReLU ] x 2
     7|         0|            0|            0|  0.00%|        NOT: [ BN => conv(f=3,p=1,s=1) => ReLU ] x 2
     8|         0|            0|            0|  0.00%|        The spatial extension of the input is unchanged (because f=3, p=1, s=1).
     9|         0|            0|            0|  0.00%|        The convolutional layers have NO bias since they are followed by BATCH NORM
    10|         0|            0|            0|  0.00%|        The number of channels is passed as a parameter: ch_in -> ch_out -> ch_out
    11|         1|  3.57628e-06|  3.57628e-06|  0.00%|    """
    12|         0|            0|            0|  0.00%|    # Is this the way to define class constants?
    13|         1|  6.91414e-06|  6.91414e-06|  0.00%|    PADDING = 1
    14|         1|  4.76837e-06|  4.76837e-06|  0.00%|    FILTER_SIZE = 3
    15|         0|            0|            0|  0.00%|
    16|        10|  3.95775e-05|  3.95775e-06|  0.00%|    def __init__(self, ch_in: int, ch_out: int):
    17|         9|  0.000115633|  1.28481e-05|  0.00%|        super().__init__()
(call)|         9|   0.00479198|  0.000532442|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:71 __init__
    18|         9|  3.91006e-05|  4.34452e-06|  0.00%|        self.double_conv = nn.Sequential(
    19|         9|  0.000195742|  2.17491e-05|  0.00%|            nn.Conv2d(ch_in, ch_out, self.FILTER_SIZE, bias=True, padding=self.PADDING),
(call)|         9|     0.119024|    0.0132248|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/conv.py:329 __init__
    20|         9|   0.00014329|  1.59211e-05|  0.00%|            nn.ReLU(inplace=True),
(call)|         9|   0.00564981|  0.000627756|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/activation.py:89 __init__
    21|         9|  0.000169039|  1.87821e-05|  0.00%|            nn.Conv2d(ch_out, ch_out, self.FILTER_SIZE, bias=True, padding=self.PADDING),
(call)|         9|    0.0627298|   0.00696998|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/conv.py:329 __init__
    22|         9|  0.000319481|  3.54979e-05|  0.00%|            nn.ReLU(inplace=True)
(call)|         9|   0.00533509|  0.000592788|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/activation.py:89 __init__
(call)|         9|   0.00842905|  0.000936561|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/container.py:47 __init__
(call)|         9|  0.000679255|  7.54727e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    23|         0|            0|            0|  0.00%|        )
    24|         0|            0|            0|  0.00%|
    25|         0|            0|            0|  0.00%|#        self.double_conv = nn.Sequential(
    26|         0|            0|            0|  0.00%|#            nn.ReplicationPad2d(self.PADDING),  # reflection padding
    27|         0|            0|            0|  0.00%|#            nn.Conv2d(ch_in, ch_out, self.FILTER_SIZE, bias=False),
    28|         0|            0|            0|  0.00%|#            nn.BatchNorm2d(ch_out, affine=True, track_running_stats=True),
    29|         0|            0|            0|  0.00%|#            nn.ReLU(inplace=True),
    30|         0|            0|            0|  0.00%|#            nn.ReplicationPad2d(self.PADDING),  # reflection padding
    31|         0|            0|            0|  0.00%|#            nn.Conv2d(ch_out, ch_out, self.FILTER_SIZE, bias=False),
    32|         0|            0|            0|  0.00%|#            nn.BatchNorm2d(ch_out, affine=True, track_running_stats=True),
    33|         0|            0|            0|  0.00%|#            nn.ReLU(inplace=True)
    34|         0|            0|            0|  0.00%|#        )
    35|         0|            0|            0|  0.00%|
    36|       217|  0.000739813|  3.40928e-06|  0.00%|    def forward(self, x, verbose=False):
    37|       216|   0.00517225|  2.39456e-05|  0.00%|        y = self.double_conv(x)
(call)|       216|   0.00904942|  4.18954e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:580 __getattr__
(call)|       216|      4.36905|    0.0202271|  0.92%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:540 __call__
    38|       216|   0.00083375|  3.85995e-06|  0.00%|        if verbose:
    39|         0|            0|            0|  0.00%|            print("input -> output", x.shape, y.shape)
    40|       216|  0.000766039|  3.54648e-06|  0.00%|        return y
    41|         0|            0|            0|  0.00%|
    42|         0|            0|            0|  0.00%|
    43|         3|  8.27312e-05|  2.75771e-05|  0.00%|class DownBlock(nn.Module):
(call)|         1|   2.5034e-05|   2.5034e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/unet_parts.py:43 DownBlock
    44|         0|            0|            0|  0.00%|    """ Performs:  max_pool(2x2) + double_convolutions
    45|         0|            0|            0|  0.00%|        Note that at initialization you need to specify: ch_in, ch_out
    46|         1|  3.57628e-06|  3.57628e-06|  0.00%|    """
    47|         0|            0|            0|  0.00%|
    48|         5|  1.93119e-05|  3.86238e-06|  0.00%|    def __init__(self, ch_in: int, ch_out: int):
    49|         4|  5.98431e-05|  1.49608e-05|  0.00%|        super().__init__()
(call)|         4|   0.00216675|  0.000541687|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:71 __init__
    50|         4|  0.000103235|  2.58088e-05|  0.00%|        self.max_pool_layer = nn.MaxPool2d(2, 2)
(call)|         4|   0.00351739|  0.000879347|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/pooling.py:15 __init__
(call)|         4|  0.000301123|  7.52807e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    51|         4|   8.4877e-05|  2.12193e-05|  0.00%|        self.double_conv = DoubleConvolutionBlock(ch_in, ch_out)
(call)|         4|    0.0649667|    0.0162417|  0.01%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/unet_parts.py:16 __init__
(call)|         4|  0.000276089|  6.90222e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    52|         0|            0|            0|  0.00%|
    53|        97|  0.000352383|  3.63281e-06|  0.00%|    def forward(self, x0, verbose=False):
    54|         0|            0|            0|  0.00%|
    55|        96|   0.00238013|   2.4793e-05|  0.00%|        x1 = self.max_pool_layer.forward(x0)
(call)|        96|   0.00435185|  4.53318e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:580 __getattr__
(call)|        96|     0.102917|   0.00107206|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/pooling.py:138 forward
    56|        96|   0.00219607|  2.28758e-05|  0.00%|        x2 = self.double_conv.forward(x1)
(call)|        96|   0.00427008|    4.448e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:580 __getattr__
(call)|        96|     0.176542|   0.00183897|  0.04%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/unet_parts.py:36 forward
    57|         0|            0|            0|  0.00%|
    58|        96|  0.000371218|  3.86685e-06|  0.00%|        if verbose:
    59|         0|            0|            0|  0.00%|            print("input -> output", x0.shape, x2.shape)
    60|         0|            0|            0|  0.00%|
    61|        96|  0.000347376|   3.6185e-06|  0.00%|        return x2
    62|         0|            0|            0|  0.00%|
    63|         0|            0|            0|  0.00%|
    64|         3|  3.93391e-05|   1.3113e-05|  0.00%|class UpBlock(nn.Module):
(call)|         1|  2.40803e-05|  2.40803e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/unet_parts.py:64 UpBlock
    65|         0|            0|            0|  0.00%|    """ Performs: up_conv(f=2,s=2) + concatenation + double_convolutions
    66|         0|            0|            0|  0.00%|        During upconv the channels go from ch_in to ch_in/2
    67|         0|            0|            0|  0.00%|        Since I am concatenating with something which has ch_in/2
    68|         0|            0|            0|  0.00%|        During the double_convolution the channels go from ch_in,ch_out
    69|         0|            0|            0|  0.00%|        Therefore during initialization only ch_in,ch_out of the double convolution need to be specified.
    70|         0|            0|            0|  0.00%|        The forward function takes two tensors: x_from_contracting_path , x_to_upconv
    71|         1|  3.57628e-06|  3.57628e-06|  0.00%|    """
    72|         5|  2.47955e-05|  4.95911e-06|  0.00%|    def __init__(self, ch_in: int, ch_out: int):
    73|         4|  5.03063e-05|  1.25766e-05|  0.00%|        super().__init__()
(call)|         4|   0.00214672|   0.00053668|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:71 __init__
    74|         4|  6.53267e-05|  1.63317e-05|  0.00%|        self.ch_in = ch_in
(call)|         4|  0.000181913|  4.54783e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    75|         4|    0.0001297|  3.24249e-05|  0.00%|        self.up_conv_layer = nn.ConvTranspose2d(ch_in, int(ch_in/2), kernel_size=2, stride=2, padding=0)
(call)|         4|    0.0210128|    0.0052532|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/conv.py:769 __init__
(call)|         4|  0.000324011|  8.10027e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    76|         4|  9.58443e-05|  2.39611e-05|  0.00%|        self.double_conv = DoubleConvolutionBlock(ch_in, ch_out)
(call)|         4|    0.0771513|    0.0192878|  0.02%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/unet_parts.py:16 __init__
(call)|         4|  0.000310183|  7.75456e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    77|         0|            0|            0|  0.00%|
    78|        97|  0.000370026|   3.8147e-06|  0.00%|    def forward(self, x_from_compressing_path, x_to_upconv, verbose=False):
    79|        96|   0.00321317|  3.34705e-05|  0.00%|        x = self.up_conv_layer.forward(x_to_upconv)
(call)|        96|   0.00423813|  4.41472e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:580 __getattr__
(call)|        96|    0.0348046|  0.000362548|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/conv.py:781 forward
    80|        96|     0.884492|   0.00921346|  0.19%|        x1 = torch.cat((x_from_compressing_path, x), dim=-3)  # concatenate along the channel dimension
    81|         0|            0|            0|  0.00%|
    82|        96|   0.00121355|  1.26412e-05|  0.00%|        if verbose:
    83|         0|            0|            0|  0.00%|            print("x_from_compressing_path", x_from_compressing_path.shape)
    84|         0|            0|            0|  0.00%|            print("x_to_upconv", x_to_upconv.shape)
    85|         0|            0|            0|  0.00%|            print("after_upconv", x.shape)
    86|         0|            0|            0|  0.00%|            print("after concat", x1.shape)
    87|         0|            0|            0|  0.00%|            print("ch_in", self.ch_in)
    88|         0|            0|            0|  0.00%|
    89|        96|   0.00246477|  2.56747e-05|  0.00%|        x2 = self.double_conv.forward(x1)
(call)|        96|    0.0043602|  4.54187e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:580 __getattr__
(call)|        96|     0.139183|   0.00144983|  0.03%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/unet_parts.py:36 forward
    90|         0|            0|            0|  0.00%|
    91|        96|  0.000411987|  4.29153e-06|  0.00%|        return x2
File: <__array_function__ internals>_7
File duration: 0.748022s (0.16%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|     15033|    0.0439298|  2.92223e-06|  0.01%|
(call)|         1|  1.09673e-05|  1.09673e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000100851|  0.000100851|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|     15031|     0.171449|  1.14063e-05|  0.04%|
(call)|     15031|    0.0988822|  6.57855e-06|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/multiarray.py:706 dot
     5|     15031|    0.0546074|  3.63298e-06|  0.01%|
     6|     15031|     0.478036|  3.18034e-05|  0.10%|
File: <__array_function__ internals>_46
File duration: 0.303249s (0.06%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|     10225|    0.0283043|  2.76815e-06|  0.01%|
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000121832|  0.000121832|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|     10223|     0.116865|  1.14316e-05|  0.02%|
(call)|     10223|    0.0721941|  7.06193e-06|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/fromnumeric.py:2245 _any_dispatcher
     5|     10223|    0.0370383|  3.62304e-06|  0.01%|
     6|     10223|     0.121041|  1.18401e-05|  0.03%|
(call)|     10223|     0.876385|  8.57268e-05|  0.18%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/fromnumeric.py:2249 any
File: /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_visualization.py
File duration: 0.257936s (0.05%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  7.93934e-05|  3.96967e-05|  0.00%|import PIL.Image
     2|         1|  5.91278e-05|  5.91278e-05|  0.00%|import PIL.ImageDraw
(call)|         1|    0.0100796|    0.0100796|  0.00%|# <frozen importlib._bootstrap>:978 _find_and_load
     3|         1|  2.43187e-05|  2.43187e-05|  0.00%|import torch
     4|         1|  2.24113e-05|  2.24113e-05|  0.00%|import numpy
     5|         1|  5.55515e-05|  5.55515e-05|  0.00%|from typing import Tuple, Optional, Union
(call)|         1|  3.33786e-05|  3.33786e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
     6|         1|  0.000131607|  0.000131607|  0.00%|from torchvision import utils
(call)|         1|      5.77403|      5.77403|  1.21%|# <frozen importlib._bootstrap>:978 _find_and_load
(call)|         1|  4.55379e-05|  4.55379e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
     7|         1|  7.08103e-05|  7.08103e-05|  0.00%|from matplotlib import pyplot as plt
(call)|         1|  4.36306e-05|  4.36306e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
     8|         1|  2.52724e-05|  2.52724e-05|  0.00%|import skimage.color
     9|         1|  9.60827e-05|  9.60827e-05|  0.00%|import skimage.morphology
(call)|         1|      11.5759|      11.5759|  2.43%|# <frozen importlib._bootstrap>:978 _find_and_load
    10|         1|  4.00543e-05|  4.00543e-05|  0.00%|import neptune
    11|         0|            0|            0|  0.00%|
    12|         1|  6.03199e-05|  6.03199e-05|  0.00%|from MODULES.namedtuple import BB, Output, Segmentation
(call)|         1|  4.02927e-05|  4.02927e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
    13|         1|  5.48363e-05|  5.48363e-05|  0.00%|from MODULES.utilities_neptune import log_img_and_chart, log_img_only
(call)|         1|  2.14577e-05|  2.14577e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
    14|         0|            0|            0|  0.00%|
    15|         0|            0|            0|  0.00%|
    16|         0|            0|            0|  0.00%|def contours_from_labels(labels: numpy.ndarray,
    17|         1|  2.52724e-05|  2.52724e-05|  0.00%|                         contour_thickness: int = 1) -> numpy.ndarray:
    18|         0|            0|            0|  0.00%|    assert len(labels.shape) == 2
    19|         0|            0|            0|  0.00%|    assert contour_thickness >= 1
    20|         0|            0|            0|  0.00%|    contours = (skimage.morphology.dilation(labels) != labels)
    21|         0|            0|            0|  0.00%|
    22|         0|            0|            0|  0.00%|    for i in range(1, contour_thickness):
    23|         0|            0|            0|  0.00%|        contours = skimage.morphology.binary_dilation(contours)
    24|         0|            0|            0|  0.00%|    return contours
    25|         0|            0|            0|  0.00%|
    26|         0|            0|            0|  0.00%|
    27|         1|  4.72069e-05|  4.72069e-05|  0.00%|def add_red_contours(image: numpy.ndarray, contours: numpy.ndarray) -> numpy.ndarray:
    28|         0|            0|            0|  0.00%|    assert contours.dtype == bool
    29|         0|            0|            0|  0.00%|    if (len(image.shape) == 3) and (image.shape[-1] == 3):
    30|         0|            0|            0|  0.00%|        image_with_contours = image
    31|         0|            0|            0|  0.00%|    elif len(image.shape) == 2:
    32|         0|            0|            0|  0.00%|        image_with_contours = skimage.color.gray2rgb(image)
    33|         0|            0|            0|  0.00%|    else:
    34|         0|            0|            0|  0.00%|        raise Exception
    35|         0|            0|            0|  0.00%|    image_with_contours[contours, 0] = 1
    36|         0|            0|            0|  0.00%|    image_with_contours[contours, 1:] = 0
    37|         0|            0|            0|  0.00%|    return image_with_contours
    38|         0|            0|            0|  0.00%|
    39|         0|            0|            0|  0.00%|
    40|         0|            0|            0|  0.00%|def plot_label_contours(label: Union[torch.Tensor, numpy.ndarray],
    41|         0|            0|            0|  0.00%|                        image: Union[torch.Tensor, numpy.ndarray],
    42|         0|            0|            0|  0.00%|                        contour_thickness: int = 2,
    43|         0|            0|            0|  0.00%|                        figsize: tuple = (24, 24),
    44|         0|            0|            0|  0.00%|                        experiment: Optional[neptune.experiments.Experiment] = None,
    45|         1|  0.000149488|  0.000149488|  0.00%|                        neptune_name: Optional[str] = None):
(call)|         4|  0.000864029|  0.000216007|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
    46|         0|            0|            0|  0.00%|
    47|         0|            0|            0|  0.00%|    assert len(label.shape) == 2
    48|         0|            0|            0|  0.00%|    if torch.is_tensor(label):
    49|         0|            0|            0|  0.00%|        label = label.cpu().numpy()
    50|         0|            0|            0|  0.00%|
    51|         0|            0|            0|  0.00%|    if torch.is_tensor(image):
    52|         0|            0|            0|  0.00%|        if len(image.shape) == 3:
    53|         0|            0|            0|  0.00%|            image = image.permute(1, 2, 0).cpu().numpy()
    54|         0|            0|            0|  0.00%|        else:
    55|         0|            0|            0|  0.00%|            image = image.cpu().numpy()
    56|         0|            0|            0|  0.00%|    if len(image.shape) == 3 and (image.shape[-1] != 3):
    57|         0|            0|            0|  0.00%|        image = image[..., 0]
    58|         0|            0|            0|  0.00%|
    59|         0|            0|            0|  0.00%|    assert image.shape[:2] == label.shape[:2]
    60|         0|            0|            0|  0.00%|
    61|         0|            0|            0|  0.00%|    contours = contours_from_labels(label, contour_thickness)
    62|         0|            0|            0|  0.00%|    fig, ax = plt.subplots(ncols=3, figsize=figsize)
    63|         0|            0|            0|  0.00%|    ax[0].imshow(image)
    64|         0|            0|            0|  0.00%|    ax[1].imshow(add_red_contours(image, contours))
    65|         0|            0|            0|  0.00%|    ax[2].imshow(label, cmap='gray')
    66|         0|            0|            0|  0.00%|
    67|         0|            0|            0|  0.00%|    fig.tight_layout()
    68|         0|            0|            0|  0.00%|    if neptune_name is not None:
    69|         0|            0|            0|  0.00%|        #log_img_and_chart(name=neptune_name, fig=fig, experiment=experiment)
    70|         0|            0|            0|  0.00%|        log_img_only(name=neptune_name, fig=fig, experiment=experiment)
    71|         0|            0|            0|  0.00%|    plt.close(fig)
    72|         0|            0|            0|  0.00%|    return fig
    73|         0|            0|            0|  0.00%|
    74|         0|            0|            0|  0.00%|
    75|         3|  3.71933e-05|  1.23978e-05|  0.00%|def draw_img(c: torch.tensor,
    76|         1|  1.95503e-05|  1.95503e-05|  0.00%|             bounding_box: BB,
    77|         1|  4.29153e-05|  4.29153e-05|  0.00%|             big_mask: torch.tensor,
    78|         1|  1.95503e-05|  1.95503e-05|  0.00%|             big_img: torch.tensor,
    79|         1|  1.81198e-05|  1.81198e-05|  0.00%|             big_bg: torch.tensor,
    80|         1|  1.88351e-05|  1.88351e-05|  0.00%|             draw_bg: bool,
    81|         1|  1.93119e-05|  1.93119e-05|  0.00%|             draw_boxes: bool) -> torch.tensor:
    82|         2|  2.64645e-05|  1.32322e-05|  0.00%|    assert len(c.shape) == 2  # boxes, batch
    83|         2|  2.98023e-05|  1.49012e-05|  0.00%|    assert len(big_mask.shape) == len(big_img.shape) == 5  # boxes, batch, ch, w, h
    84|         0|            0|            0|  0.00%|
    85|         2|  0.000232697|  0.000116348|  0.00%|    rec_imgs_no_bb = (c[..., None, None, None] * big_mask * big_img).sum(dim=-5)  # sum over boxes
    86|         2|  0.000196695|  9.83477e-05|  0.00%|    fg_mask = (c[..., None, None, None] * big_mask).sum(dim=-5)  # sum over boxes
    87|         2|  0.000133991|  6.69956e-05|  0.00%|    background = (1 - fg_mask) * big_bg if draw_bg else torch.zeros_like(big_bg)
    88|         0|            0|            0|  0.00%|
    89|         2|  4.22001e-05|     2.11e-05|  0.00%|    width, height = rec_imgs_no_bb.shape[-2:]
    90|         0|            0|            0|  0.00%|
    91|         0|            0|            0|  0.00%|    bounding_boxes = draw_bounding_boxes(c=c,
    92|         0|            0|            0|  0.00%|                                         bounding_box=bounding_box,
    93|         0|            0|            0|  0.00%|                                         width=width,
    94|         2|   0.00014925|   7.4625e-05|  0.00%|                                         height=height) if draw_boxes else torch.zeros_like(rec_imgs_no_bb)
(call)|         2|     0.259935|     0.129968|  0.05%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_visualization.py:100 draw_bounding_boxes
(call)|         2|  6.24657e-05|  3.12328e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/PIL/Image.py:629 __del__
    95|         2|  0.000210524|  0.000105262|  0.00%|    mask_no_bb = (torch.sum(bounding_boxes, dim=-3, keepdim=True) == 0)
(call)|         2|  0.000178099|  8.90493e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/tensor.py:25 wrapped
    96|         0|            0|            0|  0.00%|
    97|         2|   0.00033021|  0.000165105|  0.00%|    return mask_no_bb * (rec_imgs_no_bb + background) + ~mask_no_bb * bounding_boxes
    98|         0|            0|            0|  0.00%|
    99|         0|            0|            0|  0.00%|
   100|         3|  6.96182e-05|  2.32061e-05|  0.00%|def draw_bounding_boxes(c: Optional[torch.Tensor], bounding_box: BB, width: int, height: int) -> torch.Tensor:
(call)|         1|  3.17097e-05|  3.17097e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
   101|         0|            0|            0|  0.00%|    # set all prob to one if they are not passed as input
   102|         2|  2.43187e-05|  1.21593e-05|  0.00%|    if c is None:
   103|         0|            0|            0|  0.00%|        c = torch.ones_like(bounding_box.bx).bool()
   104|         0|            0|            0|  0.00%|
   105|         0|            0|            0|  0.00%|    # checks
   106|         2|  1.90735e-05|  9.53674e-06|  0.00%|    assert c.shape == bounding_box.bx.shape
   107|         2|  1.45435e-05|  7.27177e-06|  0.00%|    assert len(bounding_box.bx.shape) == 2
   108|         2|  1.40667e-05|  7.03335e-06|  0.00%|    n_boxes, batch_size = bounding_box.bx.shape
   109|         0|            0|            0|  0.00%|
   110|         0|            0|            0|  0.00%|    # prepare the storage
   111|         2|  0.000512838|  0.000256419|  0.00%|    batch_bb_np = numpy.zeros((batch_size, width, height, 3))  # numpy storage for bounding box images
   112|         0|            0|            0|  0.00%|
   113|         0|            0|            0|  0.00%|    # compute the coordinates of the bounding boxes and the probability of each box
   114|         2|  0.000147343|  7.36713e-05|  0.00%|    x1 = bounding_box.bx - 0.5 * bounding_box.bw
   115|         2|  0.000134706|  6.73532e-05|  0.00%|    x3 = bounding_box.bx + 0.5 * bounding_box.bw
   116|         2|  0.000113964|   5.6982e-05|  0.00%|    y1 = bounding_box.by - 0.5 * bounding_box.bh
   117|         2|  0.000120401|  6.02007e-05|  0.00%|    y3 = bounding_box.by + 0.5 * bounding_box.bh
   118|         2|  5.93662e-05|  2.96831e-05|  0.00%|    assert x1.shape == x3.shape == y1.shape == y3.shape  # n_boxes, batch_size
   119|         2|  0.000213861|  0.000106931|  0.00%|    x1y1x3y3 = torch.stack((x1, y1, x3, y3), dim=-1)
   120|         0|            0|            0|  0.00%|
   121|         0|            0|            0|  0.00%|    # draw the bounding boxes
   122|        18|  0.000297546|  1.65304e-05|  0.00%|    for batch in range(batch_size):
   123|         0|            0|            0|  0.00%|
   124|         0|            0|            0|  0.00%|        # Draw on PIL
   125|        16|  0.000468493|  2.92808e-05|  0.00%|        img = PIL.Image.new('RGB', (width, height), color=0)
(call)|        16|   0.00374961|  0.000234351|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/PIL/Image.py:2469 new
(call)|        16|  0.000416994|  2.60621e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/PIL/Image.py:629 __del__
   126|        16|  0.000254869|  1.59293e-05|  0.00%|        draw = PIL.ImageDraw.Draw(img)
(call)|        16|    0.0021739|  0.000135869|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/PIL/ImageDraw.py:454 Draw
   127|       416|   0.00262451|  6.30892e-06|  0.00%|        for box in range(n_boxes):
   128|       400|     0.017154|  4.28849e-05|  0.00%|            if c[box, batch]:
   129|       266|     0.019419|  7.30036e-05|  0.00%|                draw.rectangle(x1y1x3y3[box, batch, :].cpu().numpy(), outline='red', fill=None)
(call)|       266|    0.0649185|  0.000244055|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/PIL/ImageDraw.py:245 rectangle
   130|        16|     0.145154|    0.0090721|  0.03%|        batch_bb_np[batch, ...] = numpy.array(img.getdata(), numpy.uint8).reshape((width, height, 3))
(call)|        16|  0.000710487|  4.44055e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/PIL/Image.py:1286 getdata
   131|         0|            0|            0|  0.00%|
   132|         0|            0|            0|  0.00%|    # Transform np to torch, rescale from [0,255] to (0,1)
   133|         2|  0.000775337|  0.000387669|  0.00%|    batch_bb_torch = torch.from_numpy(batch_bb_np).permute(0, 3, 2, 1).float() / 255  # permute(0,3,2,1) is CORRECT
   134|         2|    0.0004251|   0.00021255|  0.00%|    return batch_bb_torch.to(bounding_box.bx.device)
   135|         0|            0|            0|  0.00%|
   136|         0|            0|            0|  0.00%|
   137|         0|            0|            0|  0.00%|def plot_grid(img,
   138|         0|            0|            0|  0.00%|              figsize: Optional[Tuple[float, float]] = None,
   139|         0|            0|            0|  0.00%|              experiment: Optional[neptune.experiments.Experiment] = None,
   140|         1|   0.00015378|   0.00015378|  0.00%|              neptune_name: Optional[str] = None):
(call)|         1|  0.000654221|  0.000654221|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:746 __getitem__
(call)|         3|   0.00107551|  0.000358502|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
   141|         0|            0|            0|  0.00%|
   142|         0|            0|            0|  0.00%|    assert len(img.shape) == 3
   143|         0|            0|            0|  0.00%|    n_max = img.shape[-3]
   144|         0|            0|            0|  0.00%|
   145|         0|            0|            0|  0.00%|    row_max = n_max // 4
   146|         0|            0|            0|  0.00%|    if row_max <= 1:
   147|         0|            0|            0|  0.00%|        fig, axes = plt.subplots(ncols=n_max, figsize=figsize)
   148|         0|            0|            0|  0.00%|        for n in range(n_max):
   149|         0|            0|            0|  0.00%|            axes[n].imshow(img[n])
   150|         0|            0|            0|  0.00%|    else:
   151|         0|            0|            0|  0.00%|        fig, axes = plt.subplots(ncols=4, nrows=row_max, figsize=figsize)
   152|         0|            0|            0|  0.00%|        for n in range(4 * row_max):
   153|         0|            0|            0|  0.00%|            row = n // 4
   154|         0|            0|            0|  0.00%|            col = n % 4
   155|         0|            0|            0|  0.00%|            axes[row, col].imshow(img[n])
   156|         0|            0|            0|  0.00%|
   157|         0|            0|            0|  0.00%|    fig.tight_layout()
   158|         0|            0|            0|  0.00%|    if neptune_name is not None:
   159|         0|            0|            0|  0.00%|        #log_img_and_chart(name=neptune_name, fig=fig, experiment=experiment)
   160|         0|            0|            0|  0.00%|        log_img_only(name=neptune_name, fig=fig, experiment=experiment)
   161|         0|            0|            0|  0.00%|    plt.close(fig)
   162|         0|            0|            0|  0.00%|    return fig
   163|         0|            0|            0|  0.00%|
   164|         0|            0|            0|  0.00%|
   165|        13|  0.000114441|  8.80315e-06|  0.00%|def show_batch(images: torch.Tensor,
   166|         0|            0|            0|  0.00%|               n_col: int = 4,
   167|         0|            0|            0|  0.00%|               n_padding: int = 10,
   168|         0|            0|            0|  0.00%|               title: Optional[str] = None,
   169|         0|            0|            0|  0.00%|               pad_value: int = 1,
   170|         0|            0|            0|  0.00%|               normalize_range: Optional[tuple] = None,
   171|         0|            0|            0|  0.00%|               figsize: Optional[Tuple[float, float]] = None,
   172|         0|            0|            0|  0.00%|               experiment: Optional[neptune.experiments.Experiment] = None,
   173|         1|  0.000179291|  0.000179291|  0.00%|               neptune_name: Optional[str] = None):
(call)|         5|  0.000890493|  0.000178099|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
(call)|         1|  5.24521e-05|  5.24521e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:746 __getitem__
   174|         0|            0|            0|  0.00%|
   175|         0|            0|            0|  0.00%|    """Visualize a torch tensor of shape: (batch x ch x width x height) """
   176|        13|  0.000181675|   1.3975e-05|  0.00%|    assert len(images.shape) == 4  # batch, ch, width, height
   177|        13|  0.000102282|  7.86781e-06|  0.00%|    if images.device != "cpu":
   178|        13|    0.0530448|   0.00408037|  0.01%|        images = images.cpu()
   179|        13|  0.000181675|   1.3975e-05|  0.00%|    if normalize_range is None:
   180|        12|  0.000485182|  4.04318e-05|  0.00%|        grid = utils.make_grid(images, n_col, n_padding, normalize=False, pad_value=pad_value)
(call)|        12|    0.0174136|   0.00145113|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/utils.py:6 make_grid
   181|         0|            0|            0|  0.00%|    else:
   182|         1|  7.39098e-06|  7.39098e-06|  0.00%|        grid = utils.make_grid(images, n_col, n_padding, normalize=True, range=normalize_range,
   183|         1|  3.60012e-05|  3.60012e-05|  0.00%|                               scale_each=False, pad_value=pad_value)
(call)|         1|    0.0267799|    0.0267799|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/utils.py:6 make_grid
   184|         0|            0|            0|  0.00%|
   185|        13|  0.000397444|  3.05726e-05|  0.00%|    fig = plt.figure(figsize=figsize)
(call)|        13|     0.160558|    0.0123506|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/pyplot.py:427 figure
   186|        13|   0.00136352|  0.000104886|  0.00%|    plt.imshow(grid.detach().permute(1, 2, 0).squeeze(-1).numpy())
(call)|        13|       5.4554|     0.419646|  1.15%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/pyplot.py:2638 imshow
   187|        13|  0.000108242|  8.32631e-06|  0.00%|    if isinstance(title, str):
   188|        10|  0.000175238|  1.75238e-05|  0.00%|        plt.title(title)
(call)|        10|    0.0524628|   0.00524628|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/pyplot.py:3029 title
   189|        13|  0.000375509|  2.88853e-05|  0.00%|    fig.tight_layout()
(call)|        13|      11.6948|     0.899602|  2.46%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/cbook/deprecation.py:347 wrapper
   190|         0|            0|            0|  0.00%|
   191|        13|  7.51019e-05|  5.77707e-06|  0.00%|    if neptune_name is not None:
   192|         0|            0|            0|  0.00%|        #log_img_and_chart(name=neptune_name, fig=fig, experiment=experiment)
   193|        11|  0.000290871|  2.64428e-05|  0.00%|        log_img_only(name=neptune_name, fig=fig, experiment=experiment)
(call)|        11|      8.81161|     0.801055|  1.85%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_neptune.py:10 log_img_only
   194|         0|            0|            0|  0.00%|
   195|        13|  0.000326633|  2.51257e-05|  0.00%|    plt.close(fig)
(call)|        13|    0.0143657|   0.00110505|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/pyplot.py:658 close
   196|        13|  6.69956e-05|  5.15351e-06|  0.00%|    return fig
   197|         0|            0|            0|  0.00%|
   198|         0|            0|            0|  0.00%|
   199|         0|            0|            0|  0.00%|def plot_tiling(tiling,
   200|         0|            0|            0|  0.00%|                figsize: tuple = (12, 12),
   201|         0|            0|            0|  0.00%|                experiment: Optional[neptune.experiments.Experiment] = None,
   202|         1|  6.93798e-05|  6.93798e-05|  0.00%|                neptune_name: Optional[str] = None):
(call)|         2|  5.81741e-05|  2.90871e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
   203|         0|            0|            0|  0.00%|
   204|         0|            0|            0|  0.00%|    fig, axes = plt.subplots(ncols=2, nrows=2, figsize=figsize)
   205|         0|            0|            0|  0.00%|    axes[0, 0].imshow(skimage.color.label2rgb(tiling.integer_mask[0, 0].cpu().numpy(),
   206|         0|            0|            0|  0.00%|                                              numpy.zeros_like(tiling.integer_mask[0, 0].cpu().numpy()),
   207|         0|            0|            0|  0.00%|                                              alpha=1.0,
   208|         0|            0|            0|  0.00%|                                              bg_label=0))
   209|         0|            0|            0|  0.00%|    axes[0, 1].imshow(skimage.color.label2rgb(tiling.integer_mask[0, 0].cpu().numpy(),
   210|         0|            0|            0|  0.00%|                                              tiling.raw_image[0, 0].cpu().numpy(),
   211|         0|            0|            0|  0.00%|                                              alpha=0.25,
   212|         0|            0|            0|  0.00%|                                              bg_label=0))
   213|         0|            0|            0|  0.00%|    axes[1, 0].imshow(tiling.fg_prob[0, 0].cpu().numpy(), cmap='gray')
   214|         0|            0|            0|  0.00%|    axes[1, 1].imshow(tiling.raw_image[0].cpu().permute(1, 2, 0).squeeze(-1).numpy(), cmap='gray')
   215|         0|            0|            0|  0.00%|
   216|         0|            0|            0|  0.00%|    axes[0, 0].set_title("sample integer mask")
   217|         0|            0|            0|  0.00%|    axes[0, 1].set_title("sample integer mask")
   218|         0|            0|            0|  0.00%|    axes[1, 0].set_title("fg prob")
   219|         0|            0|            0|  0.00%|    axes[1, 1].set_title("raw image")
   220|         0|            0|            0|  0.00%|    fig.tight_layout()
   221|         0|            0|            0|  0.00%|    if neptune_name is not None:
   222|         0|            0|            0|  0.00%|        #log_img_and_chart(name=neptune_name, fig=fig, experiment=experiment)
   223|         0|            0|            0|  0.00%|        log_img_only(name=neptune_name, fig=fig, experiment=experiment)
   224|         0|            0|            0|  0.00%|    plt.close(fig)
   225|         0|            0|            0|  0.00%|    return fig
   226|         0|            0|            0|  0.00%|
   227|         0|            0|            0|  0.00%|
   228|         2|  1.33514e-05|  6.67572e-06|  0.00%|def plot_loss(history_dict: dict,
   229|         0|            0|            0|  0.00%|              test_frequency: int = 5,
   230|         0|            0|            0|  0.00%|              experiment: Optional[neptune.experiments.Experiment] = None,
   231|         1|  7.24792e-05|  7.24792e-05|  0.00%|              neptune_name: Optional[str] = None):
(call)|         2|  5.79357e-05|  2.89679e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
   232|         0|            0|            0|  0.00%|
   233|         2|  4.14848e-05|  2.07424e-05|  0.00%|    x = numpy.arange(0, len(history_dict["test_loss"])*test_frequency, test_frequency)
   234|         2|  1.33514e-05|  6.67572e-06|  0.00%|    train_loss = history_dict["train_loss"]
   235|         2|  1.04904e-05|  5.24521e-06|  0.00%|    test_loss = history_dict["test_loss"]
   236|         0|            0|            0|  0.00%|
   237|         2|  6.41346e-05|  3.20673e-05|  0.00%|    fig, ax = plt.subplots()
(call)|         2|     0.734157|     0.367078|  0.15%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/pyplot.py:1044 subplots
   238|         2|  6.46114e-05|  3.23057e-05|  0.00%|    ax.plot(train_loss, '-', label="train loss")
(call)|         2|    0.0266638|    0.0133319|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:1414 plot
   239|         2|  8.17776e-05|  4.08888e-05|  0.00%|    ax.plot(x, test_loss, '.--', label="test loss")
(call)|         2|    0.0404367|    0.0202184|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:1414 plot
   240|         0|            0|            0|  0.00%|
   241|         2|  3.74317e-05|  1.87159e-05|  0.00%|    ax.set_xlabel('epoch')
(call)|         2|   0.00127196|  0.000635982|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:224 set_xlabel
   242|         2|  3.48091e-05|  1.74046e-05|  0.00%|    ax.set_ylabel('LOSS = - ELBO')
(call)|         2|   0.00117087|  0.000585437|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:257 set_ylabel
   243|         2|  4.79221e-05|  2.39611e-05|  0.00%|    ax.set_title('Training procedure')
(call)|         2|    0.0100491|   0.00502455|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:148 set_title
   244|         2|  4.98295e-05|  2.49147e-05|  0.00%|    ax.grid()
(call)|         2|    0.0535939|    0.0267969|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_base.py:2727 grid
   245|         2|  8.15392e-05|  4.07696e-05|  0.00%|    ax.legend()
(call)|         2|     0.106312|    0.0531558|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:300 legend
   246|         2|   5.6982e-05|   2.8491e-05|  0.00%|    fig.tight_layout()
(call)|         2|       1.5338|       0.7669|  0.32%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/cbook/deprecation.py:347 wrapper
   247|         2|  1.54972e-05|   7.7486e-06|  0.00%|    if neptune_name is not None:
   248|         2|  5.26905e-05|  2.63453e-05|  0.00%|        log_img_and_chart(name=neptune_name, fig=fig, experiment=experiment)
(call)|         2|      40.7912|      20.3956|  8.57%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_neptune.py:22 log_img_and_chart
   249|         2|  4.22001e-05|     2.11e-05|  0.00%|    plt.close()
(call)|         2|   0.00016427|  8.21352e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/pyplot.py:658 close
   250|         2|  9.53674e-06|  4.76837e-06|  0.00%|    return fig
   251|         0|            0|            0|  0.00%|
   252|         0|            0|            0|  0.00%|
   253|         2|  1.14441e-05|  5.72205e-06|  0.00%|def plot_kl(history_dict: dict,
   254|         0|            0|            0|  0.00%|            train_or_test: str = "test",
   255|         0|            0|            0|  0.00%|            experiment: Optional[neptune.experiments.Experiment] = None,
   256|         1|  9.03606e-05|  9.03606e-05|  0.00%|            neptune_name: Optional[str] = None):
(call)|         2|  5.65052e-05|  2.82526e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
   257|         0|            0|            0|  0.00%|
   258|         2|  1.07288e-05|  5.36442e-06|  0.00%|    if train_or_test == "test":
   259|         1|  6.67572e-06|  6.67572e-06|  0.00%|        kl_instance = history_dict["test_kl_instance"]
   260|         1|  5.48363e-06|  5.48363e-06|  0.00%|        kl_where = history_dict["test_kl_where"]
   261|         1|  5.48363e-06|  5.48363e-06|  0.00%|        kl_logit = history_dict["test_kl_logit"]
   262|         1|  4.29153e-06|  4.29153e-06|  0.00%|    elif train_or_test == "train":
   263|         1|  2.52724e-05|  2.52724e-05|  0.00%|        kl_instance = history_dict["train_kl_instance"]
   264|         1|  5.24521e-06|  5.24521e-06|  0.00%|        kl_where = history_dict["train_kl_where"]
   265|         1|  5.00679e-06|  5.00679e-06|  0.00%|        kl_logit = history_dict["train_kl_logit"]
   266|         0|            0|            0|  0.00%|    else:
   267|         0|            0|            0|  0.00%|        raise Exception
   268|         0|            0|            0|  0.00%|
   269|         2|  5.24521e-05|   2.6226e-05|  0.00%|    fig, ax = plt.subplots()
(call)|         2|     0.830906|     0.415453|  0.17%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/pyplot.py:1044 subplots
   270|         2|  8.17776e-05|  4.08888e-05|  0.00%|    ax.plot(kl_instance, '-', label="kl_instance")
(call)|         2|    0.0265467|    0.0132734|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:1414 plot
   271|         2|  3.93391e-05|  1.96695e-05|  0.00%|    ax.plot(kl_where, '.-', label="kl_where")
(call)|         2|    0.0236204|    0.0118102|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:1414 plot
   272|         2|  3.83854e-05|  1.91927e-05|  0.00%|    ax.plot(kl_logit, '.--', label="kl_logit")
(call)|         2|    0.0291665|    0.0145832|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:1414 plot
   273|         2|  4.19617e-05|  2.09808e-05|  0.00%|    ax.set_xlabel('epoch')
(call)|         2|   0.00126743|  0.000633717|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:224 set_xlabel
   274|         2|  3.45707e-05|  1.72853e-05|  0.00%|    ax.set_ylabel('kl')
(call)|         2|   0.00111842|  0.000559211|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:257 set_ylabel
   275|         2|  3.79086e-05|  1.89543e-05|  0.00%|    ax.grid()
(call)|         2|     0.058382|     0.029191|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_base.py:2727 grid
   276|         2|  6.29425e-05|  3.14713e-05|  0.00%|    ax.legend()
(call)|         2|     0.137841|    0.0689204|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:300 legend
   277|         2|  6.55651e-05|  3.27826e-05|  0.00%|    fig.tight_layout()
(call)|         2|        1.572|     0.786002|  0.33%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/cbook/deprecation.py:347 wrapper
   278|         2|  1.71661e-05|  8.58307e-06|  0.00%|    if neptune_name is not None:
   279|         2|  5.24521e-05|   2.6226e-05|  0.00%|        log_img_and_chart(name=neptune_name, fig=fig, experiment=experiment)
(call)|         2|      28.3635|      14.1817|  5.96%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_neptune.py:22 log_img_and_chart
   280|         2|  4.52995e-05|  2.26498e-05|  0.00%|    plt.close()
(call)|         2|  0.000112057|  5.60284e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/pyplot.py:658 close
   281|         2|  1.04904e-05|  5.24521e-06|  0.00%|    return fig
   282|         0|            0|            0|  0.00%|
   283|         0|            0|            0|  0.00%|
   284|         2|  1.12057e-05|  5.60284e-06|  0.00%|def plot_sparsity(history_dict: dict,
   285|         0|            0|            0|  0.00%|                  train_or_test: str = "test",
   286|         0|            0|            0|  0.00%|                  experiment: Optional[neptune.experiments.Experiment] = None,
   287|         1|  9.65595e-05|  9.65595e-05|  0.00%|                  neptune_name: Optional[str] = None):
(call)|         2|  7.20024e-05|  3.60012e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
   288|         0|            0|            0|  0.00%|
   289|         2|  1.07288e-05|  5.36442e-06|  0.00%|    if train_or_test == "test":
   290|         1|   1.0252e-05|   1.0252e-05|  0.00%|        sparsity_mask = history_dict["test_sparsity_mask"]
   291|         1|  6.67572e-06|  6.67572e-06|  0.00%|        sparsity_box = history_dict["test_sparsity_box"]
   292|         1|  5.96046e-06|  5.96046e-06|  0.00%|        sparsity_prob = history_dict["test_sparsity_prob"]
   293|         1|  5.00679e-06|  5.00679e-06|  0.00%|    elif train_or_test == "train":
   294|         1|  1.78814e-05|  1.78814e-05|  0.00%|        sparsity_mask = history_dict["train_sparsity_mask"]
   295|         1|   6.4373e-06|   6.4373e-06|  0.00%|        sparsity_box = history_dict["train_sparsity_box"]
   296|         1|  5.48363e-06|  5.48363e-06|  0.00%|        sparsity_prob = history_dict["train_sparsity_prob"]
   297|         0|            0|            0|  0.00%|    else:
   298|         0|            0|            0|  0.00%|        raise Exception
   299|         0|            0|            0|  0.00%|
   300|         2|  6.86646e-05|  3.43323e-05|  0.00%|    fig, ax = plt.subplots()
(call)|         2|     0.709224|     0.354612|  0.15%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/pyplot.py:1044 subplots
   301|         2|    4.673e-05|   2.3365e-05|  0.00%|    ax.plot(sparsity_mask, '-', label="sparsity_mask")
(call)|         2|    0.0234215|    0.0117108|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:1414 plot
   302|         2|  3.83854e-05|  1.91927e-05|  0.00%|    ax.plot(sparsity_box, '.-', label="sparsity_box")
(call)|         2|    0.0236244|    0.0118122|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:1414 plot
   303|         2|  3.79086e-05|  1.89543e-05|  0.00%|    ax.plot(sparsity_prob, '.--', label="sparsity_prob")
(call)|         2|    0.0230608|    0.0115304|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:1414 plot
   304|         2|   3.6478e-05|   1.8239e-05|  0.00%|    ax.set_xlabel('epoch')
(call)|         2|   0.00125265|  0.000626326|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:224 set_xlabel
   305|         2|  3.31402e-05|  1.65701e-05|  0.00%|    ax.set_ylabel('sparsity')
(call)|         2|   0.00105238|   0.00052619|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:257 set_ylabel
   306|         2|  3.71933e-05|  1.85966e-05|  0.00%|    ax.grid()
(call)|         2|    0.0507517|    0.0253758|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_base.py:2727 grid
   307|         2|  4.52995e-05|  2.26498e-05|  0.00%|    ax.legend()
(call)|         2|     0.136444|    0.0682218|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:300 legend
   308|         2|  6.05583e-05|  3.02792e-05|  0.00%|    fig.tight_layout()
(call)|         2|      1.70027|     0.850135|  0.36%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/cbook/deprecation.py:347 wrapper
   309|         2|  1.62125e-05|  8.10623e-06|  0.00%|    if neptune_name is not None:
   310|         2|  6.38962e-05|  3.19481e-05|  0.00%|        log_img_and_chart(name=neptune_name, fig=fig, experiment=experiment)
(call)|         2|      29.4617|      14.7308|  6.19%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_neptune.py:22 log_img_and_chart
   311|         2|    4.673e-05|   2.3365e-05|  0.00%|    plt.close()
(call)|         2|  0.000111341|  5.56707e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/pyplot.py:658 close
   312|         2|  1.04904e-05|  5.24521e-06|  0.00%|    return fig
   313|         0|            0|            0|  0.00%|
   314|         0|            0|            0|  0.00%|
   315|         2|  1.45435e-05|  7.27177e-06|  0.00%|def plot_loss_term(history_dict: dict,
   316|         0|            0|            0|  0.00%|                   train_or_test: str = "test",
   317|         0|            0|            0|  0.00%|                   experiment: Optional[neptune.experiments.Experiment] = None,
   318|         1|  7.22408e-05|  7.22408e-05|  0.00%|                   neptune_name: Optional[str] = None):
(call)|         2|  5.65052e-05|  2.82526e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
   319|         0|            0|            0|  0.00%|
   320|         2|  1.38283e-05|  6.91414e-06|  0.00%|    if train_or_test == "test":
   321|         1|   2.5034e-05|   2.5034e-05|  0.00%|        loss = numpy.array(history_dict["test_loss"])
   322|         1|  1.21593e-05|  1.21593e-05|  0.00%|        mse = numpy.array(history_dict["test_mse_tot"])
   323|         1|  1.90735e-05|  1.90735e-05|  0.00%|        reg = numpy.array(history_dict["test_reg_tot"])
   324|         1|  1.14441e-05|  1.14441e-05|  0.00%|        kl = numpy.array(history_dict["test_kl_tot"])
   325|         1|  1.07288e-05|  1.07288e-05|  0.00%|        sparsity = numpy.array(history_dict["test_sparsity_tot"])
   326|         1|  9.77516e-06|  9.77516e-06|  0.00%|        geco_sparsity = numpy.array(history_dict["test_geco_sparsity"])
   327|         1|   1.0252e-05|   1.0252e-05|  0.00%|        geco_balance = numpy.array(history_dict["test_geco_balance"])
   328|         1|  1.21593e-05|  1.21593e-05|  0.00%|    elif train_or_test == "train":
   329|         1|  2.67029e-05|  2.67029e-05|  0.00%|        loss = numpy.array(history_dict["train_loss"])
   330|         1|  9.77516e-06|  9.77516e-06|  0.00%|        mse = numpy.array(history_dict["train_mse_tot"])
   331|         1|  8.82149e-06|  8.82149e-06|  0.00%|        reg = numpy.array(history_dict["train_reg_tot"])
   332|         1|  9.53674e-06|  9.53674e-06|  0.00%|        kl = numpy.array(history_dict["train_kl_tot"])
   333|         1|  8.34465e-06|  8.34465e-06|  0.00%|        sparsity = numpy.array(history_dict["train_sparsity_tot"])
   334|         1|  8.58307e-06|  8.58307e-06|  0.00%|        geco_sparsity = numpy.array(history_dict["train_geco_sparsity"])
   335|         1|  8.34465e-06|  8.34465e-06|  0.00%|        geco_balance = numpy.array(history_dict["train_geco_balance"])
   336|         0|            0|            0|  0.00%|    else:
   337|         0|            0|            0|  0.00%|        raise Exception
   338|         0|            0|            0|  0.00%|
   339|         2|  6.93798e-05|  3.46899e-05|  0.00%|    fig, ax = plt.subplots()
(call)|         2|     0.755486|     0.377743|  0.16%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/pyplot.py:1044 subplots
   340|         2|  5.05447e-05|  2.52724e-05|  0.00%|    ax.plot(loss, '-', label="loss")
(call)|         2|     0.024735|    0.0123675|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:1414 plot
   341|         2|  4.93526e-05|  2.46763e-05|  0.00%|    ax.plot(geco_balance * mse, '.-', label="scaled mse")
(call)|         2|    0.0230064|    0.0115032|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:1414 plot
   342|         2|  4.69685e-05|  2.34842e-05|  0.00%|    ax.plot(geco_balance * reg, '.--', label="scaled reg")
(call)|         2|    0.0244057|    0.0122029|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:1414 plot
   343|         2|  6.41346e-05|  3.20673e-05|  0.00%|    ax.plot((1-geco_balance) * kl, '.--', label="scaled kl")
(call)|         2|    0.0236297|    0.0118148|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:1414 plot
   344|         2|  4.86374e-05|  2.43187e-05|  0.00%|    ax.plot(geco_sparsity * sparsity, '.--', label="scaled sparsity")
(call)|         2|    0.0244672|    0.0122336|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:1414 plot
   345|         0|            0|            0|  0.00%|
   346|         2|  3.93391e-05|  1.96695e-05|  0.00%|    ax.set_xlabel('epoch')
(call)|         2|   0.00129914|  0.000649571|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:224 set_xlabel
   347|         2|  4.48227e-05|  2.24113e-05|  0.00%|    ax.set_ylabel('loss term')
(call)|         2|   0.00117755|  0.000588775|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:257 set_ylabel
   348|         2|  4.14848e-05|  2.07424e-05|  0.00%|    ax.grid()
(call)|         2|     0.051944|     0.025972|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_base.py:2727 grid
   349|         2|  9.15527e-05|  4.57764e-05|  0.00%|    ax.legend()
(call)|         2|     0.202234|     0.101117|  0.04%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:300 legend
   350|         2|  7.89165e-05|  3.94583e-05|  0.00%|    fig.tight_layout()
(call)|         2|      1.60592|      0.80296|  0.34%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/cbook/deprecation.py:347 wrapper
   351|         2|  1.85966e-05|  9.29832e-06|  0.00%|    if neptune_name is not None:
   352|         2|  7.31945e-05|  3.65973e-05|  0.00%|        log_img_and_chart(name=neptune_name, fig=fig, experiment=experiment)
(call)|         2|      31.6028|      15.8014|  6.64%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_neptune.py:22 log_img_and_chart
   353|         2|  4.52995e-05|  2.26498e-05|  0.00%|    plt.close()
(call)|         2|  0.000123739|  6.18696e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/pyplot.py:658 close
   354|         2|  1.12057e-05|  5.60284e-06|  0.00%|    return fig
   355|         0|            0|            0|  0.00%|
   356|         0|            0|            0|  0.00%|
   357|         2|  1.74046e-05|  8.70228e-06|  0.00%|def plot_trajectory(history_dict: dict,
   358|         0|            0|            0|  0.00%|                    train_or_test: str = "test",
   359|         0|            0|            0|  0.00%|                    experiment: Optional[neptune.experiments.Experiment] = None,
   360|         1|  8.63075e-05|  8.63075e-05|  0.00%|                    neptune_name: Optional[str] = None):
(call)|         2|  6.53267e-05|  3.26633e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
   361|         0|            0|            0|  0.00%|
   362|         2|  1.28746e-05|   6.4373e-06|  0.00%|    if train_or_test == "test":
   363|         1|   6.4373e-06|   6.4373e-06|  0.00%|        mse = history_dict["test_mse_tot"]
   364|         1|  6.67572e-06|  6.67572e-06|  0.00%|        kl = history_dict["test_kl_tot"]
   365|         1|  5.96046e-06|  5.96046e-06|  0.00%|        sparsity = history_dict["test_sparsity_tot"]
   366|         1|  5.96046e-06|  5.96046e-06|  0.00%|    elif train_or_test == "train":
   367|         1|  1.19209e-05|  1.19209e-05|  0.00%|        mse = history_dict["train_mse_tot"]
   368|         1|  7.15256e-06|  7.15256e-06|  0.00%|        kl = history_dict["train_kl_tot"]
   369|         1|  6.67572e-06|  6.67572e-06|  0.00%|        sparsity = history_dict["train_sparsity_tot"]
   370|         0|            0|            0|  0.00%|    else:
   371|         0|            0|            0|  0.00%|        raise Exception
   372|         0|            0|            0|  0.00%|
   373|         2|  1.26362e-05|  6.31809e-06|  0.00%|    fontsize = 20
   374|         2|  1.23978e-05|  6.19888e-06|  0.00%|    labelsize = 20
   375|         2|  9.84669e-05|  4.92334e-05|  0.00%|    colors = numpy.arange(0.0, len(mse), 1.0)/len(mse)
   376|         0|            0|            0|  0.00%|
   377|         2|  7.31945e-05|  3.65973e-05|  0.00%|    fig = plt.figure(figsize=(20, 10))
(call)|         2|    0.0189149|   0.00945747|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/pyplot.py:427 figure
   378|         2|  6.58035e-05|  3.29018e-05|  0.00%|    ax1 = fig.add_subplot(221)
(call)|         2|     0.864634|     0.432317|  0.18%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/figure.py:1259 add_subplot
   379|         2|  6.19888e-05|  3.09944e-05|  0.00%|    ax2 = fig.add_subplot(222)
(call)|         2|     0.736752|     0.368376|  0.15%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/figure.py:1259 add_subplot
   380|         2|  7.62939e-05|   3.8147e-05|  0.00%|    ax3 = fig.add_subplot(223)
(call)|         2|     0.681882|     0.340941|  0.14%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/figure.py:1259 add_subplot
   381|         2|  6.12736e-05|  3.06368e-05|  0.00%|    ax4 = fig.add_subplot(224, projection='3d')
(call)|         2|     0.670609|     0.335305|  0.14%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/figure.py:1259 add_subplot
   382|         0|            0|            0|  0.00%|
   383|         2|   4.3869e-05|  2.19345e-05|  0.00%|    ax1.set_xlabel('MSE', fontsize=fontsize)
(call)|         2|   0.00180411|  0.000902057|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:224 set_xlabel
   384|         2|  3.95775e-05|  1.97887e-05|  0.00%|    ax1.set_ylabel('KL', fontsize=fontsize)
(call)|         2|   0.00156379|  0.000781894|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:257 set_ylabel
   385|         2|  4.02927e-05|  2.01464e-05|  0.00%|    ax1.tick_params(axis='both', which='major', labelsize=labelsize)
(call)|         2|    0.0550981|     0.027549|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_base.py:2884 tick_params
   386|         2|  7.03335e-05|  3.51667e-05|  0.00%|    ax1.scatter(mse, kl, c=colors)
(call)|         2|    0.0569782|    0.0284891|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/__init__.py:1562 inner
   387|         2|  4.36306e-05|  2.18153e-05|  0.00%|    ax1.plot(mse, kl, '--')
(call)|         2|    0.0232098|    0.0116049|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:1414 plot
   388|         2|  4.64916e-05|  2.32458e-05|  0.00%|    ax1.grid()
(call)|         2|    0.0518465|    0.0259233|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_base.py:2727 grid
   389|         0|            0|            0|  0.00%|
   390|         2|  3.88622e-05|  1.94311e-05|  0.00%|    ax2.set_xlabel('SPARSITY', fontsize=fontsize)
(call)|         2|   0.00154948|  0.000774741|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:224 set_xlabel
   391|         2|  3.69549e-05|  1.84774e-05|  0.00%|    ax2.set_ylabel('MSE', fontsize=fontsize)
(call)|         2|   0.00148749|  0.000743747|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:257 set_ylabel
   392|         2|  4.07696e-05|  2.03848e-05|  0.00%|    ax2.tick_params(axis='both', which='major', labelsize=labelsize)
(call)|         2|    0.0535407|    0.0267704|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_base.py:2884 tick_params
   393|         2|  4.69685e-05|  2.34842e-05|  0.00%|    ax2.scatter(sparsity, mse, c=colors)
(call)|         2|    0.0517752|    0.0258876|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/__init__.py:1562 inner
   394|         2|  4.26769e-05|  2.13385e-05|  0.00%|    ax2.plot(sparsity, mse, '--')
(call)|         2|    0.0226436|    0.0113218|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:1414 plot
   395|         2|  5.67436e-05|  2.83718e-05|  0.00%|    ax2.grid()
(call)|         2|    0.0531411|    0.0265706|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_base.py:2727 grid
   396|         0|            0|            0|  0.00%|
   397|         2|  3.93391e-05|  1.96695e-05|  0.00%|    ax3.set_xlabel('SPARSITY', fontsize=fontsize)
(call)|         2|   0.00163078|  0.000815392|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:224 set_xlabel
   398|         2|  3.74317e-05|  1.87159e-05|  0.00%|    ax3.set_ylabel('KL', fontsize=fontsize)
(call)|         2|   0.00154877|  0.000774384|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:257 set_ylabel
   399|         2|  4.45843e-05|  2.22921e-05|  0.00%|    ax3.tick_params(axis='both', which='major', labelsize=labelsize)
(call)|         2|    0.0545461|    0.0272731|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_base.py:2884 tick_params
   400|         2|  8.36849e-05|  4.18425e-05|  0.00%|    ax3.scatter(sparsity, kl, c=colors)
(call)|         2|    0.0546179|    0.0273089|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/__init__.py:1562 inner
   401|         2|  4.93526e-05|  2.46763e-05|  0.00%|    ax3.plot(sparsity, kl, '--')
(call)|         2|    0.0243878|    0.0121939|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:1414 plot
   402|         2|  5.00679e-05|   2.5034e-05|  0.00%|    ax3.grid()
(call)|         2|    0.0526767|    0.0263383|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_base.py:2727 grid
   403|         0|            0|            0|  0.00%|
   404|         2|  9.58443e-05|  4.79221e-05|  0.00%|    ax4.scatter(kl, sparsity, mse, c=colors)
(call)|         2|     0.163034|    0.0815171|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/mpl_toolkits/mplot3d/axes3d.py:2186 scatter
   405|         2|  6.07967e-05|  3.03984e-05|  0.00%|    ax4.plot(kl, sparsity, mse, '--')
(call)|         2|    0.0442002|    0.0221001|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/mpl_toolkits/mplot3d/axes3d.py:1389 plot
   406|         2|  4.12464e-05|  2.06232e-05|  0.00%|    ax4.set_xlabel('KL', fontsize=fontsize)
(call)|         2|    0.0026679|   0.00133395|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:224 set_xlabel
   407|         2|  3.91006e-05|  1.95503e-05|  0.00%|    ax4.set_ylabel('SPARSITY', fontsize=fontsize)
(call)|         2|   0.00244117|   0.00122058|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:257 set_ylabel
   408|         2|  4.17233e-05|  2.08616e-05|  0.00%|    ax4.set_zlabel('MSE', fontsize=fontsize)
(call)|         2|   0.00243855|   0.00121927|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/mpl_toolkits/mplot3d/axes3d.py:1204 set_zlabel
   409|         0|            0|            0|  0.00%|
   410|         2|  6.24657e-05|  3.12328e-05|  0.00%|    fig.tight_layout()  # otherwise the right y-label is slightly clipped
(call)|         2|       4.2384|       2.1192|  0.89%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/cbook/deprecation.py:347 wrapper
   411|         2|  1.64509e-05|  8.22544e-06|  0.00%|    if neptune_name is not None:
   412|         2|  8.05855e-05|  4.02927e-05|  0.00%|        log_img_and_chart(name=neptune_name, fig=fig, experiment=experiment)
(call)|         2|      43.0163|      21.5081|  9.04%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_neptune.py:22 log_img_and_chart
   413|         2|  4.98295e-05|  2.49147e-05|  0.00%|    plt.close()
(call)|         2|  0.000123262|  6.16312e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/pyplot.py:658 close
   414|         2|  1.09673e-05|  5.48363e-06|  0.00%|    return fig
   415|         0|            0|            0|  0.00%|
   416|         0|            0|            0|  0.00%|
   417|         2|   3.3617e-05|  1.68085e-05|  0.00%|def plot_geco_parameters(history_dict: dict,
   418|         0|            0|            0|  0.00%|                         params: dict,
   419|         0|            0|            0|  0.00%|                         train_or_test: str = "test",
   420|         0|            0|            0|  0.00%|                         experiment: Optional[neptune.experiments.Experiment] = None,
   421|         1|  7.77245e-05|  7.77245e-05|  0.00%|                         neptune_name: Optional[str] = None):
(call)|         2|  6.03199e-05|    3.016e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
   422|         0|            0|            0|  0.00%|
   423|         2|  3.12328e-05|  1.56164e-05|  0.00%|    if train_or_test == "train":
   424|         1|  7.39098e-06|  7.39098e-06|  0.00%|        fg_fraction = history_dict["train_fg_fraction"]
   425|         1|  2.59876e-05|  2.59876e-05|  0.00%|        geco_sparsity = history_dict["train_geco_sparsity"]
   426|         1|  7.15256e-06|  7.15256e-06|  0.00%|        mse_av = history_dict["train_mse_tot"]
   427|         1|  6.91414e-06|  6.91414e-06|  0.00%|        geco_balance = history_dict["train_geco_balance"]
   428|         1|  7.62939e-06|  7.62939e-06|  0.00%|    elif train_or_test == "test":
   429|         1|  9.29832e-06|  9.29832e-06|  0.00%|        fg_fraction = history_dict["test_fg_fraction"]
   430|         1|  2.38419e-05|  2.38419e-05|  0.00%|        geco_sparsity = history_dict["test_geco_sparsity"]
   431|         1|  7.39098e-06|  7.39098e-06|  0.00%|        mse_av = history_dict["test_mse_tot"]
   432|         1|  7.62939e-06|  7.62939e-06|  0.00%|        geco_balance = history_dict["test_geco_balance"]
   433|         0|            0|            0|  0.00%|    else:
   434|         0|            0|            0|  0.00%|        raise Exception
   435|         0|            0|            0|  0.00%|
   436|         2|  1.38283e-05|  6.91414e-06|  0.00%|    fontsize = 20
   437|         2|  1.64509e-05|  8.22544e-06|  0.00%|    labelsize = 20
   438|         2|  6.03199e-05|    3.016e-05|  0.00%|    fig = plt.figure(figsize=(20, 20))
(call)|         2|    0.0177312|   0.00886559|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/pyplot.py:427 figure
   439|         2|  6.19888e-05|  3.09944e-05|  0.00%|    ax1 = fig.add_subplot(211)
(call)|         2|     0.690443|     0.345222|  0.15%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/figure.py:1259 add_subplot
   440|         2|  7.10487e-05|  3.55244e-05|  0.00%|    ax2 = fig.add_subplot(212)
(call)|         2|     0.772907|     0.386454|  0.16%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/figure.py:1259 add_subplot
   441|         0|            0|            0|  0.00%|
   442|         2|  1.85966e-05|  9.29832e-06|  0.00%|    color = 'tab:red'
   443|         2|  4.31538e-05|  2.15769e-05|  0.00%|    ax1.set_xlabel('epochs', fontsize=fontsize)
(call)|         2|   0.00162053|  0.000810266|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:224 set_xlabel
   444|         2|  4.19617e-05|  2.09808e-05|  0.00%|    ax1.set_ylabel('fg_fraction', fontsize=fontsize, color=color)
(call)|         2|   0.00168443|  0.000842214|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:257 set_ylabel
   445|         2|  4.33922e-05|  2.16961e-05|  0.00%|    ax1.tick_params(axis='both', which='major', labelsize=labelsize)
(call)|         2|    0.0534999|      0.02675|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_base.py:2884 tick_params
   446|         2|  4.93526e-05|  2.46763e-05|  0.00%|    ax1.plot(fg_fraction, '.--', color=color, label="n_object")
(call)|         2|    0.0253079|    0.0126539|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:1414 plot
   447|         2|  2.28882e-05|  1.14441e-05|  0.00%|    ymin = min(params["GECO_loss"]['target_fg_fraction'])
   448|         2|  1.35899e-05|  6.79493e-06|  0.00%|    ymax = max(params["GECO_loss"]['target_fg_fraction'])
   449|         2|  7.84397e-05|  3.92199e-05|  0.00%|    ax1.plot(ymin * numpy.ones(len(fg_fraction)), '-', color='black', label="y_min")
(call)|         2|  0.000185013|  9.25064e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/numeric.py:144 ones
(call)|         2|    0.0236673|    0.0118337|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:1414 plot
   450|         2|  7.51019e-05|  3.75509e-05|  0.00%|    ax1.plot(ymax * numpy.ones(len(fg_fraction)), '-', color='black', label="y_max")
(call)|         2|  0.000109673|  5.48363e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/numeric.py:144 ones
(call)|         2|    0.0213194|    0.0106597|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:1414 plot
   451|         2|  4.02927e-05|  2.01464e-05|  0.00%|    ax1.tick_params(axis='y', labelcolor=color)
(call)|         2|    0.0267787|    0.0133893|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_base.py:2884 tick_params
   452|         2|  4.22001e-05|     2.11e-05|  0.00%|    ax1.grid()
(call)|         2|    0.0524323|    0.0262161|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_base.py:2727 grid
   453|         0|            0|            0|  0.00%|
   454|         2|  6.96182e-05|  3.48091e-05|  0.00%|    ax1b = ax1.twinx()  # instantiate a second axes that shares the same x-axis
(call)|         2|     0.850417|     0.425209|  0.18%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_base.py:4382 twinx
   455|         2|  1.45435e-05|  7.27177e-06|  0.00%|    color = 'tab:green'
   456|         2|  4.00543e-05|  2.00272e-05|  0.00%|    ax1b.set_xlabel('epochs', fontsize=fontsize)
(call)|         2|   0.00167084|  0.000835419|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:224 set_xlabel
   457|         2|  3.98159e-05|   1.9908e-05|  0.00%|    ax1b.set_ylabel('geco_sparsity', color=color, fontsize=fontsize)
(call)|         2|   0.00159454|  0.000797272|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:257 set_ylabel
   458|         2|  6.69956e-05|  3.34978e-05|  0.00%|    ax1b.tick_params(axis='both', which='major', labelsize=labelsize)
(call)|         2|    0.0528402|    0.0264201|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_base.py:2884 tick_params
   459|         2|  6.79493e-05|  3.39746e-05|  0.00%|    plt.plot(geco_sparsity, '-', label="geco_sparsity", color=color)
(call)|         2|    0.0246935|    0.0123467|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/pyplot.py:2759 plot
   460|         2|  3.83854e-05|  1.91927e-05|  0.00%|    ax1b.tick_params(axis='y', labelcolor=color)
(call)|         2|    0.0266051|    0.0133026|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_base.py:2884 tick_params
   461|         2|  5.38826e-05|  2.69413e-05|  0.00%|    ax1b.grid()
(call)|         2|    0.0517981|    0.0258991|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_base.py:2727 grid
   462|         0|            0|            0|  0.00%|
   463|         0|            0|            0|  0.00%|    # ----------------
   464|         2|  1.45435e-05|  7.27177e-06|  0.00%|    color = 'tab:red'
   465|         2|  3.69549e-05|  1.84774e-05|  0.00%|    ax2.set_xlabel('epochs', fontsize=fontsize)
(call)|         2|    0.0014441|  0.000722051|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:224 set_xlabel
   466|         2|  3.95775e-05|  1.97887e-05|  0.00%|    ax2.set_ylabel('mse av', fontsize=fontsize, color=color)
(call)|         2|    0.0016551|  0.000827551|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:257 set_ylabel
   467|         2|   4.1008e-05|   2.0504e-05|  0.00%|    ax2.tick_params(axis='both', which='major', labelsize=labelsize)
(call)|         2|     0.051604|     0.025802|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_base.py:2884 tick_params
   468|         2|  4.48227e-05|  2.24113e-05|  0.00%|    ax2.plot(mse_av, '.--', color=color, label="mse av")
(call)|         2|    0.0234132|    0.0117066|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:1414 plot
   469|         0|            0|            0|  0.00%|
   470|         2|   2.0504e-05|   1.0252e-05|  0.00%|    ymin = min(params["GECO_loss"]["target_mse"])
   471|         2|  1.21593e-05|  6.07967e-06|  0.00%|    ymax = max(params["GECO_loss"]["target_mse"])
   472|         2|   7.7486e-05|   3.8743e-05|  0.00%|    ax2.plot(ymin * numpy.ones(len(mse_av)), '-', color='black', label="y_min")
(call)|         2|  0.000147343|  7.36713e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/numeric.py:144 ones
(call)|         2|     0.022135|    0.0110675|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:1414 plot
   473|         2|  9.01222e-05|  4.50611e-05|  0.00%|    ax2.plot(ymax * numpy.ones(len(mse_av)), '-', color='black', label="y_max")
(call)|         2|  0.000143051|  7.15256e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/numeric.py:144 ones
(call)|         2|    0.0223699|    0.0111849|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:1414 plot
   474|         2|  4.12464e-05|  2.06232e-05|  0.00%|    ax2.tick_params(axis='y', labelcolor=color)
(call)|         2|    0.0263624|    0.0131812|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_base.py:2884 tick_params
   475|         0|            0|            0|  0.00%|
   476|         2|  4.36306e-05|  2.18153e-05|  0.00%|    ax2.grid()
(call)|         2|    0.0510421|     0.025521|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_base.py:2727 grid
   477|         2|  5.96046e-05|  2.98023e-05|  0.00%|    ax2b = ax2.twinx()  # instantiate a second axes that shares the same x-axis
(call)|         2|     0.860396|     0.430198|  0.18%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_base.py:4382 twinx
   478|         2|   1.7643e-05|  8.82149e-06|  0.00%|    color = 'tab:green'
   479|         2|  4.64916e-05|  2.32458e-05|  0.00%|    ax2b.set_xlabel('epochs', fontsize=fontsize)
(call)|         2|    0.0015552|  0.000777602|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:224 set_xlabel
   480|         2|   4.1008e-05|   2.0504e-05|  0.00%|    ax2b.set_ylabel('geco_balance', fontsize=fontsize, color=color)
(call)|         2|   0.00154042|  0.000770211|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:257 set_ylabel
   481|         2|  4.62532e-05|  2.31266e-05|  0.00%|    plt.plot(geco_balance, '-', label="geco_balance", color=color)
(call)|         2|    0.0341785|    0.0170892|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/pyplot.py:2759 plot
   482|         2|   6.1512e-05|   3.0756e-05|  0.00%|    ax2b.tick_params(axis='both', which='major', labelsize=labelsize)
(call)|         2|    0.0795035|    0.0397518|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_base.py:2884 tick_params
   483|         2|  4.43459e-05|  2.21729e-05|  0.00%|    ax2b.tick_params(axis='y', labelcolor=color)
(call)|         2|    0.0279975|    0.0139987|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_base.py:2884 tick_params
   484|         2|  5.81741e-05|  2.90871e-05|  0.00%|    ax2b.grid()
(call)|         2|    0.0524292|    0.0262146|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_base.py:2727 grid
   485|         0|            0|            0|  0.00%|
   486|         2|  7.58171e-05|  3.79086e-05|  0.00%|    fig.tight_layout()  # otherwise the right y-label is slightly clipped
(call)|         2|      4.67542|      2.33771|  0.98%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/cbook/deprecation.py:347 wrapper
   487|         2|  1.88351e-05|  9.41753e-06|  0.00%|    if neptune_name is not None:
   488|         2|  8.13007e-05|  4.06504e-05|  0.00%|        log_img_only(name=neptune_name, fig=fig, experiment=experiment)
(call)|         2|      4.27663|      2.13832|  0.90%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_neptune.py:10 log_img_only
   489|         2|  9.77516e-05|  4.88758e-05|  0.00%|    plt.close()
(call)|         2|   0.00218201|     0.001091|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/pyplot.py:658 close
   490|         2|  1.33514e-05|  6.67572e-06|  0.00%|    return fig
   491|         0|            0|            0|  0.00%|
   492|         0|            0|            0|  0.00%|
   493|         2|  1.50204e-05|  7.51019e-06|  0.00%|def plot_all_from_dictionary(history_dict: dict,
   494|         0|            0|            0|  0.00%|                             params: dict,
   495|         0|            0|            0|  0.00%|                             test_frequency: int = 5,
   496|         0|            0|            0|  0.00%|                             train_or_test: str = "test",
   497|         0|            0|            0|  0.00%|                             experiment: Optional[neptune.experiments.Experiment] = None,
   498|         1|   6.4373e-05|   6.4373e-05|  0.00%|                             verbose: bool = False):
(call)|         1|  2.83718e-05|  2.83718e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
   499|         2|  1.23978e-05|  6.19888e-06|  0.00%|    if verbose:
   500|         2|  5.36442e-05|  2.68221e-05|  0.00%|        print("in plot_all_from_dictionary ->"+train_or_test)
(call)|         4|    0.0028019|  0.000700474|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/streams/stdstream_uploader.py:30 write
   501|         0|            0|            0|  0.00%|
   502|         2|  4.62532e-05|  2.31266e-05|  0.00%|    plot_loss(history_dict, test_frequency=test_frequency, experiment=experiment, neptune_name="loss_history_"+train_or_test)
(call)|         2|      43.2995|      21.6498|  9.10%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_visualization.py:228 plot_loss
   503|         2|  4.95911e-05|  2.47955e-05|  0.00%|    plot_kl(history_dict, train_or_test=train_or_test, experiment=experiment, neptune_name="kl_history_"+train_or_test)
(call)|         2|      31.0451|      15.5226|  6.52%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_visualization.py:253 plot_kl
   504|         2|  4.43459e-05|  2.21729e-05|  0.00%|    plot_sparsity(history_dict, train_or_test=train_or_test, experiment=experiment, neptune_name="sparsity_history_"+train_or_test)
(call)|         2|      32.1315|      16.0658|  6.75%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_visualization.py:284 plot_sparsity
   505|         2|  6.29425e-05|  3.14713e-05|  0.00%|    plot_loss_term(history_dict, train_or_test=train_or_test, experiment=experiment, neptune_name="loss_terms_"+train_or_test)
(call)|         2|      34.3422|      17.1711|  7.21%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_visualization.py:315 plot_loss_term
   506|         2|  7.51019e-05|  3.75509e-05|  0.00%|    plot_trajectory(history_dict, train_or_test=train_or_test, experiment=experiment, neptune_name="trajectory_"+train_or_test)
(call)|         2|      51.0083|      25.5041| 10.72%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_visualization.py:357 plot_trajectory
   507|         2|  1.16825e-05|  5.84126e-06|  0.00%|    plot_geco_parameters(history_dict, params, train_or_test=train_or_test, experiment=experiment,
   508|         2|  6.69956e-05|  3.34978e-05|  0.00%|            neptune_name="geco_params_trajectory_"+train_or_test)
(call)|         2|      12.9118|      6.45592|  2.71%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_visualization.py:417 plot_geco_parameters
   509|         0|            0|            0|  0.00%|
   510|         2|  1.16825e-05|  5.84126e-06|  0.00%|    if verbose:
   511|         2|  7.65324e-05|  3.82662e-05|  0.00%|        print("leaving plot_all_from_dictionary ->"+train_or_test)
(call)|         4|   0.00907397|   0.00226849|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/streams/stdstream_uploader.py:30 write
   512|         0|            0|            0|  0.00%|
   513|         0|            0|            0|  0.00%|
   514|         1|  1.07288e-05|  1.07288e-05|  0.00%|def plot_generation(output: Output,
   515|         0|            0|            0|  0.00%|                    epoch: int,
   516|         0|            0|            0|  0.00%|                    prefix: str = "",
   517|         0|            0|            0|  0.00%|                    postfix: str = "",
   518|         1|  3.48091e-05|  3.48091e-05|  0.00%|                    verbose: bool = False):
   519|         1|  6.67572e-06|  6.67572e-06|  0.00%|    if verbose:
   520|         0|            0|            0|  0.00%|        print("in plot_reconstruction_and_inference")
   521|         0|            0|            0|  0.00%|
   522|         1|  1.93119e-05|  1.93119e-05|  0.00%|    _ = show_batch(output.imgs[:8],
   523|         1|  7.15256e-06|  7.15256e-06|  0.00%|                   n_col=4,
   524|         1|  4.76837e-06|  4.76837e-06|  0.00%|                   n_padding=4,
   525|         1|  1.23978e-05|  1.23978e-05|  0.00%|                   title='imgs, epoch= {0:6d}'.format(epoch),
   526|         1|   3.8147e-05|   3.8147e-05|  0.00%|                   neptune_name=prefix+"imgs"+postfix)
(call)|         1|      2.18198|      2.18198|  0.46%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_visualization.py:165 show_batch
   527|         1|  0.000104427|  0.000104427|  0.00%|    _ = show_batch(output.inference.sample_c_map[:8].float(),
   528|         1|  1.00136e-05|  1.00136e-05|  0.00%|                   n_col=4,
   529|         1|  5.00679e-06|  5.00679e-06|  0.00%|                   n_padding=4,
   530|         1|  1.28746e-05|  1.28746e-05|  0.00%|                   title='c_map, epoch= {0:6d}'.format(epoch),
   531|         1|  5.00679e-06|  5.00679e-06|  0.00%|                   normalize_range=None,
   532|         1|  4.62532e-05|  4.62532e-05|  0.00%|                   neptune_name=prefix+"c_map"+postfix)
(call)|         1|      2.12981|      2.12981|  0.45%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_visualization.py:165 show_batch
   533|         1|  7.70092e-05|  7.70092e-05|  0.00%|    _ = show_batch(output.inference.big_bg[:8],
   534|         1|  8.10623e-06|  8.10623e-06|  0.00%|                   n_col=4,
   535|         1|  5.00679e-06|  5.00679e-06|  0.00%|                   n_padding=4,
   536|         1|  1.19209e-05|  1.19209e-05|  0.00%|                   title='background, epoch= {0:6d}'.format(epoch),
   537|         1|  4.14848e-05|  4.14848e-05|  0.00%|                   neptune_name=prefix+"bg"+postfix)
(call)|         1|      2.19416|      2.19416|  0.46%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_visualization.py:165 show_batch
   538|         0|            0|            0|  0.00%|
   539|         1|  1.04904e-05|  1.04904e-05|  0.00%|    if verbose:
   540|         0|            0|            0|  0.00%|        print("leaving plot_generation")
   541|         0|            0|            0|  0.00%|
   542|         0|            0|            0|  0.00%|
   543|         1|  1.12057e-05|  1.12057e-05|  0.00%|def plot_reconstruction_and_inference(output: Output,
   544|         0|            0|            0|  0.00%|                                      epoch: int,
   545|         0|            0|            0|  0.00%|                                      prefix: str = "",
   546|         0|            0|            0|  0.00%|                                      postfix: str = "",
   547|         1|  1.90735e-05|  1.90735e-05|  0.00%|                                      verbose: bool = False):
   548|         1|  6.19888e-06|  6.19888e-06|  0.00%|    if verbose:
   549|         0|            0|            0|  0.00%|        print("in plot_reconstruction_and_inference")
   550|         0|            0|            0|  0.00%|
   551|         1|  1.97887e-05|  1.97887e-05|  0.00%|    _ = show_batch(output.imgs[:8],
   552|         1|  7.62939e-06|  7.62939e-06|  0.00%|                   n_col=4,
   553|         1|  2.93255e-05|  2.93255e-05|  0.00%|                   n_padding=4,
   554|         1|  1.88351e-05|  1.88351e-05|  0.00%|                   title='imgs, epoch= {0:6d}'.format(epoch),
   555|         1|  4.36306e-05|  4.36306e-05|  0.00%|                   neptune_name=prefix+"imgs"+postfix)
(call)|         1|      2.03727|      2.03727|  0.43%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_visualization.py:165 show_batch
   556|         1|  0.000110865|  0.000110865|  0.00%|    _ = show_batch(output.inference.sample_c_map[:8].float(),
   557|         1|  1.19209e-05|  1.19209e-05|  0.00%|                   n_col=4,
   558|         1|  5.00679e-06|  5.00679e-06|  0.00%|                   n_padding=4,
   559|         1|  1.23978e-05|  1.23978e-05|  0.00%|                   title='c_map, epoch= {0:6d}'.format(epoch),
   560|         1|  5.24521e-06|  5.24521e-06|  0.00%|                   normalize_range=None,
   561|         1|  3.67165e-05|  3.67165e-05|  0.00%|                   neptune_name=prefix+"c_map"+postfix)
(call)|         1|      2.01406|      2.01406|  0.42%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_visualization.py:165 show_batch
   562|         1|  7.82013e-05|  7.82013e-05|  0.00%|    _ = show_batch(output.inference.prob_map[:8],
   563|         1|  8.34465e-06|  8.34465e-06|  0.00%|                   n_col=4,
   564|         1|  4.76837e-06|  4.76837e-06|  0.00%|                   n_padding=4,
   565|         1|  1.16825e-05|  1.16825e-05|  0.00%|                   title='p_map, epoch= {0:6d}'.format(epoch),
   566|         1|  4.76837e-06|  4.76837e-06|  0.00%|                   normalize_range=None,
   567|         1|  3.79086e-05|  3.79086e-05|  0.00%|                   neptune_name=prefix+"p_map"+postfix)
(call)|         1|      1.84186|      1.84186|  0.39%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_visualization.py:165 show_batch
   568|         1|  7.86781e-05|  7.86781e-05|  0.00%|    _ = show_batch(output.inference.big_bg[:8],
   569|         1|  8.82149e-06|  8.82149e-06|  0.00%|                   n_col=4,
   570|         1|  5.00679e-06|  5.00679e-06|  0.00%|                   n_padding=4,
   571|         1|  2.93255e-05|  2.93255e-05|  0.00%|                   title='background, epoch= {0:6d}'.format(epoch),
   572|         1|  6.31809e-05|  6.31809e-05|  0.00%|                   neptune_name=prefix+"bg"+postfix)
(call)|         1|      2.04763|      2.04763|  0.43%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_visualization.py:165 show_batch
   573|         0|            0|            0|  0.00%|
   574|         1|  1.07288e-05|  1.07288e-05|  0.00%|    if verbose:
   575|         0|            0|            0|  0.00%|        print("leaving plot_reconstruction_and_inference")
   576|         0|            0|            0|  0.00%|
   577|         0|            0|            0|  0.00%|
   578|         1|  8.58307e-06|  8.58307e-06|  0.00%|def plot_segmentation(segmentation: Segmentation,
   579|         0|            0|            0|  0.00%|                      epoch: Union[int, str] = "",
   580|         0|            0|            0|  0.00%|                      prefix: str = "",
   581|         0|            0|            0|  0.00%|                      postfix: str = "",
   582|         1|  5.36442e-05|  5.36442e-05|  0.00%|                      verbose: bool = False):
(call)|         1|  0.000686407|  0.000686407|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
   583|         1|  6.91414e-06|  6.91414e-06|  0.00%|    if verbose:
   584|         0|            0|            0|  0.00%|        print("in plot_segmentation")
   585|         0|            0|            0|  0.00%|
   586|         1|  5.72205e-06|  5.72205e-06|  0.00%|    if isinstance(epoch, int):
   587|         1|  1.19209e-05|  1.19209e-05|  0.00%|        title_postfix = 'epoch= {0:6d}'.format(epoch)
   588|         0|            0|            0|  0.00%|    elif isinstance(epoch, str):
   589|         0|            0|            0|  0.00%|        title_postfix = epoch
   590|         0|            0|            0|  0.00%|    else:
   591|         0|            0|            0|  0.00%|        raise Exception
   592|         0|            0|            0|  0.00%|
   593|         1|   6.4373e-06|   6.4373e-06|  0.00%|    _ = show_batch(segmentation.integer_mask,
   594|         1|  5.00679e-06|  5.00679e-06|  0.00%|                   n_padding=4,
   595|         1|  4.76837e-06|  4.76837e-06|  0.00%|                   figsize=(12, 12),
   596|         1|  5.24521e-06|  5.24521e-06|  0.00%|                   title='integer_mask, '+title_postfix,
   597|         1|  3.60012e-05|  3.60012e-05|  0.00%|                   neptune_name=prefix+"integer_mask"+postfix)
(call)|         1|      2.22298|      2.22298|  0.47%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_visualization.py:165 show_batch
   598|         1|  1.16825e-05|  1.16825e-05|  0.00%|    _ = show_batch(segmentation.fg_prob,
   599|         1|  5.00679e-06|  5.00679e-06|  0.00%|                   n_padding=4,
   600|         1|  4.52995e-06|  4.52995e-06|  0.00%|                   figsize=(12, 12),
   601|         1|  4.76837e-06|  4.76837e-06|  0.00%|                   title='fg_prob, '+title_postfix,
   602|         1|  3.60012e-05|  3.60012e-05|  0.00%|                   neptune_name=prefix+"fg_prob"+postfix)
(call)|         1|      2.16238|      2.16238|  0.45%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_visualization.py:165 show_batch
   603|         0|            0|            0|  0.00%|
   604|         1|  1.04904e-05|  1.04904e-05|  0.00%|    if verbose:
   605|         0|            0|            0|  0.00%|        print("leaving plot_segmentation")
   606|         0|            0|            0|  0.00%|
File: /home/jupyter/REPOS/spacetx-research/src/MODULES/unet_model.py
File duration: 0.226832s (0.05%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  4.29153e-05|  2.14577e-05|  0.00%|import torch
     2|         1|  3.38554e-05|  3.38554e-05|  0.00%|from MODULES.unet_parts import DownBlock, DoubleConvolutionBlock, UpBlock
(call)|         1|   0.00341296|   0.00341296|  0.00%|# <frozen importlib._bootstrap>:978 _find_and_load
(call)|         1|  2.16961e-05|  2.16961e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
     3|         1|  3.74317e-05|  3.74317e-05|  0.00%|from MODULES.encoders_decoders import Encoder1by1, MLP_1by1, PredictBackground
(call)|         1|   0.00465822|   0.00465822|  0.00%|# <frozen importlib._bootstrap>:978 _find_and_load
(call)|         1|  1.54972e-05|  1.54972e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
     4|         1|  2.19345e-05|  2.19345e-05|  0.00%|from collections import deque
(call)|         1|  3.71933e-05|  3.71933e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
     5|         1|  2.00272e-05|  2.00272e-05|  0.00%|from MODULES.namedtuple import UNEToutput
(call)|         1|  1.35899e-05|  1.35899e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         3|  5.38826e-05|  1.79609e-05|  0.00%|class UNet(torch.nn.Module):
(call)|         1|  3.52859e-05|  3.52859e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/unet_model.py:8 UNet
     9|         2|  1.45435e-05|  7.27177e-06|  0.00%|    def __init__(self, params: dict):
    10|         1|  4.60148e-05|  4.60148e-05|  0.00%|        super().__init__()
(call)|         1|   0.00060463|   0.00060463|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:71 __init__
    11|         0|            0|            0|  0.00%|
    12|         0|            0|            0|  0.00%|        # Parameters UNet
    13|         1|  2.19345e-05|  2.19345e-05|  0.00%|        self.n_max_pool = params["architecture"]["n_max_pool"]
(call)|         1|  4.62532e-05|  4.62532e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    14|         1|  1.81198e-05|  1.81198e-05|  0.00%|        self.level_zwhere_and_logit_output = params["architecture"]["level_zwhere_and_logit_output"]
(call)|         1|  6.03199e-05|  6.03199e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    15|         1|  1.66893e-05|  1.66893e-05|  0.00%|        self.level_background_output = params["architecture"]["level_background_output"]
(call)|         1|  4.29153e-05|  4.29153e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    16|         1|  1.54972e-05|  1.54972e-05|  0.00%|        self.n_ch_output_features = params["architecture"]["n_ch_output_features"]
(call)|         1|  4.36306e-05|  4.36306e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    17|         1|  1.52588e-05|  1.52588e-05|  0.00%|        self.ch_after_first_two_conv = params["architecture"]["n_ch_after_first_two_conv"]
(call)|         1|  4.26769e-05|  4.26769e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    18|         1|  1.57356e-05|  1.57356e-05|  0.00%|        self.dim_zwhere = params["architecture"]["dim_zwhere"]
(call)|         1|  4.29153e-05|  4.29153e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    19|         1|  1.52588e-05|  1.52588e-05|  0.00%|        self.dim_logit = params["architecture"]["dim_logit"]
(call)|         1|  4.31538e-05|  4.31538e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    20|         1|  3.55244e-05|  3.55244e-05|  0.00%|        self.ch_raw_image = params["input_image"]["ch_in"]
(call)|         1|  6.10352e-05|  6.10352e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    21|         0|            0|            0|  0.00%|
    22|         0|            0|            0|  0.00%|        # Initializations
    23|         1|  9.53674e-06|  9.53674e-06|  0.00%|        ch = self.ch_after_first_two_conv
    24|         1|  5.48363e-06|  5.48363e-06|  0.00%|        j = 1
    25|         1|  1.57356e-05|  1.57356e-05|  0.00%|        self.j_list = [j]
(call)|         1|  5.98431e-05|  5.98431e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    26|         1|  1.54972e-05|  1.54972e-05|  0.00%|        self.ch_list = [ch]
(call)|         1|  4.33922e-05|  4.33922e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    27|         0|            0|            0|  0.00%|
    28|         0|            0|            0|  0.00%|        # Down path to center
    29|         1|  7.79629e-05|  7.79629e-05|  0.00%|        self.down_path = torch.nn.ModuleList([DoubleConvolutionBlock(self.ch_raw_image, self.ch_list[-1])])
(call)|         1|    0.0655367|    0.0655367|  0.01%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/unet_parts.py:16 __init__
(call)|         1|  0.000800848|  0.000800848|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/container.py:128 __init__
(call)|         1|  7.62939e-05|  7.62939e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    30|         5|  2.83718e-05|  5.67436e-06|  0.00%|        for i in range(0, self.n_max_pool):
    31|         4|  1.74046e-05|  4.35114e-06|  0.00%|            j = j * 2
    32|         4|  1.62125e-05|  4.05312e-06|  0.00%|            ch = ch * 2
    33|         4|  2.24113e-05|  5.60284e-06|  0.00%|            self.ch_list.append(ch)
    34|         4|   1.7643e-05|  4.41074e-06|  0.00%|            self.j_list.append(j)
    35|         4|  0.000175953|  4.39882e-05|  0.00%|            self.down_path.append(DownBlock(self.ch_list[-2], self.ch_list[-1]))
(call)|         4|  0.000170708|  4.26769e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:580 __getattr__
(call)|         4|    0.0714905|    0.0178726|  0.02%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/unet_parts.py:48 __init__
(call)|         4|  0.000483751|  0.000120938|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/container.py:191 append
    36|         0|            0|            0|  0.00%|
    37|         0|            0|            0|  0.00%|        # Up path
    38|         1|  3.45707e-05|  3.45707e-05|  0.00%|        self.up_path = torch.nn.ModuleList()
(call)|         1|  0.000585318|  0.000585318|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/container.py:128 __init__
(call)|         1|  7.08103e-05|  7.08103e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    39|         5|   3.3617e-05|   6.7234e-06|  0.00%|        for i in range(0, self.n_max_pool):
    40|         4|  2.07424e-05|   5.1856e-06|  0.00%|            j = int(j // 2)
    41|         4|  2.12193e-05|  5.30481e-06|  0.00%|            ch = int(ch // 2)
    42|         4|  2.12193e-05|  5.30481e-06|  0.00%|            self.ch_list.append(ch)
    43|         4|  1.85966e-05|  4.64916e-06|  0.00%|            self.j_list.append(j)
    44|         4|  0.000142813|  3.57032e-05|  0.00%|            self.up_path.append(UpBlock(self.ch_list[-2], self.ch_list[-1]))
(call)|         4|  0.000161648|  4.04119e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:580 __getattr__
(call)|         4|     0.101488|     0.025372|  0.02%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/unet_parts.py:72 __init__
(call)|         4|  0.000445366|  0.000111341|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/container.py:191 append
    45|         0|            0|            0|  0.00%|
    46|         0|            0|            0|  0.00%|        # Prediction maps
    47|         1|  8.58307e-06|  8.58307e-06|  0.00%|        self.pred_features = MLP_1by1(ch_in=self.ch_list[-1],
    48|         1|  9.05991e-06|  9.05991e-06|  0.00%|                                      ch_out=self.n_ch_output_features,
    49|         1|  3.69549e-05|  3.69549e-05|  0.00%|                                      ch_hidden=-1)  # this means there is NO hidden layer
(call)|         1|   0.00423002|   0.00423002|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/encoders_decoders.py:13 __init__
(call)|         1|  8.29697e-05|  8.29697e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    50|         0|            0|            0|  0.00%|
    51|         0|            0|            0|  0.00%|        # self.ch_in_zwhere = min(20, self.ch_list[-self.level_zwhere_and_logit_output - 1])
    52|         1|  1.62125e-05|  1.62125e-05|  0.00%|        self.ch_in_zwhere = self.ch_list[-self.level_zwhere_and_logit_output - 1]
(call)|         1|  4.62532e-05|  4.62532e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    53|         1|  8.82149e-06|  8.82149e-06|  0.00%|        self.encode_zwhere = Encoder1by1(ch_in=self.ch_in_zwhere,
    54|         1|  5.48363e-06|  5.48363e-06|  0.00%|                                         dim_z=self.dim_zwhere,
    55|         1|   3.3617e-05|   3.3617e-05|  0.00%|                                         ch_hidden=None)  # this means there is ONE hidden layer of automatic size
(call)|         1|   0.00807643|   0.00807643|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/encoders_decoders.py:42 __init__
(call)|         1|  8.89301e-05|  8.89301e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    56|         0|            0|            0|  0.00%|
    57|         0|            0|            0|  0.00%|        # self.ch_in_logit = min(20, self.ch_list[-self.level_zwhere_and_logit_output - 1])
    58|         1|  1.90735e-05|  1.90735e-05|  0.00%|        self.ch_in_logit = self.ch_list[-self.level_zwhere_and_logit_output - 1]
(call)|         1|  4.52995e-05|  4.52995e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    59|         1|  5.48363e-06|  5.48363e-06|  0.00%|        self.encode_logit = Encoder1by1(ch_in=self.ch_in_logit,
    60|         1|  5.48363e-06|  5.48363e-06|  0.00%|                                        dim_z=self.dim_logit,
    61|         1|  2.74181e-05|  2.74181e-05|  0.00%|                                        ch_hidden=None)  # this means there is ONE hidden layer of automatic size
(call)|         1|   0.00768495|   0.00768495|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/encoders_decoders.py:42 __init__
(call)|         1|  7.15256e-05|  7.15256e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    62|         0|            0|            0|  0.00%|
    63|         0|            0|            0|  0.00%|        # I don't need all the channels to predict the background. Few channels are enough
    64|         1|  1.93119e-05|  1.93119e-05|  0.00%|        self.ch_in_bg = min(5, self.ch_list[-self.level_background_output - 1])
(call)|         1|  4.81606e-05|  4.81606e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    65|         1|  6.19888e-06|  6.19888e-06|  0.00%|        self.pred_background = PredictBackground(ch_in=self.ch_in_bg,
    66|         1|  5.24521e-06|  5.24521e-06|  0.00%|                                                 ch_out=self.ch_raw_image,
    67|         1|  3.95775e-05|  3.95775e-05|  0.00%|                                                 ch_hidden=-1)  # this means there is NO hidden layer
(call)|         1|   0.00394917|   0.00394917|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/encoders_decoders.py:30 __init__
(call)|         1|  8.72612e-05|  8.72612e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    68|         0|            0|            0|  0.00%|
    69|        25|  0.000200748|  8.02994e-06|  0.00%|    def forward(self, x: torch.Tensor, verbose: bool):
    70|         0|            0|            0|  0.00%|        # input_w, input_h = x.shape[-2:]
    71|        24|  0.000182152|  7.58966e-06|  0.00%|        if verbose:
    72|         0|            0|            0|  0.00%|            print("INPUT ---> shape ", x.shape)
    73|         0|            0|            0|  0.00%|
    74|         0|            0|            0|  0.00%|        # Down path and save the tensor which will need to be concatenated
    75|        24|  0.000174522|  7.27177e-06|  0.00%|        to_be_concatenated = deque()
    76|       144|   0.00152111|  1.05633e-05|  0.00%|        for i, down in enumerate(self.down_path):
(call)|        24|  0.000971317|  4.04716e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:580 __getattr__
(call)|        24|  0.000292778|  1.21991e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/container.py:167 __iter__
    77|       120|    0.0020225|  1.68542e-05|  0.00%|            x = down(x, verbose)
(call)|       120|      4.36934|    0.0364111|  0.92%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:540 __call__
    78|       120|  0.000643969|   5.3664e-06|  0.00%|            if verbose:
    79|         0|            0|            0|  0.00%|                print("down   ", i, " shape ", x.shape)
    80|       120|  0.000593662|  4.94719e-06|  0.00%|            if i < self.n_max_pool:
    81|        96|  0.000505924|  5.27004e-06|  0.00%|                to_be_concatenated.append(x)
    82|        96|  0.000456333|  4.75347e-06|  0.00%|                if verbose:
    83|         0|            0|            0|  0.00%|                    print("appended")
    84|         0|            0|            0|  0.00%|
    85|         0|            0|            0|  0.00%|        # During up path I need to concatenate with the tensor obtained during the down path
    86|         0|            0|            0|  0.00%|        # If distance is < self.n_prediction_maps I need to export a prediction map
    87|        24|   0.00013423|   5.5929e-06|  0.00%|        zwhere, logit, zbg = None, None, None
    88|       120|   0.00117183|  9.76523e-06|  0.00%|        for i, up in enumerate(self.up_path):
(call)|        24|   0.00110555|  4.60645e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:580 __getattr__
(call)|        24|  0.000232697|  9.69569e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/container.py:167 __iter__
    89|        96|  0.000522137|  5.43892e-06|  0.00%|            dist_to_end_of_net = self.n_max_pool - i
    90|        96|  0.000437975|  4.56224e-06|  0.00%|            if dist_to_end_of_net == self.level_zwhere_and_logit_output:
    91|        24|   0.00134373|  5.59886e-05|  0.00%|                zwhere = self.encode_zwhere(x[..., :self.ch_in_zwhere, :, :])
(call)|        24|   0.00111008|  4.62532e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:580 __getattr__
(call)|        24|    0.0308015|    0.0012834|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:540 __call__
    92|        24|   0.00128436|   5.3515e-05|  0.00%|                logit = self.encode_logit(x[..., :self.ch_in_logit, :, :])
(call)|        24|  0.000959873|  3.99947e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:580 __getattr__
(call)|        24|    0.0302453|   0.00126022|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:540 __call__
    93|        96|   0.00045228|  4.71125e-06|  0.00%|            if dist_to_end_of_net == self.level_background_output:
    94|        24|   0.00168729|  7.03037e-05|  0.00%|                zbg = self.pred_background(x[..., :self.ch_in_bg, :, :])  # only few channels needed for predicting bg
(call)|        24|  0.000991821|  4.13259e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:580 __getattr__
(call)|        24|     0.104302|   0.00434591|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:540 __call__
    95|         0|            0|            0|  0.00%|
    96|        96|   0.00177217|  1.84601e-05|  0.00%|            x = up(to_be_concatenated.pop(), x, verbose)
(call)|        96|      1.07958|    0.0112456|  0.23%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:540 __call__
    97|        96|  0.000504971|  5.26011e-06|  0.00%|            if verbose:
    98|         0|            0|            0|  0.00%|                print("up     ", i, " shape ", x.shape)
    99|         0|            0|            0|  0.00%|
   100|         0|            0|            0|  0.00%|        # always add a pred_map to the rightmost layer (which had distance 0 from the end of the net)
   101|        24|  0.000659704|  2.74877e-05|  0.00%|        features = self.pred_features(x)
(call)|        24|  0.000987291|  4.11371e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:580 __getattr__
(call)|        24|   0.00900197|  0.000375082|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:540 __call__
   102|         0|            0|            0|  0.00%|
   103|        24|  0.000134468|  5.60284e-06|  0.00%|        return UNEToutput(zwhere=zwhere,
   104|        24|  0.000120401|  5.01672e-06|  0.00%|                          logit=logit,
   105|        24|  0.000126123|  5.25514e-06|  0.00%|                          zbg=zbg,
   106|        24|  0.000380516|  1.58548e-05|  0.00%|                          features=features)
(call)|        24|  0.000248909|  1.03712e-05|  0.00%|# <string>_121:1 __new__
   107|         0|            0|            0|  0.00%|
   108|         2|  1.88351e-05|  9.41753e-06|  0.00%|    def show_grid(self, ref_image):
   109|         0|            0|            0|  0.00%|        """ overimpose a grid the size of the corresponding resolution of each unet layer """
   110|         0|            0|            0|  0.00%|
   111|         1|  1.54972e-05|  1.54972e-05|  0.00%|        assert len(ref_image.shape) == 4
   112|         1|  8.58307e-06|  8.58307e-06|  0.00%|        batch, ch, w_raw, h_raw = ref_image.shape
   113|         0|            0|            0|  0.00%|
   114|         1|  6.91414e-06|  6.91414e-06|  0.00%|        nj = len(self.j_list)
   115|         1|   0.00547194|   0.00547194|  0.00%|        check_board = ref_image.new_zeros((nj, 1, 1, w_raw, h_raw))  # for each batch and channel the same check_board
   116|         1|    0.0394499|    0.0394499|  0.01%|        counter_w = torch.arange(w_raw)
   117|         1|    0.0051775|    0.0051775|  0.00%|        counter_h = torch.arange(h_raw)
   118|         0|            0|            0|  0.00%|
   119|        10|  0.000151396|  1.51396e-05|  0.00%|        for k in range(nj):
   120|         9|  5.60284e-05|  6.22537e-06|  0.00%|            j = self.j_list[k]
   121|         9|    0.0272682|    0.0030298|  0.01%|            index_w = 1 + ((counter_w // j) % 2)  # either 1 or 2
(call)|         9|    0.0463812|   0.00515347|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torch/tensor.py:25 wrapped
   122|         9|    0.0313313|   0.00348126|  0.01%|            dx = index_w.float().view(w_raw, 1)
   123|         9|     0.031209|   0.00346767|  0.01%|            index_h = 1 + ((counter_h // j) % 2)  # either 1 or 2
(call)|         9|   0.00561595|  0.000623994|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/tensor.py:25 wrapped
   124|         9|    0.0285425|   0.00317139|  0.01%|            dy = index_h.float().view(1, h_raw)
   125|         9|    0.0380108|   0.00422343|  0.01%|            check_board[k, 0, 0, :, :] = 0.25 * (dy * dx)  # dx*dy=1,2,4 multiply by 0.25 to have (0,1)
   126|         0|            0|            0|  0.00%|
   127|         1|  8.58307e-06|  8.58307e-06|  0.00%|        assert check_board.shape == (nj, 1, 1, w_raw, h_raw)
   128|         0|            0|            0|  0.00%|
   129|         0|            0|            0|  0.00%|        # I need to sum:
   130|         0|            0|            0|  0.00%|        # check_board of shape: --> levels, 1,      1, w_raw, h_raw
   131|         0|            0|            0|  0.00%|        # ref_image of shape ----->         batch, ch, w_raw, h_raw
   132|         1|   0.00170565|   0.00170565|  0.00%|        return ref_image + check_board
   133|         0|            0|            0|  0.00%|
File: <__array_function__ internals>_51
File duration: 0.221827s (0.05%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|      7767|    0.0213871|  2.75359e-06|  0.00%|
(call)|         1|  1.19209e-05|  1.19209e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.10759e-05|  9.10759e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|      7765|    0.0839939|   1.0817e-05|  0.02%|
(call)|      7765|    0.0499258|  6.42959e-06|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/fromnumeric.py:2709 _amin_dispatcher
     5|      7765|     0.027189|  3.50148e-06|  0.01%|
     6|      7765|    0.0892572|  1.14948e-05|  0.02%|
(call)|      7765|      0.62106|   7.9982e-05|  0.13%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/fromnumeric.py:2714 amin
File: <__array_function__ internals>_50
File duration: 0.22135s (0.05%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|      7919|    0.0214972|  2.71464e-06|  0.00%|
(call)|         1|  1.12057e-05|  1.12057e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.01222e-05|  9.01222e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|      7917|    0.0841036|  1.06232e-05|  0.02%|
(call)|      7917|    0.0495789|  6.26233e-06|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/fromnumeric.py:2584 _amax_dispatcher
     5|      7917|    0.0267477|  3.37852e-06|  0.01%|
     6|      7917|    0.0890017|  1.12418e-05|  0.02%|
(call)|      7917|     0.610238|  7.70794e-05|  0.13%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/fromnumeric.py:2589 amax
File: <__array_function__ internals>_0
File duration: 0.147893s (0.03%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|      5017|    0.0148354|  2.95702e-06|  0.00%|
(call)|         1|  2.74181e-05|  2.74181e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000117064|  0.000117064|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|      5015|    0.0575309|  1.14718e-05|  0.01%|
(call)|      5015|     0.051039|  1.01773e-05|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/multiarray.py:143 concatenate
     5|      5015|    0.0180459|  3.59839e-06|  0.00%|
     6|      5015|    0.0574811|  1.14618e-05|  0.01%|
(call)|        16|   0.00199056|   0.00012441|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/ma/core.py:2975 __array_finalize__
File: /home/jupyter/REPOS/spacetx-research/src/MODULES/vae_parts.py
File duration: 0.126736s (0.03%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  5.19753e-05|  2.59876e-05|  0.00%|import torch
     2|         1|  1.14441e-05|  1.14441e-05|  0.00%|import torch.nn.functional as F
     3|         0|            0|            0|  0.00%|
     4|         1|  4.69685e-05|  4.69685e-05|  0.00%|from MODULES.cropper_uncropper import Uncropper, Cropper
(call)|         1|    0.0279729|    0.0279729|  0.01%|# <frozen importlib._bootstrap>:978 _find_and_load
(call)|         1|  1.93119e-05|  1.93119e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
     5|         1|  4.60148e-05|  4.60148e-05|  0.00%|from MODULES.unet_model import UNet
(call)|         1|    0.0117576|    0.0117576|  0.00%|# <frozen importlib._bootstrap>:978 _find_and_load
(call)|         1|   1.7643e-05|   1.7643e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
     6|         1|  2.90871e-05|  2.90871e-05|  0.00%|from MODULES.encoders_decoders import EncoderConv, DecoderConv, Decoder1by1Linear, EncoderConvLeaky, DecoderConvLeaky
(call)|         1|  1.54972e-05|  1.54972e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
     7|         1|  3.74317e-05|  3.74317e-05|  0.00%|from MODULES.utilities import tmaps_to_bb, convert_to_box_list, invert_convert_to_box_list
(call)|         1|  1.69277e-05|  1.69277e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
     8|         1|  3.00407e-05|  3.00407e-05|  0.00%|from MODULES.utilities_ml import sample_and_kl_diagonal_normal, sample_and_kl_prob, SimilarityKernel
(call)|         1|  1.54972e-05|  1.54972e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
     9|         1|  2.71797e-05|  2.71797e-05|  0.00%|from MODULES.namedtuple import Inference, NMSoutput, BB, UNEToutput, ZZ, DIST
(call)|         1|  1.50204e-05|  1.50204e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
    10|         1|  4.91142e-05|  4.91142e-05|  0.00%|from MODULES.non_max_suppression import NonMaxSuppression
(call)|         1|   0.00389409|   0.00389409|  0.00%|# <frozen importlib._bootstrap>:978 _find_and_load
(call)|         1|   1.7643e-05|   1.7643e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
    11|         0|            0|            0|  0.00%|
    12|         0|            0|            0|  0.00%|
    13|        25|  0.000199318|  7.97272e-06|  0.00%|def from_weights_to_masks(weight: torch.Tensor, dim: int):
    14|         0|            0|            0|  0.00%|    """ Make sure that when summing over dim=dim the mask sum to zero or one
    15|         0|            0|            0|  0.00%|        mask_j = fg_mask * partitioning_j
    16|         0|            0|            0|  0.00%|        where fg_mask = tanh ( sum_i w_i) and partitioning_j = w_j / (sum_i w_i)
    17|         0|            0|            0|  0.00%|    """
    18|        24|  0.000169277|  7.05322e-06|  0.00%|    assert len(weight.shape) == 5
    19|        24|   0.00148106|  6.17107e-05|  0.00%|    sum_weight = torch.sum(weight, dim=dim, keepdim=True)
    20|        24|   0.00163078|  6.79493e-05|  0.00%|    fg_mask = torch.tanh(sum_weight)
    21|        24|   0.00226879|   9.4533e-05|  0.00%|    partitioning = weight / torch.clamp(sum_weight, min=1E-6)
    22|        24|   0.00108147|  4.50611e-05|  0.00%|    return fg_mask * partitioning
    23|         0|            0|            0|  0.00%|
    24|         0|            0|            0|  0.00%|
    25|         1|  9.77516e-06|  9.77516e-06|  0.00%|def downsample_and_upsample(x: torch.Tensor, low_resolution: tuple, high_resolution: tuple):
    26|         0|            0|            0|  0.00%|    low_res_x = F.adaptive_avg_pool2d(x, output_size=low_resolution)
    27|         0|            0|            0|  0.00%|    # low_res_x = F.adaptive_max_pool2d(x, output_size=low_resolution)
    28|         0|            0|            0|  0.00%|    high_res_x = F.interpolate(low_res_x, size=high_resolution, mode='bilinear', align_corners=True)
    29|         0|            0|            0|  0.00%|    return high_res_x
    30|         0|            0|            0|  0.00%|
    31|         0|            0|            0|  0.00%|
    32|         3|  6.96182e-05|  2.32061e-05|  0.00%|class Inference_and_Generation(torch.nn.Module):
(call)|         1|  9.89437e-05|  9.89437e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/vae_parts.py:32 Inference_and_Generation
    33|         0|            0|            0|  0.00%|
    34|         2|  1.40667e-05|  7.03335e-06|  0.00%|    def __init__(self, params):
    35|         1|  0.000108242|  0.000108242|  0.00%|        super().__init__()
(call)|         1|  0.000515223|  0.000515223|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:71 __init__
    36|         0|            0|            0|  0.00%|
    37|         0|            0|            0|  0.00%|        # variables
    38|         1|  5.67436e-05|  5.67436e-05|  0.00%|        self.size_max: int = params["input_image"]["size_object_max"]
(call)|         1|  6.62804e-05|  6.62804e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    39|         1|   1.7643e-05|   1.7643e-05|  0.00%|        self.size_min: int = params["input_image"]["size_object_min"]
(call)|         1|  4.72069e-05|  4.72069e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    40|         1|  2.19345e-05|  2.19345e-05|  0.00%|        self.cropped_size: int = params["architecture"]["cropped_size"]
(call)|         1|  5.72205e-05|  5.72205e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    41|         0|            0|            0|  0.00%|
    42|         0|            0|            0|  0.00%|
    43|         0|            0|            0|  0.00%|
    44|         0|            0|            0|  0.00%|        # modules
    45|         1|  6.34193e-05|  6.34193e-05|  0.00%|        self.similarity_kernel_dpp = SimilarityKernel(n_kernels=params["DPP"]["n_kernels"])
(call)|         1|     0.211657|     0.211657|  0.04%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:96 __init__
(call)|         1|  9.10759e-05|  9.10759e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    46|         1|  5.19753e-05|  5.19753e-05|  0.00%|        self.unet: UNet = UNet(params)
(call)|         1|     0.267962|     0.267962|  0.06%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/unet_model.py:9 __init__
(call)|         1|   0.00011301|   0.00011301|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    47|         0|            0|            0|  0.00%|
    48|         0|            0|            0|  0.00%|        # Decoders
    49|         1|  8.58307e-06|  8.58307e-06|  0.00%|        self.decoder_zwhere: Decoder1by1Linear = Decoder1by1Linear(dim_z=params["architecture"]["dim_zwhere"],
    50|         1|  4.76837e-06|  4.76837e-06|  0.00%|                                                                   ch_out=4,
    51|         1|   4.8399e-05|   4.8399e-05|  0.00%|                                                                   groups=params["architecture"]["dim_zwhere"])
(call)|         1|    0.0031836|    0.0031836|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/encoders_decoders.py:55 __init__
(call)|         1|  7.48634e-05|  7.48634e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    52|         0|            0|            0|  0.00%|
    53|         1|   6.4373e-06|   6.4373e-06|  0.00%|        self.decoder_logit: Decoder1by1Linear = Decoder1by1Linear(dim_z=params["architecture"]["dim_logit"],
    54|         1|  2.02656e-05|  2.02656e-05|  0.00%|                                                                  ch_out=1,
    55|         1|  2.86102e-05|  2.86102e-05|  0.00%|                                                                  groups=1)
(call)|         1|   0.00312877|   0.00312877|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/encoders_decoders.py:55 __init__
(call)|         1|  7.34329e-05|  7.34329e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    56|         0|            0|            0|  0.00%|
    57|         1|  7.15256e-06|  7.15256e-06|  0.00%|        leaky = False
    58|         1|  5.00679e-06|  5.00679e-06|  0.00%|        if leaky:
    59|         0|            0|            0|  0.00%|            self.decoder_zinstance: DecoderConvLeaky = DecoderConvLeaky(size=params["architecture"]["cropped_size"],
    60|         0|            0|            0|  0.00%|                                                                        dim_z=params["architecture"]["dim_zinstance"],
    61|         0|            0|            0|  0.00%|                                                                        ch_out=params["input_image"]["ch_in"] + 1)
    62|         0|            0|            0|  0.00%|
    63|         0|            0|            0|  0.00%|            # encoder z_mask (takes the unet_features)
    64|         0|            0|            0|  0.00%|            self.encoder_zinstance: EncoderConvLeaky = EncoderConvLeaky(size=params["architecture"]["cropped_size"],
    65|         0|            0|            0|  0.00%|                                                                        ch_in=params["architecture"]["n_ch_output_features"],
    66|         0|            0|            0|  0.00%|                                                                        dim_z=params["architecture"]["dim_zinstance"])
    67|         0|            0|            0|  0.00%|        else:
    68|         1|  5.24521e-06|  5.24521e-06|  0.00%|            self.decoder_zinstance: DecoderConv = DecoderConv(size=params["architecture"]["cropped_size"],
    69|         1|  5.00679e-06|  5.00679e-06|  0.00%|                                                              dim_z=params["architecture"]["dim_zinstance"],
    70|         1|  4.05312e-05|  4.05312e-05|  0.00%|                                                              ch_out=params["input_image"]["ch_in"] + 1)
(call)|         1|    0.0132108|    0.0132108|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/encoders_decoders.py:78 __init__
(call)|         1|  7.34329e-05|  7.34329e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    71|         0|            0|            0|  0.00%|
    72|         0|            0|            0|  0.00%|            # encoder z_mask (takes the unet_features)
    73|         1|  6.19888e-06|  6.19888e-06|  0.00%|            self.encoder_zinstance: EncoderConv = EncoderConv(size=params["architecture"]["cropped_size"],
    74|         1|  5.96046e-06|  5.96046e-06|  0.00%|                                                              ch_in=params["architecture"]["n_ch_output_features"],
    75|         1|  3.17097e-05|  3.17097e-05|  0.00%|                                                              dim_z=params["architecture"]["dim_zinstance"])
(call)|         1|    0.0151522|    0.0151522|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/encoders_decoders.py:106 __init__
(call)|         1|  7.43866e-05|  7.43866e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    76|         0|            0|            0|  0.00%|
    77|        25|  0.000424862|  1.69945e-05|  0.00%|    def forward(self, imgs_in: torch.Tensor,
    78|         1|  7.39098e-06|  7.39098e-06|  0.00%|                generate_synthetic_data: bool,
    79|         1|  1.19209e-05|  1.19209e-05|  0.00%|                prob_corr_factor: float,
    80|         1|  7.62939e-06|  7.62939e-06|  0.00%|                overlap_threshold: float,
    81|         1|  7.15256e-06|  7.15256e-06|  0.00%|                n_objects_max: int,
    82|         1|  7.15256e-06|  7.15256e-06|  0.00%|                topk_only: bool,
    83|         1|  9.29832e-06|  9.29832e-06|  0.00%|                noisy_sampling: bool,
    84|         1|  7.62939e-06|  7.62939e-06|  0.00%|                bg_is_zero: bool,
    85|         1|  8.10623e-06|  8.10623e-06|  0.00%|                bg_resolution: tuple) -> Inference:
    86|         0|            0|            0|  0.00%|
    87|         0|            0|            0|  0.00%|        # 0. preparation
    88|        24|  0.000376463|   1.5686e-05|  0.00%|        batch_size, ch_raw_image, width_raw_image, height_raw_image = imgs_in.shape
    89|         0|            0|            0|  0.00%|
    90|         0|            0|            0|  0.00%|        # ---------------------------#
    91|         0|            0|            0|  0.00%|        # 1. UNET
    92|         0|            0|            0|  0.00%|        # ---------------------------#
    93|        24|   0.00120091|  5.00381e-05|  0.00%|        unet_output: UNEToutput = self.unet.forward(imgs_in, verbose=False)
(call)|        24|   0.00108552|    4.523e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:580 __getattr__
(call)|        24|      5.64719|       0.2353|  1.19%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/unet_model.py:69 forward
    94|        24|  0.000252485|  1.05202e-05|  0.00%|        if bg_is_zero:
    95|        24|   0.00185752|  7.73966e-05|  0.00%|            big_bg = torch.zeros_like(imgs_in)
    96|         0|            0|            0|  0.00%|        else:
    97|         0|            0|            0|  0.00%|            # I could also sample
    98|         0|            0|            0|  0.00%|            # bg = unet_output.zbg.mu + eps * unet_output.zbg.std
    99|         0|            0|            0|  0.00%|            bg_map = downsample_and_upsample(unet_output.zbg.mu,
   100|         0|            0|            0|  0.00%|                                             low_resolution=bg_resolution,
   101|         0|            0|            0|  0.00%|                                             high_resolution=(imgs_in.shape[-2], imgs_in.shape[-1]))
   102|         0|            0|            0|  0.00%|            big_bg = torch.sigmoid(bg_map)
   103|         0|            0|            0|  0.00%|
   104|        24|  0.000709057|   2.9544e-05|  0.00%|        with torch.no_grad():
(call)|        24|  0.000469685|  1.95702e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/grad_mode.py:65 __enter__
   105|        24|    0.0535805|   0.00223252|  0.01%|            bounding_box_no_noise: BB = tmaps_to_bb(tmaps=torch.sigmoid(self.decoder_zwhere(unet_output.zwhere.mu)),
(call)|        24|   0.00111198|  4.63327e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:580 __getattr__
(call)|        24|     0.106023|   0.00441762|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:540 __call__
   106|        24|  0.000401735|   1.6739e-05|  0.00%|                                                    width_raw_image=width_raw_image,
   107|        24|  0.000220776|  9.19898e-06|  0.00%|                                                    height_raw_image=height_raw_image,
   108|        24|   0.00024581|  1.02421e-05|  0.00%|                                                    min_box_size=self.size_min,
   109|        24|   0.00117445|  4.89354e-05|  0.00%|                                                    max_box_size=self.size_max)
(call)|        24|    0.0456064|   0.00190027|  0.01%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities.py:29 tmaps_to_bb
(call)|        24|  0.000997066|  4.15444e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/grad_mode.py:69 __exit__
   110|         0|            0|            0|  0.00%|
   111|        24|  0.000695467|  2.89778e-05|  0.00%|        similarity_kernel = self.similarity_kernel_dpp.forward(n_width=unet_output.logit.mu.shape[-2],
(call)|        24|   0.00108433|  4.51803e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:580 __getattr__
   112|        24|  0.000780821|  3.25342e-05|  0.00%|                                                               n_height=unet_output.logit.mu.shape[-1])
(call)|        24|     0.264754|    0.0110314|  0.06%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:138 forward
   113|         0|            0|            0|  0.00%|
   114|         0|            0|            0|  0.00%|        c_all: DIST
   115|         0|            0|            0|  0.00%|        q_all: torch.Tensor
   116|        24|  0.000339746|  1.41561e-05|  0.00%|        c_all, q_all = sample_and_kl_prob(logit_map=unet_output.logit.mu,
   117|        24|  0.000216007|   9.0003e-06|  0.00%|                                          similarity_kernel=similarity_kernel,
   118|        24|  0.000196695|  8.19564e-06|  0.00%|                                          images=imgs_in,
   119|        24|  0.000201941|  8.41419e-06|  0.00%|                                          background=big_bg,
   120|        24|  0.000203371|  8.47379e-06|  0.00%|                                          bounding_box_no_noise=bounding_box_no_noise,
   121|        24|  0.000202417|  8.43406e-06|  0.00%|                                          prob_corr_factor=prob_corr_factor,
   122|        24|  0.000216722|   9.0301e-06|  0.00%|                                          noisy_sampling=noisy_sampling,
   123|        24|   0.00170541|  7.10587e-05|  0.00%|                                          sample_from_prior=generate_synthetic_data)
(call)|        24|      19.1185|     0.796602|  4.02%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:43 sample_and_kl_prob
   124|         0|            0|            0|  0.00%|
   125|        24|  0.000857115|  3.57131e-05|  0.00%|        q_map = invert_convert_to_box_list(q_all.unsqueeze(-1),
   126|        24|   0.00043416|    1.809e-05|  0.00%|                                           original_width=unet_output.logit.mu.shape[-2],
   127|        24|  0.000762463|  3.17693e-05|  0.00%|                                           original_height=unet_output.logit.mu.shape[-1])
(call)|        24|   0.00152302|  6.34591e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities.py:19 invert_convert_to_box_list
   128|        24|  0.000432968|  1.80403e-05|  0.00%|        c_map = invert_convert_to_box_list(c_all.sample.unsqueeze(-1),
   129|        24|  0.000349045|  1.45435e-05|  0.00%|                                           original_width=unet_output.logit.mu.shape[-2],
   130|        24|  0.000641584|  2.67327e-05|  0.00%|                                           original_height=unet_output.logit.mu.shape[-1])
(call)|        24|  0.000972748|  4.05312e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities.py:19 invert_convert_to_box_list
   131|         0|            0|            0|  0.00%|
   132|        24|   0.00027585|  1.14938e-05|  0.00%|        zwhere_map: DIST = sample_and_kl_diagonal_normal(posterior_mu=unet_output.zwhere.mu,
   133|        24|  0.000256777|   1.0699e-05|  0.00%|                                                         posterior_std=unet_output.zwhere.std,
   134|        24|   0.00133491|  5.56211e-05|  0.00%|                                                         prior_mu=torch.zeros_like(unet_output.zwhere.mu),
   135|        24|   0.00168204|  7.00851e-05|  0.00%|                                                         prior_std=torch.ones_like(unet_output.zwhere.std),
   136|        24|  0.000352144|  1.46727e-05|  0.00%|                                                         noisy_sampling=noisy_sampling,
   137|        24|  0.000898361|  3.74317e-05|  0.00%|                                                         sample_from_prior=generate_synthetic_data)
(call)|        24|    0.0581093|   0.00242122|  0.01%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:22 sample_and_kl_diagonal_normal
   138|         0|            0|            0|  0.00%|
   139|        24|     0.002388|     9.95e-05|  0.00%|        bounding_box_all: BB = tmaps_to_bb(tmaps=torch.sigmoid(self.decoder_zwhere(zwhere_map.sample)),
(call)|        24|   0.00156784|  6.53267e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:580 __getattr__
(call)|        24|   0.00999951|  0.000416646|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:540 __call__
   140|        24|  0.000322342|  1.34309e-05|  0.00%|                                           width_raw_image=width_raw_image,
   141|        24|  0.000202179|  8.42412e-06|  0.00%|                                           height_raw_image=height_raw_image,
   142|        24|  0.000231266|  9.63608e-06|  0.00%|                                           min_box_size=self.size_min,
   143|        24|   0.00082159|  3.42329e-05|  0.00%|                                           max_box_size=self.size_max)
(call)|        24|    0.0248902|   0.00103709|  0.01%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities.py:29 tmaps_to_bb
   144|         0|            0|            0|  0.00%|
   145|        24|  0.000637054|  2.65439e-05|  0.00%|        with torch.no_grad():
(call)|        24|  0.000487566|  2.03152e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/grad_mode.py:65 __enter__
   146|        24|   0.00103068|  4.29451e-05|  0.00%|            nms_output: NMSoutput = NonMaxSuppression.compute_mask_and_index(score=q_all+c_all.sample,
   147|        24|  0.000321388|  1.33912e-05|  0.00%|                                                                             bounding_box=bounding_box_all,
   148|        24|  0.000186205|  7.75854e-06|  0.00%|                                                                             overlap_threshold=overlap_threshold,
   149|        24|   0.00019002|  7.91748e-06|  0.00%|                                                                             n_objects_max=n_objects_max,
   150|        24|   0.00136685|  5.69522e-05|  0.00%|                                                                             topk_only=topk_only)
(call)|        24|      1.95896|    0.0816234|  0.41%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/non_max_suppression.py:95 compute_mask_and_index
(call)|        24|   0.00122857|  5.11905e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/grad_mode.py:69 __exit__
   151|         0|            0|            0|  0.00%|
   152|        24|   0.00410748|  0.000171145|  0.00%|        c_few = torch.gather(c_all.sample, dim=0, index=nms_output.index_top_k)
   153|        24|   0.00114298|  4.76241e-05|  0.00%|        q_few = torch.gather(q_all, dim=0, index=nms_output.index_top_k)
   154|         0|            0|            0|  0.00%|
   155|        24|   0.00103354|  4.30644e-05|  0.00%|        bounding_box_few: BB = BB(bx=torch.gather(bounding_box_all.bx, dim=0, index=nms_output.index_top_k),
   156|        24|   0.00104475|  4.35313e-05|  0.00%|                                  by=torch.gather(bounding_box_all.by, dim=0, index=nms_output.index_top_k),
   157|        24|   0.00106025|   4.4177e-05|  0.00%|                                  bw=torch.gather(bounding_box_all.bw, dim=0, index=nms_output.index_top_k),
   158|        24|    0.0014236|  5.93166e-05|  0.00%|                                  bh=torch.gather(bounding_box_all.bh, dim=0, index=nms_output.index_top_k))
(call)|        24|  0.000369549|  1.53979e-05|  0.00%|# <string>_117:1 __new__
   159|         0|            0|            0|  0.00%|
   160|        24|  0.000642776|  2.67824e-05|  0.00%|        zwhere_kl_all = convert_to_box_list(zwhere_map.kl)  # shape: nbox_all, batch_size, ch
(call)|        24|   0.00133014|  5.54224e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities.py:9 convert_to_box_list
   161|        24|  0.000726223|  3.02593e-05|  0.00%|        new_index = nms_output.index_top_k.unsqueeze(-1).expand(-1, -1, zwhere_kl_all.shape[-1])  # shape: nbox_few, batch_size, ch
   162|        24|   0.00132632|  5.52634e-05|  0.00%|        zwhere_kl_few = torch.gather(zwhere_kl_all, dim=0, index=new_index)  # shape (nbox_few, batch_size, ch)
   163|         0|            0|            0|  0.00%|
   164|         0|            0|            0|  0.00%|        # ------------------------------------------------------------------#
   165|         0|            0|            0|  0.00%|        # 5. Crop the unet_features according to the selected boxes
   166|         0|            0|            0|  0.00%|        # ------------------------------------------------------------------#
   167|        24|  0.000366449|  1.52687e-05|  0.00%|        n_boxes, batch_size = bounding_box_few.bx.shape
   168|        24|  0.000778913|  3.24547e-05|  0.00%|        unet_features_expanded = unet_output.features.unsqueeze(0).expand(n_boxes, batch_size, -1, -1, -1)
   169|        24|  0.000293732|  1.22388e-05|  0.00%|        cropped_feature_map: torch.Tensor = Cropper.crop(bounding_box=bounding_box_few,
   170|        24|  0.000210047|  8.75195e-06|  0.00%|                                                         big_stuff=unet_features_expanded,
   171|        24|  0.000226736|  9.44734e-06|  0.00%|                                                         width_small=self.cropped_size,
   172|        24|  0.000835419|  3.48091e-05|  0.00%|                                                         height_small=self.cropped_size)
(call)|        24|     0.094631|   0.00394296|  0.02%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/cropper_uncropper.py:14 crop
   173|         0|            0|            0|  0.00%|
   174|         0|            0|            0|  0.00%|        # ------------------------------------------------------------------#
   175|         0|            0|            0|  0.00%|        # 6. Encode, sample z and decode to big images and big weights
   176|         0|            0|            0|  0.00%|        # ------------------------------------------------------------------#
   177|        24|   0.00116992|  4.87467e-05|  0.00%|        zinstance_posterior: ZZ = self.encoder_zinstance.forward(cropped_feature_map)
(call)|        24|   0.00130939|  5.45581e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:580 __getattr__
(call)|        24|    0.0683992|   0.00284997|  0.01%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/encoders_decoders.py:124 forward
   178|        24|  0.000243187|  1.01328e-05|  0.00%|        zinstance_few: DIST = sample_and_kl_diagonal_normal(posterior_mu=zinstance_posterior.mu,
   179|        24|  0.000203371|  8.47379e-06|  0.00%|                                                            posterior_std=zinstance_posterior.std,
   180|        24|   0.00104856|  4.36902e-05|  0.00%|                                                            prior_mu=torch.zeros_like(zinstance_posterior.mu),
   181|        24|  0.000967503|  4.03126e-05|  0.00%|                                                            prior_std=torch.ones_like(zinstance_posterior.std),
   182|        24|  0.000310659|  1.29441e-05|  0.00%|                                                            noisy_sampling=noisy_sampling,
   183|        24|  0.000709772|  2.95738e-05|  0.00%|                                                            sample_from_prior=generate_synthetic_data)
(call)|        24|    0.0197594|  0.000823309|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:22 sample_and_kl_diagonal_normal
   184|         0|            0|            0|  0.00%|
   185|        24|   0.00158596|  6.60817e-05|  0.00%|        small_stuff_raw = self.decoder_zinstance.forward(zinstance_few.sample)
(call)|        24|   0.00117397|  4.89155e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:580 __getattr__
(call)|        24|      6.98979|     0.291241|  1.47%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/encoders_decoders.py:93 forward
   186|         0|            0|            0|  0.00%|        # Apply softplus to first channel (i.e. mask channel) and sigmoid to all others (i.e. img channels)
   187|        24|   0.00239706|  9.98775e-05|  0.00%|        small_stuff = torch.cat((F.softplus(small_stuff_raw[..., :1, :, :]),
   188|        24|   0.00430679|   0.00017945|  0.00%|                                 torch.sigmoid(small_stuff_raw[..., 1:, :, :])), dim=-3)
   189|        24|  0.000414133|  1.72555e-05|  0.00%|        big_stuff = Uncropper.uncrop(bounding_box=bounding_box_few,
   190|        24|  0.000198364|  8.26518e-06|  0.00%|                                     small_stuff=small_stuff,
   191|        24|  0.000169516|  7.06315e-06|  0.00%|                                     width_big=width_raw_image,
   192|        24|  0.000796556|  3.31899e-05|  0.00%|                                     height_big=height_raw_image)  # shape: n_box, batch, ch, w, h
(call)|        24|    0.0362763|   0.00151151|  0.01%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/cropper_uncropper.py:77 uncrop
   193|        24|   0.00028348|  1.18117e-05|  0.00%|        ch_size = big_stuff.shape[-3]
   194|        24|  0.000623465|  2.59777e-05|  0.00%|        big_weight, big_img = torch.split(big_stuff, split_size_or_sections=(1, ch_size-1), dim=-3)
(call)|        24|   0.00250602|  0.000104417|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/functional.py:65 split
   195|         0|            0|            0|  0.00%|
   196|         0|            0|            0|  0.00%|        # -----------------------
   197|         0|            0|            0|  0.00%|        # 7. From weight to masks
   198|         0|            0|            0|  0.00%|        # ------------------------
   199|        24|   0.00128222|  5.34256e-05|  0.00%|        big_mask = from_weights_to_masks(weight=big_weight, dim=-5)
(call)|        24|   0.00681949|  0.000284145|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/vae_parts.py:13 from_weights_to_masks
   200|        24|   0.00128436|   5.3515e-05|  0.00%|        big_mask_NON_interacting = torch.tanh(big_weight)
   201|         0|            0|            0|  0.00%|
   202|         0|            0|            0|  0.00%|        # 8. Return the inferred quantities
   203|        24|   0.00131702|   5.4876e-05|  0.00%|        similarity_sigma2, similarity_w = self.similarity_kernel_dpp.get_sigma2_w()
(call)|        24|   0.00149798|   6.2416e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:580 __getattr__
(call)|        24|   0.00412941|  0.000172059|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:135 get_sigma2_w
   204|        24|  0.000250101|  1.04209e-05|  0.00%|        return Inference(prob_map=q_map,
   205|        24|  0.000159502|  6.64592e-06|  0.00%|                         prob_few=q_few,
   206|        24|  0.000155687|  6.48697e-06|  0.00%|                         big_bg=big_bg,
   207|        24|  0.000150681|  6.27836e-06|  0.00%|                         big_mask=big_mask,
   208|        24|  0.000144482|  6.02007e-06|  0.00%|                         big_mask_NON_interacting=big_mask_NON_interacting,
   209|        24|  0.000225782|   9.4076e-06|  0.00%|                         big_img=big_img,
   210|         0|            0|            0|  0.00%|                         # the sample of the 3 latent variables
   211|        24|  0.000182629|  7.60953e-06|  0.00%|                         sample_c_map=c_map,
   212|        24|  0.000158548|  6.60618e-06|  0.00%|                         sample_c=c_few,
   213|        24|  0.000167608|  6.98368e-06|  0.00%|                         sample_bb=bounding_box_few,
   214|        24|   0.00025177|  1.04904e-05|  0.00%|                         sample_zinstance=zinstance_few.sample,
   215|         0|            0|            0|  0.00%|                         # the kl of the 3 latent variables
   216|        24|  0.000196695|  8.19564e-06|  0.00%|                         kl_logit=c_all.kl,
   217|        24|  0.000162125|  6.75519e-06|  0.00%|                         kl_zwhere=zwhere_kl_few,
   218|        24|  0.000148535|  6.18895e-06|  0.00%|                         kl_zinstance=zinstance_few.kl,
   219|         0|            0|            0|  0.00%|                         # similarity kernels
   220|        24|  0.000163555|   6.8148e-06|  0.00%|                         similarity_sigma2=similarity_sigma2,
   221|        24|  0.000645399|  2.68916e-05|  0.00%|                         similarity_weights=similarity_w)
(call)|        24|  0.000372648|   1.5527e-05|  0.00%|# <string>_122:1 __new__
File: <string>_86
File duration: 0.111723s (0.02%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|     28400|     0.111723|  3.93392e-06|  0.02%|
File: <__array_function__ internals>_257
File duration: 0.0970101s (0.02%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|      3084|    0.0101864|  3.30299e-06|  0.00%|
(call)|         1|  1.12057e-05|  1.12057e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000108004|  0.000108004|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|      3082|    0.0360026|  1.16816e-05|  0.01%|
(call)|      3082|    0.0796847|  2.58549e-05|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/shape_base.py:608 _column_stack_dispatcher
     5|      3082|    0.0109816|  3.56313e-06|  0.00%|
     6|      3082|    0.0398395|  1.29265e-05|  0.01%|
(call)|      3082|     0.358005|   0.00011616|  0.08%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/shape_base.py:612 column_stack
File: <__array_function__ internals>_234
File duration: 0.0893629s (0.02%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|      2728|    0.0089891|  3.29512e-06|  0.00%|
(call)|         1|  1.07288e-05|  1.07288e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.70228e-05|  8.70228e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|      2726|    0.0326593|  1.19807e-05|  0.01%|
(call)|      2726|    0.0172927|  6.34363e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/stride_tricks.py:200 _broadcast_arrays_dispatcher
     5|      2726|    0.0104423|  3.83062e-06|  0.00%|
     6|      2726|    0.0372722|  1.36729e-05|  0.01%|
(call)|      2726|     0.470825|  0.000172716|  0.10%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/stride_tricks.py:204 broadcast_arrays
File: /home/jupyter/REPOS/spacetx-research/src/MODULES/cropper_uncropper.py
File duration: 0.0842941s (0.02%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  3.26633e-05|  1.63317e-05|  0.00%|import torch
     2|         1|  8.10623e-06|  8.10623e-06|  0.00%|import torch.nn.functional as F
     3|         0|            0|            0|  0.00%|
     4|         1|  2.69413e-05|  2.69413e-05|  0.00%|from MODULES.namedtuple import BB
(call)|         1|  2.31266e-05|  2.31266e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
     5|         0|            0|            0|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         3|  6.60419e-05|   2.2014e-05|  0.00%|class Cropper(object):
(call)|         1|  6.00815e-05|  6.00815e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/cropper_uncropper.py:7 Cropper
     8|         0|            0|            0|  0.00%|    """ Use STN to crop out a patch of the original images according to z_where.
     9|         1|  4.52995e-06|  4.52995e-06|  0.00%|        It uses REFLECTION padding """
    10|         0|            0|            0|  0.00%|
    11|         1|  1.21593e-05|  1.21593e-05|  0.00%|    def __init__(self):
    12|         0|            0|            0|  0.00%|        super().__init__()
    13|         0|            0|            0|  0.00%|
    14|        25|  0.000179052|  7.16209e-06|  0.00%|    @staticmethod
    15|         1|  7.62939e-06|  7.62939e-06|  0.00%|    def crop(bounding_box: BB, big_stuff: torch.Tensor, width_small: int, height_small: int) -> torch.Tensor:
    16|         0|            0|            0|  0.00%|
    17|         0|            0|            0|  0.00%|        # Prepare the shapes
    18|        24|  0.000309467|  1.28945e-05|  0.00%|        independent_dim: list = list(big_stuff.shape[:-3])  # this extract n_boxes, batch
    19|        24|  0.000185728|  7.73867e-06|  0.00%|        large_dependent_dim: list = list(big_stuff.shape[-3:])  # ch, width, height
    20|        24|  0.000149012|  6.20882e-06|  0.00%|        ch, width_raw, height_raw = big_stuff.shape[-3:]
    21|        24|  0.000126123|  5.25514e-06|  0.00%|        small_dependent_dim: list = [ch, width_small, height_small]
    22|        24|  0.000155926|  6.49691e-06|  0.00%|        assert independent_dim == list(bounding_box.bx.shape)
    23|         0|            0|            0|  0.00%|
    24|         0|            0|            0|  0.00%|        # Compute the affine matrix
    25|        24|  0.000165939|  6.91414e-06|  0.00%|        affine: torch.Tensor = Cropper.compute_affine_cropper(bounding_box=bounding_box,
    26|        24|  0.000110149|  4.58956e-06|  0.00%|                                                              width_raw=width_raw,
    27|        24|  0.000896215|  3.73423e-05|  0.00%|                                                              height_raw=height_raw)
(call)|        24|    0.0129783|  0.000540763|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/cropper_uncropper.py:43 compute_affine_cropper
    28|         0|            0|            0|  0.00%|
    29|         0|            0|            0|  0.00%|        # The cropped and uncropped imgs have:
    30|         0|            0|            0|  0.00%|        # a. same independent dimension (boxes, batch)
    31|         0|            0|            0|  0.00%|        # b. same channels
    32|         0|            0|            0|  0.00%|        # c. different width and height
    33|         0|            0|            0|  0.00%|        #  Note that I replicate the uncropped image n_boxes times
    34|        24|    0.0392935|   0.00163723|  0.01%|        big_stuff = big_stuff.reshape([-1] + large_dependent_dim)
    35|        24|  0.000302553|  1.26064e-05|  0.00%|        cropped_images: torch.Tensor = torch.zeros(independent_dim + small_dependent_dim,
    36|        24|  0.000166893|  6.95388e-06|  0.00%|                                                   dtype=big_stuff.dtype,
    37|        24|   0.00193048|  8.04365e-05|  0.00%|                                                   device=big_stuff.device).view([-1] + small_dependent_dim)
    38|         0|            0|            0|  0.00%|
    39|        24|  0.000910521|  3.79384e-05|  0.00%|        grid = F.affine_grid(affine, list(cropped_images.shape), align_corners=True)
(call)|        24|    0.0301201|   0.00125501|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/functional.py:3235 affine_grid
    40|        24|  0.000654459|  2.72691e-05|  0.00%|        cropped_images = F.grid_sample(big_stuff, grid, mode='bilinear', padding_mode='reflection', align_corners=True)
(call)|        24|   0.00558877|  0.000232865|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/functional.py:3120 grid_sample
    41|        24|  0.000414133|  1.72555e-05|  0.00%|        return cropped_images.view(independent_dim + small_dependent_dim)
    42|         0|            0|            0|  0.00%|
    43|        25|  0.000135183|  5.40733e-06|  0.00%|    @staticmethod
    44|         1|  9.53674e-06|  9.53674e-06|  0.00%|    def compute_affine_cropper(bounding_box: BB, width_raw: int, height_raw: int) -> torch.Tensor:
    45|         0|            0|            0|  0.00%|        """ Source is UNCROPPED (large) image
    46|         0|            0|            0|  0.00%|            Target is CROPPED (small) image.
    47|         0|            0|            0|  0.00%|
    48|         0|            0|            0|  0.00%|            The equations are:
    49|         0|            0|            0|  0.00%|            | x_s |   | sx  0   kx | | x_t |   | sx  0  | | x_t |   | kx |
    50|         0|            0|            0|  0.00%|            |     | = |            | | y_t | = | 0   sy | | y_t | + | ky |
    51|         0|            0|            0|  0.00%|            | y_s |   | 0   sy  ky | | 1   |
    52|         0|            0|            0|  0.00%|            We can evaluate the expression above at:
    53|         0|            0|            0|  0.00%|            a. target (0,0) <==> source (-1+2*bx_dimfull/WIDTH,-1+2*by_dimfull/HEIGHT)
    54|         0|            0|            0|  0.00%|            b. target (1,1) <==> source (-1+2*(bx_dimfull+0.5*bw_dimfull)/WIDTH,-1+2*(by_dimfull+0.5*bh_dimfull)/HEIGHT)
    55|         0|            0|            0|  0.00%|
    56|         0|            0|            0|  0.00%|            This leads to:
    57|         0|            0|            0|  0.00%|            a. kx = -1+2*bx_dimfull/WIDTH
    58|         0|            0|            0|  0.00%|            b. ky = -1+2*by_dimfull/HEIGHT
    59|         0|            0|            0|  0.00%|            c. sx = bw_dimfull/WIDTH
    60|         0|            0|            0|  0.00%|            d. sy = bh_dimfull/HEIGHT
    61|         0|            0|            0|  0.00%|        """
    62|        24|   0.00321913|   0.00013413|  0.00%|        kx = (-1.0 + 2 * bounding_box.bx / width_raw).view(-1, 1)
    63|        24|    0.0027287|  0.000113696|  0.00%|        ky = (-1.0 + 2 * bounding_box.by / height_raw).view(-1, 1)
    64|        24|   0.00128913|  5.37137e-05|  0.00%|        sx = (bounding_box.bw / width_raw).view(-1, 1)
    65|        24|   0.00116801|  4.86672e-05|  0.00%|        sy = (bounding_box.bh / height_raw).view(-1, 1)
    66|        24|   0.00109339|  4.55578e-05|  0.00%|        zero = torch.zeros_like(kx)
    67|         0|            0|            0|  0.00%|
    68|        24|    0.0033505|  0.000139604|  0.00%|        return torch.cat((sy, zero, ky, zero, sx, kx), dim=-1).view(-1, 2, 3)
    69|         0|            0|            0|  0.00%|
    70|         0|            0|            0|  0.00%|
    71|         3|  5.10216e-05|  1.70072e-05|  0.00%|class Uncropper(object):
(call)|         1|  8.46386e-05|  8.46386e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/cropper_uncropper.py:71 Uncropper
    72|         1|  4.05312e-06|  4.05312e-06|  0.00%|    """ Use STN to uncrop the original images according to z_where. """
    73|         0|            0|            0|  0.00%|
    74|         1|  8.34465e-06|  8.34465e-06|  0.00%|    def __init__(self):
    75|         0|            0|            0|  0.00%|        super().__init__()
    76|         0|            0|            0|  0.00%|
    77|        25|   0.00020957|   8.3828e-06|  0.00%|    @staticmethod
    78|         1|  6.91414e-06|  6.91414e-06|  0.00%|    def uncrop(bounding_box: BB, small_stuff: torch.Tensor, width_big: int, height_big: int) -> torch.Tensor:
    79|         0|            0|            0|  0.00%|
    80|         0|            0|            0|  0.00%|        # Check and prepare the sizes
    81|        24|  0.000277519|  1.15633e-05|  0.00%|        ch: int = small_stuff.shape[-3]  # this is the channels
    82|        24|  0.000347614|  1.44839e-05|  0.00%|        independent_dim: list = list(small_stuff.shape[:-3])  # this includes: boxes, batch
    83|        24|   0.00019455|  8.10623e-06|  0.00%|        small_dependent_dim: list = list(small_stuff.shape[-3:])  # this includes: ch, small_width, small_height
    84|        24|  0.000145197|  6.04987e-06|  0.00%|        large_dependent_dim: list = [ch, width_big, height_big]  # these are the dependent dimensions
    85|        24|  0.000255585|  1.06494e-05|  0.00%|        assert independent_dim == list(bounding_box.bx.shape)
    86|         0|            0|            0|  0.00%|
    87|         0|            0|            0|  0.00%|        # Compute the affine matrix. Note that z_where has only independent dimensions
    88|        24|  0.000167847|  6.99361e-06|  0.00%|        affine_matrix: torch.Tensor = Uncropper.compute_affine_uncropper(bounding_box=bounding_box,
    89|        24|  0.000154018|  6.41743e-06|  0.00%|                                                                         width_raw=width_big,
    90|        24|   0.00121236|  5.05149e-05|  0.00%|                                                                         height_raw=height_big).view(independent_dim+[2, 3])
(call)|        24|      0.01753|  0.000730415|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/cropper_uncropper.py:104 compute_affine_uncropper
    91|         0|            0|            0|  0.00%|
    92|         0|            0|            0|  0.00%|        # The cropped and uncropped imgs have:
    93|         0|            0|            0|  0.00%|        # a. same independent dimension (enumeration, boxes, batch)
    94|         0|            0|            0|  0.00%|        # b. same channels
    95|         0|            0|            0|  0.00%|        # c. different width and height
    96|        24|  0.000234842|   9.7851e-06|  0.00%|        uncropped_stuff: torch.Tensor = torch.zeros(independent_dim + large_dependent_dim,
    97|        24|  0.000179291|  7.47045e-06|  0.00%|                                                    dtype=small_stuff.dtype,
    98|        24|   0.00126839|  5.28495e-05|  0.00%|                                                    device=small_stuff.device).view([-1] + large_dependent_dim)
    99|        24|   0.00123167|  5.13196e-05|  0.00%|        grid = F.affine_grid(affine_matrix.view(-1, 2, 3), list(uncropped_stuff.shape), align_corners=True)
(call)|        24|   0.00673294|  0.000280539|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/functional.py:3235 affine_grid
   100|        24|  0.000524521|   2.1855e-05|  0.00%|        uncropped_stuff = F.grid_sample(small_stuff.view([-1] + small_dependent_dim), grid,
   101|        24|  0.000685692|  2.85705e-05|  0.00%|                                        mode='bilinear', padding_mode='zeros', align_corners=True)
(call)|        24|   0.00447202|  0.000186334|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/functional.py:3120 grid_sample
   102|        24|  0.000458956|  1.91232e-05|  0.00%|        return uncropped_stuff.view(independent_dim + large_dependent_dim)
   103|         0|            0|            0|  0.00%|
   104|        25|  0.000201225|  8.04901e-06|  0.00%|    @staticmethod
   105|         1|  2.12193e-05|  2.12193e-05|  0.00%|    def compute_affine_uncropper(bounding_box: BB, width_raw: int, height_raw: int) -> torch.Tensor:
   106|         0|            0|            0|  0.00%|        """ Source is CROPPED (small) image
   107|         0|            0|            0|  0.00%|            Target is UNCROPPED (large) image.
   108|         0|            0|            0|  0.00%|
   109|         0|            0|            0|  0.00%|            The equations are:
   110|         0|            0|            0|  0.00%|            | x_s |   | sx  0   kx | | x_t |   | sx  0  | | x_t |   | kx |
   111|         0|            0|            0|  0.00%|            |     | = |            | | y_t | = | 0   sy | | y_t | + | ky |
   112|         0|            0|            0|  0.00%|            | y_s |   | 0   sy  ky | | 1   |
   113|         0|            0|            0|  0.00%|            We can evaluate the expression above at:
   114|         0|            0|            0|  0.00%|            a. source (0,0) <==> target (-1+2*bx_dimfull/WIDTH,-1+2*by_dimfull/HEIGHT)
   115|         0|            0|            0|  0.00%|            b. source (1,1) <==> target (-1+2*(bx_dimfull+0.5*bw_dimfull)/WIDTH,-1+2*(by_dimfull+0.5*bh_dimfull)/HEIGHT)
   116|         0|            0|            0|  0.00%|
   117|         0|            0|            0|  0.00%|            This leads to:
   118|         0|            0|            0|  0.00%|            a. kx = (WIDTH-2*bx_dimfull)/bw_dimfull
   119|         0|            0|            0|  0.00%|            b. ky = (WIDTH-2*bx_dimfull)/bh_dimfull
   120|         0|            0|            0|  0.00%|            c. sx = WIDTH/bw_dimfull
   121|         0|            0|            0|  0.00%|            d. sy = HEIGHT/bh_dimfull
   122|         0|            0|            0|  0.00%|        """
   123|        24|    0.0028522|  0.000118842|  0.00%|        width_raw_tensor = width_raw * torch.ones_like(bounding_box.bx)
   124|        24|   0.00160861|  6.70254e-05|  0.00%|        height_raw_tensor = height_raw * torch.ones_like(bounding_box.bx)
   125|        24|   0.00333524|  0.000138968|  0.00%|        kx = ((width_raw_tensor - 2.0 * bounding_box.bx) / bounding_box.bw).view(-1, 1)
   126|        24|   0.00257778|  0.000107408|  0.00%|        ky = ((height_raw_tensor - 2.0 * bounding_box.by) / bounding_box.bh).view(-1, 1)
   127|        24|   0.00123858|  5.16077e-05|  0.00%|        sx = (width_raw_tensor / bounding_box.bw).view(-1, 1)
   128|        24|   0.00117302|  4.88758e-05|  0.00%|        sy = (height_raw_tensor / bounding_box.bh).view(-1, 1)
   129|        24|    0.0010438|  4.34915e-05|  0.00%|        zero = torch.zeros_like(kx)
   130|         0|            0|            0|  0.00%|
   131|        24|   0.00352263|  0.000146776|  0.00%|        return torch.cat((sy, zero, ky, zero, sx, kx), dim=-1).view(-1, 2, 3)
File: <string>_27
File duration: 0.0759695s (0.02%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|     19814|    0.0759695|  3.83413e-06|  0.02%|
File: <__array_function__ internals>_61
File duration: 0.0645542s (0.01%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|      2150|   0.00684047|  3.18161e-06|  0.00%|
(call)|         1|  1.12057e-05|  1.12057e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000127792|  0.000127792|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|      2148|    0.0247202|  1.15085e-05|  0.01%|
(call)|      2148|    0.0137765|  6.41366e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/fromnumeric.py:3164 _around_dispatcher
     5|      2148|   0.00784111|  3.65042e-06|  0.00%|
     6|      2148|    0.0251524|  1.17097e-05|  0.01%|
(call)|      2148|     0.195407|  9.09716e-05|  0.04%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/fromnumeric.py:3628 round_
File: <__array_function__ internals>_57
File duration: 0.0605791s (0.01%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|      2150|   0.00557804|  2.59444e-06|  0.00%|
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.15527e-05|  9.15527e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|      2148|    0.0230558|  1.07336e-05|  0.00%|
(call)|      2148|     0.012542|  5.83892e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/fromnumeric.py:3164 _around_dispatcher
     5|      2148|   0.00780487|  3.63355e-06|  0.00%|
     6|      2148|    0.0241404|  1.12385e-05|  0.01%|
(call)|      2148|    0.0918255|  4.27493e-05|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/fromnumeric.py:3168 around
File: <string>_339
File duration: 0.0546134s (0.01%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|      8690|    0.0546134|  6.28462e-06|  0.01%|
File: <__array_function__ internals>_47
File duration: 0.0543578s (0.01%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|      1768|   0.00569367|   3.2204e-06|  0.00%|
(call)|         1|  1.04904e-05|  1.04904e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000104666|  0.000104666|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|      1766|     0.020689|  1.17152e-05|  0.00%|
(call)|      1766|    0.0118248|  6.69584e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/fromnumeric.py:2333 _all_dispatcher
     5|      1766|   0.00649071|  3.67537e-06|  0.00%|
     6|      1766|    0.0214844|  1.21656e-05|  0.00%|
(call)|      1766|     0.120231|  6.80808e-05|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/fromnumeric.py:2337 all
File: /home/jupyter/REPOS/spacetx-research/src/MODULES/encoders_decoders.py
File duration: 0.0472333s (0.01%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  4.24385e-05|  2.12193e-05|  0.00%|import torch
     2|         1|  8.82149e-06|  8.82149e-06|  0.00%|import torch.nn as nn
     3|         1|  1.28746e-05|  1.28746e-05|  0.00%|import torch.nn.functional as F
     4|         1|  8.17776e-05|  8.17776e-05|  0.00%|from typing import Optional
(call)|         1|  2.38419e-05|  2.38419e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
     5|         0|            0|            0|  0.00%|
     6|         1|  3.38554e-05|  3.38554e-05|  0.00%|from MODULES.namedtuple import ZZ
(call)|         1|  1.69277e-05|  1.69277e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
     7|         0|            0|            0|  0.00%|
     8|         1|  1.50204e-05|  1.50204e-05|  0.00%|EPS_STD = 1E-3  # standard_deviation = F.softplus(x) + EPS_STD >= EPS_STD
     9|         0|            0|            0|  0.00%|
    10|         0|            0|            0|  0.00%|
    11|         3|  8.27312e-05|  2.75771e-05|  0.00%|class MLP_1by1(nn.Module):
(call)|         1|   3.3617e-05|   3.3617e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/encoders_decoders.py:11 MLP_1by1
    12|         1|  4.05312e-06|  4.05312e-06|  0.00%|    """ Use 1x1 convolution, if ch_hidden <= 0 there is NO hidden layer """
    13|         5|  2.93255e-05|   5.8651e-06|  0.00%|    def __init__(self, ch_in: int, ch_out: int, ch_hidden: int):
    14|         4|  5.93662e-05|  1.48416e-05|  0.00%|        super().__init__()
(call)|         4|    0.0031786|  0.000794649|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:71 __init__
    15|         4|  2.38419e-05|  5.96046e-06|  0.00%|        if ch_hidden <= 0:
    16|         2|  5.76973e-05|  2.88486e-05|  0.00%|            self.mlp_1by1 = nn.Conv2d(ch_in, ch_out, kernel_size=1, stride=1, padding=0, bias=True)
(call)|         2|    0.0049665|   0.00248325|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/conv.py:329 __init__
(call)|         2|  0.000172138|  8.60691e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    17|         0|            0|            0|  0.00%|        else:
    18|         2|  7.15256e-06|  3.57628e-06|  0.00%|            self.mlp_1by1 = nn.Sequential(
    19|         2|  3.60012e-05|  1.80006e-05|  0.00%|                nn.Conv2d(ch_in, ch_hidden, kernel_size=1, stride=1, padding=0, bias=True),
(call)|         2|   0.00513124|   0.00256562|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/conv.py:329 __init__
    20|         2|   3.0756e-05|   1.5378e-05|  0.00%|                nn.ReLU(inplace=True),
(call)|         2|   0.00119233|  0.000596166|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/activation.py:89 __init__
    21|         2|  7.24792e-05|  3.62396e-05|  0.00%|                nn.Conv2d(ch_hidden, ch_out, kernel_size=1, stride=1, padding=0, bias=True)
(call)|         2|   0.00494075|   0.00247037|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/conv.py:329 __init__
(call)|         2|   0.00170684|  0.000853419|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/container.py:47 __init__
(call)|         2|  0.000147343|  7.36713e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    22|         0|            0|            0|  0.00%|            )
    23|         0|            0|            0|  0.00%|
    24|        97|  0.000262022|  2.70126e-06|  0.00%|    def forward(self, x: torch.Tensor) -> torch.Tensor:
    25|        96|   0.00225282|  2.34668e-05|  0.00%|        return self.mlp_1by1(x)
(call)|        96|   0.00375128|  3.90758e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:580 __getattr__
(call)|        96|    0.0546768|   0.00056955|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:540 __call__
    26|         0|            0|            0|  0.00%|
    27|         0|            0|            0|  0.00%|
    28|         3|  0.000294924|  9.83079e-05|  0.00%|class PredictBackground(nn.Module):
(call)|         1|  0.000107765|  0.000107765|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/encoders_decoders.py:28 PredictBackground
    29|         1|  2.24113e-05|  2.24113e-05|  0.00%|    """ Predict the bg_mu in (0,1) by applying sigmoid"""
    30|         2|   2.6226e-05|   1.3113e-05|  0.00%|    def __init__(self, ch_in: int, ch_out: int, ch_hidden: Optional[int] = None):
(call)|         1|  4.07696e-05|  4.07696e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
    31|         1|   1.4782e-05|   1.4782e-05|  0.00%|        super().__init__()
(call)|         1|  0.000570536|  0.000570536|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:71 __init__
    32|         1|  1.66893e-05|  1.66893e-05|  0.00%|        self.ch_out = ch_out
(call)|         1|  4.29153e-05|  4.29153e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    33|         1|  5.24521e-06|  5.24521e-06|  0.00%|        ch_hidden = (ch_in + ch_out) // 2 if ch_hidden is None else ch_hidden
    34|         1|  2.71797e-05|  2.71797e-05|  0.00%|        self.predict = MLP_1by1(ch_in=ch_in, ch_out=2*ch_out, ch_hidden=ch_hidden)
(call)|         1|   0.00318193|   0.00318193|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/encoders_decoders.py:13 __init__
(call)|         1|  8.41618e-05|  8.41618e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    35|         0|            0|            0|  0.00%|
    36|        25|  0.000132561|  5.30243e-06|  0.00%|    def forward(self, x: torch.Tensor) -> ZZ:
    37|        24|   0.00104475|  4.35313e-05|  0.00%|        mu, std = torch.split(self.predict(x), self.ch_out, dim=-3)
(call)|        24|    0.0010488|  4.37001e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:580 __getattr__
(call)|        24|     0.011378|  0.000474085|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:540 __call__
(call)|        24|    0.0665858|   0.00277441|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torch/functional.py:65 split
    38|        24|    0.0222225|  0.000925938|  0.00%|        return ZZ(mu=mu, std=F.softplus(std) + EPS_STD)
(call)|        24|  0.000465631|  1.94013e-05|  0.00%|# <string>_116:1 __new__
    39|         0|            0|            0|  0.00%|
    40|         0|            0|            0|  0.00%|
    41|         3|  8.58307e-05|  2.86102e-05|  0.00%|class Encoder1by1(nn.Module):
(call)|         1|  7.29561e-05|  7.29561e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/encoders_decoders.py:41 Encoder1by1
    42|         3|   2.5034e-05|  8.34465e-06|  0.00%|    def __init__(self, ch_in: int, dim_z: int, ch_hidden: Optional[int] = None):
(call)|         1|   3.0756e-05|   3.0756e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
    43|         2|  2.90871e-05|  1.45435e-05|  0.00%|        super().__init__()
(call)|         2|   0.00103498|  0.000517488|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:71 __init__
    44|         2|  2.71797e-05|  1.35899e-05|  0.00%|        self.dim_z = dim_z
(call)|         2|  0.000110865|  5.54323e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    45|         2|  9.77516e-06|  4.88758e-06|  0.00%|        ch_hidden = (ch_in + self.dim_z) // 2 if ch_hidden is None else ch_hidden
    46|         2|   4.8399e-05|  2.41995e-05|  0.00%|        self.predict = MLP_1by1(ch_in=ch_in, ch_out=2*self.dim_z, ch_hidden=ch_hidden)
(call)|         2|    0.0143347|   0.00716734|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/encoders_decoders.py:13 __init__
(call)|         2|  0.000157833|  7.89165e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    47|         0|            0|            0|  0.00%|
    48|        49|  0.000200272|  4.08718e-06|  0.00%|    def forward(self, x: torch.Tensor) -> ZZ:
    49|        48|   0.00175977|  3.66618e-05|  0.00%|        mu, std = torch.split(self.predict(x), self.dim_z, dim=-3)
(call)|        48|   0.00212717|  4.43161e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:580 __getattr__
(call)|        48|    0.0447063|  0.000931382|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:540 __call__
(call)|        48|   0.00359201|  7.48336e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/functional.py:65 split
    50|         0|            0|            0|  0.00%|        # Apply non-linearity and return
    51|        48|   0.00524092|  0.000109186|  0.00%|        return ZZ(mu=mu, std=F.softplus(std) + EPS_STD)
(call)|        48|  0.000709295|   1.4777e-05|  0.00%|# <string>_116:1 __new__
    52|         0|            0|            0|  0.00%|
    53|         0|            0|            0|  0.00%|
    54|         3|  6.55651e-05|   2.1855e-05|  0.00%|class Decoder1by1Linear(nn.Module):
(call)|         1|  2.71797e-05|  2.71797e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/encoders_decoders.py:54 Decoder1by1Linear
    55|         3|  1.52588e-05|  5.08626e-06|  0.00%|    def __init__(self, dim_z: int, ch_out: int, groups: int):
    56|         2|  2.76566e-05|  1.38283e-05|  0.00%|        super().__init__()
(call)|         2|   0.00105381|  0.000526905|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:71 __init__
    57|         0|            0|            0|  0.00%|        # if groups=1 all inputs convolved to produce all outputs
    58|         0|            0|            0|  0.00%|        # if groups=in_channels each channel is convolved with its set of filters
    59|         2|  1.00136e-05|  5.00679e-06|  0.00%|        self.predict = nn.Conv2d(dim_z,
    60|         2|  7.62939e-06|   3.8147e-06|  0.00%|                                 ch_out,
    61|         2|  7.86781e-06|  3.93391e-06|  0.00%|                                 kernel_size=1,
    62|         2|  7.39098e-06|  3.69549e-06|  0.00%|                                 stride=1,
    63|         2|  7.15256e-06|  3.57628e-06|  0.00%|                                 padding=0,
    64|         2|  7.15256e-06|  3.57628e-06|  0.00%|                                 bias=True,
    65|         2|  5.05447e-05|  2.52724e-05|  0.00%|                                 groups=groups)
(call)|         2|   0.00496197|   0.00248098|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/conv.py:329 __init__
(call)|         2|  0.000160456|  8.02279e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    66|         0|            0|            0|  0.00%|
    67|        49|  0.000191689|  3.91201e-06|  0.00%|    def forward(self, x: torch.Tensor) -> torch.Tensor:
    68|        48|   0.00143957|  2.99911e-05|  0.00%|        return self.predict(x)
(call)|        48|   0.00196147|   4.0864e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:580 __getattr__
(call)|        48|     0.109474|   0.00228071|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:540 __call__
    69|         0|            0|            0|  0.00%|
    70|         0|            0|            0|  0.00%|
    71|         3|  6.55651e-05|   2.1855e-05|  0.00%|class DecoderConv(nn.Module):
(call)|         1|  3.83854e-05|  3.83854e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/encoders_decoders.py:71 DecoderConv
    72|         0|            0|            0|  0.00%|    """ Decode z -> x
    73|         0|            0|            0|  0.00%|        INPUT:  z of shape: ..., dim_z
    74|         0|            0|            0|  0.00%|        OUTPUT: image of shape: ..., ch_out, width, height
    75|         0|            0|            0|  0.00%|        where ... are all the independent dimensions, i.e. box, batch_size, enumeration_dim etc.
    76|         1|  4.05312e-06|  4.05312e-06|  0.00%|    """
    77|         0|            0|            0|  0.00%|
    78|         2|   1.4782e-05|  7.39098e-06|  0.00%|    def __init__(self, size: int, dim_z: int, ch_out: int):
    79|         1|   2.3365e-05|   2.3365e-05|  0.00%|        super().__init__()
(call)|         1|  0.000575781|  0.000575781|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:71 __init__
    80|         1|  1.62125e-05|  1.62125e-05|  0.00%|        self.width = size
(call)|         1|  4.52995e-05|  4.52995e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    81|         1|  5.00679e-06|  5.00679e-06|  0.00%|        assert self.width == 28
    82|         1|  1.45435e-05|  1.45435e-05|  0.00%|        self.dim_z: int = dim_z
(call)|         1|  4.41074e-05|  4.41074e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    83|         1|  3.26633e-05|  3.26633e-05|  0.00%|        self.ch_out: int = ch_out
(call)|         1|  4.26769e-05|  4.26769e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    84|         1|  3.83854e-05|  3.83854e-05|  0.00%|        self.upsample = nn.Linear(self.dim_z, 64 * 7 * 7)
(call)|         1|   0.00185966|   0.00185966|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/linear.py:68 __init__
(call)|         1|  7.77245e-05|  7.77245e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    85|         1|  5.72205e-06|  5.72205e-06|  0.00%|        self.decoder = nn.Sequential(
    86|         1|  1.88351e-05|  1.88351e-05|  0.00%|            torch.nn.ConvTranspose2d(64, 32, 4, 2, 1),  # B,  64,  14,  14
(call)|         1|    0.0027864|    0.0027864|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/conv.py:769 __init__
    87|         1|  1.83582e-05|  1.83582e-05|  0.00%|            torch.nn.ReLU(inplace=True),
(call)|         1|  0.000596046|  0.000596046|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/activation.py:89 __init__
    88|         1|  1.90735e-05|  1.90735e-05|  0.00%|            torch.nn.ConvTranspose2d(32, 32, 4, 2, 1, 1),  # B,  32, 28, 28
(call)|         1|   0.00272083|   0.00272083|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/conv.py:769 __init__
    89|         1|  1.74046e-05|  1.74046e-05|  0.00%|            torch.nn.ReLU(inplace=True),
(call)|         1|  0.000595093|  0.000595093|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/activation.py:89 __init__
    90|         1|  4.52995e-05|  4.52995e-05|  0.00%|            torch.nn.ConvTranspose2d(32, self.ch_out, 4, 1, 2)  # B, ch, 28, 28
(call)|         1|   0.00253558|   0.00253558|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/conv.py:769 __init__
(call)|         1|   0.00099349|   0.00099349|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/container.py:47 __init__
(call)|         1|  7.62939e-05|  7.62939e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    91|         0|            0|            0|  0.00%|        )
    92|         0|            0|            0|  0.00%|
    93|        25|   0.00017333|  6.93321e-06|  0.00%|    def forward(self, z: torch.Tensor) -> torch.Tensor:
    94|        24|  0.000259399|  1.08083e-05|  0.00%|        independent_dim = list(z.shape[:-1])
    95|        24|   0.00137353|  5.72304e-05|  0.00%|        x1 = self.upsample(z.view(-1, self.dim_z)).view(-1, 64, 7, 7)
(call)|        24|  0.000977039|    4.071e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:580 __getattr__
(call)|        24|   0.00884652|  0.000368605|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:540 __call__
    96|        24|   0.00135112|  5.62966e-05|  0.00%|        return self.decoder(x1).view(independent_dim + [self.ch_out, self.width, self.width])
(call)|        24|    0.0010097|  4.20709e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:580 __getattr__
(call)|        24|      6.97581|     0.290659|  1.47%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:540 __call__
    97|         0|            0|            0|  0.00%|
    98|         0|            0|            0|  0.00%|
    99|         3|  6.31809e-05|  2.10603e-05|  0.00%|class EncoderConv(nn.Module):
(call)|         1|  3.62396e-05|  3.62396e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/encoders_decoders.py:99 EncoderConv
   100|         0|            0|            0|  0.00%|    """ Encode x -> z_mu, z_std
   101|         0|            0|            0|  0.00%|        INPUT  x of shape: ..., ch_raw_image, width, height
   102|         0|            0|            0|  0.00%|        OUTPUT z_mu, z_std of shape: ..., latent_dim
   103|         0|            0|            0|  0.00%|        where ... are all the independent dimensions, i.e. box, batch_size, enumeration_dim etc.
   104|         1|  4.05312e-06|  4.05312e-06|  0.00%|    """
   105|         0|            0|            0|  0.00%|
   106|         2|  1.07288e-05|  5.36442e-06|  0.00%|    def __init__(self, size: int, ch_in: int, dim_z: int):
   107|         1|  1.54972e-05|  1.54972e-05|  0.00%|        super().__init__()
(call)|         1|  0.000550508|  0.000550508|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:71 __init__
   108|         1|  1.52588e-05|  1.52588e-05|  0.00%|        self.ch_in: int = ch_in
(call)|         1|  4.62532e-05|  4.62532e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
   109|         1|  1.50204e-05|  1.50204e-05|  0.00%|        self.width: int = size
(call)|         1|  4.33922e-05|  4.33922e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
   110|         1|  5.00679e-06|  5.00679e-06|  0.00%|        assert self.width == 28
   111|         1|  2.12193e-05|  2.12193e-05|  0.00%|        self.dim_z = dim_z
(call)|         1|   4.3869e-05|   4.3869e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
   112|         0|            0|            0|  0.00%|
   113|         0|            0|            0|  0.00%|        #TODO FROM HERE DO 56x56 ENCODER
   114|         1|  5.24521e-06|  5.24521e-06|  0.00%|        self.conv = nn.Sequential(
   115|         1|  1.88351e-05|  1.88351e-05|  0.00%|            torch.nn.Conv2d(self.ch_in, 32, 4, 1, 2),  # B, 32, 28, 28
(call)|         1|    0.0026679|    0.0026679|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/conv.py:329 __init__
   116|         1|  1.81198e-05|  1.81198e-05|  0.00%|            torch.nn.ReLU(inplace=True),
(call)|         1|  0.000643969|  0.000643969|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/activation.py:89 __init__
   117|         1|  2.00272e-05|  2.00272e-05|  0.00%|            torch.nn.Conv2d(32, 32, 4, 2, 1),  # B, 32, 14, 14
(call)|         1|   0.00259662|   0.00259662|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/conv.py:329 __init__
   118|         1|   1.7643e-05|   1.7643e-05|  0.00%|            torch.nn.ReLU(inplace=True),
(call)|         1|  0.000593901|  0.000593901|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/activation.py:89 __init__
   119|         1|   4.1008e-05|   4.1008e-05|  0.00%|            torch.nn.Conv2d(32, 64, 4, 2, 1),  # B, 64,  7, 7
(call)|         1|   0.00279641|   0.00279641|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/conv.py:329 __init__
(call)|         1|  0.000989199|  0.000989199|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/container.py:47 __init__
(call)|         1|  7.53403e-05|  7.53403e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
   120|         0|            0|            0|  0.00%|        )
   121|         1|  3.21865e-05|  3.21865e-05|  0.00%|        self.compute_mu = nn.Linear(64 * 7 * 7, self.dim_z)
(call)|         1|   0.00172901|   0.00172901|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/linear.py:68 __init__
(call)|         1|  7.43866e-05|  7.43866e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
   122|         1|  3.52859e-05|  3.52859e-05|  0.00%|        self.compute_std = nn.Linear(64 * 7 * 7, self.dim_z)
(call)|         1|   0.00192022|   0.00192022|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/linear.py:68 __init__
(call)|         1|  0.000115871|  0.000115871|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
   123|         0|            0|            0|  0.00%|
   124|        25|  0.000169277|  6.77109e-06|  0.00%|    def forward(self, x: torch.Tensor) -> ZZ:  # this is right
   125|         0|            0|            0|  0.00%|
   126|        24|  0.000282764|  1.17819e-05|  0.00%|        independent_dim = list(x.shape[:-3])  # this might includes: enumeration, n_boxes, batch_size
   127|        24|  0.000150919|  6.28829e-06|  0.00%|        dependent_dim = list(x.shape[-3:])  # this includes: ch, width, height
   128|         0|            0|            0|  0.00%|        # assert dependent_dim == [self.ch_raw_image, self.width, self.width]
   129|        24|  0.000495911|  2.06629e-05|  0.00%|        x1 = x.view([-1] + dependent_dim)  # flatten the independent dimensions
   130|        24|   0.00114369|  4.76539e-05|  0.00%|        x2 = self.conv(x1).view(-1, 64 * 7 * 7)  # flatten the dependent dimension
(call)|        24|  0.000981331|  4.08888e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:580 __getattr__
(call)|        24|    0.0400784|   0.00166993|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:540 __call__
   131|        24|   0.00109434|  4.55976e-05|  0.00%|        mu = self.compute_mu(x2).view(independent_dim + [self.dim_z])
(call)|        24|   0.00108027|  4.50114e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:580 __getattr__
(call)|        24|    0.0099175|  0.000413229|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:540 __call__
   132|        24|    0.0020957|  8.73208e-05|  0.00%|        std = F.softplus(self.compute_std(x2)).view(independent_dim + [self.dim_z])
(call)|        24|   0.00103569|  4.31538e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:580 __getattr__
(call)|        24|   0.00788903|   0.00032871|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:540 __call__
   133|        24|    0.0015924|  6.63499e-05|  0.00%|        return ZZ(mu=mu, std=std + EPS_STD)
(call)|        24|  0.000400543|  1.66893e-05|  0.00%|# <string>_116:1 __new__
   134|         0|            0|            0|  0.00%|
   135|         0|            0|            0|  0.00%|
   136|         3|  8.05855e-05|  2.68618e-05|  0.00%|class DecoderConvLeaky(nn.Module):
(call)|         1|  3.93391e-05|  3.93391e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/encoders_decoders.py:136 DecoderConvLeaky
   137|         0|            0|            0|  0.00%|    """ Decode z -> x
   138|         0|            0|            0|  0.00%|        INPUT:  z of shape: ..., dim_z
   139|         0|            0|            0|  0.00%|        OUTPUT: image of shape: ..., ch_out, width, height
   140|         0|            0|            0|  0.00%|        where ... are all the independent dimensions, i.e. box, batch_size, enumeration_dim etc.
   141|         1|  4.05312e-06|  4.05312e-06|  0.00%|    """
   142|         1|  9.53674e-06|  9.53674e-06|  0.00%|    def __init__(self, size: int, dim_z: int, ch_out: int):
   143|         0|            0|            0|  0.00%|        super().__init__()
   144|         0|            0|            0|  0.00%|        self.width = size
   145|         0|            0|            0|  0.00%|        self.dim_z: int = dim_z
   146|         0|            0|            0|  0.00%|        self.ch_out: int = ch_out
   147|         0|            0|            0|  0.00%|        assert self.width == 64
   148|         0|            0|            0|  0.00%|
   149|         0|            0|            0|  0.00%|        # Preparation
   150|         0|            0|            0|  0.00%|        modules = []
   151|         0|            0|            0|  0.00%|        hidden_dims = [32, 64, 128, 256, 512]
   152|         0|            0|            0|  0.00%|
   153|         0|            0|            0|  0.00%|        self.decoder_input = nn.Linear(dim_z, hidden_dims[-1] * 4)
   154|         0|            0|            0|  0.00%|
   155|         0|            0|            0|  0.00%|        hidden_dims.reverse()
   156|         0|            0|            0|  0.00%|
   157|         0|            0|            0|  0.00%|        for i in range(len(hidden_dims) - 1):
   158|         0|            0|            0|  0.00%|            modules.append(
   159|         0|            0|            0|  0.00%|                nn.Sequential(
   160|         0|            0|            0|  0.00%|                    nn.ConvTranspose2d(hidden_dims[i],
   161|         0|            0|            0|  0.00%|                                       hidden_dims[i + 1],
   162|         0|            0|            0|  0.00%|                                       kernel_size=3,
   163|         0|            0|            0|  0.00%|                                       stride=2,
   164|         0|            0|            0|  0.00%|                                       padding=1,
   165|         0|            0|            0|  0.00%|                                       output_padding=1),
   166|         0|            0|            0|  0.00%|                    nn.BatchNorm2d(hidden_dims[i + 1]),
   167|         0|            0|            0|  0.00%|                    nn.LeakyReLU(inplace=True))
   168|         0|            0|            0|  0.00%|            )
   169|         0|            0|            0|  0.00%|        self.decoder = nn.Sequential(*modules)
   170|         0|            0|            0|  0.00%|        self.final_layer = nn.Sequential(
   171|         0|            0|            0|  0.00%|                            nn.ConvTranspose2d(hidden_dims[-1],
   172|         0|            0|            0|  0.00%|                                               hidden_dims[-1],
   173|         0|            0|            0|  0.00%|                                               kernel_size=3,
   174|         0|            0|            0|  0.00%|                                               stride=2,
   175|         0|            0|            0|  0.00%|                                               padding=1,
   176|         0|            0|            0|  0.00%|                                               output_padding=1),
   177|         0|            0|            0|  0.00%|                            nn.BatchNorm2d(hidden_dims[-1]),
   178|         0|            0|            0|  0.00%|                            nn.LeakyReLU(inplace=True),
   179|         0|            0|            0|  0.00%|                            nn.Conv2d(hidden_dims[-1], out_channels=ch_out, kernel_size=3, padding=1))
   180|         0|            0|            0|  0.00%|
   181|         1|  6.67572e-06|  6.67572e-06|  0.00%|    def forward(self, z: torch.Tensor) -> torch.Tensor:
   182|         0|            0|            0|  0.00%|        independent_dim = list(z.shape[:-1])
   183|         0|            0|            0|  0.00%|        x1 = self.decoder_input(z.view(-1, self.dim_z)).view(-1, 512, 2, 2)
   184|         0|            0|            0|  0.00%|        x2 = self.decoder(x1)
   185|         0|            0|            0|  0.00%|        return self.final_layer(x2).view(independent_dim + [self.ch_out, self.width, self.width])
   186|         0|            0|            0|  0.00%|
   187|         0|            0|            0|  0.00%|
   188|         3|   7.1764e-05|  2.39213e-05|  0.00%|class EncoderConvLeaky(nn.Module):
(call)|         1|  3.83854e-05|  3.83854e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/encoders_decoders.py:188 EncoderConvLeaky
   189|         0|            0|            0|  0.00%|    """ Encode x -> z_mu, z_std
   190|         0|            0|            0|  0.00%|        INPUT  x of shape: ..., ch_raw_image, width, height
   191|         0|            0|            0|  0.00%|        OUTPUT z_mu, z_std of shape: ..., latent_dim
   192|         0|            0|            0|  0.00%|        where ... are all the independent dimensions, i.e. box, batch_size, enumeration_dim etc.
   193|         1|  4.05312e-06|  4.05312e-06|  0.00%|    """
   194|         0|            0|            0|  0.00%|
   195|         1|   6.4373e-06|   6.4373e-06|  0.00%|    def __init__(self, size: int, ch_in: int, dim_z: int):
   196|         0|            0|            0|  0.00%|        super().__init__()
   197|         0|            0|            0|  0.00%|        self.ch_in: int = ch_in
   198|         0|            0|            0|  0.00%|        self.width: int = size
   199|         0|            0|            0|  0.00%|        self.dim_z = dim_z
   200|         0|            0|            0|  0.00%|        assert self.width == 64
   201|         0|            0|            0|  0.00%|
   202|         0|            0|            0|  0.00%|        # Preparation
   203|         0|            0|            0|  0.00%|        modules = []
   204|         0|            0|            0|  0.00%|        hidden_dims = [32, 64, 128, 256, 512]
   205|         0|            0|            0|  0.00%|        in_channels = self.ch_in
   206|         0|            0|            0|  0.00%|
   207|         0|            0|            0|  0.00%|        # Build Encoder
   208|         0|            0|            0|  0.00%|        for h_dim in hidden_dims:
   209|         0|            0|            0|  0.00%|            modules.append(
   210|         0|            0|            0|  0.00%|                nn.Sequential(
   211|         0|            0|            0|  0.00%|                    nn.Conv2d(in_channels, out_channels=h_dim, kernel_size=3, stride=2, padding=1),
   212|         0|            0|            0|  0.00%|                    nn.BatchNorm2d(h_dim),
   213|         0|            0|            0|  0.00%|                    nn.LeakyReLU(inplace=True))
   214|         0|            0|            0|  0.00%|            )
   215|         0|            0|            0|  0.00%|            in_channels = h_dim
   216|         0|            0|            0|  0.00%|
   217|         0|            0|            0|  0.00%|        self.conv = nn.Sequential(*modules)
   218|         0|            0|            0|  0.00%|        x = torch.zeros(1, self.ch_in, self.width, self.width)
   219|         0|            0|            0|  0.00%|        ch_flatten = self.conv(x).flatten(start_dim=1).shape[-1]
   220|         0|            0|            0|  0.00%|        self.compute_mu = nn.Linear(ch_flatten, self.dim_z)
   221|         0|            0|            0|  0.00%|        self.compute_std = nn.Linear(ch_flatten, self.dim_z)
   222|         0|            0|            0|  0.00%|
   223|         1|  6.19888e-06|  6.19888e-06|  0.00%|    def forward(self, x: torch.Tensor) -> ZZ:  # this is right
   224|         0|            0|            0|  0.00%|
   225|         0|            0|            0|  0.00%|        independent_dim = list(x.shape[:-3])  # this might includes: enumeration, n_boxes, batch_size
   226|         0|            0|            0|  0.00%|        dependent_dim = list(x.shape[-3:])  # this includes: ch, width, height
   227|         0|            0|            0|  0.00%|        # assert dependent_dim == [self.ch_raw_image, self.width, self.width]
   228|         0|            0|            0|  0.00%|        x1 = x.view([-1] + dependent_dim)  # flatten the independent dimensions
   229|         0|            0|            0|  0.00%|        x2 = self.conv(x1).flatten(start_dim=1)  # flatten the dependent dimension
   230|         0|            0|            0|  0.00%|        mu = self.compute_mu(x2).view(independent_dim + [self.dim_z])
   231|         0|            0|            0|  0.00%|        std = F.softplus(self.compute_std(x2)).view(independent_dim + [self.dim_z])
   232|         0|            0|            0|  0.00%|        return ZZ(mu=mu, std=std + EPS_STD)
File: <__array_function__ internals>_55
File duration: 0.0466092s (0.01%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|      1642|   0.00455976|  2.77695e-06|  0.00%|
(call)|         1|  1.09673e-05|  1.09673e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.08375e-05|  9.08375e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|      1640|    0.0183074|  1.11631e-05|  0.00%|
(call)|      1640|    0.0101271|  6.17504e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/fromnumeric.py:3071 _ndim_dispatcher
     5|      1640|   0.00571442|   3.4844e-06|  0.00%|
     6|      1640|    0.0180275|  1.09924e-05|  0.00%|
(call)|      1640|      0.05477|  3.33963e-05|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/fromnumeric.py:3075 ndim
File: <__array_function__ internals>_44
File duration: 0.0270243s (0.01%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|       807|   0.00281167|   3.4841e-06|  0.00%|
(call)|         1|  1.12057e-05|  1.12057e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.74996e-05|  8.74996e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|       805|    0.0106881|  1.32771e-05|  0.00%|
(call)|       805|   0.00617146|  7.66642e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/fromnumeric.py:2029 _clip_dispatcher
     5|       805|   0.00314212|  3.90325e-06|  0.00%|
     6|       805|    0.0103824|  1.28974e-05|  0.00%|
(call)|       805|     0.400341|  0.000497318|  0.08%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/fromnumeric.py:2033 clip
File: <__array_function__ internals>_41
File duration: 0.0256078s (0.01%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|       794|   0.00303078|   3.8171e-06|  0.00%|
(call)|         1|  1.12057e-05|  1.12057e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.05991e-05|  9.05991e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|       792|    0.0101173|  1.27744e-05|  0.00%|
(call)|       792|   0.00529575|  6.68656e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/fromnumeric.py:1812 _nonzero_dispatcher
     5|       792|   0.00304151|  3.84029e-06|  0.00%|
     6|       792|   0.00941825|  1.18917e-05|  0.00%|
(call)|       792|    0.0278747|  3.51953e-05|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/fromnumeric.py:1816 nonzero
File: <__array_function__ internals>_49
File duration: 0.0233393s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|       666|   0.00231123|  3.47031e-06|  0.00%|
(call)|         1|  1.12057e-05|  1.12057e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000104189|  0.000104189|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|       664|   0.00884581|   1.3322e-05|  0.00%|
(call)|       664|   0.00505877|  7.61862e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/fromnumeric.py:2486 _ptp_dispatcher
     5|       664|   0.00264645|  3.98561e-06|  0.00%|
     6|       664|   0.00953579|  1.43611e-05|  0.00%|
(call)|       664|    0.0504529|  7.59834e-05|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/fromnumeric.py:2490 ptp
File: <__array_function__ internals>_48
File duration: 0.0215869s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|       678|   0.00242281|  3.57347e-06|  0.00%|
(call)|         1|  1.16825e-05|  1.16825e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.41753e-05|  9.41753e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|       676|   0.00821185|  1.21477e-05|  0.00%|
(call)|       676|   0.00482821|  7.14233e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/fromnumeric.py:2414 _cumsum_dispatcher
     5|       676|   0.00249124|  3.68526e-06|  0.00%|
     6|       676|     0.008461|  1.25163e-05|  0.00%|
(call)|       676|    0.0695817|  0.000102932|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/fromnumeric.py:2418 cumsum
File: <__array_function__ internals>_211
File duration: 0.0209818s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|       634|   0.00190687|  3.00768e-06|  0.00%|
(call)|         1|  1.21593e-05|  1.21593e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.39369e-05|  9.39369e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|       632|   0.00743151|  1.17587e-05|  0.00%|
(call)|       632|   0.00440407|  6.96846e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/function_base.py:1148 _diff_dispatcher
     5|       632|    0.0023551|  3.72642e-06|  0.00%|
     6|       632|   0.00928831|  1.46967e-05|  0.00%|
(call)|       632|     0.087204|  0.000137981|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/function_base.py:1152 diff
File: <__array_function__ internals>_66
File duration: 0.0199468s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|       672|   0.00185943|    2.767e-06|  0.00%|
(call)|         1|  1.16825e-05|  1.16825e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.41753e-05|  9.41753e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|       670|   0.00747514|  1.11569e-05|  0.00%|
(call)|       670|   0.00397658|   5.9352e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/shape_base.py:20 _atleast_1d_dispatcher
     5|       670|   0.00227451|   3.3948e-06|  0.00%|
     6|       670|   0.00833774|  1.24444e-05|  0.00%|
(call)|       670|    0.0729406|  0.000108867|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/shape_base.py:24 atleast_1d
File: <__array_function__ internals>_231
File duration: 0.0197198s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|       738|   0.00202894|  2.74924e-06|  0.00%|
(call)|         1|  1.16825e-05|  1.16825e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.41753e-05|  9.41753e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|       736|   0.00740433|  1.00602e-05|  0.00%|
(call)|       736|   0.00456929|  6.20828e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/function_base.py:4612 _append_dispatcher
     5|       736|   0.00243616|     3.31e-06|  0.00%|
     6|       736|   0.00785041|  1.06663e-05|  0.00%|
(call)|       736|      0.10361|  0.000140774|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/function_base.py:4616 append
File: <__array_function__ internals>_40
File duration: 0.0196004s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|       744|   0.00191832|  2.57838e-06|  0.00%|
(call)|         1|  1.07288e-05|  1.07288e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000100374|  0.000100374|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|       742|   0.00746679|  1.00631e-05|  0.00%|
(call)|       742|   0.00438643|  5.91162e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/fromnumeric.py:1701 _ravel_dispatcher
     5|       742|   0.00245619|  3.31023e-06|  0.00%|
     6|       742|   0.00775909|   1.0457e-05|  0.00%|
(call)|       742|    0.0177679|   2.3946e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/fromnumeric.py:1705 ravel
File: <__array_function__ internals>_70
File duration: 0.018944s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|       582|   0.00170159|   2.9237e-06|  0.00%|
(call)|         1|  1.09673e-05|  1.09673e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.05991e-05|  9.05991e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|       580|   0.00641537|   1.1061e-05|  0.00%|
(call)|       580|    0.0139191|  2.39985e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/shape_base.py:219 _vhstack_dispatcher
     5|       580|   0.00210524|  3.62972e-06|  0.00%|
     6|       580|   0.00872183|  1.50376e-05|  0.00%|
(call)|       580|     0.131887|  0.000227392|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/shape_base.py:286 hstack
File: <__array_function__ internals>_69
File duration: 0.0176737s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|       514|   0.00168276|  3.27385e-06|  0.00%|
(call)|         1|  1.12057e-05|  1.12057e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.34601e-05|  9.34601e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|       512|   0.00673461|  1.31535e-05|  0.00%|
(call)|       512|    0.0144002|  2.81255e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/shape_base.py:219 _vhstack_dispatcher
     5|       512|   0.00200582|  3.91761e-06|  0.00%|
     6|       512|   0.00725055|  1.41612e-05|  0.00%|
(call)|       512|     0.141192|  0.000275766|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/shape_base.py:223 vstack
File: <__array_function__ internals>_67
File duration: 0.016494s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|       514|   0.00161266|  3.13748e-06|  0.00%|
(call)|         1|  1.16825e-05|  1.16825e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|    0.0001688|    0.0001688|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|       512|   0.00638127|  1.24634e-05|  0.00%|
(call)|       512|   0.00343561|  6.71018e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/shape_base.py:78 _atleast_2d_dispatcher
     5|       512|    0.0018816|    3.675e-06|  0.00%|
     6|       512|    0.0066185|  1.29268e-05|  0.00%|
(call)|       512|    0.0784402|  0.000153203|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/shape_base.py:82 atleast_2d
File: /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_neptune.py
File duration: 0.0153725s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  4.57764e-05|  2.28882e-05|  0.00%|import neptune
     2|         1|  3.50475e-05|  3.50475e-05|  0.00%|import torch.nn
(call)|         1|      13.0599|      13.0599|  2.74%|# <frozen importlib._bootstrap>:978 _find_and_load
     3|         1|  1.21593e-05|  1.21593e-05|  0.00%|import numpy
     4|         1|  5.24521e-05|  5.24521e-05|  0.00%|import matplotlib.figure
(call)|         1|      2.37822|      2.37822|  0.50%|# <frozen importlib._bootstrap>:978 _find_and_load
     5|         1|  4.26769e-05|  4.26769e-05|  0.00%|from typing import Optional
(call)|         1|  2.12193e-05|  2.12193e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
     6|         1|  4.69685e-05|  4.69685e-05|  0.00%|from MODULES.utilities import save_obj
(call)|         1|      6.44766|      6.44766|  1.35%|# <frozen importlib._bootstrap>:978 _find_and_load
(call)|         1|  3.24249e-05|  3.24249e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
     7|         1|  5.50747e-05|  5.50747e-05|  0.00%|from neptunecontrib.api import log_chart
(call)|         1|      1.34013|      1.34013|  0.28%|# <frozen importlib._bootstrap>:978 _find_and_load
(call)|         1|  4.00543e-05|  4.00543e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
     8|         0|            0|            0|  0.00%|
     9|         0|            0|            0|  0.00%|
    10|        15|  8.39233e-05|  5.59489e-06|  0.00%|def log_img_only(name: str,
    11|         0|            0|            0|  0.00%|                 fig: matplotlib.figure.Figure,
    12|         0|            0|            0|  0.00%|                 experiment:  Optional[neptune.experiments.Experiment] = None,
    13|         1|  5.34058e-05|  5.34058e-05|  0.00%|                 verbose: bool = False):
(call)|         1|   0.00095129|   0.00095129|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
    14|        15|  8.58307e-05|  5.72205e-06|  0.00%|    if verbose:
    15|         0|            0|            0|  0.00%|        print("inside log_img_only -> "+name)
    16|        15|  6.69956e-05|  4.46637e-06|  0.00%|    _exp = experiment if experiment else neptune
    17|        15|  0.000394821|  2.63214e-05|  0.00%|    _exp.log_image(name, fig)
(call)|         2|      2.40364|      1.20182|  0.50%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/experiments.py:438 log_image
(call)|        13|      13.0876|      1.00674|  2.75%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/__init__.py:340 log_image
    18|        15|  0.000107527|  7.16845e-06|  0.00%|    if verbose:
    19|         0|            0|            0|  0.00%|        print("leaving log_img_only -> "+name)
    20|         0|            0|            0|  0.00%|
    21|         0|            0|            0|  0.00%|
    22|        10|  5.79357e-05|  5.79357e-06|  0.00%|def log_img_and_chart(name: str,
    23|         0|            0|            0|  0.00%|                      fig: matplotlib.figure.Figure,
    24|         0|            0|            0|  0.00%|                      experiment:  Optional[neptune.experiments.Experiment] = None,
    25|         1|  3.76701e-05|  3.76701e-05|  0.00%|                      verbose: bool = False):
(call)|         1|  2.43187e-05|  2.43187e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
    26|        10|  6.03199e-05|  6.03199e-06|  0.00%|    if verbose:
    27|         0|            0|            0|  0.00%|        print("inside log_img_and_chart -> "+name)
    28|        10|   5.8651e-05|   5.8651e-06|  0.00%|    _exp = experiment if experiment else neptune
    29|        10|  0.000298262|  2.98262e-05|  0.00%|    log_chart(name, fig, _exp)
(call)|        10|      161.467|      16.1467| 33.92%|# /opt/anaconda3/lib/python3.7/site-packages/neptunecontrib/api/chart.py:24 log_chart
    30|        10|    0.0003016|    3.016e-05|  0.00%|    _exp.log_image(name, fig)
(call)|        10|      11.7673|      1.17673|  2.47%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/__init__.py:340 log_image
    31|        10|  6.00815e-05|  6.00815e-06|  0.00%|    if verbose:
    32|         0|            0|            0|  0.00%|        print("leaving log_img_and_chart -> "+name)
    33|         0|            0|            0|  0.00%|
    34|         0|            0|            0|  0.00%|
    35|         1|  1.00136e-05|  1.00136e-05|  0.00%|def log_model_summary(model: torch.nn.Module,
    36|         0|            0|            0|  0.00%|                      experiment: Optional[neptune.experiments.Experiment] = None,
    37|         1|  3.02792e-05|  3.02792e-05|  0.00%|                      verbose: bool = False):
(call)|         1|  2.19345e-05|  2.19345e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
    38|         1|  1.43051e-05|  1.43051e-05|  0.00%|    if verbose:
    39|         0|            0|            0|  0.00%|        print("inside log_model_summary")
    40|         0|            0|            0|  0.00%|
    41|         1|  5.96046e-06|  5.96046e-06|  0.00%|    _exp = experiment if experiment else neptune
    42|         0|            0|            0|  0.00%|
    43|       161|   0.00070715|  4.39223e-06|  0.00%|    for x in model.__str__().split('\n'):
(call)|         1|     0.021769|     0.021769|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:1133 __repr__
    44|         0|            0|            0|  0.00%|        # replace leading spaces with '-' character
    45|       160|  0.000919342|  5.74589e-06|  0.00%|        n = len(x) - len(x.lstrip(' '))
    46|       160|   0.00227451|  1.42157e-05|  0.00%|        _exp.log_text("model summary", '-' * n + x)
(call)|       160|     0.557144|   0.00348215|  0.12%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/__init__.py:324 log_text
    47|         0|            0|            0|  0.00%|
    48|         1|  4.05312e-06|  4.05312e-06|  0.00%|    if verbose:
    49|         0|            0|            0|  0.00%|        print("leaving log_model_summary")
    50|         0|            0|            0|  0.00%|
    51|         0|            0|            0|  0.00%|
    52|         1|  9.53674e-06|  9.53674e-06|  0.00%|def log_object_as_artifact(name: str,
    53|         0|            0|            0|  0.00%|                           obj: object,
    54|         0|            0|            0|  0.00%|                           experiment: Optional[neptune.experiments.Experiment] = None,
    55|         1|  2.43187e-05|  2.43187e-05|  0.00%|                           verbose: bool = False):
(call)|         1|  2.19345e-05|  2.19345e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
    56|         1|   6.4373e-06|   6.4373e-06|  0.00%|    if verbose:
    57|         0|            0|            0|  0.00%|        print("inside log_object_as_artifact")
    58|         0|            0|            0|  0.00%|
    59|         1|  5.72205e-06|  5.72205e-06|  0.00%|    path = name+".pt"
    60|         1|  0.000183105|  0.000183105|  0.00%|    save_obj(obj=obj, path=path)
(call)|         1|      2.34268|      2.34268|  0.49%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities.py:121 save_obj
    61|         1|  2.02656e-05|  2.02656e-05|  0.00%|    _exp = experiment if experiment else neptune
    62|         1|  2.86102e-05|  2.86102e-05|  0.00%|    _exp.log_artifact(path)
(call)|         1|      17.8047|      17.8047|  3.74%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/__init__.py:364 log_artifact
    63|         0|            0|            0|  0.00%|
    64|         1|   6.4373e-06|   6.4373e-06|  0.00%|    if verbose:
    65|         0|            0|            0|  0.00%|        print("leaving log_object_as_artifact")
    66|         0|            0|            0|  0.00%|
    67|         0|            0|            0|  0.00%|
    68|         0|            0|            0|  0.00%|def log_matplotlib_as_png(name: str,
    69|         0|            0|            0|  0.00%|                          fig: matplotlib.figure.Figure,
    70|         0|            0|            0|  0.00%|                          experiment: Optional[neptune.experiments.Experiment] = None,
    71|         1|  2.02656e-05|  2.02656e-05|  0.00%|                          verbose: bool = False):
(call)|         1|  2.19345e-05|  2.19345e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
    72|         0|            0|            0|  0.00%|    if verbose:
    73|         0|            0|            0|  0.00%|        print("log_matplotlib_as_png")
    74|         0|            0|            0|  0.00%|
    75|         0|            0|            0|  0.00%|    _exp = experiment if experiment else neptune
    76|         0|            0|            0|  0.00%|    fig.savefig(name+".png")  # save to local file
    77|         0|            0|            0|  0.00%|    _exp.log_image(name, name+".png")  # log file to neptune
    78|         0|            0|            0|  0.00%|
    79|         0|            0|            0|  0.00%|    if verbose:
    80|         0|            0|            0|  0.00%|        print("leaving log_matplotlib_as_png")
    81|         0|            0|            0|  0.00%|
    82|         0|            0|            0|  0.00%|
    83|         7|  4.50611e-05|   6.4373e-06|  0.00%|def log_dict_metrics(metrics: dict,
    84|         0|            0|            0|  0.00%|                     prefix: str = "",
    85|         0|            0|            0|  0.00%|                     experiment: Optional[neptune.experiments.Experiment] = None,
    86|         1|  1.83582e-05|  1.83582e-05|  0.00%|                     verbose: bool = False):
(call)|         1|  2.14577e-05|  2.14577e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
    87|         7|  4.45843e-05|  6.36918e-06|  0.00%|    if verbose:
    88|         0|            0|            0|  0.00%|        print("inside log_dict_metrics")
    89|         0|            0|            0|  0.00%|
    90|         7|  5.48363e-05|  7.83375e-06|  0.00%|    _exp = experiment if experiment else neptune
    91|         0|            0|            0|  0.00%|
    92|       128|   0.00077939|  6.08899e-06|  0.00%|    for key, value in metrics.items():
    93|       121|   0.00057888|  4.78413e-06|  0.00%|        if isinstance(value, float):
    94|       109|   0.00703001|  6.44955e-05|  0.00%|            _exp.log_metric(prefix + key, value)
(call)|       108|      10.0372|    0.0929374|  2.11%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/experiments.py:302 log_metric
(call)|         1|     0.221779|     0.221779|  0.05%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/__init__.py:308 log_metric
    95|        12|  7.12872e-05|   5.9406e-06|  0.00%|        elif isinstance(value, numpy.ndarray):
    96|        24|  0.000266075|  1.10865e-05|  0.00%|            for i, x in enumerate(value):
    97|        12|  0.000209332|  1.74443e-05|  0.00%|                _exp.log_metric(prefix + key + "_" + str(i), x)
(call)|        12|      0.99412|    0.0828433|  0.21%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/experiments.py:302 log_metric
    98|         0|            0|            0|  0.00%|
    99|         7|  2.67029e-05|   3.8147e-06|  0.00%|    if verbose:
   100|         0|            0|            0|  0.00%|        print("leaving log_dict_metrics")
   101|         0|            0|            0|  0.00%|
   102|         0|            0|            0|  0.00%|
   103|         0|            0|            0|  0.00%|def log_last_ckpt(name: str,
   104|         0|            0|            0|  0.00%|                  ckpt: dict,
   105|         0|            0|            0|  0.00%|                  experiment: Optional[neptune.experiments.Experiment] = None,
   106|         0|            0|            0|  0.00%|                  verbose: bool = False,
   107|         1|   2.0504e-05|   2.0504e-05|  0.00%|                  delete_previous_ckpt: bool = True):
(call)|         1|  2.12193e-05|  2.12193e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
   108|         0|            0|            0|  0.00%|
   109|         0|            0|            0|  0.00%|    if verbose:
   110|         0|            0|            0|  0.00%|        print("inside log_last_ckpt")
   111|         0|            0|            0|  0.00%|
   112|         0|            0|            0|  0.00%|    _exp = experiment if experiment else neptune
   113|         0|            0|            0|  0.00%|    path = name+".pt"
   114|         0|            0|            0|  0.00%|    #if delete_previous_ckpt:
   115|         0|            0|            0|  0.00%|    #    _exp.delete_artifacts(path)
   116|         0|            0|            0|  0.00%|    save_obj(obj=ckpt, path=path)
   117|         0|            0|            0|  0.00%|    print("logging artifact")
   118|         0|            0|            0|  0.00%|    _exp.log_artifact(path)
   119|         0|            0|            0|  0.00%|
   120|         0|            0|            0|  0.00%|    if verbose:
   121|         0|            0|            0|  0.00%|        print("leaving log_last_ckpt")
File: <__array_function__ internals>_74
File duration: 0.012852s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|       418|   0.00114465|  2.73839e-06|  0.00%|
(call)|         1|  1.07288e-05|  1.07288e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.03606e-05|  9.03606e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|       416|   0.00488591|   1.1745e-05|  0.00%|
(call)|       416|   0.00278902|  6.70438e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/numeric.py:197 _ones_like_dispatcher
     5|       416|   0.00156045|  3.75108e-06|  0.00%|
     6|       416|   0.00526094|  1.26465e-05|  0.00%|
(call)|       416|    0.0406001|  9.75963e-05|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/numeric.py:201 ones_like
File: <string>_5
File duration: 0.0128012s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|      3168|    0.0128012|  4.04077e-06|  0.00%|
File: <__array_function__ internals>_4
File duration: 0.0123031s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|       535|   0.00188255|  3.51879e-06|  0.00%|
(call)|         1|  1.12057e-05|  1.12057e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000106573|  0.000106573|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|       533|   0.00571871|  1.07293e-05|  0.00%|
(call)|       533|   0.00328445|   6.1622e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/multiarray.py:468 can_cast
     5|       533|   0.00180197|   3.3808e-06|  0.00%|
     6|       533|   0.00289989|  5.44069e-06|  0.00%|
File: <__array_function__ internals>
File duration: 0.0118189s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|       446|   0.00126386|  2.83376e-06|  0.00%|
(call)|         1|  2.83718e-05|  2.83718e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000149488|  0.000149488|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|       444|     0.004951|  1.11509e-05|  0.00%|
(call)|       444|   0.00288963|  6.50818e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/multiarray.py:75 empty_like
     5|       444|   0.00159645|  3.59561e-06|  0.00%|
     6|       444|   0.00400758|  9.02608e-06|  0.00%|
(call)|         4|   0.00137615|  0.000344038|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/ma/core.py:2975 __array_finalize__
File: <__array_function__ internals>_12
File duration: 0.0116007s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|       474|   0.00133181|  2.80972e-06|  0.00%|
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000126123|  0.000126123|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|       472|   0.00524902|  1.11208e-05|  0.00%|
(call)|       472|   0.00301719|  6.39235e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/multiarray.py:1043 copyto
     5|       472|    0.0016222|  3.43686e-06|  0.00%|
     6|       472|    0.0033977|  7.19852e-06|  0.00%|
File: <string>
File duration: 0.00767779s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|      1582|   0.00767779|  4.85322e-06|  0.00%|
File: <string>_1
File duration: 0.0054493s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|       792|    0.0054493|  6.88042e-06|  0.00%|
File: <string>_10
File duration: 0.00541663s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|      1382|   0.00541663|  3.91942e-06|  0.00%|
File: <string>_15
File duration: 0.00490451s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|      1146|   0.00490451|  4.27968e-06|  0.00%|
File: <__array_function__ internals>_11
File duration: 0.00478196s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|       109|  0.000601053|  5.51425e-06|  0.00%|
(call)|         1|  1.04904e-05|  1.04904e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.65595e-05|  9.65595e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|       107|   0.00151372|  1.41469e-05|  0.00%|
(call)|       107|   0.00148082|  1.38394e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/multiarray.py:990 unravel_index
     5|       107|  0.000446558|  4.17344e-06|  0.00%|
     6|       107|   0.00222063|  2.07536e-05|  0.00%|
File: /home/jupyter/REPOS/spacetx-research/src/MODULES/namedtuple.py
File duration: 0.00464344s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  4.76837e-05|  2.38419e-05|  0.00%|import torch
     2|         1|  1.00136e-05|  1.00136e-05|  0.00%|import numpy
     3|         1|  4.12464e-05|  4.12464e-05|  0.00%|from typing import NamedTuple, Optional, Union
(call)|         1|  2.52724e-05|  2.52724e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
     4|         1|  6.67572e-05|  6.67572e-05|  0.00%|import skimage.color
(call)|         1|         3.57|         3.57|  0.75%|# <frozen importlib._bootstrap>:978 _find_and_load
     5|         1|  7.15256e-05|  7.15256e-05|  0.00%|import matplotlib.pyplot as plt
(call)|         1|      2.39434|      2.39434|  0.50%|# <frozen importlib._bootstrap>:978 _find_and_load
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|#  ----------------------------------------------------------------  #
     8|         0|            0|            0|  0.00%|#  ------- Stuff Related to PreProcessing -------------------------  #
     9|         0|            0|            0|  0.00%|#  ----------------------------------------------------------------  #
    10|         0|            0|            0|  0.00%|
    11|         0|            0|            0|  0.00%|
    12|         3|  0.000113726|  3.79086e-05|  0.00%|class ImageBbox(NamedTuple):
(call)|         1|  4.17233e-05|  4.17233e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/namedtuple.py:12 ImageBbox
(call)|         1|   0.00180912|   0.00180912|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:1363 __new__
    13|         0|            0|            0|  0.00%|    """ Follows Scikit Image convention. Pixels belonging to the bounding box are in the half-open interval:
    14|         1|  3.57628e-06|  3.57628e-06|  0.00%|        [min_row;max_row) and [min_col;max_col). """
    15|         1|  4.52995e-06|  4.52995e-06|  0.00%|    min_row: int
    16|         1|  4.52995e-06|  4.52995e-06|  0.00%|    min_col: int
    17|         1|  4.76837e-06|  4.76837e-06|  0.00%|    max_row: int
    18|         1|  4.29153e-06|  4.29153e-06|  0.00%|    max_col: int
    19|         0|            0|            0|  0.00%|
    20|         0|            0|            0|  0.00%|
    21|         3|  0.000145197|   4.8399e-05|  0.00%|class PreProcess(NamedTuple):
(call)|         1|   9.5129e-05|   9.5129e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/namedtuple.py:21 PreProcess
(call)|         1|   0.00146174|   0.00146174|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:1363 __new__
    22|         1|  7.15256e-06|  7.15256e-06|  0.00%|    img: torch.Tensor
    23|         1|  4.76837e-06|  4.76837e-06|  0.00%|    roi_mask: torch.Tensor
    24|         1|  4.05312e-06|  4.05312e-06|  0.00%|    bbox_original: ImageBbox
    25|         1|  4.05312e-06|  4.05312e-06|  0.00%|    bbox_crop: ImageBbox
    26|         0|            0|            0|  0.00%|
    27|         0|            0|            0|  0.00%|#  --------------------------------------------------------------------------------------  #
    28|         0|            0|            0|  0.00%|#  ------- Stuff Related to PostProcessing (i.e. Graph Clustering Based on Modularity) --  #
    29|         0|            0|            0|  0.00%|#  --------------------------------------------------------------------------------------  #
    30|         0|            0|            0|  0.00%|
    31|         0|            0|            0|  0.00%|
    32|         3|  9.36985e-05|  3.12328e-05|  0.00%|class Suggestion(NamedTuple):
(call)|         1|  9.48906e-05|  9.48906e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/namedtuple.py:32 Suggestion
(call)|         1|   0.00243378|   0.00243378|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:1363 __new__
    33|         1|  4.76837e-06|  4.76837e-06|  0.00%|    best_resolution: float
    34|         1|  5.96046e-06|  5.96046e-06|  0.00%|    best_index: int
    35|         1|  7.86781e-06|  7.86781e-06|  0.00%|    sweep_resolution: numpy.ndarray
    36|         1|  5.96046e-06|  5.96046e-06|  0.00%|    sweep_mi: numpy.ndarray
    37|         1|  5.72205e-06|  5.72205e-06|  0.00%|    sweep_iou: numpy.ndarray
    38|         1|  6.91414e-06|  6.91414e-06|  0.00%|    sweep_delta_n: numpy.ndarray
    39|         1|  5.72205e-06|  5.72205e-06|  0.00%|    sweep_seg_mask: numpy.ndarray
    40|         1|  5.72205e-06|  5.72205e-06|  0.00%|    sweep_n_cells: numpy.ndarray
    41|         1|  5.72205e-06|  5.72205e-06|  0.00%|    sweep_sizes: list
    42|         0|            0|            0|  0.00%|
    43|         1|  6.67572e-06|  6.67572e-06|  0.00%|    def show_index(self, index: int, figsize: tuple = (20, 20), fontsize: int = 20):
    44|         0|            0|            0|  0.00%|        figure, ax = plt.subplots(figsize=figsize)
    45|         0|            0|            0|  0.00%|        ax.imshow(skimage.color.label2rgb(label=self.sweep_seg_mask[index], bg_label=0))
    46|         0|            0|            0|  0.00%|        ax.set_title('resolution = {0:.3f}, \
    47|         0|            0|            0|  0.00%|                      iou = {1:.3f}, \
    48|         0|            0|            0|  0.00%|                      delta_n = {2:3d}, \
    49|         0|            0|            0|  0.00%|                      n_cells = {3:3d}'.format(self.sweep_resolution[index],
    50|         0|            0|            0|  0.00%|                                               self.sweep_iou[index],
    51|         0|            0|            0|  0.00%|                                               self.sweep_delta_n[index],
    52|         0|            0|            0|  0.00%|                                               self.sweep_n_cells[index]),
    53|         0|            0|            0|  0.00%|                     fontsize=fontsize)
    54|         0|            0|            0|  0.00%|
    55|         1|  6.19888e-06|  6.19888e-06|  0.00%|    def show_best(self, figsize: tuple = (20, 20), fontsize: int = 20):
    56|         0|            0|            0|  0.00%|        return self.show_index(self.best_index, figsize, fontsize)
    57|         0|            0|            0|  0.00%|
    58|         1|   6.4373e-06|   6.4373e-06|  0.00%|    def show_graph(self, figsize: tuple = (20, 20), fontsize: int = 20):
    59|         0|            0|            0|  0.00%|        figure, ax = plt.subplots(figsize=figsize)
    60|         0|            0|            0|  0.00%|        ax.set_title('Resolution sweep', fontsize=fontsize)
    61|         0|            0|            0|  0.00%|        ax.set_xlabel("resolution", fontsize=fontsize)
    62|         0|            0|            0|  0.00%|        ax.tick_params(axis='x', labelsize=fontsize)
    63|         0|            0|            0|  0.00%|
    64|         0|            0|            0|  0.00%|        color = 'tab:red'
    65|         0|            0|            0|  0.00%|        _ = ax.plot(self.sweep_resolution, self.sweep_n_cells, '.--', label="n_cell", color=color)
    66|         0|            0|            0|  0.00%|        ax.set_ylabel('n_cell', color=color, fontsize=fontsize)
    67|         0|            0|            0|  0.00%|        ax.tick_params(axis='y', labelcolor=color, labelsize=fontsize)
    68|         0|            0|            0|  0.00%|        ax.legend(loc='upper left', fontsize=fontsize)
    69|         0|            0|            0|  0.00%|        ax.grid()
    70|         0|            0|            0|  0.00%|
    71|         0|            0|            0|  0.00%|        ax_2 = ax.twinx()  # instantiate a second axes that shares the same x-axis
    72|         0|            0|            0|  0.00%|        color = 'tab:green'
    73|         0|            0|            0|  0.00%|        _ = ax_2.plot(self.sweep_resolution, self.sweep_iou, '-', label="iou", color=color)
    74|         0|            0|            0|  0.00%|        ax_2.set_ylabel('Intersection Over Union', color=color, fontsize=fontsize)
    75|         0|            0|            0|  0.00%|        ax_2.tick_params(axis='y', labelcolor=color, labelsize=fontsize)
    76|         0|            0|            0|  0.00%|        ax_2.legend(loc='upper right', fontsize=fontsize)
    77|         0|            0|            0|  0.00%|
    78|         0|            0|            0|  0.00%|
    79|         3|  8.89301e-05|  2.96434e-05|  0.00%|class ConcordancePartition(NamedTuple):
(call)|         1|  4.24385e-05|  4.24385e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/namedtuple.py:79 ConcordancePartition
(call)|         1|   0.00166631|   0.00166631|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:1363 __new__
    80|         1|  4.76837e-06|  4.76837e-06|  0.00%|    joint_distribution: torch.tensor
    81|         1|  4.52995e-06|  4.52995e-06|  0.00%|    mutual_information: float
    82|         1|  4.76837e-06|  4.76837e-06|  0.00%|    delta_n: int
    83|         1|  4.05312e-06|  4.05312e-06|  0.00%|    iou: float
    84|         1|  4.52995e-06|  4.52995e-06|  0.00%|    n_reversible_mapping: int
    85|         0|            0|            0|  0.00%|
    86|         0|            0|            0|  0.00%|
    87|         3|  9.65595e-05|  3.21865e-05|  0.00%|class Partition(NamedTuple):
(call)|         1|  0.000145435|  0.000145435|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/namedtuple.py:87 Partition
(call)|         1|   0.00123429|   0.00123429|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:1363 __new__
    88|         1|  5.00679e-06|  5.00679e-06|  0.00%|    sizes: torch.tensor  # both for bg and fg. It is simply obtained by numpy.bincount(membership)
    89|         1|   6.4373e-06|   6.4373e-06|  0.00%|    membership: torch.tensor  # bg=0, fg=1,2,3,.....
    90|         0|            0|            0|  0.00%|
    91|         1|  6.19888e-06|  6.19888e-06|  0.00%|    def compactify(self):
    92|         0|            0|            0|  0.00%|        """ if there are gaps in the SIZES, then shift both membership and sizes accordingly"""
    93|         0|            0|            0|  0.00%|        if (self.sizes[1:] > 0).all():
    94|         0|            0|            0|  0.00%|            return self
    95|         0|            0|            0|  0.00%|        else:
    96|         0|            0|            0|  0.00%|            my_filter = self.sizes > 0
    97|         0|            0|            0|  0.00%|            my_filter[0] = True
    98|         0|            0|            0|  0.00%|            count = torch.cumsum(my_filter, dim=-1)
    99|         0|            0|            0|  0.00%|            old_2_new = ((count - count[0]) * my_filter).to(self.membership.dtype)
   100|         0|            0|            0|  0.00%|            return Partition(sizes=self.sizes[my_filter], membership=old_2_new[self.membership])
   101|         0|            0|            0|  0.00%|
   102|         1|  5.96046e-06|  5.96046e-06|  0.00%|    def filter_by_vertex(self, keep_vertex: torch.tensor):
   103|         0|            0|            0|  0.00%|        assert self.membership.shape == keep_vertex.shape
   104|         0|            0|            0|  0.00%|        assert keep_vertex.dtype == torch.bool
   105|         0|            0|            0|  0.00%|
   106|         0|            0|            0|  0.00%|        if keep_vertex.all():
   107|         0|            0|            0|  0.00%|            return self
   108|         0|            0|            0|  0.00%|        else:
   109|         0|            0|            0|  0.00%|            new_membership = self.membership * keep_vertex  # put all bad vertices in the background cluster
   110|         0|            0|            0|  0.00%|            return Partition(sizes=torch.bincount(new_membership),
   111|         0|            0|            0|  0.00%|                             membership=new_membership).compactify()
   112|         0|            0|            0|  0.00%|
   113|         0|            0|            0|  0.00%|    def filter_by_size(self,
   114|         0|            0|            0|  0.00%|                       min_size: Optional[int] = None,
   115|         1|  3.19481e-05|  3.19481e-05|  0.00%|                       max_size: Optional[int] = None):
(call)|         2|  6.00815e-05|  3.00407e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
   116|         0|            0|            0|  0.00%|        """ If a cluster is too small or too large, its label is set to zero (i.e. background value).
   117|         0|            0|            0|  0.00%|            The other labels are adjusted so that there are no gaps in the labels number.
   118|         0|            0|            0|  0.00%|            Min_size and Max_size are integers specifying the number of pixels.
   119|         0|            0|            0|  0.00%|        """
   120|         0|            0|            0|  0.00%|        if (min_size is None) and (max_size is None):
   121|         0|            0|            0|  0.00%|            return self
   122|         0|            0|            0|  0.00%|        elif (min_size is not None) and (max_size is not None):
   123|         0|            0|            0|  0.00%|            assert max_size > min_size > 0, "Condition max_size > min_size > 0 failed."
   124|         0|            0|            0|  0.00%|            my_filter = (self.sizes > min_size) * (self.sizes < max_size)
   125|         0|            0|            0|  0.00%|        elif min_size is not None:
   126|         0|            0|            0|  0.00%|            assert min_size > 0, "Condition min_size > 0 failed."
   127|         0|            0|            0|  0.00%|            my_filter = (self.sizes > min_size)
   128|         0|            0|            0|  0.00%|        elif max_size is not None:
   129|         0|            0|            0|  0.00%|            assert max_size > 0, "Condition max_size > 0 failed."
   130|         0|            0|            0|  0.00%|            my_filter = (self.sizes < max_size)
   131|         0|            0|            0|  0.00%|        else:
   132|         0|            0|            0|  0.00%|            raise Exception("you should never be here!!")
   133|         0|            0|            0|  0.00%|
   134|         0|            0|            0|  0.00%|        my_filter[0] = True  # always keep the bg
   135|         0|            0|            0|  0.00%|        if my_filter.all():
   136|         0|            0|            0|  0.00%|            return self
   137|         0|            0|            0|  0.00%|        else:
   138|         0|            0|            0|  0.00%|            return Partition(sizes=self.sizes * my_filter,
   139|         0|            0|            0|  0.00%|                             membership=self.membership).compactify()
   140|         0|            0|            0|  0.00%|
   141|         1|  6.91414e-06|  6.91414e-06|  0.00%|    def concordance_with_partition(self, other_partition) -> ConcordancePartition:
   142|         0|            0|            0|  0.00%|        """ Compute measure of concordance between two partitions:
   143|         0|            0|            0|  0.00%|            joint_distribution
   144|         0|            0|            0|  0.00%|            mutual_information
   145|         0|            0|            0|  0.00%|            delta_n
   146|         0|            0|            0|  0.00%|            iou
   147|         0|            0|            0|  0.00%|
   148|         0|            0|            0|  0.00%|            We use the peaks of the join distribution to extract the mapping between membership labels.
   149|         0|            0|            0|  0.00%|        """
   150|         0|            0|            0|  0.00%|
   151|         0|            0|            0|  0.00%|        assert self.membership.shape == other_partition.membership.shape
   152|         0|            0|            0|  0.00%|
   153|         0|            0|            0|  0.00%|        # Use z = x + y * nx
   154|         0|            0|            0|  0.00%|        # whose reciprocal is:
   155|         0|            0|            0|  0.00%|        # x = z % nx
   156|         0|            0|            0|  0.00%|        # y = z // nx
   157|         0|            0|            0|  0.00%|
   158|         0|            0|            0|  0.00%|        nx = self.sizes.shape[0]
   159|         0|            0|            0|  0.00%|        ny = other_partition.sizes.shape[0]
   160|         0|            0|            0|  0.00%|        z = self.membership + other_partition.membership * nx  # if z = x + y * nx
   161|         0|            0|            0|  0.00%|        count_z = torch.bincount(z).float()
   162|         0|            0|            0|  0.00%|        z_to_x = torch.arange(count_z.shape[0]) % nx  # then x = z % nx
   163|         0|            0|            0|  0.00%|        z_to_y = torch.arange(count_z.shape[0]) // nx  # and y = z // nx
   164|         0|            0|            0|  0.00%|
   165|         0|            0|            0|  0.00%|        pxy = torch.zeros((nx, ny), dtype=torch.float, device=self.membership.device)
   166|         0|            0|            0|  0.00%|        pxy[z_to_x, z_to_y] = count_z
   167|         0|            0|            0|  0.00%|        pxy /= torch.sum(pxy)
   168|         0|            0|            0|  0.00%|        px = torch.sum(pxy, dim=-1)
   169|         0|            0|            0|  0.00%|        py = torch.sum(pxy, dim=-2)
   170|         0|            0|            0|  0.00%|
   171|         0|            0|            0|  0.00%|        # Compute the mutual information
   172|         0|            0|            0|  0.00%|        term_xy = pxy * torch.log(pxy)
   173|         0|            0|            0|  0.00%|        term_x = px * torch.log(px)
   174|         0|            0|            0|  0.00%|        term_y = py * torch.log(py)
   175|         0|            0|            0|  0.00%|        mutual_information = term_xy[pxy > 0].sum() - term_x[px > 0].sum() - term_y[py > 0].sum()
   176|         0|            0|            0|  0.00%|
   177|         0|            0|            0|  0.00%|        # Extract the most likely mappings
   178|         0|            0|            0|  0.00%|        to_other = torch.max(pxy, dim=-1)[1]
   179|         0|            0|            0|  0.00%|        from_other = torch.max(pxy, dim=-2)[1]
   180|         0|            0|            0|  0.00%|
   181|         0|            0|            0|  0.00%|        # Find one-to-one correspondence among instance IDs
   182|         0|            0|            0|  0.00%|        original_instance_id = torch.arange(nx, device=self.membership.device, dtype=torch.long)
   183|         0|            0|            0|  0.00%|        is_id_one_to_one = (from_other[to_other[original_instance_id]] == original_instance_id)
   184|         0|            0|            0|  0.00%|        n_reversible_mapping = is_id_one_to_one.sum().item()
   185|         0|            0|            0|  0.00%|
   186|         0|            0|            0|  0.00%|        # Define a mapping that changes all bad (i.e. not unique or background) instance IDs to -1
   187|         0|            0|            0|  0.00%|        original_to_good_id = original_instance_id
   188|         0|            0|            0|  0.00%|        original_to_good_id[~is_id_one_to_one] = -1
   189|         0|            0|            0|  0.00%|        original_to_good_id[0] = -1  # Exclude the background
   190|         0|            0|            0|  0.00%|        filter_fg_pixels_with_reversible_id = (original_to_good_id[self.membership] > 0)
   191|         0|            0|            0|  0.00%|
   192|         0|            0|            0|  0.00%|        # Even if the ID is reversible the pixel might have the wrong one.
   193|         0|            0|            0|  0.00%|        pixel_with_same_id = (to_other[self.membership] == other_partition.membership)
   194|         0|            0|            0|  0.00%|        intersection = torch.sum(pixel_with_same_id[filter_fg_pixels_with_reversible_id])
   195|         0|            0|            0|  0.00%|        union = torch.sum(self.sizes[1:]) + torch.sum(other_partition.sizes[1:]) - intersection  # exclude background
   196|         0|            0|            0|  0.00%|        iou = intersection.float()/union
   197|         0|            0|            0|  0.00%|
   198|         0|            0|            0|  0.00%|        return ConcordancePartition(joint_distribution=pxy,
   199|         0|            0|            0|  0.00%|                                    mutual_information=mutual_information.item(),
   200|         0|            0|            0|  0.00%|                                    delta_n=ny - nx,
   201|         0|            0|            0|  0.00%|                                    iou=iou.item(),
   202|         0|            0|            0|  0.00%|                                    n_reversible_mapping=n_reversible_mapping)
   203|         0|            0|            0|  0.00%|
   204|         0|            0|            0|  0.00%|
   205|         0|            0|            0|  0.00%|#  ----------------------------------------------------------------  #
   206|         0|            0|            0|  0.00%|#  ------- Stuff Related to Processing (i.e. CompositionalVAE) ----  #
   207|         0|            0|            0|  0.00%|#  ----------------------------------------------------------------  #
   208|         0|            0|            0|  0.00%|
   209|         0|            0|            0|  0.00%|
   210|         3|   0.00010252|  3.41733e-05|  0.00%|class DIST(NamedTuple):
(call)|         1|  2.93255e-05|  2.93255e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/namedtuple.py:210 DIST
(call)|         1|   0.00118041|   0.00118041|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:1363 __new__
   211|         1|  4.29153e-06|  4.29153e-06|  0.00%|    sample: torch.Tensor
   212|         1|  4.52995e-06|  4.52995e-06|  0.00%|    kl: torch.Tensor
   213|         0|            0|            0|  0.00%|
   214|         0|            0|            0|  0.00%|
   215|         3|  9.29832e-05|  3.09944e-05|  0.00%|class ZZ(NamedTuple):
(call)|         1|   3.6478e-05|   3.6478e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/namedtuple.py:215 ZZ
(call)|         1|   0.00118303|   0.00118303|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:1363 __new__
   216|         1|   3.8147e-06|   3.8147e-06|  0.00%|    mu: torch.Tensor
   217|         1|  4.05312e-06|  4.05312e-06|  0.00%|    std: torch.Tensor
   218|         0|            0|            0|  0.00%|
   219|         0|            0|            0|  0.00%|
   220|         3|  0.000101805|  3.39349e-05|  0.00%|class BB(NamedTuple):
(call)|         1|  3.57628e-05|  3.57628e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/namedtuple.py:220 BB
(call)|         1|   0.00150871|   0.00150871|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:1363 __new__
   221|         1|  4.05312e-06|  4.05312e-06|  0.00%|    bx: torch.Tensor  # shape: n_box, batch_size
   222|         1|  4.52995e-06|  4.52995e-06|  0.00%|    by: torch.Tensor
   223|         1|  4.05312e-06|  4.05312e-06|  0.00%|    bw: torch.Tensor
   224|         1|  4.05312e-06|  4.05312e-06|  0.00%|    bh: torch.Tensor
   225|         0|            0|            0|  0.00%|
   226|         0|            0|            0|  0.00%|
   227|         3|  8.63075e-05|  2.87692e-05|  0.00%|class NMSoutput(NamedTuple):
(call)|         1|  2.74181e-05|  2.74181e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/namedtuple.py:227 NMSoutput
(call)|         1|   0.00110507|   0.00110507|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:1363 __new__
   228|         1|  4.29153e-06|  4.29153e-06|  0.00%|    nms_mask: torch.Tensor
   229|         1|  4.52995e-06|  4.52995e-06|  0.00%|    index_top_k: torch.Tensor
   230|         0|            0|            0|  0.00%|
   231|         0|            0|            0|  0.00%|
   232|         3|  9.53674e-05|  3.17891e-05|  0.00%|class SparseSimilarity(NamedTuple):
(call)|         1|  0.000855923|  0.000855923|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/namedtuple.py:232 SparseSimilarity
(call)|         1|   0.00129414|   0.00129414|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:1363 __new__
   233|         1|  7.39098e-06|  7.39098e-06|  0.00%|    sparse_matrix: torch.sparse.FloatTensor
   234|         1|   1.4782e-05|   1.4782e-05|  0.00%|    index_matrix: Optional[torch.tensor]
(call)|         1|  0.000815392|  0.000815392|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
   235|         0|            0|            0|  0.00%|
   236|         0|            0|            0|  0.00%|
   237|         3|  9.87053e-05|  3.29018e-05|  0.00%|class Segmentation(NamedTuple):
(call)|         1|  0.000839949|  0.000839949|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/namedtuple.py:237 Segmentation
(call)|         1|   0.00186086|   0.00186086|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:1363 __new__
   238|         1|  3.33786e-06|  3.33786e-06|  0.00%|    """ Where * is the batch dimension which might be NOT present """
   239|         1|  5.24521e-06|  5.24521e-06|  0.00%|    raw_image: torch.Tensor  # *,ch,w,h
   240|         1|  4.05312e-06|  4.05312e-06|  0.00%|    fg_prob: torch.Tensor  # *,1,w,h
   241|         1|  4.29153e-06|  4.29153e-06|  0.00%|    integer_mask: torch.Tensor  # *,1,w,h
   242|         1|  1.33514e-05|  1.33514e-05|  0.00%|    bounding_boxes: Optional[torch.Tensor]  # *,3,w,h
(call)|         1|  2.64645e-05|  2.64645e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
   243|         1|   1.3113e-05|   1.3113e-05|  0.00%|    similarity: Optional[SparseSimilarity] = None
(call)|         1|  0.000745773|  0.000745773|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
   244|         0|            0|            0|  0.00%|
   245|         0|            0|            0|  0.00%|
   246|         3|  8.79765e-05|  2.93255e-05|  0.00%|class UNEToutput(NamedTuple):
(call)|         1|  4.00543e-05|  4.00543e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/namedtuple.py:246 UNEToutput
(call)|         1|    0.0015049|    0.0015049|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:1363 __new__
   247|         1|   3.8147e-06|   3.8147e-06|  0.00%|    zwhere: ZZ
   248|         1|  4.52995e-06|  4.52995e-06|  0.00%|    logit: ZZ
   249|         1|  4.05312e-06|  4.05312e-06|  0.00%|    zbg: ZZ
   250|         1|  8.58307e-06|  8.58307e-06|  0.00%|    features: torch.Tensor
   251|         0|            0|            0|  0.00%|
   252|         0|            0|            0|  0.00%|
   253|         3|   0.00011301|  3.76701e-05|  0.00%|class Inference(NamedTuple):
(call)|         1|    9.799e-05|    9.799e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/namedtuple.py:253 Inference
(call)|         1|   0.00361323|   0.00361323|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:1363 __new__
   254|         1|  4.05312e-06|  4.05312e-06|  0.00%|    prob_map: torch.Tensor  # shape -> batch_size, 1, w, h
   255|         1|  4.52995e-06|  4.52995e-06|  0.00%|    prob_few: torch.Tensor  # shape -> boxes_few, batch_size
   256|         1|  4.29153e-06|  4.29153e-06|  0.00%|    big_bg: torch.Tensor
   257|         1|  4.29153e-06|  4.29153e-06|  0.00%|    big_img: torch.Tensor
   258|         1|  4.52995e-06|  4.52995e-06|  0.00%|    big_mask: torch.Tensor
   259|         1|  4.76837e-06|  4.76837e-06|  0.00%|    big_mask_NON_interacting: torch.Tensor  # Use exclusively to compute overlap penalty
   260|         0|            0|            0|  0.00%|    # the samples of the 3 latent variables
   261|         1|  4.29153e-06|  4.29153e-06|  0.00%|    sample_c_map: torch.Tensor      # shape -> batch, 1, width, height
   262|         1|  4.29153e-06|  4.29153e-06|  0.00%|    sample_c: torch.Tensor          # boxes_few, batch_size
   263|         1|  4.76837e-06|  4.76837e-06|  0.00%|    sample_bb: BB                   # each bx,by,bw,bh has shape -> boxes_few, batch_size
   264|         1|  4.29153e-06|  4.29153e-06|  0.00%|    sample_zinstance: torch.Tensor  # boxes_few, batch_size, latent_dim
   265|         0|            0|            0|  0.00%|    # kl of the 3 latent variables
   266|         1|  4.52995e-06|  4.52995e-06|  0.00%|    kl_logit: torch.Tensor      # batch_size
   267|         1|  4.29153e-06|  4.29153e-06|  0.00%|    kl_zwhere: torch.Tensor     # boxes_few, batch_size, latent_dim
   268|         1|  4.52995e-06|  4.52995e-06|  0.00%|    kl_zinstance: torch.Tensor  # boxes_few, batch_size, latent_dim
   269|         0|            0|            0|  0.00%|    # similarity DPP
   270|         1|  4.05312e-06|  4.05312e-06|  0.00%|    similarity_sigma2: torch.Tensor
   271|         1|  1.71661e-05|  1.71661e-05|  0.00%|    similarity_weights: torch.Tensor
   272|         0|            0|            0|  0.00%|
   273|         0|            0|            0|  0.00%|
   274|         3|  9.36985e-05|  3.12328e-05|  0.00%|class RegMiniBatch(NamedTuple):
(call)|         1|  3.67165e-05|  3.67165e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/namedtuple.py:274 RegMiniBatch
(call)|         1|    0.0011754|    0.0011754|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:1363 __new__
   275|         0|            0|            0|  0.00%|    # All entries should be scalars obtained by averaging over minibatch
   276|         1|  4.76837e-06|  4.76837e-06|  0.00%|    reg_overlap: torch.Tensor
   277|         1|  4.52995e-06|  4.52995e-06|  0.00%|    reg_area_obj: torch.Tensor
   278|         0|            0|            0|  0.00%|
   279|        24|  0.000101328|    4.222e-06|  0.00%|    def total(self):
   280|        23|  0.000148773|   6.4684e-06|  0.00%|        tot = None
   281|        69|  0.000347614|  5.03789e-06|  0.00%|        for x in self:
   282|        46|  0.000158548|   3.4467e-06|  0.00%|            if tot is None:
   283|        23|  8.15392e-05|  3.54518e-06|  0.00%|                tot = x
   284|         0|            0|            0|  0.00%|            else:
   285|        23|  0.000739336|   3.2145e-05|  0.00%|                tot += x
   286|        23|  7.39098e-05|  3.21347e-06|  0.00%|        return tot
   287|         0|            0|            0|  0.00%|
   288|         0|            0|            0|  0.00%|
   289|         3|   9.2268e-05|   3.0756e-05|  0.00%|class MetricMiniBatch(NamedTuple):
(call)|         1|  0.000175714|  0.000175714|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/namedtuple.py:289 MetricMiniBatch
(call)|         1|   0.00411582|   0.00411582|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:1363 __new__
   290|         0|            0|            0|  0.00%|    # All entries should be scalars obtained by averaging over minibatch
   291|         1|  4.76837e-06|  4.76837e-06|  0.00%|    loss: torch.Tensor  # this is the only tensor b/c I need to take gradients
   292|         1|  5.00679e-06|  5.00679e-06|  0.00%|    mse_tot: float
   293|         1|  4.52995e-06|  4.52995e-06|  0.00%|    reg_tot: float
   294|         1|  4.76837e-06|  4.76837e-06|  0.00%|    kl_tot: float
   295|         1|  4.52995e-06|  4.52995e-06|  0.00%|    sparsity_tot: float
   296|         0|            0|            0|  0.00%|
   297|         1|  4.76837e-06|  4.76837e-06|  0.00%|    kl_instance: float
   298|         1|  5.24521e-06|  5.24521e-06|  0.00%|    kl_where: float
   299|         1|  4.52995e-06|  4.52995e-06|  0.00%|    kl_logit: float
   300|         1|  5.00679e-06|  5.00679e-06|  0.00%|    sparsity_mask: float
   301|         1|  4.31538e-05|  4.31538e-05|  0.00%|    sparsity_box: float
   302|         1|  5.72205e-06|  5.72205e-06|  0.00%|    sparsity_prob: float
   303|         1|  4.52995e-06|  4.52995e-06|  0.00%|    reg_overlap: float
   304|         1|  4.52995e-06|  4.52995e-06|  0.00%|    reg_area_obj: float
   305|         0|            0|            0|  0.00%|
   306|         1|  4.52995e-06|  4.52995e-06|  0.00%|    fg_fraction: float
   307|         1|  4.52995e-06|  4.52995e-06|  0.00%|    geco_sparsity: float
   308|         1|  4.29153e-06|  4.29153e-06|  0.00%|    geco_balance: float
   309|         1|   2.0504e-05|   2.0504e-05|  0.00%|    delta_1: float
   310|         1|  4.52995e-06|  4.52995e-06|  0.00%|    delta_2: float
   311|         0|            0|            0|  0.00%|
   312|         1|  5.72205e-06|  5.72205e-06|  0.00%|    similarity_sigma2: numpy.ndarray
   313|         1|  4.52995e-06|  4.52995e-06|  0.00%|    similarity_weights: numpy.ndarray
   314|         0|            0|            0|  0.00%|
   315|         0|            0|            0|  0.00%|
   316|         7|  6.10352e-05|  8.71931e-06|  0.00%|    def pretty_print(self, epoch: int=0) -> str:
   317|         0|            0|            0|  0.00%|        s = "[epoch {0:4d}] loss={1:.3f}, mse={2:.3f}, \
   318|         0|            0|            0|  0.00%|        reg={3:.3f}, kl_tot={4:.3f}, sparsity={5:.3f}, \
   319|         6|  5.65052e-05|  9.41753e-06|  0.00%|        fg_fraction={6:.3f}, geco_sp={7:.3f}, geco_bal={8:.3f}".format(epoch,
   320|         6|  5.24521e-05|  8.74201e-06|  0.00%|                                                                       self.loss,
   321|         6|  3.21865e-05|  5.36442e-06|  0.00%|                                                                       self.mse_tot,
   322|         6|   4.8399e-05|   8.0665e-06|  0.00%|                                                                       self.reg_tot,
   323|         6|  2.88486e-05|  4.80811e-06|  0.00%|                                                                       self.kl_tot,
   324|         6|  3.00407e-05|  5.00679e-06|  0.00%|                                                                       self.sparsity_tot,
   325|         6|  6.22272e-05|  1.03712e-05|  0.00%|                                                                       self.fg_fraction,
   326|         6|  3.31402e-05|  5.52336e-06|  0.00%|                                                                       self.geco_sparsity,
   327|         6|  0.000146389|  2.43982e-05|  0.00%|                                                                       self.geco_balance)
   328|         6|  3.38554e-05|  5.64257e-06|  0.00%|        return s
   329|         0|            0|            0|  0.00%|
   330|         0|            0|            0|  0.00%|
   331|         3|  8.67844e-05|  2.89281e-05|  0.00%|class Output(NamedTuple):
(call)|         1|  3.29018e-05|  3.29018e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/namedtuple.py:331 Output
(call)|         1|   0.00126147|   0.00126147|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:1363 __new__
   332|         1|  4.05312e-06|  4.05312e-06|  0.00%|    metrics: MetricMiniBatch
   333|         1|  4.52995e-06|  4.52995e-06|  0.00%|    inference: Inference
   334|         1|  5.00679e-06|  5.00679e-06|  0.00%|    imgs: torch.Tensor
File: <string>_77
File duration: 0.00410223s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|      1034|   0.00410223|  3.96734e-06|  0.00%|
File: <__array_function__ internals>_88
File duration: 0.0038991s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|       113|  0.000401735|  3.55518e-06|  0.00%|
(call)|         1|  1.09673e-05|  1.09673e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000104189|  0.000104189|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|       111|   0.00135946|  1.22474e-05|  0.00%|
(call)|       111|  0.000895262|  8.06542e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/numeric.py:2193 _isclose_dispatcher
     5|       111|  0.000400543|   3.6085e-06|  0.00%|
     6|       111|   0.00173736|  1.56519e-05|  0.00%|
(call)|       111|    0.0798862|  0.000719695|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/numeric.py:2197 isclose
File: <string>_78
File duration: 0.00367999s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|       834|   0.00367999|  4.41246e-06|  0.00%|
File: <__array_function__ internals>_6
File duration: 0.00352526s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|       143|  0.000469208|  3.28117e-06|  0.00%|
(call)|         1|  1.16825e-05|  1.16825e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000101089|  0.000101089|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|       141|   0.00167513|  1.18803e-05|  0.00%|
(call)|       141|  0.000932693|  6.61485e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/multiarray.py:634 result_type
     5|       141|  0.000478029|  3.39028e-06|  0.00%|
     6|       141|  0.000902891|  6.40348e-06|  0.00%|
File: <string>_42
File duration: 0.00305748s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|       682|   0.00305748|  4.48311e-06|  0.00%|
File: <string>_94
File duration: 0.00292826s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|       712|   0.00292826|  4.11272e-06|  0.00%|
File: <string>_76
File duration: 0.00283909s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|       528|   0.00283909|  5.37706e-06|  0.00%|
File: <__array_function__ internals>_184
File duration: 0.00163746s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|        43|  0.000204086|  4.74619e-06|  0.00%|
(call)|         1|  1.21593e-05|  1.21593e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.32217e-05|  9.32217e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|        41|   0.00060463|  1.47471e-05|  0.00%|
(call)|        41|  0.000339746|   8.2865e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/linalg/linalg.py:473 _unary_dispatcher
     5|        41|  0.000154257|  3.76236e-06|  0.00%|
     6|        41|  0.000674486|  1.64509e-05|  0.00%|
(call)|        41|     0.146268|    0.0035675|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/linalg/linalg.py:477 inv
File: <string>_116
File duration: 0.00159788s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|       194|   0.00159788|   8.2365e-06|  0.00%|
File: <__array_function__ internals>_85
File duration: 0.00153136s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|        50|  0.000204802|  4.09603e-06|  0.00%|
(call)|         1|  1.19209e-05|  1.19209e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000135183|  0.000135183|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|        48|   0.00053072|  1.10567e-05|  0.00%|
(call)|        48|  0.000323772|  6.74526e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/numeric.py:1367 _moveaxis_dispatcher
     5|        48|  0.000155926|  3.24845e-06|  0.00%|
     6|        48|  0.000639915|  1.33316e-05|  0.00%|
(call)|        48|   0.00852585|  0.000177622|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/numeric.py:1371 moveaxis
File: <string>_67
File duration: 0.00152493s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|       262|   0.00152493|  5.82033e-06|  0.00%|
File: <string>_41
File duration: 0.0015099s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|       338|    0.0015099|  4.46717e-06|  0.00%|
File: <__array_function__ internals>_31
File duration: 0.00148797s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|        46|  0.000218153|  4.74246e-06|  0.00%|
(call)|         1|  1.07288e-05|  1.07288e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000105143|  0.000105143|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|        44|  0.000577927|  1.31347e-05|  0.00%|
(call)|        44|  0.000356674|  8.10623e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/fromnumeric.py:835 _sort_dispatcher
     5|        44|  0.000162125|  3.68465e-06|  0.00%|
     6|        44|  0.000529766|  1.20401e-05|  0.00%|
(call)|        44|   0.00195146|  4.43513e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/fromnumeric.py:839 sort
File: <__array_function__ internals>_68
File duration: 0.00145483s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|        42|  0.000175476|    4.178e-06|  0.00%|
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000109434|  0.000109434|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|        40|  0.000573158|   1.4329e-05|  0.00%|
(call)|        40|  0.000300169|  7.50422e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/shape_base.py:136 _atleast_3d_dispatcher
     5|        40|  0.000149727|  3.74317e-06|  0.00%|
     6|        40|  0.000556469|  1.39117e-05|  0.00%|
(call)|        40|    0.0028944|    7.236e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/shape_base.py:140 atleast_3d
File: <__array_function__ internals>_5
File duration: 0.00127435s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|        50|   0.00018096|  3.61919e-06|  0.00%|
(call)|         1|  1.12057e-05|  1.12057e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.94205e-05|  9.94205e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|        48|  0.000552177|  1.15037e-05|  0.00%|
(call)|        48|  0.000336409|  7.00851e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/multiarray.py:583 min_scalar_type
     5|        48|  0.000155449|  3.23852e-06|  0.00%|
     6|        48|  0.000385761|  8.03669e-06|  0.00%|
File: /home/jupyter/REPOS/spacetx-research/src/MODULES/graph_clustering.py
File duration: 0.00124359s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  5.55515e-05|  2.77758e-05|  0.00%|import torch
     2|         1|  1.14441e-05|  1.14441e-05|  0.00%|import numpy
     3|         1|  7.31945e-05|  7.31945e-05|  0.00%|import skimage.segmentation
(call)|         1|     0.279875|     0.279875|  0.06%|# <frozen importlib._bootstrap>:978 _find_and_load
     4|         1|  1.74046e-05|  1.74046e-05|  0.00%|import skimage.color
     5|         1|  8.13007e-05|  8.13007e-05|  0.00%|import leidenalg as la
(call)|         1|      1.63507|      1.63507|  0.34%|# <frozen importlib._bootstrap>:978 _find_and_load
     6|         1|  1.88351e-05|  1.88351e-05|  0.00%|import igraph as ig
     7|         1|  4.41074e-05|  4.41074e-05|  0.00%|from MODULES.namedtuple import Segmentation, Partition, SparseSimilarity, Suggestion, ConcordancePartition
(call)|         1|  2.81334e-05|  2.81334e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
     8|         1|   4.1008e-05|   4.1008e-05|  0.00%|from typing import Optional, List
(call)|         1|  1.95503e-05|  1.95503e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
     9|         1|  4.12464e-05|  4.12464e-05|  0.00%|from matplotlib import pyplot as plt
(call)|         1|  3.91006e-05|  3.91006e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
    10|         1|  1.85966e-05|  1.85966e-05|  0.00%|import neptune
    11|         1|  4.07696e-05|  4.07696e-05|  0.00%|from MODULES.utilities_neptune import log_img_and_chart
(call)|         1|  1.88351e-05|  1.88351e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
    12|         0|            0|            0|  0.00%|
    13|         0|            0|            0|  0.00%|
    14|         0|            0|            0|  0.00%|# I HAVE LEARNED:
    15|         0|            0|            0|  0.00%|# 1. If I use a lot of negihbours then all methods are roughly equivalent b/c graph becomes ALL-TO-ALL
    16|         0|            0|            0|  0.00%|# 2. Radius=10 means each pixel has 121 neighbours
    17|         0|            0|            0|  0.00%|# 3. CPM does not suffer from the resolution limit which means that it tends to shave off small part from a cell.
    18|         0|            0|            0|  0.00%|# 4. For now I prefer to use a graph with normalized edges,
    19|         0|            0|            0|  0.00%|# modularity and single gigantic cluster (i.e. each_cc_component=False)
    20|         0|            0|            0|  0.00%|
    21|         1|  4.48227e-05|  4.48227e-05|  0.00%|with torch.no_grad():
(call)|         1|   5.4121e-05|   5.4121e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/grad_mode.py:65 __enter__
    22|         3|  0.000144482|  4.81606e-05|  0.00%|    class GraphSegmentation(object):
(call)|         1|   0.00252604|   0.00252604|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/graph_clustering.py:22 GraphSegmentation
(call)|         1|  6.34193e-05|  6.34193e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/grad_mode.py:69 __exit__
    23|         0|            0|            0|  0.00%|        """ Produce a consensus segmentation mask by finding communities on a graph.
    24|         0|            0|            0|  0.00%|            Each node is a foreground pixel and each edge is the similarity between spatially nearby pixels.
    25|         0|            0|            0|  0.00%|            The similarity measures if the pixels belong to the same object.
    26|         0|            0|            0|  0.00%|
    27|         0|            0|            0|  0.00%|            Typical usage:
    28|         0|            0|            0|  0.00%|            g = GraphSegmentation(tiling)
    29|         0|            0|            0|  0.00%|
    30|         0|            0|            0|  0.00%|            disconnected_components = g.graph.clusters(mode="STRONG")
    31|         0|            0|            0|  0.00%|            community1=g.partition_2_community(disconnected_components)
    32|         0|            0|            0|  0.00%|            g.plot_community(community1, figsize=(20,20))
    33|         0|            0|            0|  0.00%|
    34|         0|            0|            0|  0.00%|
    35|         0|            0|            0|  0.00%|            partition = g.find_partition(resolution = 0.03)
    36|         0|            0|            0|  0.00%|            community2 = g.partition_2_community(partition, size_threshold=10)
    37|         0|            0|            0|  0.00%|            g.plot_community(community2, figsize=(20,20))
    38|         1|  8.34465e-06|  8.34465e-06|  0.00%|        """
    39|         0|            0|            0|  0.00%|
    40|         0|            0|            0|  0.00%|        def __init__(self, segmentation: Segmentation,
    41|         0|            0|            0|  0.00%|                     min_fg_prob: float = 0.1,
    42|         0|            0|            0|  0.00%|                     min_edge_weight: Optional[float] = 0.01,
    43|         1|  4.19617e-05|  4.19617e-05|  0.00%|                     normalize_graph_edges: bool = False) -> None:
(call)|         1|    4.673e-05|    4.673e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
    44|         0|            0|            0|  0.00%|            super().__init__()
    45|         0|            0|            0|  0.00%|
    46|         0|            0|            0|  0.00%|            if torch.cuda.is_available():
    47|         0|            0|            0|  0.00%|                self.device = torch.device("cuda:0")
    48|         0|            0|            0|  0.00%|            else:
    49|         0|            0|            0|  0.00%|                self.device = torch.device("cpu")
    50|         0|            0|            0|  0.00%|
    51|         0|            0|            0|  0.00%|            self.raw_image = segmentation.raw_image[0].to(self.device)
    52|         0|            0|            0|  0.00%|            self.example_integer_mask = segmentation.integer_mask[0, 0].to(self.device)  # set batch=0, ch=0
    53|         0|            0|            0|  0.00%|
    54|         0|            0|            0|  0.00%|            # it should be able to handle both DenseSimilarity and SparseSimilarity
    55|         0|            0|            0|  0.00%|            b, c, ni, nj = segmentation.integer_mask.shape
    56|         0|            0|            0|  0.00%|            assert b == c == 1
    57|         0|            0|            0|  0.00%|            assert (1, 1, ni, nj) == segmentation.fg_prob.shape
    58|         0|            0|            0|  0.00%|
    59|         0|            0|            0|  0.00%|            self.index_matrix = None
    60|         0|            0|            0|  0.00%|            self.n_fg_pixel = None
    61|         0|            0|            0|  0.00%|            self.i_coordinate_fg_pixel = None
    62|         0|            0|            0|  0.00%|            self.j_coordinate_fg_pixel = None
    63|         0|            0|            0|  0.00%|            self.graph = self.similarity_2_graph(similarity=segmentation.similarity,
    64|         0|            0|            0|  0.00%|                                                 fg_prob=segmentation.fg_prob,
    65|         0|            0|            0|  0.00%|                                                 min_fg_prob=min_fg_prob,
    66|         0|            0|            0|  0.00%|                                                 min_edge_weight=min_edge_weight,
    67|         0|            0|            0|  0.00%|                                                 normalize_graph_edges=normalize_graph_edges)
    68|         0|            0|            0|  0.00%|
    69|         0|            0|            0|  0.00%|            # Connected Component partition
    70|         0|            0|            0|  0.00%|            self._partition_connected_components = None
    71|         0|            0|            0|  0.00%|            self._partition_sample_segmask = None
    72|         0|            0|            0|  0.00%|
    73|         0|            0|            0|  0.00%|            # TODO: Compute median density of connected components so that resolution parameter is about 1
    74|         0|            0|            0|  0.00%|            # self.reference_density = AUCH
    75|         0|            0|            0|  0.00%|
    76|         1|  1.57356e-05|  1.57356e-05|  0.00%|        @property
    77|         0|            0|            0|  0.00%|        def partition_connected_components(self):
    78|         0|            0|            0|  0.00%|            if self._partition_connected_components is None:
    79|         0|            0|            0|  0.00%|                mask = (self.index_matrix >= 0).cpu()
    80|         0|            0|            0|  0.00%|                labels = skimage.measure.label(mask, connectivity=2, background=0, return_num=False)
    81|         0|            0|            0|  0.00%|                membership_from_cc = torch.tensor(labels,
    82|         0|            0|            0|  0.00%|                                                  dtype=torch.long,
    83|         0|            0|            0|  0.00%|                                                  device=self.device)[self.i_coordinate_fg_pixel,
    84|         0|            0|            0|  0.00%|                                                                      self.j_coordinate_fg_pixel]
    85|         0|            0|            0|  0.00%|                self._partition_connected_components = Partition(membership=membership_from_cc,
    86|         0|            0|            0|  0.00%|                                                                 sizes=torch.bincount(membership_from_cc))
    87|         0|            0|            0|  0.00%|            return self._partition_connected_components
    88|         0|            0|            0|  0.00%|
    89|         1|   1.4782e-05|   1.4782e-05|  0.00%|        @property
    90|         0|            0|            0|  0.00%|        def partition_sample_segmask(self):
    91|         0|            0|            0|  0.00%|            if self._partition_sample_segmask is None:
    92|         0|            0|            0|  0.00%|                membership_from_example_segmask = self.example_integer_mask[self.i_coordinate_fg_pixel,
    93|         0|            0|            0|  0.00%|                                                                            self.j_coordinate_fg_pixel].long()
    94|         0|            0|            0|  0.00%|                self._partition_sample_segmask = Partition(membership=membership_from_example_segmask,
    95|         0|            0|            0|  0.00%|                                                           sizes=torch.bincount(membership_from_example_segmask))
    96|         0|            0|            0|  0.00%|            return self._partition_sample_segmask
    97|         0|            0|            0|  0.00%|
    98|         1|   1.3113e-05|   1.3113e-05|  0.00%|        def similarity_2_graph(self, similarity: SparseSimilarity,
    99|         1|  1.40667e-05|  1.40667e-05|  0.00%|                               fg_prob: torch.tensor,
   100|         1|  1.33514e-05|  1.33514e-05|  0.00%|                               min_fg_prob: float,
   101|         1|  2.09808e-05|  2.09808e-05|  0.00%|                               min_edge_weight: float,
   102|         1|  1.71661e-05|  1.71661e-05|  0.00%|                               normalize_graph_edges: bool) -> ig.Graph:
   103|         0|            0|            0|  0.00%|            """ Create the graph from the sparse similarity matrix """
   104|         0|            0|            0|  0.00%|            if not normalize_graph_edges:
   105|         0|            0|            0|  0.00%|                print("WARNING! You are going to create a graph without normalizing the edges by the sqrt of the node degree. \
   106|         0|            0|            0|  0.00%|                       Are you sure you know what you are doing?!")
   107|         0|            0|            0|  0.00%|
   108|         0|            0|            0|  0.00%|            # Move operation on GPU is available. Only at the end move back to cpu
   109|         0|            0|            0|  0.00%|            if torch.cuda.is_available():
   110|         0|            0|            0|  0.00%|                fg_prob = fg_prob.cuda()
   111|         0|            0|            0|  0.00%|                sparse_matrix = similarity.sparse_matrix.cuda()
   112|         0|            0|            0|  0.00%|                similarity_index_matrix = similarity.index_matrix.cuda()
   113|         0|            0|            0|  0.00%|            else:
   114|         0|            0|            0|  0.00%|                sparse_matrix = similarity.sparse_matrix.cpu()
   115|         0|            0|            0|  0.00%|                similarity_index_matrix = similarity.index_matrix.cpu()
   116|         0|            0|            0|  0.00%|
   117|         0|            0|            0|  0.00%|            # Map the location with small fg_prob to index = -1
   118|         0|            0|            0|  0.00%|            vertex_mask = fg_prob[0, 0] > min_fg_prob
   119|         0|            0|            0|  0.00%|            n_max = torch.max(similarity.index_matrix).item()
   120|         0|            0|            0|  0.00%|            transform_index = -1 * torch.ones(n_max + 1, dtype=torch.long, device=similarity_index_matrix.device)
   121|         0|            0|            0|  0.00%|            transform_index[similarity_index_matrix[vertex_mask]] = similarity_index_matrix[vertex_mask]
   122|         0|            0|            0|  0.00%|
   123|         0|            0|            0|  0.00%|            # Do the remapping (old to medium)
   124|         0|            0|            0|  0.00%|            v_tmp = sparse_matrix._values()
   125|         0|            0|            0|  0.00%|            ij_tmp = transform_index[sparse_matrix._indices()]
   126|         0|            0|            0|  0.00%|
   127|         0|            0|            0|  0.00%|            # Do the filtering
   128|         0|            0|            0|  0.00%|            my_filter = (v_tmp > min_edge_weight) * (ij_tmp[0, :] >= 0) * (ij_tmp[1, :] >= 0)
   129|         0|            0|            0|  0.00%|            v = v_tmp[my_filter]
   130|         0|            0|            0|  0.00%|            ij = ij_tmp[:, my_filter]
   131|         0|            0|            0|  0.00%|
   132|         0|            0|            0|  0.00%|            # Shift the labels so that there are no gaps (medium to new)
   133|         0|            0|            0|  0.00%|            ij_present = (torch.bincount(ij.view(-1)) > 0)
   134|         0|            0|            0|  0.00%|            self.n_fg_pixel = ij_present.sum().item()
   135|         0|            0|            0|  0.00%|            medium_2_new = (torch.cumsum(ij_present, dim=-1) * ij_present) - 1
   136|         0|            0|            0|  0.00%|            ij_new = medium_2_new[ij]
   137|         0|            0|            0|  0.00%|
   138|         0|            0|            0|  0.00%|            # Make a transformation of the index_matrix (old to new)
   139|         0|            0|            0|  0.00%|            transform_index.fill_(-1)
   140|         0|            0|            0|  0.00%|            transform_index[sparse_matrix._indices()[:, my_filter]] = ij_new
   141|         0|            0|            0|  0.00%|            self.index_matrix = transform_index[similarity_index_matrix]
   142|         0|            0|            0|  0.00%|            ni, nj = self.index_matrix.shape[-2:]
   143|         0|            0|            0|  0.00%|
   144|         0|            0|            0|  0.00%|            i_matrix, j_matrix = torch.meshgrid([torch.arange(ni, dtype=torch.long, device=self.index_matrix.device),
   145|         0|            0|            0|  0.00%|                                                 torch.arange(nj, dtype=torch.long, device=self.index_matrix.device)])
   146|         0|            0|            0|  0.00%|            self.i_coordinate_fg_pixel = i_matrix[self.index_matrix >= 0]
   147|         0|            0|            0|  0.00%|            self.j_coordinate_fg_pixel = j_matrix[self.index_matrix >= 0]
   148|         0|            0|            0|  0.00%|
   149|         0|            0|            0|  0.00%|            # Check
   150|         0|            0|            0|  0.00%|            tmp = -1 * torch.ones_like(self.index_matrix)
   151|         0|            0|            0|  0.00%|            tmp[self.i_coordinate_fg_pixel,
   152|         0|            0|            0|  0.00%|                self.j_coordinate_fg_pixel] = torch.arange(self.n_fg_pixel,
   153|         0|            0|            0|  0.00%|                                                           dtype=torch.long,
   154|         0|            0|            0|  0.00%|                                                           device=self.device)
   155|         0|            0|            0|  0.00%|            assert (tmp == self.index_matrix).all()
   156|         0|            0|            0|  0.00%|
   157|         0|            0|            0|  0.00%|            # Normalize the edges if necessary
   158|         0|            0|            0|  0.00%|            if normalize_graph_edges:
   159|         0|            0|            0|  0.00%|                # Before normalization v ~ 1.
   160|         0|            0|            0|  0.00%|                # After normalization v ~ 1/#neighbors so that sum_i v_ij ~ 1
   161|         0|            0|            0|  0.00%|                m = torch.sparse.FloatTensor(ij_new, v, torch.Size([self.n_fg_pixel, self.n_fg_pixel]))
   162|         0|            0|            0|  0.00%|                m_tmp = (torch.sparse.sum(m, dim=-1) + torch.sparse.sum(m, dim=-2)).coalesce()
   163|         0|            0|            0|  0.00%|                sqrt_sum_edges_at_vertex = torch.sqrt(m_tmp._values())
   164|         0|            0|            0|  0.00%|                v.div_(sqrt_sum_edges_at_vertex[ij_new[0]]*sqrt_sum_edges_at_vertex[ij_new[1]])
   165|         0|            0|            0|  0.00%|
   166|         0|            0|            0|  0.00%|            print("Building the graph with python-igraph")
   167|         0|            0|            0|  0.00%|            return ig.Graph(vertex_attrs={"label": numpy.arange(self.n_fg_pixel, dtype=numpy.int64)},
   168|         0|            0|            0|  0.00%|                            edges=ij_new.permute(1, 0).cpu().numpy(),
   169|         0|            0|            0|  0.00%|                            edge_attrs={"weight": v.cpu().numpy()},
   170|         0|            0|            0|  0.00%|                            graph_attrs={"total_edge_weight": v.sum().item(),
   171|         0|            0|            0|  0.00%|                                         "total_nodes": self.n_fg_pixel},
   172|         0|            0|            0|  0.00%|                            directed=False)
   173|         0|            0|            0|  0.00%|
   174|         1|  1.64509e-05|  1.64509e-05|  0.00%|        def partition_2_label(self, partition: Partition):
   175|         0|            0|            0|  0.00%|            label = torch.zeros_like(self.index_matrix,
   176|         0|            0|            0|  0.00%|                                     dtype=partition.membership.dtype,
   177|         0|            0|            0|  0.00%|                                     device=partition.membership.device)
   178|         0|            0|            0|  0.00%|            label[self.i_coordinate_fg_pixel, self.j_coordinate_fg_pixel] = partition.membership
   179|         0|            0|            0|  0.00%|            return label
   180|         0|            0|            0|  0.00%|
   181|         1|  1.40667e-05|  1.40667e-05|  0.00%|        def is_vertex_in_window(self, window: tuple):
   182|         0|            0|            0|  0.00%|            """ Same convention as scikit image:
   183|         0|            0|            0|  0.00%|                window = (min_row, min_col, max_row, max_col)
   184|         0|            0|            0|  0.00%|                Return boolean array describing whether the vertex is in the spatial windows
   185|         0|            0|            0|  0.00%|            """
   186|         0|            0|            0|  0.00%|            row_filter = (self.i_coordinate_fg_pixel >= window[0]) * (self.i_coordinate_fg_pixel < window[2])
   187|         0|            0|            0|  0.00%|            col_filter = (self.j_coordinate_fg_pixel >= window[1]) * (self.j_coordinate_fg_pixel < window[3])
   188|         0|            0|            0|  0.00%|            vertex_in_window = row_filter * col_filter
   189|         0|            0|            0|  0.00%|            if (~vertex_in_window).all():
   190|         0|            0|            0|  0.00%|                raise Exception("All vertices are outside the chosen window. \
   191|         0|            0|            0|  0.00%|                                 This is wrong. Doulbe check your window specifications")
   192|         0|            0|            0|  0.00%|            return vertex_in_window
   193|         0|            0|            0|  0.00%|
   194|         0|            0|            0|  0.00%|        def subgraphs_by_partition_and_window(self,
   195|         0|            0|            0|  0.00%|                                              partition: Optional[Partition],
   196|         0|            0|            0|  0.00%|                                              window: Optional[tuple],
   197|         1|  9.91821e-05|  9.91821e-05|  0.00%|                                              include_bg: bool = False) -> List[ig.Graph]:
(call)|         3|   0.00146151|  0.000487169|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
   198|         0|            0|            0|  0.00%|            """ same covention as scikit image: window = (min_row, min_col, max_row, max_col) """
   199|         0|            0|            0|  0.00%|
   200|         0|            0|            0|  0.00%|            if (partition is None) and (window is None):
   201|         0|            0|            0|  0.00%|                # nothing to do
   202|         0|            0|            0|  0.00%|                for i in range(1):
   203|         0|            0|            0|  0.00%|                    yield self.graph
   204|         0|            0|            0|  0.00%|
   205|         0|            0|            0|  0.00%|            elif (partition is None) and (window is not None):
   206|         0|            0|            0|  0.00%|                # return a single graph by window
   207|         0|            0|            0|  0.00%|                mask_vertex_in_window = self.is_vertex_in_window(window)  # torch.bool
   208|         0|            0|            0|  0.00%|                vertex_label = torch.tensor(self.graph.vs["label"], dtype=torch.long, device=self.device)
   209|         0|            0|            0|  0.00%|                for i in range(1):
   210|         0|            0|            0|  0.00%|                    yield self.graph.subgraph(vertices=vertex_label[mask_vertex_in_window])
   211|         0|            0|            0|  0.00%|
   212|         0|            0|            0|  0.00%|            elif partition is not None:
   213|         0|            0|            0|  0.00%|                # return many graphs
   214|         0|            0|            0|  0.00%|
   215|         0|            0|            0|  0.00%|                if window is None:
   216|         0|            0|            0|  0.00%|                    vertex_in_window = torch.ones_like(partition.membership).bool()
   217|         0|            0|            0|  0.00%|                else:
   218|         0|            0|            0|  0.00%|                    vertex_in_window = self.is_vertex_in_window(window)
   219|         0|            0|            0|  0.00%|
   220|         0|            0|            0|  0.00%|                vertex_label = torch.tensor(self.graph.vs["label"], dtype=torch.long, device=self.device)
   221|         0|            0|            0|  0.00%|                n_start = 0 if include_bg else 1
   222|         0|            0|            0|  0.00%|                for n in range(n_start, len(partition.sizes)):
   223|         0|            0|            0|  0.00%|                    vertex_mask = (partition.membership == n) * vertex_in_window
   224|         0|            0|            0|  0.00%|                    yield self.graph.subgraph(vertices=vertex_label[vertex_mask])
   225|         0|            0|            0|  0.00%|
   226|         0|            0|            0|  0.00%|        def suggest_resolution_parameter(self,
   227|         0|            0|            0|  0.00%|                                         window: Optional[tuple] = None,
   228|         0|            0|            0|  0.00%|                                         min_size: Optional[float] = 20,
   229|         0|            0|            0|  0.00%|                                         max_size: Optional[float] = None,
   230|         0|            0|            0|  0.00%|                                         cpm_or_modularity: str = "cpm",
   231|         0|            0|            0|  0.00%|                                         each_cc_separately: bool = False,
   232|         1|  9.94205e-05|  9.94205e-05|  0.00%|                                         sweep_range: Optional[numpy.ndarray] = None) -> Suggestion:
(call)|         4|  0.000110388|   2.7597e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
   233|         0|            0|            0|  0.00%|            """ This function select the resolution parameter which gives the hightest
   234|         0|            0|            0|  0.00%|                Intersection Over Union with the target partition.
   235|         0|            0|            0|  0.00%|                By default the target partition is self.partition_sample_segmask.
   236|         0|            0|            0|  0.00%|
   237|         0|            0|            0|  0.00%|                To speed up the calculation the optimal resolution parameter is computed based
   238|         0|            0|            0|  0.00%|                on a windows of the original image. If window is None the entire image is used. This might be very slow.
   239|         0|            0|            0|  0.00%|
   240|         0|            0|            0|  0.00%|                Only CPM is scale invariant.
   241|         0|            0|            0|  0.00%|                If using modularity the same resolution paerameter will give different results depending on the size of the analyzed window.
   242|         0|            0|            0|  0.00%|
   243|         0|            0|            0|  0.00%|                The suggested resolution parameter is NOT necessarily optimal.
   244|         0|            0|            0|  0.00%|                Try smaller values to undersegment and larger value to oversegment.
   245|         0|            0|            0|  0.00%|
   246|         0|            0|            0|  0.00%|                window = (min_row, min_col, max_row, max_col)
   247|         0|            0|            0|  0.00%|            """
   248|         0|            0|            0|  0.00%|
   249|         0|            0|            0|  0.00%|            # filter by window
   250|         0|            0|            0|  0.00%|            if window is None:
   251|         0|            0|            0|  0.00%|                window = [0, 0, self.raw_image.shape[-2], self.raw_image.shape[-1]]
   252|         0|            0|            0|  0.00%|                other_partition = self.partition_sample_segmask
   253|         0|            0|            0|  0.00%|            else:
   254|         0|            0|            0|  0.00%|                window = (max(0, window[0]),
   255|         0|            0|            0|  0.00%|                          max(0, window[1]),
   256|         0|            0|            0|  0.00%|                          min(self.raw_image.shape[-2], window[2]),
   257|         0|            0|            0|  0.00%|                          min(self.raw_image.shape[-1], window[3]))
   258|         0|            0|            0|  0.00%|                vertex_in_window = self.is_vertex_in_window(window)
   259|         0|            0|            0|  0.00%|                # NEXT LINE IS A BIT SLOW
   260|         0|            0|            0|  0.00%|                other_partition = self.partition_sample_segmask.filter_by_vertex(keep_vertex=vertex_in_window)
   261|         0|            0|            0|  0.00%|
   262|         0|            0|            0|  0.00%|            resolutions = numpy.arange(0.5, 10, 0.5) if sweep_range is None else sweep_range
   263|         0|            0|            0|  0.00%|            iou = numpy.zeros(resolutions.shape[0], dtype=float)
   264|         0|            0|            0|  0.00%|            mi = numpy.zeros_like(iou)
   265|         0|            0|            0|  0.00%|            label = numpy.zeros((resolutions.shape[0], window[2]-window[0], window[3]-window[1]), dtype=numpy.int)
   266|         0|            0|            0|  0.00%|            delta_n_cells = numpy.zeros(resolutions.shape[0], dtype=numpy.int)
   267|         0|            0|            0|  0.00%|            n_cells = numpy.zeros_like(delta_n_cells)
   268|         0|            0|            0|  0.00%|            sizes_list = list()
   269|         0|            0|            0|  0.00%|
   270|         0|            0|            0|  0.00%|            for n, res in enumerate(resolutions):
   271|         0|            0|            0|  0.00%|                if (n % 10 == 0) or (n == resolutions.shape[0]-1) :
   272|         0|            0|            0|  0.00%|                    print("resolution sweep, {0:3d} out of {1:3d}".format(n, resolutions.shape[0]-1))
   273|         0|            0|            0|  0.00%|
   274|         0|            0|            0|  0.00%|                p_tmp = self.find_partition_leiden(resolution=res,
   275|         0|            0|            0|  0.00%|                                                   window=window,
   276|         0|            0|            0|  0.00%|                                                   min_size=min_size,
   277|         0|            0|            0|  0.00%|                                                   max_size=max_size,
   278|         0|            0|            0|  0.00%|                                                   cpm_or_modularity=cpm_or_modularity,
   279|         0|            0|            0|  0.00%|                                                   each_cc_separately=each_cc_separately)
   280|         0|            0|            0|  0.00%|
   281|         0|            0|            0|  0.00%|                #TODO: the following lines are very slow for a large graph
   282|         0|            0|            0|  0.00%|                n_cells[n] = len(p_tmp.sizes)-1
   283|         0|            0|            0|  0.00%|                label[n] = self.partition_2_label(p_tmp)[window[0]:window[2], window[1]:window[3]].cpu().numpy()
   284|         0|            0|            0|  0.00%|                sizes_list.append(p_tmp.sizes.cpu().numpy())
   285|         0|            0|            0|  0.00%|
   286|         0|            0|            0|  0.00%|                # Conpute concordance
   287|         0|            0|            0|  0.00%|                c_tmp: ConcordancePartition = p_tmp.concordance_with_partition(other_partition=other_partition)
   288|         0|            0|            0|  0.00%|                delta_n_cells[n] = c_tmp.delta_n
   289|         0|            0|            0|  0.00%|                iou[n] = c_tmp.iou
   290|         0|            0|            0|  0.00%|                mi[n] = c_tmp.mutual_information
   291|         0|            0|            0|  0.00%|
   292|         0|            0|            0|  0.00%|            i_max = numpy.argmax(iou)
   293|         0|            0|            0|  0.00%|            return Suggestion(best_resolution=resolutions[i_max],
   294|         0|            0|            0|  0.00%|                              best_index=i_max.item(),
   295|         0|            0|            0|  0.00%|                              sweep_resolution=resolutions,
   296|         0|            0|            0|  0.00%|                              sweep_mi=mi,
   297|         0|            0|            0|  0.00%|                              sweep_iou=iou,
   298|         0|            0|            0|  0.00%|                              sweep_delta_n=delta_n_cells,
   299|         0|            0|            0|  0.00%|                              sweep_seg_mask=label,
   300|         0|            0|            0|  0.00%|                              sweep_sizes=sizes_list,
   301|         0|            0|            0|  0.00%|                              sweep_n_cells=n_cells)
   302|         0|            0|            0|  0.00%|
   303|         0|            0|            0|  0.00%|        # TODO use built-in leiden algorithm instead of leidenalg?
   304|         0|            0|            0|  0.00%|        def find_partition_leiden(self,
   305|         0|            0|            0|  0.00%|                                  resolution: float,
   306|         0|            0|            0|  0.00%|                                  window: Optional[tuple] = None,
   307|         0|            0|            0|  0.00%|                                  min_size: Optional[float] = 20,
   308|         0|            0|            0|  0.00%|                                  max_size: Optional[float] = None,
   309|         0|            0|            0|  0.00%|                                  cpm_or_modularity: str = "cpm",
   310|         0|            0|            0|  0.00%|                                  each_cc_separately: bool = False,
   311|         0|            0|            0|  0.00%|                                  n_iterations: int = 2,
   312|         1|  8.72612e-05|  8.72612e-05|  0.00%|                                  initial_membership: Optional[numpy.ndarray] = None) -> Partition:
(call)|         4|  0.000104904|   2.6226e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
   313|         0|            0|            0|  0.00%|            """ Find a partition of the graph by greedy maximization of CPM or Modularity metric.
   314|         0|            0|            0|  0.00%|                The graph can have both normalized and un-normalized weight.
   315|         0|            0|            0|  0.00%|                The strong recommendation is to use CPM with normalized edge weight.
   316|         0|            0|            0|  0.00%|
   317|         0|            0|            0|  0.00%|                The metric can be both cpm or modularity
   318|         0|            0|            0|  0.00%|                The results are all similar (provided the resolution parameter is tuned correctly).
   319|         0|            0|            0|  0.00%|
   320|         0|            0|            0|  0.00%|                If you want to use the suggest_resolution_parameter function with full automatic you should use either:
   321|         0|            0|            0|  0.00%|                1. CPM with normalized edge weight
   322|         0|            0|            0|  0.00%|                2. MODULARITY with UN Normalized edge_weight
   323|         0|            0|            0|  0.00%|
   324|         0|            0|            0|  0.00%|                You can also pass a sweep_range.
   325|         0|            0|            0|  0.00%|
   326|         0|            0|            0|  0.00%|                The resolution parameter can be increased (to obtain smaller communities) or
   327|         0|            0|            0|  0.00%|                decreased (to obtain larger communities).
   328|         0|            0|            0|  0.00%|
   329|         0|            0|            0|  0.00%|                To speed up the calculation the graph partitioning can be done separately for each connected components.
   330|         0|            0|            0|  0.00%|                This is absolutely ok for CPM metric while a bit questionable for Modularity metric.
   331|         0|            0|            0|  0.00%|                It is not likely to make much difference either way.
   332|         0|            0|            0|  0.00%|
   333|         0|            0|            0|  0.00%|                window has the same convention as scikit image, i.e. window = (min_row, min_col, max_row, max_col)
   334|         0|            0|            0|  0.00%|            """
   335|         0|            0|            0|  0.00%|
   336|         0|            0|            0|  0.00%|            if cpm_or_modularity == "cpm":
   337|         0|            0|            0|  0.00%|                partition_type = la.CPMVertexPartition
   338|         0|            0|            0|  0.00%|
   339|         0|            0|            0|  0.00%|                #TODO: Rescale the resolution by some (robust) properties of the full graph so that the right resolution parameter is about 1
   340|         0|            0|            0|  0.00%|                raise NotImplementedError
   341|         0|            0|            0|  0.00%|                n = self.graph["total_nodes"]
   342|         0|            0|            0|  0.00%|                overall_graph_density = self.graph["total_edge_weight"] * 2.0 / (n * (n - 1))
   343|         0|            0|            0|  0.00%|                resolution = overall_graph_density * resolution
   344|         0|            0|            0|  0.00%|
   345|         0|            0|            0|  0.00%|            elif cpm_or_modularity == "modularity":
   346|         0|            0|            0|  0.00%|                partition_type = la.RBConfigurationVertexPartition
   347|         0|            0|            0|  0.00%|            else:
   348|         0|            0|            0|  0.00%|                raise Exception("Warning!! Argument not recognized. \
   349|         0|            0|            0|  0.00%|                                           CPM_or_modularity can only be 'CPM' or 'modularity'")
   350|         0|            0|            0|  0.00%|
   351|         0|            0|            0|  0.00%|            # Subset graph by connected components and windows if necessary
   352|         0|            0|            0|  0.00%|            max_label = 0
   353|         0|            0|            0|  0.00%|            membership = torch.zeros(self.n_fg_pixel, dtype=torch.long, device=self.device)
   354|         0|            0|            0|  0.00%|            partition_for_subgraphs = self.partition_connected_components if each_cc_separately else None
   355|         0|            0|            0|  0.00%|
   356|         0|            0|            0|  0.00%|            for n, g in enumerate(self.subgraphs_by_partition_and_window(window=window,
   357|         0|            0|            0|  0.00%|                                                                         partition=partition_for_subgraphs)):
   358|         0|            0|            0|  0.00%|
   359|         0|            0|            0|  0.00%|                # With this rescaling the value of the resolution parameter optimized
   360|         0|            0|            0|  0.00%|                # for a small window can be used to segment a large window
   361|         0|            0|            0|  0.00%|                if cpm_or_modularity == "modularity":
   362|         0|            0|            0|  0.00%|                    tmp = numpy.sum(g.es["weight"]) / g["total_edge_weight"]
   363|         0|            0|            0|  0.00%|                    resolution = resolution * tmp
   364|         0|            0|            0|  0.00%|
   365|         0|            0|            0|  0.00%|                if g.vcount() > 0:
   366|         0|            0|            0|  0.00%|                    # Only if the graph has node I tried to find the partition
   367|         0|            0|            0|  0.00%|
   368|         0|            0|            0|  0.00%|                    print("find partition internal")
   369|         0|            0|            0|  0.00%|                    p = la.find_partition(graph=g,
   370|         0|            0|            0|  0.00%|                                          partition_type=partition_type,
   371|         0|            0|            0|  0.00%|                                          initial_membership=initial_membership,
   372|         0|            0|            0|  0.00%|                                          weights=g.es['weight'],
   373|         0|            0|            0|  0.00%|                                          n_iterations=n_iterations,
   374|         0|            0|            0|  0.00%|                                          resolution_parameter=resolution)
   375|         0|            0|            0|  0.00%|
   376|         0|            0|            0|  0.00%|                    labels = torch.tensor(p.membership, device=self.device, dtype=torch.long) + 1
   377|         0|            0|            0|  0.00%|                    shifted_labels = labels + max_label
   378|         0|            0|            0|  0.00%|                    max_label += torch.max(labels)
   379|         0|            0|            0|  0.00%|                    membership[g.vs['label']] = shifted_labels
   380|         0|            0|            0|  0.00%|
   381|         0|            0|            0|  0.00%|            # TODO: filter_by_size is slow
   382|         0|            0|            0|  0.00%|            return Partition(sizes=torch.bincount(membership),
   383|         0|            0|            0|  0.00%|                             membership=membership).filter_by_size(min_size=min_size, max_size=max_size)
   384|         0|            0|            0|  0.00%|
   385|         1|  1.50204e-05|  1.50204e-05|  0.00%|        def QC_on_label(self, old_label, min_area):
   386|         0|            0|            0|  0.00%|            """ This function filter the labels by some criteria. For example by min size"""
   387|         0|            0|            0|  0.00%|            labels = skimage.measure.label(old_label.cpu(), background=0, return_num=False, connectivity=2)
   388|         0|            0|            0|  0.00%|            mydict = skimage.measure.regionprops_table(labels, properties=['label', 'area'])
   389|         0|            0|            0|  0.00%|            my_filter = mydict["area"] > min_area
   390|         0|            0|            0|  0.00%|
   391|         0|            0|            0|  0.00%|            bad_labels = mydict["label"][~my_filter]
   392|         0|            0|            0|  0.00%|            old2new = numpy.arange(mydict["label"][-1]+1)
   393|         0|            0|            0|  0.00%|            old2new[bad_labels] = 0
   394|         0|            0|            0|  0.00%|            new_labels = old2new[labels].astype(numpy.int32)
   395|         0|            0|            0|  0.00%|            return new_labels
   396|         0|            0|            0|  0.00%|
   397|         0|            0|            0|  0.00%|        def plot_partition(self, partition: Optional[Partition] = None,
   398|         0|            0|            0|  0.00%|                           figsize: Optional[tuple] = (12, 12),
   399|         0|            0|            0|  0.00%|                           window: Optional[tuple] = None,
   400|         0|            0|            0|  0.00%|                           experiment: Optional[neptune.experiments.Experiment] = None,
   401|         1|  0.000103712|  0.000103712|  0.00%|                           neptune_name: Optional[str] = None,
(call)|         5|  0.000154495|   3.0899e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
   402|         1|  1.62125e-05|  1.62125e-05|  0.00%|                           **kargs) -> torch.tensor:
   403|         0|            0|            0|  0.00%|            """
   404|         0|            0|            0|  0.00%|                If partition is None it prints the connected components
   405|         0|            0|            0|  0.00%|                window has the same convention as scikit image, i.e. window = (min_row, min_col, max_row, max_col)
   406|         0|            0|            0|  0.00%|                kargs can include:
   407|         0|            0|            0|  0.00%|                density=True, bins=50, range=(10,100), ...
   408|         0|            0|            0|  0.00%|            """
   409|         0|            0|            0|  0.00%|
   410|         0|            0|            0|  0.00%|            if partition is None:
   411|         0|            0|            0|  0.00%|                partition = self.partition_connected_components
   412|         0|            0|            0|  0.00%|
   413|         0|            0|            0|  0.00%|            if window is None:
   414|         0|            0|            0|  0.00%|                w = [0, 0, self.raw_image.shape[-2], self.raw_image.shape[-1]]
   415|         0|            0|            0|  0.00%|                sizes_fg = partition.sizes[1:]  # no background
   416|         0|            0|            0|  0.00%|            else:
   417|         0|            0|            0|  0.00%|                sizes = torch.bincount(self.is_vertex_in_window(window=window) * partition.membership)
   418|         0|            0|            0|  0.00%|                sizes_fg = sizes[1:]  # no background
   419|         0|            0|            0|  0.00%|                sizes_fg = sizes_fg[sizes_fg > 0]  # since I am filtering the vertex some sizes might become zero
   420|         0|            0|            0|  0.00%|                w = window
   421|         0|            0|            0|  0.00%|
   422|         0|            0|            0|  0.00%|            label = self.partition_2_label(partition)[w[0]:w[2], w[1]:w[3]].cpu().long().numpy()  # shape: w, h
   423|         0|            0|            0|  0.00%|            image = self.raw_image[:, w[0]:w[2], w[1]:w[3]].permute(1, 2, 0).cpu().float().numpy()  # shape: w, h, ch
   424|         0|            0|            0|  0.00%|            if len(image.shape) == 3 and (image.shape[-1] != 3):
   425|         0|            0|            0|  0.00%|                image = image[..., 0]
   426|         0|            0|            0|  0.00%|
   427|         0|            0|            0|  0.00%|            fig, axes = plt.subplots(ncols=2, nrows=2, figsize=figsize)
   428|         0|            0|            0|  0.00%|            axes[0, 0].imshow(skimage.color.label2rgb(label=label,
   429|         0|            0|            0|  0.00%|                                                      bg_label=0))
   430|         0|            0|            0|  0.00%|            axes[0, 1].imshow(skimage.color.label2rgb(label=label,
   431|         0|            0|            0|  0.00%|                                                      image=image,
   432|         0|            0|            0|  0.00%|                                                      alpha=0.25,
   433|         0|            0|            0|  0.00%|                                                      bg_label=0))
   434|         0|            0|            0|  0.00%|            axes[1, 0].imshow(image)
   435|         0|            0|            0|  0.00%|            axes[1, 1].hist(sizes_fg.cpu(), **kargs)
   436|         0|            0|            0|  0.00%|
   437|         0|            0|            0|  0.00%|            title_partition = 'Partition, #cells -> '+str(sizes_fg.shape[0])
   438|         0|            0|            0|  0.00%|            axes[0, 0].set_title(title_partition)
   439|         0|            0|            0|  0.00%|            axes[0, 1].set_title(title_partition)
   440|         0|            0|            0|  0.00%|            axes[1, 0].set_title("raw image")
   441|         0|            0|            0|  0.00%|            axes[1, 1].set_title("size distribution")
   442|         0|            0|            0|  0.00%|
   443|         0|            0|            0|  0.00%|            fig.tight_layout()
   444|         0|            0|            0|  0.00%|            if neptune_name is not None:
   445|         0|            0|            0|  0.00%|                log_img_and_chart(name=neptune_name, fig=fig, experiment=experiment)
   446|         0|            0|            0|  0.00%|            plt.close(fig)
   447|         0|            0|            0|  0.00%|            return fig
   448|         0|            0|            0|  0.00%|
   449|         0|            0|            0|  0.00%|
File: <__array_function__ internals>_42
File duration: 0.00119472s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|        40|  0.000141621|  3.54052e-06|  0.00%|
(call)|         1|  1.07288e-05|  1.07288e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.84533e-05|  8.84533e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|        38|   0.00043869|  1.15445e-05|  0.00%|
(call)|        38|  0.000268936|  7.07727e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/fromnumeric.py:1911 _shape_dispatcher
     5|        38|  0.000133514|  3.51354e-06|  0.00%|
     6|        38|   0.00048089|   1.2655e-05|  0.00%|
(call)|        38|  0.000964403|   2.5379e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/fromnumeric.py:1915 shape
File: <__array_function__ internals>_143
File duration: 0.00105381s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|        32|  0.000169039|  5.28246e-06|  0.00%|
(call)|         1|  1.50204e-05|  1.50204e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.91821e-05|  9.91821e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|        30|  0.000343561|   1.1452e-05|  0.00%|
(call)|        30|  0.000215054|  7.16845e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/function_base.py:18 _linspace_dispatcher
     5|        30|  9.98974e-05|  3.32991e-06|  0.00%|
     6|        30|  0.000441313|  1.47104e-05|  0.00%|
(call)|        30|    0.0128176|  0.000427254|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/function_base.py:23 linspace
File: <string>_4
File duration: 0.00104952s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|       260|   0.00104952|  4.03661e-06|  0.00%|
File: <string>_117
File duration: 0.000984907s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|       146|  0.000984907|  6.74594e-06|  0.00%|
File: <__array_function__ internals>_75
File duration: 0.000944138s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|        30|  0.000120163|  4.00543e-06|  0.00%|
(call)|         1|  1.12057e-05|  1.12057e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.05991e-05|  9.05991e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|        28|  0.000386238|  1.37942e-05|  0.00%|
(call)|        28|   0.00022459|  8.02108e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/numeric.py:319 _full_like_dispatcher
     5|        28|  9.82285e-05|  3.50816e-06|  0.00%|
     6|        28|  0.000339508|  1.21253e-05|  0.00%|
(call)|        28|   0.00304532|  0.000108761|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/numeric.py:323 full_like
File: <string>_115
File duration: 0.000905991s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|       146|  0.000905991|  6.20542e-06|  0.00%|
File: <__array_function__ internals>_285
File duration: 0.000860929s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  0.000860929|  0.000430465|  0.00%|
(call)|         1|  1.21593e-05|  1.21593e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000178814|  0.000178814|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_265
File duration: 0.000855446s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|        22|  0.000142336|  6.46981e-06|  0.00%|
(call)|         1|  1.16825e-05|  1.16825e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.27448e-05|  9.27448e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|        20|  0.000323534|  1.61767e-05|  0.00%|
(call)|        20|  0.000165462|  8.27312e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/shape_base.py:1167 _tile_dispatcher
     5|        20|  7.67708e-05|  3.83854e-06|  0.00%|
     6|        20|  0.000312805|  1.56403e-05|  0.00%|
(call)|        20|   0.00297546|  0.000148773|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/shape_base.py:1171 tile
File: <__array_function__ internals>_86
File duration: 0.000801086s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|        18|  0.000224352|   1.2464e-05|  0.00%|
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.36985e-05|  9.36985e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|        16|  0.000230312|  1.43945e-05|  0.00%|
(call)|        16|  0.000155926|  9.74536e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/numeric.py:1448 _cross_dispatcher
     5|        16|   5.6982e-05|  3.56138e-06|  0.00%|
     6|        16|   0.00028944|    1.809e-05|  0.00%|
(call)|        16|    0.0154195|  0.000963718|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/numeric.py:1452 cross
File: <string>_79
File duration: 0.000735998s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|       210|  0.000735998|  3.50475e-06|  0.00%|
File: <__array_function__ internals>_2
File duration: 0.000734568s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|        26|  0.000130892|   5.0343e-06|  0.00%|
(call)|         1|  1.09673e-05|  1.09673e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000100613|  0.000100613|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|        24|   0.00028348|  1.18117e-05|  0.00%|
(call)|        24|  0.000176191|  7.34131e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/multiarray.py:311 where
     5|        24|  8.82149e-05|  3.67562e-06|  0.00%|
     6|        24|  0.000231981|  9.66589e-06|  0.00%|
File: <string>_124
File duration: 0.000592947s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|        48|  0.000592947|  1.23531e-05|  0.00%|
File: <string>_147
File duration: 0.000543594s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|        72|  0.000543594|  7.54992e-06|  0.00%|
File: <__array_function__ internals>_71
File duration: 0.000539541s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|        14|  8.96454e-05|  6.40324e-06|  0.00%|
(call)|         1|  1.19209e-05|  1.19209e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000104189|  0.000104189|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|        12|  0.000204802|  1.70668e-05|  0.00%|
(call)|        12|  0.000425577|  3.54648e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/shape_base.py:349 _stack_dispatcher
     5|        12|  4.43459e-05|  3.69549e-06|  0.00%|
     6|        12|  0.000200748|   1.6729e-05|  0.00%|
(call)|        12|   0.00277901|  0.000231584|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/shape_base.py:358 stack
File: <__array_function__ internals>_199
File duration: 0.000510216s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|        14|   9.2268e-05|  6.59057e-06|  0.00%|
(call)|         1|  1.21593e-05|  1.21593e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.58443e-05|  9.58443e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|        12|  0.000187397|  1.56164e-05|  0.00%|
(call)|        12|  8.15392e-05|  6.79493e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/linalg/linalg.py:2359 _norm_dispatcher
     5|        12|  4.14848e-05|  3.45707e-06|  0.00%|
     6|        12|  0.000189066|  1.57555e-05|  0.00%|
(call)|        12|   0.00195169|  0.000162641|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/linalg/linalg.py:2363 norm
File: <string>_159
File duration: 0.000482321s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|        46|  0.000482321|  1.04852e-05|  0.00%|
File: <string>_19
File duration: 0.00043416s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|       108|   0.00043416|     4.02e-06|  0.00%|
File: <__array_function__ internals>_10
File duration: 0.000420094s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|        10|  6.50883e-05|  6.50883e-06|  0.00%|
(call)|         1|  1.09673e-05|  1.09673e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000111103|  0.000111103|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|         8|  0.000119448|   1.4931e-05|  0.00%|
(call)|         8|  6.29425e-05|  7.86781e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/multiarray.py:929 ravel_multi_index
     5|         8|  3.29018e-05|  4.11272e-06|  0.00%|
     6|         8|  0.000202656|   2.5332e-05|  0.00%|
File: <string>_122
File duration: 0.000401974s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|        50|  0.000401974|  8.03947e-06|  0.00%|
File: <__array_function__ internals>_23
File duration: 0.000378132s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|        14|  6.96182e-05|  4.97273e-06|  0.00%|
(call)|         1|  1.21593e-05|  1.21593e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.72748e-05|  9.72748e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|        12|  0.000128746|  1.07288e-05|  0.00%|
(call)|        12|  7.22408e-05|  6.02007e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/fromnumeric.py:194 _reshape_dispatcher
     5|        12|  4.05312e-05|   3.3776e-06|  0.00%|
     6|        12|  0.000139236|   1.1603e-05|  0.00%|
(call)|        12|  0.000658989|  5.49157e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/fromnumeric.py:199 reshape
File: <__array_function__ internals>_233
File duration: 0.000374556s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|        12|  8.58307e-05|  7.15256e-06|  0.00%|
(call)|         1|  1.12057e-05|  1.12057e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.03606e-05|  9.03606e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|        10|  0.000123024|  1.23024e-05|  0.00%|
(call)|        10|  6.65188e-05|  6.65188e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/stride_tricks.py:137 _broadcast_to_dispatcher
     5|        10|  3.62396e-05|  3.62396e-06|  0.00%|
     6|        10|  0.000129461|  1.29461e-05|  0.00%|
(call)|        10|   0.00173998|  0.000173998|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/stride_tricks.py:141 broadcast_to
File: <__array_function__ internals>_76
File duration: 0.000371695s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|        10|  9.98974e-05|  9.98974e-06|  0.00%|
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.44138e-05|  9.44138e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|         8|  0.000124693|  1.55866e-05|  0.00%|
(call)|         8|  7.12872e-05|  8.91089e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/numeric.py:387 _count_nonzero_dispatcher
     5|         8|  4.19617e-05|  5.24521e-06|  0.00%|
     6|         8|  0.000105143|  1.31428e-05|  0.00%|
(call)|         8|   0.00012517|  1.56462e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/numeric.py:391 count_nonzero
File: <string>_123
File duration: 0.000327587s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|        48|  0.000327587|  6.82473e-06|  0.00%|
File: <string>_118
File duration: 0.000321627s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|        50|  0.000321627|  6.43253e-06|  0.00%|
File: <string>_125
File duration: 0.000289202s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|        48|  0.000289202|  6.02504e-06|  0.00%|
File: <string>_121
File duration: 0.00027442s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|        50|   0.00027442|   5.4884e-06|  0.00%|
File: <string>_141
File duration: 0.000270128s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  0.000270128|  0.000135064|  0.00%|
(call)|        12|  0.000160694|  1.33912e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/jit/annotations.py:48 __getitem__
(call)|         6|  0.000228167|  3.80278e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
File: <__array_function__ internals>_209
File duration: 0.000224113s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         3|   4.8399e-05|   1.6133e-05|  0.00%|
(call)|         1|  1.19209e-05|  1.19209e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.41753e-05|  9.41753e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|         1|  3.21865e-05|  3.21865e-05|  0.00%|
(call)|         1|  2.67029e-05|  2.67029e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/function_base.py:710 _copy_dispatcher
     5|         1|  4.52995e-06|  4.52995e-06|  0.00%|
     6|         1|  0.000138998|  0.000138998|  0.00%|
(call)|         1|  1.64509e-05|  1.64509e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/function_base.py:714 copy
File: <string>_3
File duration: 0.0002141s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|        20|    0.0002141|   1.0705e-05|  0.00%|
File: <string>_145
File duration: 0.000176907s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  0.000176907|  8.84533e-05|  0.00%|
(call)|        11|  0.000128269|  1.16608e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/jit/annotations.py:48 __getitem__
(call)|         5|  0.000178814|  3.57628e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
File: <__array_function__ internals>_216
File duration: 0.00016427s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         6|  4.72069e-05|  7.86781e-06|  0.00%|
(call)|         1|  1.19209e-05|  1.19209e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.39369e-05|  9.39369e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|         4|  5.43594e-05|  1.35899e-05|  0.00%|
(call)|         4|  2.64645e-05|  6.61612e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/function_base.py:1585 _trim_zeros
     5|         4|  1.52588e-05|   3.8147e-06|  0.00%|
     6|         4|  4.74453e-05|  1.18613e-05|  0.00%|
(call)|         4|  0.000241041|  6.02603e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/function_base.py:1589 trim_zeros
File: <string>_131
File duration: 0.000158072s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  0.000158072|  7.90358e-05|  0.00%|
(call)|        11|  0.000119448|  1.08589e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/jit/annotations.py:48 __getitem__
(call)|         5|  0.000167131|  3.34263e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
File: <__array_function__ internals>_172
File duration: 0.00014925s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         3|  5.17368e-05|  1.72456e-05|  0.00%|
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.13143e-05|  9.13143e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|         1|  4.05312e-05|  4.05312e-05|  0.00%|
(call)|         1|  2.43187e-05|  2.43187e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/twodim_base.py:42 _flip_dispatcher
     5|         1|  4.52995e-06|  4.52995e-06|  0.00%|
     6|         1|  5.24521e-05|  5.24521e-05|  0.00%|
(call)|         1|  9.89437e-05|  9.89437e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/twodim_base.py:97 flipud
File: <string>_139
File duration: 0.000146866s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  0.000146866|  7.34329e-05|  0.00%|
(call)|        10|  0.000101089|  1.01089e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/jit/annotations.py:48 __getitem__
(call)|         4|  0.000138521|  3.46303e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
(call)|         1|   0.00125408|   0.00125408|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:746 __getitem__
File: <string>_135
File duration: 0.000146627s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  0.000146627|  7.33137e-05|  0.00%|
(call)|        11|  0.000146151|  1.32864e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/jit/annotations.py:48 __getitem__
(call)|         5|   0.00121546|  0.000243092|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
(call)|         1|   0.00116372|   0.00116372|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:746 __getitem__
File: <string>_137
File duration: 0.000144958s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  0.000144958|  7.24792e-05|  0.00%|
(call)|         9|  0.000111103|  1.23448e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/jit/annotations.py:48 __getitem__
(call)|         3|  7.72476e-05|  2.57492e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
(call)|         1|   0.00131226|   0.00131226|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:746 __getitem__
File: <string>_189
File duration: 0.000143528s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  0.000133038|  6.65188e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  5.24521e-06|  5.24521e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.24521e-06|  5.24521e-06|  0.00%|
File: <string>_143
File duration: 0.000132799s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  0.000132799|  6.63996e-05|  0.00%|
(call)|        10|  0.000118256|  1.18256e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/jit/annotations.py:48 __getitem__
(call)|         4|  0.000119925|  2.99811e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
File: <string>_133
File duration: 0.0001297s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|    0.0001297|  6.48499e-05|  0.00%|
(call)|        10|  0.000102758|  1.02758e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/jit/annotations.py:48 __getitem__
(call)|         4|  0.000152588|   3.8147e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
(call)|         1|   0.00136137|   0.00136137|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:746 __getitem__
File: <string>_205
File duration: 0.000127792s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  0.000102997|  5.14984e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  2.00272e-05|  2.00272e-05|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.76837e-06|  4.76837e-06|  0.00%|
File: <__array_function__ internals>_204
File duration: 0.000119686s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         3|  5.62668e-05|  1.87556e-05|  0.00%|
(call)|         1|  1.16825e-05|  1.16825e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000118732|  0.000118732|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|         1|  3.19481e-05|  3.19481e-05|  0.00%|
(call)|         1|  9.53674e-06|  9.53674e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/function_base.py:55 _rot90_dispatcher
     5|         1|  1.64509e-05|  1.64509e-05|  0.00%|
     6|         1|  1.50204e-05|  1.50204e-05|  0.00%|
(call)|         1|  0.000526428|  0.000526428|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/function_base.py:59 rot90
File: <__array_function__ internals>_173
File duration: 0.000109673s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  0.000109673|  5.48363e-05|  0.00%|
(call)|         1|  1.33514e-05|  1.33514e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000101328|  0.000101328|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_276
File duration: 0.000108719s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  0.000108719|  5.43594e-05|  0.00%|
(call)|         1|  1.19209e-05|  1.19209e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|    9.799e-05|    9.799e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_28
File duration: 0.000103712s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         3|  6.53267e-05|  2.17756e-05|  0.00%|
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.20296e-05|  9.20296e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|         1|  2.07424e-05|  2.07424e-05|  0.00%|
(call)|         1|  8.82149e-06|  8.82149e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/fromnumeric.py:597 _transpose_dispatcher
     5|         1|  4.52995e-06|  4.52995e-06|  0.00%|
     6|         1|   1.3113e-05|   1.3113e-05|  0.00%|
(call)|         1|  6.81877e-05|  6.81877e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/fromnumeric.py:601 transpose
File: <attrs generated init jsonschema._types.TypeChecker>
File duration: 0.000103474s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         6|   4.3869e-05|   7.3115e-06|  0.00%|def __init__(self, type_checkers=attr_dict['_type_checkers'].default):
     2|         4|  1.64509e-05|  4.11272e-06|  0.00%|    _inst_dict = self.__dict__
     3|         4|  4.31538e-05|  1.07884e-05|  0.00%|    _inst_dict['_type_checkers'] = __attr_converter__type_checkers(type_checkers)
(call)|         4|   0.00198054|  0.000495136|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pyrsistent/_pmap.py:437 pmap
File: 
File duration: 8.86917e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         4|  6.07967e-05|  1.51992e-05|  0.00%|
(call)|         1|  3.60012e-05|  3.60012e-05|  0.00%|# :1 _AttributesAttributes
     2|         1|  3.33786e-06|  3.33786e-06|  0.00%|
     3|         1|  1.33514e-05|  1.33514e-05|  0.00%|
     4|         1|  5.72205e-06|  5.72205e-06|  0.00%|
     5|         1|  5.48363e-06|  5.48363e-06|  0.00%|
File: <__array_function__ internals>_100
File duration: 8.82149e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  8.82149e-05|  4.41074e-05|  0.00%|
(call)|         1|  1.16825e-05|  1.16825e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.60827e-05|  9.60827e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_117
File duration: 8.7738e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|   8.7738e-05|   4.3869e-05|  0.00%|
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.87053e-05|  9.87053e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: _11
File duration: 8.41618e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         4|  7.53403e-05|  1.88351e-05|  0.00%|
(call)|         1|  2.00272e-05|  2.00272e-05|  0.00%|# _11:1 RefResolutionErrorAttributes
     2|         1|  3.09944e-06|  3.09944e-06|  0.00%|
     3|         1|  5.72205e-06|  5.72205e-06|  0.00%|
File: _9
File duration: 8.34465e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         4|  6.48499e-05|  1.62125e-05|  0.00%|
(call)|         1|  2.71797e-05|  2.71797e-05|  0.00%|# _9:1 _DeepMappingAttributes
     2|         1|  3.33786e-06|  3.33786e-06|  0.00%|
     3|         1|  5.96046e-06|  5.96046e-06|  0.00%|
     4|         1|  4.52995e-06|  4.52995e-06|  0.00%|
     5|         1|  4.76837e-06|  4.76837e-06|  0.00%|
File: <string>_337
File duration: 8.24928e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|   2.6226e-05|   1.3113e-05|  0.00%|
     2|         1|   3.8147e-06|   3.8147e-06|  0.00%|
     3|         1|  4.52995e-06|  4.52995e-06|  0.00%|
     4|         2|  9.77516e-06|  4.88758e-06|  0.00%|
     5|         1|  4.29153e-06|  4.29153e-06|  0.00%|
     6|         1|  4.29153e-06|  4.29153e-06|  0.00%|
     7|         1|  4.52995e-06|  4.52995e-06|  0.00%|
     8|         1|  1.85966e-05|  1.85966e-05|  0.00%|
(call)|         1|  1.81198e-05|  1.81198e-05|  0.00%|# <string>_337:4 cy_wrap
     9|         1|   6.4373e-06|   6.4373e-06|  0.00%|
File: _10
File duration: 8.15392e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         4|   5.8651e-05|  1.46627e-05|  0.00%|
(call)|         1|  3.05176e-05|  3.05176e-05|  0.00%|# _10:1 VersionInfoAttributes
     2|         1|  3.33786e-06|  3.33786e-06|  0.00%|
     3|         1|  6.19888e-06|  6.19888e-06|  0.00%|
     4|         1|  4.52995e-06|  4.52995e-06|  0.00%|
     5|         1|  4.29153e-06|  4.29153e-06|  0.00%|
     6|         1|  4.52995e-06|  4.52995e-06|  0.00%|
File: <decorator-gen-7>
File duration: 8.03471e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         5|  3.26633e-05|  6.53267e-06|  0.00%|
     2|         3|  4.76837e-05|  1.58946e-05|  0.00%|
(call)|         3|     0.005548|   0.00184933|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/_lib/decorator.py:223 decorate
File: _1
File duration: 7.84397e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         4|  7.00951e-05|  1.75238e-05|  0.00%|
(call)|         1|  1.62125e-05|  1.62125e-05|  0.00%|# _1:1 _AndValidatorAttributes
     2|         1|  3.09944e-06|  3.09944e-06|  0.00%|
     3|         1|  5.24521e-06|  5.24521e-06|  0.00%|
File: <__array_function__ internals>_205
File duration: 7.58171e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         3|  4.00543e-05|  1.33514e-05|  0.00%|
(call)|         1|  1.19209e-05|  1.19209e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.67979e-05|  9.67979e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|         1|  1.71661e-05|  1.71661e-05|  0.00%|
(call)|         1|  7.15256e-06|  7.15256e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/function_base.py:146 _flip_dispatcher
     5|         1|  4.05312e-06|  4.05312e-06|  0.00%|
     6|         1|  1.45435e-05|  1.45435e-05|  0.00%|
(call)|         1|  0.000202656|  0.000202656|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/function_base.py:150 flip
File: <__array_function__ internals>_16
File duration: 7.55787e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  7.55787e-05|  3.77893e-05|  0.00%|
(call)|         1|  1.12057e-05|  1.12057e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000103474|  0.000103474|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: _3
File duration: 7.1764e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         4|  5.43594e-05|  1.35899e-05|  0.00%|
(call)|         1|  2.52724e-05|  2.52724e-05|  0.00%|# _3:1 _MatchesReValidatorAttributes
     2|         1|  2.86102e-06|  2.86102e-06|  0.00%|
     3|         1|  5.24521e-06|  5.24521e-06|  0.00%|
     4|         1|  4.52995e-06|  4.52995e-06|  0.00%|
     5|         1|  4.76837e-06|  4.76837e-06|  0.00%|
File: _12
File duration: 7.08103e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         4|  6.10352e-05|  1.52588e-05|  0.00%|
(call)|         1|  2.02656e-05|  2.02656e-05|  0.00%|# _12:1 TypeCheckerAttributes
     2|         1|  3.33786e-06|  3.33786e-06|  0.00%|
     3|         1|   6.4373e-06|   6.4373e-06|  0.00%|
File: <string>_179
File duration: 6.93798e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  4.50611e-05|  2.25306e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.05312e-06|  4.05312e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  2.02656e-05|  2.02656e-05|  0.00%|
File: <string>_242
File duration: 6.67572e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  5.76973e-05|  2.88486e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.29153e-06|  4.29153e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.76837e-06|  4.76837e-06|  0.00%|
File: <string>_169
File duration: 6.65188e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  5.72205e-05|  2.86102e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.29153e-06|  4.29153e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.00679e-06|  5.00679e-06|  0.00%|
File: _6
File duration: 6.62804e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         4|  5.74589e-05|  1.43647e-05|  0.00%|
(call)|         1|  1.64509e-05|  1.64509e-05|  0.00%|# _6:1 _InValidatorAttributes
     2|         1|  3.09944e-06|  3.09944e-06|  0.00%|
     3|         1|  5.72205e-06|  5.72205e-06|  0.00%|
File: <__array_function__ internals>_15
File duration: 6.53267e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  6.53267e-05|  3.26633e-05|  0.00%|
(call)|         1|  2.57492e-05|  2.57492e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000105143|  0.000105143|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_225
File duration: 6.50883e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  5.55515e-05|  2.77758e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.29153e-06|  4.29153e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.24521e-06|  5.24521e-06|  0.00%|
File: _8
File duration: 6.46114e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         4|  5.17368e-05|  1.29342e-05|  0.00%|
(call)|         1|  2.00272e-05|  2.00272e-05|  0.00%|# _8:1 _DeepIterableAttributes
     2|         1|  3.33786e-06|  3.33786e-06|  0.00%|
     3|         1|  5.24521e-06|  5.24521e-06|  0.00%|
     4|         1|  4.29153e-06|  4.29153e-06|  0.00%|
File: _2
File duration: 6.4373e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         4|  5.55515e-05|  1.38879e-05|  0.00%|
(call)|         1|   1.5974e-05|   1.5974e-05|  0.00%|# _2:1 _InstanceOfValidatorAttributes
     2|         1|  2.86102e-06|  2.86102e-06|  0.00%|
     3|         1|  5.96046e-06|  5.96046e-06|  0.00%|
File: _0
File duration: 6.41346e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         4|  5.10216e-05|  1.27554e-05|  0.00%|
(call)|         1|  2.00272e-05|  2.00272e-05|  0.00%|# _0:1 FactoryAttributes
     2|         1|  3.33786e-06|  3.33786e-06|  0.00%|
     3|         1|  5.24521e-06|  5.24521e-06|  0.00%|
     4|         1|  4.52995e-06|  4.52995e-06|  0.00%|
File: <__array_function__ internals>_294
File duration: 6.41346e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  6.41346e-05|  3.20673e-05|  0.00%|
(call)|         1|  1.71661e-05|  1.71661e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000103474|  0.000103474|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: _5
File duration: 6.36578e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         4|  5.48363e-05|  1.37091e-05|  0.00%|
(call)|         1|  1.62125e-05|  1.62125e-05|  0.00%|# _5:1 _OptionalValidatorAttributes
     2|         1|  3.09944e-06|  3.09944e-06|  0.00%|
     3|         1|  5.72205e-06|  5.72205e-06|  0.00%|
File: <__array_function__ internals>_39
File duration: 6.34193e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  6.34193e-05|  3.17097e-05|  0.00%|
(call)|         1|  2.55108e-05|  2.55108e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.84533e-05|  8.84533e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_246
File duration: 6.34193e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  6.34193e-05|  3.17097e-05|  0.00%|
(call)|         1|   2.7895e-05|   2.7895e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000121593|  0.000121593|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: _7
File duration: 6.29425e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         4|  5.53131e-05|  1.38283e-05|  0.00%|
(call)|         1|  1.54972e-05|  1.54972e-05|  0.00%|# _7:1 _IsCallableValidatorAttributes
     2|         1|  3.33786e-06|  3.33786e-06|  0.00%|
     3|         1|  4.29153e-06|  4.29153e-06|  0.00%|
File: <string>_24
File duration: 6.1512e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  3.43323e-05|  1.71661e-05|  0.00%|
     2|         1|  4.52995e-06|  4.52995e-06|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         1|  1.81198e-05|  1.81198e-05|  0.00%|
(call)|         1|  3.24249e-05|  3.24249e-05|  0.00%|# /opt/anaconda3/lib/python3.7/abc.py:130 register
     5|         1|  4.52995e-06|  4.52995e-06|  0.00%|
File: <string>_90
File duration: 6.10352e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|        14|  6.10352e-05|  4.35965e-06|  0.00%|
File: <string>_199
File duration: 6.07967e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  4.12464e-05|  2.06232e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  1.43051e-05|  1.43051e-05|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.24521e-06|  5.24521e-06|  0.00%|
File: <string>_255
File duration: 6.05583e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.55244e-05|  1.77622e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  2.00272e-05|  2.00272e-05|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.00679e-06|  5.00679e-06|  0.00%|
File: <__array_function__ internals>_202
File duration: 6.05583e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  6.05583e-05|  3.02792e-05|  0.00%|
(call)|         1|   2.0504e-05|   2.0504e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.25064e-05|  9.25064e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_187
File duration: 5.98431e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  5.05447e-05|  2.52724e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.29153e-06|  4.29153e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.00679e-06|  5.00679e-06|  0.00%|
File: <__array_function__ internals>_104
File duration: 5.93662e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  5.93662e-05|  2.96831e-05|  0.00%|
(call)|         1|  1.16825e-05|  1.16825e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000103235|  0.000103235|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_234
File duration: 5.91278e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  4.98295e-05|  2.49147e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.52995e-06|  4.52995e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.76837e-06|  4.76837e-06|  0.00%|
File: <string>_110
File duration: 5.88894e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         6|  5.88894e-05|   9.8149e-06|  0.00%|
File: <string>_336
File duration: 5.88894e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  3.17097e-05|  1.58548e-05|  0.00%|
     2|         1|  5.24521e-06|  5.24521e-06|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         1|  1.74046e-05|  1.74046e-05|  0.00%|
(call)|         1|  3.69549e-05|  3.69549e-05|  0.00%|# /opt/anaconda3/lib/python3.7/abc.py:130 register
     5|         1|  4.52995e-06|  4.52995e-06|  0.00%|
File: <string>_214
File duration: 5.88894e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  4.91142e-05|  2.45571e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.52995e-06|  4.52995e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.24521e-06|  5.24521e-06|  0.00%|
File: _4
File duration: 5.8651e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         4|  5.03063e-05|  1.25766e-05|  0.00%|
(call)|         1|  1.52588e-05|  1.52588e-05|  0.00%|# _4:1 _ProvidesValidatorAttributes
     2|         1|  3.09944e-06|  3.09944e-06|  0.00%|
     3|         1|  5.24521e-06|  5.24521e-06|  0.00%|
File: <string>_176
File duration: 5.8651e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.24249e-05|  1.62125e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  2.12193e-05|  2.12193e-05|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.00679e-06|  5.00679e-06|  0.00%|
File: <string>_246
File duration: 5.81741e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.86238e-05|  1.93119e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.52995e-06|  4.52995e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  1.50204e-05|  1.50204e-05|  0.00%|
File: <string>_195
File duration: 5.76973e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.69549e-05|  1.84774e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  1.45435e-05|  1.45435e-05|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  6.19888e-06|  6.19888e-06|  0.00%|
File: <string>_227
File duration: 5.74589e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|   4.8399e-05|  2.41995e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.29153e-06|  4.29153e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.76837e-06|  4.76837e-06|  0.00%|
File: <string>_16
File duration: 5.72205e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  3.26633e-05|  1.63317e-05|  0.00%|
     2|         1|  4.76837e-06|  4.76837e-06|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         1|  1.57356e-05|  1.57356e-05|  0.00%|
(call)|         1|   0.00018239|   0.00018239|  0.00%|# /opt/anaconda3/lib/python3.7/abc.py:130 register
     5|         1|  4.05312e-06|  4.05312e-06|  0.00%|
File: <__array_function__ internals>_146
File duration: 5.72205e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  5.72205e-05|  2.86102e-05|  0.00%|
(call)|         1|  1.64509e-05|  1.64509e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000101805|  0.000101805|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_14
File duration: 5.6982e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         8|   5.6982e-05|  7.12276e-06|  0.00%|
File: <string>_21
File duration: 5.6982e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.95639e-05|   1.4782e-05|  0.00%|
     2|         1|  5.00679e-06|  5.00679e-06|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         1|  1.78814e-05|  1.78814e-05|  0.00%|
(call)|         1|  3.43323e-05|  3.43323e-05|  0.00%|# /opt/anaconda3/lib/python3.7/abc.py:130 register
     5|         1|  4.52995e-06|  4.52995e-06|  0.00%|
File: <string>_38
File duration: 5.65052e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|   2.7895e-05|  1.39475e-05|  0.00%|
     2|         1|  5.24521e-06|  5.24521e-06|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         1|  1.83582e-05|  1.83582e-05|  0.00%|
(call)|         1|  6.48499e-05|  6.48499e-05|  0.00%|# /opt/anaconda3/lib/python3.7/abc.py:130 register
     5|         1|  5.00679e-06|  5.00679e-06|  0.00%|
File: <string>_25
File duration: 5.60284e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|   2.7895e-05|  1.39475e-05|  0.00%|
     2|         1|  5.24521e-06|  5.24521e-06|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         1|  1.81198e-05|  1.81198e-05|  0.00%|
(call)|         1|  3.31402e-05|  3.31402e-05|  0.00%|# /opt/anaconda3/lib/python3.7/abc.py:130 register
     5|         1|  4.76837e-06|  4.76837e-06|  0.00%|
File: <string>_253
File duration: 5.60284e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  4.62532e-05|  2.31266e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.29153e-06|  4.29153e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.48363e-06|  5.48363e-06|  0.00%|
File: <string>_223
File duration: 5.60284e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  4.62532e-05|  2.31266e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.76837e-06|  4.76837e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.00679e-06|  5.00679e-06|  0.00%|
File: <string>_126
File duration: 5.57899e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         4|  5.57899e-05|  1.39475e-05|  0.00%|
File: <string>_178
File duration: 5.57899e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  4.64916e-05|  2.32458e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.05312e-06|  4.05312e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.24521e-06|  5.24521e-06|  0.00%|
File: <string>_23
File duration: 5.53131e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.98023e-05|  1.49012e-05|  0.00%|
     2|         1|  5.00679e-06|  5.00679e-06|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         1|  1.54972e-05|  1.54972e-05|  0.00%|
(call)|         1|  2.71797e-05|  2.71797e-05|  0.00%|# /opt/anaconda3/lib/python3.7/abc.py:130 register
     5|         1|  5.00679e-06|  5.00679e-06|  0.00%|
File: <string>_247
File duration: 5.53131e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  4.50611e-05|  2.25306e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.76837e-06|  4.76837e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.48363e-06|  5.48363e-06|  0.00%|
File: <__array_function__ internals>_284
File duration: 5.48363e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  5.48363e-05|  2.74181e-05|  0.00%|
(call)|         1|  1.54972e-05|  1.54972e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000101089|  0.000101089|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_200
File duration: 5.45979e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  4.45843e-05|  2.22921e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.76837e-06|  4.76837e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.24521e-06|  5.24521e-06|  0.00%|
File: <string>_198
File duration: 5.45979e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  4.41074e-05|  2.20537e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.52995e-06|  4.52995e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.96046e-06|  5.96046e-06|  0.00%|
File: <string>_243
File duration: 5.43594e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  4.43459e-05|  2.21729e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.76837e-06|  4.76837e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.24521e-06|  5.24521e-06|  0.00%|
File: <string>_217
File duration: 5.4121e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  4.43459e-05|  2.21729e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.29153e-06|  4.29153e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.48363e-06|  5.48363e-06|  0.00%|
File: <string>_20
File duration: 5.38826e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.67029e-05|  1.33514e-05|  0.00%|
     2|         1|  4.52995e-06|  4.52995e-06|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         1|  1.71661e-05|  1.71661e-05|  0.00%|
(call)|         1|  0.000168085|  0.000168085|  0.00%|# /opt/anaconda3/lib/python3.7/abc.py:130 register
     5|         1|  5.48363e-06|  5.48363e-06|  0.00%|
File: <string>_236
File duration: 5.38826e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  4.45843e-05|  2.22921e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.29153e-06|  4.29153e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.00679e-06|  5.00679e-06|  0.00%|
File: <string>_197
File duration: 5.34058e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  4.36306e-05|  2.18153e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.29153e-06|  4.29153e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.48363e-06|  5.48363e-06|  0.00%|
File: <string>_220
File duration: 5.29289e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  4.29153e-05|  2.14577e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.52995e-06|  4.52995e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.48363e-06|  5.48363e-06|  0.00%|
File: <string>_258
File duration: 5.29289e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|   4.3869e-05|  2.19345e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.29153e-06|  4.29153e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.76837e-06|  4.76837e-06|  0.00%|
File: <__array_function__ internals>_254
File duration: 5.24521e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  5.24521e-05|   2.6226e-05|  0.00%|
(call)|         1|  1.16825e-05|  1.16825e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.27448e-05|  9.27448e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_244
File duration: 5.22137e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  4.26769e-05|  2.13385e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.52995e-06|  4.52995e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.00679e-06|  5.00679e-06|  0.00%|
File: <__array_function__ internals>_232
File duration: 5.22137e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  5.22137e-05|  2.61068e-05|  0.00%|
(call)|         1|  1.21593e-05|  1.21593e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|   9.5129e-05|   9.5129e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_214
File duration: 5.19753e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  5.19753e-05|  2.59876e-05|  0.00%|
(call)|         1|  1.21593e-05|  1.21593e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000124454|  0.000124454|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_313
File duration: 5.19753e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  5.19753e-05|  2.59876e-05|  0.00%|
(call)|         1|  1.19209e-05|  1.19209e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000112772|  0.000112772|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_241
File duration: 5.14984e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  4.14848e-05|  2.07424e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.52995e-06|  4.52995e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.48363e-06|  5.48363e-06|  0.00%|
File: <__array_function__ internals>_188
File duration: 5.10216e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  5.10216e-05|  2.55108e-05|  0.00%|
(call)|         1|  1.26362e-05|  1.26362e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|    0.0001266|    0.0001266|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_59
File duration: 5.07832e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  5.07832e-05|  2.53916e-05|  0.00%|
(call)|         1|  1.12057e-05|  1.12057e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000115156|  0.000115156|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_229
File duration: 5.05447e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  4.07696e-05|  2.03848e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.52995e-06|  4.52995e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.24521e-06|  5.24521e-06|  0.00%|
File: <__array_function__ internals>_255
File duration: 5.05447e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  5.05447e-05|  2.52724e-05|  0.00%|
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000111103|  0.000111103|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_215
File duration: 5.03063e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  4.02927e-05|  2.01464e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  5.00679e-06|  5.00679e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.00679e-06|  5.00679e-06|  0.00%|
File: <string>_240
File duration: 5.03063e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  4.05312e-05|  2.02656e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.29153e-06|  4.29153e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.48363e-06|  5.48363e-06|  0.00%|
File: <__array_function__ internals>_164
File duration: 5.03063e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  5.03063e-05|  2.51532e-05|  0.00%|
(call)|         1|  2.71797e-05|  2.71797e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.25064e-05|  9.25064e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_235
File duration: 5.03063e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  5.03063e-05|  2.51532e-05|  0.00%|
(call)|         1|  1.16825e-05|  1.16825e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|   0.00011754|   0.00011754|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_219
File duration: 5.00679e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  4.02927e-05|  2.01464e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.52995e-06|  4.52995e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.24521e-06|  5.24521e-06|  0.00%|
File: <string>_238
File duration: 5.00679e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  4.00543e-05|  2.00272e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.52995e-06|  4.52995e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.48363e-06|  5.48363e-06|  0.00%|
File: <__array_function__ internals>_58
File duration: 5.00679e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  5.00679e-05|   2.5034e-05|  0.00%|
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000121355|  0.000121355|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_220
File duration: 5.00679e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  5.00679e-05|   2.5034e-05|  0.00%|
(call)|         1|  1.16825e-05|  1.16825e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000108242|  0.000108242|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_275
File duration: 4.95911e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  4.95911e-05|  2.47955e-05|  0.00%|
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.15527e-05|  9.15527e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_163
File duration: 4.93526e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  4.93526e-05|  2.46763e-05|  0.00%|
(call)|         1|  2.69413e-05|  2.69413e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.60827e-05|  9.60827e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_265
File duration: 4.88758e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.93391e-05|  1.96695e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.29153e-06|  4.29153e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.24521e-06|  5.24521e-06|  0.00%|
File: <__array_function__ internals>_150
File duration: 4.88758e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  4.88758e-05|  2.44379e-05|  0.00%|
(call)|         1|  1.07288e-05|  1.07288e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.70364e-05|  9.70364e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_62
File duration: 4.88758e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  4.88758e-05|  2.44379e-05|  0.00%|
(call)|         1|  1.09673e-05|  1.09673e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.20296e-05|  9.20296e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_223
File duration: 4.86374e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  4.86374e-05|  2.43187e-05|  0.00%|
(call)|         1|   2.7895e-05|   2.7895e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|   8.9407e-05|   8.9407e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_252
File duration: 4.8399e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.91006e-05|  1.95503e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.29153e-06|  4.29153e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.00679e-06|  5.00679e-06|  0.00%|
File: <__array_function__ internals>_281
File duration: 4.8399e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|   4.8399e-05|  2.41995e-05|  0.00%|
(call)|         1|  1.09673e-05|  1.09673e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.86917e-05|  8.86917e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_186
File duration: 4.79221e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.88622e-05|  1.94311e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.05312e-06|  4.05312e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.00679e-06|  5.00679e-06|  0.00%|
File: <string>_269
File duration: 4.79221e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.86238e-05|  1.93119e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.29153e-06|  4.29153e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.00679e-06|  5.00679e-06|  0.00%|
File: <__array_function__ internals>_134
File duration: 4.79221e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  4.79221e-05|  2.39611e-05|  0.00%|
(call)|         1|  1.16825e-05|  1.16825e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|   9.5129e-05|   9.5129e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <attrs generated init attr._version_info.VersionInfo>
File duration: 4.76837e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         3|  2.24113e-05|  7.47045e-06|  0.00%|def __init__(self, year, minor, micro, releaselevel):
     2|         1|  5.96046e-06|  5.96046e-06|  0.00%|    _setattr = _cached_setattr.__get__(self, self.__class__)
     3|         1|  5.24521e-06|  5.24521e-06|  0.00%|    _setattr('year', year)
     4|         1|  4.76837e-06|  4.76837e-06|  0.00%|    _setattr('minor', minor)
     5|         1|  4.76837e-06|  4.76837e-06|  0.00%|    _setattr('micro', micro)
     6|         1|  4.52995e-06|  4.52995e-06|  0.00%|    _setattr('releaselevel', releaselevel)
File: <string>_264
File duration: 4.76837e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.79086e-05|  1.89543e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.76837e-06|  4.76837e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.00679e-06|  5.00679e-06|  0.00%|
File: <__array_function__ internals>_130
File duration: 4.74453e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  4.74453e-05|  2.37226e-05|  0.00%|
(call)|         1|  1.07288e-05|  1.07288e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.67844e-05|  8.67844e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_123
File duration: 4.74453e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  4.74453e-05|  2.37226e-05|  0.00%|
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.84533e-05|  8.84533e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_248
File duration: 4.72069e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.74317e-05|  1.87159e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.29153e-06|  4.29153e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.48363e-06|  5.48363e-06|  0.00%|
File: <string>_184
File duration: 4.72069e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.71933e-05|  1.85966e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.52995e-06|  4.52995e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.48363e-06|  5.48363e-06|  0.00%|
File: <string>_249
File duration: 4.72069e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.71933e-05|  1.85966e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.76837e-06|  4.76837e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.24521e-06|  5.24521e-06|  0.00%|
File: <string>_188
File duration: 4.673e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.74317e-05|  1.87159e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.05312e-06|  4.05312e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.24521e-06|  5.24521e-06|  0.00%|
File: <string>_93
File duration: 4.64916e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         6|  4.64916e-05|   7.7486e-06|  0.00%|
File: <string>_250
File duration: 4.62532e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.67165e-05|  1.83582e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.29153e-06|  4.29153e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.24521e-06|  5.24521e-06|  0.00%|
File: <string>_254
File duration: 4.60148e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.67165e-05|  1.83582e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.29153e-06|  4.29153e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.00679e-06|  5.00679e-06|  0.00%|
File: <string>_70
File duration: 4.60148e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  4.60148e-05|  2.30074e-05|  0.00%|
File: <string>_338
File duration: 4.57764e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|        10|  4.57764e-05|  4.57764e-06|  0.00%|
File: <string>_190
File duration: 4.57764e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.62396e-05|  1.81198e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.52995e-06|  4.52995e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.00679e-06|  5.00679e-06|  0.00%|
File: <string>_218
File duration: 4.55379e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.62396e-05|  1.81198e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.29153e-06|  4.29153e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.00679e-06|  5.00679e-06|  0.00%|
File: <string>_194
File duration: 4.55379e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.57628e-05|  1.78814e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.52995e-06|  4.52995e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.24521e-06|  5.24521e-06|  0.00%|
File: <string>_196
File duration: 4.52995e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.57628e-05|  1.78814e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.52995e-06|  4.52995e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.00679e-06|  5.00679e-06|  0.00%|
File: <string>_231
File duration: 4.50611e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.52859e-05|   1.7643e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.76837e-06|  4.76837e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.00679e-06|  5.00679e-06|  0.00%|
File: <__array_function__ internals>_13
File duration: 4.50611e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  4.50611e-05|  2.25306e-05|  0.00%|
(call)|         1|  1.64509e-05|  1.64509e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000110388|  0.000110388|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_289
File duration: 4.50611e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  4.50611e-05|  2.25306e-05|  0.00%|
(call)|         1|  1.28746e-05|  1.28746e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.96454e-05|  8.96454e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_252
File duration: 4.50611e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  4.50611e-05|  2.25306e-05|  0.00%|
(call)|         1|  1.26362e-05|  1.26362e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.29832e-05|  9.29832e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_153
File duration: 4.50611e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  4.50611e-05|  2.25306e-05|  0.00%|
(call)|         1|  1.19209e-05|  1.19209e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|   0.00010848|   0.00010848|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_267
File duration: 4.48227e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.55244e-05|  1.77622e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.29153e-06|  4.29153e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.00679e-06|  5.00679e-06|  0.00%|
File: <string>_213
File duration: 4.45843e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.48091e-05|  1.74046e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.76837e-06|  4.76837e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.00679e-06|  5.00679e-06|  0.00%|
File: <string>_175
File duration: 4.45843e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.48091e-05|  1.74046e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.76837e-06|  4.76837e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.00679e-06|  5.00679e-06|  0.00%|
File: <string>_245
File duration: 4.45843e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.48091e-05|  1.74046e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.52995e-06|  4.52995e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.24521e-06|  5.24521e-06|  0.00%|
File: <attrs generated init attr.validators._IsCallableValidator>
File duration: 4.43459e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         7|  2.69413e-05|  3.84876e-06|  0.00%|def __init__(self, ):
     2|         5|  1.74046e-05|  3.48091e-06|  0.00%|    pass
File: <string>_207
File duration: 4.43459e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.50475e-05|  1.75238e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.05312e-06|  4.05312e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.24521e-06|  5.24521e-06|  0.00%|
File: <__array_function__ internals>_37
File duration: 4.43459e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  4.43459e-05|  2.21729e-05|  0.00%|
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.36985e-05|  9.36985e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_87
File duration: 4.43459e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  4.43459e-05|  2.21729e-05|  0.00%|
(call)|         1|  1.16825e-05|  1.16825e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.46522e-05|  9.46522e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_224
File duration: 4.43459e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  4.43459e-05|  2.21729e-05|  0.00%|
(call)|         1|  1.26362e-05|  1.26362e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.25064e-05|  9.25064e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_239
File duration: 4.41074e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.50475e-05|  1.75238e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.29153e-06|  4.29153e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.76837e-06|  4.76837e-06|  0.00%|
File: <__array_function__ internals>_147
File duration: 4.41074e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  4.41074e-05|  2.20537e-05|  0.00%|
(call)|         1|  1.23978e-05|  1.23978e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.46522e-05|  9.46522e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_161
File duration: 4.3869e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.43323e-05|  1.71661e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.52995e-06|  4.52995e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.00679e-06|  5.00679e-06|  0.00%|
File: <string>_226
File duration: 4.3869e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.45707e-05|  1.72853e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.05312e-06|  4.05312e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.24521e-06|  5.24521e-06|  0.00%|
File: <__array_function__ internals>_238
File duration: 4.3869e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|   4.3869e-05|  2.19345e-05|  0.00%|
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000120878|  0.000120878|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_210
File duration: 4.36306e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.40939e-05|  1.70469e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.29153e-06|  4.29153e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.24521e-06|  5.24521e-06|  0.00%|
File: <__array_function__ internals>_213
File duration: 4.36306e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  4.36306e-05|  2.18153e-05|  0.00%|
(call)|         1|  1.16825e-05|  1.16825e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000119925|  0.000119925|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_177
File duration: 4.33922e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.40939e-05|  1.70469e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.29153e-06|  4.29153e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.00679e-06|  5.00679e-06|  0.00%|
File: <string>_233
File duration: 4.33922e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.40939e-05|  1.70469e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.05312e-06|  4.05312e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.24521e-06|  5.24521e-06|  0.00%|
File: <string>_256
File duration: 4.31538e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.40939e-05|  1.70469e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.29153e-06|  4.29153e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.76837e-06|  4.76837e-06|  0.00%|
File: <string>_211
File duration: 4.31538e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.38554e-05|  1.69277e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.29153e-06|  4.29153e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.00679e-06|  5.00679e-06|  0.00%|
File: <__array_function__ internals>_180
File duration: 4.31538e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  4.31538e-05|  2.15769e-05|  0.00%|
(call)|         1|  2.64645e-05|  2.64645e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000133991|  0.000133991|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_222
File duration: 4.29153e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.33786e-05|  1.66893e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.76837e-06|  4.76837e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.76837e-06|  4.76837e-06|  0.00%|
File: <string>_172
File duration: 4.29153e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.33786e-05|  1.66893e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.29153e-06|  4.29153e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.24521e-06|  5.24521e-06|  0.00%|
File: <string>_183
File duration: 4.29153e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.33786e-05|  1.66893e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.29153e-06|  4.29153e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.24521e-06|  5.24521e-06|  0.00%|
File: <__array_function__ internals>_84
File duration: 4.29153e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  4.29153e-05|  2.14577e-05|  0.00%|
(call)|         1|  1.19209e-05|  1.19209e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.56059e-05|  9.56059e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_212
File duration: 4.26769e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.26633e-05|  1.63317e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.76837e-06|  4.76837e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.24521e-06|  5.24521e-06|  0.00%|
File: <string>_163
File duration: 4.26769e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.31402e-05|  1.65701e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.29153e-06|  4.29153e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.24521e-06|  5.24521e-06|  0.00%|
File: <string>_191
File duration: 4.24385e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.29018e-05|  1.64509e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.76837e-06|  4.76837e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.76837e-06|  4.76837e-06|  0.00%|
File: <string>_173
File duration: 4.24385e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.31402e-05|  1.65701e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.29153e-06|  4.29153e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.00679e-06|  5.00679e-06|  0.00%|
File: <__array_function__ internals>_8
File duration: 4.24385e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  4.24385e-05|  2.12193e-05|  0.00%|
(call)|         1|  1.21593e-05|  1.21593e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000100136|  0.000100136|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_165
File duration: 4.22001e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.26633e-05|  1.63317e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.29153e-06|  4.29153e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.24521e-06|  5.24521e-06|  0.00%|
File: <string>_168
File duration: 4.19617e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.21865e-05|  1.60933e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.52995e-06|  4.52995e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.24521e-06|  5.24521e-06|  0.00%|
File: <string>_216
File duration: 4.17233e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.26633e-05|  1.63317e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.05312e-06|  4.05312e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.00679e-06|  5.00679e-06|  0.00%|
File: <string>_260
File duration: 4.17233e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.31402e-05|  1.65701e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.05312e-06|  4.05312e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.52995e-06|  4.52995e-06|  0.00%|
File: <string>_232
File duration: 4.17233e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.19481e-05|   1.5974e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.29153e-06|  4.29153e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.48363e-06|  5.48363e-06|  0.00%|
File: <string>_162
File duration: 4.14848e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.24249e-05|  1.62125e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.52995e-06|  4.52995e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.52995e-06|  4.52995e-06|  0.00%|
File: <string>_204
File duration: 4.14848e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.19481e-05|   1.5974e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.52995e-06|  4.52995e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.00679e-06|  5.00679e-06|  0.00%|
File: <string>_171
File duration: 4.14848e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.19481e-05|   1.5974e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.29153e-06|  4.29153e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.24521e-06|  5.24521e-06|  0.00%|
File: <string>_203
File duration: 4.14848e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.21865e-05|  1.60933e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.29153e-06|  4.29153e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.00679e-06|  5.00679e-06|  0.00%|
File: <string>_13
File duration: 4.12464e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         6|  4.12464e-05|   6.8744e-06|  0.00%|
File: <string>_166
File duration: 4.12464e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.21865e-05|  1.60933e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.29153e-06|  4.29153e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.76837e-06|  4.76837e-06|  0.00%|
File: <__array_function__ internals>_181
File duration: 4.12464e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  4.12464e-05|  2.06232e-05|  0.00%|
(call)|         1|  1.40667e-05|  1.40667e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.94205e-05|  9.94205e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_171
File duration: 4.12464e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  4.12464e-05|  2.06232e-05|  0.00%|
(call)|         1|  1.62125e-05|  1.62125e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000101566|  0.000101566|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_260
File duration: 4.12464e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  4.12464e-05|  2.06232e-05|  0.00%|
(call)|         1|  1.28746e-05|  1.28746e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|   0.00011158|   0.00011158|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_124
File duration: 4.1008e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|   4.1008e-05|   2.0504e-05|  0.00%|
(call)|         1|  1.26362e-05|  1.26362e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000106096|  0.000106096|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_202
File duration: 4.07696e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.17097e-05|  1.58548e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.05312e-06|  4.05312e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.00679e-06|  5.00679e-06|  0.00%|
File: <string>_92
File duration: 4.07696e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  4.07696e-05|  2.03848e-05|  0.00%|
File: <string>_91
File duration: 4.05312e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         8|  4.05312e-05|  5.06639e-06|  0.00%|
File: <string>_201
File duration: 4.05312e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.12328e-05|  1.56164e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.05312e-06|  4.05312e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.24521e-06|  5.24521e-06|  0.00%|
File: <string>_138
File duration: 4.02927e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  4.02927e-05|  2.01464e-05|  0.00%|
(call)|         2|  2.31266e-05|  1.15633e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/jit/annotations.py:48 __getitem__
(call)|         1|  2.93255e-05|  2.93255e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
File: <__array_function__ internals>_251
File duration: 4.02927e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  4.02927e-05|  2.01464e-05|  0.00%|
(call)|         1|  1.16825e-05|  1.16825e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.41753e-05|  9.41753e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_22
File duration: 4.02927e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  4.02927e-05|  2.01464e-05|  0.00%|
File: <string>_192
File duration: 3.98159e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.05176e-05|  1.52588e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.29153e-06|  4.29153e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.00679e-06|  5.00679e-06|  0.00%|
File: <__array_function__ internals>_94
File duration: 3.98159e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.98159e-05|   1.9908e-05|  0.00%|
(call)|         1|  1.40667e-05|  1.40667e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000100136|  0.000100136|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_22
File duration: 3.95775e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.95775e-05|  1.97887e-05|  0.00%|
(call)|         1|  1.45435e-05|  1.45435e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000106335|  0.000106335|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_299
File duration: 3.95775e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.95775e-05|  1.97887e-05|  0.00%|
(call)|         1|  1.35899e-05|  1.35899e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.94205e-05|  9.94205e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_259
File duration: 3.93391e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.09944e-05|  1.54972e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|   3.8147e-06|   3.8147e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.52995e-06|  4.52995e-06|  0.00%|
File: <__array_function__ internals>_64
File duration: 3.93391e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.93391e-05|  1.96695e-05|  0.00%|
(call)|         1|  1.35899e-05|  1.35899e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.84669e-05|  9.84669e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_185
File duration: 3.93391e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.93391e-05|  1.96695e-05|  0.00%|
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.72612e-05|  8.72612e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_193
File duration: 3.88622e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.88486e-05|  1.44243e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.52995e-06|  4.52995e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.48363e-06|  5.48363e-06|  0.00%|
File: <__array_function__ internals>_308
File duration: 3.88622e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.88622e-05|  1.94311e-05|  0.00%|
(call)|         1|  1.23978e-05|  1.23978e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.58443e-05|  9.58443e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_335
File duration: 3.88622e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  3.88622e-05|  1.94311e-05|  0.00%|
File: <string>_140
File duration: 3.88622e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  3.88622e-05|  1.94311e-05|  0.00%|
(call)|         2|   2.3365e-05|  1.16825e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/jit/annotations.py:48 __getitem__
(call)|         1|  2.71797e-05|  2.71797e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
File: <string>_262
File duration: 3.86238e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.93255e-05|  1.46627e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.29153e-06|  4.29153e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.00679e-06|  5.00679e-06|  0.00%|
File: <__array_function__ internals>_218
File duration: 3.83854e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.83854e-05|  1.91927e-05|  0.00%|
(call)|         1|  1.16825e-05|  1.16825e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000110149|  0.000110149|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_312
File duration: 3.83854e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.83854e-05|  1.91927e-05|  0.00%|
(call)|         1|  1.23978e-05|  1.23978e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000104666|  0.000104666|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_182
File duration: 3.83854e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.83854e-05|  1.91927e-05|  0.00%|
(call)|         1|  1.23978e-05|  1.23978e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000102282|  0.000102282|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_206
File duration: 3.8147e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|   2.7895e-05|  1.39475e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.76837e-06|  4.76837e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.48363e-06|  5.48363e-06|  0.00%|
File: <string>_273
File duration: 3.8147e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.95639e-05|   1.4782e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.05312e-06|  4.05312e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.52995e-06|  4.52995e-06|  0.00%|
File: <string>_105
File duration: 3.79086e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  3.79086e-05|  1.89543e-05|  0.00%|
(call)|         1|   0.00358582|   0.00358582|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/rcsetup.py:775 cycler
File: <string>_263
File duration: 3.76701e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.83718e-05|  1.41859e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.05312e-06|  4.05312e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.24521e-06|  5.24521e-06|  0.00%|
File: <__array_function__ internals>_298
File duration: 3.76701e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.76701e-05|  1.88351e-05|  0.00%|
(call)|         1|  1.23978e-05|  1.23978e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.36985e-05|  9.36985e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_305
File duration: 3.76701e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  3.76701e-05|  1.88351e-05|  0.00%|
File: <string>_288
File duration: 3.76701e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  3.76701e-05|  1.88351e-05|  0.00%|
File: <__array_function__ internals>_201
File duration: 3.76701e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.76701e-05|  1.88351e-05|  0.00%|
(call)|         1|  1.23978e-05|  1.23978e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.63211e-05|  9.63211e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_136
File duration: 3.74317e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  3.74317e-05|  1.87159e-05|  0.00%|
(call)|         2|  2.26498e-05|  1.13249e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/jit/annotations.py:48 __getitem__
(call)|         1|  2.59876e-05|  2.59876e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
File: <string>_134
File duration: 3.74317e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  3.74317e-05|  1.87159e-05|  0.00%|
(call)|         2|  2.26498e-05|  1.13249e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/jit/annotations.py:48 __getitem__
(call)|         1|  2.74181e-05|  2.74181e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
File: <__array_function__ internals>_91
File duration: 3.74317e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.74317e-05|  1.87159e-05|  0.00%|
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.27448e-05|  9.27448e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_271
File duration: 3.71933e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.74181e-05|  1.37091e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.52995e-06|  4.52995e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.24521e-06|  5.24521e-06|  0.00%|
File: <__array_function__ internals>_228
File duration: 3.71933e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.71933e-05|  1.85966e-05|  0.00%|
(call)|         1|  1.19209e-05|  1.19209e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000105143|  0.000105143|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_46
File duration: 3.71933e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  3.71933e-05|  1.85966e-05|  0.00%|
File: <string>_311
File duration: 3.71933e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  3.71933e-05|  1.85966e-05|  0.00%|
File: <string>_322
File duration: 3.71933e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  3.71933e-05|  1.85966e-05|  0.00%|
File: <string>_266
File duration: 3.69549e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.76566e-05|  1.38283e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.29153e-06|  4.29153e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.00679e-06|  5.00679e-06|  0.00%|
File: <__array_function__ internals>_268
File duration: 3.69549e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.69549e-05|  1.84774e-05|  0.00%|
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.08375e-05|  9.08375e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_210
File duration: 3.69549e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.69549e-05|  1.84774e-05|  0.00%|
(call)|         1|  1.21593e-05|  1.21593e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.44138e-05|  9.44138e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_200
File duration: 3.69549e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.69549e-05|  1.84774e-05|  0.00%|
(call)|         1|  1.28746e-05|  1.28746e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000111103|  0.000111103|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_212
File duration: 3.69549e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.69549e-05|  1.84774e-05|  0.00%|
(call)|         1|  1.21593e-05|  1.21593e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.41753e-05|  9.41753e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_127
File duration: 3.69549e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  3.69549e-05|  1.84774e-05|  0.00%|
File: <__array_function__ internals>_248
File duration: 3.69549e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.69549e-05|  1.84774e-05|  0.00%|
(call)|         1|  1.23978e-05|  1.23978e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.41753e-05|  9.41753e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_279
File duration: 3.69549e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.69549e-05|  1.84774e-05|  0.00%|
(call)|         1|   2.7895e-05|   2.7895e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000122309|  0.000122309|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_194
File duration: 3.69549e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.69549e-05|  1.84774e-05|  0.00%|
(call)|         1|  1.21593e-05|  1.21593e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000114202|  0.000114202|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_138
File duration: 3.69549e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.69549e-05|  1.84774e-05|  0.00%|
(call)|         1|  1.16825e-05|  1.16825e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.36985e-05|  9.36985e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_236
File duration: 3.69549e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.69549e-05|  1.84774e-05|  0.00%|
(call)|         1|  1.16825e-05|  1.16825e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|   0.00017786|   0.00017786|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_286
File duration: 3.67165e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.67165e-05|  1.83582e-05|  0.00%|
(call)|         1|  1.19209e-05|  1.19209e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.34601e-05|  9.34601e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_309
File duration: 3.67165e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.67165e-05|  1.83582e-05|  0.00%|
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000125885|  0.000125885|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_243
File duration: 3.67165e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.67165e-05|  1.83582e-05|  0.00%|
(call)|         1|  1.21593e-05|  1.21593e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.20296e-05|  9.20296e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_257
File duration: 3.6478e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.71797e-05|  1.35899e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.05312e-06|  4.05312e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.24521e-06|  5.24521e-06|  0.00%|
File: <string>_120
File duration: 3.6478e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         4|   3.6478e-05|  9.11951e-06|  0.00%|
File: <string>_62
File duration: 3.6478e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|   3.6478e-05|   1.8239e-05|  0.00%|
File: <__array_function__ internals>_219
File duration: 3.6478e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|   3.6478e-05|   1.8239e-05|  0.00%|
(call)|         1|  1.21593e-05|  1.21593e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.36985e-05|  9.36985e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_296
File duration: 3.6478e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|   3.6478e-05|   1.8239e-05|  0.00%|
(call)|         1|  1.19209e-05|  1.19209e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.39369e-05|  9.39369e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_56
File duration: 3.6478e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|   3.6478e-05|   1.8239e-05|  0.00%|
File: <__array_function__ internals>_302
File duration: 3.6478e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|   3.6478e-05|   1.8239e-05|  0.00%|
(call)|         1|  1.21593e-05|  1.21593e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000106335|  0.000106335|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_227
File duration: 3.6478e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|   3.6478e-05|   1.8239e-05|  0.00%|
(call)|         1|  1.21593e-05|  1.21593e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.56059e-05|  9.56059e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_288
File duration: 3.6478e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|   3.6478e-05|   1.8239e-05|  0.00%|
(call)|         1|  1.12057e-05|  1.12057e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.08375e-05|  9.08375e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_87
File duration: 3.62396e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         4|  3.62396e-05|  9.05991e-06|  0.00%|
File: <string>_208
File duration: 3.62396e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.69413e-05|  1.34706e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.05312e-06|  4.05312e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.24521e-06|  5.24521e-06|  0.00%|
File: <string>_237
File duration: 3.62396e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.67029e-05|  1.33514e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.52995e-06|  4.52995e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.00679e-06|  5.00679e-06|  0.00%|
File: <string>_230
File duration: 3.62396e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.67029e-05|  1.33514e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.52995e-06|  4.52995e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.00679e-06|  5.00679e-06|  0.00%|
File: <string>_164
File duration: 3.62396e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.67029e-05|  1.33514e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.29153e-06|  4.29153e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.24521e-06|  5.24521e-06|  0.00%|
File: <string>_224
File duration: 3.62396e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.69413e-05|  1.34706e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.29153e-06|  4.29153e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.00679e-06|  5.00679e-06|  0.00%|
File: <string>_281
File duration: 3.62396e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  3.62396e-05|  1.81198e-05|  0.00%|
File: <__array_function__ internals>_148
File duration: 3.62396e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.62396e-05|  1.81198e-05|  0.00%|
(call)|         1|  1.12057e-05|  1.12057e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.15527e-05|  9.15527e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_239
File duration: 3.62396e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.62396e-05|  1.81198e-05|  0.00%|
(call)|         1|  1.19209e-05|  1.19209e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|   9.2268e-05|   9.2268e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_54
File duration: 3.62396e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.62396e-05|  1.81198e-05|  0.00%|
(call)|         1|  1.16825e-05|  1.16825e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.44138e-05|  9.44138e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_125
File duration: 3.62396e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.62396e-05|  1.81198e-05|  0.00%|
(call)|         1|  1.16825e-05|  1.16825e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.48906e-05|  9.48906e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_151
File duration: 3.62396e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.62396e-05|  1.81198e-05|  0.00%|
(call)|         1|  1.21593e-05|  1.21593e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|   9.5129e-05|   9.5129e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_189
File duration: 3.62396e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.62396e-05|  1.81198e-05|  0.00%|
(call)|         1|  1.12057e-05|  1.12057e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000116587|  0.000116587|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_297
File duration: 3.62396e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.62396e-05|  1.81198e-05|  0.00%|
(call)|         1|  1.21593e-05|  1.21593e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.44138e-05|  9.44138e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_217
File duration: 3.62396e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.62396e-05|  1.81198e-05|  0.00%|
(call)|         1|  1.21593e-05|  1.21593e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000111103|  0.000111103|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_293
File duration: 3.62396e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  3.62396e-05|  1.81198e-05|  0.00%|
File: <__array_function__ internals>_105
File duration: 3.62396e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.62396e-05|  1.81198e-05|  0.00%|
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.25064e-05|  9.25064e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_152
File duration: 3.62396e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.62396e-05|  1.81198e-05|  0.00%|
(call)|         1|  1.21593e-05|  1.21593e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.39369e-05|  9.39369e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_221
File duration: 3.60012e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|   2.6226e-05|   1.3113e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.52995e-06|  4.52995e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.24521e-06|  5.24521e-06|  0.00%|
File: <string>_185
File duration: 3.60012e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.69413e-05|  1.34706e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.29153e-06|  4.29153e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.76837e-06|  4.76837e-06|  0.00%|
File: <string>_235
File duration: 3.60012e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.64645e-05|  1.32322e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.29153e-06|  4.29153e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.24521e-06|  5.24521e-06|  0.00%|
File: <string>_109
File duration: 3.60012e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  3.60012e-05|  1.80006e-05|  0.00%|
(call)|         1|   0.00197029|   0.00197029|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/rcsetup.py:775 cycler
File: <__array_function__ internals>_237
File duration: 3.60012e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.60012e-05|  1.80006e-05|  0.00%|
(call)|         1|  1.21593e-05|  1.21593e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.20296e-05|  9.20296e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_241
File duration: 3.60012e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.60012e-05|  1.80006e-05|  0.00%|
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000101566|  0.000101566|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_165
File duration: 3.60012e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.60012e-05|  1.80006e-05|  0.00%|
(call)|         1|  1.16825e-05|  1.16825e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.17912e-05|  9.17912e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_190
File duration: 3.60012e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.60012e-05|  1.80006e-05|  0.00%|
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000102758|  0.000102758|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_207
File duration: 3.60012e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.60012e-05|  1.80006e-05|  0.00%|
(call)|         1|  1.23978e-05|  1.23978e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000107288|  0.000107288|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_193
File duration: 3.60012e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.60012e-05|  1.80006e-05|  0.00%|
(call)|         1|  1.19209e-05|  1.19209e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000112057|  0.000112057|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_229
File duration: 3.60012e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.60012e-05|  1.80006e-05|  0.00%|
(call)|         1|  1.16825e-05|  1.16825e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.44138e-05|  9.44138e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_226
File duration: 3.57628e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.57628e-05|  1.78814e-05|  0.00%|
(call)|         1|  1.23978e-05|  1.23978e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|   9.5129e-05|   9.5129e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_300
File duration: 3.57628e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.57628e-05|  1.78814e-05|  0.00%|
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.27448e-05|  9.27448e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_206
File duration: 3.57628e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.57628e-05|  1.78814e-05|  0.00%|
(call)|         1|  1.12057e-05|  1.12057e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.53674e-05|  9.53674e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_168
File duration: 3.57628e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.57628e-05|  1.78814e-05|  0.00%|
(call)|         1|  1.16825e-05|  1.16825e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.44138e-05|  9.44138e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_103
File duration: 3.57628e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.57628e-05|  1.78814e-05|  0.00%|
(call)|         1|  1.12057e-05|  1.12057e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|   9.2268e-05|   9.2268e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_177
File duration: 3.57628e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.57628e-05|  1.78814e-05|  0.00%|
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.13143e-05|  9.13143e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_195
File duration: 3.57628e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.57628e-05|  1.78814e-05|  0.00%|
(call)|         1|  1.21593e-05|  1.21593e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.56059e-05|  9.56059e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_287
File duration: 3.57628e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.57628e-05|  1.78814e-05|  0.00%|
(call)|         1|  1.19209e-05|  1.19209e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.32217e-05|  9.32217e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_225
File duration: 3.57628e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.57628e-05|  1.78814e-05|  0.00%|
(call)|         1|  1.23978e-05|  1.23978e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.44138e-05|  9.44138e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_96
File duration: 3.57628e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  3.57628e-05|  1.78814e-05|  0.00%|
(call)|         1|   0.00432563|   0.00432563|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/rcsetup.py:775 cycler
File: <__array_function__ internals>_197
File duration: 3.57628e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.57628e-05|  1.78814e-05|  0.00%|
(call)|         1|  1.19209e-05|  1.19209e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.44138e-05|  9.44138e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_221
File duration: 3.57628e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.57628e-05|  1.78814e-05|  0.00%|
(call)|         1|  1.19209e-05|  1.19209e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.34601e-05|  9.34601e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_109
File duration: 3.57628e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.57628e-05|  1.78814e-05|  0.00%|
(call)|         1|  1.19209e-05|  1.19209e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.41753e-05|  9.41753e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_261
File duration: 3.55244e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.64645e-05|  1.32322e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.05312e-06|  4.05312e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.00679e-06|  5.00679e-06|  0.00%|
File: <__array_function__ internals>_137
File duration: 3.55244e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.55244e-05|  1.77622e-05|  0.00%|
(call)|         1|  1.16825e-05|  1.16825e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.34601e-05|  9.34601e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_144
File duration: 3.55244e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.55244e-05|  1.77622e-05|  0.00%|
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.32217e-05|  9.32217e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_81
File duration: 3.55244e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.55244e-05|  1.77622e-05|  0.00%|
(call)|         1|  1.12057e-05|  1.12057e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.44138e-05|  9.44138e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_52
File duration: 3.55244e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.55244e-05|  1.77622e-05|  0.00%|
(call)|         1|  1.16825e-05|  1.16825e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.46522e-05|  9.46522e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_183
File duration: 3.55244e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.55244e-05|  1.77622e-05|  0.00%|
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.15527e-05|  9.15527e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_135
File duration: 3.55244e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.55244e-05|  1.77622e-05|  0.00%|
(call)|         1|  1.12057e-05|  1.12057e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.53674e-05|  9.53674e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_24
File duration: 3.55244e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.55244e-05|  1.77622e-05|  0.00%|
(call)|         1|  1.16825e-05|  1.16825e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.39369e-05|  9.39369e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_93
File duration: 3.55244e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.55244e-05|  1.77622e-05|  0.00%|
(call)|         1|  1.16825e-05|  1.16825e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.27448e-05|  9.27448e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_307
File duration: 3.55244e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.55244e-05|  1.77622e-05|  0.00%|
(call)|         1|  1.16825e-05|  1.16825e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.36985e-05|  9.36985e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_301
File duration: 3.55244e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.55244e-05|  1.77622e-05|  0.00%|
(call)|         1|  1.19209e-05|  1.19209e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.29832e-05|  9.29832e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_261
File duration: 3.55244e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.55244e-05|  1.77622e-05|  0.00%|
(call)|         1|  1.19209e-05|  1.19209e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.36985e-05|  9.36985e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_242
File duration: 3.55244e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.55244e-05|  1.77622e-05|  0.00%|
(call)|         1|  2.67029e-05|  2.67029e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000115871|  0.000115871|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_161
File duration: 3.55244e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.55244e-05|  1.77622e-05|  0.00%|
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000101805|  0.000101805|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_136
File duration: 3.55244e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.55244e-05|  1.77622e-05|  0.00%|
(call)|         1|  1.12057e-05|  1.12057e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000132084|  0.000132084|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_176
File duration: 3.55244e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.55244e-05|  1.77622e-05|  0.00%|
(call)|         1|  1.21593e-05|  1.21593e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.29832e-05|  9.29832e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_179
File duration: 3.55244e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.55244e-05|  1.77622e-05|  0.00%|
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.56059e-05|  9.56059e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_266
File duration: 3.55244e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.55244e-05|  1.77622e-05|  0.00%|
(call)|         1|  1.21593e-05|  1.21593e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.25064e-05|  9.25064e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_278
File duration: 3.55244e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.55244e-05|  1.77622e-05|  0.00%|
(call)|         1|  1.21593e-05|  1.21593e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000103951|  0.000103951|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_314
File duration: 3.55244e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.55244e-05|  1.77622e-05|  0.00%|
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000131607|  0.000131607|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_230
File duration: 3.55244e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.55244e-05|  1.77622e-05|  0.00%|
(call)|         1|  1.16825e-05|  1.16825e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.44138e-05|  9.44138e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_65
File duration: 3.55244e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.55244e-05|  1.77622e-05|  0.00%|
(call)|         1|  1.16825e-05|  1.16825e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.48906e-05|  9.48906e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_251
File duration: 3.52859e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.64645e-05|  1.32322e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.05312e-06|  4.05312e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.76837e-06|  4.76837e-06|  0.00%|
File: <string>_111
File duration: 3.52859e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         4|  3.52859e-05|  8.82149e-06|  0.00%|
File: <__array_function__ internals>_73
File duration: 3.52859e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.52859e-05|   1.7643e-05|  0.00%|
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000126123|  0.000126123|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_112
File duration: 3.52859e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.52859e-05|   1.7643e-05|  0.00%|
(call)|         1|  1.19209e-05|  1.19209e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000105858|  0.000105858|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_102
File duration: 3.52859e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.52859e-05|   1.7643e-05|  0.00%|
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.32217e-05|  9.32217e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_120
File duration: 3.52859e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.52859e-05|   1.7643e-05|  0.00%|
(call)|         1|  1.09673e-05|  1.09673e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.44138e-05|  9.44138e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_303
File duration: 3.52859e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.52859e-05|   1.7643e-05|  0.00%|
(call)|         1|  1.12057e-05|  1.12057e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.48906e-05|  9.48906e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_208
File duration: 3.52859e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.52859e-05|   1.7643e-05|  0.00%|
(call)|         1|  1.16825e-05|  1.16825e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.01222e-05|  9.01222e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_256
File duration: 3.52859e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.52859e-05|   1.7643e-05|  0.00%|
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.56059e-05|  9.56059e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_80
File duration: 3.52859e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.52859e-05|   1.7643e-05|  0.00%|
(call)|         1|  1.12057e-05|  1.12057e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000122786|  0.000122786|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_33
File duration: 3.52859e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.52859e-05|   1.7643e-05|  0.00%|
(call)|         1|  1.16825e-05|  1.16825e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.75132e-05|  9.75132e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_56
File duration: 3.52859e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.52859e-05|   1.7643e-05|  0.00%|
(call)|         1|  1.21593e-05|  1.21593e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.67979e-05|  9.67979e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_222
File duration: 3.52859e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.52859e-05|   1.7643e-05|  0.00%|
(call)|         1|  1.16825e-05|  1.16825e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|   0.00010705|   0.00010705|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_53
File duration: 3.52859e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.52859e-05|   1.7643e-05|  0.00%|
(call)|         1|  1.12057e-05|  1.12057e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.41753e-05|  9.41753e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_306
File duration: 3.52859e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.52859e-05|   1.7643e-05|  0.00%|
(call)|         1|  1.16825e-05|  1.16825e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.46522e-05|  9.46522e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_182
File duration: 3.50475e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.57492e-05|  1.28746e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.52995e-06|  4.52995e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.76837e-06|  4.76837e-06|  0.00%|
File: <string>_174
File duration: 3.50475e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.57492e-05|  1.28746e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.05312e-06|  4.05312e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.24521e-06|  5.24521e-06|  0.00%|
File: <__array_function__ internals>_121
File duration: 3.50475e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.50475e-05|  1.75238e-05|  0.00%|
(call)|         1|  1.16825e-05|  1.16825e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|   9.5129e-05|   9.5129e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_192
File duration: 3.50475e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.50475e-05|  1.75238e-05|  0.00%|
(call)|         1|  1.21593e-05|  1.21593e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.44138e-05|  9.44138e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_290
File duration: 3.50475e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.50475e-05|  1.75238e-05|  0.00%|
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.34601e-05|  9.34601e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_79
File duration: 3.50475e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.50475e-05|  1.75238e-05|  0.00%|
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.60827e-05|  9.60827e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_127
File duration: 3.50475e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.50475e-05|  1.75238e-05|  0.00%|
(call)|         1|  1.16825e-05|  1.16825e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.44138e-05|  9.44138e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_140
File duration: 3.50475e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.50475e-05|  1.75238e-05|  0.00%|
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.39369e-05|  9.39369e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_107
File duration: 3.50475e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  3.50475e-05|  1.75238e-05|  0.00%|
(call)|         1|   0.00548387|   0.00548387|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/rcsetup.py:775 cycler
File: <__array_function__ internals>_95
File duration: 3.50475e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.50475e-05|  1.75238e-05|  0.00%|
(call)|         1|  1.21593e-05|  1.21593e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.36985e-05|  9.36985e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_45
File duration: 3.50475e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.50475e-05|  1.75238e-05|  0.00%|
(call)|         1|  1.09673e-05|  1.09673e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.15527e-05|  9.15527e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_154
File duration: 3.50475e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.50475e-05|  1.75238e-05|  0.00%|
(call)|         1|  1.16825e-05|  1.16825e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.89437e-05|  9.89437e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_249
File duration: 3.50475e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.50475e-05|  1.75238e-05|  0.00%|
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.29832e-05|  9.29832e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_240
File duration: 3.50475e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.50475e-05|  1.75238e-05|  0.00%|
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.39369e-05|  9.39369e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_162
File duration: 3.50475e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.50475e-05|  1.75238e-05|  0.00%|
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.36985e-05|  9.36985e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_269
File duration: 3.50475e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.50475e-05|  1.75238e-05|  0.00%|
(call)|         1|  1.16825e-05|  1.16825e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.27448e-05|  9.27448e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_38
File duration: 3.50475e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.50475e-05|  1.75238e-05|  0.00%|
(call)|         1|  1.12057e-05|  1.12057e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.41753e-05|  9.41753e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_178
File duration: 3.50475e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.50475e-05|  1.75238e-05|  0.00%|
(call)|         1|  1.16825e-05|  1.16825e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.15527e-05|  9.15527e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_113
File duration: 3.50475e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.50475e-05|  1.75238e-05|  0.00%|
(call)|         1|  2.74181e-05|  2.74181e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.46522e-05|  9.46522e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_175
File duration: 3.50475e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.50475e-05|  1.75238e-05|  0.00%|
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.36985e-05|  9.36985e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_174
File duration: 3.50475e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.50475e-05|  1.75238e-05|  0.00%|
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|   9.5129e-05|   9.5129e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_295
File duration: 3.50475e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.50475e-05|  1.75238e-05|  0.00%|
(call)|         1|  1.12057e-05|  1.12057e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000120163|  0.000120163|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_275
File duration: 3.48091e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.52724e-05|  1.26362e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.29153e-06|  4.29153e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.24521e-06|  5.24521e-06|  0.00%|
File: <string>_180
File duration: 3.48091e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.55108e-05|  1.27554e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.52995e-06|  4.52995e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.76837e-06|  4.76837e-06|  0.00%|
File: <string>_209
File duration: 3.48091e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.55108e-05|  1.27554e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.52995e-06|  4.52995e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.76837e-06|  4.76837e-06|  0.00%|
File: <__array_function__ internals>_244
File duration: 3.48091e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.48091e-05|  1.74046e-05|  0.00%|
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.20296e-05|  9.20296e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_131
File duration: 3.48091e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.48091e-05|  1.74046e-05|  0.00%|
(call)|         1|  1.12057e-05|  1.12057e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.08375e-05|  9.08375e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_292
File duration: 3.48091e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.48091e-05|  1.74046e-05|  0.00%|
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.01222e-05|  9.01222e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_111
File duration: 3.48091e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.48091e-05|  1.74046e-05|  0.00%|
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.29832e-05|  9.29832e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_270
File duration: 3.48091e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.48091e-05|  1.74046e-05|  0.00%|
(call)|         1|  1.16825e-05|  1.16825e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.29832e-05|  9.29832e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_274
File duration: 3.48091e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.48091e-05|  1.74046e-05|  0.00%|
(call)|         1|  1.19209e-05|  1.19209e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.34601e-05|  9.34601e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_196
File duration: 3.48091e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.48091e-05|  1.74046e-05|  0.00%|
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000108957|  0.000108957|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_101
File duration: 3.48091e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.48091e-05|  1.74046e-05|  0.00%|
(call)|         1|  1.09673e-05|  1.09673e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|   9.2268e-05|   9.2268e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_203
File duration: 3.48091e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.48091e-05|  1.74046e-05|  0.00%|
(call)|         1|  1.12057e-05|  1.12057e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000110149|  0.000110149|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_97
File duration: 3.48091e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.48091e-05|  1.74046e-05|  0.00%|
(call)|         1|  1.12057e-05|  1.12057e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000103235|  0.000103235|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_26
File duration: 3.48091e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.48091e-05|  1.74046e-05|  0.00%|
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000108719|  0.000108719|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_115
File duration: 3.48091e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.48091e-05|  1.74046e-05|  0.00%|
(call)|         1|  1.19209e-05|  1.19209e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.44138e-05|  9.44138e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_32
File duration: 3.45707e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.45707e-05|  1.72853e-05|  0.00%|
(call)|         1|  1.12057e-05|  1.12057e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.15527e-05|  9.15527e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_247
File duration: 3.45707e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.45707e-05|  1.72853e-05|  0.00%|
(call)|         1|  1.16825e-05|  1.16825e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.79765e-05|  8.79765e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_149
File duration: 3.45707e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.45707e-05|  1.72853e-05|  0.00%|
(call)|         1|  1.16825e-05|  1.16825e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.13143e-05|  9.13143e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_304
File duration: 3.45707e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.45707e-05|  1.72853e-05|  0.00%|
(call)|         1|  1.16825e-05|  1.16825e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000102997|  0.000102997|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_139
File duration: 3.45707e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.45707e-05|  1.72853e-05|  0.00%|
(call)|         1|  1.21593e-05|  1.21593e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|   9.5129e-05|   9.5129e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_100
File duration: 3.45707e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  3.45707e-05|  1.72853e-05|  0.00%|
(call)|         1|   0.00193477|   0.00193477|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/rcsetup.py:775 cycler
File: <__array_function__ internals>_169
File duration: 3.45707e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.45707e-05|  1.72853e-05|  0.00%|
(call)|         1|  1.16825e-05|  1.16825e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.34601e-05|  9.34601e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_128
File duration: 3.45707e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.45707e-05|  1.72853e-05|  0.00%|
(call)|         1|  1.52588e-05|  1.52588e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.44138e-05|  9.44138e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_35
File duration: 3.45707e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.45707e-05|  1.72853e-05|  0.00%|
(call)|         1|  1.16825e-05|  1.16825e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.56059e-05|  9.56059e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_107
File duration: 3.45707e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.45707e-05|  1.72853e-05|  0.00%|
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.36985e-05|  9.36985e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_122
File duration: 3.45707e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.45707e-05|  1.72853e-05|  0.00%|
(call)|         1|  1.09673e-05|  1.09673e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|   0.00012517|   0.00012517|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_36
File duration: 3.45707e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.45707e-05|  1.72853e-05|  0.00%|
(call)|         1|  1.12057e-05|  1.12057e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.29832e-05|  9.29832e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_114
File duration: 3.45707e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.45707e-05|  1.72853e-05|  0.00%|
(call)|         1|  1.16825e-05|  1.16825e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.41753e-05|  9.41753e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_25
File duration: 3.45707e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.45707e-05|  1.72853e-05|  0.00%|
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.65595e-05|  9.65595e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_277
File duration: 3.45707e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.45707e-05|  1.72853e-05|  0.00%|
(call)|         1|  1.16825e-05|  1.16825e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.01222e-05|  9.01222e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_98
File duration: 3.45707e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.45707e-05|  1.72853e-05|  0.00%|
(call)|         1|  1.16825e-05|  1.16825e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|   9.2268e-05|   9.2268e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_97
File duration: 3.45707e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  3.45707e-05|  1.72853e-05|  0.00%|
(call)|         1|   0.00522161|   0.00522161|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/rcsetup.py:775 cycler
File: <__array_function__ internals>_156
File duration: 3.45707e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.45707e-05|  1.72853e-05|  0.00%|
(call)|         1|  1.12057e-05|  1.12057e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|   0.00010848|   0.00010848|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_108
File duration: 3.45707e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.45707e-05|  1.72853e-05|  0.00%|
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.34601e-05|  9.34601e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_258
File duration: 3.45707e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.45707e-05|  1.72853e-05|  0.00%|
(call)|         1|  1.16825e-05|  1.16825e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.08375e-05|  9.08375e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_60
File duration: 3.45707e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.45707e-05|  1.72853e-05|  0.00%|
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.46522e-05|  9.46522e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_273
File duration: 3.45707e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.45707e-05|  1.72853e-05|  0.00%|
(call)|         1|  1.16825e-05|  1.16825e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.25064e-05|  9.25064e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_310
File duration: 3.45707e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.45707e-05|  1.72853e-05|  0.00%|
(call)|         1|  1.19209e-05|  1.19209e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000109911|  0.000109911|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_78
File duration: 3.45707e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.45707e-05|  1.72853e-05|  0.00%|
(call)|         1|  1.16825e-05|  1.16825e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.39369e-05|  9.39369e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_129
File duration: 3.45707e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.45707e-05|  1.72853e-05|  0.00%|
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.44138e-05|  9.44138e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_267
File duration: 3.45707e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.45707e-05|  1.72853e-05|  0.00%|
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.32217e-05|  9.32217e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_170
File duration: 3.43323e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.52724e-05|  1.26362e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.05312e-06|  4.05312e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.00679e-06|  5.00679e-06|  0.00%|
File: <string>_228
File duration: 3.43323e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.52724e-05|  1.26362e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.05312e-06|  4.05312e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.00679e-06|  5.00679e-06|  0.00%|
File: <__array_function__ internals>_186
File duration: 3.43323e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.43323e-05|  1.71661e-05|  0.00%|
(call)|         1|  1.12057e-05|  1.12057e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.10759e-05|  9.10759e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_262
File duration: 3.43323e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.43323e-05|  1.71661e-05|  0.00%|
(call)|         1|  1.16825e-05|  1.16825e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000110626|  0.000110626|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_96
File duration: 3.43323e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.43323e-05|  1.71661e-05|  0.00%|
(call)|         1|  1.16825e-05|  1.16825e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.56059e-05|  9.56059e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_167
File duration: 3.43323e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.43323e-05|  1.71661e-05|  0.00%|
(call)|         1|  1.12057e-05|  1.12057e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.05991e-05|  9.05991e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_291
File duration: 3.43323e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.43323e-05|  1.71661e-05|  0.00%|
(call)|         1|  1.16825e-05|  1.16825e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000109673|  0.000109673|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_141
File duration: 3.43323e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.43323e-05|  1.71661e-05|  0.00%|
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.41753e-05|  9.41753e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_250
File duration: 3.43323e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.43323e-05|  1.71661e-05|  0.00%|
(call)|         1|  1.19209e-05|  1.19209e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.32217e-05|  9.32217e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_83
File duration: 3.43323e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.43323e-05|  1.71661e-05|  0.00%|
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.39369e-05|  9.39369e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_215
File duration: 3.43323e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.43323e-05|  1.71661e-05|  0.00%|
(call)|         1|  1.12057e-05|  1.12057e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.96454e-05|  8.96454e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_155
File duration: 3.43323e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.43323e-05|  1.71661e-05|  0.00%|
(call)|         1|  1.09673e-05|  1.09673e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.39369e-05|  9.39369e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_77
File duration: 3.43323e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.43323e-05|  1.71661e-05|  0.00%|
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000107765|  0.000107765|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <decorator-gen-10>
File duration: 3.43323e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  3.43323e-05|  1.71661e-05|  0.00%|
File: <__array_function__ internals>_158
File duration: 3.43323e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.43323e-05|  1.71661e-05|  0.00%|
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000106573|  0.000106573|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_259
File duration: 3.43323e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.43323e-05|  1.71661e-05|  0.00%|
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.08375e-05|  9.08375e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_160
File duration: 3.43323e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.43323e-05|  1.71661e-05|  0.00%|
(call)|         1|  1.09673e-05|  1.09673e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.67979e-05|  9.67979e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_27
File duration: 3.43323e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.43323e-05|  1.71661e-05|  0.00%|
(call)|         1|  2.12193e-05|  2.12193e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000110865|  0.000110865|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_270
File duration: 3.40939e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|   2.5034e-05|   1.2517e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.05312e-06|  4.05312e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.00679e-06|  5.00679e-06|  0.00%|
File: <string>_274
File duration: 3.40939e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.47955e-05|  1.23978e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.29153e-06|  4.29153e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.00679e-06|  5.00679e-06|  0.00%|
File: <string>_98
File duration: 3.40939e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  3.40939e-05|  1.70469e-05|  0.00%|
(call)|         1|   0.00481653|   0.00481653|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/rcsetup.py:775 cycler
File: <__array_function__ internals>_272
File duration: 3.40939e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.40939e-05|  1.70469e-05|  0.00%|
(call)|         1|  1.16825e-05|  1.16825e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.29832e-05|  9.29832e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_118
File duration: 3.40939e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.40939e-05|  1.70469e-05|  0.00%|
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.53674e-05|  9.53674e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_293
File duration: 3.40939e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.40939e-05|  1.70469e-05|  0.00%|
(call)|         1|  1.09673e-05|  1.09673e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.15527e-05|  9.15527e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_110
File duration: 3.40939e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.40939e-05|  1.70469e-05|  0.00%|
(call)|         1|  1.16825e-05|  1.16825e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.32217e-05|  9.32217e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_104
File duration: 3.40939e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  3.40939e-05|  1.70469e-05|  0.00%|
(call)|         1|   0.00344515|   0.00344515|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/rcsetup.py:775 cycler
File: <__array_function__ internals>_282
File duration: 3.40939e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.40939e-05|  1.70469e-05|  0.00%|
(call)|         1|  1.19209e-05|  1.19209e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.15527e-05|  9.15527e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_305
File duration: 3.40939e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.40939e-05|  1.70469e-05|  0.00%|
(call)|         1|  1.12057e-05|  1.12057e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.25064e-05|  9.25064e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_116
File duration: 3.40939e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.40939e-05|  1.70469e-05|  0.00%|
(call)|         1|  1.19209e-05|  1.19209e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.46522e-05|  9.46522e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_43
File duration: 3.40939e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.40939e-05|  1.70469e-05|  0.00%|
(call)|         1|  1.09673e-05|  1.09673e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.10759e-05|  9.10759e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_126
File duration: 3.40939e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.40939e-05|  1.70469e-05|  0.00%|
(call)|         1|  1.16825e-05|  1.16825e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.36985e-05|  9.36985e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_253
File duration: 3.40939e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.40939e-05|  1.70469e-05|  0.00%|
(call)|         1|  1.16825e-05|  1.16825e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000106573|  0.000106573|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_99
File duration: 3.38554e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.38554e-05|  1.69277e-05|  0.00%|
(call)|         1|  1.16825e-05|  1.16825e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.25064e-05|  9.25064e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_142
File duration: 3.38554e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.38554e-05|  1.69277e-05|  0.00%|
(call)|         1|  1.09673e-05|  1.09673e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.48906e-05|  9.48906e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_106
File duration: 3.38554e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  3.38554e-05|  1.69277e-05|  0.00%|
(call)|         1|   0.00345063|   0.00345063|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/rcsetup.py:775 cycler
File: <string>_153
File duration: 3.38554e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|r"""
     2|         1|  1.12057e-05|  1.12057e-05|  0.00%|
     3|         0|            0|            0|  0.00%|Nonlinear solvers
     4|         1|  2.26498e-05|  2.26498e-05|  0.00%|-----------------
     5|         0|            0|            0|  0.00%|
     6|         0|            0|            0|  0.00%|.. currentmodule:: scipy.optimize
     7|         0|            0|            0|  0.00%|
     8|         0|            0|            0|  0.00%|This is a collection of general-purpose nonlinear multidimensional
     9|         0|            0|            0|  0.00%|solvers. These solvers find *x* for which *F(x) = 0*. Both *x*
    10|         0|            0|            0|  0.00%|and *F* can be multidimensional.
    11|         0|            0|            0|  0.00%|
    12|         0|            0|            0|  0.00%|Routines
    13|         0|            0|            0|  0.00%|~~~~~~~~
    14|         0|            0|            0|  0.00%|
    15|         0|            0|            0|  0.00%|Large-scale nonlinear solvers:
    16|         0|            0|            0|  0.00%|
    17|         0|            0|            0|  0.00%|.. autosummary::
    18|         0|            0|            0|  0.00%|
    19|         0|            0|            0|  0.00%|   newton_krylov
    20|         0|            0|            0|  0.00%|   anderson
    21|         0|            0|            0|  0.00%|
    22|         0|            0|            0|  0.00%|General nonlinear solvers:
    23|         0|            0|            0|  0.00%|
    24|         0|            0|            0|  0.00%|.. autosummary::
    25|         0|            0|            0|  0.00%|
    26|         0|            0|            0|  0.00%|   broyden1
    27|         0|            0|            0|  0.00%|   broyden2
    28|         0|            0|            0|  0.00%|
    29|         0|            0|            0|  0.00%|Simple iterations:
    30|         0|            0|            0|  0.00%|
    31|         0|            0|            0|  0.00%|.. autosummary::
    32|         0|            0|            0|  0.00%|
    33|         0|            0|            0|  0.00%|   excitingmixing
    34|         0|            0|            0|  0.00%|   linearmixing
    35|         0|            0|            0|  0.00%|   diagbroyden
    36|         0|            0|            0|  0.00%|
    37|         0|            0|            0|  0.00%|
    38|         0|            0|            0|  0.00%|Examples
    39|         0|            0|            0|  0.00%|~~~~~~~~
    40|         0|            0|            0|  0.00%|
    41|         0|            0|            0|  0.00%|**Small problem**
    42|         0|            0|            0|  0.00%|
    43|         0|            0|            0|  0.00%|>>> def F(x):
    44|         0|            0|            0|  0.00%|...    return np.cos(x) + x[::-1] - [1, 2, 3, 4]
    45|         0|            0|            0|  0.00%|>>> import scipy.optimize
    46|         0|            0|            0|  0.00%|>>> x = scipy.optimize.broyden1(F, [1,1,1,1], f_tol=1e-14)
    47|         0|            0|            0|  0.00%|>>> x
    48|         0|            0|            0|  0.00%|array([ 4.04674914,  3.91158389,  2.71791677,  1.61756251])
    49|         0|            0|            0|  0.00%|>>> np.cos(x) + x[::-1]
    50|         0|            0|            0|  0.00%|array([ 1.,  2.,  3.,  4.])
    51|         0|            0|            0|  0.00%|
    52|         0|            0|            0|  0.00%|
    53|         0|            0|            0|  0.00%|**Large problem**
    54|         0|            0|            0|  0.00%|
    55|         0|            0|            0|  0.00%|Suppose that we needed to solve the following integrodifferential
    56|         0|            0|            0|  0.00%|equation on the square :math:`[0,1]\times[0,1]`:
    57|         0|            0|            0|  0.00%|
    58|         0|            0|            0|  0.00%|.. math::
    59|         0|            0|            0|  0.00%|
    60|         0|            0|            0|  0.00%|   \nabla^2 P = 10 \left(\int_0^1\int_0^1\cosh(P)\,dx\,dy\right)^2
    61|         0|            0|            0|  0.00%|
    62|         0|            0|            0|  0.00%|with :math:`P(x,1) = 1` and :math:`P=0` elsewhere on the boundary of
    63|         0|            0|            0|  0.00%|the square.
    64|         0|            0|            0|  0.00%|
    65|         0|            0|            0|  0.00%|The solution can be found using the `newton_krylov` solver:
    66|         0|            0|            0|  0.00%|
    67|         0|            0|            0|  0.00%|.. plot::
    68|         0|            0|            0|  0.00%|
    69|         0|            0|            0|  0.00%|   import numpy as np
    70|         0|            0|            0|  0.00%|   from scipy.optimize import newton_krylov
    71|         0|            0|            0|  0.00%|   from numpy import cosh, zeros_like, mgrid, zeros
    72|         0|            0|            0|  0.00%|
    73|         0|            0|            0|  0.00%|   # parameters
    74|         0|            0|            0|  0.00%|   nx, ny = 75, 75
    75|         0|            0|            0|  0.00%|   hx, hy = 1./(nx-1), 1./(ny-1)
    76|         0|            0|            0|  0.00%|
    77|         0|            0|            0|  0.00%|   P_left, P_right = 0, 0
    78|         0|            0|            0|  0.00%|   P_top, P_bottom = 1, 0
    79|         0|            0|            0|  0.00%|
    80|         0|            0|            0|  0.00%|   def residual(P):
    81|         0|            0|            0|  0.00%|       d2x = zeros_like(P)
    82|         0|            0|            0|  0.00%|       d2y = zeros_like(P)
    83|         0|            0|            0|  0.00%|
    84|         0|            0|            0|  0.00%|       d2x[1:-1] = (P[2:]   - 2*P[1:-1] + P[:-2]) / hx/hx
    85|         0|            0|            0|  0.00%|       d2x[0]    = (P[1]    - 2*P[0]    + P_left)/hx/hx
    86|         0|            0|            0|  0.00%|       d2x[-1]   = (P_right - 2*P[-1]   + P[-2])/hx/hx
    87|         0|            0|            0|  0.00%|
    88|         0|            0|            0|  0.00%|       d2y[:,1:-1] = (P[:,2:] - 2*P[:,1:-1] + P[:,:-2])/hy/hy
    89|         0|            0|            0|  0.00%|       d2y[:,0]    = (P[:,1]  - 2*P[:,0]    + P_bottom)/hy/hy
    90|         0|            0|            0|  0.00%|       d2y[:,-1]   = (P_top   - 2*P[:,-1]   + P[:,-2])/hy/hy
    91|         0|            0|            0|  0.00%|
    92|         0|            0|            0|  0.00%|       return d2x + d2y - 10*cosh(P).mean()**2
    93|         0|            0|            0|  0.00%|
    94|         0|            0|            0|  0.00%|   # solve
    95|         0|            0|            0|  0.00%|   guess = zeros((nx, ny), float)
    96|         0|            0|            0|  0.00%|   sol = newton_krylov(residual, guess, method='lgmres', verbose=1)
    97|         0|            0|            0|  0.00%|   print('Residual: %g' % abs(residual(sol)).max())
    98|         0|            0|            0|  0.00%|
    99|         0|            0|            0|  0.00%|   # visualize
   100|         0|            0|            0|  0.00%|   import matplotlib.pyplot as plt
   101|         0|            0|            0|  0.00%|   x, y = mgrid[0:1:(nx*1j), 0:1:(ny*1j)]
   102|         0|            0|            0|  0.00%|   plt.pcolormesh(x, y, sol, shading='gouraud')
   103|         0|            0|            0|  0.00%|   plt.colorbar()
   104|         0|            0|            0|  0.00%|   plt.show()
   105|         0|            0|            0|  0.00%|
   106|         0|            0|            0|  0.00%|"""
   107|         0|            0|            0|  0.00%|# Copyright (C) 2009, Pauli Virtanen <pav@iki.fi>
   108|         0|            0|            0|  0.00%|# Distributed under the same license as SciPy.
   109|         0|            0|            0|  0.00%|
   110|         0|            0|            0|  0.00%|import sys
   111|         0|            0|            0|  0.00%|import numpy as np
   112|         0|            0|            0|  0.00%|from scipy.linalg import norm, solve, inv, qr, svd, LinAlgError
   113|         0|            0|            0|  0.00%|from numpy import asarray, dot, vdot
   114|         0|            0|            0|  0.00%|import scipy.sparse.linalg
   115|         0|            0|            0|  0.00%|import scipy.sparse
   116|         0|            0|            0|  0.00%|from scipy.linalg import get_blas_funcs
   117|         0|            0|            0|  0.00%|import inspect
   118|         0|            0|            0|  0.00%|from scipy._lib._util import getfullargspec_no_self as _getfullargspec
   119|         0|            0|            0|  0.00%|from .linesearch import scalar_search_wolfe1, scalar_search_armijo
   120|         0|            0|            0|  0.00%|
   121|         0|            0|            0|  0.00%|
   122|         0|            0|            0|  0.00%|__all__ = [
   123|         0|            0|            0|  0.00%|    'broyden1', 'broyden2', 'anderson', 'linearmixing',
   124|         0|            0|            0|  0.00%|    'diagbroyden', 'excitingmixing', 'newton_krylov']
   125|         0|            0|            0|  0.00%|
   126|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   127|         0|            0|            0|  0.00%|# Utility functions
   128|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   129|         0|            0|            0|  0.00%|
   130|         0|            0|            0|  0.00%|
   131|         0|            0|            0|  0.00%|class NoConvergence(Exception):
   132|         0|            0|            0|  0.00%|    pass
   133|         0|            0|            0|  0.00%|
   134|         0|            0|            0|  0.00%|
   135|         0|            0|            0|  0.00%|def maxnorm(x):
   136|         0|            0|            0|  0.00%|    return np.absolute(x).max()
   137|         0|            0|            0|  0.00%|
   138|         0|            0|            0|  0.00%|
   139|         0|            0|            0|  0.00%|def _as_inexact(x):
   140|         0|            0|            0|  0.00%|    """Return `x` as an array, of either floats or complex floats"""
   141|         0|            0|            0|  0.00%|    x = asarray(x)
   142|         0|            0|            0|  0.00%|    if not np.issubdtype(x.dtype, np.inexact):
   143|         0|            0|            0|  0.00%|        return asarray(x, dtype=np.float_)
   144|         0|            0|            0|  0.00%|    return x
   145|         0|            0|            0|  0.00%|
   146|         0|            0|            0|  0.00%|
   147|         0|            0|            0|  0.00%|def _array_like(x, x0):
   148|         0|            0|            0|  0.00%|    """Return ndarray `x` as same array subclass and shape as `x0`"""
   149|         0|            0|            0|  0.00%|    x = np.reshape(x, np.shape(x0))
   150|         0|            0|            0|  0.00%|    wrap = getattr(x0, '__array_wrap__', x.__array_wrap__)
   151|         0|            0|            0|  0.00%|    return wrap(x)
   152|         0|            0|            0|  0.00%|
   153|         0|            0|            0|  0.00%|
   154|         0|            0|            0|  0.00%|def _safe_norm(v):
   155|         0|            0|            0|  0.00%|    if not np.isfinite(v).all():
   156|         0|            0|            0|  0.00%|        return np.array(np.inf)
   157|         0|            0|            0|  0.00%|    return norm(v)
   158|         0|            0|            0|  0.00%|
   159|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   160|         0|            0|            0|  0.00%|# Generic nonlinear solver machinery
   161|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   162|         0|            0|            0|  0.00%|
   163|         0|            0|            0|  0.00%|
   164|         0|            0|            0|  0.00%|_doc_parts = dict(
   165|         0|            0|            0|  0.00%|    params_basic="""
   166|         0|            0|            0|  0.00%|    F : function(x) -> f
   167|         0|            0|            0|  0.00%|        Function whose root to find; should take and return an array-like
   168|         0|            0|            0|  0.00%|        object.
   169|         0|            0|            0|  0.00%|    xin : array_like
   170|         0|            0|            0|  0.00%|        Initial guess for the solution
   171|         0|            0|            0|  0.00%|    """.strip(),
   172|         0|            0|            0|  0.00%|    params_extra="""
   173|         0|            0|            0|  0.00%|    iter : int, optional
   174|         0|            0|            0|  0.00%|        Number of iterations to make. If omitted (default), make as many
   175|         0|            0|            0|  0.00%|        as required to meet tolerances.
   176|         0|            0|            0|  0.00%|    verbose : bool, optional
   177|         0|            0|            0|  0.00%|        Print status to stdout on every iteration.
   178|         0|            0|            0|  0.00%|    maxiter : int, optional
   179|         0|            0|            0|  0.00%|        Maximum number of iterations to make. If more are needed to
   180|         0|            0|            0|  0.00%|        meet convergence, `NoConvergence` is raised.
   181|         0|            0|            0|  0.00%|    f_tol : float, optional
   182|         0|            0|            0|  0.00%|        Absolute tolerance (in max-norm) for the residual.
   183|         0|            0|            0|  0.00%|        If omitted, default is 6e-6.
   184|         0|            0|            0|  0.00%|    f_rtol : float, optional
   185|         0|            0|            0|  0.00%|        Relative tolerance for the residual. If omitted, not used.
   186|         0|            0|            0|  0.00%|    x_tol : float, optional
   187|         0|            0|            0|  0.00%|        Absolute minimum step size, as determined from the Jacobian
   188|         0|            0|            0|  0.00%|        approximation. If the step size is smaller than this, optimization
   189|         0|            0|            0|  0.00%|        is terminated as successful. If omitted, not used.
   190|         0|            0|            0|  0.00%|    x_rtol : float, optional
   191|         0|            0|            0|  0.00%|        Relative minimum step size. If omitted, not used.
   192|         0|            0|            0|  0.00%|    tol_norm : function(vector) -> scalar, optional
   193|         0|            0|            0|  0.00%|        Norm to use in convergence check. Default is the maximum norm.
   194|         0|            0|            0|  0.00%|    line_search : {None, 'armijo' (default), 'wolfe'}, optional
   195|         0|            0|            0|  0.00%|        Which type of a line search to use to determine the step size in the
   196|         0|            0|            0|  0.00%|        direction given by the Jacobian approximation. Defaults to 'armijo'.
   197|         0|            0|            0|  0.00%|    callback : function, optional
   198|         0|            0|            0|  0.00%|        Optional callback function. It is called on every iteration as
   199|         0|            0|            0|  0.00%|        ``callback(x, f)`` where `x` is the current solution and `f`
   200|         0|            0|            0|  0.00%|        the corresponding residual.
   201|         0|            0|            0|  0.00%|
   202|         0|            0|            0|  0.00%|    Returns
   203|         0|            0|            0|  0.00%|    -------
   204|         0|            0|            0|  0.00%|    sol : ndarray
   205|         0|            0|            0|  0.00%|        An array (of similar array type as `x0`) containing the final solution.
   206|         0|            0|            0|  0.00%|
   207|         0|            0|            0|  0.00%|    Raises
   208|         0|            0|            0|  0.00%|    ------
   209|         0|            0|            0|  0.00%|    NoConvergence
   210|         0|            0|            0|  0.00%|        When a solution was not found.
   211|         0|            0|            0|  0.00%|
   212|         0|            0|            0|  0.00%|    """.strip()
   213|         0|            0|            0|  0.00%|)
   214|         0|            0|            0|  0.00%|
   215|         0|            0|            0|  0.00%|
   216|         0|            0|            0|  0.00%|def _set_doc(obj):
   217|         0|            0|            0|  0.00%|    if obj.__doc__:
   218|         0|            0|            0|  0.00%|        obj.__doc__ = obj.__doc__ % _doc_parts
   219|         0|            0|            0|  0.00%|
   220|         0|            0|            0|  0.00%|
   221|         0|            0|            0|  0.00%|def nonlin_solve(F, x0, jacobian='krylov', iter=None, verbose=False,
   222|         0|            0|            0|  0.00%|                 maxiter=None, f_tol=None, f_rtol=None, x_tol=None, x_rtol=None,
   223|         0|            0|            0|  0.00%|                 tol_norm=None, line_search='armijo', callback=None,
   224|         0|            0|            0|  0.00%|                 full_output=False, raise_exception=True):
   225|         0|            0|            0|  0.00%|    """
   226|         0|            0|            0|  0.00%|    Find a root of a function, in a way suitable for large-scale problems.
   227|         0|            0|            0|  0.00%|
   228|         0|            0|            0|  0.00%|    Parameters
   229|         0|            0|            0|  0.00%|    ----------
   230|         0|            0|            0|  0.00%|    %(params_basic)s
   231|         0|            0|            0|  0.00%|    jacobian : Jacobian
   232|         0|            0|            0|  0.00%|        A Jacobian approximation: `Jacobian` object or something that
   233|         0|            0|            0|  0.00%|        `asjacobian` can transform to one. Alternatively, a string specifying
   234|         0|            0|            0|  0.00%|        which of the builtin Jacobian approximations to use:
   235|         0|            0|            0|  0.00%|
   236|         0|            0|            0|  0.00%|            krylov, broyden1, broyden2, anderson
   237|         0|            0|            0|  0.00%|            diagbroyden, linearmixing, excitingmixing
   238|         0|            0|            0|  0.00%|
   239|         0|            0|            0|  0.00%|    %(params_extra)s
   240|         0|            0|            0|  0.00%|    full_output : bool
   241|         0|            0|            0|  0.00%|        If true, returns a dictionary `info` containing convergence
   242|         0|            0|            0|  0.00%|        information.
   243|         0|            0|            0|  0.00%|    raise_exception : bool
   244|         0|            0|            0|  0.00%|        If True, a `NoConvergence` exception is raise if no solution is found.
   245|         0|            0|            0|  0.00%|
   246|         0|            0|            0|  0.00%|    See Also
   247|         0|            0|            0|  0.00%|    --------
   248|         0|            0|            0|  0.00%|    asjacobian, Jacobian
   249|         0|            0|            0|  0.00%|
   250|         0|            0|            0|  0.00%|    Notes
   251|         0|            0|            0|  0.00%|    -----
   252|         0|            0|            0|  0.00%|    This algorithm implements the inexact Newton method, with
   253|         0|            0|            0|  0.00%|    backtracking or full line searches. Several Jacobian
   254|         0|            0|            0|  0.00%|    approximations are available, including Krylov and Quasi-Newton
   255|         0|            0|            0|  0.00%|    methods.
   256|         0|            0|            0|  0.00%|
   257|         0|            0|            0|  0.00%|    References
   258|         0|            0|            0|  0.00%|    ----------
   259|         0|            0|            0|  0.00%|    .. [KIM] C. T. Kelley, \"Iterative Methods for Linear and Nonlinear
   260|         0|            0|            0|  0.00%|       Equations\". Society for Industrial and Applied Mathematics. (1995)
   261|         0|            0|            0|  0.00%|       https://archive.siam.org/books/kelley/fr16/
   262|         0|            0|            0|  0.00%|
   263|         0|            0|            0|  0.00%|    """
   264|         0|            0|            0|  0.00%|    # Can't use default parameters because it's being explicitly passed as None
   265|         0|            0|            0|  0.00%|    # from the calling function, so we need to set it here.
   266|         0|            0|            0|  0.00%|    tol_norm = maxnorm if tol_norm is None else tol_norm
   267|         0|            0|            0|  0.00%|    condition = TerminationCondition(f_tol=f_tol, f_rtol=f_rtol,
   268|         0|            0|            0|  0.00%|                                     x_tol=x_tol, x_rtol=x_rtol,
   269|         0|            0|            0|  0.00%|                                     iter=iter, norm=tol_norm)
   270|         0|            0|            0|  0.00%|
   271|         0|            0|            0|  0.00%|    x0 = _as_inexact(x0)
   272|         0|            0|            0|  0.00%|    func = lambda z: _as_inexact(F(_array_like(z, x0))).flatten()
   273|         0|            0|            0|  0.00%|    x = x0.flatten()
   274|         0|            0|            0|  0.00%|
   275|         0|            0|            0|  0.00%|    dx = np.inf
   276|         0|            0|            0|  0.00%|    Fx = func(x)
   277|         0|            0|            0|  0.00%|    Fx_norm = norm(Fx)
   278|         0|            0|            0|  0.00%|
   279|         0|            0|            0|  0.00%|    jacobian = asjacobian(jacobian)
   280|         0|            0|            0|  0.00%|    jacobian.setup(x.copy(), Fx, func)
   281|         0|            0|            0|  0.00%|
   282|         0|            0|            0|  0.00%|    if maxiter is None:
   283|         0|            0|            0|  0.00%|        if iter is not None:
   284|         0|            0|            0|  0.00%|            maxiter = iter + 1
   285|         0|            0|            0|  0.00%|        else:
   286|         0|            0|            0|  0.00%|            maxiter = 100*(x.size+1)
   287|         0|            0|            0|  0.00%|
   288|         0|            0|            0|  0.00%|    if line_search is True:
   289|         0|            0|            0|  0.00%|        line_search = 'armijo'
   290|         0|            0|            0|  0.00%|    elif line_search is False:
   291|         0|            0|            0|  0.00%|        line_search = None
   292|         0|            0|            0|  0.00%|
   293|         0|            0|            0|  0.00%|    if line_search not in (None, 'armijo', 'wolfe'):
   294|         0|            0|            0|  0.00%|        raise ValueError("Invalid line search")
   295|         0|            0|            0|  0.00%|
   296|         0|            0|            0|  0.00%|    # Solver tolerance selection
   297|         0|            0|            0|  0.00%|    gamma = 0.9
   298|         0|            0|            0|  0.00%|    eta_max = 0.9999
   299|         0|            0|            0|  0.00%|    eta_treshold = 0.1
   300|         0|            0|            0|  0.00%|    eta = 1e-3
   301|         0|            0|            0|  0.00%|
   302|         0|            0|            0|  0.00%|    for n in range(maxiter):
   303|         0|            0|            0|  0.00%|        status = condition.check(Fx, x, dx)
   304|         0|            0|            0|  0.00%|        if status:
   305|         0|            0|            0|  0.00%|            break
   306|         0|            0|            0|  0.00%|
   307|         0|            0|            0|  0.00%|        # The tolerance, as computed for scipy.sparse.linalg.* routines
   308|         0|            0|            0|  0.00%|        tol = min(eta, eta*Fx_norm)
   309|         0|            0|            0|  0.00%|        dx = -jacobian.solve(Fx, tol=tol)
   310|         0|            0|            0|  0.00%|
   311|         0|            0|            0|  0.00%|        if norm(dx) == 0:
   312|         0|            0|            0|  0.00%|            raise ValueError("Jacobian inversion yielded zero vector. "
   313|         0|            0|            0|  0.00%|                             "This indicates a bug in the Jacobian "
   314|         0|            0|            0|  0.00%|                             "approximation.")
   315|         0|            0|            0|  0.00%|
   316|         0|            0|            0|  0.00%|        # Line search, or Newton step
   317|         0|            0|            0|  0.00%|        if line_search:
   318|         0|            0|            0|  0.00%|            s, x, Fx, Fx_norm_new = _nonlin_line_search(func, x, Fx, dx,
   319|         0|            0|            0|  0.00%|                                                        line_search)
   320|         0|            0|            0|  0.00%|        else:
   321|         0|            0|            0|  0.00%|            s = 1.0
   322|         0|            0|            0|  0.00%|            x = x + dx
   323|         0|            0|            0|  0.00%|            Fx = func(x)
   324|         0|            0|            0|  0.00%|            Fx_norm_new = norm(Fx)
   325|         0|            0|            0|  0.00%|
   326|         0|            0|            0|  0.00%|        jacobian.update(x.copy(), Fx)
   327|         0|            0|            0|  0.00%|
   328|         0|            0|            0|  0.00%|        if callback:
   329|         0|            0|            0|  0.00%|            callback(x, Fx)
   330|         0|            0|            0|  0.00%|
   331|         0|            0|            0|  0.00%|        # Adjust forcing parameters for inexact methods
   332|         0|            0|            0|  0.00%|        eta_A = gamma * Fx_norm_new**2 / Fx_norm**2
   333|         0|            0|            0|  0.00%|        if gamma * eta**2 < eta_treshold:
   334|         0|            0|            0|  0.00%|            eta = min(eta_max, eta_A)
   335|         0|            0|            0|  0.00%|        else:
   336|         0|            0|            0|  0.00%|            eta = min(eta_max, max(eta_A, gamma*eta**2))
   337|         0|            0|            0|  0.00%|
   338|         0|            0|            0|  0.00%|        Fx_norm = Fx_norm_new
   339|         0|            0|            0|  0.00%|
   340|         0|            0|            0|  0.00%|        # Print status
   341|         0|            0|            0|  0.00%|        if verbose:
   342|         0|            0|            0|  0.00%|            sys.stdout.write("%d:  |F(x)| = %g; step %g\n" % (
   343|         0|            0|            0|  0.00%|                n, tol_norm(Fx), s))
   344|         0|            0|            0|  0.00%|            sys.stdout.flush()
   345|         0|            0|            0|  0.00%|    else:
   346|         0|            0|            0|  0.00%|        if raise_exception:
   347|         0|            0|            0|  0.00%|            raise NoConvergence(_array_like(x, x0))
   348|         0|            0|            0|  0.00%|        else:
   349|         0|            0|            0|  0.00%|            status = 2
   350|         0|            0|            0|  0.00%|
   351|         0|            0|            0|  0.00%|    if full_output:
   352|         0|            0|            0|  0.00%|        info = {'nit': condition.iteration,
   353|         0|            0|            0|  0.00%|                'fun': Fx,
   354|         0|            0|            0|  0.00%|                'status': status,
   355|         0|            0|            0|  0.00%|                'success': status == 1,
   356|         0|            0|            0|  0.00%|                'message': {1: 'A solution was found at the specified '
   357|         0|            0|            0|  0.00%|                               'tolerance.',
   358|         0|            0|            0|  0.00%|                            2: 'The maximum number of iterations allowed '
   359|         0|            0|            0|  0.00%|                               'has been reached.'
   360|         0|            0|            0|  0.00%|                            }[status]
   361|         0|            0|            0|  0.00%|                }
   362|         0|            0|            0|  0.00%|        return _array_like(x, x0), info
   363|         0|            0|            0|  0.00%|    else:
   364|         0|            0|            0|  0.00%|        return _array_like(x, x0)
   365|         0|            0|            0|  0.00%|
   366|         0|            0|            0|  0.00%|
   367|         0|            0|            0|  0.00%|_set_doc(nonlin_solve)
   368|         0|            0|            0|  0.00%|
   369|         0|            0|            0|  0.00%|
   370|         0|            0|            0|  0.00%|def _nonlin_line_search(func, x, Fx, dx, search_type='armijo', rdiff=1e-8,
   371|         0|            0|            0|  0.00%|                        smin=1e-2):
   372|         0|            0|            0|  0.00%|    tmp_s = [0]
   373|         0|            0|            0|  0.00%|    tmp_Fx = [Fx]
   374|         0|            0|            0|  0.00%|    tmp_phi = [norm(Fx)**2]
   375|         0|            0|            0|  0.00%|    s_norm = norm(x) / norm(dx)
   376|         0|            0|            0|  0.00%|
   377|         0|            0|            0|  0.00%|    def phi(s, store=True):
   378|         0|            0|            0|  0.00%|        if s == tmp_s[0]:
   379|         0|            0|            0|  0.00%|            return tmp_phi[0]
   380|         0|            0|            0|  0.00%|        xt = x + s*dx
   381|         0|            0|            0|  0.00%|        v = func(xt)
   382|         0|            0|            0|  0.00%|        p = _safe_norm(v)**2
   383|         0|            0|            0|  0.00%|        if store:
   384|         0|            0|            0|  0.00%|            tmp_s[0] = s
   385|         0|            0|            0|  0.00%|            tmp_phi[0] = p
   386|         0|            0|            0|  0.00%|            tmp_Fx[0] = v
   387|         0|            0|            0|  0.00%|        return p
   388|         0|            0|            0|  0.00%|
   389|         0|            0|            0|  0.00%|    def derphi(s):
   390|         0|            0|            0|  0.00%|        ds = (abs(s) + s_norm + 1) * rdiff
   391|         0|            0|            0|  0.00%|        return (phi(s+ds, store=False) - phi(s)) / ds
   392|         0|            0|            0|  0.00%|
   393|         0|            0|            0|  0.00%|    if search_type == 'wolfe':
   394|         0|            0|            0|  0.00%|        s, phi1, phi0 = scalar_search_wolfe1(phi, derphi, tmp_phi[0],
   395|         0|            0|            0|  0.00%|                                             xtol=1e-2, amin=smin)
   396|         0|            0|            0|  0.00%|    elif search_type == 'armijo':
   397|         0|            0|            0|  0.00%|        s, phi1 = scalar_search_armijo(phi, tmp_phi[0], -tmp_phi[0],
   398|         0|            0|            0|  0.00%|                                       amin=smin)
   399|         0|            0|            0|  0.00%|
   400|         0|            0|            0|  0.00%|    if s is None:
   401|         0|            0|            0|  0.00%|        # XXX: No suitable step length found. Take the full Newton step,
   402|         0|            0|            0|  0.00%|        #      and hope for the best.
   403|         0|            0|            0|  0.00%|        s = 1.0
   404|         0|            0|            0|  0.00%|
   405|         0|            0|            0|  0.00%|    x = x + s*dx
   406|         0|            0|            0|  0.00%|    if s == tmp_s[0]:
   407|         0|            0|            0|  0.00%|        Fx = tmp_Fx[0]
   408|         0|            0|            0|  0.00%|    else:
   409|         0|            0|            0|  0.00%|        Fx = func(x)
   410|         0|            0|            0|  0.00%|    Fx_norm = norm(Fx)
   411|         0|            0|            0|  0.00%|
   412|         0|            0|            0|  0.00%|    return s, x, Fx, Fx_norm
   413|         0|            0|            0|  0.00%|
   414|         0|            0|            0|  0.00%|
   415|         0|            0|            0|  0.00%|class TerminationCondition(object):
   416|         0|            0|            0|  0.00%|    """
   417|         0|            0|            0|  0.00%|    Termination condition for an iteration. It is terminated if
   418|         0|            0|            0|  0.00%|
   419|         0|            0|            0|  0.00%|    - |F| < f_rtol*|F_0|, AND
   420|         0|            0|            0|  0.00%|    - |F| < f_tol
   421|         0|            0|            0|  0.00%|
   422|         0|            0|            0|  0.00%|    AND
   423|         0|            0|            0|  0.00%|
   424|         0|            0|            0|  0.00%|    - |dx| < x_rtol*|x|, AND
   425|         0|            0|            0|  0.00%|    - |dx| < x_tol
   426|         0|            0|            0|  0.00%|
   427|         0|            0|            0|  0.00%|    """
   428|         0|            0|            0|  0.00%|    def __init__(self, f_tol=None, f_rtol=None, x_tol=None, x_rtol=None,
   429|         0|            0|            0|  0.00%|                 iter=None, norm=maxnorm):
   430|         0|            0|            0|  0.00%|
   431|         0|            0|            0|  0.00%|        if f_tol is None:
   432|         0|            0|            0|  0.00%|            f_tol = np.finfo(np.float_).eps ** (1./3)
   433|         0|            0|            0|  0.00%|        if f_rtol is None:
   434|         0|            0|            0|  0.00%|            f_rtol = np.inf
   435|         0|            0|            0|  0.00%|        if x_tol is None:
   436|         0|            0|            0|  0.00%|            x_tol = np.inf
   437|         0|            0|            0|  0.00%|        if x_rtol is None:
   438|         0|            0|            0|  0.00%|            x_rtol = np.inf
   439|         0|            0|            0|  0.00%|
   440|         0|            0|            0|  0.00%|        self.x_tol = x_tol
   441|         0|            0|            0|  0.00%|        self.x_rtol = x_rtol
   442|         0|            0|            0|  0.00%|        self.f_tol = f_tol
   443|         0|            0|            0|  0.00%|        self.f_rtol = f_rtol
   444|         0|            0|            0|  0.00%|
   445|         0|            0|            0|  0.00%|        self.norm = norm
   446|         0|            0|            0|  0.00%|
   447|         0|            0|            0|  0.00%|        self.iter = iter
   448|         0|            0|            0|  0.00%|
   449|         0|            0|            0|  0.00%|        self.f0_norm = None
   450|         0|            0|            0|  0.00%|        self.iteration = 0
   451|         0|            0|            0|  0.00%|
   452|         0|            0|            0|  0.00%|    def check(self, f, x, dx):
   453|         0|            0|            0|  0.00%|        self.iteration += 1
   454|         0|            0|            0|  0.00%|        f_norm = self.norm(f)
   455|         0|            0|            0|  0.00%|        x_norm = self.norm(x)
   456|         0|            0|            0|  0.00%|        dx_norm = self.norm(dx)
   457|         0|            0|            0|  0.00%|
   458|         0|            0|            0|  0.00%|        if self.f0_norm is None:
   459|         0|            0|            0|  0.00%|            self.f0_norm = f_norm
   460|         0|            0|            0|  0.00%|
   461|         0|            0|            0|  0.00%|        if f_norm == 0:
   462|         0|            0|            0|  0.00%|            return 1
   463|         0|            0|            0|  0.00%|
   464|         0|            0|            0|  0.00%|        if self.iter is not None:
   465|         0|            0|            0|  0.00%|            # backwards compatibility with SciPy 0.6.0
   466|         0|            0|            0|  0.00%|            return 2 * (self.iteration > self.iter)
   467|         0|            0|            0|  0.00%|
   468|         0|            0|            0|  0.00%|        # NB: condition must succeed for rtol=inf even if norm == 0
   469|         0|            0|            0|  0.00%|        return int((f_norm <= self.f_tol
   470|         0|            0|            0|  0.00%|                    and f_norm/self.f_rtol <= self.f0_norm)
   471|         0|            0|            0|  0.00%|                   and (dx_norm <= self.x_tol
   472|         0|            0|            0|  0.00%|                        and dx_norm/self.x_rtol <= x_norm))
   473|         0|            0|            0|  0.00%|
   474|         0|            0|            0|  0.00%|
   475|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   476|         0|            0|            0|  0.00%|# Generic Jacobian approximation
   477|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   478|         0|            0|            0|  0.00%|
   479|         0|            0|            0|  0.00%|class Jacobian(object):
   480|         0|            0|            0|  0.00%|    """
   481|         0|            0|            0|  0.00%|    Common interface for Jacobians or Jacobian approximations.
   482|         0|            0|            0|  0.00%|
   483|         0|            0|            0|  0.00%|    The optional methods come useful when implementing trust region
   484|         0|            0|            0|  0.00%|    etc., algorithms that often require evaluating transposes of the
   485|         0|            0|            0|  0.00%|    Jacobian.
   486|         0|            0|            0|  0.00%|
   487|         0|            0|            0|  0.00%|    Methods
   488|         0|            0|            0|  0.00%|    -------
   489|         0|            0|            0|  0.00%|    solve
   490|         0|            0|            0|  0.00%|        Returns J^-1 * v
   491|         0|            0|            0|  0.00%|    update
   492|         0|            0|            0|  0.00%|        Updates Jacobian to point `x` (where the function has residual `Fx`)
   493|         0|            0|            0|  0.00%|
   494|         0|            0|            0|  0.00%|    matvec : optional
   495|         0|            0|            0|  0.00%|        Returns J * v
   496|         0|            0|            0|  0.00%|    rmatvec : optional
   497|         0|            0|            0|  0.00%|        Returns A^H * v
   498|         0|            0|            0|  0.00%|    rsolve : optional
   499|         0|            0|            0|  0.00%|        Returns A^-H * v
   500|         0|            0|            0|  0.00%|    matmat : optional
   501|         0|            0|            0|  0.00%|        Returns A * V, where V is a dense matrix with dimensions (N,K).
   502|         0|            0|            0|  0.00%|    todense : optional
   503|         0|            0|            0|  0.00%|        Form the dense Jacobian matrix. Necessary for dense trust region
   504|         0|            0|            0|  0.00%|        algorithms, and useful for testing.
   505|         0|            0|            0|  0.00%|
   506|         0|            0|            0|  0.00%|    Attributes
   507|         0|            0|            0|  0.00%|    ----------
   508|         0|            0|            0|  0.00%|    shape
   509|         0|            0|            0|  0.00%|        Matrix dimensions (M, N)
   510|         0|            0|            0|  0.00%|    dtype
   511|         0|            0|            0|  0.00%|        Data type of the matrix.
   512|         0|            0|            0|  0.00%|    func : callable, optional
   513|         0|            0|            0|  0.00%|        Function the Jacobian corresponds to
   514|         0|            0|            0|  0.00%|
   515|         0|            0|            0|  0.00%|    """
   516|         0|            0|            0|  0.00%|
   517|         0|            0|            0|  0.00%|    def __init__(self, **kw):
   518|         0|            0|            0|  0.00%|        names = ["solve", "update", "matvec", "rmatvec", "rsolve",
   519|         0|            0|            0|  0.00%|                 "matmat", "todense", "shape", "dtype"]
   520|         0|            0|            0|  0.00%|        for name, value in kw.items():
   521|         0|            0|            0|  0.00%|            if name not in names:
   522|         0|            0|            0|  0.00%|                raise ValueError("Unknown keyword argument %s" % name)
   523|         0|            0|            0|  0.00%|            if value is not None:
   524|         0|            0|            0|  0.00%|                setattr(self, name, kw[name])
   525|         0|            0|            0|  0.00%|
   526|         0|            0|            0|  0.00%|        if hasattr(self, 'todense'):
   527|         0|            0|            0|  0.00%|            self.__array__ = lambda: self.todense()
   528|         0|            0|            0|  0.00%|
   529|         0|            0|            0|  0.00%|    def aspreconditioner(self):
   530|         0|            0|            0|  0.00%|        return InverseJacobian(self)
   531|         0|            0|            0|  0.00%|
   532|         0|            0|            0|  0.00%|    def solve(self, v, tol=0):
   533|         0|            0|            0|  0.00%|        raise NotImplementedError
   534|         0|            0|            0|  0.00%|
   535|         0|            0|            0|  0.00%|    def update(self, x, F):
   536|         0|            0|            0|  0.00%|        pass
   537|         0|            0|            0|  0.00%|
   538|         0|            0|            0|  0.00%|    def setup(self, x, F, func):
   539|         0|            0|            0|  0.00%|        self.func = func
   540|         0|            0|            0|  0.00%|        self.shape = (F.size, x.size)
   541|         0|            0|            0|  0.00%|        self.dtype = F.dtype
   542|         0|            0|            0|  0.00%|        if self.__class__.setup is Jacobian.setup:
   543|         0|            0|            0|  0.00%|            # Call on the first point unless overridden
   544|         0|            0|            0|  0.00%|            self.update(x, F)
   545|         0|            0|            0|  0.00%|
   546|         0|            0|            0|  0.00%|
   547|         0|            0|            0|  0.00%|class InverseJacobian(object):
   548|         0|            0|            0|  0.00%|    def __init__(self, jacobian):
   549|         0|            0|            0|  0.00%|        self.jacobian = jacobian
   550|         0|            0|            0|  0.00%|        self.matvec = jacobian.solve
   551|         0|            0|            0|  0.00%|        self.update = jacobian.update
   552|         0|            0|            0|  0.00%|        if hasattr(jacobian, 'setup'):
   553|         0|            0|            0|  0.00%|            self.setup = jacobian.setup
   554|         0|            0|            0|  0.00%|        if hasattr(jacobian, 'rsolve'):
   555|         0|            0|            0|  0.00%|            self.rmatvec = jacobian.rsolve
   556|         0|            0|            0|  0.00%|
   557|         0|            0|            0|  0.00%|    @property
   558|         0|            0|            0|  0.00%|    def shape(self):
   559|         0|            0|            0|  0.00%|        return self.jacobian.shape
   560|         0|            0|            0|  0.00%|
   561|         0|            0|            0|  0.00%|    @property
   562|         0|            0|            0|  0.00%|    def dtype(self):
   563|         0|            0|            0|  0.00%|        return self.jacobian.dtype
   564|         0|            0|            0|  0.00%|
   565|         0|            0|            0|  0.00%|
   566|         0|            0|            0|  0.00%|def asjacobian(J):
   567|         0|            0|            0|  0.00%|    """
   568|         0|            0|            0|  0.00%|    Convert given object to one suitable for use as a Jacobian.
   569|         0|            0|            0|  0.00%|    """
   570|         0|            0|            0|  0.00%|    spsolve = scipy.sparse.linalg.spsolve
   571|         0|            0|            0|  0.00%|    if isinstance(J, Jacobian):
   572|         0|            0|            0|  0.00%|        return J
   573|         0|            0|            0|  0.00%|    elif inspect.isclass(J) and issubclass(J, Jacobian):
   574|         0|            0|            0|  0.00%|        return J()
   575|         0|            0|            0|  0.00%|    elif isinstance(J, np.ndarray):
   576|         0|            0|            0|  0.00%|        if J.ndim > 2:
   577|         0|            0|            0|  0.00%|            raise ValueError('array must have rank <= 2')
   578|         0|            0|            0|  0.00%|        J = np.atleast_2d(np.asarray(J))
   579|         0|            0|            0|  0.00%|        if J.shape[0] != J.shape[1]:
   580|         0|            0|            0|  0.00%|            raise ValueError('array must be square')
   581|         0|            0|            0|  0.00%|
   582|         0|            0|            0|  0.00%|        return Jacobian(matvec=lambda v: dot(J, v),
   583|         0|            0|            0|  0.00%|                        rmatvec=lambda v: dot(J.conj().T, v),
   584|         0|            0|            0|  0.00%|                        solve=lambda v: solve(J, v),
   585|         0|            0|            0|  0.00%|                        rsolve=lambda v: solve(J.conj().T, v),
   586|         0|            0|            0|  0.00%|                        dtype=J.dtype, shape=J.shape)
   587|         0|            0|            0|  0.00%|    elif scipy.sparse.isspmatrix(J):
   588|         0|            0|            0|  0.00%|        if J.shape[0] != J.shape[1]:
   589|         0|            0|            0|  0.00%|            raise ValueError('matrix must be square')
   590|         0|            0|            0|  0.00%|        return Jacobian(matvec=lambda v: J*v,
   591|         0|            0|            0|  0.00%|                        rmatvec=lambda v: J.conj().T * v,
   592|         0|            0|            0|  0.00%|                        solve=lambda v: spsolve(J, v),
   593|         0|            0|            0|  0.00%|                        rsolve=lambda v: spsolve(J.conj().T, v),
   594|         0|            0|            0|  0.00%|                        dtype=J.dtype, shape=J.shape)
   595|         0|            0|            0|  0.00%|    elif hasattr(J, 'shape') and hasattr(J, 'dtype') and hasattr(J, 'solve'):
   596|         0|            0|            0|  0.00%|        return Jacobian(matvec=getattr(J, 'matvec'),
   597|         0|            0|            0|  0.00%|                        rmatvec=getattr(J, 'rmatvec'),
   598|         0|            0|            0|  0.00%|                        solve=J.solve,
   599|         0|            0|            0|  0.00%|                        rsolve=getattr(J, 'rsolve'),
   600|         0|            0|            0|  0.00%|                        update=getattr(J, 'update'),
   601|         0|            0|            0|  0.00%|                        setup=getattr(J, 'setup'),
   602|         0|            0|            0|  0.00%|                        dtype=J.dtype,
   603|         0|            0|            0|  0.00%|                        shape=J.shape)
   604|         0|            0|            0|  0.00%|    elif callable(J):
   605|         0|            0|            0|  0.00%|        # Assume it's a function J(x) that returns the Jacobian
   606|         0|            0|            0|  0.00%|        class Jac(Jacobian):
   607|         0|            0|            0|  0.00%|            def update(self, x, F):
   608|         0|            0|            0|  0.00%|                self.x = x
   609|         0|            0|            0|  0.00%|
   610|         0|            0|            0|  0.00%|            def solve(self, v, tol=0):
   611|         0|            0|            0|  0.00%|                m = J(self.x)
   612|         0|            0|            0|  0.00%|                if isinstance(m, np.ndarray):
   613|         0|            0|            0|  0.00%|                    return solve(m, v)
   614|         0|            0|            0|  0.00%|                elif scipy.sparse.isspmatrix(m):
   615|         0|            0|            0|  0.00%|                    return spsolve(m, v)
   616|         0|            0|            0|  0.00%|                else:
   617|         0|            0|            0|  0.00%|                    raise ValueError("Unknown matrix type")
   618|         0|            0|            0|  0.00%|
   619|         0|            0|            0|  0.00%|            def matvec(self, v):
   620|         0|            0|            0|  0.00%|                m = J(self.x)
   621|         0|            0|            0|  0.00%|                if isinstance(m, np.ndarray):
   622|         0|            0|            0|  0.00%|                    return dot(m, v)
   623|         0|            0|            0|  0.00%|                elif scipy.sparse.isspmatrix(m):
   624|         0|            0|            0|  0.00%|                    return m*v
   625|         0|            0|            0|  0.00%|                else:
   626|         0|            0|            0|  0.00%|                    raise ValueError("Unknown matrix type")
   627|         0|            0|            0|  0.00%|
   628|         0|            0|            0|  0.00%|            def rsolve(self, v, tol=0):
   629|         0|            0|            0|  0.00%|                m = J(self.x)
   630|         0|            0|            0|  0.00%|                if isinstance(m, np.ndarray):
   631|         0|            0|            0|  0.00%|                    return solve(m.conj().T, v)
   632|         0|            0|            0|  0.00%|                elif scipy.sparse.isspmatrix(m):
   633|         0|            0|            0|  0.00%|                    return spsolve(m.conj().T, v)
   634|         0|            0|            0|  0.00%|                else:
   635|         0|            0|            0|  0.00%|                    raise ValueError("Unknown matrix type")
   636|         0|            0|            0|  0.00%|
   637|         0|            0|            0|  0.00%|            def rmatvec(self, v):
   638|         0|            0|            0|  0.00%|                m = J(self.x)
   639|         0|            0|            0|  0.00%|                if isinstance(m, np.ndarray):
   640|         0|            0|            0|  0.00%|                    return dot(m.conj().T, v)
   641|         0|            0|            0|  0.00%|                elif scipy.sparse.isspmatrix(m):
   642|         0|            0|            0|  0.00%|                    return m.conj().T * v
   643|         0|            0|            0|  0.00%|                else:
   644|         0|            0|            0|  0.00%|                    raise ValueError("Unknown matrix type")
   645|         0|            0|            0|  0.00%|        return Jac()
   646|         0|            0|            0|  0.00%|    elif isinstance(J, str):
   647|         0|            0|            0|  0.00%|        return dict(broyden1=BroydenFirst,
   648|         0|            0|            0|  0.00%|                    broyden2=BroydenSecond,
   649|         0|            0|            0|  0.00%|                    anderson=Anderson,
   650|         0|            0|            0|  0.00%|                    diagbroyden=DiagBroyden,
   651|         0|            0|            0|  0.00%|                    linearmixing=LinearMixing,
   652|         0|            0|            0|  0.00%|                    excitingmixing=ExcitingMixing,
   653|         0|            0|            0|  0.00%|                    krylov=KrylovJacobian)[J]()
   654|         0|            0|            0|  0.00%|    else:
   655|         0|            0|            0|  0.00%|        raise TypeError('Cannot convert object to a Jacobian')
   656|         0|            0|            0|  0.00%|
   657|         0|            0|            0|  0.00%|
   658|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   659|         0|            0|            0|  0.00%|# Broyden
   660|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   661|         0|            0|            0|  0.00%|
   662|         0|            0|            0|  0.00%|class GenericBroyden(Jacobian):
   663|         0|            0|            0|  0.00%|    def setup(self, x0, f0, func):
   664|         0|            0|            0|  0.00%|        Jacobian.setup(self, x0, f0, func)
   665|         0|            0|            0|  0.00%|        self.last_f = f0
   666|         0|            0|            0|  0.00%|        self.last_x = x0
   667|         0|            0|            0|  0.00%|
   668|         0|            0|            0|  0.00%|        if hasattr(self, 'alpha') and self.alpha is None:
   669|         0|            0|            0|  0.00%|            # Autoscale the initial Jacobian parameter
   670|         0|            0|            0|  0.00%|            # unless we have already guessed the solution.
   671|         0|            0|            0|  0.00%|            normf0 = norm(f0)
   672|         0|            0|            0|  0.00%|            if normf0:
   673|         0|            0|            0|  0.00%|                self.alpha = 0.5*max(norm(x0), 1) / normf0
   674|         0|            0|            0|  0.00%|            else:
   675|         0|            0|            0|  0.00%|                self.alpha = 1.0
   676|         0|            0|            0|  0.00%|
   677|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
   678|         0|            0|            0|  0.00%|        raise NotImplementedError
   679|         0|            0|            0|  0.00%|
   680|         0|            0|            0|  0.00%|    def update(self, x, f):
   681|         0|            0|            0|  0.00%|        df = f - self.last_f
   682|         0|            0|            0|  0.00%|        dx = x - self.last_x
   683|         0|            0|            0|  0.00%|        self._update(x, f, dx, df, norm(dx), norm(df))
   684|         0|            0|            0|  0.00%|        self.last_f = f
   685|         0|            0|            0|  0.00%|        self.last_x = x
   686|         0|            0|            0|  0.00%|
   687|         0|            0|            0|  0.00%|
   688|         0|            0|            0|  0.00%|class LowRankMatrix(object):
   689|         0|            0|            0|  0.00%|    r"""
   690|         0|            0|            0|  0.00%|    A matrix represented as
   691|         0|            0|            0|  0.00%|
   692|         0|            0|            0|  0.00%|    .. math:: \alpha I + \sum_{n=0}^{n=M} c_n d_n^\dagger
   693|         0|            0|            0|  0.00%|
   694|         0|            0|            0|  0.00%|    However, if the rank of the matrix reaches the dimension of the vectors,
   695|         0|            0|            0|  0.00%|    full matrix representation will be used thereon.
   696|         0|            0|            0|  0.00%|
   697|         0|            0|            0|  0.00%|    """
   698|         0|            0|            0|  0.00%|
   699|         0|            0|            0|  0.00%|    def __init__(self, alpha, n, dtype):
   700|         0|            0|            0|  0.00%|        self.alpha = alpha
   701|         0|            0|            0|  0.00%|        self.cs = []
   702|         0|            0|            0|  0.00%|        self.ds = []
   703|         0|            0|            0|  0.00%|        self.n = n
   704|         0|            0|            0|  0.00%|        self.dtype = dtype
   705|         0|            0|            0|  0.00%|        self.collapsed = None
   706|         0|            0|            0|  0.00%|
   707|         0|            0|            0|  0.00%|    @staticmethod
   708|         0|            0|            0|  0.00%|    def _matvec(v, alpha, cs, ds):
   709|         0|            0|            0|  0.00%|        axpy, scal, dotc = get_blas_funcs(['axpy', 'scal', 'dotc'],
   710|         0|            0|            0|  0.00%|                                          cs[:1] + [v])
   711|         0|            0|            0|  0.00%|        w = alpha * v
   712|         0|            0|            0|  0.00%|        for c, d in zip(cs, ds):
   713|         0|            0|            0|  0.00%|            a = dotc(d, v)
   714|         0|            0|            0|  0.00%|            w = axpy(c, w, w.size, a)
   715|         0|            0|            0|  0.00%|        return w
   716|         0|            0|            0|  0.00%|
   717|         0|            0|            0|  0.00%|    @staticmethod
   718|         0|            0|            0|  0.00%|    def _solve(v, alpha, cs, ds):
   719|         0|            0|            0|  0.00%|        """Evaluate w = M^-1 v"""
   720|         0|            0|            0|  0.00%|        if len(cs) == 0:
   721|         0|            0|            0|  0.00%|            return v/alpha
   722|         0|            0|            0|  0.00%|
   723|         0|            0|            0|  0.00%|        # (B + C D^H)^-1 = B^-1 - B^-1 C (I + D^H B^-1 C)^-1 D^H B^-1
   724|         0|            0|            0|  0.00%|
   725|         0|            0|            0|  0.00%|        axpy, dotc = get_blas_funcs(['axpy', 'dotc'], cs[:1] + [v])
   726|         0|            0|            0|  0.00%|
   727|         0|            0|            0|  0.00%|        c0 = cs[0]
   728|         0|            0|            0|  0.00%|        A = alpha * np.identity(len(cs), dtype=c0.dtype)
   729|         0|            0|            0|  0.00%|        for i, d in enumerate(ds):
   730|         0|            0|            0|  0.00%|            for j, c in enumerate(cs):
   731|         0|            0|            0|  0.00%|                A[i,j] += dotc(d, c)
   732|         0|            0|            0|  0.00%|
   733|         0|            0|            0|  0.00%|        q = np.zeros(len(cs), dtype=c0.dtype)
   734|         0|            0|            0|  0.00%|        for j, d in enumerate(ds):
   735|         0|            0|            0|  0.00%|            q[j] = dotc(d, v)
   736|         0|            0|            0|  0.00%|        q /= alpha
   737|         0|            0|            0|  0.00%|        q = solve(A, q)
   738|         0|            0|            0|  0.00%|
   739|         0|            0|            0|  0.00%|        w = v/alpha
   740|         0|            0|            0|  0.00%|        for c, qc in zip(cs, q):
   741|         0|            0|            0|  0.00%|            w = axpy(c, w, w.size, -qc)
   742|         0|            0|            0|  0.00%|
   743|         0|            0|            0|  0.00%|        return w
   744|         0|            0|            0|  0.00%|
   745|         0|            0|            0|  0.00%|    def matvec(self, v):
   746|         0|            0|            0|  0.00%|        """Evaluate w = M v"""
   747|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   748|         0|            0|            0|  0.00%|            return np.dot(self.collapsed, v)
   749|         0|            0|            0|  0.00%|        return LowRankMatrix._matvec(v, self.alpha, self.cs, self.ds)
   750|         0|            0|            0|  0.00%|
   751|         0|            0|            0|  0.00%|    def rmatvec(self, v):
   752|         0|            0|            0|  0.00%|        """Evaluate w = M^H v"""
   753|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   754|         0|            0|            0|  0.00%|            return np.dot(self.collapsed.T.conj(), v)
   755|         0|            0|            0|  0.00%|        return LowRankMatrix._matvec(v, np.conj(self.alpha), self.ds, self.cs)
   756|         0|            0|            0|  0.00%|
   757|         0|            0|            0|  0.00%|    def solve(self, v, tol=0):
   758|         0|            0|            0|  0.00%|        """Evaluate w = M^-1 v"""
   759|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   760|         0|            0|            0|  0.00%|            return solve(self.collapsed, v)
   761|         0|            0|            0|  0.00%|        return LowRankMatrix._solve(v, self.alpha, self.cs, self.ds)
   762|         0|            0|            0|  0.00%|
   763|         0|            0|            0|  0.00%|    def rsolve(self, v, tol=0):
   764|         0|            0|            0|  0.00%|        """Evaluate w = M^-H v"""
   765|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   766|         0|            0|            0|  0.00%|            return solve(self.collapsed.T.conj(), v)
   767|         0|            0|            0|  0.00%|        return LowRankMatrix._solve(v, np.conj(self.alpha), self.ds, self.cs)
   768|         0|            0|            0|  0.00%|
   769|         0|            0|            0|  0.00%|    def append(self, c, d):
   770|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   771|         0|            0|            0|  0.00%|            self.collapsed += c[:,None] * d[None,:].conj()
   772|         0|            0|            0|  0.00%|            return
   773|         0|            0|            0|  0.00%|
   774|         0|            0|            0|  0.00%|        self.cs.append(c)
   775|         0|            0|            0|  0.00%|        self.ds.append(d)
   776|         0|            0|            0|  0.00%|
   777|         0|            0|            0|  0.00%|        if len(self.cs) > c.size:
   778|         0|            0|            0|  0.00%|            self.collapse()
   779|         0|            0|            0|  0.00%|
   780|         0|            0|            0|  0.00%|    def __array__(self):
   781|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   782|         0|            0|            0|  0.00%|            return self.collapsed
   783|         0|            0|            0|  0.00%|
   784|         0|            0|            0|  0.00%|        Gm = self.alpha*np.identity(self.n, dtype=self.dtype)
   785|         0|            0|            0|  0.00%|        for c, d in zip(self.cs, self.ds):
   786|         0|            0|            0|  0.00%|            Gm += c[:,None]*d[None,:].conj()
   787|         0|            0|            0|  0.00%|        return Gm
   788|         0|            0|            0|  0.00%|
   789|         0|            0|            0|  0.00%|    def collapse(self):
   790|         0|            0|            0|  0.00%|        """Collapse the low-rank matrix to a full-rank one."""
   791|         0|            0|            0|  0.00%|        self.collapsed = np.array(self)
   792|         0|            0|            0|  0.00%|        self.cs = None
   793|         0|            0|            0|  0.00%|        self.ds = None
   794|         0|            0|            0|  0.00%|        self.alpha = None
   795|         0|            0|            0|  0.00%|
   796|         0|            0|            0|  0.00%|    def restart_reduce(self, rank):
   797|         0|            0|            0|  0.00%|        """
   798|         0|            0|            0|  0.00%|        Reduce the rank of the matrix by dropping all vectors.
   799|         0|            0|            0|  0.00%|        """
   800|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   801|         0|            0|            0|  0.00%|            return
   802|         0|            0|            0|  0.00%|        assert rank > 0
   803|         0|            0|            0|  0.00%|        if len(self.cs) > rank:
   804|         0|            0|            0|  0.00%|            del self.cs[:]
   805|         0|            0|            0|  0.00%|            del self.ds[:]
   806|         0|            0|            0|  0.00%|
   807|         0|            0|            0|  0.00%|    def simple_reduce(self, rank):
   808|         0|            0|            0|  0.00%|        """
   809|         0|            0|            0|  0.00%|        Reduce the rank of the matrix by dropping oldest vectors.
   810|         0|            0|            0|  0.00%|        """
   811|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   812|         0|            0|            0|  0.00%|            return
   813|         0|            0|            0|  0.00%|        assert rank > 0
   814|         0|            0|            0|  0.00%|        while len(self.cs) > rank:
   815|         0|            0|            0|  0.00%|            del self.cs[0]
   816|         0|            0|            0|  0.00%|            del self.ds[0]
   817|         0|            0|            0|  0.00%|
   818|         0|            0|            0|  0.00%|    def svd_reduce(self, max_rank, to_retain=None):
   819|         0|            0|            0|  0.00%|        """
   820|         0|            0|            0|  0.00%|        Reduce the rank of the matrix by retaining some SVD components.
   821|         0|            0|            0|  0.00%|
   822|         0|            0|            0|  0.00%|        This corresponds to the \"Broyden Rank Reduction Inverse\"
   823|         0|            0|            0|  0.00%|        algorithm described in [1]_.
   824|         0|            0|            0|  0.00%|
   825|         0|            0|            0|  0.00%|        Note that the SVD decomposition can be done by solving only a
   826|         0|            0|            0|  0.00%|        problem whose size is the effective rank of this matrix, which
   827|         0|            0|            0|  0.00%|        is viable even for large problems.
   828|         0|            0|            0|  0.00%|
   829|         0|            0|            0|  0.00%|        Parameters
   830|         0|            0|            0|  0.00%|        ----------
   831|         0|            0|            0|  0.00%|        max_rank : int
   832|         0|            0|            0|  0.00%|            Maximum rank of this matrix after reduction.
   833|         0|            0|            0|  0.00%|        to_retain : int, optional
   834|         0|            0|            0|  0.00%|            Number of SVD components to retain when reduction is done
   835|         0|            0|            0|  0.00%|            (ie. rank > max_rank). Default is ``max_rank - 2``.
   836|         0|            0|            0|  0.00%|
   837|         0|            0|            0|  0.00%|        References
   838|         0|            0|            0|  0.00%|        ----------
   839|         0|            0|            0|  0.00%|        .. [1] B.A. van der Rotten, PhD thesis,
   840|         0|            0|            0|  0.00%|           \"A limited memory Broyden method to solve high-dimensional
   841|         0|            0|            0|  0.00%|           systems of nonlinear equations\". Mathematisch Instituut,
   842|         0|            0|            0|  0.00%|           Universiteit Leiden, The Netherlands (2003).
   843|         0|            0|            0|  0.00%|
   844|         0|            0|            0|  0.00%|           https://web.archive.org/web/20161022015821/http://www.math.leidenuniv.nl/scripties/Rotten.pdf
   845|         0|            0|            0|  0.00%|
   846|         0|            0|            0|  0.00%|        """
   847|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   848|         0|            0|            0|  0.00%|            return
   849|         0|            0|            0|  0.00%|
   850|         0|            0|            0|  0.00%|        p = max_rank
   851|         0|            0|            0|  0.00%|        if to_retain is not None:
   852|         0|            0|            0|  0.00%|            q = to_retain
   853|         0|            0|            0|  0.00%|        else:
   854|         0|            0|            0|  0.00%|            q = p - 2
   855|         0|            0|            0|  0.00%|
   856|         0|            0|            0|  0.00%|        if self.cs:
   857|         0|            0|            0|  0.00%|            p = min(p, len(self.cs[0]))
   858|         0|            0|            0|  0.00%|        q = max(0, min(q, p-1))
   859|         0|            0|            0|  0.00%|
   860|         0|            0|            0|  0.00%|        m = len(self.cs)
   861|         0|            0|            0|  0.00%|        if m < p:
   862|         0|            0|            0|  0.00%|            # nothing to do
   863|         0|            0|            0|  0.00%|            return
   864|         0|            0|            0|  0.00%|
   865|         0|            0|            0|  0.00%|        C = np.array(self.cs).T
   866|         0|            0|            0|  0.00%|        D = np.array(self.ds).T
   867|         0|            0|            0|  0.00%|
   868|         0|            0|            0|  0.00%|        D, R = qr(D, mode='economic')
   869|         0|            0|            0|  0.00%|        C = dot(C, R.T.conj())
   870|         0|            0|            0|  0.00%|
   871|         0|            0|            0|  0.00%|        U, S, WH = svd(C, full_matrices=False, compute_uv=True)
   872|         0|            0|            0|  0.00%|
   873|         0|            0|            0|  0.00%|        C = dot(C, inv(WH))
   874|         0|            0|            0|  0.00%|        D = dot(D, WH.T.conj())
   875|         0|            0|            0|  0.00%|
   876|         0|            0|            0|  0.00%|        for k in range(q):
   877|         0|            0|            0|  0.00%|            self.cs[k] = C[:,k].copy()
   878|         0|            0|            0|  0.00%|            self.ds[k] = D[:,k].copy()
   879|         0|            0|            0|  0.00%|
   880|         0|            0|            0|  0.00%|        del self.cs[q:]
   881|         0|            0|            0|  0.00%|        del self.ds[q:]
   882|         0|            0|            0|  0.00%|
   883|         0|            0|            0|  0.00%|
   884|         0|            0|            0|  0.00%|_doc_parts['broyden_params'] = """
   885|         0|            0|            0|  0.00%|    alpha : float, optional
   886|         0|            0|            0|  0.00%|        Initial guess for the Jacobian is ``(-1/alpha)``.
   887|         0|            0|            0|  0.00%|    reduction_method : str or tuple, optional
   888|         0|            0|            0|  0.00%|        Method used in ensuring that the rank of the Broyden matrix
   889|         0|            0|            0|  0.00%|        stays low. Can either be a string giving the name of the method,
   890|         0|            0|            0|  0.00%|        or a tuple of the form ``(method, param1, param2, ...)``
   891|         0|            0|            0|  0.00%|        that gives the name of the method and values for additional parameters.
   892|         0|            0|            0|  0.00%|
   893|         0|            0|            0|  0.00%|        Methods available:
   894|         0|            0|            0|  0.00%|
   895|         0|            0|            0|  0.00%|            - ``restart``: drop all matrix columns. Has no extra parameters.
   896|         0|            0|            0|  0.00%|            - ``simple``: drop oldest matrix column. Has no extra parameters.
   897|         0|            0|            0|  0.00%|            - ``svd``: keep only the most significant SVD components.
   898|         0|            0|            0|  0.00%|              Takes an extra parameter, ``to_retain``, which determines the
   899|         0|            0|            0|  0.00%|              number of SVD components to retain when rank reduction is done.
   900|         0|            0|            0|  0.00%|              Default is ``max_rank - 2``.
   901|         0|            0|            0|  0.00%|
   902|         0|            0|            0|  0.00%|    max_rank : int, optional
   903|         0|            0|            0|  0.00%|        Maximum rank for the Broyden matrix.
   904|         0|            0|            0|  0.00%|        Default is infinity (i.e., no rank reduction).
   905|         0|            0|            0|  0.00%|    """.strip()
   906|         0|            0|            0|  0.00%|
   907|         0|            0|            0|  0.00%|
   908|         0|            0|            0|  0.00%|class BroydenFirst(GenericBroyden):
   909|         0|            0|            0|  0.00%|    r"""
   910|         0|            0|            0|  0.00%|    Find a root of a function, using Broyden's first Jacobian approximation.
   911|         0|            0|            0|  0.00%|
   912|         0|            0|            0|  0.00%|    This method is also known as \"Broyden's good method\".
   913|         0|            0|            0|  0.00%|
   914|         0|            0|            0|  0.00%|    Parameters
   915|         0|            0|            0|  0.00%|    ----------
   916|         0|            0|            0|  0.00%|    %(params_basic)s
   917|         0|            0|            0|  0.00%|    %(broyden_params)s
   918|         0|            0|            0|  0.00%|    %(params_extra)s
   919|         0|            0|            0|  0.00%|
   920|         0|            0|            0|  0.00%|    See Also
   921|         0|            0|            0|  0.00%|    --------
   922|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
   923|         0|            0|            0|  0.00%|           functions. See ``method=='broyden1'`` in particular.
   924|         0|            0|            0|  0.00%|
   925|         0|            0|            0|  0.00%|    Notes
   926|         0|            0|            0|  0.00%|    -----
   927|         0|            0|            0|  0.00%|    This algorithm implements the inverse Jacobian Quasi-Newton update
   928|         0|            0|            0|  0.00%|
   929|         0|            0|            0|  0.00%|    .. math:: H_+ = H + (dx - H df) dx^\dagger H / ( dx^\dagger H df)
   930|         0|            0|            0|  0.00%|
   931|         0|            0|            0|  0.00%|    which corresponds to Broyden's first Jacobian update
   932|         0|            0|            0|  0.00%|
   933|         0|            0|            0|  0.00%|    .. math:: J_+ = J + (df - J dx) dx^\dagger / dx^\dagger dx
   934|         0|            0|            0|  0.00%|
   935|         0|            0|            0|  0.00%|
   936|         0|            0|            0|  0.00%|    References
   937|         0|            0|            0|  0.00%|    ----------
   938|         0|            0|            0|  0.00%|    .. [1] B.A. van der Rotten, PhD thesis,
   939|         0|            0|            0|  0.00%|       \"A limited memory Broyden method to solve high-dimensional
   940|         0|            0|            0|  0.00%|       systems of nonlinear equations\". Mathematisch Instituut,
   941|         0|            0|            0|  0.00%|       Universiteit Leiden, The Netherlands (2003).
   942|         0|            0|            0|  0.00%|
   943|         0|            0|            0|  0.00%|       https://web.archive.org/web/20161022015821/http://www.math.leidenuniv.nl/scripties/Rotten.pdf
   944|         0|            0|            0|  0.00%|
   945|         0|            0|            0|  0.00%|    """
   946|         0|            0|            0|  0.00%|
   947|         0|            0|            0|  0.00%|    def __init__(self, alpha=None, reduction_method='restart', max_rank=None):
   948|         0|            0|            0|  0.00%|        GenericBroyden.__init__(self)
   949|         0|            0|            0|  0.00%|        self.alpha = alpha
   950|         0|            0|            0|  0.00%|        self.Gm = None
   951|         0|            0|            0|  0.00%|
   952|         0|            0|            0|  0.00%|        if max_rank is None:
   953|         0|            0|            0|  0.00%|            max_rank = np.inf
   954|         0|            0|            0|  0.00%|        self.max_rank = max_rank
   955|         0|            0|            0|  0.00%|
   956|         0|            0|            0|  0.00%|        if isinstance(reduction_method, str):
   957|         0|            0|            0|  0.00%|            reduce_params = ()
   958|         0|            0|            0|  0.00%|        else:
   959|         0|            0|            0|  0.00%|            reduce_params = reduction_method[1:]
   960|         0|            0|            0|  0.00%|            reduction_method = reduction_method[0]
   961|         0|            0|            0|  0.00%|        reduce_params = (max_rank - 1,) + reduce_params
   962|         0|            0|            0|  0.00%|
   963|         0|            0|            0|  0.00%|        if reduction_method == 'svd':
   964|         0|            0|            0|  0.00%|            self._reduce = lambda: self.Gm.svd_reduce(*reduce_params)
   965|         0|            0|            0|  0.00%|        elif reduction_method == 'simple':
   966|         0|            0|            0|  0.00%|            self._reduce = lambda: self.Gm.simple_reduce(*reduce_params)
   967|         0|            0|            0|  0.00%|        elif reduction_method == 'restart':
   968|         0|            0|            0|  0.00%|            self._reduce = lambda: self.Gm.restart_reduce(*reduce_params)
   969|         0|            0|            0|  0.00%|        else:
   970|         0|            0|            0|  0.00%|            raise ValueError("Unknown rank reduction method '%s'" %
   971|         0|            0|            0|  0.00%|                             reduction_method)
   972|         0|            0|            0|  0.00%|
   973|         0|            0|            0|  0.00%|    def setup(self, x, F, func):
   974|         0|            0|            0|  0.00%|        GenericBroyden.setup(self, x, F, func)
   975|         0|            0|            0|  0.00%|        self.Gm = LowRankMatrix(-self.alpha, self.shape[0], self.dtype)
   976|         0|            0|            0|  0.00%|
   977|         0|            0|            0|  0.00%|    def todense(self):
   978|         0|            0|            0|  0.00%|        return inv(self.Gm)
   979|         0|            0|            0|  0.00%|
   980|         0|            0|            0|  0.00%|    def solve(self, f, tol=0):
   981|         0|            0|            0|  0.00%|        r = self.Gm.matvec(f)
   982|         0|            0|            0|  0.00%|        if not np.isfinite(r).all():
   983|         0|            0|            0|  0.00%|            # singular; reset the Jacobian approximation
   984|         0|            0|            0|  0.00%|            self.setup(self.last_x, self.last_f, self.func)
   985|         0|            0|            0|  0.00%|        return self.Gm.matvec(f)
   986|         0|            0|            0|  0.00%|
   987|         0|            0|            0|  0.00%|    def matvec(self, f):
   988|         0|            0|            0|  0.00%|        return self.Gm.solve(f)
   989|         0|            0|            0|  0.00%|
   990|         0|            0|            0|  0.00%|    def rsolve(self, f, tol=0):
   991|         0|            0|            0|  0.00%|        return self.Gm.rmatvec(f)
   992|         0|            0|            0|  0.00%|
   993|         0|            0|            0|  0.00%|    def rmatvec(self, f):
   994|         0|            0|            0|  0.00%|        return self.Gm.rsolve(f)
   995|         0|            0|            0|  0.00%|
   996|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
   997|         0|            0|            0|  0.00%|        self._reduce()  # reduce first to preserve secant condition
   998|         0|            0|            0|  0.00%|
   999|         0|            0|            0|  0.00%|        v = self.Gm.rmatvec(dx)
  1000|         0|            0|            0|  0.00%|        c = dx - self.Gm.matvec(df)
  1001|         0|            0|            0|  0.00%|        d = v / vdot(df, v)
  1002|         0|            0|            0|  0.00%|
  1003|         0|            0|            0|  0.00%|        self.Gm.append(c, d)
  1004|         0|            0|            0|  0.00%|
  1005|         0|            0|            0|  0.00%|
  1006|         0|            0|            0|  0.00%|class BroydenSecond(BroydenFirst):
  1007|         0|            0|            0|  0.00%|    """
  1008|         0|            0|            0|  0.00%|    Find a root of a function, using Broyden\'s second Jacobian approximation.
  1009|         0|            0|            0|  0.00%|
  1010|         0|            0|            0|  0.00%|    This method is also known as \"Broyden's bad method\".
  1011|         0|            0|            0|  0.00%|
  1012|         0|            0|            0|  0.00%|    Parameters
  1013|         0|            0|            0|  0.00%|    ----------
  1014|         0|            0|            0|  0.00%|    %(params_basic)s
  1015|         0|            0|            0|  0.00%|    %(broyden_params)s
  1016|         0|            0|            0|  0.00%|    %(params_extra)s
  1017|         0|            0|            0|  0.00%|
  1018|         0|            0|            0|  0.00%|    See Also
  1019|         0|            0|            0|  0.00%|    --------
  1020|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1021|         0|            0|            0|  0.00%|           functions. See ``method=='broyden2'`` in particular.
  1022|         0|            0|            0|  0.00%|
  1023|         0|            0|            0|  0.00%|    Notes
  1024|         0|            0|            0|  0.00%|    -----
  1025|         0|            0|            0|  0.00%|    This algorithm implements the inverse Jacobian Quasi-Newton update
  1026|         0|            0|            0|  0.00%|
  1027|         0|            0|            0|  0.00%|    .. math:: H_+ = H + (dx - H df) df^\\dagger / ( df^\\dagger df)
  1028|         0|            0|            0|  0.00%|
  1029|         0|            0|            0|  0.00%|    corresponding to Broyden's second method.
  1030|         0|            0|            0|  0.00%|
  1031|         0|            0|            0|  0.00%|    References
  1032|         0|            0|            0|  0.00%|    ----------
  1033|         0|            0|            0|  0.00%|    .. [1] B.A. van der Rotten, PhD thesis,
  1034|         0|            0|            0|  0.00%|       \"A limited memory Broyden method to solve high-dimensional
  1035|         0|            0|            0|  0.00%|       systems of nonlinear equations\". Mathematisch Instituut,
  1036|         0|            0|            0|  0.00%|       Universiteit Leiden, The Netherlands (2003).
  1037|         0|            0|            0|  0.00%|
  1038|         0|            0|            0|  0.00%|       https://web.archive.org/web/20161022015821/http://www.math.leidenuniv.nl/scripties/Rotten.pdf
  1039|         0|            0|            0|  0.00%|
  1040|         0|            0|            0|  0.00%|    """
  1041|         0|            0|            0|  0.00%|
  1042|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
  1043|         0|            0|            0|  0.00%|        self._reduce()  # reduce first to preserve secant condition
  1044|         0|            0|            0|  0.00%|
  1045|         0|            0|            0|  0.00%|        v = df
  1046|         0|            0|            0|  0.00%|        c = dx - self.Gm.matvec(df)
  1047|         0|            0|            0|  0.00%|        d = v / df_norm**2
  1048|         0|            0|            0|  0.00%|        self.Gm.append(c, d)
  1049|         0|            0|            0|  0.00%|
  1050|         0|            0|            0|  0.00%|
  1051|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1052|         0|            0|            0|  0.00%|# Broyden-like (restricted memory)
  1053|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1054|         0|            0|            0|  0.00%|
  1055|         0|            0|            0|  0.00%|class Anderson(GenericBroyden):
  1056|         0|            0|            0|  0.00%|    """
  1057|         0|            0|            0|  0.00%|    Find a root of a function, using (extended) Anderson mixing.
  1058|         0|            0|            0|  0.00%|
  1059|         0|            0|            0|  0.00%|    The Jacobian is formed by for a 'best' solution in the space
  1060|         0|            0|            0|  0.00%|    spanned by last `M` vectors. As a result, only a MxM matrix
  1061|         0|            0|            0|  0.00%|    inversions and MxN multiplications are required. [Ey]_
  1062|         0|            0|            0|  0.00%|
  1063|         0|            0|            0|  0.00%|    Parameters
  1064|         0|            0|            0|  0.00%|    ----------
  1065|         0|            0|            0|  0.00%|    %(params_basic)s
  1066|         0|            0|            0|  0.00%|    alpha : float, optional
  1067|         0|            0|            0|  0.00%|        Initial guess for the Jacobian is (-1/alpha).
  1068|         0|            0|            0|  0.00%|    M : float, optional
  1069|         0|            0|            0|  0.00%|        Number of previous vectors to retain. Defaults to 5.
  1070|         0|            0|            0|  0.00%|    w0 : float, optional
  1071|         0|            0|            0|  0.00%|        Regularization parameter for numerical stability.
  1072|         0|            0|            0|  0.00%|        Compared to unity, good values of the order of 0.01.
  1073|         0|            0|            0|  0.00%|    %(params_extra)s
  1074|         0|            0|            0|  0.00%|
  1075|         0|            0|            0|  0.00%|    See Also
  1076|         0|            0|            0|  0.00%|    --------
  1077|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1078|         0|            0|            0|  0.00%|           functions. See ``method=='anderson'`` in particular.
  1079|         0|            0|            0|  0.00%|
  1080|         0|            0|            0|  0.00%|    References
  1081|         0|            0|            0|  0.00%|    ----------
  1082|         0|            0|            0|  0.00%|    .. [Ey] V. Eyert, J. Comp. Phys., 124, 271 (1996).
  1083|         0|            0|            0|  0.00%|
  1084|         0|            0|            0|  0.00%|    """
  1085|         0|            0|            0|  0.00%|
  1086|         0|            0|            0|  0.00%|    # Note:
  1087|         0|            0|            0|  0.00%|    #
  1088|         0|            0|            0|  0.00%|    # Anderson method maintains a rank M approximation of the inverse Jacobian,
  1089|         0|            0|            0|  0.00%|    #
  1090|         0|            0|            0|  0.00%|    #     J^-1 v ~ -v*alpha + (dX + alpha dF) A^-1 dF^H v
  1091|         0|            0|            0|  0.00%|    #     A      = W + dF^H dF
  1092|         0|            0|            0|  0.00%|    #     W      = w0^2 diag(dF^H dF)
  1093|         0|            0|            0|  0.00%|    #
  1094|         0|            0|            0|  0.00%|    # so that for w0 = 0 the secant condition applies for last M iterates, i.e.,
  1095|         0|            0|            0|  0.00%|    #
  1096|         0|            0|            0|  0.00%|    #     J^-1 df_j = dx_j
  1097|         0|            0|            0|  0.00%|    #
  1098|         0|            0|            0|  0.00%|    # for all j = 0 ... M-1.
  1099|         0|            0|            0|  0.00%|    #
  1100|         0|            0|            0|  0.00%|    # Moreover, (from Sherman-Morrison-Woodbury formula)
  1101|         0|            0|            0|  0.00%|    #
  1102|         0|            0|            0|  0.00%|    #    J v ~ [ b I - b^2 C (I + b dF^H A^-1 C)^-1 dF^H ] v
  1103|         0|            0|            0|  0.00%|    #    C   = (dX + alpha dF) A^-1
  1104|         0|            0|            0|  0.00%|    #    b   = -1/alpha
  1105|         0|            0|            0|  0.00%|    #
  1106|         0|            0|            0|  0.00%|    # and after simplification
  1107|         0|            0|            0|  0.00%|    #
  1108|         0|            0|            0|  0.00%|    #    J v ~ -v/alpha + (dX/alpha + dF) (dF^H dX - alpha W)^-1 dF^H v
  1109|         0|            0|            0|  0.00%|    #
  1110|         0|            0|            0|  0.00%|
  1111|         0|            0|            0|  0.00%|    def __init__(self, alpha=None, w0=0.01, M=5):
  1112|         0|            0|            0|  0.00%|        GenericBroyden.__init__(self)
  1113|         0|            0|            0|  0.00%|        self.alpha = alpha
  1114|         0|            0|            0|  0.00%|        self.M = M
  1115|         0|            0|            0|  0.00%|        self.dx = []
  1116|         0|            0|            0|  0.00%|        self.df = []
  1117|         0|            0|            0|  0.00%|        self.gamma = None
  1118|         0|            0|            0|  0.00%|        self.w0 = w0
  1119|         0|            0|            0|  0.00%|
  1120|         0|            0|            0|  0.00%|    def solve(self, f, tol=0):
  1121|         0|            0|            0|  0.00%|        dx = -self.alpha*f
  1122|         0|            0|            0|  0.00%|
  1123|         0|            0|            0|  0.00%|        n = len(self.dx)
  1124|         0|            0|            0|  0.00%|        if n == 0:
  1125|         0|            0|            0|  0.00%|            return dx
  1126|         0|            0|            0|  0.00%|
  1127|         0|            0|            0|  0.00%|        df_f = np.empty(n, dtype=f.dtype)
  1128|         0|            0|            0|  0.00%|        for k in range(n):
  1129|         0|            0|            0|  0.00%|            df_f[k] = vdot(self.df[k], f)
  1130|         0|            0|            0|  0.00%|
  1131|         0|            0|            0|  0.00%|        try:
  1132|         0|            0|            0|  0.00%|            gamma = solve(self.a, df_f)
  1133|         0|            0|            0|  0.00%|        except LinAlgError:
  1134|         0|            0|            0|  0.00%|            # singular; reset the Jacobian approximation
  1135|         0|            0|            0|  0.00%|            del self.dx[:]
  1136|         0|            0|            0|  0.00%|            del self.df[:]
  1137|         0|            0|            0|  0.00%|            return dx
  1138|         0|            0|            0|  0.00%|
  1139|         0|            0|            0|  0.00%|        for m in range(n):
  1140|         0|            0|            0|  0.00%|            dx += gamma[m]*(self.dx[m] + self.alpha*self.df[m])
  1141|         0|            0|            0|  0.00%|        return dx
  1142|         0|            0|            0|  0.00%|
  1143|         0|            0|            0|  0.00%|    def matvec(self, f):
  1144|         0|            0|            0|  0.00%|        dx = -f/self.alpha
  1145|         0|            0|            0|  0.00%|
  1146|         0|            0|            0|  0.00%|        n = len(self.dx)
  1147|         0|            0|            0|  0.00%|        if n == 0:
  1148|         0|            0|            0|  0.00%|            return dx
  1149|         0|            0|            0|  0.00%|
  1150|         0|            0|            0|  0.00%|        df_f = np.empty(n, dtype=f.dtype)
  1151|         0|            0|            0|  0.00%|        for k in range(n):
  1152|         0|            0|            0|  0.00%|            df_f[k] = vdot(self.df[k], f)
  1153|         0|            0|            0|  0.00%|
  1154|         0|            0|            0|  0.00%|        b = np.empty((n, n), dtype=f.dtype)
  1155|         0|            0|            0|  0.00%|        for i in range(n):
  1156|         0|            0|            0|  0.00%|            for j in range(n):
  1157|         0|            0|            0|  0.00%|                b[i,j] = vdot(self.df[i], self.dx[j])
  1158|         0|            0|            0|  0.00%|                if i == j and self.w0 != 0:
  1159|         0|            0|            0|  0.00%|                    b[i,j] -= vdot(self.df[i], self.df[i])*self.w0**2*self.alpha
  1160|         0|            0|            0|  0.00%|        gamma = solve(b, df_f)
  1161|         0|            0|            0|  0.00%|
  1162|         0|            0|            0|  0.00%|        for m in range(n):
  1163|         0|            0|            0|  0.00%|            dx += gamma[m]*(self.df[m] + self.dx[m]/self.alpha)
  1164|         0|            0|            0|  0.00%|        return dx
  1165|         0|            0|            0|  0.00%|
  1166|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
  1167|         0|            0|            0|  0.00%|        if self.M == 0:
  1168|         0|            0|            0|  0.00%|            return
  1169|         0|            0|            0|  0.00%|
  1170|         0|            0|            0|  0.00%|        self.dx.append(dx)
  1171|         0|            0|            0|  0.00%|        self.df.append(df)
  1172|         0|            0|            0|  0.00%|
  1173|         0|            0|            0|  0.00%|        while len(self.dx) > self.M:
  1174|         0|            0|            0|  0.00%|            self.dx.pop(0)
  1175|         0|            0|            0|  0.00%|            self.df.pop(0)
  1176|         0|            0|            0|  0.00%|
  1177|         0|            0|            0|  0.00%|        n = len(self.dx)
  1178|         0|            0|            0|  0.00%|        a = np.zeros((n, n), dtype=f.dtype)
  1179|         0|            0|            0|  0.00%|
  1180|         0|            0|            0|  0.00%|        for i in range(n):
  1181|         0|            0|            0|  0.00%|            for j in range(i, n):
  1182|         0|            0|            0|  0.00%|                if i == j:
  1183|         0|            0|            0|  0.00%|                    wd = self.w0**2
  1184|         0|            0|            0|  0.00%|                else:
  1185|         0|            0|            0|  0.00%|                    wd = 0
  1186|         0|            0|            0|  0.00%|                a[i,j] = (1+wd)*vdot(self.df[i], self.df[j])
  1187|         0|            0|            0|  0.00%|
  1188|         0|            0|            0|  0.00%|        a += np.triu(a, 1).T.conj()
  1189|         0|            0|            0|  0.00%|        self.a = a
  1190|         0|            0|            0|  0.00%|
  1191|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1192|         0|            0|            0|  0.00%|# Simple iterations
  1193|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1194|         0|            0|            0|  0.00%|
  1195|         0|            0|            0|  0.00%|
  1196|         0|            0|            0|  0.00%|class DiagBroyden(GenericBroyden):
  1197|         0|            0|            0|  0.00%|    """
  1198|         0|            0|            0|  0.00%|    Find a root of a function, using diagonal Broyden Jacobian approximation.
  1199|         0|            0|            0|  0.00%|
  1200|         0|            0|            0|  0.00%|    The Jacobian approximation is derived from previous iterations, by
  1201|         0|            0|            0|  0.00%|    retaining only the diagonal of Broyden matrices.
  1202|         0|            0|            0|  0.00%|
  1203|         0|            0|            0|  0.00%|    .. warning::
  1204|         0|            0|            0|  0.00%|
  1205|         0|            0|            0|  0.00%|       This algorithm may be useful for specific problems, but whether
  1206|         0|            0|            0|  0.00%|       it will work may depend strongly on the problem.
  1207|         0|            0|            0|  0.00%|
  1208|         0|            0|            0|  0.00%|    Parameters
  1209|         0|            0|            0|  0.00%|    ----------
  1210|         0|            0|            0|  0.00%|    %(params_basic)s
  1211|         0|            0|            0|  0.00%|    alpha : float, optional
  1212|         0|            0|            0|  0.00%|        Initial guess for the Jacobian is (-1/alpha).
  1213|         0|            0|            0|  0.00%|    %(params_extra)s
  1214|         0|            0|            0|  0.00%|
  1215|         0|            0|            0|  0.00%|    See Also
  1216|         0|            0|            0|  0.00%|    --------
  1217|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1218|         0|            0|            0|  0.00%|           functions. See ``method=='diagbroyden'`` in particular.
  1219|         0|            0|            0|  0.00%|    """
  1220|         0|            0|            0|  0.00%|
  1221|         0|            0|            0|  0.00%|    def __init__(self, alpha=None):
  1222|         0|            0|            0|  0.00%|        GenericBroyden.__init__(self)
  1223|         0|            0|            0|  0.00%|        self.alpha = alpha
  1224|         0|            0|            0|  0.00%|
  1225|         0|            0|            0|  0.00%|    def setup(self, x, F, func):
  1226|         0|            0|            0|  0.00%|        GenericBroyden.setup(self, x, F, func)
  1227|         0|            0|            0|  0.00%|        self.d = np.full((self.shape[0],), 1 / self.alpha, dtype=self.dtype)
  1228|         0|            0|            0|  0.00%|
  1229|         0|            0|            0|  0.00%|    def solve(self, f, tol=0):
  1230|         0|            0|            0|  0.00%|        return -f / self.d
  1231|         0|            0|            0|  0.00%|
  1232|         0|            0|            0|  0.00%|    def matvec(self, f):
  1233|         0|            0|            0|  0.00%|        return -f * self.d
  1234|         0|            0|            0|  0.00%|
  1235|         0|            0|            0|  0.00%|    def rsolve(self, f, tol=0):
  1236|         0|            0|            0|  0.00%|        return -f / self.d.conj()
  1237|         0|            0|            0|  0.00%|
  1238|         0|            0|            0|  0.00%|    def rmatvec(self, f):
  1239|         0|            0|            0|  0.00%|        return -f * self.d.conj()
  1240|         0|            0|            0|  0.00%|
  1241|         0|            0|            0|  0.00%|    def todense(self):
  1242|         0|            0|            0|  0.00%|        return np.diag(-self.d)
  1243|         0|            0|            0|  0.00%|
  1244|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
  1245|         0|            0|            0|  0.00%|        self.d -= (df + self.d*dx)*dx/dx_norm**2
  1246|         0|            0|            0|  0.00%|
  1247|         0|            0|            0|  0.00%|
  1248|         0|            0|            0|  0.00%|class LinearMixing(GenericBroyden):
  1249|         0|            0|            0|  0.00%|    """
  1250|         0|            0|            0|  0.00%|    Find a root of a function, using a scalar Jacobian approximation.
  1251|         0|            0|            0|  0.00%|
  1252|         0|            0|            0|  0.00%|    .. warning::
  1253|         0|            0|            0|  0.00%|
  1254|         0|            0|            0|  0.00%|       This algorithm may be useful for specific problems, but whether
  1255|         0|            0|            0|  0.00%|       it will work may depend strongly on the problem.
  1256|         0|            0|            0|  0.00%|
  1257|         0|            0|            0|  0.00%|    Parameters
  1258|         0|            0|            0|  0.00%|    ----------
  1259|         0|            0|            0|  0.00%|    %(params_basic)s
  1260|         0|            0|            0|  0.00%|    alpha : float, optional
  1261|         0|            0|            0|  0.00%|        The Jacobian approximation is (-1/alpha).
  1262|         0|            0|            0|  0.00%|    %(params_extra)s
  1263|         0|            0|            0|  0.00%|
  1264|         0|            0|            0|  0.00%|    See Also
  1265|         0|            0|            0|  0.00%|    --------
  1266|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1267|         0|            0|            0|  0.00%|           functions. See ``method=='linearmixing'`` in particular.
  1268|         0|            0|            0|  0.00%|
  1269|         0|            0|            0|  0.00%|    """
  1270|         0|            0|            0|  0.00%|
  1271|         0|            0|            0|  0.00%|    def __init__(self, alpha=None):
  1272|         0|            0|            0|  0.00%|        GenericBroyden.__init__(self)
  1273|         0|            0|            0|  0.00%|        self.alpha = alpha
  1274|         0|            0|            0|  0.00%|
  1275|         0|            0|            0|  0.00%|    def solve(self, f, tol=0):
  1276|         0|            0|            0|  0.00%|        return -f*self.alpha
  1277|         0|            0|            0|  0.00%|
  1278|         0|            0|            0|  0.00%|    def matvec(self, f):
  1279|         0|            0|            0|  0.00%|        return -f/self.alpha
  1280|         0|            0|            0|  0.00%|
  1281|         0|            0|            0|  0.00%|    def rsolve(self, f, tol=0):
  1282|         0|            0|            0|  0.00%|        return -f*np.conj(self.alpha)
  1283|         0|            0|            0|  0.00%|
  1284|         0|            0|            0|  0.00%|    def rmatvec(self, f):
  1285|         0|            0|            0|  0.00%|        return -f/np.conj(self.alpha)
  1286|         0|            0|            0|  0.00%|
  1287|         0|            0|            0|  0.00%|    def todense(self):
  1288|         0|            0|            0|  0.00%|        return np.diag(np.full(self.shape[0], -1/self.alpha))
  1289|         0|            0|            0|  0.00%|
  1290|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
  1291|         0|            0|            0|  0.00%|        pass
  1292|         0|            0|            0|  0.00%|
  1293|         0|            0|            0|  0.00%|
  1294|         0|            0|            0|  0.00%|class ExcitingMixing(GenericBroyden):
  1295|         0|            0|            0|  0.00%|    """
  1296|         0|            0|            0|  0.00%|    Find a root of a function, using a tuned diagonal Jacobian approximation.
  1297|         0|            0|            0|  0.00%|
  1298|         0|            0|            0|  0.00%|    The Jacobian matrix is diagonal and is tuned on each iteration.
  1299|         0|            0|            0|  0.00%|
  1300|         0|            0|            0|  0.00%|    .. warning::
  1301|         0|            0|            0|  0.00%|
  1302|         0|            0|            0|  0.00%|       This algorithm may be useful for specific problems, but whether
  1303|         0|            0|            0|  0.00%|       it will work may depend strongly on the problem.
  1304|         0|            0|            0|  0.00%|
  1305|         0|            0|            0|  0.00%|    See Also
  1306|         0|            0|            0|  0.00%|    --------
  1307|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1308|         0|            0|            0|  0.00%|           functions. See ``method=='excitingmixing'`` in particular.
  1309|         0|            0|            0|  0.00%|
  1310|         0|            0|            0|  0.00%|    Parameters
  1311|         0|            0|            0|  0.00%|    ----------
  1312|         0|            0|            0|  0.00%|    %(params_basic)s
  1313|         0|            0|            0|  0.00%|    alpha : float, optional
  1314|         0|            0|            0|  0.00%|        Initial Jacobian approximation is (-1/alpha).
  1315|         0|            0|            0|  0.00%|    alphamax : float, optional
  1316|         0|            0|            0|  0.00%|        The entries of the diagonal Jacobian are kept in the range
  1317|         0|            0|            0|  0.00%|        ``[alpha, alphamax]``.
  1318|         0|            0|            0|  0.00%|    %(params_extra)s
  1319|         0|            0|            0|  0.00%|    """
  1320|         0|            0|            0|  0.00%|
  1321|         0|            0|            0|  0.00%|    def __init__(self, alpha=None, alphamax=1.0):
  1322|         0|            0|            0|  0.00%|        GenericBroyden.__init__(self)
  1323|         0|            0|            0|  0.00%|        self.alpha = alpha
  1324|         0|            0|            0|  0.00%|        self.alphamax = alphamax
  1325|         0|            0|            0|  0.00%|        self.beta = None
  1326|         0|            0|            0|  0.00%|
  1327|         0|            0|            0|  0.00%|    def setup(self, x, F, func):
  1328|         0|            0|            0|  0.00%|        GenericBroyden.setup(self, x, F, func)
  1329|         0|            0|            0|  0.00%|        self.beta = np.full((self.shape[0],), self.alpha, dtype=self.dtype)
  1330|         0|            0|            0|  0.00%|
  1331|         0|            0|            0|  0.00%|    def solve(self, f, tol=0):
  1332|         0|            0|            0|  0.00%|        return -f*self.beta
  1333|         0|            0|            0|  0.00%|
  1334|         0|            0|            0|  0.00%|    def matvec(self, f):
  1335|         0|            0|            0|  0.00%|        return -f/self.beta
  1336|         0|            0|            0|  0.00%|
  1337|         0|            0|            0|  0.00%|    def rsolve(self, f, tol=0):
  1338|         0|            0|            0|  0.00%|        return -f*self.beta.conj()
  1339|         0|            0|            0|  0.00%|
  1340|         0|            0|            0|  0.00%|    def rmatvec(self, f):
  1341|         0|            0|            0|  0.00%|        return -f/self.beta.conj()
  1342|         0|            0|            0|  0.00%|
  1343|         0|            0|            0|  0.00%|    def todense(self):
  1344|         0|            0|            0|  0.00%|        return np.diag(-1/self.beta)
  1345|         0|            0|            0|  0.00%|
  1346|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
  1347|         0|            0|            0|  0.00%|        incr = f*self.last_f > 0
  1348|         0|            0|            0|  0.00%|        self.beta[incr] += self.alpha
  1349|         0|            0|            0|  0.00%|        self.beta[~incr] = self.alpha
  1350|         0|            0|            0|  0.00%|        np.clip(self.beta, 0, self.alphamax, out=self.beta)
  1351|         0|            0|            0|  0.00%|
  1352|         0|            0|            0|  0.00%|
  1353|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1354|         0|            0|            0|  0.00%|# Iterative/Krylov approximated Jacobians
  1355|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1356|         0|            0|            0|  0.00%|
  1357|         0|            0|            0|  0.00%|class KrylovJacobian(Jacobian):
  1358|         0|            0|            0|  0.00%|    r"""
  1359|         0|            0|            0|  0.00%|    Find a root of a function, using Krylov approximation for inverse Jacobian.
  1360|         0|            0|            0|  0.00%|
  1361|         0|            0|            0|  0.00%|    This method is suitable for solving large-scale problems.
  1362|         0|            0|            0|  0.00%|
  1363|         0|            0|            0|  0.00%|    Parameters
  1364|         0|            0|            0|  0.00%|    ----------
  1365|         0|            0|            0|  0.00%|    %(params_basic)s
  1366|         0|            0|            0|  0.00%|    rdiff : float, optional
  1367|         0|            0|            0|  0.00%|        Relative step size to use in numerical differentiation.
  1368|         0|            0|            0|  0.00%|    method : {'lgmres', 'gmres', 'bicgstab', 'cgs', 'minres'} or function
  1369|         0|            0|            0|  0.00%|        Krylov method to use to approximate the Jacobian.
  1370|         0|            0|            0|  0.00%|        Can be a string, or a function implementing the same interface as
  1371|         0|            0|            0|  0.00%|        the iterative solvers in `scipy.sparse.linalg`.
  1372|         0|            0|            0|  0.00%|
  1373|         0|            0|            0|  0.00%|        The default is `scipy.sparse.linalg.lgmres`.
  1374|         0|            0|            0|  0.00%|    inner_maxiter : int, optional
  1375|         0|            0|            0|  0.00%|        Parameter to pass to the "inner" Krylov solver: maximum number of
  1376|         0|            0|            0|  0.00%|        iterations. Iteration will stop after maxiter steps even if the
  1377|         0|            0|            0|  0.00%|        specified tolerance has not been achieved.
  1378|         0|            0|            0|  0.00%|    inner_M : LinearOperator or InverseJacobian
  1379|         0|            0|            0|  0.00%|        Preconditioner for the inner Krylov iteration.
  1380|         0|            0|            0|  0.00%|        Note that you can use also inverse Jacobians as (adaptive)
  1381|         0|            0|            0|  0.00%|        preconditioners. For example,
  1382|         0|            0|            0|  0.00%|
  1383|         0|            0|            0|  0.00%|        >>> from scipy.optimize.nonlin import BroydenFirst, KrylovJacobian
  1384|         0|            0|            0|  0.00%|        >>> from scipy.optimize.nonlin import InverseJacobian
  1385|         0|            0|            0|  0.00%|        >>> jac = BroydenFirst()
  1386|         0|            0|            0|  0.00%|        >>> kjac = KrylovJacobian(inner_M=InverseJacobian(jac))
  1387|         0|            0|            0|  0.00%|
  1388|         0|            0|            0|  0.00%|        If the preconditioner has a method named 'update', it will be called
  1389|         0|            0|            0|  0.00%|        as ``update(x, f)`` after each nonlinear step, with ``x`` giving
  1390|         0|            0|            0|  0.00%|        the current point, and ``f`` the current function value.
  1391|         0|            0|            0|  0.00%|    outer_k : int, optional
  1392|         0|            0|            0|  0.00%|        Size of the subspace kept across LGMRES nonlinear iterations.
  1393|         0|            0|            0|  0.00%|        See `scipy.sparse.linalg.lgmres` for details.
  1394|         0|            0|            0|  0.00%|    inner_kwargs : kwargs
  1395|         0|            0|            0|  0.00%|        Keyword parameters for the "inner" Krylov solver
  1396|         0|            0|            0|  0.00%|        (defined with `method`). Parameter names must start with
  1397|         0|            0|            0|  0.00%|        the `inner_` prefix which will be stripped before passing on
  1398|         0|            0|            0|  0.00%|        the inner method. See, e.g., `scipy.sparse.linalg.gmres` for details.
  1399|         0|            0|            0|  0.00%|    %(params_extra)s
  1400|         0|            0|            0|  0.00%|
  1401|         0|            0|            0|  0.00%|    See Also
  1402|         0|            0|            0|  0.00%|    --------
  1403|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1404|         0|            0|            0|  0.00%|           functions. See ``method=='krylov'`` in particular.
  1405|         0|            0|            0|  0.00%|    scipy.sparse.linalg.gmres
  1406|         0|            0|            0|  0.00%|    scipy.sparse.linalg.lgmres
  1407|         0|            0|            0|  0.00%|
  1408|         0|            0|            0|  0.00%|    Notes
  1409|         0|            0|            0|  0.00%|    -----
  1410|         0|            0|            0|  0.00%|    This function implements a Newton-Krylov solver. The basic idea is
  1411|         0|            0|            0|  0.00%|    to compute the inverse of the Jacobian with an iterative Krylov
  1412|         0|            0|            0|  0.00%|    method. These methods require only evaluating the Jacobian-vector
  1413|         0|            0|            0|  0.00%|    products, which are conveniently approximated by a finite difference:
  1414|         0|            0|            0|  0.00%|
  1415|         0|            0|            0|  0.00%|    .. math:: J v \approx (f(x + \omega*v/|v|) - f(x)) / \omega
  1416|         0|            0|            0|  0.00%|
  1417|         0|            0|            0|  0.00%|    Due to the use of iterative matrix inverses, these methods can
  1418|         0|            0|            0|  0.00%|    deal with large nonlinear problems.
  1419|         0|            0|            0|  0.00%|
  1420|         0|            0|            0|  0.00%|    SciPy's `scipy.sparse.linalg` module offers a selection of Krylov
  1421|         0|            0|            0|  0.00%|    solvers to choose from. The default here is `lgmres`, which is a
  1422|         0|            0|            0|  0.00%|    variant of restarted GMRES iteration that reuses some of the
  1423|         0|            0|            0|  0.00%|    information obtained in the previous Newton steps to invert
  1424|         0|            0|            0|  0.00%|    Jacobians in subsequent steps.
  1425|         0|            0|            0|  0.00%|
  1426|         0|            0|            0|  0.00%|    For a review on Newton-Krylov methods, see for example [1]_,
  1427|         0|            0|            0|  0.00%|    and for the LGMRES sparse inverse method, see [2]_.
  1428|         0|            0|            0|  0.00%|
  1429|         0|            0|            0|  0.00%|    References
  1430|         0|            0|            0|  0.00%|    ----------
  1431|         0|            0|            0|  0.00%|    .. [1] D.A. Knoll and D.E. Keyes, J. Comp. Phys. 193, 357 (2004).
  1432|         0|            0|            0|  0.00%|           :doi:`10.1016/j.jcp.2003.08.010`
  1433|         0|            0|            0|  0.00%|    .. [2] A.H. Baker and E.R. Jessup and T. Manteuffel,
  1434|         0|            0|            0|  0.00%|           SIAM J. Matrix Anal. Appl. 26, 962 (2005).
  1435|         0|            0|            0|  0.00%|           :doi:`10.1137/S0895479803422014`
  1436|         0|            0|            0|  0.00%|
  1437|         0|            0|            0|  0.00%|    """
  1438|         0|            0|            0|  0.00%|
  1439|         0|            0|            0|  0.00%|    def __init__(self, rdiff=None, method='lgmres', inner_maxiter=20,
  1440|         0|            0|            0|  0.00%|                 inner_M=None, outer_k=10, **kw):
  1441|         0|            0|            0|  0.00%|        self.preconditioner = inner_M
  1442|         0|            0|            0|  0.00%|        self.rdiff = rdiff
  1443|         0|            0|            0|  0.00%|        self.method = dict(
  1444|         0|            0|            0|  0.00%|            bicgstab=scipy.sparse.linalg.bicgstab,
  1445|         0|            0|            0|  0.00%|            gmres=scipy.sparse.linalg.gmres,
  1446|         0|            0|            0|  0.00%|            lgmres=scipy.sparse.linalg.lgmres,
  1447|         0|            0|            0|  0.00%|            cgs=scipy.sparse.linalg.cgs,
  1448|         0|            0|            0|  0.00%|            minres=scipy.sparse.linalg.minres,
  1449|         0|            0|            0|  0.00%|            ).get(method, method)
  1450|         0|            0|            0|  0.00%|
  1451|         0|            0|            0|  0.00%|        self.method_kw = dict(maxiter=inner_maxiter, M=self.preconditioner)
  1452|         0|            0|            0|  0.00%|
  1453|         0|            0|            0|  0.00%|        if self.method is scipy.sparse.linalg.gmres:
  1454|         0|            0|            0|  0.00%|            # Replace GMRES's outer iteration with Newton steps
  1455|         0|            0|            0|  0.00%|            self.method_kw['restrt'] = inner_maxiter
  1456|         0|            0|            0|  0.00%|            self.method_kw['maxiter'] = 1
  1457|         0|            0|            0|  0.00%|            self.method_kw.setdefault('atol', 0)
  1458|         0|            0|            0|  0.00%|        elif self.method is scipy.sparse.linalg.gcrotmk:
  1459|         0|            0|            0|  0.00%|            self.method_kw.setdefault('atol', 0)
  1460|         0|            0|            0|  0.00%|        elif self.method is scipy.sparse.linalg.lgmres:
  1461|         0|            0|            0|  0.00%|            self.method_kw['outer_k'] = outer_k
  1462|         0|            0|            0|  0.00%|            # Replace LGMRES's outer iteration with Newton steps
  1463|         0|            0|            0|  0.00%|            self.method_kw['maxiter'] = 1
  1464|         0|            0|            0|  0.00%|            # Carry LGMRES's `outer_v` vectors across nonlinear iterations
  1465|         0|            0|            0|  0.00%|            self.method_kw.setdefault('outer_v', [])
  1466|         0|            0|            0|  0.00%|            self.method_kw.setdefault('prepend_outer_v', True)
  1467|         0|            0|            0|  0.00%|            # But don't carry the corresponding Jacobian*v products, in case
  1468|         0|            0|            0|  0.00%|            # the Jacobian changes a lot in the nonlinear step
  1469|         0|            0|            0|  0.00%|            #
  1470|         0|            0|            0|  0.00%|            # XXX: some trust-region inspired ideas might be more efficient...
  1471|         0|            0|            0|  0.00%|            #      See e.g., Brown & Saad. But needs to be implemented separately
  1472|         0|            0|            0|  0.00%|            #      since it's not an inexact Newton method.
  1473|         0|            0|            0|  0.00%|            self.method_kw.setdefault('store_outer_Av', False)
  1474|         0|            0|            0|  0.00%|            self.method_kw.setdefault('atol', 0)
  1475|         0|            0|            0|  0.00%|
  1476|         0|            0|            0|  0.00%|        for key, value in kw.items():
  1477|         0|            0|            0|  0.00%|            if not key.startswith('inner_'):
  1478|         0|            0|            0|  0.00%|                raise ValueError("Unknown parameter %s" % key)
  1479|         0|            0|            0|  0.00%|            self.method_kw[key[6:]] = value
  1480|         0|            0|            0|  0.00%|
  1481|         0|            0|            0|  0.00%|    def _update_diff_step(self):
  1482|         0|            0|            0|  0.00%|        mx = abs(self.x0).max()
  1483|         0|            0|            0|  0.00%|        mf = abs(self.f0).max()
  1484|         0|            0|            0|  0.00%|        self.omega = self.rdiff * max(1, mx) / max(1, mf)
  1485|         0|            0|            0|  0.00%|
  1486|         0|            0|            0|  0.00%|    def matvec(self, v):
  1487|         0|            0|            0|  0.00%|        nv = norm(v)
  1488|         0|            0|            0|  0.00%|        if nv == 0:
  1489|         0|            0|            0|  0.00%|            return 0*v
  1490|         0|            0|            0|  0.00%|        sc = self.omega / nv
  1491|         0|            0|            0|  0.00%|        r = (self.func(self.x0 + sc*v) - self.f0) / sc
  1492|         0|            0|            0|  0.00%|        if not np.all(np.isfinite(r)) and np.all(np.isfinite(v)):
  1493|         0|            0|            0|  0.00%|            raise ValueError('Function returned non-finite results')
  1494|         0|            0|            0|  0.00%|        return r
  1495|         0|            0|            0|  0.00%|
  1496|         0|            0|            0|  0.00%|    def solve(self, rhs, tol=0):
  1497|         0|            0|            0|  0.00%|        if 'tol' in self.method_kw:
  1498|         0|            0|            0|  0.00%|            sol, info = self.method(self.op, rhs, **self.method_kw)
  1499|         0|            0|            0|  0.00%|        else:
  1500|         0|            0|            0|  0.00%|            sol, info = self.method(self.op, rhs, tol=tol, **self.method_kw)
  1501|         0|            0|            0|  0.00%|        return sol
  1502|         0|            0|            0|  0.00%|
  1503|         0|            0|            0|  0.00%|    def update(self, x, f):
  1504|         0|            0|            0|  0.00%|        self.x0 = x
  1505|         0|            0|            0|  0.00%|        self.f0 = f
  1506|         0|            0|            0|  0.00%|        self._update_diff_step()
  1507|         0|            0|            0|  0.00%|
  1508|         0|            0|            0|  0.00%|        # Update also the preconditioner, if possible
  1509|         0|            0|            0|  0.00%|        if self.preconditioner is not None:
  1510|         0|            0|            0|  0.00%|            if hasattr(self.preconditioner, 'update'):
  1511|         0|            0|            0|  0.00%|                self.preconditioner.update(x, f)
  1512|         0|            0|            0|  0.00%|
  1513|         0|            0|            0|  0.00%|    def setup(self, x, f, func):
  1514|         0|            0|            0|  0.00%|        Jacobian.setup(self, x, f, func)
  1515|         0|            0|            0|  0.00%|        self.x0 = x
  1516|         0|            0|            0|  0.00%|        self.f0 = f
  1517|         0|            0|            0|  0.00%|        self.op = scipy.sparse.linalg.aslinearoperator(self)
  1518|         0|            0|            0|  0.00%|
  1519|         0|            0|            0|  0.00%|        if self.rdiff is None:
  1520|         0|            0|            0|  0.00%|            self.rdiff = np.finfo(x.dtype).eps ** (1./2)
  1521|         0|            0|            0|  0.00%|
  1522|         0|            0|            0|  0.00%|        self._update_diff_step()
  1523|         0|            0|            0|  0.00%|
  1524|         0|            0|            0|  0.00%|        # Setup also the preconditioner, if possible
  1525|         0|            0|            0|  0.00%|        if self.preconditioner is not None:
  1526|         0|            0|            0|  0.00%|            if hasattr(self.preconditioner, 'setup'):
  1527|         0|            0|            0|  0.00%|                self.preconditioner.setup(x, f, func)
  1528|         0|            0|            0|  0.00%|
  1529|         0|            0|            0|  0.00%|
  1530|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1531|         0|            0|            0|  0.00%|# Wrapper functions
  1532|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1533|         0|            0|            0|  0.00%|
  1534|         0|            0|            0|  0.00%|def _nonlin_wrapper(name, jac):
  1535|         0|            0|            0|  0.00%|    """
  1536|         0|            0|            0|  0.00%|    Construct a solver wrapper with given name and Jacobian approx.
  1537|         0|            0|            0|  0.00%|
  1538|         0|            0|            0|  0.00%|    It inspects the keyword arguments of ``jac.__init__``, and allows to
  1539|         0|            0|            0|  0.00%|    use the same arguments in the wrapper function, in addition to the
  1540|         0|            0|            0|  0.00%|    keyword arguments of `nonlin_solve`
  1541|         0|            0|            0|  0.00%|
  1542|         0|            0|            0|  0.00%|    """
  1543|         0|            0|            0|  0.00%|    signature = _getfullargspec(jac.__init__)
  1544|         0|            0|            0|  0.00%|    args, varargs, varkw, defaults, kwonlyargs, kwdefaults, _ = signature
  1545|         0|            0|            0|  0.00%|    kwargs = list(zip(args[-len(defaults):], defaults))
  1546|         0|            0|            0|  0.00%|    kw_str = ", ".join(["%s=%r" % (k, v) for k, v in kwargs])
  1547|         0|            0|            0|  0.00%|    if kw_str:
  1548|         0|            0|            0|  0.00%|        kw_str = ", " + kw_str
  1549|         0|            0|            0|  0.00%|    kwkw_str = ", ".join(["%s=%s" % (k, k) for k, v in kwargs])
  1550|         0|            0|            0|  0.00%|    if kwkw_str:
  1551|         0|            0|            0|  0.00%|        kwkw_str = kwkw_str + ", "
  1552|         0|            0|            0|  0.00%|    if kwonlyargs:
  1553|         0|            0|            0|  0.00%|        raise ValueError('Unexpected signature %s' % signature)
  1554|         0|            0|            0|  0.00%|
  1555|         0|            0|            0|  0.00%|    # Construct the wrapper function so that its keyword arguments
  1556|         0|            0|            0|  0.00%|    # are visible in pydoc.help etc.
  1557|         0|            0|            0|  0.00%|    wrapper = """
  1558|         0|            0|            0|  0.00%|def %(name)s(F, xin, iter=None %(kw)s, verbose=False, maxiter=None,
  1559|         0|            0|            0|  0.00%|             f_tol=None, f_rtol=None, x_tol=None, x_rtol=None,
  1560|         0|            0|            0|  0.00%|             tol_norm=None, line_search='armijo', callback=None, **kw):
  1561|         0|            0|            0|  0.00%|    jac = %(jac)s(%(kwkw)s **kw)
  1562|         0|            0|            0|  0.00%|    return nonlin_solve(F, xin, jac, iter, verbose, maxiter,
  1563|         0|            0|            0|  0.00%|                        f_tol, f_rtol, x_tol, x_rtol, tol_norm, line_search,
  1564|         0|            0|            0|  0.00%|                        callback)
  1565|         0|            0|            0|  0.00%|"""
  1566|         0|            0|            0|  0.00%|
  1567|         0|            0|            0|  0.00%|    wrapper = wrapper % dict(name=name, kw=kw_str, jac=jac.__name__,
  1568|         0|            0|            0|  0.00%|                             kwkw=kwkw_str)
  1569|         0|            0|            0|  0.00%|    ns = {}
  1570|         0|            0|            0|  0.00%|    ns.update(globals())
  1571|         0|            0|            0|  0.00%|    exec(wrapper, ns)
  1572|         0|            0|            0|  0.00%|    func = ns[name]
  1573|         0|            0|            0|  0.00%|    func.__doc__ = jac.__doc__
  1574|         0|            0|            0|  0.00%|    _set_doc(func)
  1575|         0|            0|            0|  0.00%|    return func
  1576|         0|            0|            0|  0.00%|
  1577|         0|            0|            0|  0.00%|
  1578|         0|            0|            0|  0.00%|broyden1 = _nonlin_wrapper('broyden1', BroydenFirst)
  1579|         0|            0|            0|  0.00%|broyden2 = _nonlin_wrapper('broyden2', BroydenSecond)
  1580|         0|            0|            0|  0.00%|anderson = _nonlin_wrapper('anderson', Anderson)
  1581|         0|            0|            0|  0.00%|linearmixing = _nonlin_wrapper('linearmixing', LinearMixing)
  1582|         0|            0|            0|  0.00%|diagbroyden = _nonlin_wrapper('diagbroyden', DiagBroyden)
  1583|         0|            0|            0|  0.00%|excitingmixing = _nonlin_wrapper('excitingmixing', ExcitingMixing)
  1584|         0|            0|            0|  0.00%|newton_krylov = _nonlin_wrapper('newton_krylov', KrylovJacobian)
File: <__array_function__ internals>_264
File duration: 3.38554e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.38554e-05|  1.69277e-05|  0.00%|
(call)|         1|  1.19209e-05|  1.19209e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000108242|  0.000108242|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_271
File duration: 3.38554e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.38554e-05|  1.69277e-05|  0.00%|
(call)|         1|  1.16825e-05|  1.16825e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.94205e-05|  9.94205e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_159
File duration: 3.38554e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.38554e-05|  1.69277e-05|  0.00%|
(call)|         1|  1.09673e-05|  1.09673e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.98838e-05|  8.98838e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_166
File duration: 3.38554e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.38554e-05|  1.69277e-05|  0.00%|
(call)|         1|  1.19209e-05|  1.19209e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000108004|  0.000108004|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_34
File duration: 3.38554e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.38554e-05|  1.69277e-05|  0.00%|
(call)|         1|  1.09673e-05|  1.09673e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.08375e-05|  9.08375e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_1
File duration: 3.38554e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.38554e-05|  1.69277e-05|  0.00%|
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000101805|  0.000101805|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_92
File duration: 3.38554e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.38554e-05|  1.69277e-05|  0.00%|
(call)|         1|  1.12057e-05|  1.12057e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.77516e-05|  9.77516e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_145
File duration: 3.3617e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|   3.3617e-05|  1.68085e-05|  0.00%|
(call)|         1|  1.09673e-05|  1.09673e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.87053e-05|  9.87053e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_311
File duration: 3.3617e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|   3.3617e-05|  1.68085e-05|  0.00%|
(call)|         1|  1.09673e-05|  1.09673e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.25064e-05|  9.25064e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_245
File duration: 3.3617e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|   3.3617e-05|  1.68085e-05|  0.00%|
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000102043|  0.000102043|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_119
File duration: 3.3617e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|   3.3617e-05|  1.68085e-05|  0.00%|
(call)|         1|  1.12057e-05|  1.12057e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|   9.5129e-05|   9.5129e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_170
File duration: 3.3617e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|   3.3617e-05|  1.68085e-05|  0.00%|
(call)|         1|  1.16825e-05|  1.16825e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000111103|  0.000111103|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_187
File duration: 3.3617e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|   3.3617e-05|  1.68085e-05|  0.00%|
(call)|         1|  1.12057e-05|  1.12057e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.86917e-05|  8.86917e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_18
File duration: 3.33786e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         4|  3.33786e-05|  8.34465e-06|  0.00%|
File: <string>_268
File duration: 3.33786e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.47955e-05|  1.23978e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|   3.8147e-06|   3.8147e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.76837e-06|  4.76837e-06|  0.00%|
File: <__array_function__ internals>_283
File duration: 3.33786e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.33786e-05|  1.66893e-05|  0.00%|
(call)|         1|  1.12057e-05|  1.12057e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.36985e-05|  9.36985e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_18
File duration: 3.33786e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.33786e-05|  1.66893e-05|  0.00%|
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000100374|  0.000100374|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_82
File duration: 3.33786e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.33786e-05|  1.66893e-05|  0.00%|
(call)|         1|  1.07288e-05|  1.07288e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.10759e-05|  9.10759e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_191
File duration: 3.33786e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.33786e-05|  1.66893e-05|  0.00%|
(call)|         1|  1.16825e-05|  1.16825e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.05991e-05|  9.05991e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_280
File duration: 3.33786e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.33786e-05|  1.66893e-05|  0.00%|
(call)|         1|  1.12057e-05|  1.12057e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000108719|  0.000108719|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_19
File duration: 3.33786e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.33786e-05|  1.66893e-05|  0.00%|
(call)|         1|  1.12057e-05|  1.12057e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000102282|  0.000102282|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_30
File duration: 3.33786e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.33786e-05|  1.66893e-05|  0.00%|
(call)|         1|  1.07288e-05|  1.07288e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.05991e-05|  9.05991e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_106
File duration: 3.33786e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.33786e-05|  1.66893e-05|  0.00%|
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.36985e-05|  9.36985e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_167
File duration: 3.31402e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|   2.5034e-05|   1.2517e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|   3.8147e-06|   3.8147e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.29153e-06|  4.29153e-06|  0.00%|
File: <string>_181
File duration: 3.31402e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.43187e-05|  1.21593e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.05312e-06|  4.05312e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.76837e-06|  4.76837e-06|  0.00%|
File: <string>_95
File duration: 3.31402e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  3.31402e-05|  1.65701e-05|  0.00%|
(call)|         1|   0.00432682|   0.00432682|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/rcsetup.py:775 cycler
File: <__array_function__ internals>_157
File duration: 3.31402e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.31402e-05|  1.65701e-05|  0.00%|
(call)|         1|  1.07288e-05|  1.07288e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000131369|  0.000131369|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_133
File duration: 3.31402e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.31402e-05|  1.65701e-05|  0.00%|
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|   0.00010848|   0.00010848|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_9
File duration: 3.31402e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.31402e-05|  1.65701e-05|  0.00%|
(call)|         1|  1.16825e-05|  1.16825e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000100851|  0.000100851|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_90
File duration: 3.31402e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.31402e-05|  1.65701e-05|  0.00%|
(call)|         1|  1.09673e-05|  1.09673e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.08375e-05|  9.08375e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_198
File duration: 3.31402e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.31402e-05|  1.65701e-05|  0.00%|
(call)|         1|  2.67029e-05|  2.67029e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.98838e-05|  8.98838e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_3
File duration: 3.31402e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.31402e-05|  1.65701e-05|  0.00%|
(call)|         1|  1.16825e-05|  1.16825e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000109434|  0.000109434|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_72
File duration: 3.31402e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.31402e-05|  1.65701e-05|  0.00%|
(call)|         1|  1.12057e-05|  1.12057e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.10759e-05|  9.10759e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_14
File duration: 3.29018e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.29018e-05|  1.64509e-05|  0.00%|
(call)|         1|  1.09673e-05|  1.09673e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000103712|  0.000103712|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_103
File duration: 3.29018e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  3.29018e-05|  1.64509e-05|  0.00%|
(call)|         1|   0.00539947|   0.00539947|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/rcsetup.py:775 cycler
File: <__array_function__ internals>_29
File duration: 3.29018e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.29018e-05|  1.64509e-05|  0.00%|
(call)|         1|  1.07288e-05|  1.07288e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000103951|  0.000103951|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_21
File duration: 3.29018e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.29018e-05|  1.64509e-05|  0.00%|
(call)|         1|  1.12057e-05|  1.12057e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000109911|  0.000109911|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_132
File duration: 3.29018e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.29018e-05|  1.64509e-05|  0.00%|
(call)|         1|  2.71797e-05|  2.71797e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.46522e-05|  9.46522e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_130
File duration: 3.29018e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  3.29018e-05|  1.64509e-05|  0.00%|
File: <string>_272
File duration: 3.26633e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.38419e-05|  1.19209e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|   3.8147e-06|   3.8147e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.00679e-06|  5.00679e-06|  0.00%|
File: <__array_function__ internals>_89
File duration: 3.26633e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.26633e-05|  1.63317e-05|  0.00%|
(call)|         1|  1.09673e-05|  1.09673e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.08375e-05|  9.08375e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <attrs generated eq attr.validators._OptionalValidator>
File duration: 3.24249e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  3.24249e-05|  1.62125e-05|  0.00%|def __eq__(self, other):
     2|         0|            0|            0|  0.00%|    if other.__class__ is not self.__class__:
     3|         0|            0|            0|  0.00%|        return NotImplemented
     4|         0|            0|            0|  0.00%|    return  (
     5|         0|            0|            0|  0.00%|        self.validator,
     6|         0|            0|            0|  0.00%|    ) == (
     7|         0|            0|            0|  0.00%|        other.validator,
     8|         0|            0|            0|  0.00%|    )
File: <__array_function__ internals>_17
File duration: 3.24249e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.24249e-05|  1.62125e-05|  0.00%|
(call)|         1|  1.16825e-05|  1.16825e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.60827e-05|  9.60827e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_263
File duration: 3.24249e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.24249e-05|  1.62125e-05|  0.00%|
(call)|         1|  1.16825e-05|  1.16825e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.25064e-05|  9.25064e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_63
File duration: 3.21865e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.21865e-05|  1.60933e-05|  0.00%|
(call)|         1|  1.19209e-05|  1.19209e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|   9.2268e-05|   9.2268e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_108
File duration: 3.21865e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  3.21865e-05|  1.60933e-05|  0.00%|
(call)|         1|   0.00362468|   0.00362468|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/rcsetup.py:775 cycler
File: <string>_160
File duration: 3.17097e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.36034e-05|  1.18017e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  3.57628e-06|  3.57628e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.52995e-06|  4.52995e-06|  0.00%|
File: <string>_101
File duration: 3.17097e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  3.17097e-05|  1.58548e-05|  0.00%|
(call)|         1|   0.00326896|   0.00326896|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/rcsetup.py:775 cycler
File: <string>_99
File duration: 3.17097e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  3.17097e-05|  1.58548e-05|  0.00%|
(call)|         1|   0.00260687|   0.00260687|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/rcsetup.py:775 cycler
File: <string>_304
File duration: 3.17097e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  3.17097e-05|  1.58548e-05|  0.00%|
File: <string>_102
File duration: 3.14713e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  3.14713e-05|  1.57356e-05|  0.00%|
(call)|         1|   0.00326228|   0.00326228|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/rcsetup.py:775 cycler
File: <__array_function__ internals>_20
File duration: 3.09944e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.09944e-05|  1.54972e-05|  0.00%|
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|   0.00013113|   0.00013113|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_142
File duration: 3.02792e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  3.02792e-05|  1.51396e-05|  0.00%|
(call)|         1|  1.09673e-05|  1.09673e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/jit/annotations.py:48 __getitem__
File: <string>_28
File duration: 2.98023e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.98023e-05|  1.49012e-05|  0.00%|
File: <string>_158
File duration: 2.98023e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.98023e-05|  1.49012e-05|  0.00%|
File: <attrs generated eq jsonschema._types.TypeChecker>
File duration: 2.98023e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.98023e-05|  1.49012e-05|  0.00%|def __eq__(self, other):
     2|         0|            0|            0|  0.00%|    if other.__class__ is not self.__class__:
     3|         0|            0|            0|  0.00%|        return NotImplemented
     4|         0|            0|            0|  0.00%|    return  (
     5|         0|            0|            0|  0.00%|        self._type_checkers,
     6|         0|            0|            0|  0.00%|    ) == (
     7|         0|            0|            0|  0.00%|        other._type_checkers,
     8|         0|            0|            0|  0.00%|    )
File: <string>_151
File duration: 2.95639e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|r"""
     2|         1|  1.21593e-05|  1.21593e-05|  0.00%|
     3|         0|            0|            0|  0.00%|Nonlinear solvers
     4|         1|  1.74046e-05|  1.74046e-05|  0.00%|-----------------
     5|         0|            0|            0|  0.00%|
     6|         0|            0|            0|  0.00%|.. currentmodule:: scipy.optimize
     7|         0|            0|            0|  0.00%|
     8|         0|            0|            0|  0.00%|This is a collection of general-purpose nonlinear multidimensional
     9|         0|            0|            0|  0.00%|solvers. These solvers find *x* for which *F(x) = 0*. Both *x*
    10|         0|            0|            0|  0.00%|and *F* can be multidimensional.
    11|         0|            0|            0|  0.00%|
    12|         0|            0|            0|  0.00%|Routines
    13|         0|            0|            0|  0.00%|~~~~~~~~
    14|         0|            0|            0|  0.00%|
    15|         0|            0|            0|  0.00%|Large-scale nonlinear solvers:
    16|         0|            0|            0|  0.00%|
    17|         0|            0|            0|  0.00%|.. autosummary::
    18|         0|            0|            0|  0.00%|
    19|         0|            0|            0|  0.00%|   newton_krylov
    20|         0|            0|            0|  0.00%|   anderson
    21|         0|            0|            0|  0.00%|
    22|         0|            0|            0|  0.00%|General nonlinear solvers:
    23|         0|            0|            0|  0.00%|
    24|         0|            0|            0|  0.00%|.. autosummary::
    25|         0|            0|            0|  0.00%|
    26|         0|            0|            0|  0.00%|   broyden1
    27|         0|            0|            0|  0.00%|   broyden2
    28|         0|            0|            0|  0.00%|
    29|         0|            0|            0|  0.00%|Simple iterations:
    30|         0|            0|            0|  0.00%|
    31|         0|            0|            0|  0.00%|.. autosummary::
    32|         0|            0|            0|  0.00%|
    33|         0|            0|            0|  0.00%|   excitingmixing
    34|         0|            0|            0|  0.00%|   linearmixing
    35|         0|            0|            0|  0.00%|   diagbroyden
    36|         0|            0|            0|  0.00%|
    37|         0|            0|            0|  0.00%|
    38|         0|            0|            0|  0.00%|Examples
    39|         0|            0|            0|  0.00%|~~~~~~~~
    40|         0|            0|            0|  0.00%|
    41|         0|            0|            0|  0.00%|**Small problem**
    42|         0|            0|            0|  0.00%|
    43|         0|            0|            0|  0.00%|>>> def F(x):
    44|         0|            0|            0|  0.00%|...    return np.cos(x) + x[::-1] - [1, 2, 3, 4]
    45|         0|            0|            0|  0.00%|>>> import scipy.optimize
    46|         0|            0|            0|  0.00%|>>> x = scipy.optimize.broyden1(F, [1,1,1,1], f_tol=1e-14)
    47|         0|            0|            0|  0.00%|>>> x
    48|         0|            0|            0|  0.00%|array([ 4.04674914,  3.91158389,  2.71791677,  1.61756251])
    49|         0|            0|            0|  0.00%|>>> np.cos(x) + x[::-1]
    50|         0|            0|            0|  0.00%|array([ 1.,  2.,  3.,  4.])
    51|         0|            0|            0|  0.00%|
    52|         0|            0|            0|  0.00%|
    53|         0|            0|            0|  0.00%|**Large problem**
    54|         0|            0|            0|  0.00%|
    55|         0|            0|            0|  0.00%|Suppose that we needed to solve the following integrodifferential
    56|         0|            0|            0|  0.00%|equation on the square :math:`[0,1]\times[0,1]`:
    57|         0|            0|            0|  0.00%|
    58|         0|            0|            0|  0.00%|.. math::
    59|         0|            0|            0|  0.00%|
    60|         0|            0|            0|  0.00%|   \nabla^2 P = 10 \left(\int_0^1\int_0^1\cosh(P)\,dx\,dy\right)^2
    61|         0|            0|            0|  0.00%|
    62|         0|            0|            0|  0.00%|with :math:`P(x,1) = 1` and :math:`P=0` elsewhere on the boundary of
    63|         0|            0|            0|  0.00%|the square.
    64|         0|            0|            0|  0.00%|
    65|         0|            0|            0|  0.00%|The solution can be found using the `newton_krylov` solver:
    66|         0|            0|            0|  0.00%|
    67|         0|            0|            0|  0.00%|.. plot::
    68|         0|            0|            0|  0.00%|
    69|         0|            0|            0|  0.00%|   import numpy as np
    70|         0|            0|            0|  0.00%|   from scipy.optimize import newton_krylov
    71|         0|            0|            0|  0.00%|   from numpy import cosh, zeros_like, mgrid, zeros
    72|         0|            0|            0|  0.00%|
    73|         0|            0|            0|  0.00%|   # parameters
    74|         0|            0|            0|  0.00%|   nx, ny = 75, 75
    75|         0|            0|            0|  0.00%|   hx, hy = 1./(nx-1), 1./(ny-1)
    76|         0|            0|            0|  0.00%|
    77|         0|            0|            0|  0.00%|   P_left, P_right = 0, 0
    78|         0|            0|            0|  0.00%|   P_top, P_bottom = 1, 0
    79|         0|            0|            0|  0.00%|
    80|         0|            0|            0|  0.00%|   def residual(P):
    81|         0|            0|            0|  0.00%|       d2x = zeros_like(P)
    82|         0|            0|            0|  0.00%|       d2y = zeros_like(P)
    83|         0|            0|            0|  0.00%|
    84|         0|            0|            0|  0.00%|       d2x[1:-1] = (P[2:]   - 2*P[1:-1] + P[:-2]) / hx/hx
    85|         0|            0|            0|  0.00%|       d2x[0]    = (P[1]    - 2*P[0]    + P_left)/hx/hx
    86|         0|            0|            0|  0.00%|       d2x[-1]   = (P_right - 2*P[-1]   + P[-2])/hx/hx
    87|         0|            0|            0|  0.00%|
    88|         0|            0|            0|  0.00%|       d2y[:,1:-1] = (P[:,2:] - 2*P[:,1:-1] + P[:,:-2])/hy/hy
    89|         0|            0|            0|  0.00%|       d2y[:,0]    = (P[:,1]  - 2*P[:,0]    + P_bottom)/hy/hy
    90|         0|            0|            0|  0.00%|       d2y[:,-1]   = (P_top   - 2*P[:,-1]   + P[:,-2])/hy/hy
    91|         0|            0|            0|  0.00%|
    92|         0|            0|            0|  0.00%|       return d2x + d2y - 10*cosh(P).mean()**2
    93|         0|            0|            0|  0.00%|
    94|         0|            0|            0|  0.00%|   # solve
    95|         0|            0|            0|  0.00%|   guess = zeros((nx, ny), float)
    96|         0|            0|            0|  0.00%|   sol = newton_krylov(residual, guess, method='lgmres', verbose=1)
    97|         0|            0|            0|  0.00%|   print('Residual: %g' % abs(residual(sol)).max())
    98|         0|            0|            0|  0.00%|
    99|         0|            0|            0|  0.00%|   # visualize
   100|         0|            0|            0|  0.00%|   import matplotlib.pyplot as plt
   101|         0|            0|            0|  0.00%|   x, y = mgrid[0:1:(nx*1j), 0:1:(ny*1j)]
   102|         0|            0|            0|  0.00%|   plt.pcolormesh(x, y, sol, shading='gouraud')
   103|         0|            0|            0|  0.00%|   plt.colorbar()
   104|         0|            0|            0|  0.00%|   plt.show()
   105|         0|            0|            0|  0.00%|
   106|         0|            0|            0|  0.00%|"""
   107|         0|            0|            0|  0.00%|# Copyright (C) 2009, Pauli Virtanen <pav@iki.fi>
   108|         0|            0|            0|  0.00%|# Distributed under the same license as SciPy.
   109|         0|            0|            0|  0.00%|
   110|         0|            0|            0|  0.00%|import sys
   111|         0|            0|            0|  0.00%|import numpy as np
   112|         0|            0|            0|  0.00%|from scipy.linalg import norm, solve, inv, qr, svd, LinAlgError
   113|         0|            0|            0|  0.00%|from numpy import asarray, dot, vdot
   114|         0|            0|            0|  0.00%|import scipy.sparse.linalg
   115|         0|            0|            0|  0.00%|import scipy.sparse
   116|         0|            0|            0|  0.00%|from scipy.linalg import get_blas_funcs
   117|         0|            0|            0|  0.00%|import inspect
   118|         0|            0|            0|  0.00%|from scipy._lib._util import getfullargspec_no_self as _getfullargspec
   119|         0|            0|            0|  0.00%|from .linesearch import scalar_search_wolfe1, scalar_search_armijo
   120|         0|            0|            0|  0.00%|
   121|         0|            0|            0|  0.00%|
   122|         0|            0|            0|  0.00%|__all__ = [
   123|         0|            0|            0|  0.00%|    'broyden1', 'broyden2', 'anderson', 'linearmixing',
   124|         0|            0|            0|  0.00%|    'diagbroyden', 'excitingmixing', 'newton_krylov']
   125|         0|            0|            0|  0.00%|
   126|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   127|         0|            0|            0|  0.00%|# Utility functions
   128|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   129|         0|            0|            0|  0.00%|
   130|         0|            0|            0|  0.00%|
   131|         0|            0|            0|  0.00%|class NoConvergence(Exception):
   132|         0|            0|            0|  0.00%|    pass
   133|         0|            0|            0|  0.00%|
   134|         0|            0|            0|  0.00%|
   135|         0|            0|            0|  0.00%|def maxnorm(x):
   136|         0|            0|            0|  0.00%|    return np.absolute(x).max()
   137|         0|            0|            0|  0.00%|
   138|         0|            0|            0|  0.00%|
   139|         0|            0|            0|  0.00%|def _as_inexact(x):
   140|         0|            0|            0|  0.00%|    """Return `x` as an array, of either floats or complex floats"""
   141|         0|            0|            0|  0.00%|    x = asarray(x)
   142|         0|            0|            0|  0.00%|    if not np.issubdtype(x.dtype, np.inexact):
   143|         0|            0|            0|  0.00%|        return asarray(x, dtype=np.float_)
   144|         0|            0|            0|  0.00%|    return x
   145|         0|            0|            0|  0.00%|
   146|         0|            0|            0|  0.00%|
   147|         0|            0|            0|  0.00%|def _array_like(x, x0):
   148|         0|            0|            0|  0.00%|    """Return ndarray `x` as same array subclass and shape as `x0`"""
   149|         0|            0|            0|  0.00%|    x = np.reshape(x, np.shape(x0))
   150|         0|            0|            0|  0.00%|    wrap = getattr(x0, '__array_wrap__', x.__array_wrap__)
   151|         0|            0|            0|  0.00%|    return wrap(x)
   152|         0|            0|            0|  0.00%|
   153|         0|            0|            0|  0.00%|
   154|         0|            0|            0|  0.00%|def _safe_norm(v):
   155|         0|            0|            0|  0.00%|    if not np.isfinite(v).all():
   156|         0|            0|            0|  0.00%|        return np.array(np.inf)
   157|         0|            0|            0|  0.00%|    return norm(v)
   158|         0|            0|            0|  0.00%|
   159|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   160|         0|            0|            0|  0.00%|# Generic nonlinear solver machinery
   161|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   162|         0|            0|            0|  0.00%|
   163|         0|            0|            0|  0.00%|
   164|         0|            0|            0|  0.00%|_doc_parts = dict(
   165|         0|            0|            0|  0.00%|    params_basic="""
   166|         0|            0|            0|  0.00%|    F : function(x) -> f
   167|         0|            0|            0|  0.00%|        Function whose root to find; should take and return an array-like
   168|         0|            0|            0|  0.00%|        object.
   169|         0|            0|            0|  0.00%|    xin : array_like
   170|         0|            0|            0|  0.00%|        Initial guess for the solution
   171|         0|            0|            0|  0.00%|    """.strip(),
   172|         0|            0|            0|  0.00%|    params_extra="""
   173|         0|            0|            0|  0.00%|    iter : int, optional
   174|         0|            0|            0|  0.00%|        Number of iterations to make. If omitted (default), make as many
   175|         0|            0|            0|  0.00%|        as required to meet tolerances.
   176|         0|            0|            0|  0.00%|    verbose : bool, optional
   177|         0|            0|            0|  0.00%|        Print status to stdout on every iteration.
   178|         0|            0|            0|  0.00%|    maxiter : int, optional
   179|         0|            0|            0|  0.00%|        Maximum number of iterations to make. If more are needed to
   180|         0|            0|            0|  0.00%|        meet convergence, `NoConvergence` is raised.
   181|         0|            0|            0|  0.00%|    f_tol : float, optional
   182|         0|            0|            0|  0.00%|        Absolute tolerance (in max-norm) for the residual.
   183|         0|            0|            0|  0.00%|        If omitted, default is 6e-6.
   184|         0|            0|            0|  0.00%|    f_rtol : float, optional
   185|         0|            0|            0|  0.00%|        Relative tolerance for the residual. If omitted, not used.
   186|         0|            0|            0|  0.00%|    x_tol : float, optional
   187|         0|            0|            0|  0.00%|        Absolute minimum step size, as determined from the Jacobian
   188|         0|            0|            0|  0.00%|        approximation. If the step size is smaller than this, optimization
   189|         0|            0|            0|  0.00%|        is terminated as successful. If omitted, not used.
   190|         0|            0|            0|  0.00%|    x_rtol : float, optional
   191|         0|            0|            0|  0.00%|        Relative minimum step size. If omitted, not used.
   192|         0|            0|            0|  0.00%|    tol_norm : function(vector) -> scalar, optional
   193|         0|            0|            0|  0.00%|        Norm to use in convergence check. Default is the maximum norm.
   194|         0|            0|            0|  0.00%|    line_search : {None, 'armijo' (default), 'wolfe'}, optional
   195|         0|            0|            0|  0.00%|        Which type of a line search to use to determine the step size in the
   196|         0|            0|            0|  0.00%|        direction given by the Jacobian approximation. Defaults to 'armijo'.
   197|         0|            0|            0|  0.00%|    callback : function, optional
   198|         0|            0|            0|  0.00%|        Optional callback function. It is called on every iteration as
   199|         0|            0|            0|  0.00%|        ``callback(x, f)`` where `x` is the current solution and `f`
   200|         0|            0|            0|  0.00%|        the corresponding residual.
   201|         0|            0|            0|  0.00%|
   202|         0|            0|            0|  0.00%|    Returns
   203|         0|            0|            0|  0.00%|    -------
   204|         0|            0|            0|  0.00%|    sol : ndarray
   205|         0|            0|            0|  0.00%|        An array (of similar array type as `x0`) containing the final solution.
   206|         0|            0|            0|  0.00%|
   207|         0|            0|            0|  0.00%|    Raises
   208|         0|            0|            0|  0.00%|    ------
   209|         0|            0|            0|  0.00%|    NoConvergence
   210|         0|            0|            0|  0.00%|        When a solution was not found.
   211|         0|            0|            0|  0.00%|
   212|         0|            0|            0|  0.00%|    """.strip()
   213|         0|            0|            0|  0.00%|)
   214|         0|            0|            0|  0.00%|
   215|         0|            0|            0|  0.00%|
   216|         0|            0|            0|  0.00%|def _set_doc(obj):
   217|         0|            0|            0|  0.00%|    if obj.__doc__:
   218|         0|            0|            0|  0.00%|        obj.__doc__ = obj.__doc__ % _doc_parts
   219|         0|            0|            0|  0.00%|
   220|         0|            0|            0|  0.00%|
   221|         0|            0|            0|  0.00%|def nonlin_solve(F, x0, jacobian='krylov', iter=None, verbose=False,
   222|         0|            0|            0|  0.00%|                 maxiter=None, f_tol=None, f_rtol=None, x_tol=None, x_rtol=None,
   223|         0|            0|            0|  0.00%|                 tol_norm=None, line_search='armijo', callback=None,
   224|         0|            0|            0|  0.00%|                 full_output=False, raise_exception=True):
   225|         0|            0|            0|  0.00%|    """
   226|         0|            0|            0|  0.00%|    Find a root of a function, in a way suitable for large-scale problems.
   227|         0|            0|            0|  0.00%|
   228|         0|            0|            0|  0.00%|    Parameters
   229|         0|            0|            0|  0.00%|    ----------
   230|         0|            0|            0|  0.00%|    %(params_basic)s
   231|         0|            0|            0|  0.00%|    jacobian : Jacobian
   232|         0|            0|            0|  0.00%|        A Jacobian approximation: `Jacobian` object or something that
   233|         0|            0|            0|  0.00%|        `asjacobian` can transform to one. Alternatively, a string specifying
   234|         0|            0|            0|  0.00%|        which of the builtin Jacobian approximations to use:
   235|         0|            0|            0|  0.00%|
   236|         0|            0|            0|  0.00%|            krylov, broyden1, broyden2, anderson
   237|         0|            0|            0|  0.00%|            diagbroyden, linearmixing, excitingmixing
   238|         0|            0|            0|  0.00%|
   239|         0|            0|            0|  0.00%|    %(params_extra)s
   240|         0|            0|            0|  0.00%|    full_output : bool
   241|         0|            0|            0|  0.00%|        If true, returns a dictionary `info` containing convergence
   242|         0|            0|            0|  0.00%|        information.
   243|         0|            0|            0|  0.00%|    raise_exception : bool
   244|         0|            0|            0|  0.00%|        If True, a `NoConvergence` exception is raise if no solution is found.
   245|         0|            0|            0|  0.00%|
   246|         0|            0|            0|  0.00%|    See Also
   247|         0|            0|            0|  0.00%|    --------
   248|         0|            0|            0|  0.00%|    asjacobian, Jacobian
   249|         0|            0|            0|  0.00%|
   250|         0|            0|            0|  0.00%|    Notes
   251|         0|            0|            0|  0.00%|    -----
   252|         0|            0|            0|  0.00%|    This algorithm implements the inexact Newton method, with
   253|         0|            0|            0|  0.00%|    backtracking or full line searches. Several Jacobian
   254|         0|            0|            0|  0.00%|    approximations are available, including Krylov and Quasi-Newton
   255|         0|            0|            0|  0.00%|    methods.
   256|         0|            0|            0|  0.00%|
   257|         0|            0|            0|  0.00%|    References
   258|         0|            0|            0|  0.00%|    ----------
   259|         0|            0|            0|  0.00%|    .. [KIM] C. T. Kelley, \"Iterative Methods for Linear and Nonlinear
   260|         0|            0|            0|  0.00%|       Equations\". Society for Industrial and Applied Mathematics. (1995)
   261|         0|            0|            0|  0.00%|       https://archive.siam.org/books/kelley/fr16/
   262|         0|            0|            0|  0.00%|
   263|         0|            0|            0|  0.00%|    """
   264|         0|            0|            0|  0.00%|    # Can't use default parameters because it's being explicitly passed as None
   265|         0|            0|            0|  0.00%|    # from the calling function, so we need to set it here.
   266|         0|            0|            0|  0.00%|    tol_norm = maxnorm if tol_norm is None else tol_norm
   267|         0|            0|            0|  0.00%|    condition = TerminationCondition(f_tol=f_tol, f_rtol=f_rtol,
   268|         0|            0|            0|  0.00%|                                     x_tol=x_tol, x_rtol=x_rtol,
   269|         0|            0|            0|  0.00%|                                     iter=iter, norm=tol_norm)
   270|         0|            0|            0|  0.00%|
   271|         0|            0|            0|  0.00%|    x0 = _as_inexact(x0)
   272|         0|            0|            0|  0.00%|    func = lambda z: _as_inexact(F(_array_like(z, x0))).flatten()
   273|         0|            0|            0|  0.00%|    x = x0.flatten()
   274|         0|            0|            0|  0.00%|
   275|         0|            0|            0|  0.00%|    dx = np.inf
   276|         0|            0|            0|  0.00%|    Fx = func(x)
   277|         0|            0|            0|  0.00%|    Fx_norm = norm(Fx)
   278|         0|            0|            0|  0.00%|
   279|         0|            0|            0|  0.00%|    jacobian = asjacobian(jacobian)
   280|         0|            0|            0|  0.00%|    jacobian.setup(x.copy(), Fx, func)
   281|         0|            0|            0|  0.00%|
   282|         0|            0|            0|  0.00%|    if maxiter is None:
   283|         0|            0|            0|  0.00%|        if iter is not None:
   284|         0|            0|            0|  0.00%|            maxiter = iter + 1
   285|         0|            0|            0|  0.00%|        else:
   286|         0|            0|            0|  0.00%|            maxiter = 100*(x.size+1)
   287|         0|            0|            0|  0.00%|
   288|         0|            0|            0|  0.00%|    if line_search is True:
   289|         0|            0|            0|  0.00%|        line_search = 'armijo'
   290|         0|            0|            0|  0.00%|    elif line_search is False:
   291|         0|            0|            0|  0.00%|        line_search = None
   292|         0|            0|            0|  0.00%|
   293|         0|            0|            0|  0.00%|    if line_search not in (None, 'armijo', 'wolfe'):
   294|         0|            0|            0|  0.00%|        raise ValueError("Invalid line search")
   295|         0|            0|            0|  0.00%|
   296|         0|            0|            0|  0.00%|    # Solver tolerance selection
   297|         0|            0|            0|  0.00%|    gamma = 0.9
   298|         0|            0|            0|  0.00%|    eta_max = 0.9999
   299|         0|            0|            0|  0.00%|    eta_treshold = 0.1
   300|         0|            0|            0|  0.00%|    eta = 1e-3
   301|         0|            0|            0|  0.00%|
   302|         0|            0|            0|  0.00%|    for n in range(maxiter):
   303|         0|            0|            0|  0.00%|        status = condition.check(Fx, x, dx)
   304|         0|            0|            0|  0.00%|        if status:
   305|         0|            0|            0|  0.00%|            break
   306|         0|            0|            0|  0.00%|
   307|         0|            0|            0|  0.00%|        # The tolerance, as computed for scipy.sparse.linalg.* routines
   308|         0|            0|            0|  0.00%|        tol = min(eta, eta*Fx_norm)
   309|         0|            0|            0|  0.00%|        dx = -jacobian.solve(Fx, tol=tol)
   310|         0|            0|            0|  0.00%|
   311|         0|            0|            0|  0.00%|        if norm(dx) == 0:
   312|         0|            0|            0|  0.00%|            raise ValueError("Jacobian inversion yielded zero vector. "
   313|         0|            0|            0|  0.00%|                             "This indicates a bug in the Jacobian "
   314|         0|            0|            0|  0.00%|                             "approximation.")
   315|         0|            0|            0|  0.00%|
   316|         0|            0|            0|  0.00%|        # Line search, or Newton step
   317|         0|            0|            0|  0.00%|        if line_search:
   318|         0|            0|            0|  0.00%|            s, x, Fx, Fx_norm_new = _nonlin_line_search(func, x, Fx, dx,
   319|         0|            0|            0|  0.00%|                                                        line_search)
   320|         0|            0|            0|  0.00%|        else:
   321|         0|            0|            0|  0.00%|            s = 1.0
   322|         0|            0|            0|  0.00%|            x = x + dx
   323|         0|            0|            0|  0.00%|            Fx = func(x)
   324|         0|            0|            0|  0.00%|            Fx_norm_new = norm(Fx)
   325|         0|            0|            0|  0.00%|
   326|         0|            0|            0|  0.00%|        jacobian.update(x.copy(), Fx)
   327|         0|            0|            0|  0.00%|
   328|         0|            0|            0|  0.00%|        if callback:
   329|         0|            0|            0|  0.00%|            callback(x, Fx)
   330|         0|            0|            0|  0.00%|
   331|         0|            0|            0|  0.00%|        # Adjust forcing parameters for inexact methods
   332|         0|            0|            0|  0.00%|        eta_A = gamma * Fx_norm_new**2 / Fx_norm**2
   333|         0|            0|            0|  0.00%|        if gamma * eta**2 < eta_treshold:
   334|         0|            0|            0|  0.00%|            eta = min(eta_max, eta_A)
   335|         0|            0|            0|  0.00%|        else:
   336|         0|            0|            0|  0.00%|            eta = min(eta_max, max(eta_A, gamma*eta**2))
   337|         0|            0|            0|  0.00%|
   338|         0|            0|            0|  0.00%|        Fx_norm = Fx_norm_new
   339|         0|            0|            0|  0.00%|
   340|         0|            0|            0|  0.00%|        # Print status
   341|         0|            0|            0|  0.00%|        if verbose:
   342|         0|            0|            0|  0.00%|            sys.stdout.write("%d:  |F(x)| = %g; step %g\n" % (
   343|         0|            0|            0|  0.00%|                n, tol_norm(Fx), s))
   344|         0|            0|            0|  0.00%|            sys.stdout.flush()
   345|         0|            0|            0|  0.00%|    else:
   346|         0|            0|            0|  0.00%|        if raise_exception:
   347|         0|            0|            0|  0.00%|            raise NoConvergence(_array_like(x, x0))
   348|         0|            0|            0|  0.00%|        else:
   349|         0|            0|            0|  0.00%|            status = 2
   350|         0|            0|            0|  0.00%|
   351|         0|            0|            0|  0.00%|    if full_output:
   352|         0|            0|            0|  0.00%|        info = {'nit': condition.iteration,
   353|         0|            0|            0|  0.00%|                'fun': Fx,
   354|         0|            0|            0|  0.00%|                'status': status,
   355|         0|            0|            0|  0.00%|                'success': status == 1,
   356|         0|            0|            0|  0.00%|                'message': {1: 'A solution was found at the specified '
   357|         0|            0|            0|  0.00%|                               'tolerance.',
   358|         0|            0|            0|  0.00%|                            2: 'The maximum number of iterations allowed '
   359|         0|            0|            0|  0.00%|                               'has been reached.'
   360|         0|            0|            0|  0.00%|                            }[status]
   361|         0|            0|            0|  0.00%|                }
   362|         0|            0|            0|  0.00%|        return _array_like(x, x0), info
   363|         0|            0|            0|  0.00%|    else:
   364|         0|            0|            0|  0.00%|        return _array_like(x, x0)
   365|         0|            0|            0|  0.00%|
   366|         0|            0|            0|  0.00%|
   367|         0|            0|            0|  0.00%|_set_doc(nonlin_solve)
   368|         0|            0|            0|  0.00%|
   369|         0|            0|            0|  0.00%|
   370|         0|            0|            0|  0.00%|def _nonlin_line_search(func, x, Fx, dx, search_type='armijo', rdiff=1e-8,
   371|         0|            0|            0|  0.00%|                        smin=1e-2):
   372|         0|            0|            0|  0.00%|    tmp_s = [0]
   373|         0|            0|            0|  0.00%|    tmp_Fx = [Fx]
   374|         0|            0|            0|  0.00%|    tmp_phi = [norm(Fx)**2]
   375|         0|            0|            0|  0.00%|    s_norm = norm(x) / norm(dx)
   376|         0|            0|            0|  0.00%|
   377|         0|            0|            0|  0.00%|    def phi(s, store=True):
   378|         0|            0|            0|  0.00%|        if s == tmp_s[0]:
   379|         0|            0|            0|  0.00%|            return tmp_phi[0]
   380|         0|            0|            0|  0.00%|        xt = x + s*dx
   381|         0|            0|            0|  0.00%|        v = func(xt)
   382|         0|            0|            0|  0.00%|        p = _safe_norm(v)**2
   383|         0|            0|            0|  0.00%|        if store:
   384|         0|            0|            0|  0.00%|            tmp_s[0] = s
   385|         0|            0|            0|  0.00%|            tmp_phi[0] = p
   386|         0|            0|            0|  0.00%|            tmp_Fx[0] = v
   387|         0|            0|            0|  0.00%|        return p
   388|         0|            0|            0|  0.00%|
   389|         0|            0|            0|  0.00%|    def derphi(s):
   390|         0|            0|            0|  0.00%|        ds = (abs(s) + s_norm + 1) * rdiff
   391|         0|            0|            0|  0.00%|        return (phi(s+ds, store=False) - phi(s)) / ds
   392|         0|            0|            0|  0.00%|
   393|         0|            0|            0|  0.00%|    if search_type == 'wolfe':
   394|         0|            0|            0|  0.00%|        s, phi1, phi0 = scalar_search_wolfe1(phi, derphi, tmp_phi[0],
   395|         0|            0|            0|  0.00%|                                             xtol=1e-2, amin=smin)
   396|         0|            0|            0|  0.00%|    elif search_type == 'armijo':
   397|         0|            0|            0|  0.00%|        s, phi1 = scalar_search_armijo(phi, tmp_phi[0], -tmp_phi[0],
   398|         0|            0|            0|  0.00%|                                       amin=smin)
   399|         0|            0|            0|  0.00%|
   400|         0|            0|            0|  0.00%|    if s is None:
   401|         0|            0|            0|  0.00%|        # XXX: No suitable step length found. Take the full Newton step,
   402|         0|            0|            0|  0.00%|        #      and hope for the best.
   403|         0|            0|            0|  0.00%|        s = 1.0
   404|         0|            0|            0|  0.00%|
   405|         0|            0|            0|  0.00%|    x = x + s*dx
   406|         0|            0|            0|  0.00%|    if s == tmp_s[0]:
   407|         0|            0|            0|  0.00%|        Fx = tmp_Fx[0]
   408|         0|            0|            0|  0.00%|    else:
   409|         0|            0|            0|  0.00%|        Fx = func(x)
   410|         0|            0|            0|  0.00%|    Fx_norm = norm(Fx)
   411|         0|            0|            0|  0.00%|
   412|         0|            0|            0|  0.00%|    return s, x, Fx, Fx_norm
   413|         0|            0|            0|  0.00%|
   414|         0|            0|            0|  0.00%|
   415|         0|            0|            0|  0.00%|class TerminationCondition(object):
   416|         0|            0|            0|  0.00%|    """
   417|         0|            0|            0|  0.00%|    Termination condition for an iteration. It is terminated if
   418|         0|            0|            0|  0.00%|
   419|         0|            0|            0|  0.00%|    - |F| < f_rtol*|F_0|, AND
   420|         0|            0|            0|  0.00%|    - |F| < f_tol
   421|         0|            0|            0|  0.00%|
   422|         0|            0|            0|  0.00%|    AND
   423|         0|            0|            0|  0.00%|
   424|         0|            0|            0|  0.00%|    - |dx| < x_rtol*|x|, AND
   425|         0|            0|            0|  0.00%|    - |dx| < x_tol
   426|         0|            0|            0|  0.00%|
   427|         0|            0|            0|  0.00%|    """
   428|         0|            0|            0|  0.00%|    def __init__(self, f_tol=None, f_rtol=None, x_tol=None, x_rtol=None,
   429|         0|            0|            0|  0.00%|                 iter=None, norm=maxnorm):
   430|         0|            0|            0|  0.00%|
   431|         0|            0|            0|  0.00%|        if f_tol is None:
   432|         0|            0|            0|  0.00%|            f_tol = np.finfo(np.float_).eps ** (1./3)
   433|         0|            0|            0|  0.00%|        if f_rtol is None:
   434|         0|            0|            0|  0.00%|            f_rtol = np.inf
   435|         0|            0|            0|  0.00%|        if x_tol is None:
   436|         0|            0|            0|  0.00%|            x_tol = np.inf
   437|         0|            0|            0|  0.00%|        if x_rtol is None:
   438|         0|            0|            0|  0.00%|            x_rtol = np.inf
   439|         0|            0|            0|  0.00%|
   440|         0|            0|            0|  0.00%|        self.x_tol = x_tol
   441|         0|            0|            0|  0.00%|        self.x_rtol = x_rtol
   442|         0|            0|            0|  0.00%|        self.f_tol = f_tol
   443|         0|            0|            0|  0.00%|        self.f_rtol = f_rtol
   444|         0|            0|            0|  0.00%|
   445|         0|            0|            0|  0.00%|        self.norm = norm
   446|         0|            0|            0|  0.00%|
   447|         0|            0|            0|  0.00%|        self.iter = iter
   448|         0|            0|            0|  0.00%|
   449|         0|            0|            0|  0.00%|        self.f0_norm = None
   450|         0|            0|            0|  0.00%|        self.iteration = 0
   451|         0|            0|            0|  0.00%|
   452|         0|            0|            0|  0.00%|    def check(self, f, x, dx):
   453|         0|            0|            0|  0.00%|        self.iteration += 1
   454|         0|            0|            0|  0.00%|        f_norm = self.norm(f)
   455|         0|            0|            0|  0.00%|        x_norm = self.norm(x)
   456|         0|            0|            0|  0.00%|        dx_norm = self.norm(dx)
   457|         0|            0|            0|  0.00%|
   458|         0|            0|            0|  0.00%|        if self.f0_norm is None:
   459|         0|            0|            0|  0.00%|            self.f0_norm = f_norm
   460|         0|            0|            0|  0.00%|
   461|         0|            0|            0|  0.00%|        if f_norm == 0:
   462|         0|            0|            0|  0.00%|            return 1
   463|         0|            0|            0|  0.00%|
   464|         0|            0|            0|  0.00%|        if self.iter is not None:
   465|         0|            0|            0|  0.00%|            # backwards compatibility with SciPy 0.6.0
   466|         0|            0|            0|  0.00%|            return 2 * (self.iteration > self.iter)
   467|         0|            0|            0|  0.00%|
   468|         0|            0|            0|  0.00%|        # NB: condition must succeed for rtol=inf even if norm == 0
   469|         0|            0|            0|  0.00%|        return int((f_norm <= self.f_tol
   470|         0|            0|            0|  0.00%|                    and f_norm/self.f_rtol <= self.f0_norm)
   471|         0|            0|            0|  0.00%|                   and (dx_norm <= self.x_tol
   472|         0|            0|            0|  0.00%|                        and dx_norm/self.x_rtol <= x_norm))
   473|         0|            0|            0|  0.00%|
   474|         0|            0|            0|  0.00%|
   475|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   476|         0|            0|            0|  0.00%|# Generic Jacobian approximation
   477|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   478|         0|            0|            0|  0.00%|
   479|         0|            0|            0|  0.00%|class Jacobian(object):
   480|         0|            0|            0|  0.00%|    """
   481|         0|            0|            0|  0.00%|    Common interface for Jacobians or Jacobian approximations.
   482|         0|            0|            0|  0.00%|
   483|         0|            0|            0|  0.00%|    The optional methods come useful when implementing trust region
   484|         0|            0|            0|  0.00%|    etc., algorithms that often require evaluating transposes of the
   485|         0|            0|            0|  0.00%|    Jacobian.
   486|         0|            0|            0|  0.00%|
   487|         0|            0|            0|  0.00%|    Methods
   488|         0|            0|            0|  0.00%|    -------
   489|         0|            0|            0|  0.00%|    solve
   490|         0|            0|            0|  0.00%|        Returns J^-1 * v
   491|         0|            0|            0|  0.00%|    update
   492|         0|            0|            0|  0.00%|        Updates Jacobian to point `x` (where the function has residual `Fx`)
   493|         0|            0|            0|  0.00%|
   494|         0|            0|            0|  0.00%|    matvec : optional
   495|         0|            0|            0|  0.00%|        Returns J * v
   496|         0|            0|            0|  0.00%|    rmatvec : optional
   497|         0|            0|            0|  0.00%|        Returns A^H * v
   498|         0|            0|            0|  0.00%|    rsolve : optional
   499|         0|            0|            0|  0.00%|        Returns A^-H * v
   500|         0|            0|            0|  0.00%|    matmat : optional
   501|         0|            0|            0|  0.00%|        Returns A * V, where V is a dense matrix with dimensions (N,K).
   502|         0|            0|            0|  0.00%|    todense : optional
   503|         0|            0|            0|  0.00%|        Form the dense Jacobian matrix. Necessary for dense trust region
   504|         0|            0|            0|  0.00%|        algorithms, and useful for testing.
   505|         0|            0|            0|  0.00%|
   506|         0|            0|            0|  0.00%|    Attributes
   507|         0|            0|            0|  0.00%|    ----------
   508|         0|            0|            0|  0.00%|    shape
   509|         0|            0|            0|  0.00%|        Matrix dimensions (M, N)
   510|         0|            0|            0|  0.00%|    dtype
   511|         0|            0|            0|  0.00%|        Data type of the matrix.
   512|         0|            0|            0|  0.00%|    func : callable, optional
   513|         0|            0|            0|  0.00%|        Function the Jacobian corresponds to
   514|         0|            0|            0|  0.00%|
   515|         0|            0|            0|  0.00%|    """
   516|         0|            0|            0|  0.00%|
   517|         0|            0|            0|  0.00%|    def __init__(self, **kw):
   518|         0|            0|            0|  0.00%|        names = ["solve", "update", "matvec", "rmatvec", "rsolve",
   519|         0|            0|            0|  0.00%|                 "matmat", "todense", "shape", "dtype"]
   520|         0|            0|            0|  0.00%|        for name, value in kw.items():
   521|         0|            0|            0|  0.00%|            if name not in names:
   522|         0|            0|            0|  0.00%|                raise ValueError("Unknown keyword argument %s" % name)
   523|         0|            0|            0|  0.00%|            if value is not None:
   524|         0|            0|            0|  0.00%|                setattr(self, name, kw[name])
   525|         0|            0|            0|  0.00%|
   526|         0|            0|            0|  0.00%|        if hasattr(self, 'todense'):
   527|         0|            0|            0|  0.00%|            self.__array__ = lambda: self.todense()
   528|         0|            0|            0|  0.00%|
   529|         0|            0|            0|  0.00%|    def aspreconditioner(self):
   530|         0|            0|            0|  0.00%|        return InverseJacobian(self)
   531|         0|            0|            0|  0.00%|
   532|         0|            0|            0|  0.00%|    def solve(self, v, tol=0):
   533|         0|            0|            0|  0.00%|        raise NotImplementedError
   534|         0|            0|            0|  0.00%|
   535|         0|            0|            0|  0.00%|    def update(self, x, F):
   536|         0|            0|            0|  0.00%|        pass
   537|         0|            0|            0|  0.00%|
   538|         0|            0|            0|  0.00%|    def setup(self, x, F, func):
   539|         0|            0|            0|  0.00%|        self.func = func
   540|         0|            0|            0|  0.00%|        self.shape = (F.size, x.size)
   541|         0|            0|            0|  0.00%|        self.dtype = F.dtype
   542|         0|            0|            0|  0.00%|        if self.__class__.setup is Jacobian.setup:
   543|         0|            0|            0|  0.00%|            # Call on the first point unless overridden
   544|         0|            0|            0|  0.00%|            self.update(x, F)
   545|         0|            0|            0|  0.00%|
   546|         0|            0|            0|  0.00%|
   547|         0|            0|            0|  0.00%|class InverseJacobian(object):
   548|         0|            0|            0|  0.00%|    def __init__(self, jacobian):
   549|         0|            0|            0|  0.00%|        self.jacobian = jacobian
   550|         0|            0|            0|  0.00%|        self.matvec = jacobian.solve
   551|         0|            0|            0|  0.00%|        self.update = jacobian.update
   552|         0|            0|            0|  0.00%|        if hasattr(jacobian, 'setup'):
   553|         0|            0|            0|  0.00%|            self.setup = jacobian.setup
   554|         0|            0|            0|  0.00%|        if hasattr(jacobian, 'rsolve'):
   555|         0|            0|            0|  0.00%|            self.rmatvec = jacobian.rsolve
   556|         0|            0|            0|  0.00%|
   557|         0|            0|            0|  0.00%|    @property
   558|         0|            0|            0|  0.00%|    def shape(self):
   559|         0|            0|            0|  0.00%|        return self.jacobian.shape
   560|         0|            0|            0|  0.00%|
   561|         0|            0|            0|  0.00%|    @property
   562|         0|            0|            0|  0.00%|    def dtype(self):
   563|         0|            0|            0|  0.00%|        return self.jacobian.dtype
   564|         0|            0|            0|  0.00%|
   565|         0|            0|            0|  0.00%|
   566|         0|            0|            0|  0.00%|def asjacobian(J):
   567|         0|            0|            0|  0.00%|    """
   568|         0|            0|            0|  0.00%|    Convert given object to one suitable for use as a Jacobian.
   569|         0|            0|            0|  0.00%|    """
   570|         0|            0|            0|  0.00%|    spsolve = scipy.sparse.linalg.spsolve
   571|         0|            0|            0|  0.00%|    if isinstance(J, Jacobian):
   572|         0|            0|            0|  0.00%|        return J
   573|         0|            0|            0|  0.00%|    elif inspect.isclass(J) and issubclass(J, Jacobian):
   574|         0|            0|            0|  0.00%|        return J()
   575|         0|            0|            0|  0.00%|    elif isinstance(J, np.ndarray):
   576|         0|            0|            0|  0.00%|        if J.ndim > 2:
   577|         0|            0|            0|  0.00%|            raise ValueError('array must have rank <= 2')
   578|         0|            0|            0|  0.00%|        J = np.atleast_2d(np.asarray(J))
   579|         0|            0|            0|  0.00%|        if J.shape[0] != J.shape[1]:
   580|         0|            0|            0|  0.00%|            raise ValueError('array must be square')
   581|         0|            0|            0|  0.00%|
   582|         0|            0|            0|  0.00%|        return Jacobian(matvec=lambda v: dot(J, v),
   583|         0|            0|            0|  0.00%|                        rmatvec=lambda v: dot(J.conj().T, v),
   584|         0|            0|            0|  0.00%|                        solve=lambda v: solve(J, v),
   585|         0|            0|            0|  0.00%|                        rsolve=lambda v: solve(J.conj().T, v),
   586|         0|            0|            0|  0.00%|                        dtype=J.dtype, shape=J.shape)
   587|         0|            0|            0|  0.00%|    elif scipy.sparse.isspmatrix(J):
   588|         0|            0|            0|  0.00%|        if J.shape[0] != J.shape[1]:
   589|         0|            0|            0|  0.00%|            raise ValueError('matrix must be square')
   590|         0|            0|            0|  0.00%|        return Jacobian(matvec=lambda v: J*v,
   591|         0|            0|            0|  0.00%|                        rmatvec=lambda v: J.conj().T * v,
   592|         0|            0|            0|  0.00%|                        solve=lambda v: spsolve(J, v),
   593|         0|            0|            0|  0.00%|                        rsolve=lambda v: spsolve(J.conj().T, v),
   594|         0|            0|            0|  0.00%|                        dtype=J.dtype, shape=J.shape)
   595|         0|            0|            0|  0.00%|    elif hasattr(J, 'shape') and hasattr(J, 'dtype') and hasattr(J, 'solve'):
   596|         0|            0|            0|  0.00%|        return Jacobian(matvec=getattr(J, 'matvec'),
   597|         0|            0|            0|  0.00%|                        rmatvec=getattr(J, 'rmatvec'),
   598|         0|            0|            0|  0.00%|                        solve=J.solve,
   599|         0|            0|            0|  0.00%|                        rsolve=getattr(J, 'rsolve'),
   600|         0|            0|            0|  0.00%|                        update=getattr(J, 'update'),
   601|         0|            0|            0|  0.00%|                        setup=getattr(J, 'setup'),
   602|         0|            0|            0|  0.00%|                        dtype=J.dtype,
   603|         0|            0|            0|  0.00%|                        shape=J.shape)
   604|         0|            0|            0|  0.00%|    elif callable(J):
   605|         0|            0|            0|  0.00%|        # Assume it's a function J(x) that returns the Jacobian
   606|         0|            0|            0|  0.00%|        class Jac(Jacobian):
   607|         0|            0|            0|  0.00%|            def update(self, x, F):
   608|         0|            0|            0|  0.00%|                self.x = x
   609|         0|            0|            0|  0.00%|
   610|         0|            0|            0|  0.00%|            def solve(self, v, tol=0):
   611|         0|            0|            0|  0.00%|                m = J(self.x)
   612|         0|            0|            0|  0.00%|                if isinstance(m, np.ndarray):
   613|         0|            0|            0|  0.00%|                    return solve(m, v)
   614|         0|            0|            0|  0.00%|                elif scipy.sparse.isspmatrix(m):
   615|         0|            0|            0|  0.00%|                    return spsolve(m, v)
   616|         0|            0|            0|  0.00%|                else:
   617|         0|            0|            0|  0.00%|                    raise ValueError("Unknown matrix type")
   618|         0|            0|            0|  0.00%|
   619|         0|            0|            0|  0.00%|            def matvec(self, v):
   620|         0|            0|            0|  0.00%|                m = J(self.x)
   621|         0|            0|            0|  0.00%|                if isinstance(m, np.ndarray):
   622|         0|            0|            0|  0.00%|                    return dot(m, v)
   623|         0|            0|            0|  0.00%|                elif scipy.sparse.isspmatrix(m):
   624|         0|            0|            0|  0.00%|                    return m*v
   625|         0|            0|            0|  0.00%|                else:
   626|         0|            0|            0|  0.00%|                    raise ValueError("Unknown matrix type")
   627|         0|            0|            0|  0.00%|
   628|         0|            0|            0|  0.00%|            def rsolve(self, v, tol=0):
   629|         0|            0|            0|  0.00%|                m = J(self.x)
   630|         0|            0|            0|  0.00%|                if isinstance(m, np.ndarray):
   631|         0|            0|            0|  0.00%|                    return solve(m.conj().T, v)
   632|         0|            0|            0|  0.00%|                elif scipy.sparse.isspmatrix(m):
   633|         0|            0|            0|  0.00%|                    return spsolve(m.conj().T, v)
   634|         0|            0|            0|  0.00%|                else:
   635|         0|            0|            0|  0.00%|                    raise ValueError("Unknown matrix type")
   636|         0|            0|            0|  0.00%|
   637|         0|            0|            0|  0.00%|            def rmatvec(self, v):
   638|         0|            0|            0|  0.00%|                m = J(self.x)
   639|         0|            0|            0|  0.00%|                if isinstance(m, np.ndarray):
   640|         0|            0|            0|  0.00%|                    return dot(m.conj().T, v)
   641|         0|            0|            0|  0.00%|                elif scipy.sparse.isspmatrix(m):
   642|         0|            0|            0|  0.00%|                    return m.conj().T * v
   643|         0|            0|            0|  0.00%|                else:
   644|         0|            0|            0|  0.00%|                    raise ValueError("Unknown matrix type")
   645|         0|            0|            0|  0.00%|        return Jac()
   646|         0|            0|            0|  0.00%|    elif isinstance(J, str):
   647|         0|            0|            0|  0.00%|        return dict(broyden1=BroydenFirst,
   648|         0|            0|            0|  0.00%|                    broyden2=BroydenSecond,
   649|         0|            0|            0|  0.00%|                    anderson=Anderson,
   650|         0|            0|            0|  0.00%|                    diagbroyden=DiagBroyden,
   651|         0|            0|            0|  0.00%|                    linearmixing=LinearMixing,
   652|         0|            0|            0|  0.00%|                    excitingmixing=ExcitingMixing,
   653|         0|            0|            0|  0.00%|                    krylov=KrylovJacobian)[J]()
   654|         0|            0|            0|  0.00%|    else:
   655|         0|            0|            0|  0.00%|        raise TypeError('Cannot convert object to a Jacobian')
   656|         0|            0|            0|  0.00%|
   657|         0|            0|            0|  0.00%|
   658|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   659|         0|            0|            0|  0.00%|# Broyden
   660|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   661|         0|            0|            0|  0.00%|
   662|         0|            0|            0|  0.00%|class GenericBroyden(Jacobian):
   663|         0|            0|            0|  0.00%|    def setup(self, x0, f0, func):
   664|         0|            0|            0|  0.00%|        Jacobian.setup(self, x0, f0, func)
   665|         0|            0|            0|  0.00%|        self.last_f = f0
   666|         0|            0|            0|  0.00%|        self.last_x = x0
   667|         0|            0|            0|  0.00%|
   668|         0|            0|            0|  0.00%|        if hasattr(self, 'alpha') and self.alpha is None:
   669|         0|            0|            0|  0.00%|            # Autoscale the initial Jacobian parameter
   670|         0|            0|            0|  0.00%|            # unless we have already guessed the solution.
   671|         0|            0|            0|  0.00%|            normf0 = norm(f0)
   672|         0|            0|            0|  0.00%|            if normf0:
   673|         0|            0|            0|  0.00%|                self.alpha = 0.5*max(norm(x0), 1) / normf0
   674|         0|            0|            0|  0.00%|            else:
   675|         0|            0|            0|  0.00%|                self.alpha = 1.0
   676|         0|            0|            0|  0.00%|
   677|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
   678|         0|            0|            0|  0.00%|        raise NotImplementedError
   679|         0|            0|            0|  0.00%|
   680|         0|            0|            0|  0.00%|    def update(self, x, f):
   681|         0|            0|            0|  0.00%|        df = f - self.last_f
   682|         0|            0|            0|  0.00%|        dx = x - self.last_x
   683|         0|            0|            0|  0.00%|        self._update(x, f, dx, df, norm(dx), norm(df))
   684|         0|            0|            0|  0.00%|        self.last_f = f
   685|         0|            0|            0|  0.00%|        self.last_x = x
   686|         0|            0|            0|  0.00%|
   687|         0|            0|            0|  0.00%|
   688|         0|            0|            0|  0.00%|class LowRankMatrix(object):
   689|         0|            0|            0|  0.00%|    r"""
   690|         0|            0|            0|  0.00%|    A matrix represented as
   691|         0|            0|            0|  0.00%|
   692|         0|            0|            0|  0.00%|    .. math:: \alpha I + \sum_{n=0}^{n=M} c_n d_n^\dagger
   693|         0|            0|            0|  0.00%|
   694|         0|            0|            0|  0.00%|    However, if the rank of the matrix reaches the dimension of the vectors,
   695|         0|            0|            0|  0.00%|    full matrix representation will be used thereon.
   696|         0|            0|            0|  0.00%|
   697|         0|            0|            0|  0.00%|    """
   698|         0|            0|            0|  0.00%|
   699|         0|            0|            0|  0.00%|    def __init__(self, alpha, n, dtype):
   700|         0|            0|            0|  0.00%|        self.alpha = alpha
   701|         0|            0|            0|  0.00%|        self.cs = []
   702|         0|            0|            0|  0.00%|        self.ds = []
   703|         0|            0|            0|  0.00%|        self.n = n
   704|         0|            0|            0|  0.00%|        self.dtype = dtype
   705|         0|            0|            0|  0.00%|        self.collapsed = None
   706|         0|            0|            0|  0.00%|
   707|         0|            0|            0|  0.00%|    @staticmethod
   708|         0|            0|            0|  0.00%|    def _matvec(v, alpha, cs, ds):
   709|         0|            0|            0|  0.00%|        axpy, scal, dotc = get_blas_funcs(['axpy', 'scal', 'dotc'],
   710|         0|            0|            0|  0.00%|                                          cs[:1] + [v])
   711|         0|            0|            0|  0.00%|        w = alpha * v
   712|         0|            0|            0|  0.00%|        for c, d in zip(cs, ds):
   713|         0|            0|            0|  0.00%|            a = dotc(d, v)
   714|         0|            0|            0|  0.00%|            w = axpy(c, w, w.size, a)
   715|         0|            0|            0|  0.00%|        return w
   716|         0|            0|            0|  0.00%|
   717|         0|            0|            0|  0.00%|    @staticmethod
   718|         0|            0|            0|  0.00%|    def _solve(v, alpha, cs, ds):
   719|         0|            0|            0|  0.00%|        """Evaluate w = M^-1 v"""
   720|         0|            0|            0|  0.00%|        if len(cs) == 0:
   721|         0|            0|            0|  0.00%|            return v/alpha
   722|         0|            0|            0|  0.00%|
   723|         0|            0|            0|  0.00%|        # (B + C D^H)^-1 = B^-1 - B^-1 C (I + D^H B^-1 C)^-1 D^H B^-1
   724|         0|            0|            0|  0.00%|
   725|         0|            0|            0|  0.00%|        axpy, dotc = get_blas_funcs(['axpy', 'dotc'], cs[:1] + [v])
   726|         0|            0|            0|  0.00%|
   727|         0|            0|            0|  0.00%|        c0 = cs[0]
   728|         0|            0|            0|  0.00%|        A = alpha * np.identity(len(cs), dtype=c0.dtype)
   729|         0|            0|            0|  0.00%|        for i, d in enumerate(ds):
   730|         0|            0|            0|  0.00%|            for j, c in enumerate(cs):
   731|         0|            0|            0|  0.00%|                A[i,j] += dotc(d, c)
   732|         0|            0|            0|  0.00%|
   733|         0|            0|            0|  0.00%|        q = np.zeros(len(cs), dtype=c0.dtype)
   734|         0|            0|            0|  0.00%|        for j, d in enumerate(ds):
   735|         0|            0|            0|  0.00%|            q[j] = dotc(d, v)
   736|         0|            0|            0|  0.00%|        q /= alpha
   737|         0|            0|            0|  0.00%|        q = solve(A, q)
   738|         0|            0|            0|  0.00%|
   739|         0|            0|            0|  0.00%|        w = v/alpha
   740|         0|            0|            0|  0.00%|        for c, qc in zip(cs, q):
   741|         0|            0|            0|  0.00%|            w = axpy(c, w, w.size, -qc)
   742|         0|            0|            0|  0.00%|
   743|         0|            0|            0|  0.00%|        return w
   744|         0|            0|            0|  0.00%|
   745|         0|            0|            0|  0.00%|    def matvec(self, v):
   746|         0|            0|            0|  0.00%|        """Evaluate w = M v"""
   747|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   748|         0|            0|            0|  0.00%|            return np.dot(self.collapsed, v)
   749|         0|            0|            0|  0.00%|        return LowRankMatrix._matvec(v, self.alpha, self.cs, self.ds)
   750|         0|            0|            0|  0.00%|
   751|         0|            0|            0|  0.00%|    def rmatvec(self, v):
   752|         0|            0|            0|  0.00%|        """Evaluate w = M^H v"""
   753|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   754|         0|            0|            0|  0.00%|            return np.dot(self.collapsed.T.conj(), v)
   755|         0|            0|            0|  0.00%|        return LowRankMatrix._matvec(v, np.conj(self.alpha), self.ds, self.cs)
   756|         0|            0|            0|  0.00%|
   757|         0|            0|            0|  0.00%|    def solve(self, v, tol=0):
   758|         0|            0|            0|  0.00%|        """Evaluate w = M^-1 v"""
   759|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   760|         0|            0|            0|  0.00%|            return solve(self.collapsed, v)
   761|         0|            0|            0|  0.00%|        return LowRankMatrix._solve(v, self.alpha, self.cs, self.ds)
   762|         0|            0|            0|  0.00%|
   763|         0|            0|            0|  0.00%|    def rsolve(self, v, tol=0):
   764|         0|            0|            0|  0.00%|        """Evaluate w = M^-H v"""
   765|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   766|         0|            0|            0|  0.00%|            return solve(self.collapsed.T.conj(), v)
   767|         0|            0|            0|  0.00%|        return LowRankMatrix._solve(v, np.conj(self.alpha), self.ds, self.cs)
   768|         0|            0|            0|  0.00%|
   769|         0|            0|            0|  0.00%|    def append(self, c, d):
   770|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   771|         0|            0|            0|  0.00%|            self.collapsed += c[:,None] * d[None,:].conj()
   772|         0|            0|            0|  0.00%|            return
   773|         0|            0|            0|  0.00%|
   774|         0|            0|            0|  0.00%|        self.cs.append(c)
   775|         0|            0|            0|  0.00%|        self.ds.append(d)
   776|         0|            0|            0|  0.00%|
   777|         0|            0|            0|  0.00%|        if len(self.cs) > c.size:
   778|         0|            0|            0|  0.00%|            self.collapse()
   779|         0|            0|            0|  0.00%|
   780|         0|            0|            0|  0.00%|    def __array__(self):
   781|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   782|         0|            0|            0|  0.00%|            return self.collapsed
   783|         0|            0|            0|  0.00%|
   784|         0|            0|            0|  0.00%|        Gm = self.alpha*np.identity(self.n, dtype=self.dtype)
   785|         0|            0|            0|  0.00%|        for c, d in zip(self.cs, self.ds):
   786|         0|            0|            0|  0.00%|            Gm += c[:,None]*d[None,:].conj()
   787|         0|            0|            0|  0.00%|        return Gm
   788|         0|            0|            0|  0.00%|
   789|         0|            0|            0|  0.00%|    def collapse(self):
   790|         0|            0|            0|  0.00%|        """Collapse the low-rank matrix to a full-rank one."""
   791|         0|            0|            0|  0.00%|        self.collapsed = np.array(self)
   792|         0|            0|            0|  0.00%|        self.cs = None
   793|         0|            0|            0|  0.00%|        self.ds = None
   794|         0|            0|            0|  0.00%|        self.alpha = None
   795|         0|            0|            0|  0.00%|
   796|         0|            0|            0|  0.00%|    def restart_reduce(self, rank):
   797|         0|            0|            0|  0.00%|        """
   798|         0|            0|            0|  0.00%|        Reduce the rank of the matrix by dropping all vectors.
   799|         0|            0|            0|  0.00%|        """
   800|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   801|         0|            0|            0|  0.00%|            return
   802|         0|            0|            0|  0.00%|        assert rank > 0
   803|         0|            0|            0|  0.00%|        if len(self.cs) > rank:
   804|         0|            0|            0|  0.00%|            del self.cs[:]
   805|         0|            0|            0|  0.00%|            del self.ds[:]
   806|         0|            0|            0|  0.00%|
   807|         0|            0|            0|  0.00%|    def simple_reduce(self, rank):
   808|         0|            0|            0|  0.00%|        """
   809|         0|            0|            0|  0.00%|        Reduce the rank of the matrix by dropping oldest vectors.
   810|         0|            0|            0|  0.00%|        """
   811|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   812|         0|            0|            0|  0.00%|            return
   813|         0|            0|            0|  0.00%|        assert rank > 0
   814|         0|            0|            0|  0.00%|        while len(self.cs) > rank:
   815|         0|            0|            0|  0.00%|            del self.cs[0]
   816|         0|            0|            0|  0.00%|            del self.ds[0]
   817|         0|            0|            0|  0.00%|
   818|         0|            0|            0|  0.00%|    def svd_reduce(self, max_rank, to_retain=None):
   819|         0|            0|            0|  0.00%|        """
   820|         0|            0|            0|  0.00%|        Reduce the rank of the matrix by retaining some SVD components.
   821|         0|            0|            0|  0.00%|
   822|         0|            0|            0|  0.00%|        This corresponds to the \"Broyden Rank Reduction Inverse\"
   823|         0|            0|            0|  0.00%|        algorithm described in [1]_.
   824|         0|            0|            0|  0.00%|
   825|         0|            0|            0|  0.00%|        Note that the SVD decomposition can be done by solving only a
   826|         0|            0|            0|  0.00%|        problem whose size is the effective rank of this matrix, which
   827|         0|            0|            0|  0.00%|        is viable even for large problems.
   828|         0|            0|            0|  0.00%|
   829|         0|            0|            0|  0.00%|        Parameters
   830|         0|            0|            0|  0.00%|        ----------
   831|         0|            0|            0|  0.00%|        max_rank : int
   832|         0|            0|            0|  0.00%|            Maximum rank of this matrix after reduction.
   833|         0|            0|            0|  0.00%|        to_retain : int, optional
   834|         0|            0|            0|  0.00%|            Number of SVD components to retain when reduction is done
   835|         0|            0|            0|  0.00%|            (ie. rank > max_rank). Default is ``max_rank - 2``.
   836|         0|            0|            0|  0.00%|
   837|         0|            0|            0|  0.00%|        References
   838|         0|            0|            0|  0.00%|        ----------
   839|         0|            0|            0|  0.00%|        .. [1] B.A. van der Rotten, PhD thesis,
   840|         0|            0|            0|  0.00%|           \"A limited memory Broyden method to solve high-dimensional
   841|         0|            0|            0|  0.00%|           systems of nonlinear equations\". Mathematisch Instituut,
   842|         0|            0|            0|  0.00%|           Universiteit Leiden, The Netherlands (2003).
   843|         0|            0|            0|  0.00%|
   844|         0|            0|            0|  0.00%|           https://web.archive.org/web/20161022015821/http://www.math.leidenuniv.nl/scripties/Rotten.pdf
   845|         0|            0|            0|  0.00%|
   846|         0|            0|            0|  0.00%|        """
   847|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   848|         0|            0|            0|  0.00%|            return
   849|         0|            0|            0|  0.00%|
   850|         0|            0|            0|  0.00%|        p = max_rank
   851|         0|            0|            0|  0.00%|        if to_retain is not None:
   852|         0|            0|            0|  0.00%|            q = to_retain
   853|         0|            0|            0|  0.00%|        else:
   854|         0|            0|            0|  0.00%|            q = p - 2
   855|         0|            0|            0|  0.00%|
   856|         0|            0|            0|  0.00%|        if self.cs:
   857|         0|            0|            0|  0.00%|            p = min(p, len(self.cs[0]))
   858|         0|            0|            0|  0.00%|        q = max(0, min(q, p-1))
   859|         0|            0|            0|  0.00%|
   860|         0|            0|            0|  0.00%|        m = len(self.cs)
   861|         0|            0|            0|  0.00%|        if m < p:
   862|         0|            0|            0|  0.00%|            # nothing to do
   863|         0|            0|            0|  0.00%|            return
   864|         0|            0|            0|  0.00%|
   865|         0|            0|            0|  0.00%|        C = np.array(self.cs).T
   866|         0|            0|            0|  0.00%|        D = np.array(self.ds).T
   867|         0|            0|            0|  0.00%|
   868|         0|            0|            0|  0.00%|        D, R = qr(D, mode='economic')
   869|         0|            0|            0|  0.00%|        C = dot(C, R.T.conj())
   870|         0|            0|            0|  0.00%|
   871|         0|            0|            0|  0.00%|        U, S, WH = svd(C, full_matrices=False, compute_uv=True)
   872|         0|            0|            0|  0.00%|
   873|         0|            0|            0|  0.00%|        C = dot(C, inv(WH))
   874|         0|            0|            0|  0.00%|        D = dot(D, WH.T.conj())
   875|         0|            0|            0|  0.00%|
   876|         0|            0|            0|  0.00%|        for k in range(q):
   877|         0|            0|            0|  0.00%|            self.cs[k] = C[:,k].copy()
   878|         0|            0|            0|  0.00%|            self.ds[k] = D[:,k].copy()
   879|         0|            0|            0|  0.00%|
   880|         0|            0|            0|  0.00%|        del self.cs[q:]
   881|         0|            0|            0|  0.00%|        del self.ds[q:]
   882|         0|            0|            0|  0.00%|
   883|         0|            0|            0|  0.00%|
   884|         0|            0|            0|  0.00%|_doc_parts['broyden_params'] = """
   885|         0|            0|            0|  0.00%|    alpha : float, optional
   886|         0|            0|            0|  0.00%|        Initial guess for the Jacobian is ``(-1/alpha)``.
   887|         0|            0|            0|  0.00%|    reduction_method : str or tuple, optional
   888|         0|            0|            0|  0.00%|        Method used in ensuring that the rank of the Broyden matrix
   889|         0|            0|            0|  0.00%|        stays low. Can either be a string giving the name of the method,
   890|         0|            0|            0|  0.00%|        or a tuple of the form ``(method, param1, param2, ...)``
   891|         0|            0|            0|  0.00%|        that gives the name of the method and values for additional parameters.
   892|         0|            0|            0|  0.00%|
   893|         0|            0|            0|  0.00%|        Methods available:
   894|         0|            0|            0|  0.00%|
   895|         0|            0|            0|  0.00%|            - ``restart``: drop all matrix columns. Has no extra parameters.
   896|         0|            0|            0|  0.00%|            - ``simple``: drop oldest matrix column. Has no extra parameters.
   897|         0|            0|            0|  0.00%|            - ``svd``: keep only the most significant SVD components.
   898|         0|            0|            0|  0.00%|              Takes an extra parameter, ``to_retain``, which determines the
   899|         0|            0|            0|  0.00%|              number of SVD components to retain when rank reduction is done.
   900|         0|            0|            0|  0.00%|              Default is ``max_rank - 2``.
   901|         0|            0|            0|  0.00%|
   902|         0|            0|            0|  0.00%|    max_rank : int, optional
   903|         0|            0|            0|  0.00%|        Maximum rank for the Broyden matrix.
   904|         0|            0|            0|  0.00%|        Default is infinity (i.e., no rank reduction).
   905|         0|            0|            0|  0.00%|    """.strip()
   906|         0|            0|            0|  0.00%|
   907|         0|            0|            0|  0.00%|
   908|         0|            0|            0|  0.00%|class BroydenFirst(GenericBroyden):
   909|         0|            0|            0|  0.00%|    r"""
   910|         0|            0|            0|  0.00%|    Find a root of a function, using Broyden's first Jacobian approximation.
   911|         0|            0|            0|  0.00%|
   912|         0|            0|            0|  0.00%|    This method is also known as \"Broyden's good method\".
   913|         0|            0|            0|  0.00%|
   914|         0|            0|            0|  0.00%|    Parameters
   915|         0|            0|            0|  0.00%|    ----------
   916|         0|            0|            0|  0.00%|    %(params_basic)s
   917|         0|            0|            0|  0.00%|    %(broyden_params)s
   918|         0|            0|            0|  0.00%|    %(params_extra)s
   919|         0|            0|            0|  0.00%|
   920|         0|            0|            0|  0.00%|    See Also
   921|         0|            0|            0|  0.00%|    --------
   922|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
   923|         0|            0|            0|  0.00%|           functions. See ``method=='broyden1'`` in particular.
   924|         0|            0|            0|  0.00%|
   925|         0|            0|            0|  0.00%|    Notes
   926|         0|            0|            0|  0.00%|    -----
   927|         0|            0|            0|  0.00%|    This algorithm implements the inverse Jacobian Quasi-Newton update
   928|         0|            0|            0|  0.00%|
   929|         0|            0|            0|  0.00%|    .. math:: H_+ = H + (dx - H df) dx^\dagger H / ( dx^\dagger H df)
   930|         0|            0|            0|  0.00%|
   931|         0|            0|            0|  0.00%|    which corresponds to Broyden's first Jacobian update
   932|         0|            0|            0|  0.00%|
   933|         0|            0|            0|  0.00%|    .. math:: J_+ = J + (df - J dx) dx^\dagger / dx^\dagger dx
   934|         0|            0|            0|  0.00%|
   935|         0|            0|            0|  0.00%|
   936|         0|            0|            0|  0.00%|    References
   937|         0|            0|            0|  0.00%|    ----------
   938|         0|            0|            0|  0.00%|    .. [1] B.A. van der Rotten, PhD thesis,
   939|         0|            0|            0|  0.00%|       \"A limited memory Broyden method to solve high-dimensional
   940|         0|            0|            0|  0.00%|       systems of nonlinear equations\". Mathematisch Instituut,
   941|         0|            0|            0|  0.00%|       Universiteit Leiden, The Netherlands (2003).
   942|         0|            0|            0|  0.00%|
   943|         0|            0|            0|  0.00%|       https://web.archive.org/web/20161022015821/http://www.math.leidenuniv.nl/scripties/Rotten.pdf
   944|         0|            0|            0|  0.00%|
   945|         0|            0|            0|  0.00%|    """
   946|         0|            0|            0|  0.00%|
   947|         0|            0|            0|  0.00%|    def __init__(self, alpha=None, reduction_method='restart', max_rank=None):
   948|         0|            0|            0|  0.00%|        GenericBroyden.__init__(self)
   949|         0|            0|            0|  0.00%|        self.alpha = alpha
   950|         0|            0|            0|  0.00%|        self.Gm = None
   951|         0|            0|            0|  0.00%|
   952|         0|            0|            0|  0.00%|        if max_rank is None:
   953|         0|            0|            0|  0.00%|            max_rank = np.inf
   954|         0|            0|            0|  0.00%|        self.max_rank = max_rank
   955|         0|            0|            0|  0.00%|
   956|         0|            0|            0|  0.00%|        if isinstance(reduction_method, str):
   957|         0|            0|            0|  0.00%|            reduce_params = ()
   958|         0|            0|            0|  0.00%|        else:
   959|         0|            0|            0|  0.00%|            reduce_params = reduction_method[1:]
   960|         0|            0|            0|  0.00%|            reduction_method = reduction_method[0]
   961|         0|            0|            0|  0.00%|        reduce_params = (max_rank - 1,) + reduce_params
   962|         0|            0|            0|  0.00%|
   963|         0|            0|            0|  0.00%|        if reduction_method == 'svd':
   964|         0|            0|            0|  0.00%|            self._reduce = lambda: self.Gm.svd_reduce(*reduce_params)
   965|         0|            0|            0|  0.00%|        elif reduction_method == 'simple':
   966|         0|            0|            0|  0.00%|            self._reduce = lambda: self.Gm.simple_reduce(*reduce_params)
   967|         0|            0|            0|  0.00%|        elif reduction_method == 'restart':
   968|         0|            0|            0|  0.00%|            self._reduce = lambda: self.Gm.restart_reduce(*reduce_params)
   969|         0|            0|            0|  0.00%|        else:
   970|         0|            0|            0|  0.00%|            raise ValueError("Unknown rank reduction method '%s'" %
   971|         0|            0|            0|  0.00%|                             reduction_method)
   972|         0|            0|            0|  0.00%|
   973|         0|            0|            0|  0.00%|    def setup(self, x, F, func):
   974|         0|            0|            0|  0.00%|        GenericBroyden.setup(self, x, F, func)
   975|         0|            0|            0|  0.00%|        self.Gm = LowRankMatrix(-self.alpha, self.shape[0], self.dtype)
   976|         0|            0|            0|  0.00%|
   977|         0|            0|            0|  0.00%|    def todense(self):
   978|         0|            0|            0|  0.00%|        return inv(self.Gm)
   979|         0|            0|            0|  0.00%|
   980|         0|            0|            0|  0.00%|    def solve(self, f, tol=0):
   981|         0|            0|            0|  0.00%|        r = self.Gm.matvec(f)
   982|         0|            0|            0|  0.00%|        if not np.isfinite(r).all():
   983|         0|            0|            0|  0.00%|            # singular; reset the Jacobian approximation
   984|         0|            0|            0|  0.00%|            self.setup(self.last_x, self.last_f, self.func)
   985|         0|            0|            0|  0.00%|        return self.Gm.matvec(f)
   986|         0|            0|            0|  0.00%|
   987|         0|            0|            0|  0.00%|    def matvec(self, f):
   988|         0|            0|            0|  0.00%|        return self.Gm.solve(f)
   989|         0|            0|            0|  0.00%|
   990|         0|            0|            0|  0.00%|    def rsolve(self, f, tol=0):
   991|         0|            0|            0|  0.00%|        return self.Gm.rmatvec(f)
   992|         0|            0|            0|  0.00%|
   993|         0|            0|            0|  0.00%|    def rmatvec(self, f):
   994|         0|            0|            0|  0.00%|        return self.Gm.rsolve(f)
   995|         0|            0|            0|  0.00%|
   996|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
   997|         0|            0|            0|  0.00%|        self._reduce()  # reduce first to preserve secant condition
   998|         0|            0|            0|  0.00%|
   999|         0|            0|            0|  0.00%|        v = self.Gm.rmatvec(dx)
  1000|         0|            0|            0|  0.00%|        c = dx - self.Gm.matvec(df)
  1001|         0|            0|            0|  0.00%|        d = v / vdot(df, v)
  1002|         0|            0|            0|  0.00%|
  1003|         0|            0|            0|  0.00%|        self.Gm.append(c, d)
  1004|         0|            0|            0|  0.00%|
  1005|         0|            0|            0|  0.00%|
  1006|         0|            0|            0|  0.00%|class BroydenSecond(BroydenFirst):
  1007|         0|            0|            0|  0.00%|    """
  1008|         0|            0|            0|  0.00%|    Find a root of a function, using Broyden\'s second Jacobian approximation.
  1009|         0|            0|            0|  0.00%|
  1010|         0|            0|            0|  0.00%|    This method is also known as \"Broyden's bad method\".
  1011|         0|            0|            0|  0.00%|
  1012|         0|            0|            0|  0.00%|    Parameters
  1013|         0|            0|            0|  0.00%|    ----------
  1014|         0|            0|            0|  0.00%|    %(params_basic)s
  1015|         0|            0|            0|  0.00%|    %(broyden_params)s
  1016|         0|            0|            0|  0.00%|    %(params_extra)s
  1017|         0|            0|            0|  0.00%|
  1018|         0|            0|            0|  0.00%|    See Also
  1019|         0|            0|            0|  0.00%|    --------
  1020|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1021|         0|            0|            0|  0.00%|           functions. See ``method=='broyden2'`` in particular.
  1022|         0|            0|            0|  0.00%|
  1023|         0|            0|            0|  0.00%|    Notes
  1024|         0|            0|            0|  0.00%|    -----
  1025|         0|            0|            0|  0.00%|    This algorithm implements the inverse Jacobian Quasi-Newton update
  1026|         0|            0|            0|  0.00%|
  1027|         0|            0|            0|  0.00%|    .. math:: H_+ = H + (dx - H df) df^\\dagger / ( df^\\dagger df)
  1028|         0|            0|            0|  0.00%|
  1029|         0|            0|            0|  0.00%|    corresponding to Broyden's second method.
  1030|         0|            0|            0|  0.00%|
  1031|         0|            0|            0|  0.00%|    References
  1032|         0|            0|            0|  0.00%|    ----------
  1033|         0|            0|            0|  0.00%|    .. [1] B.A. van der Rotten, PhD thesis,
  1034|         0|            0|            0|  0.00%|       \"A limited memory Broyden method to solve high-dimensional
  1035|         0|            0|            0|  0.00%|       systems of nonlinear equations\". Mathematisch Instituut,
  1036|         0|            0|            0|  0.00%|       Universiteit Leiden, The Netherlands (2003).
  1037|         0|            0|            0|  0.00%|
  1038|         0|            0|            0|  0.00%|       https://web.archive.org/web/20161022015821/http://www.math.leidenuniv.nl/scripties/Rotten.pdf
  1039|         0|            0|            0|  0.00%|
  1040|         0|            0|            0|  0.00%|    """
  1041|         0|            0|            0|  0.00%|
  1042|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
  1043|         0|            0|            0|  0.00%|        self._reduce()  # reduce first to preserve secant condition
  1044|         0|            0|            0|  0.00%|
  1045|         0|            0|            0|  0.00%|        v = df
  1046|         0|            0|            0|  0.00%|        c = dx - self.Gm.matvec(df)
  1047|         0|            0|            0|  0.00%|        d = v / df_norm**2
  1048|         0|            0|            0|  0.00%|        self.Gm.append(c, d)
  1049|         0|            0|            0|  0.00%|
  1050|         0|            0|            0|  0.00%|
  1051|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1052|         0|            0|            0|  0.00%|# Broyden-like (restricted memory)
  1053|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1054|         0|            0|            0|  0.00%|
  1055|         0|            0|            0|  0.00%|class Anderson(GenericBroyden):
  1056|         0|            0|            0|  0.00%|    """
  1057|         0|            0|            0|  0.00%|    Find a root of a function, using (extended) Anderson mixing.
  1058|         0|            0|            0|  0.00%|
  1059|         0|            0|            0|  0.00%|    The Jacobian is formed by for a 'best' solution in the space
  1060|         0|            0|            0|  0.00%|    spanned by last `M` vectors. As a result, only a MxM matrix
  1061|         0|            0|            0|  0.00%|    inversions and MxN multiplications are required. [Ey]_
  1062|         0|            0|            0|  0.00%|
  1063|         0|            0|            0|  0.00%|    Parameters
  1064|         0|            0|            0|  0.00%|    ----------
  1065|         0|            0|            0|  0.00%|    %(params_basic)s
  1066|         0|            0|            0|  0.00%|    alpha : float, optional
  1067|         0|            0|            0|  0.00%|        Initial guess for the Jacobian is (-1/alpha).
  1068|         0|            0|            0|  0.00%|    M : float, optional
  1069|         0|            0|            0|  0.00%|        Number of previous vectors to retain. Defaults to 5.
  1070|         0|            0|            0|  0.00%|    w0 : float, optional
  1071|         0|            0|            0|  0.00%|        Regularization parameter for numerical stability.
  1072|         0|            0|            0|  0.00%|        Compared to unity, good values of the order of 0.01.
  1073|         0|            0|            0|  0.00%|    %(params_extra)s
  1074|         0|            0|            0|  0.00%|
  1075|         0|            0|            0|  0.00%|    See Also
  1076|         0|            0|            0|  0.00%|    --------
  1077|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1078|         0|            0|            0|  0.00%|           functions. See ``method=='anderson'`` in particular.
  1079|         0|            0|            0|  0.00%|
  1080|         0|            0|            0|  0.00%|    References
  1081|         0|            0|            0|  0.00%|    ----------
  1082|         0|            0|            0|  0.00%|    .. [Ey] V. Eyert, J. Comp. Phys., 124, 271 (1996).
  1083|         0|            0|            0|  0.00%|
  1084|         0|            0|            0|  0.00%|    """
  1085|         0|            0|            0|  0.00%|
  1086|         0|            0|            0|  0.00%|    # Note:
  1087|         0|            0|            0|  0.00%|    #
  1088|         0|            0|            0|  0.00%|    # Anderson method maintains a rank M approximation of the inverse Jacobian,
  1089|         0|            0|            0|  0.00%|    #
  1090|         0|            0|            0|  0.00%|    #     J^-1 v ~ -v*alpha + (dX + alpha dF) A^-1 dF^H v
  1091|         0|            0|            0|  0.00%|    #     A      = W + dF^H dF
  1092|         0|            0|            0|  0.00%|    #     W      = w0^2 diag(dF^H dF)
  1093|         0|            0|            0|  0.00%|    #
  1094|         0|            0|            0|  0.00%|    # so that for w0 = 0 the secant condition applies for last M iterates, i.e.,
  1095|         0|            0|            0|  0.00%|    #
  1096|         0|            0|            0|  0.00%|    #     J^-1 df_j = dx_j
  1097|         0|            0|            0|  0.00%|    #
  1098|         0|            0|            0|  0.00%|    # for all j = 0 ... M-1.
  1099|         0|            0|            0|  0.00%|    #
  1100|         0|            0|            0|  0.00%|    # Moreover, (from Sherman-Morrison-Woodbury formula)
  1101|         0|            0|            0|  0.00%|    #
  1102|         0|            0|            0|  0.00%|    #    J v ~ [ b I - b^2 C (I + b dF^H A^-1 C)^-1 dF^H ] v
  1103|         0|            0|            0|  0.00%|    #    C   = (dX + alpha dF) A^-1
  1104|         0|            0|            0|  0.00%|    #    b   = -1/alpha
  1105|         0|            0|            0|  0.00%|    #
  1106|         0|            0|            0|  0.00%|    # and after simplification
  1107|         0|            0|            0|  0.00%|    #
  1108|         0|            0|            0|  0.00%|    #    J v ~ -v/alpha + (dX/alpha + dF) (dF^H dX - alpha W)^-1 dF^H v
  1109|         0|            0|            0|  0.00%|    #
  1110|         0|            0|            0|  0.00%|
  1111|         0|            0|            0|  0.00%|    def __init__(self, alpha=None, w0=0.01, M=5):
  1112|         0|            0|            0|  0.00%|        GenericBroyden.__init__(self)
  1113|         0|            0|            0|  0.00%|        self.alpha = alpha
  1114|         0|            0|            0|  0.00%|        self.M = M
  1115|         0|            0|            0|  0.00%|        self.dx = []
  1116|         0|            0|            0|  0.00%|        self.df = []
  1117|         0|            0|            0|  0.00%|        self.gamma = None
  1118|         0|            0|            0|  0.00%|        self.w0 = w0
  1119|         0|            0|            0|  0.00%|
  1120|         0|            0|            0|  0.00%|    def solve(self, f, tol=0):
  1121|         0|            0|            0|  0.00%|        dx = -self.alpha*f
  1122|         0|            0|            0|  0.00%|
  1123|         0|            0|            0|  0.00%|        n = len(self.dx)
  1124|         0|            0|            0|  0.00%|        if n == 0:
  1125|         0|            0|            0|  0.00%|            return dx
  1126|         0|            0|            0|  0.00%|
  1127|         0|            0|            0|  0.00%|        df_f = np.empty(n, dtype=f.dtype)
  1128|         0|            0|            0|  0.00%|        for k in range(n):
  1129|         0|            0|            0|  0.00%|            df_f[k] = vdot(self.df[k], f)
  1130|         0|            0|            0|  0.00%|
  1131|         0|            0|            0|  0.00%|        try:
  1132|         0|            0|            0|  0.00%|            gamma = solve(self.a, df_f)
  1133|         0|            0|            0|  0.00%|        except LinAlgError:
  1134|         0|            0|            0|  0.00%|            # singular; reset the Jacobian approximation
  1135|         0|            0|            0|  0.00%|            del self.dx[:]
  1136|         0|            0|            0|  0.00%|            del self.df[:]
  1137|         0|            0|            0|  0.00%|            return dx
  1138|         0|            0|            0|  0.00%|
  1139|         0|            0|            0|  0.00%|        for m in range(n):
  1140|         0|            0|            0|  0.00%|            dx += gamma[m]*(self.dx[m] + self.alpha*self.df[m])
  1141|         0|            0|            0|  0.00%|        return dx
  1142|         0|            0|            0|  0.00%|
  1143|         0|            0|            0|  0.00%|    def matvec(self, f):
  1144|         0|            0|            0|  0.00%|        dx = -f/self.alpha
  1145|         0|            0|            0|  0.00%|
  1146|         0|            0|            0|  0.00%|        n = len(self.dx)
  1147|         0|            0|            0|  0.00%|        if n == 0:
  1148|         0|            0|            0|  0.00%|            return dx
  1149|         0|            0|            0|  0.00%|
  1150|         0|            0|            0|  0.00%|        df_f = np.empty(n, dtype=f.dtype)
  1151|         0|            0|            0|  0.00%|        for k in range(n):
  1152|         0|            0|            0|  0.00%|            df_f[k] = vdot(self.df[k], f)
  1153|         0|            0|            0|  0.00%|
  1154|         0|            0|            0|  0.00%|        b = np.empty((n, n), dtype=f.dtype)
  1155|         0|            0|            0|  0.00%|        for i in range(n):
  1156|         0|            0|            0|  0.00%|            for j in range(n):
  1157|         0|            0|            0|  0.00%|                b[i,j] = vdot(self.df[i], self.dx[j])
  1158|         0|            0|            0|  0.00%|                if i == j and self.w0 != 0:
  1159|         0|            0|            0|  0.00%|                    b[i,j] -= vdot(self.df[i], self.df[i])*self.w0**2*self.alpha
  1160|         0|            0|            0|  0.00%|        gamma = solve(b, df_f)
  1161|         0|            0|            0|  0.00%|
  1162|         0|            0|            0|  0.00%|        for m in range(n):
  1163|         0|            0|            0|  0.00%|            dx += gamma[m]*(self.df[m] + self.dx[m]/self.alpha)
  1164|         0|            0|            0|  0.00%|        return dx
  1165|         0|            0|            0|  0.00%|
  1166|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
  1167|         0|            0|            0|  0.00%|        if self.M == 0:
  1168|         0|            0|            0|  0.00%|            return
  1169|         0|            0|            0|  0.00%|
  1170|         0|            0|            0|  0.00%|        self.dx.append(dx)
  1171|         0|            0|            0|  0.00%|        self.df.append(df)
  1172|         0|            0|            0|  0.00%|
  1173|         0|            0|            0|  0.00%|        while len(self.dx) > self.M:
  1174|         0|            0|            0|  0.00%|            self.dx.pop(0)
  1175|         0|            0|            0|  0.00%|            self.df.pop(0)
  1176|         0|            0|            0|  0.00%|
  1177|         0|            0|            0|  0.00%|        n = len(self.dx)
  1178|         0|            0|            0|  0.00%|        a = np.zeros((n, n), dtype=f.dtype)
  1179|         0|            0|            0|  0.00%|
  1180|         0|            0|            0|  0.00%|        for i in range(n):
  1181|         0|            0|            0|  0.00%|            for j in range(i, n):
  1182|         0|            0|            0|  0.00%|                if i == j:
  1183|         0|            0|            0|  0.00%|                    wd = self.w0**2
  1184|         0|            0|            0|  0.00%|                else:
  1185|         0|            0|            0|  0.00%|                    wd = 0
  1186|         0|            0|            0|  0.00%|                a[i,j] = (1+wd)*vdot(self.df[i], self.df[j])
  1187|         0|            0|            0|  0.00%|
  1188|         0|            0|            0|  0.00%|        a += np.triu(a, 1).T.conj()
  1189|         0|            0|            0|  0.00%|        self.a = a
  1190|         0|            0|            0|  0.00%|
  1191|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1192|         0|            0|            0|  0.00%|# Simple iterations
  1193|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1194|         0|            0|            0|  0.00%|
  1195|         0|            0|            0|  0.00%|
  1196|         0|            0|            0|  0.00%|class DiagBroyden(GenericBroyden):
  1197|         0|            0|            0|  0.00%|    """
  1198|         0|            0|            0|  0.00%|    Find a root of a function, using diagonal Broyden Jacobian approximation.
  1199|         0|            0|            0|  0.00%|
  1200|         0|            0|            0|  0.00%|    The Jacobian approximation is derived from previous iterations, by
  1201|         0|            0|            0|  0.00%|    retaining only the diagonal of Broyden matrices.
  1202|         0|            0|            0|  0.00%|
  1203|         0|            0|            0|  0.00%|    .. warning::
  1204|         0|            0|            0|  0.00%|
  1205|         0|            0|            0|  0.00%|       This algorithm may be useful for specific problems, but whether
  1206|         0|            0|            0|  0.00%|       it will work may depend strongly on the problem.
  1207|         0|            0|            0|  0.00%|
  1208|         0|            0|            0|  0.00%|    Parameters
  1209|         0|            0|            0|  0.00%|    ----------
  1210|         0|            0|            0|  0.00%|    %(params_basic)s
  1211|         0|            0|            0|  0.00%|    alpha : float, optional
  1212|         0|            0|            0|  0.00%|        Initial guess for the Jacobian is (-1/alpha).
  1213|         0|            0|            0|  0.00%|    %(params_extra)s
  1214|         0|            0|            0|  0.00%|
  1215|         0|            0|            0|  0.00%|    See Also
  1216|         0|            0|            0|  0.00%|    --------
  1217|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1218|         0|            0|            0|  0.00%|           functions. See ``method=='diagbroyden'`` in particular.
  1219|         0|            0|            0|  0.00%|    """
  1220|         0|            0|            0|  0.00%|
  1221|         0|            0|            0|  0.00%|    def __init__(self, alpha=None):
  1222|         0|            0|            0|  0.00%|        GenericBroyden.__init__(self)
  1223|         0|            0|            0|  0.00%|        self.alpha = alpha
  1224|         0|            0|            0|  0.00%|
  1225|         0|            0|            0|  0.00%|    def setup(self, x, F, func):
  1226|         0|            0|            0|  0.00%|        GenericBroyden.setup(self, x, F, func)
  1227|         0|            0|            0|  0.00%|        self.d = np.full((self.shape[0],), 1 / self.alpha, dtype=self.dtype)
  1228|         0|            0|            0|  0.00%|
  1229|         0|            0|            0|  0.00%|    def solve(self, f, tol=0):
  1230|         0|            0|            0|  0.00%|        return -f / self.d
  1231|         0|            0|            0|  0.00%|
  1232|         0|            0|            0|  0.00%|    def matvec(self, f):
  1233|         0|            0|            0|  0.00%|        return -f * self.d
  1234|         0|            0|            0|  0.00%|
  1235|         0|            0|            0|  0.00%|    def rsolve(self, f, tol=0):
  1236|         0|            0|            0|  0.00%|        return -f / self.d.conj()
  1237|         0|            0|            0|  0.00%|
  1238|         0|            0|            0|  0.00%|    def rmatvec(self, f):
  1239|         0|            0|            0|  0.00%|        return -f * self.d.conj()
  1240|         0|            0|            0|  0.00%|
  1241|         0|            0|            0|  0.00%|    def todense(self):
  1242|         0|            0|            0|  0.00%|        return np.diag(-self.d)
  1243|         0|            0|            0|  0.00%|
  1244|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
  1245|         0|            0|            0|  0.00%|        self.d -= (df + self.d*dx)*dx/dx_norm**2
  1246|         0|            0|            0|  0.00%|
  1247|         0|            0|            0|  0.00%|
  1248|         0|            0|            0|  0.00%|class LinearMixing(GenericBroyden):
  1249|         0|            0|            0|  0.00%|    """
  1250|         0|            0|            0|  0.00%|    Find a root of a function, using a scalar Jacobian approximation.
  1251|         0|            0|            0|  0.00%|
  1252|         0|            0|            0|  0.00%|    .. warning::
  1253|         0|            0|            0|  0.00%|
  1254|         0|            0|            0|  0.00%|       This algorithm may be useful for specific problems, but whether
  1255|         0|            0|            0|  0.00%|       it will work may depend strongly on the problem.
  1256|         0|            0|            0|  0.00%|
  1257|         0|            0|            0|  0.00%|    Parameters
  1258|         0|            0|            0|  0.00%|    ----------
  1259|         0|            0|            0|  0.00%|    %(params_basic)s
  1260|         0|            0|            0|  0.00%|    alpha : float, optional
  1261|         0|            0|            0|  0.00%|        The Jacobian approximation is (-1/alpha).
  1262|         0|            0|            0|  0.00%|    %(params_extra)s
  1263|         0|            0|            0|  0.00%|
  1264|         0|            0|            0|  0.00%|    See Also
  1265|         0|            0|            0|  0.00%|    --------
  1266|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1267|         0|            0|            0|  0.00%|           functions. See ``method=='linearmixing'`` in particular.
  1268|         0|            0|            0|  0.00%|
  1269|         0|            0|            0|  0.00%|    """
  1270|         0|            0|            0|  0.00%|
  1271|         0|            0|            0|  0.00%|    def __init__(self, alpha=None):
  1272|         0|            0|            0|  0.00%|        GenericBroyden.__init__(self)
  1273|         0|            0|            0|  0.00%|        self.alpha = alpha
  1274|         0|            0|            0|  0.00%|
  1275|         0|            0|            0|  0.00%|    def solve(self, f, tol=0):
  1276|         0|            0|            0|  0.00%|        return -f*self.alpha
  1277|         0|            0|            0|  0.00%|
  1278|         0|            0|            0|  0.00%|    def matvec(self, f):
  1279|         0|            0|            0|  0.00%|        return -f/self.alpha
  1280|         0|            0|            0|  0.00%|
  1281|         0|            0|            0|  0.00%|    def rsolve(self, f, tol=0):
  1282|         0|            0|            0|  0.00%|        return -f*np.conj(self.alpha)
  1283|         0|            0|            0|  0.00%|
  1284|         0|            0|            0|  0.00%|    def rmatvec(self, f):
  1285|         0|            0|            0|  0.00%|        return -f/np.conj(self.alpha)
  1286|         0|            0|            0|  0.00%|
  1287|         0|            0|            0|  0.00%|    def todense(self):
  1288|         0|            0|            0|  0.00%|        return np.diag(np.full(self.shape[0], -1/self.alpha))
  1289|         0|            0|            0|  0.00%|
  1290|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
  1291|         0|            0|            0|  0.00%|        pass
  1292|         0|            0|            0|  0.00%|
  1293|         0|            0|            0|  0.00%|
  1294|         0|            0|            0|  0.00%|class ExcitingMixing(GenericBroyden):
  1295|         0|            0|            0|  0.00%|    """
  1296|         0|            0|            0|  0.00%|    Find a root of a function, using a tuned diagonal Jacobian approximation.
  1297|         0|            0|            0|  0.00%|
  1298|         0|            0|            0|  0.00%|    The Jacobian matrix is diagonal and is tuned on each iteration.
  1299|         0|            0|            0|  0.00%|
  1300|         0|            0|            0|  0.00%|    .. warning::
  1301|         0|            0|            0|  0.00%|
  1302|         0|            0|            0|  0.00%|       This algorithm may be useful for specific problems, but whether
  1303|         0|            0|            0|  0.00%|       it will work may depend strongly on the problem.
  1304|         0|            0|            0|  0.00%|
  1305|         0|            0|            0|  0.00%|    See Also
  1306|         0|            0|            0|  0.00%|    --------
  1307|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1308|         0|            0|            0|  0.00%|           functions. See ``method=='excitingmixing'`` in particular.
  1309|         0|            0|            0|  0.00%|
  1310|         0|            0|            0|  0.00%|    Parameters
  1311|         0|            0|            0|  0.00%|    ----------
  1312|         0|            0|            0|  0.00%|    %(params_basic)s
  1313|         0|            0|            0|  0.00%|    alpha : float, optional
  1314|         0|            0|            0|  0.00%|        Initial Jacobian approximation is (-1/alpha).
  1315|         0|            0|            0|  0.00%|    alphamax : float, optional
  1316|         0|            0|            0|  0.00%|        The entries of the diagonal Jacobian are kept in the range
  1317|         0|            0|            0|  0.00%|        ``[alpha, alphamax]``.
  1318|         0|            0|            0|  0.00%|    %(params_extra)s
  1319|         0|            0|            0|  0.00%|    """
  1320|         0|            0|            0|  0.00%|
  1321|         0|            0|            0|  0.00%|    def __init__(self, alpha=None, alphamax=1.0):
  1322|         0|            0|            0|  0.00%|        GenericBroyden.__init__(self)
  1323|         0|            0|            0|  0.00%|        self.alpha = alpha
  1324|         0|            0|            0|  0.00%|        self.alphamax = alphamax
  1325|         0|            0|            0|  0.00%|        self.beta = None
  1326|         0|            0|            0|  0.00%|
  1327|         0|            0|            0|  0.00%|    def setup(self, x, F, func):
  1328|         0|            0|            0|  0.00%|        GenericBroyden.setup(self, x, F, func)
  1329|         0|            0|            0|  0.00%|        self.beta = np.full((self.shape[0],), self.alpha, dtype=self.dtype)
  1330|         0|            0|            0|  0.00%|
  1331|         0|            0|            0|  0.00%|    def solve(self, f, tol=0):
  1332|         0|            0|            0|  0.00%|        return -f*self.beta
  1333|         0|            0|            0|  0.00%|
  1334|         0|            0|            0|  0.00%|    def matvec(self, f):
  1335|         0|            0|            0|  0.00%|        return -f/self.beta
  1336|         0|            0|            0|  0.00%|
  1337|         0|            0|            0|  0.00%|    def rsolve(self, f, tol=0):
  1338|         0|            0|            0|  0.00%|        return -f*self.beta.conj()
  1339|         0|            0|            0|  0.00%|
  1340|         0|            0|            0|  0.00%|    def rmatvec(self, f):
  1341|         0|            0|            0|  0.00%|        return -f/self.beta.conj()
  1342|         0|            0|            0|  0.00%|
  1343|         0|            0|            0|  0.00%|    def todense(self):
  1344|         0|            0|            0|  0.00%|        return np.diag(-1/self.beta)
  1345|         0|            0|            0|  0.00%|
  1346|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
  1347|         0|            0|            0|  0.00%|        incr = f*self.last_f > 0
  1348|         0|            0|            0|  0.00%|        self.beta[incr] += self.alpha
  1349|         0|            0|            0|  0.00%|        self.beta[~incr] = self.alpha
  1350|         0|            0|            0|  0.00%|        np.clip(self.beta, 0, self.alphamax, out=self.beta)
  1351|         0|            0|            0|  0.00%|
  1352|         0|            0|            0|  0.00%|
  1353|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1354|         0|            0|            0|  0.00%|# Iterative/Krylov approximated Jacobians
  1355|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1356|         0|            0|            0|  0.00%|
  1357|         0|            0|            0|  0.00%|class KrylovJacobian(Jacobian):
  1358|         0|            0|            0|  0.00%|    r"""
  1359|         0|            0|            0|  0.00%|    Find a root of a function, using Krylov approximation for inverse Jacobian.
  1360|         0|            0|            0|  0.00%|
  1361|         0|            0|            0|  0.00%|    This method is suitable for solving large-scale problems.
  1362|         0|            0|            0|  0.00%|
  1363|         0|            0|            0|  0.00%|    Parameters
  1364|         0|            0|            0|  0.00%|    ----------
  1365|         0|            0|            0|  0.00%|    %(params_basic)s
  1366|         0|            0|            0|  0.00%|    rdiff : float, optional
  1367|         0|            0|            0|  0.00%|        Relative step size to use in numerical differentiation.
  1368|         0|            0|            0|  0.00%|    method : {'lgmres', 'gmres', 'bicgstab', 'cgs', 'minres'} or function
  1369|         0|            0|            0|  0.00%|        Krylov method to use to approximate the Jacobian.
  1370|         0|            0|            0|  0.00%|        Can be a string, or a function implementing the same interface as
  1371|         0|            0|            0|  0.00%|        the iterative solvers in `scipy.sparse.linalg`.
  1372|         0|            0|            0|  0.00%|
  1373|         0|            0|            0|  0.00%|        The default is `scipy.sparse.linalg.lgmres`.
  1374|         0|            0|            0|  0.00%|    inner_maxiter : int, optional
  1375|         0|            0|            0|  0.00%|        Parameter to pass to the "inner" Krylov solver: maximum number of
  1376|         0|            0|            0|  0.00%|        iterations. Iteration will stop after maxiter steps even if the
  1377|         0|            0|            0|  0.00%|        specified tolerance has not been achieved.
  1378|         0|            0|            0|  0.00%|    inner_M : LinearOperator or InverseJacobian
  1379|         0|            0|            0|  0.00%|        Preconditioner for the inner Krylov iteration.
  1380|         0|            0|            0|  0.00%|        Note that you can use also inverse Jacobians as (adaptive)
  1381|         0|            0|            0|  0.00%|        preconditioners. For example,
  1382|         0|            0|            0|  0.00%|
  1383|         0|            0|            0|  0.00%|        >>> from scipy.optimize.nonlin import BroydenFirst, KrylovJacobian
  1384|         0|            0|            0|  0.00%|        >>> from scipy.optimize.nonlin import InverseJacobian
  1385|         0|            0|            0|  0.00%|        >>> jac = BroydenFirst()
  1386|         0|            0|            0|  0.00%|        >>> kjac = KrylovJacobian(inner_M=InverseJacobian(jac))
  1387|         0|            0|            0|  0.00%|
  1388|         0|            0|            0|  0.00%|        If the preconditioner has a method named 'update', it will be called
  1389|         0|            0|            0|  0.00%|        as ``update(x, f)`` after each nonlinear step, with ``x`` giving
  1390|         0|            0|            0|  0.00%|        the current point, and ``f`` the current function value.
  1391|         0|            0|            0|  0.00%|    outer_k : int, optional
  1392|         0|            0|            0|  0.00%|        Size of the subspace kept across LGMRES nonlinear iterations.
  1393|         0|            0|            0|  0.00%|        See `scipy.sparse.linalg.lgmres` for details.
  1394|         0|            0|            0|  0.00%|    inner_kwargs : kwargs
  1395|         0|            0|            0|  0.00%|        Keyword parameters for the "inner" Krylov solver
  1396|         0|            0|            0|  0.00%|        (defined with `method`). Parameter names must start with
  1397|         0|            0|            0|  0.00%|        the `inner_` prefix which will be stripped before passing on
  1398|         0|            0|            0|  0.00%|        the inner method. See, e.g., `scipy.sparse.linalg.gmres` for details.
  1399|         0|            0|            0|  0.00%|    %(params_extra)s
  1400|         0|            0|            0|  0.00%|
  1401|         0|            0|            0|  0.00%|    See Also
  1402|         0|            0|            0|  0.00%|    --------
  1403|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1404|         0|            0|            0|  0.00%|           functions. See ``method=='krylov'`` in particular.
  1405|         0|            0|            0|  0.00%|    scipy.sparse.linalg.gmres
  1406|         0|            0|            0|  0.00%|    scipy.sparse.linalg.lgmres
  1407|         0|            0|            0|  0.00%|
  1408|         0|            0|            0|  0.00%|    Notes
  1409|         0|            0|            0|  0.00%|    -----
  1410|         0|            0|            0|  0.00%|    This function implements a Newton-Krylov solver. The basic idea is
  1411|         0|            0|            0|  0.00%|    to compute the inverse of the Jacobian with an iterative Krylov
  1412|         0|            0|            0|  0.00%|    method. These methods require only evaluating the Jacobian-vector
  1413|         0|            0|            0|  0.00%|    products, which are conveniently approximated by a finite difference:
  1414|         0|            0|            0|  0.00%|
  1415|         0|            0|            0|  0.00%|    .. math:: J v \approx (f(x + \omega*v/|v|) - f(x)) / \omega
  1416|         0|            0|            0|  0.00%|
  1417|         0|            0|            0|  0.00%|    Due to the use of iterative matrix inverses, these methods can
  1418|         0|            0|            0|  0.00%|    deal with large nonlinear problems.
  1419|         0|            0|            0|  0.00%|
  1420|         0|            0|            0|  0.00%|    SciPy's `scipy.sparse.linalg` module offers a selection of Krylov
  1421|         0|            0|            0|  0.00%|    solvers to choose from. The default here is `lgmres`, which is a
  1422|         0|            0|            0|  0.00%|    variant of restarted GMRES iteration that reuses some of the
  1423|         0|            0|            0|  0.00%|    information obtained in the previous Newton steps to invert
  1424|         0|            0|            0|  0.00%|    Jacobians in subsequent steps.
  1425|         0|            0|            0|  0.00%|
  1426|         0|            0|            0|  0.00%|    For a review on Newton-Krylov methods, see for example [1]_,
  1427|         0|            0|            0|  0.00%|    and for the LGMRES sparse inverse method, see [2]_.
  1428|         0|            0|            0|  0.00%|
  1429|         0|            0|            0|  0.00%|    References
  1430|         0|            0|            0|  0.00%|    ----------
  1431|         0|            0|            0|  0.00%|    .. [1] D.A. Knoll and D.E. Keyes, J. Comp. Phys. 193, 357 (2004).
  1432|         0|            0|            0|  0.00%|           :doi:`10.1016/j.jcp.2003.08.010`
  1433|         0|            0|            0|  0.00%|    .. [2] A.H. Baker and E.R. Jessup and T. Manteuffel,
  1434|         0|            0|            0|  0.00%|           SIAM J. Matrix Anal. Appl. 26, 962 (2005).
  1435|         0|            0|            0|  0.00%|           :doi:`10.1137/S0895479803422014`
  1436|         0|            0|            0|  0.00%|
  1437|         0|            0|            0|  0.00%|    """
  1438|         0|            0|            0|  0.00%|
  1439|         0|            0|            0|  0.00%|    def __init__(self, rdiff=None, method='lgmres', inner_maxiter=20,
  1440|         0|            0|            0|  0.00%|                 inner_M=None, outer_k=10, **kw):
  1441|         0|            0|            0|  0.00%|        self.preconditioner = inner_M
  1442|         0|            0|            0|  0.00%|        self.rdiff = rdiff
  1443|         0|            0|            0|  0.00%|        self.method = dict(
  1444|         0|            0|            0|  0.00%|            bicgstab=scipy.sparse.linalg.bicgstab,
  1445|         0|            0|            0|  0.00%|            gmres=scipy.sparse.linalg.gmres,
  1446|         0|            0|            0|  0.00%|            lgmres=scipy.sparse.linalg.lgmres,
  1447|         0|            0|            0|  0.00%|            cgs=scipy.sparse.linalg.cgs,
  1448|         0|            0|            0|  0.00%|            minres=scipy.sparse.linalg.minres,
  1449|         0|            0|            0|  0.00%|            ).get(method, method)
  1450|         0|            0|            0|  0.00%|
  1451|         0|            0|            0|  0.00%|        self.method_kw = dict(maxiter=inner_maxiter, M=self.preconditioner)
  1452|         0|            0|            0|  0.00%|
  1453|         0|            0|            0|  0.00%|        if self.method is scipy.sparse.linalg.gmres:
  1454|         0|            0|            0|  0.00%|            # Replace GMRES's outer iteration with Newton steps
  1455|         0|            0|            0|  0.00%|            self.method_kw['restrt'] = inner_maxiter
  1456|         0|            0|            0|  0.00%|            self.method_kw['maxiter'] = 1
  1457|         0|            0|            0|  0.00%|            self.method_kw.setdefault('atol', 0)
  1458|         0|            0|            0|  0.00%|        elif self.method is scipy.sparse.linalg.gcrotmk:
  1459|         0|            0|            0|  0.00%|            self.method_kw.setdefault('atol', 0)
  1460|         0|            0|            0|  0.00%|        elif self.method is scipy.sparse.linalg.lgmres:
  1461|         0|            0|            0|  0.00%|            self.method_kw['outer_k'] = outer_k
  1462|         0|            0|            0|  0.00%|            # Replace LGMRES's outer iteration with Newton steps
  1463|         0|            0|            0|  0.00%|            self.method_kw['maxiter'] = 1
  1464|         0|            0|            0|  0.00%|            # Carry LGMRES's `outer_v` vectors across nonlinear iterations
  1465|         0|            0|            0|  0.00%|            self.method_kw.setdefault('outer_v', [])
  1466|         0|            0|            0|  0.00%|            self.method_kw.setdefault('prepend_outer_v', True)
  1467|         0|            0|            0|  0.00%|            # But don't carry the corresponding Jacobian*v products, in case
  1468|         0|            0|            0|  0.00%|            # the Jacobian changes a lot in the nonlinear step
  1469|         0|            0|            0|  0.00%|            #
  1470|         0|            0|            0|  0.00%|            # XXX: some trust-region inspired ideas might be more efficient...
  1471|         0|            0|            0|  0.00%|            #      See e.g., Brown & Saad. But needs to be implemented separately
  1472|         0|            0|            0|  0.00%|            #      since it's not an inexact Newton method.
  1473|         0|            0|            0|  0.00%|            self.method_kw.setdefault('store_outer_Av', False)
  1474|         0|            0|            0|  0.00%|            self.method_kw.setdefault('atol', 0)
  1475|         0|            0|            0|  0.00%|
  1476|         0|            0|            0|  0.00%|        for key, value in kw.items():
  1477|         0|            0|            0|  0.00%|            if not key.startswith('inner_'):
  1478|         0|            0|            0|  0.00%|                raise ValueError("Unknown parameter %s" % key)
  1479|         0|            0|            0|  0.00%|            self.method_kw[key[6:]] = value
  1480|         0|            0|            0|  0.00%|
  1481|         0|            0|            0|  0.00%|    def _update_diff_step(self):
  1482|         0|            0|            0|  0.00%|        mx = abs(self.x0).max()
  1483|         0|            0|            0|  0.00%|        mf = abs(self.f0).max()
  1484|         0|            0|            0|  0.00%|        self.omega = self.rdiff * max(1, mx) / max(1, mf)
  1485|         0|            0|            0|  0.00%|
  1486|         0|            0|            0|  0.00%|    def matvec(self, v):
  1487|         0|            0|            0|  0.00%|        nv = norm(v)
  1488|         0|            0|            0|  0.00%|        if nv == 0:
  1489|         0|            0|            0|  0.00%|            return 0*v
  1490|         0|            0|            0|  0.00%|        sc = self.omega / nv
  1491|         0|            0|            0|  0.00%|        r = (self.func(self.x0 + sc*v) - self.f0) / sc
  1492|         0|            0|            0|  0.00%|        if not np.all(np.isfinite(r)) and np.all(np.isfinite(v)):
  1493|         0|            0|            0|  0.00%|            raise ValueError('Function returned non-finite results')
  1494|         0|            0|            0|  0.00%|        return r
  1495|         0|            0|            0|  0.00%|
  1496|         0|            0|            0|  0.00%|    def solve(self, rhs, tol=0):
  1497|         0|            0|            0|  0.00%|        if 'tol' in self.method_kw:
  1498|         0|            0|            0|  0.00%|            sol, info = self.method(self.op, rhs, **self.method_kw)
  1499|         0|            0|            0|  0.00%|        else:
  1500|         0|            0|            0|  0.00%|            sol, info = self.method(self.op, rhs, tol=tol, **self.method_kw)
  1501|         0|            0|            0|  0.00%|        return sol
  1502|         0|            0|            0|  0.00%|
  1503|         0|            0|            0|  0.00%|    def update(self, x, f):
  1504|         0|            0|            0|  0.00%|        self.x0 = x
  1505|         0|            0|            0|  0.00%|        self.f0 = f
  1506|         0|            0|            0|  0.00%|        self._update_diff_step()
  1507|         0|            0|            0|  0.00%|
  1508|         0|            0|            0|  0.00%|        # Update also the preconditioner, if possible
  1509|         0|            0|            0|  0.00%|        if self.preconditioner is not None:
  1510|         0|            0|            0|  0.00%|            if hasattr(self.preconditioner, 'update'):
  1511|         0|            0|            0|  0.00%|                self.preconditioner.update(x, f)
  1512|         0|            0|            0|  0.00%|
  1513|         0|            0|            0|  0.00%|    def setup(self, x, f, func):
  1514|         0|            0|            0|  0.00%|        Jacobian.setup(self, x, f, func)
  1515|         0|            0|            0|  0.00%|        self.x0 = x
  1516|         0|            0|            0|  0.00%|        self.f0 = f
  1517|         0|            0|            0|  0.00%|        self.op = scipy.sparse.linalg.aslinearoperator(self)
  1518|         0|            0|            0|  0.00%|
  1519|         0|            0|            0|  0.00%|        if self.rdiff is None:
  1520|         0|            0|            0|  0.00%|            self.rdiff = np.finfo(x.dtype).eps ** (1./2)
  1521|         0|            0|            0|  0.00%|
  1522|         0|            0|            0|  0.00%|        self._update_diff_step()
  1523|         0|            0|            0|  0.00%|
  1524|         0|            0|            0|  0.00%|        # Setup also the preconditioner, if possible
  1525|         0|            0|            0|  0.00%|        if self.preconditioner is not None:
  1526|         0|            0|            0|  0.00%|            if hasattr(self.preconditioner, 'setup'):
  1527|         0|            0|            0|  0.00%|                self.preconditioner.setup(x, f, func)
  1528|         0|            0|            0|  0.00%|
  1529|         0|            0|            0|  0.00%|
  1530|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1531|         0|            0|            0|  0.00%|# Wrapper functions
  1532|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1533|         0|            0|            0|  0.00%|
  1534|         0|            0|            0|  0.00%|def _nonlin_wrapper(name, jac):
  1535|         0|            0|            0|  0.00%|    """
  1536|         0|            0|            0|  0.00%|    Construct a solver wrapper with given name and Jacobian approx.
  1537|         0|            0|            0|  0.00%|
  1538|         0|            0|            0|  0.00%|    It inspects the keyword arguments of ``jac.__init__``, and allows to
  1539|         0|            0|            0|  0.00%|    use the same arguments in the wrapper function, in addition to the
  1540|         0|            0|            0|  0.00%|    keyword arguments of `nonlin_solve`
  1541|         0|            0|            0|  0.00%|
  1542|         0|            0|            0|  0.00%|    """
  1543|         0|            0|            0|  0.00%|    signature = _getfullargspec(jac.__init__)
  1544|         0|            0|            0|  0.00%|    args, varargs, varkw, defaults, kwonlyargs, kwdefaults, _ = signature
  1545|         0|            0|            0|  0.00%|    kwargs = list(zip(args[-len(defaults):], defaults))
  1546|         0|            0|            0|  0.00%|    kw_str = ", ".join(["%s=%r" % (k, v) for k, v in kwargs])
  1547|         0|            0|            0|  0.00%|    if kw_str:
  1548|         0|            0|            0|  0.00%|        kw_str = ", " + kw_str
  1549|         0|            0|            0|  0.00%|    kwkw_str = ", ".join(["%s=%s" % (k, k) for k, v in kwargs])
  1550|         0|            0|            0|  0.00%|    if kwkw_str:
  1551|         0|            0|            0|  0.00%|        kwkw_str = kwkw_str + ", "
  1552|         0|            0|            0|  0.00%|    if kwonlyargs:
  1553|         0|            0|            0|  0.00%|        raise ValueError('Unexpected signature %s' % signature)
  1554|         0|            0|            0|  0.00%|
  1555|         0|            0|            0|  0.00%|    # Construct the wrapper function so that its keyword arguments
  1556|         0|            0|            0|  0.00%|    # are visible in pydoc.help etc.
  1557|         0|            0|            0|  0.00%|    wrapper = """
  1558|         0|            0|            0|  0.00%|def %(name)s(F, xin, iter=None %(kw)s, verbose=False, maxiter=None,
  1559|         0|            0|            0|  0.00%|             f_tol=None, f_rtol=None, x_tol=None, x_rtol=None,
  1560|         0|            0|            0|  0.00%|             tol_norm=None, line_search='armijo', callback=None, **kw):
  1561|         0|            0|            0|  0.00%|    jac = %(jac)s(%(kwkw)s **kw)
  1562|         0|            0|            0|  0.00%|    return nonlin_solve(F, xin, jac, iter, verbose, maxiter,
  1563|         0|            0|            0|  0.00%|                        f_tol, f_rtol, x_tol, x_rtol, tol_norm, line_search,
  1564|         0|            0|            0|  0.00%|                        callback)
  1565|         0|            0|            0|  0.00%|"""
  1566|         0|            0|            0|  0.00%|
  1567|         0|            0|            0|  0.00%|    wrapper = wrapper % dict(name=name, kw=kw_str, jac=jac.__name__,
  1568|         0|            0|            0|  0.00%|                             kwkw=kwkw_str)
  1569|         0|            0|            0|  0.00%|    ns = {}
  1570|         0|            0|            0|  0.00%|    ns.update(globals())
  1571|         0|            0|            0|  0.00%|    exec(wrapper, ns)
  1572|         0|            0|            0|  0.00%|    func = ns[name]
  1573|         0|            0|            0|  0.00%|    func.__doc__ = jac.__doc__
  1574|         0|            0|            0|  0.00%|    _set_doc(func)
  1575|         0|            0|            0|  0.00%|    return func
  1576|         0|            0|            0|  0.00%|
  1577|         0|            0|            0|  0.00%|
  1578|         0|            0|            0|  0.00%|broyden1 = _nonlin_wrapper('broyden1', BroydenFirst)
  1579|         0|            0|            0|  0.00%|broyden2 = _nonlin_wrapper('broyden2', BroydenSecond)
  1580|         0|            0|            0|  0.00%|anderson = _nonlin_wrapper('anderson', Anderson)
  1581|         0|            0|            0|  0.00%|linearmixing = _nonlin_wrapper('linearmixing', LinearMixing)
  1582|         0|            0|            0|  0.00%|diagbroyden = _nonlin_wrapper('diagbroyden', DiagBroyden)
  1583|         0|            0|            0|  0.00%|excitingmixing = _nonlin_wrapper('excitingmixing', ExcitingMixing)
  1584|         0|            0|            0|  0.00%|newton_krylov = _nonlin_wrapper('newton_krylov', KrylovJacobian)
File: <string>_26
File duration: 2.88486e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.88486e-05|  1.44243e-05|  0.00%|
File: <string>_12
File duration: 2.86102e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.86102e-05|  1.43051e-05|  0.00%|
File: <attrs generated init attr.validators._OptionalValidator>
File duration: 2.81334e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         4|  2.07424e-05|   5.1856e-06|  0.00%|def __init__(self, validator):
     2|         2|  7.39098e-06|  3.69549e-06|  0.00%|    self.validator = validator
File: <string>_276
File duration: 2.7895e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|   2.7895e-05|  1.39475e-05|  0.00%|
File: <string>_36
File duration: 2.76566e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.76566e-05|  1.38283e-05|  0.00%|
File: <string>_156
File duration: 2.76566e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|r"""
     2|         1|  1.12057e-05|  1.12057e-05|  0.00%|
     3|         0|            0|            0|  0.00%|Nonlinear solvers
     4|         1|  1.64509e-05|  1.64509e-05|  0.00%|-----------------
     5|         0|            0|            0|  0.00%|
     6|         0|            0|            0|  0.00%|.. currentmodule:: scipy.optimize
     7|         0|            0|            0|  0.00%|
     8|         0|            0|            0|  0.00%|This is a collection of general-purpose nonlinear multidimensional
     9|         0|            0|            0|  0.00%|solvers. These solvers find *x* for which *F(x) = 0*. Both *x*
    10|         0|            0|            0|  0.00%|and *F* can be multidimensional.
    11|         0|            0|            0|  0.00%|
    12|         0|            0|            0|  0.00%|Routines
    13|         0|            0|            0|  0.00%|~~~~~~~~
    14|         0|            0|            0|  0.00%|
    15|         0|            0|            0|  0.00%|Large-scale nonlinear solvers:
    16|         0|            0|            0|  0.00%|
    17|         0|            0|            0|  0.00%|.. autosummary::
    18|         0|            0|            0|  0.00%|
    19|         0|            0|            0|  0.00%|   newton_krylov
    20|         0|            0|            0|  0.00%|   anderson
    21|         0|            0|            0|  0.00%|
    22|         0|            0|            0|  0.00%|General nonlinear solvers:
    23|         0|            0|            0|  0.00%|
    24|         0|            0|            0|  0.00%|.. autosummary::
    25|         0|            0|            0|  0.00%|
    26|         0|            0|            0|  0.00%|   broyden1
    27|         0|            0|            0|  0.00%|   broyden2
    28|         0|            0|            0|  0.00%|
    29|         0|            0|            0|  0.00%|Simple iterations:
    30|         0|            0|            0|  0.00%|
    31|         0|            0|            0|  0.00%|.. autosummary::
    32|         0|            0|            0|  0.00%|
    33|         0|            0|            0|  0.00%|   excitingmixing
    34|         0|            0|            0|  0.00%|   linearmixing
    35|         0|            0|            0|  0.00%|   diagbroyden
    36|         0|            0|            0|  0.00%|
    37|         0|            0|            0|  0.00%|
    38|         0|            0|            0|  0.00%|Examples
    39|         0|            0|            0|  0.00%|~~~~~~~~
    40|         0|            0|            0|  0.00%|
    41|         0|            0|            0|  0.00%|**Small problem**
    42|         0|            0|            0|  0.00%|
    43|         0|            0|            0|  0.00%|>>> def F(x):
    44|         0|            0|            0|  0.00%|...    return np.cos(x) + x[::-1] - [1, 2, 3, 4]
    45|         0|            0|            0|  0.00%|>>> import scipy.optimize
    46|         0|            0|            0|  0.00%|>>> x = scipy.optimize.broyden1(F, [1,1,1,1], f_tol=1e-14)
    47|         0|            0|            0|  0.00%|>>> x
    48|         0|            0|            0|  0.00%|array([ 4.04674914,  3.91158389,  2.71791677,  1.61756251])
    49|         0|            0|            0|  0.00%|>>> np.cos(x) + x[::-1]
    50|         0|            0|            0|  0.00%|array([ 1.,  2.,  3.,  4.])
    51|         0|            0|            0|  0.00%|
    52|         0|            0|            0|  0.00%|
    53|         0|            0|            0|  0.00%|**Large problem**
    54|         0|            0|            0|  0.00%|
    55|         0|            0|            0|  0.00%|Suppose that we needed to solve the following integrodifferential
    56|         0|            0|            0|  0.00%|equation on the square :math:`[0,1]\times[0,1]`:
    57|         0|            0|            0|  0.00%|
    58|         0|            0|            0|  0.00%|.. math::
    59|         0|            0|            0|  0.00%|
    60|         0|            0|            0|  0.00%|   \nabla^2 P = 10 \left(\int_0^1\int_0^1\cosh(P)\,dx\,dy\right)^2
    61|         0|            0|            0|  0.00%|
    62|         0|            0|            0|  0.00%|with :math:`P(x,1) = 1` and :math:`P=0` elsewhere on the boundary of
    63|         0|            0|            0|  0.00%|the square.
    64|         0|            0|            0|  0.00%|
    65|         0|            0|            0|  0.00%|The solution can be found using the `newton_krylov` solver:
    66|         0|            0|            0|  0.00%|
    67|         0|            0|            0|  0.00%|.. plot::
    68|         0|            0|            0|  0.00%|
    69|         0|            0|            0|  0.00%|   import numpy as np
    70|         0|            0|            0|  0.00%|   from scipy.optimize import newton_krylov
    71|         0|            0|            0|  0.00%|   from numpy import cosh, zeros_like, mgrid, zeros
    72|         0|            0|            0|  0.00%|
    73|         0|            0|            0|  0.00%|   # parameters
    74|         0|            0|            0|  0.00%|   nx, ny = 75, 75
    75|         0|            0|            0|  0.00%|   hx, hy = 1./(nx-1), 1./(ny-1)
    76|         0|            0|            0|  0.00%|
    77|         0|            0|            0|  0.00%|   P_left, P_right = 0, 0
    78|         0|            0|            0|  0.00%|   P_top, P_bottom = 1, 0
    79|         0|            0|            0|  0.00%|
    80|         0|            0|            0|  0.00%|   def residual(P):
    81|         0|            0|            0|  0.00%|       d2x = zeros_like(P)
    82|         0|            0|            0|  0.00%|       d2y = zeros_like(P)
    83|         0|            0|            0|  0.00%|
    84|         0|            0|            0|  0.00%|       d2x[1:-1] = (P[2:]   - 2*P[1:-1] + P[:-2]) / hx/hx
    85|         0|            0|            0|  0.00%|       d2x[0]    = (P[1]    - 2*P[0]    + P_left)/hx/hx
    86|         0|            0|            0|  0.00%|       d2x[-1]   = (P_right - 2*P[-1]   + P[-2])/hx/hx
    87|         0|            0|            0|  0.00%|
    88|         0|            0|            0|  0.00%|       d2y[:,1:-1] = (P[:,2:] - 2*P[:,1:-1] + P[:,:-2])/hy/hy
    89|         0|            0|            0|  0.00%|       d2y[:,0]    = (P[:,1]  - 2*P[:,0]    + P_bottom)/hy/hy
    90|         0|            0|            0|  0.00%|       d2y[:,-1]   = (P_top   - 2*P[:,-1]   + P[:,-2])/hy/hy
    91|         0|            0|            0|  0.00%|
    92|         0|            0|            0|  0.00%|       return d2x + d2y - 10*cosh(P).mean()**2
    93|         0|            0|            0|  0.00%|
    94|         0|            0|            0|  0.00%|   # solve
    95|         0|            0|            0|  0.00%|   guess = zeros((nx, ny), float)
    96|         0|            0|            0|  0.00%|   sol = newton_krylov(residual, guess, method='lgmres', verbose=1)
    97|         0|            0|            0|  0.00%|   print('Residual: %g' % abs(residual(sol)).max())
    98|         0|            0|            0|  0.00%|
    99|         0|            0|            0|  0.00%|   # visualize
   100|         0|            0|            0|  0.00%|   import matplotlib.pyplot as plt
   101|         0|            0|            0|  0.00%|   x, y = mgrid[0:1:(nx*1j), 0:1:(ny*1j)]
   102|         0|            0|            0|  0.00%|   plt.pcolormesh(x, y, sol, shading='gouraud')
   103|         0|            0|            0|  0.00%|   plt.colorbar()
   104|         0|            0|            0|  0.00%|   plt.show()
   105|         0|            0|            0|  0.00%|
   106|         0|            0|            0|  0.00%|"""
   107|         0|            0|            0|  0.00%|# Copyright (C) 2009, Pauli Virtanen <pav@iki.fi>
   108|         0|            0|            0|  0.00%|# Distributed under the same license as SciPy.
   109|         0|            0|            0|  0.00%|
   110|         0|            0|            0|  0.00%|import sys
   111|         0|            0|            0|  0.00%|import numpy as np
   112|         0|            0|            0|  0.00%|from scipy.linalg import norm, solve, inv, qr, svd, LinAlgError
   113|         0|            0|            0|  0.00%|from numpy import asarray, dot, vdot
   114|         0|            0|            0|  0.00%|import scipy.sparse.linalg
   115|         0|            0|            0|  0.00%|import scipy.sparse
   116|         0|            0|            0|  0.00%|from scipy.linalg import get_blas_funcs
   117|         0|            0|            0|  0.00%|import inspect
   118|         0|            0|            0|  0.00%|from scipy._lib._util import getfullargspec_no_self as _getfullargspec
   119|         0|            0|            0|  0.00%|from .linesearch import scalar_search_wolfe1, scalar_search_armijo
   120|         0|            0|            0|  0.00%|
   121|         0|            0|            0|  0.00%|
   122|         0|            0|            0|  0.00%|__all__ = [
   123|         0|            0|            0|  0.00%|    'broyden1', 'broyden2', 'anderson', 'linearmixing',
   124|         0|            0|            0|  0.00%|    'diagbroyden', 'excitingmixing', 'newton_krylov']
   125|         0|            0|            0|  0.00%|
   126|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   127|         0|            0|            0|  0.00%|# Utility functions
   128|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   129|         0|            0|            0|  0.00%|
   130|         0|            0|            0|  0.00%|
   131|         0|            0|            0|  0.00%|class NoConvergence(Exception):
   132|         0|            0|            0|  0.00%|    pass
   133|         0|            0|            0|  0.00%|
   134|         0|            0|            0|  0.00%|
   135|         0|            0|            0|  0.00%|def maxnorm(x):
   136|         0|            0|            0|  0.00%|    return np.absolute(x).max()
   137|         0|            0|            0|  0.00%|
   138|         0|            0|            0|  0.00%|
   139|         0|            0|            0|  0.00%|def _as_inexact(x):
   140|         0|            0|            0|  0.00%|    """Return `x` as an array, of either floats or complex floats"""
   141|         0|            0|            0|  0.00%|    x = asarray(x)
   142|         0|            0|            0|  0.00%|    if not np.issubdtype(x.dtype, np.inexact):
   143|         0|            0|            0|  0.00%|        return asarray(x, dtype=np.float_)
   144|         0|            0|            0|  0.00%|    return x
   145|         0|            0|            0|  0.00%|
   146|         0|            0|            0|  0.00%|
   147|         0|            0|            0|  0.00%|def _array_like(x, x0):
   148|         0|            0|            0|  0.00%|    """Return ndarray `x` as same array subclass and shape as `x0`"""
   149|         0|            0|            0|  0.00%|    x = np.reshape(x, np.shape(x0))
   150|         0|            0|            0|  0.00%|    wrap = getattr(x0, '__array_wrap__', x.__array_wrap__)
   151|         0|            0|            0|  0.00%|    return wrap(x)
   152|         0|            0|            0|  0.00%|
   153|         0|            0|            0|  0.00%|
   154|         0|            0|            0|  0.00%|def _safe_norm(v):
   155|         0|            0|            0|  0.00%|    if not np.isfinite(v).all():
   156|         0|            0|            0|  0.00%|        return np.array(np.inf)
   157|         0|            0|            0|  0.00%|    return norm(v)
   158|         0|            0|            0|  0.00%|
   159|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   160|         0|            0|            0|  0.00%|# Generic nonlinear solver machinery
   161|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   162|         0|            0|            0|  0.00%|
   163|         0|            0|            0|  0.00%|
   164|         0|            0|            0|  0.00%|_doc_parts = dict(
   165|         0|            0|            0|  0.00%|    params_basic="""
   166|         0|            0|            0|  0.00%|    F : function(x) -> f
   167|         0|            0|            0|  0.00%|        Function whose root to find; should take and return an array-like
   168|         0|            0|            0|  0.00%|        object.
   169|         0|            0|            0|  0.00%|    xin : array_like
   170|         0|            0|            0|  0.00%|        Initial guess for the solution
   171|         0|            0|            0|  0.00%|    """.strip(),
   172|         0|            0|            0|  0.00%|    params_extra="""
   173|         0|            0|            0|  0.00%|    iter : int, optional
   174|         0|            0|            0|  0.00%|        Number of iterations to make. If omitted (default), make as many
   175|         0|            0|            0|  0.00%|        as required to meet tolerances.
   176|         0|            0|            0|  0.00%|    verbose : bool, optional
   177|         0|            0|            0|  0.00%|        Print status to stdout on every iteration.
   178|         0|            0|            0|  0.00%|    maxiter : int, optional
   179|         0|            0|            0|  0.00%|        Maximum number of iterations to make. If more are needed to
   180|         0|            0|            0|  0.00%|        meet convergence, `NoConvergence` is raised.
   181|         0|            0|            0|  0.00%|    f_tol : float, optional
   182|         0|            0|            0|  0.00%|        Absolute tolerance (in max-norm) for the residual.
   183|         0|            0|            0|  0.00%|        If omitted, default is 6e-6.
   184|         0|            0|            0|  0.00%|    f_rtol : float, optional
   185|         0|            0|            0|  0.00%|        Relative tolerance for the residual. If omitted, not used.
   186|         0|            0|            0|  0.00%|    x_tol : float, optional
   187|         0|            0|            0|  0.00%|        Absolute minimum step size, as determined from the Jacobian
   188|         0|            0|            0|  0.00%|        approximation. If the step size is smaller than this, optimization
   189|         0|            0|            0|  0.00%|        is terminated as successful. If omitted, not used.
   190|         0|            0|            0|  0.00%|    x_rtol : float, optional
   191|         0|            0|            0|  0.00%|        Relative minimum step size. If omitted, not used.
   192|         0|            0|            0|  0.00%|    tol_norm : function(vector) -> scalar, optional
   193|         0|            0|            0|  0.00%|        Norm to use in convergence check. Default is the maximum norm.
   194|         0|            0|            0|  0.00%|    line_search : {None, 'armijo' (default), 'wolfe'}, optional
   195|         0|            0|            0|  0.00%|        Which type of a line search to use to determine the step size in the
   196|         0|            0|            0|  0.00%|        direction given by the Jacobian approximation. Defaults to 'armijo'.
   197|         0|            0|            0|  0.00%|    callback : function, optional
   198|         0|            0|            0|  0.00%|        Optional callback function. It is called on every iteration as
   199|         0|            0|            0|  0.00%|        ``callback(x, f)`` where `x` is the current solution and `f`
   200|         0|            0|            0|  0.00%|        the corresponding residual.
   201|         0|            0|            0|  0.00%|
   202|         0|            0|            0|  0.00%|    Returns
   203|         0|            0|            0|  0.00%|    -------
   204|         0|            0|            0|  0.00%|    sol : ndarray
   205|         0|            0|            0|  0.00%|        An array (of similar array type as `x0`) containing the final solution.
   206|         0|            0|            0|  0.00%|
   207|         0|            0|            0|  0.00%|    Raises
   208|         0|            0|            0|  0.00%|    ------
   209|         0|            0|            0|  0.00%|    NoConvergence
   210|         0|            0|            0|  0.00%|        When a solution was not found.
   211|         0|            0|            0|  0.00%|
   212|         0|            0|            0|  0.00%|    """.strip()
   213|         0|            0|            0|  0.00%|)
   214|         0|            0|            0|  0.00%|
   215|         0|            0|            0|  0.00%|
   216|         0|            0|            0|  0.00%|def _set_doc(obj):
   217|         0|            0|            0|  0.00%|    if obj.__doc__:
   218|         0|            0|            0|  0.00%|        obj.__doc__ = obj.__doc__ % _doc_parts
   219|         0|            0|            0|  0.00%|
   220|         0|            0|            0|  0.00%|
   221|         0|            0|            0|  0.00%|def nonlin_solve(F, x0, jacobian='krylov', iter=None, verbose=False,
   222|         0|            0|            0|  0.00%|                 maxiter=None, f_tol=None, f_rtol=None, x_tol=None, x_rtol=None,
   223|         0|            0|            0|  0.00%|                 tol_norm=None, line_search='armijo', callback=None,
   224|         0|            0|            0|  0.00%|                 full_output=False, raise_exception=True):
   225|         0|            0|            0|  0.00%|    """
   226|         0|            0|            0|  0.00%|    Find a root of a function, in a way suitable for large-scale problems.
   227|         0|            0|            0|  0.00%|
   228|         0|            0|            0|  0.00%|    Parameters
   229|         0|            0|            0|  0.00%|    ----------
   230|         0|            0|            0|  0.00%|    %(params_basic)s
   231|         0|            0|            0|  0.00%|    jacobian : Jacobian
   232|         0|            0|            0|  0.00%|        A Jacobian approximation: `Jacobian` object or something that
   233|         0|            0|            0|  0.00%|        `asjacobian` can transform to one. Alternatively, a string specifying
   234|         0|            0|            0|  0.00%|        which of the builtin Jacobian approximations to use:
   235|         0|            0|            0|  0.00%|
   236|         0|            0|            0|  0.00%|            krylov, broyden1, broyden2, anderson
   237|         0|            0|            0|  0.00%|            diagbroyden, linearmixing, excitingmixing
   238|         0|            0|            0|  0.00%|
   239|         0|            0|            0|  0.00%|    %(params_extra)s
   240|         0|            0|            0|  0.00%|    full_output : bool
   241|         0|            0|            0|  0.00%|        If true, returns a dictionary `info` containing convergence
   242|         0|            0|            0|  0.00%|        information.
   243|         0|            0|            0|  0.00%|    raise_exception : bool
   244|         0|            0|            0|  0.00%|        If True, a `NoConvergence` exception is raise if no solution is found.
   245|         0|            0|            0|  0.00%|
   246|         0|            0|            0|  0.00%|    See Also
   247|         0|            0|            0|  0.00%|    --------
   248|         0|            0|            0|  0.00%|    asjacobian, Jacobian
   249|         0|            0|            0|  0.00%|
   250|         0|            0|            0|  0.00%|    Notes
   251|         0|            0|            0|  0.00%|    -----
   252|         0|            0|            0|  0.00%|    This algorithm implements the inexact Newton method, with
   253|         0|            0|            0|  0.00%|    backtracking or full line searches. Several Jacobian
   254|         0|            0|            0|  0.00%|    approximations are available, including Krylov and Quasi-Newton
   255|         0|            0|            0|  0.00%|    methods.
   256|         0|            0|            0|  0.00%|
   257|         0|            0|            0|  0.00%|    References
   258|         0|            0|            0|  0.00%|    ----------
   259|         0|            0|            0|  0.00%|    .. [KIM] C. T. Kelley, \"Iterative Methods for Linear and Nonlinear
   260|         0|            0|            0|  0.00%|       Equations\". Society for Industrial and Applied Mathematics. (1995)
   261|         0|            0|            0|  0.00%|       https://archive.siam.org/books/kelley/fr16/
   262|         0|            0|            0|  0.00%|
   263|         0|            0|            0|  0.00%|    """
   264|         0|            0|            0|  0.00%|    # Can't use default parameters because it's being explicitly passed as None
   265|         0|            0|            0|  0.00%|    # from the calling function, so we need to set it here.
   266|         0|            0|            0|  0.00%|    tol_norm = maxnorm if tol_norm is None else tol_norm
   267|         0|            0|            0|  0.00%|    condition = TerminationCondition(f_tol=f_tol, f_rtol=f_rtol,
   268|         0|            0|            0|  0.00%|                                     x_tol=x_tol, x_rtol=x_rtol,
   269|         0|            0|            0|  0.00%|                                     iter=iter, norm=tol_norm)
   270|         0|            0|            0|  0.00%|
   271|         0|            0|            0|  0.00%|    x0 = _as_inexact(x0)
   272|         0|            0|            0|  0.00%|    func = lambda z: _as_inexact(F(_array_like(z, x0))).flatten()
   273|         0|            0|            0|  0.00%|    x = x0.flatten()
   274|         0|            0|            0|  0.00%|
   275|         0|            0|            0|  0.00%|    dx = np.inf
   276|         0|            0|            0|  0.00%|    Fx = func(x)
   277|         0|            0|            0|  0.00%|    Fx_norm = norm(Fx)
   278|         0|            0|            0|  0.00%|
   279|         0|            0|            0|  0.00%|    jacobian = asjacobian(jacobian)
   280|         0|            0|            0|  0.00%|    jacobian.setup(x.copy(), Fx, func)
   281|         0|            0|            0|  0.00%|
   282|         0|            0|            0|  0.00%|    if maxiter is None:
   283|         0|            0|            0|  0.00%|        if iter is not None:
   284|         0|            0|            0|  0.00%|            maxiter = iter + 1
   285|         0|            0|            0|  0.00%|        else:
   286|         0|            0|            0|  0.00%|            maxiter = 100*(x.size+1)
   287|         0|            0|            0|  0.00%|
   288|         0|            0|            0|  0.00%|    if line_search is True:
   289|         0|            0|            0|  0.00%|        line_search = 'armijo'
   290|         0|            0|            0|  0.00%|    elif line_search is False:
   291|         0|            0|            0|  0.00%|        line_search = None
   292|         0|            0|            0|  0.00%|
   293|         0|            0|            0|  0.00%|    if line_search not in (None, 'armijo', 'wolfe'):
   294|         0|            0|            0|  0.00%|        raise ValueError("Invalid line search")
   295|         0|            0|            0|  0.00%|
   296|         0|            0|            0|  0.00%|    # Solver tolerance selection
   297|         0|            0|            0|  0.00%|    gamma = 0.9
   298|         0|            0|            0|  0.00%|    eta_max = 0.9999
   299|         0|            0|            0|  0.00%|    eta_treshold = 0.1
   300|         0|            0|            0|  0.00%|    eta = 1e-3
   301|         0|            0|            0|  0.00%|
   302|         0|            0|            0|  0.00%|    for n in range(maxiter):
   303|         0|            0|            0|  0.00%|        status = condition.check(Fx, x, dx)
   304|         0|            0|            0|  0.00%|        if status:
   305|         0|            0|            0|  0.00%|            break
   306|         0|            0|            0|  0.00%|
   307|         0|            0|            0|  0.00%|        # The tolerance, as computed for scipy.sparse.linalg.* routines
   308|         0|            0|            0|  0.00%|        tol = min(eta, eta*Fx_norm)
   309|         0|            0|            0|  0.00%|        dx = -jacobian.solve(Fx, tol=tol)
   310|         0|            0|            0|  0.00%|
   311|         0|            0|            0|  0.00%|        if norm(dx) == 0:
   312|         0|            0|            0|  0.00%|            raise ValueError("Jacobian inversion yielded zero vector. "
   313|         0|            0|            0|  0.00%|                             "This indicates a bug in the Jacobian "
   314|         0|            0|            0|  0.00%|                             "approximation.")
   315|         0|            0|            0|  0.00%|
   316|         0|            0|            0|  0.00%|        # Line search, or Newton step
   317|         0|            0|            0|  0.00%|        if line_search:
   318|         0|            0|            0|  0.00%|            s, x, Fx, Fx_norm_new = _nonlin_line_search(func, x, Fx, dx,
   319|         0|            0|            0|  0.00%|                                                        line_search)
   320|         0|            0|            0|  0.00%|        else:
   321|         0|            0|            0|  0.00%|            s = 1.0
   322|         0|            0|            0|  0.00%|            x = x + dx
   323|         0|            0|            0|  0.00%|            Fx = func(x)
   324|         0|            0|            0|  0.00%|            Fx_norm_new = norm(Fx)
   325|         0|            0|            0|  0.00%|
   326|         0|            0|            0|  0.00%|        jacobian.update(x.copy(), Fx)
   327|         0|            0|            0|  0.00%|
   328|         0|            0|            0|  0.00%|        if callback:
   329|         0|            0|            0|  0.00%|            callback(x, Fx)
   330|         0|            0|            0|  0.00%|
   331|         0|            0|            0|  0.00%|        # Adjust forcing parameters for inexact methods
   332|         0|            0|            0|  0.00%|        eta_A = gamma * Fx_norm_new**2 / Fx_norm**2
   333|         0|            0|            0|  0.00%|        if gamma * eta**2 < eta_treshold:
   334|         0|            0|            0|  0.00%|            eta = min(eta_max, eta_A)
   335|         0|            0|            0|  0.00%|        else:
   336|         0|            0|            0|  0.00%|            eta = min(eta_max, max(eta_A, gamma*eta**2))
   337|         0|            0|            0|  0.00%|
   338|         0|            0|            0|  0.00%|        Fx_norm = Fx_norm_new
   339|         0|            0|            0|  0.00%|
   340|         0|            0|            0|  0.00%|        # Print status
   341|         0|            0|            0|  0.00%|        if verbose:
   342|         0|            0|            0|  0.00%|            sys.stdout.write("%d:  |F(x)| = %g; step %g\n" % (
   343|         0|            0|            0|  0.00%|                n, tol_norm(Fx), s))
   344|         0|            0|            0|  0.00%|            sys.stdout.flush()
   345|         0|            0|            0|  0.00%|    else:
   346|         0|            0|            0|  0.00%|        if raise_exception:
   347|         0|            0|            0|  0.00%|            raise NoConvergence(_array_like(x, x0))
   348|         0|            0|            0|  0.00%|        else:
   349|         0|            0|            0|  0.00%|            status = 2
   350|         0|            0|            0|  0.00%|
   351|         0|            0|            0|  0.00%|    if full_output:
   352|         0|            0|            0|  0.00%|        info = {'nit': condition.iteration,
   353|         0|            0|            0|  0.00%|                'fun': Fx,
   354|         0|            0|            0|  0.00%|                'status': status,
   355|         0|            0|            0|  0.00%|                'success': status == 1,
   356|         0|            0|            0|  0.00%|                'message': {1: 'A solution was found at the specified '
   357|         0|            0|            0|  0.00%|                               'tolerance.',
   358|         0|            0|            0|  0.00%|                            2: 'The maximum number of iterations allowed '
   359|         0|            0|            0|  0.00%|                               'has been reached.'
   360|         0|            0|            0|  0.00%|                            }[status]
   361|         0|            0|            0|  0.00%|                }
   362|         0|            0|            0|  0.00%|        return _array_like(x, x0), info
   363|         0|            0|            0|  0.00%|    else:
   364|         0|            0|            0|  0.00%|        return _array_like(x, x0)
   365|         0|            0|            0|  0.00%|
   366|         0|            0|            0|  0.00%|
   367|         0|            0|            0|  0.00%|_set_doc(nonlin_solve)
   368|         0|            0|            0|  0.00%|
   369|         0|            0|            0|  0.00%|
   370|         0|            0|            0|  0.00%|def _nonlin_line_search(func, x, Fx, dx, search_type='armijo', rdiff=1e-8,
   371|         0|            0|            0|  0.00%|                        smin=1e-2):
   372|         0|            0|            0|  0.00%|    tmp_s = [0]
   373|         0|            0|            0|  0.00%|    tmp_Fx = [Fx]
   374|         0|            0|            0|  0.00%|    tmp_phi = [norm(Fx)**2]
   375|         0|            0|            0|  0.00%|    s_norm = norm(x) / norm(dx)
   376|         0|            0|            0|  0.00%|
   377|         0|            0|            0|  0.00%|    def phi(s, store=True):
   378|         0|            0|            0|  0.00%|        if s == tmp_s[0]:
   379|         0|            0|            0|  0.00%|            return tmp_phi[0]
   380|         0|            0|            0|  0.00%|        xt = x + s*dx
   381|         0|            0|            0|  0.00%|        v = func(xt)
   382|         0|            0|            0|  0.00%|        p = _safe_norm(v)**2
   383|         0|            0|            0|  0.00%|        if store:
   384|         0|            0|            0|  0.00%|            tmp_s[0] = s
   385|         0|            0|            0|  0.00%|            tmp_phi[0] = p
   386|         0|            0|            0|  0.00%|            tmp_Fx[0] = v
   387|         0|            0|            0|  0.00%|        return p
   388|         0|            0|            0|  0.00%|
   389|         0|            0|            0|  0.00%|    def derphi(s):
   390|         0|            0|            0|  0.00%|        ds = (abs(s) + s_norm + 1) * rdiff
   391|         0|            0|            0|  0.00%|        return (phi(s+ds, store=False) - phi(s)) / ds
   392|         0|            0|            0|  0.00%|
   393|         0|            0|            0|  0.00%|    if search_type == 'wolfe':
   394|         0|            0|            0|  0.00%|        s, phi1, phi0 = scalar_search_wolfe1(phi, derphi, tmp_phi[0],
   395|         0|            0|            0|  0.00%|                                             xtol=1e-2, amin=smin)
   396|         0|            0|            0|  0.00%|    elif search_type == 'armijo':
   397|         0|            0|            0|  0.00%|        s, phi1 = scalar_search_armijo(phi, tmp_phi[0], -tmp_phi[0],
   398|         0|            0|            0|  0.00%|                                       amin=smin)
   399|         0|            0|            0|  0.00%|
   400|         0|            0|            0|  0.00%|    if s is None:
   401|         0|            0|            0|  0.00%|        # XXX: No suitable step length found. Take the full Newton step,
   402|         0|            0|            0|  0.00%|        #      and hope for the best.
   403|         0|            0|            0|  0.00%|        s = 1.0
   404|         0|            0|            0|  0.00%|
   405|         0|            0|            0|  0.00%|    x = x + s*dx
   406|         0|            0|            0|  0.00%|    if s == tmp_s[0]:
   407|         0|            0|            0|  0.00%|        Fx = tmp_Fx[0]
   408|         0|            0|            0|  0.00%|    else:
   409|         0|            0|            0|  0.00%|        Fx = func(x)
   410|         0|            0|            0|  0.00%|    Fx_norm = norm(Fx)
   411|         0|            0|            0|  0.00%|
   412|         0|            0|            0|  0.00%|    return s, x, Fx, Fx_norm
   413|         0|            0|            0|  0.00%|
   414|         0|            0|            0|  0.00%|
   415|         0|            0|            0|  0.00%|class TerminationCondition(object):
   416|         0|            0|            0|  0.00%|    """
   417|         0|            0|            0|  0.00%|    Termination condition for an iteration. It is terminated if
   418|         0|            0|            0|  0.00%|
   419|         0|            0|            0|  0.00%|    - |F| < f_rtol*|F_0|, AND
   420|         0|            0|            0|  0.00%|    - |F| < f_tol
   421|         0|            0|            0|  0.00%|
   422|         0|            0|            0|  0.00%|    AND
   423|         0|            0|            0|  0.00%|
   424|         0|            0|            0|  0.00%|    - |dx| < x_rtol*|x|, AND
   425|         0|            0|            0|  0.00%|    - |dx| < x_tol
   426|         0|            0|            0|  0.00%|
   427|         0|            0|            0|  0.00%|    """
   428|         0|            0|            0|  0.00%|    def __init__(self, f_tol=None, f_rtol=None, x_tol=None, x_rtol=None,
   429|         0|            0|            0|  0.00%|                 iter=None, norm=maxnorm):
   430|         0|            0|            0|  0.00%|
   431|         0|            0|            0|  0.00%|        if f_tol is None:
   432|         0|            0|            0|  0.00%|            f_tol = np.finfo(np.float_).eps ** (1./3)
   433|         0|            0|            0|  0.00%|        if f_rtol is None:
   434|         0|            0|            0|  0.00%|            f_rtol = np.inf
   435|         0|            0|            0|  0.00%|        if x_tol is None:
   436|         0|            0|            0|  0.00%|            x_tol = np.inf
   437|         0|            0|            0|  0.00%|        if x_rtol is None:
   438|         0|            0|            0|  0.00%|            x_rtol = np.inf
   439|         0|            0|            0|  0.00%|
   440|         0|            0|            0|  0.00%|        self.x_tol = x_tol
   441|         0|            0|            0|  0.00%|        self.x_rtol = x_rtol
   442|         0|            0|            0|  0.00%|        self.f_tol = f_tol
   443|         0|            0|            0|  0.00%|        self.f_rtol = f_rtol
   444|         0|            0|            0|  0.00%|
   445|         0|            0|            0|  0.00%|        self.norm = norm
   446|         0|            0|            0|  0.00%|
   447|         0|            0|            0|  0.00%|        self.iter = iter
   448|         0|            0|            0|  0.00%|
   449|         0|            0|            0|  0.00%|        self.f0_norm = None
   450|         0|            0|            0|  0.00%|        self.iteration = 0
   451|         0|            0|            0|  0.00%|
   452|         0|            0|            0|  0.00%|    def check(self, f, x, dx):
   453|         0|            0|            0|  0.00%|        self.iteration += 1
   454|         0|            0|            0|  0.00%|        f_norm = self.norm(f)
   455|         0|            0|            0|  0.00%|        x_norm = self.norm(x)
   456|         0|            0|            0|  0.00%|        dx_norm = self.norm(dx)
   457|         0|            0|            0|  0.00%|
   458|         0|            0|            0|  0.00%|        if self.f0_norm is None:
   459|         0|            0|            0|  0.00%|            self.f0_norm = f_norm
   460|         0|            0|            0|  0.00%|
   461|         0|            0|            0|  0.00%|        if f_norm == 0:
   462|         0|            0|            0|  0.00%|            return 1
   463|         0|            0|            0|  0.00%|
   464|         0|            0|            0|  0.00%|        if self.iter is not None:
   465|         0|            0|            0|  0.00%|            # backwards compatibility with SciPy 0.6.0
   466|         0|            0|            0|  0.00%|            return 2 * (self.iteration > self.iter)
   467|         0|            0|            0|  0.00%|
   468|         0|            0|            0|  0.00%|        # NB: condition must succeed for rtol=inf even if norm == 0
   469|         0|            0|            0|  0.00%|        return int((f_norm <= self.f_tol
   470|         0|            0|            0|  0.00%|                    and f_norm/self.f_rtol <= self.f0_norm)
   471|         0|            0|            0|  0.00%|                   and (dx_norm <= self.x_tol
   472|         0|            0|            0|  0.00%|                        and dx_norm/self.x_rtol <= x_norm))
   473|         0|            0|            0|  0.00%|
   474|         0|            0|            0|  0.00%|
   475|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   476|         0|            0|            0|  0.00%|# Generic Jacobian approximation
   477|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   478|         0|            0|            0|  0.00%|
   479|         0|            0|            0|  0.00%|class Jacobian(object):
   480|         0|            0|            0|  0.00%|    """
   481|         0|            0|            0|  0.00%|    Common interface for Jacobians or Jacobian approximations.
   482|         0|            0|            0|  0.00%|
   483|         0|            0|            0|  0.00%|    The optional methods come useful when implementing trust region
   484|         0|            0|            0|  0.00%|    etc., algorithms that often require evaluating transposes of the
   485|         0|            0|            0|  0.00%|    Jacobian.
   486|         0|            0|            0|  0.00%|
   487|         0|            0|            0|  0.00%|    Methods
   488|         0|            0|            0|  0.00%|    -------
   489|         0|            0|            0|  0.00%|    solve
   490|         0|            0|            0|  0.00%|        Returns J^-1 * v
   491|         0|            0|            0|  0.00%|    update
   492|         0|            0|            0|  0.00%|        Updates Jacobian to point `x` (where the function has residual `Fx`)
   493|         0|            0|            0|  0.00%|
   494|         0|            0|            0|  0.00%|    matvec : optional
   495|         0|            0|            0|  0.00%|        Returns J * v
   496|         0|            0|            0|  0.00%|    rmatvec : optional
   497|         0|            0|            0|  0.00%|        Returns A^H * v
   498|         0|            0|            0|  0.00%|    rsolve : optional
   499|         0|            0|            0|  0.00%|        Returns A^-H * v
   500|         0|            0|            0|  0.00%|    matmat : optional
   501|         0|            0|            0|  0.00%|        Returns A * V, where V is a dense matrix with dimensions (N,K).
   502|         0|            0|            0|  0.00%|    todense : optional
   503|         0|            0|            0|  0.00%|        Form the dense Jacobian matrix. Necessary for dense trust region
   504|         0|            0|            0|  0.00%|        algorithms, and useful for testing.
   505|         0|            0|            0|  0.00%|
   506|         0|            0|            0|  0.00%|    Attributes
   507|         0|            0|            0|  0.00%|    ----------
   508|         0|            0|            0|  0.00%|    shape
   509|         0|            0|            0|  0.00%|        Matrix dimensions (M, N)
   510|         0|            0|            0|  0.00%|    dtype
   511|         0|            0|            0|  0.00%|        Data type of the matrix.
   512|         0|            0|            0|  0.00%|    func : callable, optional
   513|         0|            0|            0|  0.00%|        Function the Jacobian corresponds to
   514|         0|            0|            0|  0.00%|
   515|         0|            0|            0|  0.00%|    """
   516|         0|            0|            0|  0.00%|
   517|         0|            0|            0|  0.00%|    def __init__(self, **kw):
   518|         0|            0|            0|  0.00%|        names = ["solve", "update", "matvec", "rmatvec", "rsolve",
   519|         0|            0|            0|  0.00%|                 "matmat", "todense", "shape", "dtype"]
   520|         0|            0|            0|  0.00%|        for name, value in kw.items():
   521|         0|            0|            0|  0.00%|            if name not in names:
   522|         0|            0|            0|  0.00%|                raise ValueError("Unknown keyword argument %s" % name)
   523|         0|            0|            0|  0.00%|            if value is not None:
   524|         0|            0|            0|  0.00%|                setattr(self, name, kw[name])
   525|         0|            0|            0|  0.00%|
   526|         0|            0|            0|  0.00%|        if hasattr(self, 'todense'):
   527|         0|            0|            0|  0.00%|            self.__array__ = lambda: self.todense()
   528|         0|            0|            0|  0.00%|
   529|         0|            0|            0|  0.00%|    def aspreconditioner(self):
   530|         0|            0|            0|  0.00%|        return InverseJacobian(self)
   531|         0|            0|            0|  0.00%|
   532|         0|            0|            0|  0.00%|    def solve(self, v, tol=0):
   533|         0|            0|            0|  0.00%|        raise NotImplementedError
   534|         0|            0|            0|  0.00%|
   535|         0|            0|            0|  0.00%|    def update(self, x, F):
   536|         0|            0|            0|  0.00%|        pass
   537|         0|            0|            0|  0.00%|
   538|         0|            0|            0|  0.00%|    def setup(self, x, F, func):
   539|         0|            0|            0|  0.00%|        self.func = func
   540|         0|            0|            0|  0.00%|        self.shape = (F.size, x.size)
   541|         0|            0|            0|  0.00%|        self.dtype = F.dtype
   542|         0|            0|            0|  0.00%|        if self.__class__.setup is Jacobian.setup:
   543|         0|            0|            0|  0.00%|            # Call on the first point unless overridden
   544|         0|            0|            0|  0.00%|            self.update(x, F)
   545|         0|            0|            0|  0.00%|
   546|         0|            0|            0|  0.00%|
   547|         0|            0|            0|  0.00%|class InverseJacobian(object):
   548|         0|            0|            0|  0.00%|    def __init__(self, jacobian):
   549|         0|            0|            0|  0.00%|        self.jacobian = jacobian
   550|         0|            0|            0|  0.00%|        self.matvec = jacobian.solve
   551|         0|            0|            0|  0.00%|        self.update = jacobian.update
   552|         0|            0|            0|  0.00%|        if hasattr(jacobian, 'setup'):
   553|         0|            0|            0|  0.00%|            self.setup = jacobian.setup
   554|         0|            0|            0|  0.00%|        if hasattr(jacobian, 'rsolve'):
   555|         0|            0|            0|  0.00%|            self.rmatvec = jacobian.rsolve
   556|         0|            0|            0|  0.00%|
   557|         0|            0|            0|  0.00%|    @property
   558|         0|            0|            0|  0.00%|    def shape(self):
   559|         0|            0|            0|  0.00%|        return self.jacobian.shape
   560|         0|            0|            0|  0.00%|
   561|         0|            0|            0|  0.00%|    @property
   562|         0|            0|            0|  0.00%|    def dtype(self):
   563|         0|            0|            0|  0.00%|        return self.jacobian.dtype
   564|         0|            0|            0|  0.00%|
   565|         0|            0|            0|  0.00%|
   566|         0|            0|            0|  0.00%|def asjacobian(J):
   567|         0|            0|            0|  0.00%|    """
   568|         0|            0|            0|  0.00%|    Convert given object to one suitable for use as a Jacobian.
   569|         0|            0|            0|  0.00%|    """
   570|         0|            0|            0|  0.00%|    spsolve = scipy.sparse.linalg.spsolve
   571|         0|            0|            0|  0.00%|    if isinstance(J, Jacobian):
   572|         0|            0|            0|  0.00%|        return J
   573|         0|            0|            0|  0.00%|    elif inspect.isclass(J) and issubclass(J, Jacobian):
   574|         0|            0|            0|  0.00%|        return J()
   575|         0|            0|            0|  0.00%|    elif isinstance(J, np.ndarray):
   576|         0|            0|            0|  0.00%|        if J.ndim > 2:
   577|         0|            0|            0|  0.00%|            raise ValueError('array must have rank <= 2')
   578|         0|            0|            0|  0.00%|        J = np.atleast_2d(np.asarray(J))
   579|         0|            0|            0|  0.00%|        if J.shape[0] != J.shape[1]:
   580|         0|            0|            0|  0.00%|            raise ValueError('array must be square')
   581|         0|            0|            0|  0.00%|
   582|         0|            0|            0|  0.00%|        return Jacobian(matvec=lambda v: dot(J, v),
   583|         0|            0|            0|  0.00%|                        rmatvec=lambda v: dot(J.conj().T, v),
   584|         0|            0|            0|  0.00%|                        solve=lambda v: solve(J, v),
   585|         0|            0|            0|  0.00%|                        rsolve=lambda v: solve(J.conj().T, v),
   586|         0|            0|            0|  0.00%|                        dtype=J.dtype, shape=J.shape)
   587|         0|            0|            0|  0.00%|    elif scipy.sparse.isspmatrix(J):
   588|         0|            0|            0|  0.00%|        if J.shape[0] != J.shape[1]:
   589|         0|            0|            0|  0.00%|            raise ValueError('matrix must be square')
   590|         0|            0|            0|  0.00%|        return Jacobian(matvec=lambda v: J*v,
   591|         0|            0|            0|  0.00%|                        rmatvec=lambda v: J.conj().T * v,
   592|         0|            0|            0|  0.00%|                        solve=lambda v: spsolve(J, v),
   593|         0|            0|            0|  0.00%|                        rsolve=lambda v: spsolve(J.conj().T, v),
   594|         0|            0|            0|  0.00%|                        dtype=J.dtype, shape=J.shape)
   595|         0|            0|            0|  0.00%|    elif hasattr(J, 'shape') and hasattr(J, 'dtype') and hasattr(J, 'solve'):
   596|         0|            0|            0|  0.00%|        return Jacobian(matvec=getattr(J, 'matvec'),
   597|         0|            0|            0|  0.00%|                        rmatvec=getattr(J, 'rmatvec'),
   598|         0|            0|            0|  0.00%|                        solve=J.solve,
   599|         0|            0|            0|  0.00%|                        rsolve=getattr(J, 'rsolve'),
   600|         0|            0|            0|  0.00%|                        update=getattr(J, 'update'),
   601|         0|            0|            0|  0.00%|                        setup=getattr(J, 'setup'),
   602|         0|            0|            0|  0.00%|                        dtype=J.dtype,
   603|         0|            0|            0|  0.00%|                        shape=J.shape)
   604|         0|            0|            0|  0.00%|    elif callable(J):
   605|         0|            0|            0|  0.00%|        # Assume it's a function J(x) that returns the Jacobian
   606|         0|            0|            0|  0.00%|        class Jac(Jacobian):
   607|         0|            0|            0|  0.00%|            def update(self, x, F):
   608|         0|            0|            0|  0.00%|                self.x = x
   609|         0|            0|            0|  0.00%|
   610|         0|            0|            0|  0.00%|            def solve(self, v, tol=0):
   611|         0|            0|            0|  0.00%|                m = J(self.x)
   612|         0|            0|            0|  0.00%|                if isinstance(m, np.ndarray):
   613|         0|            0|            0|  0.00%|                    return solve(m, v)
   614|         0|            0|            0|  0.00%|                elif scipy.sparse.isspmatrix(m):
   615|         0|            0|            0|  0.00%|                    return spsolve(m, v)
   616|         0|            0|            0|  0.00%|                else:
   617|         0|            0|            0|  0.00%|                    raise ValueError("Unknown matrix type")
   618|         0|            0|            0|  0.00%|
   619|         0|            0|            0|  0.00%|            def matvec(self, v):
   620|         0|            0|            0|  0.00%|                m = J(self.x)
   621|         0|            0|            0|  0.00%|                if isinstance(m, np.ndarray):
   622|         0|            0|            0|  0.00%|                    return dot(m, v)
   623|         0|            0|            0|  0.00%|                elif scipy.sparse.isspmatrix(m):
   624|         0|            0|            0|  0.00%|                    return m*v
   625|         0|            0|            0|  0.00%|                else:
   626|         0|            0|            0|  0.00%|                    raise ValueError("Unknown matrix type")
   627|         0|            0|            0|  0.00%|
   628|         0|            0|            0|  0.00%|            def rsolve(self, v, tol=0):
   629|         0|            0|            0|  0.00%|                m = J(self.x)
   630|         0|            0|            0|  0.00%|                if isinstance(m, np.ndarray):
   631|         0|            0|            0|  0.00%|                    return solve(m.conj().T, v)
   632|         0|            0|            0|  0.00%|                elif scipy.sparse.isspmatrix(m):
   633|         0|            0|            0|  0.00%|                    return spsolve(m.conj().T, v)
   634|         0|            0|            0|  0.00%|                else:
   635|         0|            0|            0|  0.00%|                    raise ValueError("Unknown matrix type")
   636|         0|            0|            0|  0.00%|
   637|         0|            0|            0|  0.00%|            def rmatvec(self, v):
   638|         0|            0|            0|  0.00%|                m = J(self.x)
   639|         0|            0|            0|  0.00%|                if isinstance(m, np.ndarray):
   640|         0|            0|            0|  0.00%|                    return dot(m.conj().T, v)
   641|         0|            0|            0|  0.00%|                elif scipy.sparse.isspmatrix(m):
   642|         0|            0|            0|  0.00%|                    return m.conj().T * v
   643|         0|            0|            0|  0.00%|                else:
   644|         0|            0|            0|  0.00%|                    raise ValueError("Unknown matrix type")
   645|         0|            0|            0|  0.00%|        return Jac()
   646|         0|            0|            0|  0.00%|    elif isinstance(J, str):
   647|         0|            0|            0|  0.00%|        return dict(broyden1=BroydenFirst,
   648|         0|            0|            0|  0.00%|                    broyden2=BroydenSecond,
   649|         0|            0|            0|  0.00%|                    anderson=Anderson,
   650|         0|            0|            0|  0.00%|                    diagbroyden=DiagBroyden,
   651|         0|            0|            0|  0.00%|                    linearmixing=LinearMixing,
   652|         0|            0|            0|  0.00%|                    excitingmixing=ExcitingMixing,
   653|         0|            0|            0|  0.00%|                    krylov=KrylovJacobian)[J]()
   654|         0|            0|            0|  0.00%|    else:
   655|         0|            0|            0|  0.00%|        raise TypeError('Cannot convert object to a Jacobian')
   656|         0|            0|            0|  0.00%|
   657|         0|            0|            0|  0.00%|
   658|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   659|         0|            0|            0|  0.00%|# Broyden
   660|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   661|         0|            0|            0|  0.00%|
   662|         0|            0|            0|  0.00%|class GenericBroyden(Jacobian):
   663|         0|            0|            0|  0.00%|    def setup(self, x0, f0, func):
   664|         0|            0|            0|  0.00%|        Jacobian.setup(self, x0, f0, func)
   665|         0|            0|            0|  0.00%|        self.last_f = f0
   666|         0|            0|            0|  0.00%|        self.last_x = x0
   667|         0|            0|            0|  0.00%|
   668|         0|            0|            0|  0.00%|        if hasattr(self, 'alpha') and self.alpha is None:
   669|         0|            0|            0|  0.00%|            # Autoscale the initial Jacobian parameter
   670|         0|            0|            0|  0.00%|            # unless we have already guessed the solution.
   671|         0|            0|            0|  0.00%|            normf0 = norm(f0)
   672|         0|            0|            0|  0.00%|            if normf0:
   673|         0|            0|            0|  0.00%|                self.alpha = 0.5*max(norm(x0), 1) / normf0
   674|         0|            0|            0|  0.00%|            else:
   675|         0|            0|            0|  0.00%|                self.alpha = 1.0
   676|         0|            0|            0|  0.00%|
   677|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
   678|         0|            0|            0|  0.00%|        raise NotImplementedError
   679|         0|            0|            0|  0.00%|
   680|         0|            0|            0|  0.00%|    def update(self, x, f):
   681|         0|            0|            0|  0.00%|        df = f - self.last_f
   682|         0|            0|            0|  0.00%|        dx = x - self.last_x
   683|         0|            0|            0|  0.00%|        self._update(x, f, dx, df, norm(dx), norm(df))
   684|         0|            0|            0|  0.00%|        self.last_f = f
   685|         0|            0|            0|  0.00%|        self.last_x = x
   686|         0|            0|            0|  0.00%|
   687|         0|            0|            0|  0.00%|
   688|         0|            0|            0|  0.00%|class LowRankMatrix(object):
   689|         0|            0|            0|  0.00%|    r"""
   690|         0|            0|            0|  0.00%|    A matrix represented as
   691|         0|            0|            0|  0.00%|
   692|         0|            0|            0|  0.00%|    .. math:: \alpha I + \sum_{n=0}^{n=M} c_n d_n^\dagger
   693|         0|            0|            0|  0.00%|
   694|         0|            0|            0|  0.00%|    However, if the rank of the matrix reaches the dimension of the vectors,
   695|         0|            0|            0|  0.00%|    full matrix representation will be used thereon.
   696|         0|            0|            0|  0.00%|
   697|         0|            0|            0|  0.00%|    """
   698|         0|            0|            0|  0.00%|
   699|         0|            0|            0|  0.00%|    def __init__(self, alpha, n, dtype):
   700|         0|            0|            0|  0.00%|        self.alpha = alpha
   701|         0|            0|            0|  0.00%|        self.cs = []
   702|         0|            0|            0|  0.00%|        self.ds = []
   703|         0|            0|            0|  0.00%|        self.n = n
   704|         0|            0|            0|  0.00%|        self.dtype = dtype
   705|         0|            0|            0|  0.00%|        self.collapsed = None
   706|         0|            0|            0|  0.00%|
   707|         0|            0|            0|  0.00%|    @staticmethod
   708|         0|            0|            0|  0.00%|    def _matvec(v, alpha, cs, ds):
   709|         0|            0|            0|  0.00%|        axpy, scal, dotc = get_blas_funcs(['axpy', 'scal', 'dotc'],
   710|         0|            0|            0|  0.00%|                                          cs[:1] + [v])
   711|         0|            0|            0|  0.00%|        w = alpha * v
   712|         0|            0|            0|  0.00%|        for c, d in zip(cs, ds):
   713|         0|            0|            0|  0.00%|            a = dotc(d, v)
   714|         0|            0|            0|  0.00%|            w = axpy(c, w, w.size, a)
   715|         0|            0|            0|  0.00%|        return w
   716|         0|            0|            0|  0.00%|
   717|         0|            0|            0|  0.00%|    @staticmethod
   718|         0|            0|            0|  0.00%|    def _solve(v, alpha, cs, ds):
   719|         0|            0|            0|  0.00%|        """Evaluate w = M^-1 v"""
   720|         0|            0|            0|  0.00%|        if len(cs) == 0:
   721|         0|            0|            0|  0.00%|            return v/alpha
   722|         0|            0|            0|  0.00%|
   723|         0|            0|            0|  0.00%|        # (B + C D^H)^-1 = B^-1 - B^-1 C (I + D^H B^-1 C)^-1 D^H B^-1
   724|         0|            0|            0|  0.00%|
   725|         0|            0|            0|  0.00%|        axpy, dotc = get_blas_funcs(['axpy', 'dotc'], cs[:1] + [v])
   726|         0|            0|            0|  0.00%|
   727|         0|            0|            0|  0.00%|        c0 = cs[0]
   728|         0|            0|            0|  0.00%|        A = alpha * np.identity(len(cs), dtype=c0.dtype)
   729|         0|            0|            0|  0.00%|        for i, d in enumerate(ds):
   730|         0|            0|            0|  0.00%|            for j, c in enumerate(cs):
   731|         0|            0|            0|  0.00%|                A[i,j] += dotc(d, c)
   732|         0|            0|            0|  0.00%|
   733|         0|            0|            0|  0.00%|        q = np.zeros(len(cs), dtype=c0.dtype)
   734|         0|            0|            0|  0.00%|        for j, d in enumerate(ds):
   735|         0|            0|            0|  0.00%|            q[j] = dotc(d, v)
   736|         0|            0|            0|  0.00%|        q /= alpha
   737|         0|            0|            0|  0.00%|        q = solve(A, q)
   738|         0|            0|            0|  0.00%|
   739|         0|            0|            0|  0.00%|        w = v/alpha
   740|         0|            0|            0|  0.00%|        for c, qc in zip(cs, q):
   741|         0|            0|            0|  0.00%|            w = axpy(c, w, w.size, -qc)
   742|         0|            0|            0|  0.00%|
   743|         0|            0|            0|  0.00%|        return w
   744|         0|            0|            0|  0.00%|
   745|         0|            0|            0|  0.00%|    def matvec(self, v):
   746|         0|            0|            0|  0.00%|        """Evaluate w = M v"""
   747|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   748|         0|            0|            0|  0.00%|            return np.dot(self.collapsed, v)
   749|         0|            0|            0|  0.00%|        return LowRankMatrix._matvec(v, self.alpha, self.cs, self.ds)
   750|         0|            0|            0|  0.00%|
   751|         0|            0|            0|  0.00%|    def rmatvec(self, v):
   752|         0|            0|            0|  0.00%|        """Evaluate w = M^H v"""
   753|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   754|         0|            0|            0|  0.00%|            return np.dot(self.collapsed.T.conj(), v)
   755|         0|            0|            0|  0.00%|        return LowRankMatrix._matvec(v, np.conj(self.alpha), self.ds, self.cs)
   756|         0|            0|            0|  0.00%|
   757|         0|            0|            0|  0.00%|    def solve(self, v, tol=0):
   758|         0|            0|            0|  0.00%|        """Evaluate w = M^-1 v"""
   759|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   760|         0|            0|            0|  0.00%|            return solve(self.collapsed, v)
   761|         0|            0|            0|  0.00%|        return LowRankMatrix._solve(v, self.alpha, self.cs, self.ds)
   762|         0|            0|            0|  0.00%|
   763|         0|            0|            0|  0.00%|    def rsolve(self, v, tol=0):
   764|         0|            0|            0|  0.00%|        """Evaluate w = M^-H v"""
   765|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   766|         0|            0|            0|  0.00%|            return solve(self.collapsed.T.conj(), v)
   767|         0|            0|            0|  0.00%|        return LowRankMatrix._solve(v, np.conj(self.alpha), self.ds, self.cs)
   768|         0|            0|            0|  0.00%|
   769|         0|            0|            0|  0.00%|    def append(self, c, d):
   770|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   771|         0|            0|            0|  0.00%|            self.collapsed += c[:,None] * d[None,:].conj()
   772|         0|            0|            0|  0.00%|            return
   773|         0|            0|            0|  0.00%|
   774|         0|            0|            0|  0.00%|        self.cs.append(c)
   775|         0|            0|            0|  0.00%|        self.ds.append(d)
   776|         0|            0|            0|  0.00%|
   777|         0|            0|            0|  0.00%|        if len(self.cs) > c.size:
   778|         0|            0|            0|  0.00%|            self.collapse()
   779|         0|            0|            0|  0.00%|
   780|         0|            0|            0|  0.00%|    def __array__(self):
   781|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   782|         0|            0|            0|  0.00%|            return self.collapsed
   783|         0|            0|            0|  0.00%|
   784|         0|            0|            0|  0.00%|        Gm = self.alpha*np.identity(self.n, dtype=self.dtype)
   785|         0|            0|            0|  0.00%|        for c, d in zip(self.cs, self.ds):
   786|         0|            0|            0|  0.00%|            Gm += c[:,None]*d[None,:].conj()
   787|         0|            0|            0|  0.00%|        return Gm
   788|         0|            0|            0|  0.00%|
   789|         0|            0|            0|  0.00%|    def collapse(self):
   790|         0|            0|            0|  0.00%|        """Collapse the low-rank matrix to a full-rank one."""
   791|         0|            0|            0|  0.00%|        self.collapsed = np.array(self)
   792|         0|            0|            0|  0.00%|        self.cs = None
   793|         0|            0|            0|  0.00%|        self.ds = None
   794|         0|            0|            0|  0.00%|        self.alpha = None
   795|         0|            0|            0|  0.00%|
   796|         0|            0|            0|  0.00%|    def restart_reduce(self, rank):
   797|         0|            0|            0|  0.00%|        """
   798|         0|            0|            0|  0.00%|        Reduce the rank of the matrix by dropping all vectors.
   799|         0|            0|            0|  0.00%|        """
   800|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   801|         0|            0|            0|  0.00%|            return
   802|         0|            0|            0|  0.00%|        assert rank > 0
   803|         0|            0|            0|  0.00%|        if len(self.cs) > rank:
   804|         0|            0|            0|  0.00%|            del self.cs[:]
   805|         0|            0|            0|  0.00%|            del self.ds[:]
   806|         0|            0|            0|  0.00%|
   807|         0|            0|            0|  0.00%|    def simple_reduce(self, rank):
   808|         0|            0|            0|  0.00%|        """
   809|         0|            0|            0|  0.00%|        Reduce the rank of the matrix by dropping oldest vectors.
   810|         0|            0|            0|  0.00%|        """
   811|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   812|         0|            0|            0|  0.00%|            return
   813|         0|            0|            0|  0.00%|        assert rank > 0
   814|         0|            0|            0|  0.00%|        while len(self.cs) > rank:
   815|         0|            0|            0|  0.00%|            del self.cs[0]
   816|         0|            0|            0|  0.00%|            del self.ds[0]
   817|         0|            0|            0|  0.00%|
   818|         0|            0|            0|  0.00%|    def svd_reduce(self, max_rank, to_retain=None):
   819|         0|            0|            0|  0.00%|        """
   820|         0|            0|            0|  0.00%|        Reduce the rank of the matrix by retaining some SVD components.
   821|         0|            0|            0|  0.00%|
   822|         0|            0|            0|  0.00%|        This corresponds to the \"Broyden Rank Reduction Inverse\"
   823|         0|            0|            0|  0.00%|        algorithm described in [1]_.
   824|         0|            0|            0|  0.00%|
   825|         0|            0|            0|  0.00%|        Note that the SVD decomposition can be done by solving only a
   826|         0|            0|            0|  0.00%|        problem whose size is the effective rank of this matrix, which
   827|         0|            0|            0|  0.00%|        is viable even for large problems.
   828|         0|            0|            0|  0.00%|
   829|         0|            0|            0|  0.00%|        Parameters
   830|         0|            0|            0|  0.00%|        ----------
   831|         0|            0|            0|  0.00%|        max_rank : int
   832|         0|            0|            0|  0.00%|            Maximum rank of this matrix after reduction.
   833|         0|            0|            0|  0.00%|        to_retain : int, optional
   834|         0|            0|            0|  0.00%|            Number of SVD components to retain when reduction is done
   835|         0|            0|            0|  0.00%|            (ie. rank > max_rank). Default is ``max_rank - 2``.
   836|         0|            0|            0|  0.00%|
   837|         0|            0|            0|  0.00%|        References
   838|         0|            0|            0|  0.00%|        ----------
   839|         0|            0|            0|  0.00%|        .. [1] B.A. van der Rotten, PhD thesis,
   840|         0|            0|            0|  0.00%|           \"A limited memory Broyden method to solve high-dimensional
   841|         0|            0|            0|  0.00%|           systems of nonlinear equations\". Mathematisch Instituut,
   842|         0|            0|            0|  0.00%|           Universiteit Leiden, The Netherlands (2003).
   843|         0|            0|            0|  0.00%|
   844|         0|            0|            0|  0.00%|           https://web.archive.org/web/20161022015821/http://www.math.leidenuniv.nl/scripties/Rotten.pdf
   845|         0|            0|            0|  0.00%|
   846|         0|            0|            0|  0.00%|        """
   847|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   848|         0|            0|            0|  0.00%|            return
   849|         0|            0|            0|  0.00%|
   850|         0|            0|            0|  0.00%|        p = max_rank
   851|         0|            0|            0|  0.00%|        if to_retain is not None:
   852|         0|            0|            0|  0.00%|            q = to_retain
   853|         0|            0|            0|  0.00%|        else:
   854|         0|            0|            0|  0.00%|            q = p - 2
   855|         0|            0|            0|  0.00%|
   856|         0|            0|            0|  0.00%|        if self.cs:
   857|         0|            0|            0|  0.00%|            p = min(p, len(self.cs[0]))
   858|         0|            0|            0|  0.00%|        q = max(0, min(q, p-1))
   859|         0|            0|            0|  0.00%|
   860|         0|            0|            0|  0.00%|        m = len(self.cs)
   861|         0|            0|            0|  0.00%|        if m < p:
   862|         0|            0|            0|  0.00%|            # nothing to do
   863|         0|            0|            0|  0.00%|            return
   864|         0|            0|            0|  0.00%|
   865|         0|            0|            0|  0.00%|        C = np.array(self.cs).T
   866|         0|            0|            0|  0.00%|        D = np.array(self.ds).T
   867|         0|            0|            0|  0.00%|
   868|         0|            0|            0|  0.00%|        D, R = qr(D, mode='economic')
   869|         0|            0|            0|  0.00%|        C = dot(C, R.T.conj())
   870|         0|            0|            0|  0.00%|
   871|         0|            0|            0|  0.00%|        U, S, WH = svd(C, full_matrices=False, compute_uv=True)
   872|         0|            0|            0|  0.00%|
   873|         0|            0|            0|  0.00%|        C = dot(C, inv(WH))
   874|         0|            0|            0|  0.00%|        D = dot(D, WH.T.conj())
   875|         0|            0|            0|  0.00%|
   876|         0|            0|            0|  0.00%|        for k in range(q):
   877|         0|            0|            0|  0.00%|            self.cs[k] = C[:,k].copy()
   878|         0|            0|            0|  0.00%|            self.ds[k] = D[:,k].copy()
   879|         0|            0|            0|  0.00%|
   880|         0|            0|            0|  0.00%|        del self.cs[q:]
   881|         0|            0|            0|  0.00%|        del self.ds[q:]
   882|         0|            0|            0|  0.00%|
   883|         0|            0|            0|  0.00%|
   884|         0|            0|            0|  0.00%|_doc_parts['broyden_params'] = """
   885|         0|            0|            0|  0.00%|    alpha : float, optional
   886|         0|            0|            0|  0.00%|        Initial guess for the Jacobian is ``(-1/alpha)``.
   887|         0|            0|            0|  0.00%|    reduction_method : str or tuple, optional
   888|         0|            0|            0|  0.00%|        Method used in ensuring that the rank of the Broyden matrix
   889|         0|            0|            0|  0.00%|        stays low. Can either be a string giving the name of the method,
   890|         0|            0|            0|  0.00%|        or a tuple of the form ``(method, param1, param2, ...)``
   891|         0|            0|            0|  0.00%|        that gives the name of the method and values for additional parameters.
   892|         0|            0|            0|  0.00%|
   893|         0|            0|            0|  0.00%|        Methods available:
   894|         0|            0|            0|  0.00%|
   895|         0|            0|            0|  0.00%|            - ``restart``: drop all matrix columns. Has no extra parameters.
   896|         0|            0|            0|  0.00%|            - ``simple``: drop oldest matrix column. Has no extra parameters.
   897|         0|            0|            0|  0.00%|            - ``svd``: keep only the most significant SVD components.
   898|         0|            0|            0|  0.00%|              Takes an extra parameter, ``to_retain``, which determines the
   899|         0|            0|            0|  0.00%|              number of SVD components to retain when rank reduction is done.
   900|         0|            0|            0|  0.00%|              Default is ``max_rank - 2``.
   901|         0|            0|            0|  0.00%|
   902|         0|            0|            0|  0.00%|    max_rank : int, optional
   903|         0|            0|            0|  0.00%|        Maximum rank for the Broyden matrix.
   904|         0|            0|            0|  0.00%|        Default is infinity (i.e., no rank reduction).
   905|         0|            0|            0|  0.00%|    """.strip()
   906|         0|            0|            0|  0.00%|
   907|         0|            0|            0|  0.00%|
   908|         0|            0|            0|  0.00%|class BroydenFirst(GenericBroyden):
   909|         0|            0|            0|  0.00%|    r"""
   910|         0|            0|            0|  0.00%|    Find a root of a function, using Broyden's first Jacobian approximation.
   911|         0|            0|            0|  0.00%|
   912|         0|            0|            0|  0.00%|    This method is also known as \"Broyden's good method\".
   913|         0|            0|            0|  0.00%|
   914|         0|            0|            0|  0.00%|    Parameters
   915|         0|            0|            0|  0.00%|    ----------
   916|         0|            0|            0|  0.00%|    %(params_basic)s
   917|         0|            0|            0|  0.00%|    %(broyden_params)s
   918|         0|            0|            0|  0.00%|    %(params_extra)s
   919|         0|            0|            0|  0.00%|
   920|         0|            0|            0|  0.00%|    See Also
   921|         0|            0|            0|  0.00%|    --------
   922|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
   923|         0|            0|            0|  0.00%|           functions. See ``method=='broyden1'`` in particular.
   924|         0|            0|            0|  0.00%|
   925|         0|            0|            0|  0.00%|    Notes
   926|         0|            0|            0|  0.00%|    -----
   927|         0|            0|            0|  0.00%|    This algorithm implements the inverse Jacobian Quasi-Newton update
   928|         0|            0|            0|  0.00%|
   929|         0|            0|            0|  0.00%|    .. math:: H_+ = H + (dx - H df) dx^\dagger H / ( dx^\dagger H df)
   930|         0|            0|            0|  0.00%|
   931|         0|            0|            0|  0.00%|    which corresponds to Broyden's first Jacobian update
   932|         0|            0|            0|  0.00%|
   933|         0|            0|            0|  0.00%|    .. math:: J_+ = J + (df - J dx) dx^\dagger / dx^\dagger dx
   934|         0|            0|            0|  0.00%|
   935|         0|            0|            0|  0.00%|
   936|         0|            0|            0|  0.00%|    References
   937|         0|            0|            0|  0.00%|    ----------
   938|         0|            0|            0|  0.00%|    .. [1] B.A. van der Rotten, PhD thesis,
   939|         0|            0|            0|  0.00%|       \"A limited memory Broyden method to solve high-dimensional
   940|         0|            0|            0|  0.00%|       systems of nonlinear equations\". Mathematisch Instituut,
   941|         0|            0|            0|  0.00%|       Universiteit Leiden, The Netherlands (2003).
   942|         0|            0|            0|  0.00%|
   943|         0|            0|            0|  0.00%|       https://web.archive.org/web/20161022015821/http://www.math.leidenuniv.nl/scripties/Rotten.pdf
   944|         0|            0|            0|  0.00%|
   945|         0|            0|            0|  0.00%|    """
   946|         0|            0|            0|  0.00%|
   947|         0|            0|            0|  0.00%|    def __init__(self, alpha=None, reduction_method='restart', max_rank=None):
   948|         0|            0|            0|  0.00%|        GenericBroyden.__init__(self)
   949|         0|            0|            0|  0.00%|        self.alpha = alpha
   950|         0|            0|            0|  0.00%|        self.Gm = None
   951|         0|            0|            0|  0.00%|
   952|         0|            0|            0|  0.00%|        if max_rank is None:
   953|         0|            0|            0|  0.00%|            max_rank = np.inf
   954|         0|            0|            0|  0.00%|        self.max_rank = max_rank
   955|         0|            0|            0|  0.00%|
   956|         0|            0|            0|  0.00%|        if isinstance(reduction_method, str):
   957|         0|            0|            0|  0.00%|            reduce_params = ()
   958|         0|            0|            0|  0.00%|        else:
   959|         0|            0|            0|  0.00%|            reduce_params = reduction_method[1:]
   960|         0|            0|            0|  0.00%|            reduction_method = reduction_method[0]
   961|         0|            0|            0|  0.00%|        reduce_params = (max_rank - 1,) + reduce_params
   962|         0|            0|            0|  0.00%|
   963|         0|            0|            0|  0.00%|        if reduction_method == 'svd':
   964|         0|            0|            0|  0.00%|            self._reduce = lambda: self.Gm.svd_reduce(*reduce_params)
   965|         0|            0|            0|  0.00%|        elif reduction_method == 'simple':
   966|         0|            0|            0|  0.00%|            self._reduce = lambda: self.Gm.simple_reduce(*reduce_params)
   967|         0|            0|            0|  0.00%|        elif reduction_method == 'restart':
   968|         0|            0|            0|  0.00%|            self._reduce = lambda: self.Gm.restart_reduce(*reduce_params)
   969|         0|            0|            0|  0.00%|        else:
   970|         0|            0|            0|  0.00%|            raise ValueError("Unknown rank reduction method '%s'" %
   971|         0|            0|            0|  0.00%|                             reduction_method)
   972|         0|            0|            0|  0.00%|
   973|         0|            0|            0|  0.00%|    def setup(self, x, F, func):
   974|         0|            0|            0|  0.00%|        GenericBroyden.setup(self, x, F, func)
   975|         0|            0|            0|  0.00%|        self.Gm = LowRankMatrix(-self.alpha, self.shape[0], self.dtype)
   976|         0|            0|            0|  0.00%|
   977|         0|            0|            0|  0.00%|    def todense(self):
   978|         0|            0|            0|  0.00%|        return inv(self.Gm)
   979|         0|            0|            0|  0.00%|
   980|         0|            0|            0|  0.00%|    def solve(self, f, tol=0):
   981|         0|            0|            0|  0.00%|        r = self.Gm.matvec(f)
   982|         0|            0|            0|  0.00%|        if not np.isfinite(r).all():
   983|         0|            0|            0|  0.00%|            # singular; reset the Jacobian approximation
   984|         0|            0|            0|  0.00%|            self.setup(self.last_x, self.last_f, self.func)
   985|         0|            0|            0|  0.00%|        return self.Gm.matvec(f)
   986|         0|            0|            0|  0.00%|
   987|         0|            0|            0|  0.00%|    def matvec(self, f):
   988|         0|            0|            0|  0.00%|        return self.Gm.solve(f)
   989|         0|            0|            0|  0.00%|
   990|         0|            0|            0|  0.00%|    def rsolve(self, f, tol=0):
   991|         0|            0|            0|  0.00%|        return self.Gm.rmatvec(f)
   992|         0|            0|            0|  0.00%|
   993|         0|            0|            0|  0.00%|    def rmatvec(self, f):
   994|         0|            0|            0|  0.00%|        return self.Gm.rsolve(f)
   995|         0|            0|            0|  0.00%|
   996|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
   997|         0|            0|            0|  0.00%|        self._reduce()  # reduce first to preserve secant condition
   998|         0|            0|            0|  0.00%|
   999|         0|            0|            0|  0.00%|        v = self.Gm.rmatvec(dx)
  1000|         0|            0|            0|  0.00%|        c = dx - self.Gm.matvec(df)
  1001|         0|            0|            0|  0.00%|        d = v / vdot(df, v)
  1002|         0|            0|            0|  0.00%|
  1003|         0|            0|            0|  0.00%|        self.Gm.append(c, d)
  1004|         0|            0|            0|  0.00%|
  1005|         0|            0|            0|  0.00%|
  1006|         0|            0|            0|  0.00%|class BroydenSecond(BroydenFirst):
  1007|         0|            0|            0|  0.00%|    """
  1008|         0|            0|            0|  0.00%|    Find a root of a function, using Broyden\'s second Jacobian approximation.
  1009|         0|            0|            0|  0.00%|
  1010|         0|            0|            0|  0.00%|    This method is also known as \"Broyden's bad method\".
  1011|         0|            0|            0|  0.00%|
  1012|         0|            0|            0|  0.00%|    Parameters
  1013|         0|            0|            0|  0.00%|    ----------
  1014|         0|            0|            0|  0.00%|    %(params_basic)s
  1015|         0|            0|            0|  0.00%|    %(broyden_params)s
  1016|         0|            0|            0|  0.00%|    %(params_extra)s
  1017|         0|            0|            0|  0.00%|
  1018|         0|            0|            0|  0.00%|    See Also
  1019|         0|            0|            0|  0.00%|    --------
  1020|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1021|         0|            0|            0|  0.00%|           functions. See ``method=='broyden2'`` in particular.
  1022|         0|            0|            0|  0.00%|
  1023|         0|            0|            0|  0.00%|    Notes
  1024|         0|            0|            0|  0.00%|    -----
  1025|         0|            0|            0|  0.00%|    This algorithm implements the inverse Jacobian Quasi-Newton update
  1026|         0|            0|            0|  0.00%|
  1027|         0|            0|            0|  0.00%|    .. math:: H_+ = H + (dx - H df) df^\\dagger / ( df^\\dagger df)
  1028|         0|            0|            0|  0.00%|
  1029|         0|            0|            0|  0.00%|    corresponding to Broyden's second method.
  1030|         0|            0|            0|  0.00%|
  1031|         0|            0|            0|  0.00%|    References
  1032|         0|            0|            0|  0.00%|    ----------
  1033|         0|            0|            0|  0.00%|    .. [1] B.A. van der Rotten, PhD thesis,
  1034|         0|            0|            0|  0.00%|       \"A limited memory Broyden method to solve high-dimensional
  1035|         0|            0|            0|  0.00%|       systems of nonlinear equations\". Mathematisch Instituut,
  1036|         0|            0|            0|  0.00%|       Universiteit Leiden, The Netherlands (2003).
  1037|         0|            0|            0|  0.00%|
  1038|         0|            0|            0|  0.00%|       https://web.archive.org/web/20161022015821/http://www.math.leidenuniv.nl/scripties/Rotten.pdf
  1039|         0|            0|            0|  0.00%|
  1040|         0|            0|            0|  0.00%|    """
  1041|         0|            0|            0|  0.00%|
  1042|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
  1043|         0|            0|            0|  0.00%|        self._reduce()  # reduce first to preserve secant condition
  1044|         0|            0|            0|  0.00%|
  1045|         0|            0|            0|  0.00%|        v = df
  1046|         0|            0|            0|  0.00%|        c = dx - self.Gm.matvec(df)
  1047|         0|            0|            0|  0.00%|        d = v / df_norm**2
  1048|         0|            0|            0|  0.00%|        self.Gm.append(c, d)
  1049|         0|            0|            0|  0.00%|
  1050|         0|            0|            0|  0.00%|
  1051|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1052|         0|            0|            0|  0.00%|# Broyden-like (restricted memory)
  1053|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1054|         0|            0|            0|  0.00%|
  1055|         0|            0|            0|  0.00%|class Anderson(GenericBroyden):
  1056|         0|            0|            0|  0.00%|    """
  1057|         0|            0|            0|  0.00%|    Find a root of a function, using (extended) Anderson mixing.
  1058|         0|            0|            0|  0.00%|
  1059|         0|            0|            0|  0.00%|    The Jacobian is formed by for a 'best' solution in the space
  1060|         0|            0|            0|  0.00%|    spanned by last `M` vectors. As a result, only a MxM matrix
  1061|         0|            0|            0|  0.00%|    inversions and MxN multiplications are required. [Ey]_
  1062|         0|            0|            0|  0.00%|
  1063|         0|            0|            0|  0.00%|    Parameters
  1064|         0|            0|            0|  0.00%|    ----------
  1065|         0|            0|            0|  0.00%|    %(params_basic)s
  1066|         0|            0|            0|  0.00%|    alpha : float, optional
  1067|         0|            0|            0|  0.00%|        Initial guess for the Jacobian is (-1/alpha).
  1068|         0|            0|            0|  0.00%|    M : float, optional
  1069|         0|            0|            0|  0.00%|        Number of previous vectors to retain. Defaults to 5.
  1070|         0|            0|            0|  0.00%|    w0 : float, optional
  1071|         0|            0|            0|  0.00%|        Regularization parameter for numerical stability.
  1072|         0|            0|            0|  0.00%|        Compared to unity, good values of the order of 0.01.
  1073|         0|            0|            0|  0.00%|    %(params_extra)s
  1074|         0|            0|            0|  0.00%|
  1075|         0|            0|            0|  0.00%|    See Also
  1076|         0|            0|            0|  0.00%|    --------
  1077|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1078|         0|            0|            0|  0.00%|           functions. See ``method=='anderson'`` in particular.
  1079|         0|            0|            0|  0.00%|
  1080|         0|            0|            0|  0.00%|    References
  1081|         0|            0|            0|  0.00%|    ----------
  1082|         0|            0|            0|  0.00%|    .. [Ey] V. Eyert, J. Comp. Phys., 124, 271 (1996).
  1083|         0|            0|            0|  0.00%|
  1084|         0|            0|            0|  0.00%|    """
  1085|         0|            0|            0|  0.00%|
  1086|         0|            0|            0|  0.00%|    # Note:
  1087|         0|            0|            0|  0.00%|    #
  1088|         0|            0|            0|  0.00%|    # Anderson method maintains a rank M approximation of the inverse Jacobian,
  1089|         0|            0|            0|  0.00%|    #
  1090|         0|            0|            0|  0.00%|    #     J^-1 v ~ -v*alpha + (dX + alpha dF) A^-1 dF^H v
  1091|         0|            0|            0|  0.00%|    #     A      = W + dF^H dF
  1092|         0|            0|            0|  0.00%|    #     W      = w0^2 diag(dF^H dF)
  1093|         0|            0|            0|  0.00%|    #
  1094|         0|            0|            0|  0.00%|    # so that for w0 = 0 the secant condition applies for last M iterates, i.e.,
  1095|         0|            0|            0|  0.00%|    #
  1096|         0|            0|            0|  0.00%|    #     J^-1 df_j = dx_j
  1097|         0|            0|            0|  0.00%|    #
  1098|         0|            0|            0|  0.00%|    # for all j = 0 ... M-1.
  1099|         0|            0|            0|  0.00%|    #
  1100|         0|            0|            0|  0.00%|    # Moreover, (from Sherman-Morrison-Woodbury formula)
  1101|         0|            0|            0|  0.00%|    #
  1102|         0|            0|            0|  0.00%|    #    J v ~ [ b I - b^2 C (I + b dF^H A^-1 C)^-1 dF^H ] v
  1103|         0|            0|            0|  0.00%|    #    C   = (dX + alpha dF) A^-1
  1104|         0|            0|            0|  0.00%|    #    b   = -1/alpha
  1105|         0|            0|            0|  0.00%|    #
  1106|         0|            0|            0|  0.00%|    # and after simplification
  1107|         0|            0|            0|  0.00%|    #
  1108|         0|            0|            0|  0.00%|    #    J v ~ -v/alpha + (dX/alpha + dF) (dF^H dX - alpha W)^-1 dF^H v
  1109|         0|            0|            0|  0.00%|    #
  1110|         0|            0|            0|  0.00%|
  1111|         0|            0|            0|  0.00%|    def __init__(self, alpha=None, w0=0.01, M=5):
  1112|         0|            0|            0|  0.00%|        GenericBroyden.__init__(self)
  1113|         0|            0|            0|  0.00%|        self.alpha = alpha
  1114|         0|            0|            0|  0.00%|        self.M = M
  1115|         0|            0|            0|  0.00%|        self.dx = []
  1116|         0|            0|            0|  0.00%|        self.df = []
  1117|         0|            0|            0|  0.00%|        self.gamma = None
  1118|         0|            0|            0|  0.00%|        self.w0 = w0
  1119|         0|            0|            0|  0.00%|
  1120|         0|            0|            0|  0.00%|    def solve(self, f, tol=0):
  1121|         0|            0|            0|  0.00%|        dx = -self.alpha*f
  1122|         0|            0|            0|  0.00%|
  1123|         0|            0|            0|  0.00%|        n = len(self.dx)
  1124|         0|            0|            0|  0.00%|        if n == 0:
  1125|         0|            0|            0|  0.00%|            return dx
  1126|         0|            0|            0|  0.00%|
  1127|         0|            0|            0|  0.00%|        df_f = np.empty(n, dtype=f.dtype)
  1128|         0|            0|            0|  0.00%|        for k in range(n):
  1129|         0|            0|            0|  0.00%|            df_f[k] = vdot(self.df[k], f)
  1130|         0|            0|            0|  0.00%|
  1131|         0|            0|            0|  0.00%|        try:
  1132|         0|            0|            0|  0.00%|            gamma = solve(self.a, df_f)
  1133|         0|            0|            0|  0.00%|        except LinAlgError:
  1134|         0|            0|            0|  0.00%|            # singular; reset the Jacobian approximation
  1135|         0|            0|            0|  0.00%|            del self.dx[:]
  1136|         0|            0|            0|  0.00%|            del self.df[:]
  1137|         0|            0|            0|  0.00%|            return dx
  1138|         0|            0|            0|  0.00%|
  1139|         0|            0|            0|  0.00%|        for m in range(n):
  1140|         0|            0|            0|  0.00%|            dx += gamma[m]*(self.dx[m] + self.alpha*self.df[m])
  1141|         0|            0|            0|  0.00%|        return dx
  1142|         0|            0|            0|  0.00%|
  1143|         0|            0|            0|  0.00%|    def matvec(self, f):
  1144|         0|            0|            0|  0.00%|        dx = -f/self.alpha
  1145|         0|            0|            0|  0.00%|
  1146|         0|            0|            0|  0.00%|        n = len(self.dx)
  1147|         0|            0|            0|  0.00%|        if n == 0:
  1148|         0|            0|            0|  0.00%|            return dx
  1149|         0|            0|            0|  0.00%|
  1150|         0|            0|            0|  0.00%|        df_f = np.empty(n, dtype=f.dtype)
  1151|         0|            0|            0|  0.00%|        for k in range(n):
  1152|         0|            0|            0|  0.00%|            df_f[k] = vdot(self.df[k], f)
  1153|         0|            0|            0|  0.00%|
  1154|         0|            0|            0|  0.00%|        b = np.empty((n, n), dtype=f.dtype)
  1155|         0|            0|            0|  0.00%|        for i in range(n):
  1156|         0|            0|            0|  0.00%|            for j in range(n):
  1157|         0|            0|            0|  0.00%|                b[i,j] = vdot(self.df[i], self.dx[j])
  1158|         0|            0|            0|  0.00%|                if i == j and self.w0 != 0:
  1159|         0|            0|            0|  0.00%|                    b[i,j] -= vdot(self.df[i], self.df[i])*self.w0**2*self.alpha
  1160|         0|            0|            0|  0.00%|        gamma = solve(b, df_f)
  1161|         0|            0|            0|  0.00%|
  1162|         0|            0|            0|  0.00%|        for m in range(n):
  1163|         0|            0|            0|  0.00%|            dx += gamma[m]*(self.df[m] + self.dx[m]/self.alpha)
  1164|         0|            0|            0|  0.00%|        return dx
  1165|         0|            0|            0|  0.00%|
  1166|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
  1167|         0|            0|            0|  0.00%|        if self.M == 0:
  1168|         0|            0|            0|  0.00%|            return
  1169|         0|            0|            0|  0.00%|
  1170|         0|            0|            0|  0.00%|        self.dx.append(dx)
  1171|         0|            0|            0|  0.00%|        self.df.append(df)
  1172|         0|            0|            0|  0.00%|
  1173|         0|            0|            0|  0.00%|        while len(self.dx) > self.M:
  1174|         0|            0|            0|  0.00%|            self.dx.pop(0)
  1175|         0|            0|            0|  0.00%|            self.df.pop(0)
  1176|         0|            0|            0|  0.00%|
  1177|         0|            0|            0|  0.00%|        n = len(self.dx)
  1178|         0|            0|            0|  0.00%|        a = np.zeros((n, n), dtype=f.dtype)
  1179|         0|            0|            0|  0.00%|
  1180|         0|            0|            0|  0.00%|        for i in range(n):
  1181|         0|            0|            0|  0.00%|            for j in range(i, n):
  1182|         0|            0|            0|  0.00%|                if i == j:
  1183|         0|            0|            0|  0.00%|                    wd = self.w0**2
  1184|         0|            0|            0|  0.00%|                else:
  1185|         0|            0|            0|  0.00%|                    wd = 0
  1186|         0|            0|            0|  0.00%|                a[i,j] = (1+wd)*vdot(self.df[i], self.df[j])
  1187|         0|            0|            0|  0.00%|
  1188|         0|            0|            0|  0.00%|        a += np.triu(a, 1).T.conj()
  1189|         0|            0|            0|  0.00%|        self.a = a
  1190|         0|            0|            0|  0.00%|
  1191|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1192|         0|            0|            0|  0.00%|# Simple iterations
  1193|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1194|         0|            0|            0|  0.00%|
  1195|         0|            0|            0|  0.00%|
  1196|         0|            0|            0|  0.00%|class DiagBroyden(GenericBroyden):
  1197|         0|            0|            0|  0.00%|    """
  1198|         0|            0|            0|  0.00%|    Find a root of a function, using diagonal Broyden Jacobian approximation.
  1199|         0|            0|            0|  0.00%|
  1200|         0|            0|            0|  0.00%|    The Jacobian approximation is derived from previous iterations, by
  1201|         0|            0|            0|  0.00%|    retaining only the diagonal of Broyden matrices.
  1202|         0|            0|            0|  0.00%|
  1203|         0|            0|            0|  0.00%|    .. warning::
  1204|         0|            0|            0|  0.00%|
  1205|         0|            0|            0|  0.00%|       This algorithm may be useful for specific problems, but whether
  1206|         0|            0|            0|  0.00%|       it will work may depend strongly on the problem.
  1207|         0|            0|            0|  0.00%|
  1208|         0|            0|            0|  0.00%|    Parameters
  1209|         0|            0|            0|  0.00%|    ----------
  1210|         0|            0|            0|  0.00%|    %(params_basic)s
  1211|         0|            0|            0|  0.00%|    alpha : float, optional
  1212|         0|            0|            0|  0.00%|        Initial guess for the Jacobian is (-1/alpha).
  1213|         0|            0|            0|  0.00%|    %(params_extra)s
  1214|         0|            0|            0|  0.00%|
  1215|         0|            0|            0|  0.00%|    See Also
  1216|         0|            0|            0|  0.00%|    --------
  1217|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1218|         0|            0|            0|  0.00%|           functions. See ``method=='diagbroyden'`` in particular.
  1219|         0|            0|            0|  0.00%|    """
  1220|         0|            0|            0|  0.00%|
  1221|         0|            0|            0|  0.00%|    def __init__(self, alpha=None):
  1222|         0|            0|            0|  0.00%|        GenericBroyden.__init__(self)
  1223|         0|            0|            0|  0.00%|        self.alpha = alpha
  1224|         0|            0|            0|  0.00%|
  1225|         0|            0|            0|  0.00%|    def setup(self, x, F, func):
  1226|         0|            0|            0|  0.00%|        GenericBroyden.setup(self, x, F, func)
  1227|         0|            0|            0|  0.00%|        self.d = np.full((self.shape[0],), 1 / self.alpha, dtype=self.dtype)
  1228|         0|            0|            0|  0.00%|
  1229|         0|            0|            0|  0.00%|    def solve(self, f, tol=0):
  1230|         0|            0|            0|  0.00%|        return -f / self.d
  1231|         0|            0|            0|  0.00%|
  1232|         0|            0|            0|  0.00%|    def matvec(self, f):
  1233|         0|            0|            0|  0.00%|        return -f * self.d
  1234|         0|            0|            0|  0.00%|
  1235|         0|            0|            0|  0.00%|    def rsolve(self, f, tol=0):
  1236|         0|            0|            0|  0.00%|        return -f / self.d.conj()
  1237|         0|            0|            0|  0.00%|
  1238|         0|            0|            0|  0.00%|    def rmatvec(self, f):
  1239|         0|            0|            0|  0.00%|        return -f * self.d.conj()
  1240|         0|            0|            0|  0.00%|
  1241|         0|            0|            0|  0.00%|    def todense(self):
  1242|         0|            0|            0|  0.00%|        return np.diag(-self.d)
  1243|         0|            0|            0|  0.00%|
  1244|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
  1245|         0|            0|            0|  0.00%|        self.d -= (df + self.d*dx)*dx/dx_norm**2
  1246|         0|            0|            0|  0.00%|
  1247|         0|            0|            0|  0.00%|
  1248|         0|            0|            0|  0.00%|class LinearMixing(GenericBroyden):
  1249|         0|            0|            0|  0.00%|    """
  1250|         0|            0|            0|  0.00%|    Find a root of a function, using a scalar Jacobian approximation.
  1251|         0|            0|            0|  0.00%|
  1252|         0|            0|            0|  0.00%|    .. warning::
  1253|         0|            0|            0|  0.00%|
  1254|         0|            0|            0|  0.00%|       This algorithm may be useful for specific problems, but whether
  1255|         0|            0|            0|  0.00%|       it will work may depend strongly on the problem.
  1256|         0|            0|            0|  0.00%|
  1257|         0|            0|            0|  0.00%|    Parameters
  1258|         0|            0|            0|  0.00%|    ----------
  1259|         0|            0|            0|  0.00%|    %(params_basic)s
  1260|         0|            0|            0|  0.00%|    alpha : float, optional
  1261|         0|            0|            0|  0.00%|        The Jacobian approximation is (-1/alpha).
  1262|         0|            0|            0|  0.00%|    %(params_extra)s
  1263|         0|            0|            0|  0.00%|
  1264|         0|            0|            0|  0.00%|    See Also
  1265|         0|            0|            0|  0.00%|    --------
  1266|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1267|         0|            0|            0|  0.00%|           functions. See ``method=='linearmixing'`` in particular.
  1268|         0|            0|            0|  0.00%|
  1269|         0|            0|            0|  0.00%|    """
  1270|         0|            0|            0|  0.00%|
  1271|         0|            0|            0|  0.00%|    def __init__(self, alpha=None):
  1272|         0|            0|            0|  0.00%|        GenericBroyden.__init__(self)
  1273|         0|            0|            0|  0.00%|        self.alpha = alpha
  1274|         0|            0|            0|  0.00%|
  1275|         0|            0|            0|  0.00%|    def solve(self, f, tol=0):
  1276|         0|            0|            0|  0.00%|        return -f*self.alpha
  1277|         0|            0|            0|  0.00%|
  1278|         0|            0|            0|  0.00%|    def matvec(self, f):
  1279|         0|            0|            0|  0.00%|        return -f/self.alpha
  1280|         0|            0|            0|  0.00%|
  1281|         0|            0|            0|  0.00%|    def rsolve(self, f, tol=0):
  1282|         0|            0|            0|  0.00%|        return -f*np.conj(self.alpha)
  1283|         0|            0|            0|  0.00%|
  1284|         0|            0|            0|  0.00%|    def rmatvec(self, f):
  1285|         0|            0|            0|  0.00%|        return -f/np.conj(self.alpha)
  1286|         0|            0|            0|  0.00%|
  1287|         0|            0|            0|  0.00%|    def todense(self):
  1288|         0|            0|            0|  0.00%|        return np.diag(np.full(self.shape[0], -1/self.alpha))
  1289|         0|            0|            0|  0.00%|
  1290|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
  1291|         0|            0|            0|  0.00%|        pass
  1292|         0|            0|            0|  0.00%|
  1293|         0|            0|            0|  0.00%|
  1294|         0|            0|            0|  0.00%|class ExcitingMixing(GenericBroyden):
  1295|         0|            0|            0|  0.00%|    """
  1296|         0|            0|            0|  0.00%|    Find a root of a function, using a tuned diagonal Jacobian approximation.
  1297|         0|            0|            0|  0.00%|
  1298|         0|            0|            0|  0.00%|    The Jacobian matrix is diagonal and is tuned on each iteration.
  1299|         0|            0|            0|  0.00%|
  1300|         0|            0|            0|  0.00%|    .. warning::
  1301|         0|            0|            0|  0.00%|
  1302|         0|            0|            0|  0.00%|       This algorithm may be useful for specific problems, but whether
  1303|         0|            0|            0|  0.00%|       it will work may depend strongly on the problem.
  1304|         0|            0|            0|  0.00%|
  1305|         0|            0|            0|  0.00%|    See Also
  1306|         0|            0|            0|  0.00%|    --------
  1307|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1308|         0|            0|            0|  0.00%|           functions. See ``method=='excitingmixing'`` in particular.
  1309|         0|            0|            0|  0.00%|
  1310|         0|            0|            0|  0.00%|    Parameters
  1311|         0|            0|            0|  0.00%|    ----------
  1312|         0|            0|            0|  0.00%|    %(params_basic)s
  1313|         0|            0|            0|  0.00%|    alpha : float, optional
  1314|         0|            0|            0|  0.00%|        Initial Jacobian approximation is (-1/alpha).
  1315|         0|            0|            0|  0.00%|    alphamax : float, optional
  1316|         0|            0|            0|  0.00%|        The entries of the diagonal Jacobian are kept in the range
  1317|         0|            0|            0|  0.00%|        ``[alpha, alphamax]``.
  1318|         0|            0|            0|  0.00%|    %(params_extra)s
  1319|         0|            0|            0|  0.00%|    """
  1320|         0|            0|            0|  0.00%|
  1321|         0|            0|            0|  0.00%|    def __init__(self, alpha=None, alphamax=1.0):
  1322|         0|            0|            0|  0.00%|        GenericBroyden.__init__(self)
  1323|         0|            0|            0|  0.00%|        self.alpha = alpha
  1324|         0|            0|            0|  0.00%|        self.alphamax = alphamax
  1325|         0|            0|            0|  0.00%|        self.beta = None
  1326|         0|            0|            0|  0.00%|
  1327|         0|            0|            0|  0.00%|    def setup(self, x, F, func):
  1328|         0|            0|            0|  0.00%|        GenericBroyden.setup(self, x, F, func)
  1329|         0|            0|            0|  0.00%|        self.beta = np.full((self.shape[0],), self.alpha, dtype=self.dtype)
  1330|         0|            0|            0|  0.00%|
  1331|         0|            0|            0|  0.00%|    def solve(self, f, tol=0):
  1332|         0|            0|            0|  0.00%|        return -f*self.beta
  1333|         0|            0|            0|  0.00%|
  1334|         0|            0|            0|  0.00%|    def matvec(self, f):
  1335|         0|            0|            0|  0.00%|        return -f/self.beta
  1336|         0|            0|            0|  0.00%|
  1337|         0|            0|            0|  0.00%|    def rsolve(self, f, tol=0):
  1338|         0|            0|            0|  0.00%|        return -f*self.beta.conj()
  1339|         0|            0|            0|  0.00%|
  1340|         0|            0|            0|  0.00%|    def rmatvec(self, f):
  1341|         0|            0|            0|  0.00%|        return -f/self.beta.conj()
  1342|         0|            0|            0|  0.00%|
  1343|         0|            0|            0|  0.00%|    def todense(self):
  1344|         0|            0|            0|  0.00%|        return np.diag(-1/self.beta)
  1345|         0|            0|            0|  0.00%|
  1346|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
  1347|         0|            0|            0|  0.00%|        incr = f*self.last_f > 0
  1348|         0|            0|            0|  0.00%|        self.beta[incr] += self.alpha
  1349|         0|            0|            0|  0.00%|        self.beta[~incr] = self.alpha
  1350|         0|            0|            0|  0.00%|        np.clip(self.beta, 0, self.alphamax, out=self.beta)
  1351|         0|            0|            0|  0.00%|
  1352|         0|            0|            0|  0.00%|
  1353|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1354|         0|            0|            0|  0.00%|# Iterative/Krylov approximated Jacobians
  1355|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1356|         0|            0|            0|  0.00%|
  1357|         0|            0|            0|  0.00%|class KrylovJacobian(Jacobian):
  1358|         0|            0|            0|  0.00%|    r"""
  1359|         0|            0|            0|  0.00%|    Find a root of a function, using Krylov approximation for inverse Jacobian.
  1360|         0|            0|            0|  0.00%|
  1361|         0|            0|            0|  0.00%|    This method is suitable for solving large-scale problems.
  1362|         0|            0|            0|  0.00%|
  1363|         0|            0|            0|  0.00%|    Parameters
  1364|         0|            0|            0|  0.00%|    ----------
  1365|         0|            0|            0|  0.00%|    %(params_basic)s
  1366|         0|            0|            0|  0.00%|    rdiff : float, optional
  1367|         0|            0|            0|  0.00%|        Relative step size to use in numerical differentiation.
  1368|         0|            0|            0|  0.00%|    method : {'lgmres', 'gmres', 'bicgstab', 'cgs', 'minres'} or function
  1369|         0|            0|            0|  0.00%|        Krylov method to use to approximate the Jacobian.
  1370|         0|            0|            0|  0.00%|        Can be a string, or a function implementing the same interface as
  1371|         0|            0|            0|  0.00%|        the iterative solvers in `scipy.sparse.linalg`.
  1372|         0|            0|            0|  0.00%|
  1373|         0|            0|            0|  0.00%|        The default is `scipy.sparse.linalg.lgmres`.
  1374|         0|            0|            0|  0.00%|    inner_maxiter : int, optional
  1375|         0|            0|            0|  0.00%|        Parameter to pass to the "inner" Krylov solver: maximum number of
  1376|         0|            0|            0|  0.00%|        iterations. Iteration will stop after maxiter steps even if the
  1377|         0|            0|            0|  0.00%|        specified tolerance has not been achieved.
  1378|         0|            0|            0|  0.00%|    inner_M : LinearOperator or InverseJacobian
  1379|         0|            0|            0|  0.00%|        Preconditioner for the inner Krylov iteration.
  1380|         0|            0|            0|  0.00%|        Note that you can use also inverse Jacobians as (adaptive)
  1381|         0|            0|            0|  0.00%|        preconditioners. For example,
  1382|         0|            0|            0|  0.00%|
  1383|         0|            0|            0|  0.00%|        >>> from scipy.optimize.nonlin import BroydenFirst, KrylovJacobian
  1384|         0|            0|            0|  0.00%|        >>> from scipy.optimize.nonlin import InverseJacobian
  1385|         0|            0|            0|  0.00%|        >>> jac = BroydenFirst()
  1386|         0|            0|            0|  0.00%|        >>> kjac = KrylovJacobian(inner_M=InverseJacobian(jac))
  1387|         0|            0|            0|  0.00%|
  1388|         0|            0|            0|  0.00%|        If the preconditioner has a method named 'update', it will be called
  1389|         0|            0|            0|  0.00%|        as ``update(x, f)`` after each nonlinear step, with ``x`` giving
  1390|         0|            0|            0|  0.00%|        the current point, and ``f`` the current function value.
  1391|         0|            0|            0|  0.00%|    outer_k : int, optional
  1392|         0|            0|            0|  0.00%|        Size of the subspace kept across LGMRES nonlinear iterations.
  1393|         0|            0|            0|  0.00%|        See `scipy.sparse.linalg.lgmres` for details.
  1394|         0|            0|            0|  0.00%|    inner_kwargs : kwargs
  1395|         0|            0|            0|  0.00%|        Keyword parameters for the "inner" Krylov solver
  1396|         0|            0|            0|  0.00%|        (defined with `method`). Parameter names must start with
  1397|         0|            0|            0|  0.00%|        the `inner_` prefix which will be stripped before passing on
  1398|         0|            0|            0|  0.00%|        the inner method. See, e.g., `scipy.sparse.linalg.gmres` for details.
  1399|         0|            0|            0|  0.00%|    %(params_extra)s
  1400|         0|            0|            0|  0.00%|
  1401|         0|            0|            0|  0.00%|    See Also
  1402|         0|            0|            0|  0.00%|    --------
  1403|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1404|         0|            0|            0|  0.00%|           functions. See ``method=='krylov'`` in particular.
  1405|         0|            0|            0|  0.00%|    scipy.sparse.linalg.gmres
  1406|         0|            0|            0|  0.00%|    scipy.sparse.linalg.lgmres
  1407|         0|            0|            0|  0.00%|
  1408|         0|            0|            0|  0.00%|    Notes
  1409|         0|            0|            0|  0.00%|    -----
  1410|         0|            0|            0|  0.00%|    This function implements a Newton-Krylov solver. The basic idea is
  1411|         0|            0|            0|  0.00%|    to compute the inverse of the Jacobian with an iterative Krylov
  1412|         0|            0|            0|  0.00%|    method. These methods require only evaluating the Jacobian-vector
  1413|         0|            0|            0|  0.00%|    products, which are conveniently approximated by a finite difference:
  1414|         0|            0|            0|  0.00%|
  1415|         0|            0|            0|  0.00%|    .. math:: J v \approx (f(x + \omega*v/|v|) - f(x)) / \omega
  1416|         0|            0|            0|  0.00%|
  1417|         0|            0|            0|  0.00%|    Due to the use of iterative matrix inverses, these methods can
  1418|         0|            0|            0|  0.00%|    deal with large nonlinear problems.
  1419|         0|            0|            0|  0.00%|
  1420|         0|            0|            0|  0.00%|    SciPy's `scipy.sparse.linalg` module offers a selection of Krylov
  1421|         0|            0|            0|  0.00%|    solvers to choose from. The default here is `lgmres`, which is a
  1422|         0|            0|            0|  0.00%|    variant of restarted GMRES iteration that reuses some of the
  1423|         0|            0|            0|  0.00%|    information obtained in the previous Newton steps to invert
  1424|         0|            0|            0|  0.00%|    Jacobians in subsequent steps.
  1425|         0|            0|            0|  0.00%|
  1426|         0|            0|            0|  0.00%|    For a review on Newton-Krylov methods, see for example [1]_,
  1427|         0|            0|            0|  0.00%|    and for the LGMRES sparse inverse method, see [2]_.
  1428|         0|            0|            0|  0.00%|
  1429|         0|            0|            0|  0.00%|    References
  1430|         0|            0|            0|  0.00%|    ----------
  1431|         0|            0|            0|  0.00%|    .. [1] D.A. Knoll and D.E. Keyes, J. Comp. Phys. 193, 357 (2004).
  1432|         0|            0|            0|  0.00%|           :doi:`10.1016/j.jcp.2003.08.010`
  1433|         0|            0|            0|  0.00%|    .. [2] A.H. Baker and E.R. Jessup and T. Manteuffel,
  1434|         0|            0|            0|  0.00%|           SIAM J. Matrix Anal. Appl. 26, 962 (2005).
  1435|         0|            0|            0|  0.00%|           :doi:`10.1137/S0895479803422014`
  1436|         0|            0|            0|  0.00%|
  1437|         0|            0|            0|  0.00%|    """
  1438|         0|            0|            0|  0.00%|
  1439|         0|            0|            0|  0.00%|    def __init__(self, rdiff=None, method='lgmres', inner_maxiter=20,
  1440|         0|            0|            0|  0.00%|                 inner_M=None, outer_k=10, **kw):
  1441|         0|            0|            0|  0.00%|        self.preconditioner = inner_M
  1442|         0|            0|            0|  0.00%|        self.rdiff = rdiff
  1443|         0|            0|            0|  0.00%|        self.method = dict(
  1444|         0|            0|            0|  0.00%|            bicgstab=scipy.sparse.linalg.bicgstab,
  1445|         0|            0|            0|  0.00%|            gmres=scipy.sparse.linalg.gmres,
  1446|         0|            0|            0|  0.00%|            lgmres=scipy.sparse.linalg.lgmres,
  1447|         0|            0|            0|  0.00%|            cgs=scipy.sparse.linalg.cgs,
  1448|         0|            0|            0|  0.00%|            minres=scipy.sparse.linalg.minres,
  1449|         0|            0|            0|  0.00%|            ).get(method, method)
  1450|         0|            0|            0|  0.00%|
  1451|         0|            0|            0|  0.00%|        self.method_kw = dict(maxiter=inner_maxiter, M=self.preconditioner)
  1452|         0|            0|            0|  0.00%|
  1453|         0|            0|            0|  0.00%|        if self.method is scipy.sparse.linalg.gmres:
  1454|         0|            0|            0|  0.00%|            # Replace GMRES's outer iteration with Newton steps
  1455|         0|            0|            0|  0.00%|            self.method_kw['restrt'] = inner_maxiter
  1456|         0|            0|            0|  0.00%|            self.method_kw['maxiter'] = 1
  1457|         0|            0|            0|  0.00%|            self.method_kw.setdefault('atol', 0)
  1458|         0|            0|            0|  0.00%|        elif self.method is scipy.sparse.linalg.gcrotmk:
  1459|         0|            0|            0|  0.00%|            self.method_kw.setdefault('atol', 0)
  1460|         0|            0|            0|  0.00%|        elif self.method is scipy.sparse.linalg.lgmres:
  1461|         0|            0|            0|  0.00%|            self.method_kw['outer_k'] = outer_k
  1462|         0|            0|            0|  0.00%|            # Replace LGMRES's outer iteration with Newton steps
  1463|         0|            0|            0|  0.00%|            self.method_kw['maxiter'] = 1
  1464|         0|            0|            0|  0.00%|            # Carry LGMRES's `outer_v` vectors across nonlinear iterations
  1465|         0|            0|            0|  0.00%|            self.method_kw.setdefault('outer_v', [])
  1466|         0|            0|            0|  0.00%|            self.method_kw.setdefault('prepend_outer_v', True)
  1467|         0|            0|            0|  0.00%|            # But don't carry the corresponding Jacobian*v products, in case
  1468|         0|            0|            0|  0.00%|            # the Jacobian changes a lot in the nonlinear step
  1469|         0|            0|            0|  0.00%|            #
  1470|         0|            0|            0|  0.00%|            # XXX: some trust-region inspired ideas might be more efficient...
  1471|         0|            0|            0|  0.00%|            #      See e.g., Brown & Saad. But needs to be implemented separately
  1472|         0|            0|            0|  0.00%|            #      since it's not an inexact Newton method.
  1473|         0|            0|            0|  0.00%|            self.method_kw.setdefault('store_outer_Av', False)
  1474|         0|            0|            0|  0.00%|            self.method_kw.setdefault('atol', 0)
  1475|         0|            0|            0|  0.00%|
  1476|         0|            0|            0|  0.00%|        for key, value in kw.items():
  1477|         0|            0|            0|  0.00%|            if not key.startswith('inner_'):
  1478|         0|            0|            0|  0.00%|                raise ValueError("Unknown parameter %s" % key)
  1479|         0|            0|            0|  0.00%|            self.method_kw[key[6:]] = value
  1480|         0|            0|            0|  0.00%|
  1481|         0|            0|            0|  0.00%|    def _update_diff_step(self):
  1482|         0|            0|            0|  0.00%|        mx = abs(self.x0).max()
  1483|         0|            0|            0|  0.00%|        mf = abs(self.f0).max()
  1484|         0|            0|            0|  0.00%|        self.omega = self.rdiff * max(1, mx) / max(1, mf)
  1485|         0|            0|            0|  0.00%|
  1486|         0|            0|            0|  0.00%|    def matvec(self, v):
  1487|         0|            0|            0|  0.00%|        nv = norm(v)
  1488|         0|            0|            0|  0.00%|        if nv == 0:
  1489|         0|            0|            0|  0.00%|            return 0*v
  1490|         0|            0|            0|  0.00%|        sc = self.omega / nv
  1491|         0|            0|            0|  0.00%|        r = (self.func(self.x0 + sc*v) - self.f0) / sc
  1492|         0|            0|            0|  0.00%|        if not np.all(np.isfinite(r)) and np.all(np.isfinite(v)):
  1493|         0|            0|            0|  0.00%|            raise ValueError('Function returned non-finite results')
  1494|         0|            0|            0|  0.00%|        return r
  1495|         0|            0|            0|  0.00%|
  1496|         0|            0|            0|  0.00%|    def solve(self, rhs, tol=0):
  1497|         0|            0|            0|  0.00%|        if 'tol' in self.method_kw:
  1498|         0|            0|            0|  0.00%|            sol, info = self.method(self.op, rhs, **self.method_kw)
  1499|         0|            0|            0|  0.00%|        else:
  1500|         0|            0|            0|  0.00%|            sol, info = self.method(self.op, rhs, tol=tol, **self.method_kw)
  1501|         0|            0|            0|  0.00%|        return sol
  1502|         0|            0|            0|  0.00%|
  1503|         0|            0|            0|  0.00%|    def update(self, x, f):
  1504|         0|            0|            0|  0.00%|        self.x0 = x
  1505|         0|            0|            0|  0.00%|        self.f0 = f
  1506|         0|            0|            0|  0.00%|        self._update_diff_step()
  1507|         0|            0|            0|  0.00%|
  1508|         0|            0|            0|  0.00%|        # Update also the preconditioner, if possible
  1509|         0|            0|            0|  0.00%|        if self.preconditioner is not None:
  1510|         0|            0|            0|  0.00%|            if hasattr(self.preconditioner, 'update'):
  1511|         0|            0|            0|  0.00%|                self.preconditioner.update(x, f)
  1512|         0|            0|            0|  0.00%|
  1513|         0|            0|            0|  0.00%|    def setup(self, x, f, func):
  1514|         0|            0|            0|  0.00%|        Jacobian.setup(self, x, f, func)
  1515|         0|            0|            0|  0.00%|        self.x0 = x
  1516|         0|            0|            0|  0.00%|        self.f0 = f
  1517|         0|            0|            0|  0.00%|        self.op = scipy.sparse.linalg.aslinearoperator(self)
  1518|         0|            0|            0|  0.00%|
  1519|         0|            0|            0|  0.00%|        if self.rdiff is None:
  1520|         0|            0|            0|  0.00%|            self.rdiff = np.finfo(x.dtype).eps ** (1./2)
  1521|         0|            0|            0|  0.00%|
  1522|         0|            0|            0|  0.00%|        self._update_diff_step()
  1523|         0|            0|            0|  0.00%|
  1524|         0|            0|            0|  0.00%|        # Setup also the preconditioner, if possible
  1525|         0|            0|            0|  0.00%|        if self.preconditioner is not None:
  1526|         0|            0|            0|  0.00%|            if hasattr(self.preconditioner, 'setup'):
  1527|         0|            0|            0|  0.00%|                self.preconditioner.setup(x, f, func)
  1528|         0|            0|            0|  0.00%|
  1529|         0|            0|            0|  0.00%|
  1530|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1531|         0|            0|            0|  0.00%|# Wrapper functions
  1532|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1533|         0|            0|            0|  0.00%|
  1534|         0|            0|            0|  0.00%|def _nonlin_wrapper(name, jac):
  1535|         0|            0|            0|  0.00%|    """
  1536|         0|            0|            0|  0.00%|    Construct a solver wrapper with given name and Jacobian approx.
  1537|         0|            0|            0|  0.00%|
  1538|         0|            0|            0|  0.00%|    It inspects the keyword arguments of ``jac.__init__``, and allows to
  1539|         0|            0|            0|  0.00%|    use the same arguments in the wrapper function, in addition to the
  1540|         0|            0|            0|  0.00%|    keyword arguments of `nonlin_solve`
  1541|         0|            0|            0|  0.00%|
  1542|         0|            0|            0|  0.00%|    """
  1543|         0|            0|            0|  0.00%|    signature = _getfullargspec(jac.__init__)
  1544|         0|            0|            0|  0.00%|    args, varargs, varkw, defaults, kwonlyargs, kwdefaults, _ = signature
  1545|         0|            0|            0|  0.00%|    kwargs = list(zip(args[-len(defaults):], defaults))
  1546|         0|            0|            0|  0.00%|    kw_str = ", ".join(["%s=%r" % (k, v) for k, v in kwargs])
  1547|         0|            0|            0|  0.00%|    if kw_str:
  1548|         0|            0|            0|  0.00%|        kw_str = ", " + kw_str
  1549|         0|            0|            0|  0.00%|    kwkw_str = ", ".join(["%s=%s" % (k, k) for k, v in kwargs])
  1550|         0|            0|            0|  0.00%|    if kwkw_str:
  1551|         0|            0|            0|  0.00%|        kwkw_str = kwkw_str + ", "
  1552|         0|            0|            0|  0.00%|    if kwonlyargs:
  1553|         0|            0|            0|  0.00%|        raise ValueError('Unexpected signature %s' % signature)
  1554|         0|            0|            0|  0.00%|
  1555|         0|            0|            0|  0.00%|    # Construct the wrapper function so that its keyword arguments
  1556|         0|            0|            0|  0.00%|    # are visible in pydoc.help etc.
  1557|         0|            0|            0|  0.00%|    wrapper = """
  1558|         0|            0|            0|  0.00%|def %(name)s(F, xin, iter=None %(kw)s, verbose=False, maxiter=None,
  1559|         0|            0|            0|  0.00%|             f_tol=None, f_rtol=None, x_tol=None, x_rtol=None,
  1560|         0|            0|            0|  0.00%|             tol_norm=None, line_search='armijo', callback=None, **kw):
  1561|         0|            0|            0|  0.00%|    jac = %(jac)s(%(kwkw)s **kw)
  1562|         0|            0|            0|  0.00%|    return nonlin_solve(F, xin, jac, iter, verbose, maxiter,
  1563|         0|            0|            0|  0.00%|                        f_tol, f_rtol, x_tol, x_rtol, tol_norm, line_search,
  1564|         0|            0|            0|  0.00%|                        callback)
  1565|         0|            0|            0|  0.00%|"""
  1566|         0|            0|            0|  0.00%|
  1567|         0|            0|            0|  0.00%|    wrapper = wrapper % dict(name=name, kw=kw_str, jac=jac.__name__,
  1568|         0|            0|            0|  0.00%|                             kwkw=kwkw_str)
  1569|         0|            0|            0|  0.00%|    ns = {}
  1570|         0|            0|            0|  0.00%|    ns.update(globals())
  1571|         0|            0|            0|  0.00%|    exec(wrapper, ns)
  1572|         0|            0|            0|  0.00%|    func = ns[name]
  1573|         0|            0|            0|  0.00%|    func.__doc__ = jac.__doc__
  1574|         0|            0|            0|  0.00%|    _set_doc(func)
  1575|         0|            0|            0|  0.00%|    return func
  1576|         0|            0|            0|  0.00%|
  1577|         0|            0|            0|  0.00%|
  1578|         0|            0|            0|  0.00%|broyden1 = _nonlin_wrapper('broyden1', BroydenFirst)
  1579|         0|            0|            0|  0.00%|broyden2 = _nonlin_wrapper('broyden2', BroydenSecond)
  1580|         0|            0|            0|  0.00%|anderson = _nonlin_wrapper('anderson', Anderson)
  1581|         0|            0|            0|  0.00%|linearmixing = _nonlin_wrapper('linearmixing', LinearMixing)
  1582|         0|            0|            0|  0.00%|diagbroyden = _nonlin_wrapper('diagbroyden', DiagBroyden)
  1583|         0|            0|            0|  0.00%|excitingmixing = _nonlin_wrapper('excitingmixing', ExcitingMixing)
  1584|         0|            0|            0|  0.00%|newton_krylov = _nonlin_wrapper('newton_krylov', KrylovJacobian)
File: <string>_37
File duration: 2.76566e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.76566e-05|  1.38283e-05|  0.00%|
File: <string>_7
File duration: 2.74181e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.74181e-05|  1.37091e-05|  0.00%|
File: <string>_51
File duration: 2.71797e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.71797e-05|  1.35899e-05|  0.00%|
File: <string>_295
File duration: 2.67029e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.67029e-05|  1.33514e-05|  0.00%|
File: <string>_334
File duration: 2.67029e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.67029e-05|  1.33514e-05|  0.00%|
File: <string>_341
File duration: 2.64645e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.64645e-05|  1.32322e-05|  0.00%|
File: <string>_84
File duration: 2.64645e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.64645e-05|  1.32322e-05|  0.00%|
File: <string>_30
File duration: 2.64645e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.64645e-05|  1.32322e-05|  0.00%|
File: <string>_33
File duration: 2.6226e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|   2.6226e-05|   1.3113e-05|  0.00%|
File: <string>_277
File duration: 2.6226e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|   2.6226e-05|   1.3113e-05|  0.00%|
File: <string>_45
File duration: 2.57492e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.57492e-05|  1.28746e-05|  0.00%|
File: <string>_342
File duration: 2.57492e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.57492e-05|  1.28746e-05|  0.00%|
File: <string>_11
File duration: 2.57492e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.57492e-05|  1.28746e-05|  0.00%|
File: <string>_157
File duration: 2.55108e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|r"""
     2|         1|   1.0252e-05|   1.0252e-05|  0.00%|
     3|         0|            0|            0|  0.00%|Nonlinear solvers
     4|         1|  1.52588e-05|  1.52588e-05|  0.00%|-----------------
     5|         0|            0|            0|  0.00%|
     6|         0|            0|            0|  0.00%|.. currentmodule:: scipy.optimize
     7|         0|            0|            0|  0.00%|
     8|         0|            0|            0|  0.00%|This is a collection of general-purpose nonlinear multidimensional
     9|         0|            0|            0|  0.00%|solvers. These solvers find *x* for which *F(x) = 0*. Both *x*
    10|         0|            0|            0|  0.00%|and *F* can be multidimensional.
    11|         0|            0|            0|  0.00%|
    12|         0|            0|            0|  0.00%|Routines
    13|         0|            0|            0|  0.00%|~~~~~~~~
    14|         0|            0|            0|  0.00%|
    15|         0|            0|            0|  0.00%|Large-scale nonlinear solvers:
    16|         0|            0|            0|  0.00%|
    17|         0|            0|            0|  0.00%|.. autosummary::
    18|         0|            0|            0|  0.00%|
    19|         0|            0|            0|  0.00%|   newton_krylov
    20|         0|            0|            0|  0.00%|   anderson
    21|         0|            0|            0|  0.00%|
    22|         0|            0|            0|  0.00%|General nonlinear solvers:
    23|         0|            0|            0|  0.00%|
    24|         0|            0|            0|  0.00%|.. autosummary::
    25|         0|            0|            0|  0.00%|
    26|         0|            0|            0|  0.00%|   broyden1
    27|         0|            0|            0|  0.00%|   broyden2
    28|         0|            0|            0|  0.00%|
    29|         0|            0|            0|  0.00%|Simple iterations:
    30|         0|            0|            0|  0.00%|
    31|         0|            0|            0|  0.00%|.. autosummary::
    32|         0|            0|            0|  0.00%|
    33|         0|            0|            0|  0.00%|   excitingmixing
    34|         0|            0|            0|  0.00%|   linearmixing
    35|         0|            0|            0|  0.00%|   diagbroyden
    36|         0|            0|            0|  0.00%|
    37|         0|            0|            0|  0.00%|
    38|         0|            0|            0|  0.00%|Examples
    39|         0|            0|            0|  0.00%|~~~~~~~~
    40|         0|            0|            0|  0.00%|
    41|         0|            0|            0|  0.00%|**Small problem**
    42|         0|            0|            0|  0.00%|
    43|         0|            0|            0|  0.00%|>>> def F(x):
    44|         0|            0|            0|  0.00%|...    return np.cos(x) + x[::-1] - [1, 2, 3, 4]
    45|         0|            0|            0|  0.00%|>>> import scipy.optimize
    46|         0|            0|            0|  0.00%|>>> x = scipy.optimize.broyden1(F, [1,1,1,1], f_tol=1e-14)
    47|         0|            0|            0|  0.00%|>>> x
    48|         0|            0|            0|  0.00%|array([ 4.04674914,  3.91158389,  2.71791677,  1.61756251])
    49|         0|            0|            0|  0.00%|>>> np.cos(x) + x[::-1]
    50|         0|            0|            0|  0.00%|array([ 1.,  2.,  3.,  4.])
    51|         0|            0|            0|  0.00%|
    52|         0|            0|            0|  0.00%|
    53|         0|            0|            0|  0.00%|**Large problem**
    54|         0|            0|            0|  0.00%|
    55|         0|            0|            0|  0.00%|Suppose that we needed to solve the following integrodifferential
    56|         0|            0|            0|  0.00%|equation on the square :math:`[0,1]\times[0,1]`:
    57|         0|            0|            0|  0.00%|
    58|         0|            0|            0|  0.00%|.. math::
    59|         0|            0|            0|  0.00%|
    60|         0|            0|            0|  0.00%|   \nabla^2 P = 10 \left(\int_0^1\int_0^1\cosh(P)\,dx\,dy\right)^2
    61|         0|            0|            0|  0.00%|
    62|         0|            0|            0|  0.00%|with :math:`P(x,1) = 1` and :math:`P=0` elsewhere on the boundary of
    63|         0|            0|            0|  0.00%|the square.
    64|         0|            0|            0|  0.00%|
    65|         0|            0|            0|  0.00%|The solution can be found using the `newton_krylov` solver:
    66|         0|            0|            0|  0.00%|
    67|         0|            0|            0|  0.00%|.. plot::
    68|         0|            0|            0|  0.00%|
    69|         0|            0|            0|  0.00%|   import numpy as np
    70|         0|            0|            0|  0.00%|   from scipy.optimize import newton_krylov
    71|         0|            0|            0|  0.00%|   from numpy import cosh, zeros_like, mgrid, zeros
    72|         0|            0|            0|  0.00%|
    73|         0|            0|            0|  0.00%|   # parameters
    74|         0|            0|            0|  0.00%|   nx, ny = 75, 75
    75|         0|            0|            0|  0.00%|   hx, hy = 1./(nx-1), 1./(ny-1)
    76|         0|            0|            0|  0.00%|
    77|         0|            0|            0|  0.00%|   P_left, P_right = 0, 0
    78|         0|            0|            0|  0.00%|   P_top, P_bottom = 1, 0
    79|         0|            0|            0|  0.00%|
    80|         0|            0|            0|  0.00%|   def residual(P):
    81|         0|            0|            0|  0.00%|       d2x = zeros_like(P)
    82|         0|            0|            0|  0.00%|       d2y = zeros_like(P)
    83|         0|            0|            0|  0.00%|
    84|         0|            0|            0|  0.00%|       d2x[1:-1] = (P[2:]   - 2*P[1:-1] + P[:-2]) / hx/hx
    85|         0|            0|            0|  0.00%|       d2x[0]    = (P[1]    - 2*P[0]    + P_left)/hx/hx
    86|         0|            0|            0|  0.00%|       d2x[-1]   = (P_right - 2*P[-1]   + P[-2])/hx/hx
    87|         0|            0|            0|  0.00%|
    88|         0|            0|            0|  0.00%|       d2y[:,1:-1] = (P[:,2:] - 2*P[:,1:-1] + P[:,:-2])/hy/hy
    89|         0|            0|            0|  0.00%|       d2y[:,0]    = (P[:,1]  - 2*P[:,0]    + P_bottom)/hy/hy
    90|         0|            0|            0|  0.00%|       d2y[:,-1]   = (P_top   - 2*P[:,-1]   + P[:,-2])/hy/hy
    91|         0|            0|            0|  0.00%|
    92|         0|            0|            0|  0.00%|       return d2x + d2y - 10*cosh(P).mean()**2
    93|         0|            0|            0|  0.00%|
    94|         0|            0|            0|  0.00%|   # solve
    95|         0|            0|            0|  0.00%|   guess = zeros((nx, ny), float)
    96|         0|            0|            0|  0.00%|   sol = newton_krylov(residual, guess, method='lgmres', verbose=1)
    97|         0|            0|            0|  0.00%|   print('Residual: %g' % abs(residual(sol)).max())
    98|         0|            0|            0|  0.00%|
    99|         0|            0|            0|  0.00%|   # visualize
   100|         0|            0|            0|  0.00%|   import matplotlib.pyplot as plt
   101|         0|            0|            0|  0.00%|   x, y = mgrid[0:1:(nx*1j), 0:1:(ny*1j)]
   102|         0|            0|            0|  0.00%|   plt.pcolormesh(x, y, sol, shading='gouraud')
   103|         0|            0|            0|  0.00%|   plt.colorbar()
   104|         0|            0|            0|  0.00%|   plt.show()
   105|         0|            0|            0|  0.00%|
   106|         0|            0|            0|  0.00%|"""
   107|         0|            0|            0|  0.00%|# Copyright (C) 2009, Pauli Virtanen <pav@iki.fi>
   108|         0|            0|            0|  0.00%|# Distributed under the same license as SciPy.
   109|         0|            0|            0|  0.00%|
   110|         0|            0|            0|  0.00%|import sys
   111|         0|            0|            0|  0.00%|import numpy as np
   112|         0|            0|            0|  0.00%|from scipy.linalg import norm, solve, inv, qr, svd, LinAlgError
   113|         0|            0|            0|  0.00%|from numpy import asarray, dot, vdot
   114|         0|            0|            0|  0.00%|import scipy.sparse.linalg
   115|         0|            0|            0|  0.00%|import scipy.sparse
   116|         0|            0|            0|  0.00%|from scipy.linalg import get_blas_funcs
   117|         0|            0|            0|  0.00%|import inspect
   118|         0|            0|            0|  0.00%|from scipy._lib._util import getfullargspec_no_self as _getfullargspec
   119|         0|            0|            0|  0.00%|from .linesearch import scalar_search_wolfe1, scalar_search_armijo
   120|         0|            0|            0|  0.00%|
   121|         0|            0|            0|  0.00%|
   122|         0|            0|            0|  0.00%|__all__ = [
   123|         0|            0|            0|  0.00%|    'broyden1', 'broyden2', 'anderson', 'linearmixing',
   124|         0|            0|            0|  0.00%|    'diagbroyden', 'excitingmixing', 'newton_krylov']
   125|         0|            0|            0|  0.00%|
   126|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   127|         0|            0|            0|  0.00%|# Utility functions
   128|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   129|         0|            0|            0|  0.00%|
   130|         0|            0|            0|  0.00%|
   131|         0|            0|            0|  0.00%|class NoConvergence(Exception):
   132|         0|            0|            0|  0.00%|    pass
   133|         0|            0|            0|  0.00%|
   134|         0|            0|            0|  0.00%|
   135|         0|            0|            0|  0.00%|def maxnorm(x):
   136|         0|            0|            0|  0.00%|    return np.absolute(x).max()
   137|         0|            0|            0|  0.00%|
   138|         0|            0|            0|  0.00%|
   139|         0|            0|            0|  0.00%|def _as_inexact(x):
   140|         0|            0|            0|  0.00%|    """Return `x` as an array, of either floats or complex floats"""
   141|         0|            0|            0|  0.00%|    x = asarray(x)
   142|         0|            0|            0|  0.00%|    if not np.issubdtype(x.dtype, np.inexact):
   143|         0|            0|            0|  0.00%|        return asarray(x, dtype=np.float_)
   144|         0|            0|            0|  0.00%|    return x
   145|         0|            0|            0|  0.00%|
   146|         0|            0|            0|  0.00%|
   147|         0|            0|            0|  0.00%|def _array_like(x, x0):
   148|         0|            0|            0|  0.00%|    """Return ndarray `x` as same array subclass and shape as `x0`"""
   149|         0|            0|            0|  0.00%|    x = np.reshape(x, np.shape(x0))
   150|         0|            0|            0|  0.00%|    wrap = getattr(x0, '__array_wrap__', x.__array_wrap__)
   151|         0|            0|            0|  0.00%|    return wrap(x)
   152|         0|            0|            0|  0.00%|
   153|         0|            0|            0|  0.00%|
   154|         0|            0|            0|  0.00%|def _safe_norm(v):
   155|         0|            0|            0|  0.00%|    if not np.isfinite(v).all():
   156|         0|            0|            0|  0.00%|        return np.array(np.inf)
   157|         0|            0|            0|  0.00%|    return norm(v)
   158|         0|            0|            0|  0.00%|
   159|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   160|         0|            0|            0|  0.00%|# Generic nonlinear solver machinery
   161|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   162|         0|            0|            0|  0.00%|
   163|         0|            0|            0|  0.00%|
   164|         0|            0|            0|  0.00%|_doc_parts = dict(
   165|         0|            0|            0|  0.00%|    params_basic="""
   166|         0|            0|            0|  0.00%|    F : function(x) -> f
   167|         0|            0|            0|  0.00%|        Function whose root to find; should take and return an array-like
   168|         0|            0|            0|  0.00%|        object.
   169|         0|            0|            0|  0.00%|    xin : array_like
   170|         0|            0|            0|  0.00%|        Initial guess for the solution
   171|         0|            0|            0|  0.00%|    """.strip(),
   172|         0|            0|            0|  0.00%|    params_extra="""
   173|         0|            0|            0|  0.00%|    iter : int, optional
   174|         0|            0|            0|  0.00%|        Number of iterations to make. If omitted (default), make as many
   175|         0|            0|            0|  0.00%|        as required to meet tolerances.
   176|         0|            0|            0|  0.00%|    verbose : bool, optional
   177|         0|            0|            0|  0.00%|        Print status to stdout on every iteration.
   178|         0|            0|            0|  0.00%|    maxiter : int, optional
   179|         0|            0|            0|  0.00%|        Maximum number of iterations to make. If more are needed to
   180|         0|            0|            0|  0.00%|        meet convergence, `NoConvergence` is raised.
   181|         0|            0|            0|  0.00%|    f_tol : float, optional
   182|         0|            0|            0|  0.00%|        Absolute tolerance (in max-norm) for the residual.
   183|         0|            0|            0|  0.00%|        If omitted, default is 6e-6.
   184|         0|            0|            0|  0.00%|    f_rtol : float, optional
   185|         0|            0|            0|  0.00%|        Relative tolerance for the residual. If omitted, not used.
   186|         0|            0|            0|  0.00%|    x_tol : float, optional
   187|         0|            0|            0|  0.00%|        Absolute minimum step size, as determined from the Jacobian
   188|         0|            0|            0|  0.00%|        approximation. If the step size is smaller than this, optimization
   189|         0|            0|            0|  0.00%|        is terminated as successful. If omitted, not used.
   190|         0|            0|            0|  0.00%|    x_rtol : float, optional
   191|         0|            0|            0|  0.00%|        Relative minimum step size. If omitted, not used.
   192|         0|            0|            0|  0.00%|    tol_norm : function(vector) -> scalar, optional
   193|         0|            0|            0|  0.00%|        Norm to use in convergence check. Default is the maximum norm.
   194|         0|            0|            0|  0.00%|    line_search : {None, 'armijo' (default), 'wolfe'}, optional
   195|         0|            0|            0|  0.00%|        Which type of a line search to use to determine the step size in the
   196|         0|            0|            0|  0.00%|        direction given by the Jacobian approximation. Defaults to 'armijo'.
   197|         0|            0|            0|  0.00%|    callback : function, optional
   198|         0|            0|            0|  0.00%|        Optional callback function. It is called on every iteration as
   199|         0|            0|            0|  0.00%|        ``callback(x, f)`` where `x` is the current solution and `f`
   200|         0|            0|            0|  0.00%|        the corresponding residual.
   201|         0|            0|            0|  0.00%|
   202|         0|            0|            0|  0.00%|    Returns
   203|         0|            0|            0|  0.00%|    -------
   204|         0|            0|            0|  0.00%|    sol : ndarray
   205|         0|            0|            0|  0.00%|        An array (of similar array type as `x0`) containing the final solution.
   206|         0|            0|            0|  0.00%|
   207|         0|            0|            0|  0.00%|    Raises
   208|         0|            0|            0|  0.00%|    ------
   209|         0|            0|            0|  0.00%|    NoConvergence
   210|         0|            0|            0|  0.00%|        When a solution was not found.
   211|         0|            0|            0|  0.00%|
   212|         0|            0|            0|  0.00%|    """.strip()
   213|         0|            0|            0|  0.00%|)
   214|         0|            0|            0|  0.00%|
   215|         0|            0|            0|  0.00%|
   216|         0|            0|            0|  0.00%|def _set_doc(obj):
   217|         0|            0|            0|  0.00%|    if obj.__doc__:
   218|         0|            0|            0|  0.00%|        obj.__doc__ = obj.__doc__ % _doc_parts
   219|         0|            0|            0|  0.00%|
   220|         0|            0|            0|  0.00%|
   221|         0|            0|            0|  0.00%|def nonlin_solve(F, x0, jacobian='krylov', iter=None, verbose=False,
   222|         0|            0|            0|  0.00%|                 maxiter=None, f_tol=None, f_rtol=None, x_tol=None, x_rtol=None,
   223|         0|            0|            0|  0.00%|                 tol_norm=None, line_search='armijo', callback=None,
   224|         0|            0|            0|  0.00%|                 full_output=False, raise_exception=True):
   225|         0|            0|            0|  0.00%|    """
   226|         0|            0|            0|  0.00%|    Find a root of a function, in a way suitable for large-scale problems.
   227|         0|            0|            0|  0.00%|
   228|         0|            0|            0|  0.00%|    Parameters
   229|         0|            0|            0|  0.00%|    ----------
   230|         0|            0|            0|  0.00%|    %(params_basic)s
   231|         0|            0|            0|  0.00%|    jacobian : Jacobian
   232|         0|            0|            0|  0.00%|        A Jacobian approximation: `Jacobian` object or something that
   233|         0|            0|            0|  0.00%|        `asjacobian` can transform to one. Alternatively, a string specifying
   234|         0|            0|            0|  0.00%|        which of the builtin Jacobian approximations to use:
   235|         0|            0|            0|  0.00%|
   236|         0|            0|            0|  0.00%|            krylov, broyden1, broyden2, anderson
   237|         0|            0|            0|  0.00%|            diagbroyden, linearmixing, excitingmixing
   238|         0|            0|            0|  0.00%|
   239|         0|            0|            0|  0.00%|    %(params_extra)s
   240|         0|            0|            0|  0.00%|    full_output : bool
   241|         0|            0|            0|  0.00%|        If true, returns a dictionary `info` containing convergence
   242|         0|            0|            0|  0.00%|        information.
   243|         0|            0|            0|  0.00%|    raise_exception : bool
   244|         0|            0|            0|  0.00%|        If True, a `NoConvergence` exception is raise if no solution is found.
   245|         0|            0|            0|  0.00%|
   246|         0|            0|            0|  0.00%|    See Also
   247|         0|            0|            0|  0.00%|    --------
   248|         0|            0|            0|  0.00%|    asjacobian, Jacobian
   249|         0|            0|            0|  0.00%|
   250|         0|            0|            0|  0.00%|    Notes
   251|         0|            0|            0|  0.00%|    -----
   252|         0|            0|            0|  0.00%|    This algorithm implements the inexact Newton method, with
   253|         0|            0|            0|  0.00%|    backtracking or full line searches. Several Jacobian
   254|         0|            0|            0|  0.00%|    approximations are available, including Krylov and Quasi-Newton
   255|         0|            0|            0|  0.00%|    methods.
   256|         0|            0|            0|  0.00%|
   257|         0|            0|            0|  0.00%|    References
   258|         0|            0|            0|  0.00%|    ----------
   259|         0|            0|            0|  0.00%|    .. [KIM] C. T. Kelley, \"Iterative Methods for Linear and Nonlinear
   260|         0|            0|            0|  0.00%|       Equations\". Society for Industrial and Applied Mathematics. (1995)
   261|         0|            0|            0|  0.00%|       https://archive.siam.org/books/kelley/fr16/
   262|         0|            0|            0|  0.00%|
   263|         0|            0|            0|  0.00%|    """
   264|         0|            0|            0|  0.00%|    # Can't use default parameters because it's being explicitly passed as None
   265|         0|            0|            0|  0.00%|    # from the calling function, so we need to set it here.
   266|         0|            0|            0|  0.00%|    tol_norm = maxnorm if tol_norm is None else tol_norm
   267|         0|            0|            0|  0.00%|    condition = TerminationCondition(f_tol=f_tol, f_rtol=f_rtol,
   268|         0|            0|            0|  0.00%|                                     x_tol=x_tol, x_rtol=x_rtol,
   269|         0|            0|            0|  0.00%|                                     iter=iter, norm=tol_norm)
   270|         0|            0|            0|  0.00%|
   271|         0|            0|            0|  0.00%|    x0 = _as_inexact(x0)
   272|         0|            0|            0|  0.00%|    func = lambda z: _as_inexact(F(_array_like(z, x0))).flatten()
   273|         0|            0|            0|  0.00%|    x = x0.flatten()
   274|         0|            0|            0|  0.00%|
   275|         0|            0|            0|  0.00%|    dx = np.inf
   276|         0|            0|            0|  0.00%|    Fx = func(x)
   277|         0|            0|            0|  0.00%|    Fx_norm = norm(Fx)
   278|         0|            0|            0|  0.00%|
   279|         0|            0|            0|  0.00%|    jacobian = asjacobian(jacobian)
   280|         0|            0|            0|  0.00%|    jacobian.setup(x.copy(), Fx, func)
   281|         0|            0|            0|  0.00%|
   282|         0|            0|            0|  0.00%|    if maxiter is None:
   283|         0|            0|            0|  0.00%|        if iter is not None:
   284|         0|            0|            0|  0.00%|            maxiter = iter + 1
   285|         0|            0|            0|  0.00%|        else:
   286|         0|            0|            0|  0.00%|            maxiter = 100*(x.size+1)
   287|         0|            0|            0|  0.00%|
   288|         0|            0|            0|  0.00%|    if line_search is True:
   289|         0|            0|            0|  0.00%|        line_search = 'armijo'
   290|         0|            0|            0|  0.00%|    elif line_search is False:
   291|         0|            0|            0|  0.00%|        line_search = None
   292|         0|            0|            0|  0.00%|
   293|         0|            0|            0|  0.00%|    if line_search not in (None, 'armijo', 'wolfe'):
   294|         0|            0|            0|  0.00%|        raise ValueError("Invalid line search")
   295|         0|            0|            0|  0.00%|
   296|         0|            0|            0|  0.00%|    # Solver tolerance selection
   297|         0|            0|            0|  0.00%|    gamma = 0.9
   298|         0|            0|            0|  0.00%|    eta_max = 0.9999
   299|         0|            0|            0|  0.00%|    eta_treshold = 0.1
   300|         0|            0|            0|  0.00%|    eta = 1e-3
   301|         0|            0|            0|  0.00%|
   302|         0|            0|            0|  0.00%|    for n in range(maxiter):
   303|         0|            0|            0|  0.00%|        status = condition.check(Fx, x, dx)
   304|         0|            0|            0|  0.00%|        if status:
   305|         0|            0|            0|  0.00%|            break
   306|         0|            0|            0|  0.00%|
   307|         0|            0|            0|  0.00%|        # The tolerance, as computed for scipy.sparse.linalg.* routines
   308|         0|            0|            0|  0.00%|        tol = min(eta, eta*Fx_norm)
   309|         0|            0|            0|  0.00%|        dx = -jacobian.solve(Fx, tol=tol)
   310|         0|            0|            0|  0.00%|
   311|         0|            0|            0|  0.00%|        if norm(dx) == 0:
   312|         0|            0|            0|  0.00%|            raise ValueError("Jacobian inversion yielded zero vector. "
   313|         0|            0|            0|  0.00%|                             "This indicates a bug in the Jacobian "
   314|         0|            0|            0|  0.00%|                             "approximation.")
   315|         0|            0|            0|  0.00%|
   316|         0|            0|            0|  0.00%|        # Line search, or Newton step
   317|         0|            0|            0|  0.00%|        if line_search:
   318|         0|            0|            0|  0.00%|            s, x, Fx, Fx_norm_new = _nonlin_line_search(func, x, Fx, dx,
   319|         0|            0|            0|  0.00%|                                                        line_search)
   320|         0|            0|            0|  0.00%|        else:
   321|         0|            0|            0|  0.00%|            s = 1.0
   322|         0|            0|            0|  0.00%|            x = x + dx
   323|         0|            0|            0|  0.00%|            Fx = func(x)
   324|         0|            0|            0|  0.00%|            Fx_norm_new = norm(Fx)
   325|         0|            0|            0|  0.00%|
   326|         0|            0|            0|  0.00%|        jacobian.update(x.copy(), Fx)
   327|         0|            0|            0|  0.00%|
   328|         0|            0|            0|  0.00%|        if callback:
   329|         0|            0|            0|  0.00%|            callback(x, Fx)
   330|         0|            0|            0|  0.00%|
   331|         0|            0|            0|  0.00%|        # Adjust forcing parameters for inexact methods
   332|         0|            0|            0|  0.00%|        eta_A = gamma * Fx_norm_new**2 / Fx_norm**2
   333|         0|            0|            0|  0.00%|        if gamma * eta**2 < eta_treshold:
   334|         0|            0|            0|  0.00%|            eta = min(eta_max, eta_A)
   335|         0|            0|            0|  0.00%|        else:
   336|         0|            0|            0|  0.00%|            eta = min(eta_max, max(eta_A, gamma*eta**2))
   337|         0|            0|            0|  0.00%|
   338|         0|            0|            0|  0.00%|        Fx_norm = Fx_norm_new
   339|         0|            0|            0|  0.00%|
   340|         0|            0|            0|  0.00%|        # Print status
   341|         0|            0|            0|  0.00%|        if verbose:
   342|         0|            0|            0|  0.00%|            sys.stdout.write("%d:  |F(x)| = %g; step %g\n" % (
   343|         0|            0|            0|  0.00%|                n, tol_norm(Fx), s))
   344|         0|            0|            0|  0.00%|            sys.stdout.flush()
   345|         0|            0|            0|  0.00%|    else:
   346|         0|            0|            0|  0.00%|        if raise_exception:
   347|         0|            0|            0|  0.00%|            raise NoConvergence(_array_like(x, x0))
   348|         0|            0|            0|  0.00%|        else:
   349|         0|            0|            0|  0.00%|            status = 2
   350|         0|            0|            0|  0.00%|
   351|         0|            0|            0|  0.00%|    if full_output:
   352|         0|            0|            0|  0.00%|        info = {'nit': condition.iteration,
   353|         0|            0|            0|  0.00%|                'fun': Fx,
   354|         0|            0|            0|  0.00%|                'status': status,
   355|         0|            0|            0|  0.00%|                'success': status == 1,
   356|         0|            0|            0|  0.00%|                'message': {1: 'A solution was found at the specified '
   357|         0|            0|            0|  0.00%|                               'tolerance.',
   358|         0|            0|            0|  0.00%|                            2: 'The maximum number of iterations allowed '
   359|         0|            0|            0|  0.00%|                               'has been reached.'
   360|         0|            0|            0|  0.00%|                            }[status]
   361|         0|            0|            0|  0.00%|                }
   362|         0|            0|            0|  0.00%|        return _array_like(x, x0), info
   363|         0|            0|            0|  0.00%|    else:
   364|         0|            0|            0|  0.00%|        return _array_like(x, x0)
   365|         0|            0|            0|  0.00%|
   366|         0|            0|            0|  0.00%|
   367|         0|            0|            0|  0.00%|_set_doc(nonlin_solve)
   368|         0|            0|            0|  0.00%|
   369|         0|            0|            0|  0.00%|
   370|         0|            0|            0|  0.00%|def _nonlin_line_search(func, x, Fx, dx, search_type='armijo', rdiff=1e-8,
   371|         0|            0|            0|  0.00%|                        smin=1e-2):
   372|         0|            0|            0|  0.00%|    tmp_s = [0]
   373|         0|            0|            0|  0.00%|    tmp_Fx = [Fx]
   374|         0|            0|            0|  0.00%|    tmp_phi = [norm(Fx)**2]
   375|         0|            0|            0|  0.00%|    s_norm = norm(x) / norm(dx)
   376|         0|            0|            0|  0.00%|
   377|         0|            0|            0|  0.00%|    def phi(s, store=True):
   378|         0|            0|            0|  0.00%|        if s == tmp_s[0]:
   379|         0|            0|            0|  0.00%|            return tmp_phi[0]
   380|         0|            0|            0|  0.00%|        xt = x + s*dx
   381|         0|            0|            0|  0.00%|        v = func(xt)
   382|         0|            0|            0|  0.00%|        p = _safe_norm(v)**2
   383|         0|            0|            0|  0.00%|        if store:
   384|         0|            0|            0|  0.00%|            tmp_s[0] = s
   385|         0|            0|            0|  0.00%|            tmp_phi[0] = p
   386|         0|            0|            0|  0.00%|            tmp_Fx[0] = v
   387|         0|            0|            0|  0.00%|        return p
   388|         0|            0|            0|  0.00%|
   389|         0|            0|            0|  0.00%|    def derphi(s):
   390|         0|            0|            0|  0.00%|        ds = (abs(s) + s_norm + 1) * rdiff
   391|         0|            0|            0|  0.00%|        return (phi(s+ds, store=False) - phi(s)) / ds
   392|         0|            0|            0|  0.00%|
   393|         0|            0|            0|  0.00%|    if search_type == 'wolfe':
   394|         0|            0|            0|  0.00%|        s, phi1, phi0 = scalar_search_wolfe1(phi, derphi, tmp_phi[0],
   395|         0|            0|            0|  0.00%|                                             xtol=1e-2, amin=smin)
   396|         0|            0|            0|  0.00%|    elif search_type == 'armijo':
   397|         0|            0|            0|  0.00%|        s, phi1 = scalar_search_armijo(phi, tmp_phi[0], -tmp_phi[0],
   398|         0|            0|            0|  0.00%|                                       amin=smin)
   399|         0|            0|            0|  0.00%|
   400|         0|            0|            0|  0.00%|    if s is None:
   401|         0|            0|            0|  0.00%|        # XXX: No suitable step length found. Take the full Newton step,
   402|         0|            0|            0|  0.00%|        #      and hope for the best.
   403|         0|            0|            0|  0.00%|        s = 1.0
   404|         0|            0|            0|  0.00%|
   405|         0|            0|            0|  0.00%|    x = x + s*dx
   406|         0|            0|            0|  0.00%|    if s == tmp_s[0]:
   407|         0|            0|            0|  0.00%|        Fx = tmp_Fx[0]
   408|         0|            0|            0|  0.00%|    else:
   409|         0|            0|            0|  0.00%|        Fx = func(x)
   410|         0|            0|            0|  0.00%|    Fx_norm = norm(Fx)
   411|         0|            0|            0|  0.00%|
   412|         0|            0|            0|  0.00%|    return s, x, Fx, Fx_norm
   413|         0|            0|            0|  0.00%|
   414|         0|            0|            0|  0.00%|
   415|         0|            0|            0|  0.00%|class TerminationCondition(object):
   416|         0|            0|            0|  0.00%|    """
   417|         0|            0|            0|  0.00%|    Termination condition for an iteration. It is terminated if
   418|         0|            0|            0|  0.00%|
   419|         0|            0|            0|  0.00%|    - |F| < f_rtol*|F_0|, AND
   420|         0|            0|            0|  0.00%|    - |F| < f_tol
   421|         0|            0|            0|  0.00%|
   422|         0|            0|            0|  0.00%|    AND
   423|         0|            0|            0|  0.00%|
   424|         0|            0|            0|  0.00%|    - |dx| < x_rtol*|x|, AND
   425|         0|            0|            0|  0.00%|    - |dx| < x_tol
   426|         0|            0|            0|  0.00%|
   427|         0|            0|            0|  0.00%|    """
   428|         0|            0|            0|  0.00%|    def __init__(self, f_tol=None, f_rtol=None, x_tol=None, x_rtol=None,
   429|         0|            0|            0|  0.00%|                 iter=None, norm=maxnorm):
   430|         0|            0|            0|  0.00%|
   431|         0|            0|            0|  0.00%|        if f_tol is None:
   432|         0|            0|            0|  0.00%|            f_tol = np.finfo(np.float_).eps ** (1./3)
   433|         0|            0|            0|  0.00%|        if f_rtol is None:
   434|         0|            0|            0|  0.00%|            f_rtol = np.inf
   435|         0|            0|            0|  0.00%|        if x_tol is None:
   436|         0|            0|            0|  0.00%|            x_tol = np.inf
   437|         0|            0|            0|  0.00%|        if x_rtol is None:
   438|         0|            0|            0|  0.00%|            x_rtol = np.inf
   439|         0|            0|            0|  0.00%|
   440|         0|            0|            0|  0.00%|        self.x_tol = x_tol
   441|         0|            0|            0|  0.00%|        self.x_rtol = x_rtol
   442|         0|            0|            0|  0.00%|        self.f_tol = f_tol
   443|         0|            0|            0|  0.00%|        self.f_rtol = f_rtol
   444|         0|            0|            0|  0.00%|
   445|         0|            0|            0|  0.00%|        self.norm = norm
   446|         0|            0|            0|  0.00%|
   447|         0|            0|            0|  0.00%|        self.iter = iter
   448|         0|            0|            0|  0.00%|
   449|         0|            0|            0|  0.00%|        self.f0_norm = None
   450|         0|            0|            0|  0.00%|        self.iteration = 0
   451|         0|            0|            0|  0.00%|
   452|         0|            0|            0|  0.00%|    def check(self, f, x, dx):
   453|         0|            0|            0|  0.00%|        self.iteration += 1
   454|         0|            0|            0|  0.00%|        f_norm = self.norm(f)
   455|         0|            0|            0|  0.00%|        x_norm = self.norm(x)
   456|         0|            0|            0|  0.00%|        dx_norm = self.norm(dx)
   457|         0|            0|            0|  0.00%|
   458|         0|            0|            0|  0.00%|        if self.f0_norm is None:
   459|         0|            0|            0|  0.00%|            self.f0_norm = f_norm
   460|         0|            0|            0|  0.00%|
   461|         0|            0|            0|  0.00%|        if f_norm == 0:
   462|         0|            0|            0|  0.00%|            return 1
   463|         0|            0|            0|  0.00%|
   464|         0|            0|            0|  0.00%|        if self.iter is not None:
   465|         0|            0|            0|  0.00%|            # backwards compatibility with SciPy 0.6.0
   466|         0|            0|            0|  0.00%|            return 2 * (self.iteration > self.iter)
   467|         0|            0|            0|  0.00%|
   468|         0|            0|            0|  0.00%|        # NB: condition must succeed for rtol=inf even if norm == 0
   469|         0|            0|            0|  0.00%|        return int((f_norm <= self.f_tol
   470|         0|            0|            0|  0.00%|                    and f_norm/self.f_rtol <= self.f0_norm)
   471|         0|            0|            0|  0.00%|                   and (dx_norm <= self.x_tol
   472|         0|            0|            0|  0.00%|                        and dx_norm/self.x_rtol <= x_norm))
   473|         0|            0|            0|  0.00%|
   474|         0|            0|            0|  0.00%|
   475|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   476|         0|            0|            0|  0.00%|# Generic Jacobian approximation
   477|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   478|         0|            0|            0|  0.00%|
   479|         0|            0|            0|  0.00%|class Jacobian(object):
   480|         0|            0|            0|  0.00%|    """
   481|         0|            0|            0|  0.00%|    Common interface for Jacobians or Jacobian approximations.
   482|         0|            0|            0|  0.00%|
   483|         0|            0|            0|  0.00%|    The optional methods come useful when implementing trust region
   484|         0|            0|            0|  0.00%|    etc., algorithms that often require evaluating transposes of the
   485|         0|            0|            0|  0.00%|    Jacobian.
   486|         0|            0|            0|  0.00%|
   487|         0|            0|            0|  0.00%|    Methods
   488|         0|            0|            0|  0.00%|    -------
   489|         0|            0|            0|  0.00%|    solve
   490|         0|            0|            0|  0.00%|        Returns J^-1 * v
   491|         0|            0|            0|  0.00%|    update
   492|         0|            0|            0|  0.00%|        Updates Jacobian to point `x` (where the function has residual `Fx`)
   493|         0|            0|            0|  0.00%|
   494|         0|            0|            0|  0.00%|    matvec : optional
   495|         0|            0|            0|  0.00%|        Returns J * v
   496|         0|            0|            0|  0.00%|    rmatvec : optional
   497|         0|            0|            0|  0.00%|        Returns A^H * v
   498|         0|            0|            0|  0.00%|    rsolve : optional
   499|         0|            0|            0|  0.00%|        Returns A^-H * v
   500|         0|            0|            0|  0.00%|    matmat : optional
   501|         0|            0|            0|  0.00%|        Returns A * V, where V is a dense matrix with dimensions (N,K).
   502|         0|            0|            0|  0.00%|    todense : optional
   503|         0|            0|            0|  0.00%|        Form the dense Jacobian matrix. Necessary for dense trust region
   504|         0|            0|            0|  0.00%|        algorithms, and useful for testing.
   505|         0|            0|            0|  0.00%|
   506|         0|            0|            0|  0.00%|    Attributes
   507|         0|            0|            0|  0.00%|    ----------
   508|         0|            0|            0|  0.00%|    shape
   509|         0|            0|            0|  0.00%|        Matrix dimensions (M, N)
   510|         0|            0|            0|  0.00%|    dtype
   511|         0|            0|            0|  0.00%|        Data type of the matrix.
   512|         0|            0|            0|  0.00%|    func : callable, optional
   513|         0|            0|            0|  0.00%|        Function the Jacobian corresponds to
   514|         0|            0|            0|  0.00%|
   515|         0|            0|            0|  0.00%|    """
   516|         0|            0|            0|  0.00%|
   517|         0|            0|            0|  0.00%|    def __init__(self, **kw):
   518|         0|            0|            0|  0.00%|        names = ["solve", "update", "matvec", "rmatvec", "rsolve",
   519|         0|            0|            0|  0.00%|                 "matmat", "todense", "shape", "dtype"]
   520|         0|            0|            0|  0.00%|        for name, value in kw.items():
   521|         0|            0|            0|  0.00%|            if name not in names:
   522|         0|            0|            0|  0.00%|                raise ValueError("Unknown keyword argument %s" % name)
   523|         0|            0|            0|  0.00%|            if value is not None:
   524|         0|            0|            0|  0.00%|                setattr(self, name, kw[name])
   525|         0|            0|            0|  0.00%|
   526|         0|            0|            0|  0.00%|        if hasattr(self, 'todense'):
   527|         0|            0|            0|  0.00%|            self.__array__ = lambda: self.todense()
   528|         0|            0|            0|  0.00%|
   529|         0|            0|            0|  0.00%|    def aspreconditioner(self):
   530|         0|            0|            0|  0.00%|        return InverseJacobian(self)
   531|         0|            0|            0|  0.00%|
   532|         0|            0|            0|  0.00%|    def solve(self, v, tol=0):
   533|         0|            0|            0|  0.00%|        raise NotImplementedError
   534|         0|            0|            0|  0.00%|
   535|         0|            0|            0|  0.00%|    def update(self, x, F):
   536|         0|            0|            0|  0.00%|        pass
   537|         0|            0|            0|  0.00%|
   538|         0|            0|            0|  0.00%|    def setup(self, x, F, func):
   539|         0|            0|            0|  0.00%|        self.func = func
   540|         0|            0|            0|  0.00%|        self.shape = (F.size, x.size)
   541|         0|            0|            0|  0.00%|        self.dtype = F.dtype
   542|         0|            0|            0|  0.00%|        if self.__class__.setup is Jacobian.setup:
   543|         0|            0|            0|  0.00%|            # Call on the first point unless overridden
   544|         0|            0|            0|  0.00%|            self.update(x, F)
   545|         0|            0|            0|  0.00%|
   546|         0|            0|            0|  0.00%|
   547|         0|            0|            0|  0.00%|class InverseJacobian(object):
   548|         0|            0|            0|  0.00%|    def __init__(self, jacobian):
   549|         0|            0|            0|  0.00%|        self.jacobian = jacobian
   550|         0|            0|            0|  0.00%|        self.matvec = jacobian.solve
   551|         0|            0|            0|  0.00%|        self.update = jacobian.update
   552|         0|            0|            0|  0.00%|        if hasattr(jacobian, 'setup'):
   553|         0|            0|            0|  0.00%|            self.setup = jacobian.setup
   554|         0|            0|            0|  0.00%|        if hasattr(jacobian, 'rsolve'):
   555|         0|            0|            0|  0.00%|            self.rmatvec = jacobian.rsolve
   556|         0|            0|            0|  0.00%|
   557|         0|            0|            0|  0.00%|    @property
   558|         0|            0|            0|  0.00%|    def shape(self):
   559|         0|            0|            0|  0.00%|        return self.jacobian.shape
   560|         0|            0|            0|  0.00%|
   561|         0|            0|            0|  0.00%|    @property
   562|         0|            0|            0|  0.00%|    def dtype(self):
   563|         0|            0|            0|  0.00%|        return self.jacobian.dtype
   564|         0|            0|            0|  0.00%|
   565|         0|            0|            0|  0.00%|
   566|         0|            0|            0|  0.00%|def asjacobian(J):
   567|         0|            0|            0|  0.00%|    """
   568|         0|            0|            0|  0.00%|    Convert given object to one suitable for use as a Jacobian.
   569|         0|            0|            0|  0.00%|    """
   570|         0|            0|            0|  0.00%|    spsolve = scipy.sparse.linalg.spsolve
   571|         0|            0|            0|  0.00%|    if isinstance(J, Jacobian):
   572|         0|            0|            0|  0.00%|        return J
   573|         0|            0|            0|  0.00%|    elif inspect.isclass(J) and issubclass(J, Jacobian):
   574|         0|            0|            0|  0.00%|        return J()
   575|         0|            0|            0|  0.00%|    elif isinstance(J, np.ndarray):
   576|         0|            0|            0|  0.00%|        if J.ndim > 2:
   577|         0|            0|            0|  0.00%|            raise ValueError('array must have rank <= 2')
   578|         0|            0|            0|  0.00%|        J = np.atleast_2d(np.asarray(J))
   579|         0|            0|            0|  0.00%|        if J.shape[0] != J.shape[1]:
   580|         0|            0|            0|  0.00%|            raise ValueError('array must be square')
   581|         0|            0|            0|  0.00%|
   582|         0|            0|            0|  0.00%|        return Jacobian(matvec=lambda v: dot(J, v),
   583|         0|            0|            0|  0.00%|                        rmatvec=lambda v: dot(J.conj().T, v),
   584|         0|            0|            0|  0.00%|                        solve=lambda v: solve(J, v),
   585|         0|            0|            0|  0.00%|                        rsolve=lambda v: solve(J.conj().T, v),
   586|         0|            0|            0|  0.00%|                        dtype=J.dtype, shape=J.shape)
   587|         0|            0|            0|  0.00%|    elif scipy.sparse.isspmatrix(J):
   588|         0|            0|            0|  0.00%|        if J.shape[0] != J.shape[1]:
   589|         0|            0|            0|  0.00%|            raise ValueError('matrix must be square')
   590|         0|            0|            0|  0.00%|        return Jacobian(matvec=lambda v: J*v,
   591|         0|            0|            0|  0.00%|                        rmatvec=lambda v: J.conj().T * v,
   592|         0|            0|            0|  0.00%|                        solve=lambda v: spsolve(J, v),
   593|         0|            0|            0|  0.00%|                        rsolve=lambda v: spsolve(J.conj().T, v),
   594|         0|            0|            0|  0.00%|                        dtype=J.dtype, shape=J.shape)
   595|         0|            0|            0|  0.00%|    elif hasattr(J, 'shape') and hasattr(J, 'dtype') and hasattr(J, 'solve'):
   596|         0|            0|            0|  0.00%|        return Jacobian(matvec=getattr(J, 'matvec'),
   597|         0|            0|            0|  0.00%|                        rmatvec=getattr(J, 'rmatvec'),
   598|         0|            0|            0|  0.00%|                        solve=J.solve,
   599|         0|            0|            0|  0.00%|                        rsolve=getattr(J, 'rsolve'),
   600|         0|            0|            0|  0.00%|                        update=getattr(J, 'update'),
   601|         0|            0|            0|  0.00%|                        setup=getattr(J, 'setup'),
   602|         0|            0|            0|  0.00%|                        dtype=J.dtype,
   603|         0|            0|            0|  0.00%|                        shape=J.shape)
   604|         0|            0|            0|  0.00%|    elif callable(J):
   605|         0|            0|            0|  0.00%|        # Assume it's a function J(x) that returns the Jacobian
   606|         0|            0|            0|  0.00%|        class Jac(Jacobian):
   607|         0|            0|            0|  0.00%|            def update(self, x, F):
   608|         0|            0|            0|  0.00%|                self.x = x
   609|         0|            0|            0|  0.00%|
   610|         0|            0|            0|  0.00%|            def solve(self, v, tol=0):
   611|         0|            0|            0|  0.00%|                m = J(self.x)
   612|         0|            0|            0|  0.00%|                if isinstance(m, np.ndarray):
   613|         0|            0|            0|  0.00%|                    return solve(m, v)
   614|         0|            0|            0|  0.00%|                elif scipy.sparse.isspmatrix(m):
   615|         0|            0|            0|  0.00%|                    return spsolve(m, v)
   616|         0|            0|            0|  0.00%|                else:
   617|         0|            0|            0|  0.00%|                    raise ValueError("Unknown matrix type")
   618|         0|            0|            0|  0.00%|
   619|         0|            0|            0|  0.00%|            def matvec(self, v):
   620|         0|            0|            0|  0.00%|                m = J(self.x)
   621|         0|            0|            0|  0.00%|                if isinstance(m, np.ndarray):
   622|         0|            0|            0|  0.00%|                    return dot(m, v)
   623|         0|            0|            0|  0.00%|                elif scipy.sparse.isspmatrix(m):
   624|         0|            0|            0|  0.00%|                    return m*v
   625|         0|            0|            0|  0.00%|                else:
   626|         0|            0|            0|  0.00%|                    raise ValueError("Unknown matrix type")
   627|         0|            0|            0|  0.00%|
   628|         0|            0|            0|  0.00%|            def rsolve(self, v, tol=0):
   629|         0|            0|            0|  0.00%|                m = J(self.x)
   630|         0|            0|            0|  0.00%|                if isinstance(m, np.ndarray):
   631|         0|            0|            0|  0.00%|                    return solve(m.conj().T, v)
   632|         0|            0|            0|  0.00%|                elif scipy.sparse.isspmatrix(m):
   633|         0|            0|            0|  0.00%|                    return spsolve(m.conj().T, v)
   634|         0|            0|            0|  0.00%|                else:
   635|         0|            0|            0|  0.00%|                    raise ValueError("Unknown matrix type")
   636|         0|            0|            0|  0.00%|
   637|         0|            0|            0|  0.00%|            def rmatvec(self, v):
   638|         0|            0|            0|  0.00%|                m = J(self.x)
   639|         0|            0|            0|  0.00%|                if isinstance(m, np.ndarray):
   640|         0|            0|            0|  0.00%|                    return dot(m.conj().T, v)
   641|         0|            0|            0|  0.00%|                elif scipy.sparse.isspmatrix(m):
   642|         0|            0|            0|  0.00%|                    return m.conj().T * v
   643|         0|            0|            0|  0.00%|                else:
   644|         0|            0|            0|  0.00%|                    raise ValueError("Unknown matrix type")
   645|         0|            0|            0|  0.00%|        return Jac()
   646|         0|            0|            0|  0.00%|    elif isinstance(J, str):
   647|         0|            0|            0|  0.00%|        return dict(broyden1=BroydenFirst,
   648|         0|            0|            0|  0.00%|                    broyden2=BroydenSecond,
   649|         0|            0|            0|  0.00%|                    anderson=Anderson,
   650|         0|            0|            0|  0.00%|                    diagbroyden=DiagBroyden,
   651|         0|            0|            0|  0.00%|                    linearmixing=LinearMixing,
   652|         0|            0|            0|  0.00%|                    excitingmixing=ExcitingMixing,
   653|         0|            0|            0|  0.00%|                    krylov=KrylovJacobian)[J]()
   654|         0|            0|            0|  0.00%|    else:
   655|         0|            0|            0|  0.00%|        raise TypeError('Cannot convert object to a Jacobian')
   656|         0|            0|            0|  0.00%|
   657|         0|            0|            0|  0.00%|
   658|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   659|         0|            0|            0|  0.00%|# Broyden
   660|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   661|         0|            0|            0|  0.00%|
   662|         0|            0|            0|  0.00%|class GenericBroyden(Jacobian):
   663|         0|            0|            0|  0.00%|    def setup(self, x0, f0, func):
   664|         0|            0|            0|  0.00%|        Jacobian.setup(self, x0, f0, func)
   665|         0|            0|            0|  0.00%|        self.last_f = f0
   666|         0|            0|            0|  0.00%|        self.last_x = x0
   667|         0|            0|            0|  0.00%|
   668|         0|            0|            0|  0.00%|        if hasattr(self, 'alpha') and self.alpha is None:
   669|         0|            0|            0|  0.00%|            # Autoscale the initial Jacobian parameter
   670|         0|            0|            0|  0.00%|            # unless we have already guessed the solution.
   671|         0|            0|            0|  0.00%|            normf0 = norm(f0)
   672|         0|            0|            0|  0.00%|            if normf0:
   673|         0|            0|            0|  0.00%|                self.alpha = 0.5*max(norm(x0), 1) / normf0
   674|         0|            0|            0|  0.00%|            else:
   675|         0|            0|            0|  0.00%|                self.alpha = 1.0
   676|         0|            0|            0|  0.00%|
   677|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
   678|         0|            0|            0|  0.00%|        raise NotImplementedError
   679|         0|            0|            0|  0.00%|
   680|         0|            0|            0|  0.00%|    def update(self, x, f):
   681|         0|            0|            0|  0.00%|        df = f - self.last_f
   682|         0|            0|            0|  0.00%|        dx = x - self.last_x
   683|         0|            0|            0|  0.00%|        self._update(x, f, dx, df, norm(dx), norm(df))
   684|         0|            0|            0|  0.00%|        self.last_f = f
   685|         0|            0|            0|  0.00%|        self.last_x = x
   686|         0|            0|            0|  0.00%|
   687|         0|            0|            0|  0.00%|
   688|         0|            0|            0|  0.00%|class LowRankMatrix(object):
   689|         0|            0|            0|  0.00%|    r"""
   690|         0|            0|            0|  0.00%|    A matrix represented as
   691|         0|            0|            0|  0.00%|
   692|         0|            0|            0|  0.00%|    .. math:: \alpha I + \sum_{n=0}^{n=M} c_n d_n^\dagger
   693|         0|            0|            0|  0.00%|
   694|         0|            0|            0|  0.00%|    However, if the rank of the matrix reaches the dimension of the vectors,
   695|         0|            0|            0|  0.00%|    full matrix representation will be used thereon.
   696|         0|            0|            0|  0.00%|
   697|         0|            0|            0|  0.00%|    """
   698|         0|            0|            0|  0.00%|
   699|         0|            0|            0|  0.00%|    def __init__(self, alpha, n, dtype):
   700|         0|            0|            0|  0.00%|        self.alpha = alpha
   701|         0|            0|            0|  0.00%|        self.cs = []
   702|         0|            0|            0|  0.00%|        self.ds = []
   703|         0|            0|            0|  0.00%|        self.n = n
   704|         0|            0|            0|  0.00%|        self.dtype = dtype
   705|         0|            0|            0|  0.00%|        self.collapsed = None
   706|         0|            0|            0|  0.00%|
   707|         0|            0|            0|  0.00%|    @staticmethod
   708|         0|            0|            0|  0.00%|    def _matvec(v, alpha, cs, ds):
   709|         0|            0|            0|  0.00%|        axpy, scal, dotc = get_blas_funcs(['axpy', 'scal', 'dotc'],
   710|         0|            0|            0|  0.00%|                                          cs[:1] + [v])
   711|         0|            0|            0|  0.00%|        w = alpha * v
   712|         0|            0|            0|  0.00%|        for c, d in zip(cs, ds):
   713|         0|            0|            0|  0.00%|            a = dotc(d, v)
   714|         0|            0|            0|  0.00%|            w = axpy(c, w, w.size, a)
   715|         0|            0|            0|  0.00%|        return w
   716|         0|            0|            0|  0.00%|
   717|         0|            0|            0|  0.00%|    @staticmethod
   718|         0|            0|            0|  0.00%|    def _solve(v, alpha, cs, ds):
   719|         0|            0|            0|  0.00%|        """Evaluate w = M^-1 v"""
   720|         0|            0|            0|  0.00%|        if len(cs) == 0:
   721|         0|            0|            0|  0.00%|            return v/alpha
   722|         0|            0|            0|  0.00%|
   723|         0|            0|            0|  0.00%|        # (B + C D^H)^-1 = B^-1 - B^-1 C (I + D^H B^-1 C)^-1 D^H B^-1
   724|         0|            0|            0|  0.00%|
   725|         0|            0|            0|  0.00%|        axpy, dotc = get_blas_funcs(['axpy', 'dotc'], cs[:1] + [v])
   726|         0|            0|            0|  0.00%|
   727|         0|            0|            0|  0.00%|        c0 = cs[0]
   728|         0|            0|            0|  0.00%|        A = alpha * np.identity(len(cs), dtype=c0.dtype)
   729|         0|            0|            0|  0.00%|        for i, d in enumerate(ds):
   730|         0|            0|            0|  0.00%|            for j, c in enumerate(cs):
   731|         0|            0|            0|  0.00%|                A[i,j] += dotc(d, c)
   732|         0|            0|            0|  0.00%|
   733|         0|            0|            0|  0.00%|        q = np.zeros(len(cs), dtype=c0.dtype)
   734|         0|            0|            0|  0.00%|        for j, d in enumerate(ds):
   735|         0|            0|            0|  0.00%|            q[j] = dotc(d, v)
   736|         0|            0|            0|  0.00%|        q /= alpha
   737|         0|            0|            0|  0.00%|        q = solve(A, q)
   738|         0|            0|            0|  0.00%|
   739|         0|            0|            0|  0.00%|        w = v/alpha
   740|         0|            0|            0|  0.00%|        for c, qc in zip(cs, q):
   741|         0|            0|            0|  0.00%|            w = axpy(c, w, w.size, -qc)
   742|         0|            0|            0|  0.00%|
   743|         0|            0|            0|  0.00%|        return w
   744|         0|            0|            0|  0.00%|
   745|         0|            0|            0|  0.00%|    def matvec(self, v):
   746|         0|            0|            0|  0.00%|        """Evaluate w = M v"""
   747|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   748|         0|            0|            0|  0.00%|            return np.dot(self.collapsed, v)
   749|         0|            0|            0|  0.00%|        return LowRankMatrix._matvec(v, self.alpha, self.cs, self.ds)
   750|         0|            0|            0|  0.00%|
   751|         0|            0|            0|  0.00%|    def rmatvec(self, v):
   752|         0|            0|            0|  0.00%|        """Evaluate w = M^H v"""
   753|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   754|         0|            0|            0|  0.00%|            return np.dot(self.collapsed.T.conj(), v)
   755|         0|            0|            0|  0.00%|        return LowRankMatrix._matvec(v, np.conj(self.alpha), self.ds, self.cs)
   756|         0|            0|            0|  0.00%|
   757|         0|            0|            0|  0.00%|    def solve(self, v, tol=0):
   758|         0|            0|            0|  0.00%|        """Evaluate w = M^-1 v"""
   759|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   760|         0|            0|            0|  0.00%|            return solve(self.collapsed, v)
   761|         0|            0|            0|  0.00%|        return LowRankMatrix._solve(v, self.alpha, self.cs, self.ds)
   762|         0|            0|            0|  0.00%|
   763|         0|            0|            0|  0.00%|    def rsolve(self, v, tol=0):
   764|         0|            0|            0|  0.00%|        """Evaluate w = M^-H v"""
   765|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   766|         0|            0|            0|  0.00%|            return solve(self.collapsed.T.conj(), v)
   767|         0|            0|            0|  0.00%|        return LowRankMatrix._solve(v, np.conj(self.alpha), self.ds, self.cs)
   768|         0|            0|            0|  0.00%|
   769|         0|            0|            0|  0.00%|    def append(self, c, d):
   770|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   771|         0|            0|            0|  0.00%|            self.collapsed += c[:,None] * d[None,:].conj()
   772|         0|            0|            0|  0.00%|            return
   773|         0|            0|            0|  0.00%|
   774|         0|            0|            0|  0.00%|        self.cs.append(c)
   775|         0|            0|            0|  0.00%|        self.ds.append(d)
   776|         0|            0|            0|  0.00%|
   777|         0|            0|            0|  0.00%|        if len(self.cs) > c.size:
   778|         0|            0|            0|  0.00%|            self.collapse()
   779|         0|            0|            0|  0.00%|
   780|         0|            0|            0|  0.00%|    def __array__(self):
   781|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   782|         0|            0|            0|  0.00%|            return self.collapsed
   783|         0|            0|            0|  0.00%|
   784|         0|            0|            0|  0.00%|        Gm = self.alpha*np.identity(self.n, dtype=self.dtype)
   785|         0|            0|            0|  0.00%|        for c, d in zip(self.cs, self.ds):
   786|         0|            0|            0|  0.00%|            Gm += c[:,None]*d[None,:].conj()
   787|         0|            0|            0|  0.00%|        return Gm
   788|         0|            0|            0|  0.00%|
   789|         0|            0|            0|  0.00%|    def collapse(self):
   790|         0|            0|            0|  0.00%|        """Collapse the low-rank matrix to a full-rank one."""
   791|         0|            0|            0|  0.00%|        self.collapsed = np.array(self)
   792|         0|            0|            0|  0.00%|        self.cs = None
   793|         0|            0|            0|  0.00%|        self.ds = None
   794|         0|            0|            0|  0.00%|        self.alpha = None
   795|         0|            0|            0|  0.00%|
   796|         0|            0|            0|  0.00%|    def restart_reduce(self, rank):
   797|         0|            0|            0|  0.00%|        """
   798|         0|            0|            0|  0.00%|        Reduce the rank of the matrix by dropping all vectors.
   799|         0|            0|            0|  0.00%|        """
   800|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   801|         0|            0|            0|  0.00%|            return
   802|         0|            0|            0|  0.00%|        assert rank > 0
   803|         0|            0|            0|  0.00%|        if len(self.cs) > rank:
   804|         0|            0|            0|  0.00%|            del self.cs[:]
   805|         0|            0|            0|  0.00%|            del self.ds[:]
   806|         0|            0|            0|  0.00%|
   807|         0|            0|            0|  0.00%|    def simple_reduce(self, rank):
   808|         0|            0|            0|  0.00%|        """
   809|         0|            0|            0|  0.00%|        Reduce the rank of the matrix by dropping oldest vectors.
   810|         0|            0|            0|  0.00%|        """
   811|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   812|         0|            0|            0|  0.00%|            return
   813|         0|            0|            0|  0.00%|        assert rank > 0
   814|         0|            0|            0|  0.00%|        while len(self.cs) > rank:
   815|         0|            0|            0|  0.00%|            del self.cs[0]
   816|         0|            0|            0|  0.00%|            del self.ds[0]
   817|         0|            0|            0|  0.00%|
   818|         0|            0|            0|  0.00%|    def svd_reduce(self, max_rank, to_retain=None):
   819|         0|            0|            0|  0.00%|        """
   820|         0|            0|            0|  0.00%|        Reduce the rank of the matrix by retaining some SVD components.
   821|         0|            0|            0|  0.00%|
   822|         0|            0|            0|  0.00%|        This corresponds to the \"Broyden Rank Reduction Inverse\"
   823|         0|            0|            0|  0.00%|        algorithm described in [1]_.
   824|         0|            0|            0|  0.00%|
   825|         0|            0|            0|  0.00%|        Note that the SVD decomposition can be done by solving only a
   826|         0|            0|            0|  0.00%|        problem whose size is the effective rank of this matrix, which
   827|         0|            0|            0|  0.00%|        is viable even for large problems.
   828|         0|            0|            0|  0.00%|
   829|         0|            0|            0|  0.00%|        Parameters
   830|         0|            0|            0|  0.00%|        ----------
   831|         0|            0|            0|  0.00%|        max_rank : int
   832|         0|            0|            0|  0.00%|            Maximum rank of this matrix after reduction.
   833|         0|            0|            0|  0.00%|        to_retain : int, optional
   834|         0|            0|            0|  0.00%|            Number of SVD components to retain when reduction is done
   835|         0|            0|            0|  0.00%|            (ie. rank > max_rank). Default is ``max_rank - 2``.
   836|         0|            0|            0|  0.00%|
   837|         0|            0|            0|  0.00%|        References
   838|         0|            0|            0|  0.00%|        ----------
   839|         0|            0|            0|  0.00%|        .. [1] B.A. van der Rotten, PhD thesis,
   840|         0|            0|            0|  0.00%|           \"A limited memory Broyden method to solve high-dimensional
   841|         0|            0|            0|  0.00%|           systems of nonlinear equations\". Mathematisch Instituut,
   842|         0|            0|            0|  0.00%|           Universiteit Leiden, The Netherlands (2003).
   843|         0|            0|            0|  0.00%|
   844|         0|            0|            0|  0.00%|           https://web.archive.org/web/20161022015821/http://www.math.leidenuniv.nl/scripties/Rotten.pdf
   845|         0|            0|            0|  0.00%|
   846|         0|            0|            0|  0.00%|        """
   847|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   848|         0|            0|            0|  0.00%|            return
   849|         0|            0|            0|  0.00%|
   850|         0|            0|            0|  0.00%|        p = max_rank
   851|         0|            0|            0|  0.00%|        if to_retain is not None:
   852|         0|            0|            0|  0.00%|            q = to_retain
   853|         0|            0|            0|  0.00%|        else:
   854|         0|            0|            0|  0.00%|            q = p - 2
   855|         0|            0|            0|  0.00%|
   856|         0|            0|            0|  0.00%|        if self.cs:
   857|         0|            0|            0|  0.00%|            p = min(p, len(self.cs[0]))
   858|         0|            0|            0|  0.00%|        q = max(0, min(q, p-1))
   859|         0|            0|            0|  0.00%|
   860|         0|            0|            0|  0.00%|        m = len(self.cs)
   861|         0|            0|            0|  0.00%|        if m < p:
   862|         0|            0|            0|  0.00%|            # nothing to do
   863|         0|            0|            0|  0.00%|            return
   864|         0|            0|            0|  0.00%|
   865|         0|            0|            0|  0.00%|        C = np.array(self.cs).T
   866|         0|            0|            0|  0.00%|        D = np.array(self.ds).T
   867|         0|            0|            0|  0.00%|
   868|         0|            0|            0|  0.00%|        D, R = qr(D, mode='economic')
   869|         0|            0|            0|  0.00%|        C = dot(C, R.T.conj())
   870|         0|            0|            0|  0.00%|
   871|         0|            0|            0|  0.00%|        U, S, WH = svd(C, full_matrices=False, compute_uv=True)
   872|         0|            0|            0|  0.00%|
   873|         0|            0|            0|  0.00%|        C = dot(C, inv(WH))
   874|         0|            0|            0|  0.00%|        D = dot(D, WH.T.conj())
   875|         0|            0|            0|  0.00%|
   876|         0|            0|            0|  0.00%|        for k in range(q):
   877|         0|            0|            0|  0.00%|            self.cs[k] = C[:,k].copy()
   878|         0|            0|            0|  0.00%|            self.ds[k] = D[:,k].copy()
   879|         0|            0|            0|  0.00%|
   880|         0|            0|            0|  0.00%|        del self.cs[q:]
   881|         0|            0|            0|  0.00%|        del self.ds[q:]
   882|         0|            0|            0|  0.00%|
   883|         0|            0|            0|  0.00%|
   884|         0|            0|            0|  0.00%|_doc_parts['broyden_params'] = """
   885|         0|            0|            0|  0.00%|    alpha : float, optional
   886|         0|            0|            0|  0.00%|        Initial guess for the Jacobian is ``(-1/alpha)``.
   887|         0|            0|            0|  0.00%|    reduction_method : str or tuple, optional
   888|         0|            0|            0|  0.00%|        Method used in ensuring that the rank of the Broyden matrix
   889|         0|            0|            0|  0.00%|        stays low. Can either be a string giving the name of the method,
   890|         0|            0|            0|  0.00%|        or a tuple of the form ``(method, param1, param2, ...)``
   891|         0|            0|            0|  0.00%|        that gives the name of the method and values for additional parameters.
   892|         0|            0|            0|  0.00%|
   893|         0|            0|            0|  0.00%|        Methods available:
   894|         0|            0|            0|  0.00%|
   895|         0|            0|            0|  0.00%|            - ``restart``: drop all matrix columns. Has no extra parameters.
   896|         0|            0|            0|  0.00%|            - ``simple``: drop oldest matrix column. Has no extra parameters.
   897|         0|            0|            0|  0.00%|            - ``svd``: keep only the most significant SVD components.
   898|         0|            0|            0|  0.00%|              Takes an extra parameter, ``to_retain``, which determines the
   899|         0|            0|            0|  0.00%|              number of SVD components to retain when rank reduction is done.
   900|         0|            0|            0|  0.00%|              Default is ``max_rank - 2``.
   901|         0|            0|            0|  0.00%|
   902|         0|            0|            0|  0.00%|    max_rank : int, optional
   903|         0|            0|            0|  0.00%|        Maximum rank for the Broyden matrix.
   904|         0|            0|            0|  0.00%|        Default is infinity (i.e., no rank reduction).
   905|         0|            0|            0|  0.00%|    """.strip()
   906|         0|            0|            0|  0.00%|
   907|         0|            0|            0|  0.00%|
   908|         0|            0|            0|  0.00%|class BroydenFirst(GenericBroyden):
   909|         0|            0|            0|  0.00%|    r"""
   910|         0|            0|            0|  0.00%|    Find a root of a function, using Broyden's first Jacobian approximation.
   911|         0|            0|            0|  0.00%|
   912|         0|            0|            0|  0.00%|    This method is also known as \"Broyden's good method\".
   913|         0|            0|            0|  0.00%|
   914|         0|            0|            0|  0.00%|    Parameters
   915|         0|            0|            0|  0.00%|    ----------
   916|         0|            0|            0|  0.00%|    %(params_basic)s
   917|         0|            0|            0|  0.00%|    %(broyden_params)s
   918|         0|            0|            0|  0.00%|    %(params_extra)s
   919|         0|            0|            0|  0.00%|
   920|         0|            0|            0|  0.00%|    See Also
   921|         0|            0|            0|  0.00%|    --------
   922|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
   923|         0|            0|            0|  0.00%|           functions. See ``method=='broyden1'`` in particular.
   924|         0|            0|            0|  0.00%|
   925|         0|            0|            0|  0.00%|    Notes
   926|         0|            0|            0|  0.00%|    -----
   927|         0|            0|            0|  0.00%|    This algorithm implements the inverse Jacobian Quasi-Newton update
   928|         0|            0|            0|  0.00%|
   929|         0|            0|            0|  0.00%|    .. math:: H_+ = H + (dx - H df) dx^\dagger H / ( dx^\dagger H df)
   930|         0|            0|            0|  0.00%|
   931|         0|            0|            0|  0.00%|    which corresponds to Broyden's first Jacobian update
   932|         0|            0|            0|  0.00%|
   933|         0|            0|            0|  0.00%|    .. math:: J_+ = J + (df - J dx) dx^\dagger / dx^\dagger dx
   934|         0|            0|            0|  0.00%|
   935|         0|            0|            0|  0.00%|
   936|         0|            0|            0|  0.00%|    References
   937|         0|            0|            0|  0.00%|    ----------
   938|         0|            0|            0|  0.00%|    .. [1] B.A. van der Rotten, PhD thesis,
   939|         0|            0|            0|  0.00%|       \"A limited memory Broyden method to solve high-dimensional
   940|         0|            0|            0|  0.00%|       systems of nonlinear equations\". Mathematisch Instituut,
   941|         0|            0|            0|  0.00%|       Universiteit Leiden, The Netherlands (2003).
   942|         0|            0|            0|  0.00%|
   943|         0|            0|            0|  0.00%|       https://web.archive.org/web/20161022015821/http://www.math.leidenuniv.nl/scripties/Rotten.pdf
   944|         0|            0|            0|  0.00%|
   945|         0|            0|            0|  0.00%|    """
   946|         0|            0|            0|  0.00%|
   947|         0|            0|            0|  0.00%|    def __init__(self, alpha=None, reduction_method='restart', max_rank=None):
   948|         0|            0|            0|  0.00%|        GenericBroyden.__init__(self)
   949|         0|            0|            0|  0.00%|        self.alpha = alpha
   950|         0|            0|            0|  0.00%|        self.Gm = None
   951|         0|            0|            0|  0.00%|
   952|         0|            0|            0|  0.00%|        if max_rank is None:
   953|         0|            0|            0|  0.00%|            max_rank = np.inf
   954|         0|            0|            0|  0.00%|        self.max_rank = max_rank
   955|         0|            0|            0|  0.00%|
   956|         0|            0|            0|  0.00%|        if isinstance(reduction_method, str):
   957|         0|            0|            0|  0.00%|            reduce_params = ()
   958|         0|            0|            0|  0.00%|        else:
   959|         0|            0|            0|  0.00%|            reduce_params = reduction_method[1:]
   960|         0|            0|            0|  0.00%|            reduction_method = reduction_method[0]
   961|         0|            0|            0|  0.00%|        reduce_params = (max_rank - 1,) + reduce_params
   962|         0|            0|            0|  0.00%|
   963|         0|            0|            0|  0.00%|        if reduction_method == 'svd':
   964|         0|            0|            0|  0.00%|            self._reduce = lambda: self.Gm.svd_reduce(*reduce_params)
   965|         0|            0|            0|  0.00%|        elif reduction_method == 'simple':
   966|         0|            0|            0|  0.00%|            self._reduce = lambda: self.Gm.simple_reduce(*reduce_params)
   967|         0|            0|            0|  0.00%|        elif reduction_method == 'restart':
   968|         0|            0|            0|  0.00%|            self._reduce = lambda: self.Gm.restart_reduce(*reduce_params)
   969|         0|            0|            0|  0.00%|        else:
   970|         0|            0|            0|  0.00%|            raise ValueError("Unknown rank reduction method '%s'" %
   971|         0|            0|            0|  0.00%|                             reduction_method)
   972|         0|            0|            0|  0.00%|
   973|         0|            0|            0|  0.00%|    def setup(self, x, F, func):
   974|         0|            0|            0|  0.00%|        GenericBroyden.setup(self, x, F, func)
   975|         0|            0|            0|  0.00%|        self.Gm = LowRankMatrix(-self.alpha, self.shape[0], self.dtype)
   976|         0|            0|            0|  0.00%|
   977|         0|            0|            0|  0.00%|    def todense(self):
   978|         0|            0|            0|  0.00%|        return inv(self.Gm)
   979|         0|            0|            0|  0.00%|
   980|         0|            0|            0|  0.00%|    def solve(self, f, tol=0):
   981|         0|            0|            0|  0.00%|        r = self.Gm.matvec(f)
   982|         0|            0|            0|  0.00%|        if not np.isfinite(r).all():
   983|         0|            0|            0|  0.00%|            # singular; reset the Jacobian approximation
   984|         0|            0|            0|  0.00%|            self.setup(self.last_x, self.last_f, self.func)
   985|         0|            0|            0|  0.00%|        return self.Gm.matvec(f)
   986|         0|            0|            0|  0.00%|
   987|         0|            0|            0|  0.00%|    def matvec(self, f):
   988|         0|            0|            0|  0.00%|        return self.Gm.solve(f)
   989|         0|            0|            0|  0.00%|
   990|         0|            0|            0|  0.00%|    def rsolve(self, f, tol=0):
   991|         0|            0|            0|  0.00%|        return self.Gm.rmatvec(f)
   992|         0|            0|            0|  0.00%|
   993|         0|            0|            0|  0.00%|    def rmatvec(self, f):
   994|         0|            0|            0|  0.00%|        return self.Gm.rsolve(f)
   995|         0|            0|            0|  0.00%|
   996|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
   997|         0|            0|            0|  0.00%|        self._reduce()  # reduce first to preserve secant condition
   998|         0|            0|            0|  0.00%|
   999|         0|            0|            0|  0.00%|        v = self.Gm.rmatvec(dx)
  1000|         0|            0|            0|  0.00%|        c = dx - self.Gm.matvec(df)
  1001|         0|            0|            0|  0.00%|        d = v / vdot(df, v)
  1002|         0|            0|            0|  0.00%|
  1003|         0|            0|            0|  0.00%|        self.Gm.append(c, d)
  1004|         0|            0|            0|  0.00%|
  1005|         0|            0|            0|  0.00%|
  1006|         0|            0|            0|  0.00%|class BroydenSecond(BroydenFirst):
  1007|         0|            0|            0|  0.00%|    """
  1008|         0|            0|            0|  0.00%|    Find a root of a function, using Broyden\'s second Jacobian approximation.
  1009|         0|            0|            0|  0.00%|
  1010|         0|            0|            0|  0.00%|    This method is also known as \"Broyden's bad method\".
  1011|         0|            0|            0|  0.00%|
  1012|         0|            0|            0|  0.00%|    Parameters
  1013|         0|            0|            0|  0.00%|    ----------
  1014|         0|            0|            0|  0.00%|    %(params_basic)s
  1015|         0|            0|            0|  0.00%|    %(broyden_params)s
  1016|         0|            0|            0|  0.00%|    %(params_extra)s
  1017|         0|            0|            0|  0.00%|
  1018|         0|            0|            0|  0.00%|    See Also
  1019|         0|            0|            0|  0.00%|    --------
  1020|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1021|         0|            0|            0|  0.00%|           functions. See ``method=='broyden2'`` in particular.
  1022|         0|            0|            0|  0.00%|
  1023|         0|            0|            0|  0.00%|    Notes
  1024|         0|            0|            0|  0.00%|    -----
  1025|         0|            0|            0|  0.00%|    This algorithm implements the inverse Jacobian Quasi-Newton update
  1026|         0|            0|            0|  0.00%|
  1027|         0|            0|            0|  0.00%|    .. math:: H_+ = H + (dx - H df) df^\\dagger / ( df^\\dagger df)
  1028|         0|            0|            0|  0.00%|
  1029|         0|            0|            0|  0.00%|    corresponding to Broyden's second method.
  1030|         0|            0|            0|  0.00%|
  1031|         0|            0|            0|  0.00%|    References
  1032|         0|            0|            0|  0.00%|    ----------
  1033|         0|            0|            0|  0.00%|    .. [1] B.A. van der Rotten, PhD thesis,
  1034|         0|            0|            0|  0.00%|       \"A limited memory Broyden method to solve high-dimensional
  1035|         0|            0|            0|  0.00%|       systems of nonlinear equations\". Mathematisch Instituut,
  1036|         0|            0|            0|  0.00%|       Universiteit Leiden, The Netherlands (2003).
  1037|         0|            0|            0|  0.00%|
  1038|         0|            0|            0|  0.00%|       https://web.archive.org/web/20161022015821/http://www.math.leidenuniv.nl/scripties/Rotten.pdf
  1039|         0|            0|            0|  0.00%|
  1040|         0|            0|            0|  0.00%|    """
  1041|         0|            0|            0|  0.00%|
  1042|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
  1043|         0|            0|            0|  0.00%|        self._reduce()  # reduce first to preserve secant condition
  1044|         0|            0|            0|  0.00%|
  1045|         0|            0|            0|  0.00%|        v = df
  1046|         0|            0|            0|  0.00%|        c = dx - self.Gm.matvec(df)
  1047|         0|            0|            0|  0.00%|        d = v / df_norm**2
  1048|         0|            0|            0|  0.00%|        self.Gm.append(c, d)
  1049|         0|            0|            0|  0.00%|
  1050|         0|            0|            0|  0.00%|
  1051|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1052|         0|            0|            0|  0.00%|# Broyden-like (restricted memory)
  1053|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1054|         0|            0|            0|  0.00%|
  1055|         0|            0|            0|  0.00%|class Anderson(GenericBroyden):
  1056|         0|            0|            0|  0.00%|    """
  1057|         0|            0|            0|  0.00%|    Find a root of a function, using (extended) Anderson mixing.
  1058|         0|            0|            0|  0.00%|
  1059|         0|            0|            0|  0.00%|    The Jacobian is formed by for a 'best' solution in the space
  1060|         0|            0|            0|  0.00%|    spanned by last `M` vectors. As a result, only a MxM matrix
  1061|         0|            0|            0|  0.00%|    inversions and MxN multiplications are required. [Ey]_
  1062|         0|            0|            0|  0.00%|
  1063|         0|            0|            0|  0.00%|    Parameters
  1064|         0|            0|            0|  0.00%|    ----------
  1065|         0|            0|            0|  0.00%|    %(params_basic)s
  1066|         0|            0|            0|  0.00%|    alpha : float, optional
  1067|         0|            0|            0|  0.00%|        Initial guess for the Jacobian is (-1/alpha).
  1068|         0|            0|            0|  0.00%|    M : float, optional
  1069|         0|            0|            0|  0.00%|        Number of previous vectors to retain. Defaults to 5.
  1070|         0|            0|            0|  0.00%|    w0 : float, optional
  1071|         0|            0|            0|  0.00%|        Regularization parameter for numerical stability.
  1072|         0|            0|            0|  0.00%|        Compared to unity, good values of the order of 0.01.
  1073|         0|            0|            0|  0.00%|    %(params_extra)s
  1074|         0|            0|            0|  0.00%|
  1075|         0|            0|            0|  0.00%|    See Also
  1076|         0|            0|            0|  0.00%|    --------
  1077|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1078|         0|            0|            0|  0.00%|           functions. See ``method=='anderson'`` in particular.
  1079|         0|            0|            0|  0.00%|
  1080|         0|            0|            0|  0.00%|    References
  1081|         0|            0|            0|  0.00%|    ----------
  1082|         0|            0|            0|  0.00%|    .. [Ey] V. Eyert, J. Comp. Phys., 124, 271 (1996).
  1083|         0|            0|            0|  0.00%|
  1084|         0|            0|            0|  0.00%|    """
  1085|         0|            0|            0|  0.00%|
  1086|         0|            0|            0|  0.00%|    # Note:
  1087|         0|            0|            0|  0.00%|    #
  1088|         0|            0|            0|  0.00%|    # Anderson method maintains a rank M approximation of the inverse Jacobian,
  1089|         0|            0|            0|  0.00%|    #
  1090|         0|            0|            0|  0.00%|    #     J^-1 v ~ -v*alpha + (dX + alpha dF) A^-1 dF^H v
  1091|         0|            0|            0|  0.00%|    #     A      = W + dF^H dF
  1092|         0|            0|            0|  0.00%|    #     W      = w0^2 diag(dF^H dF)
  1093|         0|            0|            0|  0.00%|    #
  1094|         0|            0|            0|  0.00%|    # so that for w0 = 0 the secant condition applies for last M iterates, i.e.,
  1095|         0|            0|            0|  0.00%|    #
  1096|         0|            0|            0|  0.00%|    #     J^-1 df_j = dx_j
  1097|         0|            0|            0|  0.00%|    #
  1098|         0|            0|            0|  0.00%|    # for all j = 0 ... M-1.
  1099|         0|            0|            0|  0.00%|    #
  1100|         0|            0|            0|  0.00%|    # Moreover, (from Sherman-Morrison-Woodbury formula)
  1101|         0|            0|            0|  0.00%|    #
  1102|         0|            0|            0|  0.00%|    #    J v ~ [ b I - b^2 C (I + b dF^H A^-1 C)^-1 dF^H ] v
  1103|         0|            0|            0|  0.00%|    #    C   = (dX + alpha dF) A^-1
  1104|         0|            0|            0|  0.00%|    #    b   = -1/alpha
  1105|         0|            0|            0|  0.00%|    #
  1106|         0|            0|            0|  0.00%|    # and after simplification
  1107|         0|            0|            0|  0.00%|    #
  1108|         0|            0|            0|  0.00%|    #    J v ~ -v/alpha + (dX/alpha + dF) (dF^H dX - alpha W)^-1 dF^H v
  1109|         0|            0|            0|  0.00%|    #
  1110|         0|            0|            0|  0.00%|
  1111|         0|            0|            0|  0.00%|    def __init__(self, alpha=None, w0=0.01, M=5):
  1112|         0|            0|            0|  0.00%|        GenericBroyden.__init__(self)
  1113|         0|            0|            0|  0.00%|        self.alpha = alpha
  1114|         0|            0|            0|  0.00%|        self.M = M
  1115|         0|            0|            0|  0.00%|        self.dx = []
  1116|         0|            0|            0|  0.00%|        self.df = []
  1117|         0|            0|            0|  0.00%|        self.gamma = None
  1118|         0|            0|            0|  0.00%|        self.w0 = w0
  1119|         0|            0|            0|  0.00%|
  1120|         0|            0|            0|  0.00%|    def solve(self, f, tol=0):
  1121|         0|            0|            0|  0.00%|        dx = -self.alpha*f
  1122|         0|            0|            0|  0.00%|
  1123|         0|            0|            0|  0.00%|        n = len(self.dx)
  1124|         0|            0|            0|  0.00%|        if n == 0:
  1125|         0|            0|            0|  0.00%|            return dx
  1126|         0|            0|            0|  0.00%|
  1127|         0|            0|            0|  0.00%|        df_f = np.empty(n, dtype=f.dtype)
  1128|         0|            0|            0|  0.00%|        for k in range(n):
  1129|         0|            0|            0|  0.00%|            df_f[k] = vdot(self.df[k], f)
  1130|         0|            0|            0|  0.00%|
  1131|         0|            0|            0|  0.00%|        try:
  1132|         0|            0|            0|  0.00%|            gamma = solve(self.a, df_f)
  1133|         0|            0|            0|  0.00%|        except LinAlgError:
  1134|         0|            0|            0|  0.00%|            # singular; reset the Jacobian approximation
  1135|         0|            0|            0|  0.00%|            del self.dx[:]
  1136|         0|            0|            0|  0.00%|            del self.df[:]
  1137|         0|            0|            0|  0.00%|            return dx
  1138|         0|            0|            0|  0.00%|
  1139|         0|            0|            0|  0.00%|        for m in range(n):
  1140|         0|            0|            0|  0.00%|            dx += gamma[m]*(self.dx[m] + self.alpha*self.df[m])
  1141|         0|            0|            0|  0.00%|        return dx
  1142|         0|            0|            0|  0.00%|
  1143|         0|            0|            0|  0.00%|    def matvec(self, f):
  1144|         0|            0|            0|  0.00%|        dx = -f/self.alpha
  1145|         0|            0|            0|  0.00%|
  1146|         0|            0|            0|  0.00%|        n = len(self.dx)
  1147|         0|            0|            0|  0.00%|        if n == 0:
  1148|         0|            0|            0|  0.00%|            return dx
  1149|         0|            0|            0|  0.00%|
  1150|         0|            0|            0|  0.00%|        df_f = np.empty(n, dtype=f.dtype)
  1151|         0|            0|            0|  0.00%|        for k in range(n):
  1152|         0|            0|            0|  0.00%|            df_f[k] = vdot(self.df[k], f)
  1153|         0|            0|            0|  0.00%|
  1154|         0|            0|            0|  0.00%|        b = np.empty((n, n), dtype=f.dtype)
  1155|         0|            0|            0|  0.00%|        for i in range(n):
  1156|         0|            0|            0|  0.00%|            for j in range(n):
  1157|         0|            0|            0|  0.00%|                b[i,j] = vdot(self.df[i], self.dx[j])
  1158|         0|            0|            0|  0.00%|                if i == j and self.w0 != 0:
  1159|         0|            0|            0|  0.00%|                    b[i,j] -= vdot(self.df[i], self.df[i])*self.w0**2*self.alpha
  1160|         0|            0|            0|  0.00%|        gamma = solve(b, df_f)
  1161|         0|            0|            0|  0.00%|
  1162|         0|            0|            0|  0.00%|        for m in range(n):
  1163|         0|            0|            0|  0.00%|            dx += gamma[m]*(self.df[m] + self.dx[m]/self.alpha)
  1164|         0|            0|            0|  0.00%|        return dx
  1165|         0|            0|            0|  0.00%|
  1166|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
  1167|         0|            0|            0|  0.00%|        if self.M == 0:
  1168|         0|            0|            0|  0.00%|            return
  1169|         0|            0|            0|  0.00%|
  1170|         0|            0|            0|  0.00%|        self.dx.append(dx)
  1171|         0|            0|            0|  0.00%|        self.df.append(df)
  1172|         0|            0|            0|  0.00%|
  1173|         0|            0|            0|  0.00%|        while len(self.dx) > self.M:
  1174|         0|            0|            0|  0.00%|            self.dx.pop(0)
  1175|         0|            0|            0|  0.00%|            self.df.pop(0)
  1176|         0|            0|            0|  0.00%|
  1177|         0|            0|            0|  0.00%|        n = len(self.dx)
  1178|         0|            0|            0|  0.00%|        a = np.zeros((n, n), dtype=f.dtype)
  1179|         0|            0|            0|  0.00%|
  1180|         0|            0|            0|  0.00%|        for i in range(n):
  1181|         0|            0|            0|  0.00%|            for j in range(i, n):
  1182|         0|            0|            0|  0.00%|                if i == j:
  1183|         0|            0|            0|  0.00%|                    wd = self.w0**2
  1184|         0|            0|            0|  0.00%|                else:
  1185|         0|            0|            0|  0.00%|                    wd = 0
  1186|         0|            0|            0|  0.00%|                a[i,j] = (1+wd)*vdot(self.df[i], self.df[j])
  1187|         0|            0|            0|  0.00%|
  1188|         0|            0|            0|  0.00%|        a += np.triu(a, 1).T.conj()
  1189|         0|            0|            0|  0.00%|        self.a = a
  1190|         0|            0|            0|  0.00%|
  1191|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1192|         0|            0|            0|  0.00%|# Simple iterations
  1193|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1194|         0|            0|            0|  0.00%|
  1195|         0|            0|            0|  0.00%|
  1196|         0|            0|            0|  0.00%|class DiagBroyden(GenericBroyden):
  1197|         0|            0|            0|  0.00%|    """
  1198|         0|            0|            0|  0.00%|    Find a root of a function, using diagonal Broyden Jacobian approximation.
  1199|         0|            0|            0|  0.00%|
  1200|         0|            0|            0|  0.00%|    The Jacobian approximation is derived from previous iterations, by
  1201|         0|            0|            0|  0.00%|    retaining only the diagonal of Broyden matrices.
  1202|         0|            0|            0|  0.00%|
  1203|         0|            0|            0|  0.00%|    .. warning::
  1204|         0|            0|            0|  0.00%|
  1205|         0|            0|            0|  0.00%|       This algorithm may be useful for specific problems, but whether
  1206|         0|            0|            0|  0.00%|       it will work may depend strongly on the problem.
  1207|         0|            0|            0|  0.00%|
  1208|         0|            0|            0|  0.00%|    Parameters
  1209|         0|            0|            0|  0.00%|    ----------
  1210|         0|            0|            0|  0.00%|    %(params_basic)s
  1211|         0|            0|            0|  0.00%|    alpha : float, optional
  1212|         0|            0|            0|  0.00%|        Initial guess for the Jacobian is (-1/alpha).
  1213|         0|            0|            0|  0.00%|    %(params_extra)s
  1214|         0|            0|            0|  0.00%|
  1215|         0|            0|            0|  0.00%|    See Also
  1216|         0|            0|            0|  0.00%|    --------
  1217|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1218|         0|            0|            0|  0.00%|           functions. See ``method=='diagbroyden'`` in particular.
  1219|         0|            0|            0|  0.00%|    """
  1220|         0|            0|            0|  0.00%|
  1221|         0|            0|            0|  0.00%|    def __init__(self, alpha=None):
  1222|         0|            0|            0|  0.00%|        GenericBroyden.__init__(self)
  1223|         0|            0|            0|  0.00%|        self.alpha = alpha
  1224|         0|            0|            0|  0.00%|
  1225|         0|            0|            0|  0.00%|    def setup(self, x, F, func):
  1226|         0|            0|            0|  0.00%|        GenericBroyden.setup(self, x, F, func)
  1227|         0|            0|            0|  0.00%|        self.d = np.full((self.shape[0],), 1 / self.alpha, dtype=self.dtype)
  1228|         0|            0|            0|  0.00%|
  1229|         0|            0|            0|  0.00%|    def solve(self, f, tol=0):
  1230|         0|            0|            0|  0.00%|        return -f / self.d
  1231|         0|            0|            0|  0.00%|
  1232|         0|            0|            0|  0.00%|    def matvec(self, f):
  1233|         0|            0|            0|  0.00%|        return -f * self.d
  1234|         0|            0|            0|  0.00%|
  1235|         0|            0|            0|  0.00%|    def rsolve(self, f, tol=0):
  1236|         0|            0|            0|  0.00%|        return -f / self.d.conj()
  1237|         0|            0|            0|  0.00%|
  1238|         0|            0|            0|  0.00%|    def rmatvec(self, f):
  1239|         0|            0|            0|  0.00%|        return -f * self.d.conj()
  1240|         0|            0|            0|  0.00%|
  1241|         0|            0|            0|  0.00%|    def todense(self):
  1242|         0|            0|            0|  0.00%|        return np.diag(-self.d)
  1243|         0|            0|            0|  0.00%|
  1244|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
  1245|         0|            0|            0|  0.00%|        self.d -= (df + self.d*dx)*dx/dx_norm**2
  1246|         0|            0|            0|  0.00%|
  1247|         0|            0|            0|  0.00%|
  1248|         0|            0|            0|  0.00%|class LinearMixing(GenericBroyden):
  1249|         0|            0|            0|  0.00%|    """
  1250|         0|            0|            0|  0.00%|    Find a root of a function, using a scalar Jacobian approximation.
  1251|         0|            0|            0|  0.00%|
  1252|         0|            0|            0|  0.00%|    .. warning::
  1253|         0|            0|            0|  0.00%|
  1254|         0|            0|            0|  0.00%|       This algorithm may be useful for specific problems, but whether
  1255|         0|            0|            0|  0.00%|       it will work may depend strongly on the problem.
  1256|         0|            0|            0|  0.00%|
  1257|         0|            0|            0|  0.00%|    Parameters
  1258|         0|            0|            0|  0.00%|    ----------
  1259|         0|            0|            0|  0.00%|    %(params_basic)s
  1260|         0|            0|            0|  0.00%|    alpha : float, optional
  1261|         0|            0|            0|  0.00%|        The Jacobian approximation is (-1/alpha).
  1262|         0|            0|            0|  0.00%|    %(params_extra)s
  1263|         0|            0|            0|  0.00%|
  1264|         0|            0|            0|  0.00%|    See Also
  1265|         0|            0|            0|  0.00%|    --------
  1266|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1267|         0|            0|            0|  0.00%|           functions. See ``method=='linearmixing'`` in particular.
  1268|         0|            0|            0|  0.00%|
  1269|         0|            0|            0|  0.00%|    """
  1270|         0|            0|            0|  0.00%|
  1271|         0|            0|            0|  0.00%|    def __init__(self, alpha=None):
  1272|         0|            0|            0|  0.00%|        GenericBroyden.__init__(self)
  1273|         0|            0|            0|  0.00%|        self.alpha = alpha
  1274|         0|            0|            0|  0.00%|
  1275|         0|            0|            0|  0.00%|    def solve(self, f, tol=0):
  1276|         0|            0|            0|  0.00%|        return -f*self.alpha
  1277|         0|            0|            0|  0.00%|
  1278|         0|            0|            0|  0.00%|    def matvec(self, f):
  1279|         0|            0|            0|  0.00%|        return -f/self.alpha
  1280|         0|            0|            0|  0.00%|
  1281|         0|            0|            0|  0.00%|    def rsolve(self, f, tol=0):
  1282|         0|            0|            0|  0.00%|        return -f*np.conj(self.alpha)
  1283|         0|            0|            0|  0.00%|
  1284|         0|            0|            0|  0.00%|    def rmatvec(self, f):
  1285|         0|            0|            0|  0.00%|        return -f/np.conj(self.alpha)
  1286|         0|            0|            0|  0.00%|
  1287|         0|            0|            0|  0.00%|    def todense(self):
  1288|         0|            0|            0|  0.00%|        return np.diag(np.full(self.shape[0], -1/self.alpha))
  1289|         0|            0|            0|  0.00%|
  1290|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
  1291|         0|            0|            0|  0.00%|        pass
  1292|         0|            0|            0|  0.00%|
  1293|         0|            0|            0|  0.00%|
  1294|         0|            0|            0|  0.00%|class ExcitingMixing(GenericBroyden):
  1295|         0|            0|            0|  0.00%|    """
  1296|         0|            0|            0|  0.00%|    Find a root of a function, using a tuned diagonal Jacobian approximation.
  1297|         0|            0|            0|  0.00%|
  1298|         0|            0|            0|  0.00%|    The Jacobian matrix is diagonal and is tuned on each iteration.
  1299|         0|            0|            0|  0.00%|
  1300|         0|            0|            0|  0.00%|    .. warning::
  1301|         0|            0|            0|  0.00%|
  1302|         0|            0|            0|  0.00%|       This algorithm may be useful for specific problems, but whether
  1303|         0|            0|            0|  0.00%|       it will work may depend strongly on the problem.
  1304|         0|            0|            0|  0.00%|
  1305|         0|            0|            0|  0.00%|    See Also
  1306|         0|            0|            0|  0.00%|    --------
  1307|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1308|         0|            0|            0|  0.00%|           functions. See ``method=='excitingmixing'`` in particular.
  1309|         0|            0|            0|  0.00%|
  1310|         0|            0|            0|  0.00%|    Parameters
  1311|         0|            0|            0|  0.00%|    ----------
  1312|         0|            0|            0|  0.00%|    %(params_basic)s
  1313|         0|            0|            0|  0.00%|    alpha : float, optional
  1314|         0|            0|            0|  0.00%|        Initial Jacobian approximation is (-1/alpha).
  1315|         0|            0|            0|  0.00%|    alphamax : float, optional
  1316|         0|            0|            0|  0.00%|        The entries of the diagonal Jacobian are kept in the range
  1317|         0|            0|            0|  0.00%|        ``[alpha, alphamax]``.
  1318|         0|            0|            0|  0.00%|    %(params_extra)s
  1319|         0|            0|            0|  0.00%|    """
  1320|         0|            0|            0|  0.00%|
  1321|         0|            0|            0|  0.00%|    def __init__(self, alpha=None, alphamax=1.0):
  1322|         0|            0|            0|  0.00%|        GenericBroyden.__init__(self)
  1323|         0|            0|            0|  0.00%|        self.alpha = alpha
  1324|         0|            0|            0|  0.00%|        self.alphamax = alphamax
  1325|         0|            0|            0|  0.00%|        self.beta = None
  1326|         0|            0|            0|  0.00%|
  1327|         0|            0|            0|  0.00%|    def setup(self, x, F, func):
  1328|         0|            0|            0|  0.00%|        GenericBroyden.setup(self, x, F, func)
  1329|         0|            0|            0|  0.00%|        self.beta = np.full((self.shape[0],), self.alpha, dtype=self.dtype)
  1330|         0|            0|            0|  0.00%|
  1331|         0|            0|            0|  0.00%|    def solve(self, f, tol=0):
  1332|         0|            0|            0|  0.00%|        return -f*self.beta
  1333|         0|            0|            0|  0.00%|
  1334|         0|            0|            0|  0.00%|    def matvec(self, f):
  1335|         0|            0|            0|  0.00%|        return -f/self.beta
  1336|         0|            0|            0|  0.00%|
  1337|         0|            0|            0|  0.00%|    def rsolve(self, f, tol=0):
  1338|         0|            0|            0|  0.00%|        return -f*self.beta.conj()
  1339|         0|            0|            0|  0.00%|
  1340|         0|            0|            0|  0.00%|    def rmatvec(self, f):
  1341|         0|            0|            0|  0.00%|        return -f/self.beta.conj()
  1342|         0|            0|            0|  0.00%|
  1343|         0|            0|            0|  0.00%|    def todense(self):
  1344|         0|            0|            0|  0.00%|        return np.diag(-1/self.beta)
  1345|         0|            0|            0|  0.00%|
  1346|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
  1347|         0|            0|            0|  0.00%|        incr = f*self.last_f > 0
  1348|         0|            0|            0|  0.00%|        self.beta[incr] += self.alpha
  1349|         0|            0|            0|  0.00%|        self.beta[~incr] = self.alpha
  1350|         0|            0|            0|  0.00%|        np.clip(self.beta, 0, self.alphamax, out=self.beta)
  1351|         0|            0|            0|  0.00%|
  1352|         0|            0|            0|  0.00%|
  1353|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1354|         0|            0|            0|  0.00%|# Iterative/Krylov approximated Jacobians
  1355|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1356|         0|            0|            0|  0.00%|
  1357|         0|            0|            0|  0.00%|class KrylovJacobian(Jacobian):
  1358|         0|            0|            0|  0.00%|    r"""
  1359|         0|            0|            0|  0.00%|    Find a root of a function, using Krylov approximation for inverse Jacobian.
  1360|         0|            0|            0|  0.00%|
  1361|         0|            0|            0|  0.00%|    This method is suitable for solving large-scale problems.
  1362|         0|            0|            0|  0.00%|
  1363|         0|            0|            0|  0.00%|    Parameters
  1364|         0|            0|            0|  0.00%|    ----------
  1365|         0|            0|            0|  0.00%|    %(params_basic)s
  1366|         0|            0|            0|  0.00%|    rdiff : float, optional
  1367|         0|            0|            0|  0.00%|        Relative step size to use in numerical differentiation.
  1368|         0|            0|            0|  0.00%|    method : {'lgmres', 'gmres', 'bicgstab', 'cgs', 'minres'} or function
  1369|         0|            0|            0|  0.00%|        Krylov method to use to approximate the Jacobian.
  1370|         0|            0|            0|  0.00%|        Can be a string, or a function implementing the same interface as
  1371|         0|            0|            0|  0.00%|        the iterative solvers in `scipy.sparse.linalg`.
  1372|         0|            0|            0|  0.00%|
  1373|         0|            0|            0|  0.00%|        The default is `scipy.sparse.linalg.lgmres`.
  1374|         0|            0|            0|  0.00%|    inner_maxiter : int, optional
  1375|         0|            0|            0|  0.00%|        Parameter to pass to the "inner" Krylov solver: maximum number of
  1376|         0|            0|            0|  0.00%|        iterations. Iteration will stop after maxiter steps even if the
  1377|         0|            0|            0|  0.00%|        specified tolerance has not been achieved.
  1378|         0|            0|            0|  0.00%|    inner_M : LinearOperator or InverseJacobian
  1379|         0|            0|            0|  0.00%|        Preconditioner for the inner Krylov iteration.
  1380|         0|            0|            0|  0.00%|        Note that you can use also inverse Jacobians as (adaptive)
  1381|         0|            0|            0|  0.00%|        preconditioners. For example,
  1382|         0|            0|            0|  0.00%|
  1383|         0|            0|            0|  0.00%|        >>> from scipy.optimize.nonlin import BroydenFirst, KrylovJacobian
  1384|         0|            0|            0|  0.00%|        >>> from scipy.optimize.nonlin import InverseJacobian
  1385|         0|            0|            0|  0.00%|        >>> jac = BroydenFirst()
  1386|         0|            0|            0|  0.00%|        >>> kjac = KrylovJacobian(inner_M=InverseJacobian(jac))
  1387|         0|            0|            0|  0.00%|
  1388|         0|            0|            0|  0.00%|        If the preconditioner has a method named 'update', it will be called
  1389|         0|            0|            0|  0.00%|        as ``update(x, f)`` after each nonlinear step, with ``x`` giving
  1390|         0|            0|            0|  0.00%|        the current point, and ``f`` the current function value.
  1391|         0|            0|            0|  0.00%|    outer_k : int, optional
  1392|         0|            0|            0|  0.00%|        Size of the subspace kept across LGMRES nonlinear iterations.
  1393|         0|            0|            0|  0.00%|        See `scipy.sparse.linalg.lgmres` for details.
  1394|         0|            0|            0|  0.00%|    inner_kwargs : kwargs
  1395|         0|            0|            0|  0.00%|        Keyword parameters for the "inner" Krylov solver
  1396|         0|            0|            0|  0.00%|        (defined with `method`). Parameter names must start with
  1397|         0|            0|            0|  0.00%|        the `inner_` prefix which will be stripped before passing on
  1398|         0|            0|            0|  0.00%|        the inner method. See, e.g., `scipy.sparse.linalg.gmres` for details.
  1399|         0|            0|            0|  0.00%|    %(params_extra)s
  1400|         0|            0|            0|  0.00%|
  1401|         0|            0|            0|  0.00%|    See Also
  1402|         0|            0|            0|  0.00%|    --------
  1403|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1404|         0|            0|            0|  0.00%|           functions. See ``method=='krylov'`` in particular.
  1405|         0|            0|            0|  0.00%|    scipy.sparse.linalg.gmres
  1406|         0|            0|            0|  0.00%|    scipy.sparse.linalg.lgmres
  1407|         0|            0|            0|  0.00%|
  1408|         0|            0|            0|  0.00%|    Notes
  1409|         0|            0|            0|  0.00%|    -----
  1410|         0|            0|            0|  0.00%|    This function implements a Newton-Krylov solver. The basic idea is
  1411|         0|            0|            0|  0.00%|    to compute the inverse of the Jacobian with an iterative Krylov
  1412|         0|            0|            0|  0.00%|    method. These methods require only evaluating the Jacobian-vector
  1413|         0|            0|            0|  0.00%|    products, which are conveniently approximated by a finite difference:
  1414|         0|            0|            0|  0.00%|
  1415|         0|            0|            0|  0.00%|    .. math:: J v \approx (f(x + \omega*v/|v|) - f(x)) / \omega
  1416|         0|            0|            0|  0.00%|
  1417|         0|            0|            0|  0.00%|    Due to the use of iterative matrix inverses, these methods can
  1418|         0|            0|            0|  0.00%|    deal with large nonlinear problems.
  1419|         0|            0|            0|  0.00%|
  1420|         0|            0|            0|  0.00%|    SciPy's `scipy.sparse.linalg` module offers a selection of Krylov
  1421|         0|            0|            0|  0.00%|    solvers to choose from. The default here is `lgmres`, which is a
  1422|         0|            0|            0|  0.00%|    variant of restarted GMRES iteration that reuses some of the
  1423|         0|            0|            0|  0.00%|    information obtained in the previous Newton steps to invert
  1424|         0|            0|            0|  0.00%|    Jacobians in subsequent steps.
  1425|         0|            0|            0|  0.00%|
  1426|         0|            0|            0|  0.00%|    For a review on Newton-Krylov methods, see for example [1]_,
  1427|         0|            0|            0|  0.00%|    and for the LGMRES sparse inverse method, see [2]_.
  1428|         0|            0|            0|  0.00%|
  1429|         0|            0|            0|  0.00%|    References
  1430|         0|            0|            0|  0.00%|    ----------
  1431|         0|            0|            0|  0.00%|    .. [1] D.A. Knoll and D.E. Keyes, J. Comp. Phys. 193, 357 (2004).
  1432|         0|            0|            0|  0.00%|           :doi:`10.1016/j.jcp.2003.08.010`
  1433|         0|            0|            0|  0.00%|    .. [2] A.H. Baker and E.R. Jessup and T. Manteuffel,
  1434|         0|            0|            0|  0.00%|           SIAM J. Matrix Anal. Appl. 26, 962 (2005).
  1435|         0|            0|            0|  0.00%|           :doi:`10.1137/S0895479803422014`
  1436|         0|            0|            0|  0.00%|
  1437|         0|            0|            0|  0.00%|    """
  1438|         0|            0|            0|  0.00%|
  1439|         0|            0|            0|  0.00%|    def __init__(self, rdiff=None, method='lgmres', inner_maxiter=20,
  1440|         0|            0|            0|  0.00%|                 inner_M=None, outer_k=10, **kw):
  1441|         0|            0|            0|  0.00%|        self.preconditioner = inner_M
  1442|         0|            0|            0|  0.00%|        self.rdiff = rdiff
  1443|         0|            0|            0|  0.00%|        self.method = dict(
  1444|         0|            0|            0|  0.00%|            bicgstab=scipy.sparse.linalg.bicgstab,
  1445|         0|            0|            0|  0.00%|            gmres=scipy.sparse.linalg.gmres,
  1446|         0|            0|            0|  0.00%|            lgmres=scipy.sparse.linalg.lgmres,
  1447|         0|            0|            0|  0.00%|            cgs=scipy.sparse.linalg.cgs,
  1448|         0|            0|            0|  0.00%|            minres=scipy.sparse.linalg.minres,
  1449|         0|            0|            0|  0.00%|            ).get(method, method)
  1450|         0|            0|            0|  0.00%|
  1451|         0|            0|            0|  0.00%|        self.method_kw = dict(maxiter=inner_maxiter, M=self.preconditioner)
  1452|         0|            0|            0|  0.00%|
  1453|         0|            0|            0|  0.00%|        if self.method is scipy.sparse.linalg.gmres:
  1454|         0|            0|            0|  0.00%|            # Replace GMRES's outer iteration with Newton steps
  1455|         0|            0|            0|  0.00%|            self.method_kw['restrt'] = inner_maxiter
  1456|         0|            0|            0|  0.00%|            self.method_kw['maxiter'] = 1
  1457|         0|            0|            0|  0.00%|            self.method_kw.setdefault('atol', 0)
  1458|         0|            0|            0|  0.00%|        elif self.method is scipy.sparse.linalg.gcrotmk:
  1459|         0|            0|            0|  0.00%|            self.method_kw.setdefault('atol', 0)
  1460|         0|            0|            0|  0.00%|        elif self.method is scipy.sparse.linalg.lgmres:
  1461|         0|            0|            0|  0.00%|            self.method_kw['outer_k'] = outer_k
  1462|         0|            0|            0|  0.00%|            # Replace LGMRES's outer iteration with Newton steps
  1463|         0|            0|            0|  0.00%|            self.method_kw['maxiter'] = 1
  1464|         0|            0|            0|  0.00%|            # Carry LGMRES's `outer_v` vectors across nonlinear iterations
  1465|         0|            0|            0|  0.00%|            self.method_kw.setdefault('outer_v', [])
  1466|         0|            0|            0|  0.00%|            self.method_kw.setdefault('prepend_outer_v', True)
  1467|         0|            0|            0|  0.00%|            # But don't carry the corresponding Jacobian*v products, in case
  1468|         0|            0|            0|  0.00%|            # the Jacobian changes a lot in the nonlinear step
  1469|         0|            0|            0|  0.00%|            #
  1470|         0|            0|            0|  0.00%|            # XXX: some trust-region inspired ideas might be more efficient...
  1471|         0|            0|            0|  0.00%|            #      See e.g., Brown & Saad. But needs to be implemented separately
  1472|         0|            0|            0|  0.00%|            #      since it's not an inexact Newton method.
  1473|         0|            0|            0|  0.00%|            self.method_kw.setdefault('store_outer_Av', False)
  1474|         0|            0|            0|  0.00%|            self.method_kw.setdefault('atol', 0)
  1475|         0|            0|            0|  0.00%|
  1476|         0|            0|            0|  0.00%|        for key, value in kw.items():
  1477|         0|            0|            0|  0.00%|            if not key.startswith('inner_'):
  1478|         0|            0|            0|  0.00%|                raise ValueError("Unknown parameter %s" % key)
  1479|         0|            0|            0|  0.00%|            self.method_kw[key[6:]] = value
  1480|         0|            0|            0|  0.00%|
  1481|         0|            0|            0|  0.00%|    def _update_diff_step(self):
  1482|         0|            0|            0|  0.00%|        mx = abs(self.x0).max()
  1483|         0|            0|            0|  0.00%|        mf = abs(self.f0).max()
  1484|         0|            0|            0|  0.00%|        self.omega = self.rdiff * max(1, mx) / max(1, mf)
  1485|         0|            0|            0|  0.00%|
  1486|         0|            0|            0|  0.00%|    def matvec(self, v):
  1487|         0|            0|            0|  0.00%|        nv = norm(v)
  1488|         0|            0|            0|  0.00%|        if nv == 0:
  1489|         0|            0|            0|  0.00%|            return 0*v
  1490|         0|            0|            0|  0.00%|        sc = self.omega / nv
  1491|         0|            0|            0|  0.00%|        r = (self.func(self.x0 + sc*v) - self.f0) / sc
  1492|         0|            0|            0|  0.00%|        if not np.all(np.isfinite(r)) and np.all(np.isfinite(v)):
  1493|         0|            0|            0|  0.00%|            raise ValueError('Function returned non-finite results')
  1494|         0|            0|            0|  0.00%|        return r
  1495|         0|            0|            0|  0.00%|
  1496|         0|            0|            0|  0.00%|    def solve(self, rhs, tol=0):
  1497|         0|            0|            0|  0.00%|        if 'tol' in self.method_kw:
  1498|         0|            0|            0|  0.00%|            sol, info = self.method(self.op, rhs, **self.method_kw)
  1499|         0|            0|            0|  0.00%|        else:
  1500|         0|            0|            0|  0.00%|            sol, info = self.method(self.op, rhs, tol=tol, **self.method_kw)
  1501|         0|            0|            0|  0.00%|        return sol
  1502|         0|            0|            0|  0.00%|
  1503|         0|            0|            0|  0.00%|    def update(self, x, f):
  1504|         0|            0|            0|  0.00%|        self.x0 = x
  1505|         0|            0|            0|  0.00%|        self.f0 = f
  1506|         0|            0|            0|  0.00%|        self._update_diff_step()
  1507|         0|            0|            0|  0.00%|
  1508|         0|            0|            0|  0.00%|        # Update also the preconditioner, if possible
  1509|         0|            0|            0|  0.00%|        if self.preconditioner is not None:
  1510|         0|            0|            0|  0.00%|            if hasattr(self.preconditioner, 'update'):
  1511|         0|            0|            0|  0.00%|                self.preconditioner.update(x, f)
  1512|         0|            0|            0|  0.00%|
  1513|         0|            0|            0|  0.00%|    def setup(self, x, f, func):
  1514|         0|            0|            0|  0.00%|        Jacobian.setup(self, x, f, func)
  1515|         0|            0|            0|  0.00%|        self.x0 = x
  1516|         0|            0|            0|  0.00%|        self.f0 = f
  1517|         0|            0|            0|  0.00%|        self.op = scipy.sparse.linalg.aslinearoperator(self)
  1518|         0|            0|            0|  0.00%|
  1519|         0|            0|            0|  0.00%|        if self.rdiff is None:
  1520|         0|            0|            0|  0.00%|            self.rdiff = np.finfo(x.dtype).eps ** (1./2)
  1521|         0|            0|            0|  0.00%|
  1522|         0|            0|            0|  0.00%|        self._update_diff_step()
  1523|         0|            0|            0|  0.00%|
  1524|         0|            0|            0|  0.00%|        # Setup also the preconditioner, if possible
  1525|         0|            0|            0|  0.00%|        if self.preconditioner is not None:
  1526|         0|            0|            0|  0.00%|            if hasattr(self.preconditioner, 'setup'):
  1527|         0|            0|            0|  0.00%|                self.preconditioner.setup(x, f, func)
  1528|         0|            0|            0|  0.00%|
  1529|         0|            0|            0|  0.00%|
  1530|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1531|         0|            0|            0|  0.00%|# Wrapper functions
  1532|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1533|         0|            0|            0|  0.00%|
  1534|         0|            0|            0|  0.00%|def _nonlin_wrapper(name, jac):
  1535|         0|            0|            0|  0.00%|    """
  1536|         0|            0|            0|  0.00%|    Construct a solver wrapper with given name and Jacobian approx.
  1537|         0|            0|            0|  0.00%|
  1538|         0|            0|            0|  0.00%|    It inspects the keyword arguments of ``jac.__init__``, and allows to
  1539|         0|            0|            0|  0.00%|    use the same arguments in the wrapper function, in addition to the
  1540|         0|            0|            0|  0.00%|    keyword arguments of `nonlin_solve`
  1541|         0|            0|            0|  0.00%|
  1542|         0|            0|            0|  0.00%|    """
  1543|         0|            0|            0|  0.00%|    signature = _getfullargspec(jac.__init__)
  1544|         0|            0|            0|  0.00%|    args, varargs, varkw, defaults, kwonlyargs, kwdefaults, _ = signature
  1545|         0|            0|            0|  0.00%|    kwargs = list(zip(args[-len(defaults):], defaults))
  1546|         0|            0|            0|  0.00%|    kw_str = ", ".join(["%s=%r" % (k, v) for k, v in kwargs])
  1547|         0|            0|            0|  0.00%|    if kw_str:
  1548|         0|            0|            0|  0.00%|        kw_str = ", " + kw_str
  1549|         0|            0|            0|  0.00%|    kwkw_str = ", ".join(["%s=%s" % (k, k) for k, v in kwargs])
  1550|         0|            0|            0|  0.00%|    if kwkw_str:
  1551|         0|            0|            0|  0.00%|        kwkw_str = kwkw_str + ", "
  1552|         0|            0|            0|  0.00%|    if kwonlyargs:
  1553|         0|            0|            0|  0.00%|        raise ValueError('Unexpected signature %s' % signature)
  1554|         0|            0|            0|  0.00%|
  1555|         0|            0|            0|  0.00%|    # Construct the wrapper function so that its keyword arguments
  1556|         0|            0|            0|  0.00%|    # are visible in pydoc.help etc.
  1557|         0|            0|            0|  0.00%|    wrapper = """
  1558|         0|            0|            0|  0.00%|def %(name)s(F, xin, iter=None %(kw)s, verbose=False, maxiter=None,
  1559|         0|            0|            0|  0.00%|             f_tol=None, f_rtol=None, x_tol=None, x_rtol=None,
  1560|         0|            0|            0|  0.00%|             tol_norm=None, line_search='armijo', callback=None, **kw):
  1561|         0|            0|            0|  0.00%|    jac = %(jac)s(%(kwkw)s **kw)
  1562|         0|            0|            0|  0.00%|    return nonlin_solve(F, xin, jac, iter, verbose, maxiter,
  1563|         0|            0|            0|  0.00%|                        f_tol, f_rtol, x_tol, x_rtol, tol_norm, line_search,
  1564|         0|            0|            0|  0.00%|                        callback)
  1565|         0|            0|            0|  0.00%|"""
  1566|         0|            0|            0|  0.00%|
  1567|         0|            0|            0|  0.00%|    wrapper = wrapper % dict(name=name, kw=kw_str, jac=jac.__name__,
  1568|         0|            0|            0|  0.00%|                             kwkw=kwkw_str)
  1569|         0|            0|            0|  0.00%|    ns = {}
  1570|         0|            0|            0|  0.00%|    ns.update(globals())
  1571|         0|            0|            0|  0.00%|    exec(wrapper, ns)
  1572|         0|            0|            0|  0.00%|    func = ns[name]
  1573|         0|            0|            0|  0.00%|    func.__doc__ = jac.__doc__
  1574|         0|            0|            0|  0.00%|    _set_doc(func)
  1575|         0|            0|            0|  0.00%|    return func
  1576|         0|            0|            0|  0.00%|
  1577|         0|            0|            0|  0.00%|
  1578|         0|            0|            0|  0.00%|broyden1 = _nonlin_wrapper('broyden1', BroydenFirst)
  1579|         0|            0|            0|  0.00%|broyden2 = _nonlin_wrapper('broyden2', BroydenSecond)
  1580|         0|            0|            0|  0.00%|anderson = _nonlin_wrapper('anderson', Anderson)
  1581|         0|            0|            0|  0.00%|linearmixing = _nonlin_wrapper('linearmixing', LinearMixing)
  1582|         0|            0|            0|  0.00%|diagbroyden = _nonlin_wrapper('diagbroyden', DiagBroyden)
  1583|         0|            0|            0|  0.00%|excitingmixing = _nonlin_wrapper('excitingmixing', ExcitingMixing)
  1584|         0|            0|            0|  0.00%|newton_krylov = _nonlin_wrapper('newton_krylov', KrylovJacobian)
File: <string>_282
File duration: 2.55108e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.55108e-05|  1.27554e-05|  0.00%|
File: <string>_34
File duration: 2.5034e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|   2.5034e-05|   1.2517e-05|  0.00%|
File: <string>_43
File duration: 2.5034e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|   2.5034e-05|   1.2517e-05|  0.00%|
File: <string>_80
File duration: 2.5034e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|   2.5034e-05|   1.2517e-05|  0.00%|
File: <string>_128
File duration: 2.5034e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|   2.5034e-05|   1.2517e-05|  0.00%|
File: <string>_82
File duration: 2.5034e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|   2.5034e-05|   1.2517e-05|  0.00%|
File: <string>_6
File duration: 2.47955e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.47955e-05|  1.23978e-05|  0.00%|
File: <string>_314
File duration: 2.47955e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.47955e-05|  1.23978e-05|  0.00%|
File: <string>_17
File duration: 2.45571e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.45571e-05|  1.22786e-05|  0.00%|
File: <string>_114
File duration: 2.45571e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.45571e-05|  1.22786e-05|  0.00%|
File: <string>_39
File duration: 2.45571e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.45571e-05|  1.22786e-05|  0.00%|
File: <string>_83
File duration: 2.45571e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.45571e-05|  1.22786e-05|  0.00%|
File: <string>_294
File duration: 2.45571e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.45571e-05|  1.22786e-05|  0.00%|
File: <string>_85
File duration: 2.45571e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.45571e-05|  1.22786e-05|  0.00%|
File: <string>_40
File duration: 2.45571e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.45571e-05|  1.22786e-05|  0.00%|
File: <string>_112
File duration: 2.45571e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.45571e-05|  1.22786e-05|  0.00%|
File: <string>_297
File duration: 2.43187e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.43187e-05|  1.21593e-05|  0.00%|
File: <string>_73
File duration: 2.40803e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.40803e-05|  1.20401e-05|  0.00%|
File: <string>_0
File duration: 2.40803e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.40803e-05|  1.20401e-05|  0.00%|
File: <string>_152
File duration: 2.40803e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|r"""
     2|         1|  9.77516e-06|  9.77516e-06|  0.00%|
     3|         0|            0|            0|  0.00%|Nonlinear solvers
     4|         1|  1.43051e-05|  1.43051e-05|  0.00%|-----------------
     5|         0|            0|            0|  0.00%|
     6|         0|            0|            0|  0.00%|.. currentmodule:: scipy.optimize
     7|         0|            0|            0|  0.00%|
     8|         0|            0|            0|  0.00%|This is a collection of general-purpose nonlinear multidimensional
     9|         0|            0|            0|  0.00%|solvers. These solvers find *x* for which *F(x) = 0*. Both *x*
    10|         0|            0|            0|  0.00%|and *F* can be multidimensional.
    11|         0|            0|            0|  0.00%|
    12|         0|            0|            0|  0.00%|Routines
    13|         0|            0|            0|  0.00%|~~~~~~~~
    14|         0|            0|            0|  0.00%|
    15|         0|            0|            0|  0.00%|Large-scale nonlinear solvers:
    16|         0|            0|            0|  0.00%|
    17|         0|            0|            0|  0.00%|.. autosummary::
    18|         0|            0|            0|  0.00%|
    19|         0|            0|            0|  0.00%|   newton_krylov
    20|         0|            0|            0|  0.00%|   anderson
    21|         0|            0|            0|  0.00%|
    22|         0|            0|            0|  0.00%|General nonlinear solvers:
    23|         0|            0|            0|  0.00%|
    24|         0|            0|            0|  0.00%|.. autosummary::
    25|         0|            0|            0|  0.00%|
    26|         0|            0|            0|  0.00%|   broyden1
    27|         0|            0|            0|  0.00%|   broyden2
    28|         0|            0|            0|  0.00%|
    29|         0|            0|            0|  0.00%|Simple iterations:
    30|         0|            0|            0|  0.00%|
    31|         0|            0|            0|  0.00%|.. autosummary::
    32|         0|            0|            0|  0.00%|
    33|         0|            0|            0|  0.00%|   excitingmixing
    34|         0|            0|            0|  0.00%|   linearmixing
    35|         0|            0|            0|  0.00%|   diagbroyden
    36|         0|            0|            0|  0.00%|
    37|         0|            0|            0|  0.00%|
    38|         0|            0|            0|  0.00%|Examples
    39|         0|            0|            0|  0.00%|~~~~~~~~
    40|         0|            0|            0|  0.00%|
    41|         0|            0|            0|  0.00%|**Small problem**
    42|         0|            0|            0|  0.00%|
    43|         0|            0|            0|  0.00%|>>> def F(x):
    44|         0|            0|            0|  0.00%|...    return np.cos(x) + x[::-1] - [1, 2, 3, 4]
    45|         0|            0|            0|  0.00%|>>> import scipy.optimize
    46|         0|            0|            0|  0.00%|>>> x = scipy.optimize.broyden1(F, [1,1,1,1], f_tol=1e-14)
    47|         0|            0|            0|  0.00%|>>> x
    48|         0|            0|            0|  0.00%|array([ 4.04674914,  3.91158389,  2.71791677,  1.61756251])
    49|         0|            0|            0|  0.00%|>>> np.cos(x) + x[::-1]
    50|         0|            0|            0|  0.00%|array([ 1.,  2.,  3.,  4.])
    51|         0|            0|            0|  0.00%|
    52|         0|            0|            0|  0.00%|
    53|         0|            0|            0|  0.00%|**Large problem**
    54|         0|            0|            0|  0.00%|
    55|         0|            0|            0|  0.00%|Suppose that we needed to solve the following integrodifferential
    56|         0|            0|            0|  0.00%|equation on the square :math:`[0,1]\times[0,1]`:
    57|         0|            0|            0|  0.00%|
    58|         0|            0|            0|  0.00%|.. math::
    59|         0|            0|            0|  0.00%|
    60|         0|            0|            0|  0.00%|   \nabla^2 P = 10 \left(\int_0^1\int_0^1\cosh(P)\,dx\,dy\right)^2
    61|         0|            0|            0|  0.00%|
    62|         0|            0|            0|  0.00%|with :math:`P(x,1) = 1` and :math:`P=0` elsewhere on the boundary of
    63|         0|            0|            0|  0.00%|the square.
    64|         0|            0|            0|  0.00%|
    65|         0|            0|            0|  0.00%|The solution can be found using the `newton_krylov` solver:
    66|         0|            0|            0|  0.00%|
    67|         0|            0|            0|  0.00%|.. plot::
    68|         0|            0|            0|  0.00%|
    69|         0|            0|            0|  0.00%|   import numpy as np
    70|         0|            0|            0|  0.00%|   from scipy.optimize import newton_krylov
    71|         0|            0|            0|  0.00%|   from numpy import cosh, zeros_like, mgrid, zeros
    72|         0|            0|            0|  0.00%|
    73|         0|            0|            0|  0.00%|   # parameters
    74|         0|            0|            0|  0.00%|   nx, ny = 75, 75
    75|         0|            0|            0|  0.00%|   hx, hy = 1./(nx-1), 1./(ny-1)
    76|         0|            0|            0|  0.00%|
    77|         0|            0|            0|  0.00%|   P_left, P_right = 0, 0
    78|         0|            0|            0|  0.00%|   P_top, P_bottom = 1, 0
    79|         0|            0|            0|  0.00%|
    80|         0|            0|            0|  0.00%|   def residual(P):
    81|         0|            0|            0|  0.00%|       d2x = zeros_like(P)
    82|         0|            0|            0|  0.00%|       d2y = zeros_like(P)
    83|         0|            0|            0|  0.00%|
    84|         0|            0|            0|  0.00%|       d2x[1:-1] = (P[2:]   - 2*P[1:-1] + P[:-2]) / hx/hx
    85|         0|            0|            0|  0.00%|       d2x[0]    = (P[1]    - 2*P[0]    + P_left)/hx/hx
    86|         0|            0|            0|  0.00%|       d2x[-1]   = (P_right - 2*P[-1]   + P[-2])/hx/hx
    87|         0|            0|            0|  0.00%|
    88|         0|            0|            0|  0.00%|       d2y[:,1:-1] = (P[:,2:] - 2*P[:,1:-1] + P[:,:-2])/hy/hy
    89|         0|            0|            0|  0.00%|       d2y[:,0]    = (P[:,1]  - 2*P[:,0]    + P_bottom)/hy/hy
    90|         0|            0|            0|  0.00%|       d2y[:,-1]   = (P_top   - 2*P[:,-1]   + P[:,-2])/hy/hy
    91|         0|            0|            0|  0.00%|
    92|         0|            0|            0|  0.00%|       return d2x + d2y - 10*cosh(P).mean()**2
    93|         0|            0|            0|  0.00%|
    94|         0|            0|            0|  0.00%|   # solve
    95|         0|            0|            0|  0.00%|   guess = zeros((nx, ny), float)
    96|         0|            0|            0|  0.00%|   sol = newton_krylov(residual, guess, method='lgmres', verbose=1)
    97|         0|            0|            0|  0.00%|   print('Residual: %g' % abs(residual(sol)).max())
    98|         0|            0|            0|  0.00%|
    99|         0|            0|            0|  0.00%|   # visualize
   100|         0|            0|            0|  0.00%|   import matplotlib.pyplot as plt
   101|         0|            0|            0|  0.00%|   x, y = mgrid[0:1:(nx*1j), 0:1:(ny*1j)]
   102|         0|            0|            0|  0.00%|   plt.pcolormesh(x, y, sol, shading='gouraud')
   103|         0|            0|            0|  0.00%|   plt.colorbar()
   104|         0|            0|            0|  0.00%|   plt.show()
   105|         0|            0|            0|  0.00%|
   106|         0|            0|            0|  0.00%|"""
   107|         0|            0|            0|  0.00%|# Copyright (C) 2009, Pauli Virtanen <pav@iki.fi>
   108|         0|            0|            0|  0.00%|# Distributed under the same license as SciPy.
   109|         0|            0|            0|  0.00%|
   110|         0|            0|            0|  0.00%|import sys
   111|         0|            0|            0|  0.00%|import numpy as np
   112|         0|            0|            0|  0.00%|from scipy.linalg import norm, solve, inv, qr, svd, LinAlgError
   113|         0|            0|            0|  0.00%|from numpy import asarray, dot, vdot
   114|         0|            0|            0|  0.00%|import scipy.sparse.linalg
   115|         0|            0|            0|  0.00%|import scipy.sparse
   116|         0|            0|            0|  0.00%|from scipy.linalg import get_blas_funcs
   117|         0|            0|            0|  0.00%|import inspect
   118|         0|            0|            0|  0.00%|from scipy._lib._util import getfullargspec_no_self as _getfullargspec
   119|         0|            0|            0|  0.00%|from .linesearch import scalar_search_wolfe1, scalar_search_armijo
   120|         0|            0|            0|  0.00%|
   121|         0|            0|            0|  0.00%|
   122|         0|            0|            0|  0.00%|__all__ = [
   123|         0|            0|            0|  0.00%|    'broyden1', 'broyden2', 'anderson', 'linearmixing',
   124|         0|            0|            0|  0.00%|    'diagbroyden', 'excitingmixing', 'newton_krylov']
   125|         0|            0|            0|  0.00%|
   126|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   127|         0|            0|            0|  0.00%|# Utility functions
   128|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   129|         0|            0|            0|  0.00%|
   130|         0|            0|            0|  0.00%|
   131|         0|            0|            0|  0.00%|class NoConvergence(Exception):
   132|         0|            0|            0|  0.00%|    pass
   133|         0|            0|            0|  0.00%|
   134|         0|            0|            0|  0.00%|
   135|         0|            0|            0|  0.00%|def maxnorm(x):
   136|         0|            0|            0|  0.00%|    return np.absolute(x).max()
   137|         0|            0|            0|  0.00%|
   138|         0|            0|            0|  0.00%|
   139|         0|            0|            0|  0.00%|def _as_inexact(x):
   140|         0|            0|            0|  0.00%|    """Return `x` as an array, of either floats or complex floats"""
   141|         0|            0|            0|  0.00%|    x = asarray(x)
   142|         0|            0|            0|  0.00%|    if not np.issubdtype(x.dtype, np.inexact):
   143|         0|            0|            0|  0.00%|        return asarray(x, dtype=np.float_)
   144|         0|            0|            0|  0.00%|    return x
   145|         0|            0|            0|  0.00%|
   146|         0|            0|            0|  0.00%|
   147|         0|            0|            0|  0.00%|def _array_like(x, x0):
   148|         0|            0|            0|  0.00%|    """Return ndarray `x` as same array subclass and shape as `x0`"""
   149|         0|            0|            0|  0.00%|    x = np.reshape(x, np.shape(x0))
   150|         0|            0|            0|  0.00%|    wrap = getattr(x0, '__array_wrap__', x.__array_wrap__)
   151|         0|            0|            0|  0.00%|    return wrap(x)
   152|         0|            0|            0|  0.00%|
   153|         0|            0|            0|  0.00%|
   154|         0|            0|            0|  0.00%|def _safe_norm(v):
   155|         0|            0|            0|  0.00%|    if not np.isfinite(v).all():
   156|         0|            0|            0|  0.00%|        return np.array(np.inf)
   157|         0|            0|            0|  0.00%|    return norm(v)
   158|         0|            0|            0|  0.00%|
   159|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   160|         0|            0|            0|  0.00%|# Generic nonlinear solver machinery
   161|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   162|         0|            0|            0|  0.00%|
   163|         0|            0|            0|  0.00%|
   164|         0|            0|            0|  0.00%|_doc_parts = dict(
   165|         0|            0|            0|  0.00%|    params_basic="""
   166|         0|            0|            0|  0.00%|    F : function(x) -> f
   167|         0|            0|            0|  0.00%|        Function whose root to find; should take and return an array-like
   168|         0|            0|            0|  0.00%|        object.
   169|         0|            0|            0|  0.00%|    xin : array_like
   170|         0|            0|            0|  0.00%|        Initial guess for the solution
   171|         0|            0|            0|  0.00%|    """.strip(),
   172|         0|            0|            0|  0.00%|    params_extra="""
   173|         0|            0|            0|  0.00%|    iter : int, optional
   174|         0|            0|            0|  0.00%|        Number of iterations to make. If omitted (default), make as many
   175|         0|            0|            0|  0.00%|        as required to meet tolerances.
   176|         0|            0|            0|  0.00%|    verbose : bool, optional
   177|         0|            0|            0|  0.00%|        Print status to stdout on every iteration.
   178|         0|            0|            0|  0.00%|    maxiter : int, optional
   179|         0|            0|            0|  0.00%|        Maximum number of iterations to make. If more are needed to
   180|         0|            0|            0|  0.00%|        meet convergence, `NoConvergence` is raised.
   181|         0|            0|            0|  0.00%|    f_tol : float, optional
   182|         0|            0|            0|  0.00%|        Absolute tolerance (in max-norm) for the residual.
   183|         0|            0|            0|  0.00%|        If omitted, default is 6e-6.
   184|         0|            0|            0|  0.00%|    f_rtol : float, optional
   185|         0|            0|            0|  0.00%|        Relative tolerance for the residual. If omitted, not used.
   186|         0|            0|            0|  0.00%|    x_tol : float, optional
   187|         0|            0|            0|  0.00%|        Absolute minimum step size, as determined from the Jacobian
   188|         0|            0|            0|  0.00%|        approximation. If the step size is smaller than this, optimization
   189|         0|            0|            0|  0.00%|        is terminated as successful. If omitted, not used.
   190|         0|            0|            0|  0.00%|    x_rtol : float, optional
   191|         0|            0|            0|  0.00%|        Relative minimum step size. If omitted, not used.
   192|         0|            0|            0|  0.00%|    tol_norm : function(vector) -> scalar, optional
   193|         0|            0|            0|  0.00%|        Norm to use in convergence check. Default is the maximum norm.
   194|         0|            0|            0|  0.00%|    line_search : {None, 'armijo' (default), 'wolfe'}, optional
   195|         0|            0|            0|  0.00%|        Which type of a line search to use to determine the step size in the
   196|         0|            0|            0|  0.00%|        direction given by the Jacobian approximation. Defaults to 'armijo'.
   197|         0|            0|            0|  0.00%|    callback : function, optional
   198|         0|            0|            0|  0.00%|        Optional callback function. It is called on every iteration as
   199|         0|            0|            0|  0.00%|        ``callback(x, f)`` where `x` is the current solution and `f`
   200|         0|            0|            0|  0.00%|        the corresponding residual.
   201|         0|            0|            0|  0.00%|
   202|         0|            0|            0|  0.00%|    Returns
   203|         0|            0|            0|  0.00%|    -------
   204|         0|            0|            0|  0.00%|    sol : ndarray
   205|         0|            0|            0|  0.00%|        An array (of similar array type as `x0`) containing the final solution.
   206|         0|            0|            0|  0.00%|
   207|         0|            0|            0|  0.00%|    Raises
   208|         0|            0|            0|  0.00%|    ------
   209|         0|            0|            0|  0.00%|    NoConvergence
   210|         0|            0|            0|  0.00%|        When a solution was not found.
   211|         0|            0|            0|  0.00%|
   212|         0|            0|            0|  0.00%|    """.strip()
   213|         0|            0|            0|  0.00%|)
   214|         0|            0|            0|  0.00%|
   215|         0|            0|            0|  0.00%|
   216|         0|            0|            0|  0.00%|def _set_doc(obj):
   217|         0|            0|            0|  0.00%|    if obj.__doc__:
   218|         0|            0|            0|  0.00%|        obj.__doc__ = obj.__doc__ % _doc_parts
   219|         0|            0|            0|  0.00%|
   220|         0|            0|            0|  0.00%|
   221|         0|            0|            0|  0.00%|def nonlin_solve(F, x0, jacobian='krylov', iter=None, verbose=False,
   222|         0|            0|            0|  0.00%|                 maxiter=None, f_tol=None, f_rtol=None, x_tol=None, x_rtol=None,
   223|         0|            0|            0|  0.00%|                 tol_norm=None, line_search='armijo', callback=None,
   224|         0|            0|            0|  0.00%|                 full_output=False, raise_exception=True):
   225|         0|            0|            0|  0.00%|    """
   226|         0|            0|            0|  0.00%|    Find a root of a function, in a way suitable for large-scale problems.
   227|         0|            0|            0|  0.00%|
   228|         0|            0|            0|  0.00%|    Parameters
   229|         0|            0|            0|  0.00%|    ----------
   230|         0|            0|            0|  0.00%|    %(params_basic)s
   231|         0|            0|            0|  0.00%|    jacobian : Jacobian
   232|         0|            0|            0|  0.00%|        A Jacobian approximation: `Jacobian` object or something that
   233|         0|            0|            0|  0.00%|        `asjacobian` can transform to one. Alternatively, a string specifying
   234|         0|            0|            0|  0.00%|        which of the builtin Jacobian approximations to use:
   235|         0|            0|            0|  0.00%|
   236|         0|            0|            0|  0.00%|            krylov, broyden1, broyden2, anderson
   237|         0|            0|            0|  0.00%|            diagbroyden, linearmixing, excitingmixing
   238|         0|            0|            0|  0.00%|
   239|         0|            0|            0|  0.00%|    %(params_extra)s
   240|         0|            0|            0|  0.00%|    full_output : bool
   241|         0|            0|            0|  0.00%|        If true, returns a dictionary `info` containing convergence
   242|         0|            0|            0|  0.00%|        information.
   243|         0|            0|            0|  0.00%|    raise_exception : bool
   244|         0|            0|            0|  0.00%|        If True, a `NoConvergence` exception is raise if no solution is found.
   245|         0|            0|            0|  0.00%|
   246|         0|            0|            0|  0.00%|    See Also
   247|         0|            0|            0|  0.00%|    --------
   248|         0|            0|            0|  0.00%|    asjacobian, Jacobian
   249|         0|            0|            0|  0.00%|
   250|         0|            0|            0|  0.00%|    Notes
   251|         0|            0|            0|  0.00%|    -----
   252|         0|            0|            0|  0.00%|    This algorithm implements the inexact Newton method, with
   253|         0|            0|            0|  0.00%|    backtracking or full line searches. Several Jacobian
   254|         0|            0|            0|  0.00%|    approximations are available, including Krylov and Quasi-Newton
   255|         0|            0|            0|  0.00%|    methods.
   256|         0|            0|            0|  0.00%|
   257|         0|            0|            0|  0.00%|    References
   258|         0|            0|            0|  0.00%|    ----------
   259|         0|            0|            0|  0.00%|    .. [KIM] C. T. Kelley, \"Iterative Methods for Linear and Nonlinear
   260|         0|            0|            0|  0.00%|       Equations\". Society for Industrial and Applied Mathematics. (1995)
   261|         0|            0|            0|  0.00%|       https://archive.siam.org/books/kelley/fr16/
   262|         0|            0|            0|  0.00%|
   263|         0|            0|            0|  0.00%|    """
   264|         0|            0|            0|  0.00%|    # Can't use default parameters because it's being explicitly passed as None
   265|         0|            0|            0|  0.00%|    # from the calling function, so we need to set it here.
   266|         0|            0|            0|  0.00%|    tol_norm = maxnorm if tol_norm is None else tol_norm
   267|         0|            0|            0|  0.00%|    condition = TerminationCondition(f_tol=f_tol, f_rtol=f_rtol,
   268|         0|            0|            0|  0.00%|                                     x_tol=x_tol, x_rtol=x_rtol,
   269|         0|            0|            0|  0.00%|                                     iter=iter, norm=tol_norm)
   270|         0|            0|            0|  0.00%|
   271|         0|            0|            0|  0.00%|    x0 = _as_inexact(x0)
   272|         0|            0|            0|  0.00%|    func = lambda z: _as_inexact(F(_array_like(z, x0))).flatten()
   273|         0|            0|            0|  0.00%|    x = x0.flatten()
   274|         0|            0|            0|  0.00%|
   275|         0|            0|            0|  0.00%|    dx = np.inf
   276|         0|            0|            0|  0.00%|    Fx = func(x)
   277|         0|            0|            0|  0.00%|    Fx_norm = norm(Fx)
   278|         0|            0|            0|  0.00%|
   279|         0|            0|            0|  0.00%|    jacobian = asjacobian(jacobian)
   280|         0|            0|            0|  0.00%|    jacobian.setup(x.copy(), Fx, func)
   281|         0|            0|            0|  0.00%|
   282|         0|            0|            0|  0.00%|    if maxiter is None:
   283|         0|            0|            0|  0.00%|        if iter is not None:
   284|         0|            0|            0|  0.00%|            maxiter = iter + 1
   285|         0|            0|            0|  0.00%|        else:
   286|         0|            0|            0|  0.00%|            maxiter = 100*(x.size+1)
   287|         0|            0|            0|  0.00%|
   288|         0|            0|            0|  0.00%|    if line_search is True:
   289|         0|            0|            0|  0.00%|        line_search = 'armijo'
   290|         0|            0|            0|  0.00%|    elif line_search is False:
   291|         0|            0|            0|  0.00%|        line_search = None
   292|         0|            0|            0|  0.00%|
   293|         0|            0|            0|  0.00%|    if line_search not in (None, 'armijo', 'wolfe'):
   294|         0|            0|            0|  0.00%|        raise ValueError("Invalid line search")
   295|         0|            0|            0|  0.00%|
   296|         0|            0|            0|  0.00%|    # Solver tolerance selection
   297|         0|            0|            0|  0.00%|    gamma = 0.9
   298|         0|            0|            0|  0.00%|    eta_max = 0.9999
   299|         0|            0|            0|  0.00%|    eta_treshold = 0.1
   300|         0|            0|            0|  0.00%|    eta = 1e-3
   301|         0|            0|            0|  0.00%|
   302|         0|            0|            0|  0.00%|    for n in range(maxiter):
   303|         0|            0|            0|  0.00%|        status = condition.check(Fx, x, dx)
   304|         0|            0|            0|  0.00%|        if status:
   305|         0|            0|            0|  0.00%|            break
   306|         0|            0|            0|  0.00%|
   307|         0|            0|            0|  0.00%|        # The tolerance, as computed for scipy.sparse.linalg.* routines
   308|         0|            0|            0|  0.00%|        tol = min(eta, eta*Fx_norm)
   309|         0|            0|            0|  0.00%|        dx = -jacobian.solve(Fx, tol=tol)
   310|         0|            0|            0|  0.00%|
   311|         0|            0|            0|  0.00%|        if norm(dx) == 0:
   312|         0|            0|            0|  0.00%|            raise ValueError("Jacobian inversion yielded zero vector. "
   313|         0|            0|            0|  0.00%|                             "This indicates a bug in the Jacobian "
   314|         0|            0|            0|  0.00%|                             "approximation.")
   315|         0|            0|            0|  0.00%|
   316|         0|            0|            0|  0.00%|        # Line search, or Newton step
   317|         0|            0|            0|  0.00%|        if line_search:
   318|         0|            0|            0|  0.00%|            s, x, Fx, Fx_norm_new = _nonlin_line_search(func, x, Fx, dx,
   319|         0|            0|            0|  0.00%|                                                        line_search)
   320|         0|            0|            0|  0.00%|        else:
   321|         0|            0|            0|  0.00%|            s = 1.0
   322|         0|            0|            0|  0.00%|            x = x + dx
   323|         0|            0|            0|  0.00%|            Fx = func(x)
   324|         0|            0|            0|  0.00%|            Fx_norm_new = norm(Fx)
   325|         0|            0|            0|  0.00%|
   326|         0|            0|            0|  0.00%|        jacobian.update(x.copy(), Fx)
   327|         0|            0|            0|  0.00%|
   328|         0|            0|            0|  0.00%|        if callback:
   329|         0|            0|            0|  0.00%|            callback(x, Fx)
   330|         0|            0|            0|  0.00%|
   331|         0|            0|            0|  0.00%|        # Adjust forcing parameters for inexact methods
   332|         0|            0|            0|  0.00%|        eta_A = gamma * Fx_norm_new**2 / Fx_norm**2
   333|         0|            0|            0|  0.00%|        if gamma * eta**2 < eta_treshold:
   334|         0|            0|            0|  0.00%|            eta = min(eta_max, eta_A)
   335|         0|            0|            0|  0.00%|        else:
   336|         0|            0|            0|  0.00%|            eta = min(eta_max, max(eta_A, gamma*eta**2))
   337|         0|            0|            0|  0.00%|
   338|         0|            0|            0|  0.00%|        Fx_norm = Fx_norm_new
   339|         0|            0|            0|  0.00%|
   340|         0|            0|            0|  0.00%|        # Print status
   341|         0|            0|            0|  0.00%|        if verbose:
   342|         0|            0|            0|  0.00%|            sys.stdout.write("%d:  |F(x)| = %g; step %g\n" % (
   343|         0|            0|            0|  0.00%|                n, tol_norm(Fx), s))
   344|         0|            0|            0|  0.00%|            sys.stdout.flush()
   345|         0|            0|            0|  0.00%|    else:
   346|         0|            0|            0|  0.00%|        if raise_exception:
   347|         0|            0|            0|  0.00%|            raise NoConvergence(_array_like(x, x0))
   348|         0|            0|            0|  0.00%|        else:
   349|         0|            0|            0|  0.00%|            status = 2
   350|         0|            0|            0|  0.00%|
   351|         0|            0|            0|  0.00%|    if full_output:
   352|         0|            0|            0|  0.00%|        info = {'nit': condition.iteration,
   353|         0|            0|            0|  0.00%|                'fun': Fx,
   354|         0|            0|            0|  0.00%|                'status': status,
   355|         0|            0|            0|  0.00%|                'success': status == 1,
   356|         0|            0|            0|  0.00%|                'message': {1: 'A solution was found at the specified '
   357|         0|            0|            0|  0.00%|                               'tolerance.',
   358|         0|            0|            0|  0.00%|                            2: 'The maximum number of iterations allowed '
   359|         0|            0|            0|  0.00%|                               'has been reached.'
   360|         0|            0|            0|  0.00%|                            }[status]
   361|         0|            0|            0|  0.00%|                }
   362|         0|            0|            0|  0.00%|        return _array_like(x, x0), info
   363|         0|            0|            0|  0.00%|    else:
   364|         0|            0|            0|  0.00%|        return _array_like(x, x0)
   365|         0|            0|            0|  0.00%|
   366|         0|            0|            0|  0.00%|
   367|         0|            0|            0|  0.00%|_set_doc(nonlin_solve)
   368|         0|            0|            0|  0.00%|
   369|         0|            0|            0|  0.00%|
   370|         0|            0|            0|  0.00%|def _nonlin_line_search(func, x, Fx, dx, search_type='armijo', rdiff=1e-8,
   371|         0|            0|            0|  0.00%|                        smin=1e-2):
   372|         0|            0|            0|  0.00%|    tmp_s = [0]
   373|         0|            0|            0|  0.00%|    tmp_Fx = [Fx]
   374|         0|            0|            0|  0.00%|    tmp_phi = [norm(Fx)**2]
   375|         0|            0|            0|  0.00%|    s_norm = norm(x) / norm(dx)
   376|         0|            0|            0|  0.00%|
   377|         0|            0|            0|  0.00%|    def phi(s, store=True):
   378|         0|            0|            0|  0.00%|        if s == tmp_s[0]:
   379|         0|            0|            0|  0.00%|            return tmp_phi[0]
   380|         0|            0|            0|  0.00%|        xt = x + s*dx
   381|         0|            0|            0|  0.00%|        v = func(xt)
   382|         0|            0|            0|  0.00%|        p = _safe_norm(v)**2
   383|         0|            0|            0|  0.00%|        if store:
   384|         0|            0|            0|  0.00%|            tmp_s[0] = s
   385|         0|            0|            0|  0.00%|            tmp_phi[0] = p
   386|         0|            0|            0|  0.00%|            tmp_Fx[0] = v
   387|         0|            0|            0|  0.00%|        return p
   388|         0|            0|            0|  0.00%|
   389|         0|            0|            0|  0.00%|    def derphi(s):
   390|         0|            0|            0|  0.00%|        ds = (abs(s) + s_norm + 1) * rdiff
   391|         0|            0|            0|  0.00%|        return (phi(s+ds, store=False) - phi(s)) / ds
   392|         0|            0|            0|  0.00%|
   393|         0|            0|            0|  0.00%|    if search_type == 'wolfe':
   394|         0|            0|            0|  0.00%|        s, phi1, phi0 = scalar_search_wolfe1(phi, derphi, tmp_phi[0],
   395|         0|            0|            0|  0.00%|                                             xtol=1e-2, amin=smin)
   396|         0|            0|            0|  0.00%|    elif search_type == 'armijo':
   397|         0|            0|            0|  0.00%|        s, phi1 = scalar_search_armijo(phi, tmp_phi[0], -tmp_phi[0],
   398|         0|            0|            0|  0.00%|                                       amin=smin)
   399|         0|            0|            0|  0.00%|
   400|         0|            0|            0|  0.00%|    if s is None:
   401|         0|            0|            0|  0.00%|        # XXX: No suitable step length found. Take the full Newton step,
   402|         0|            0|            0|  0.00%|        #      and hope for the best.
   403|         0|            0|            0|  0.00%|        s = 1.0
   404|         0|            0|            0|  0.00%|
   405|         0|            0|            0|  0.00%|    x = x + s*dx
   406|         0|            0|            0|  0.00%|    if s == tmp_s[0]:
   407|         0|            0|            0|  0.00%|        Fx = tmp_Fx[0]
   408|         0|            0|            0|  0.00%|    else:
   409|         0|            0|            0|  0.00%|        Fx = func(x)
   410|         0|            0|            0|  0.00%|    Fx_norm = norm(Fx)
   411|         0|            0|            0|  0.00%|
   412|         0|            0|            0|  0.00%|    return s, x, Fx, Fx_norm
   413|         0|            0|            0|  0.00%|
   414|         0|            0|            0|  0.00%|
   415|         0|            0|            0|  0.00%|class TerminationCondition(object):
   416|         0|            0|            0|  0.00%|    """
   417|         0|            0|            0|  0.00%|    Termination condition for an iteration. It is terminated if
   418|         0|            0|            0|  0.00%|
   419|         0|            0|            0|  0.00%|    - |F| < f_rtol*|F_0|, AND
   420|         0|            0|            0|  0.00%|    - |F| < f_tol
   421|         0|            0|            0|  0.00%|
   422|         0|            0|            0|  0.00%|    AND
   423|         0|            0|            0|  0.00%|
   424|         0|            0|            0|  0.00%|    - |dx| < x_rtol*|x|, AND
   425|         0|            0|            0|  0.00%|    - |dx| < x_tol
   426|         0|            0|            0|  0.00%|
   427|         0|            0|            0|  0.00%|    """
   428|         0|            0|            0|  0.00%|    def __init__(self, f_tol=None, f_rtol=None, x_tol=None, x_rtol=None,
   429|         0|            0|            0|  0.00%|                 iter=None, norm=maxnorm):
   430|         0|            0|            0|  0.00%|
   431|         0|            0|            0|  0.00%|        if f_tol is None:
   432|         0|            0|            0|  0.00%|            f_tol = np.finfo(np.float_).eps ** (1./3)
   433|         0|            0|            0|  0.00%|        if f_rtol is None:
   434|         0|            0|            0|  0.00%|            f_rtol = np.inf
   435|         0|            0|            0|  0.00%|        if x_tol is None:
   436|         0|            0|            0|  0.00%|            x_tol = np.inf
   437|         0|            0|            0|  0.00%|        if x_rtol is None:
   438|         0|            0|            0|  0.00%|            x_rtol = np.inf
   439|         0|            0|            0|  0.00%|
   440|         0|            0|            0|  0.00%|        self.x_tol = x_tol
   441|         0|            0|            0|  0.00%|        self.x_rtol = x_rtol
   442|         0|            0|            0|  0.00%|        self.f_tol = f_tol
   443|         0|            0|            0|  0.00%|        self.f_rtol = f_rtol
   444|         0|            0|            0|  0.00%|
   445|         0|            0|            0|  0.00%|        self.norm = norm
   446|         0|            0|            0|  0.00%|
   447|         0|            0|            0|  0.00%|        self.iter = iter
   448|         0|            0|            0|  0.00%|
   449|         0|            0|            0|  0.00%|        self.f0_norm = None
   450|         0|            0|            0|  0.00%|        self.iteration = 0
   451|         0|            0|            0|  0.00%|
   452|         0|            0|            0|  0.00%|    def check(self, f, x, dx):
   453|         0|            0|            0|  0.00%|        self.iteration += 1
   454|         0|            0|            0|  0.00%|        f_norm = self.norm(f)
   455|         0|            0|            0|  0.00%|        x_norm = self.norm(x)
   456|         0|            0|            0|  0.00%|        dx_norm = self.norm(dx)
   457|         0|            0|            0|  0.00%|
   458|         0|            0|            0|  0.00%|        if self.f0_norm is None:
   459|         0|            0|            0|  0.00%|            self.f0_norm = f_norm
   460|         0|            0|            0|  0.00%|
   461|         0|            0|            0|  0.00%|        if f_norm == 0:
   462|         0|            0|            0|  0.00%|            return 1
   463|         0|            0|            0|  0.00%|
   464|         0|            0|            0|  0.00%|        if self.iter is not None:
   465|         0|            0|            0|  0.00%|            # backwards compatibility with SciPy 0.6.0
   466|         0|            0|            0|  0.00%|            return 2 * (self.iteration > self.iter)
   467|         0|            0|            0|  0.00%|
   468|         0|            0|            0|  0.00%|        # NB: condition must succeed for rtol=inf even if norm == 0
   469|         0|            0|            0|  0.00%|        return int((f_norm <= self.f_tol
   470|         0|            0|            0|  0.00%|                    and f_norm/self.f_rtol <= self.f0_norm)
   471|         0|            0|            0|  0.00%|                   and (dx_norm <= self.x_tol
   472|         0|            0|            0|  0.00%|                        and dx_norm/self.x_rtol <= x_norm))
   473|         0|            0|            0|  0.00%|
   474|         0|            0|            0|  0.00%|
   475|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   476|         0|            0|            0|  0.00%|# Generic Jacobian approximation
   477|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   478|         0|            0|            0|  0.00%|
   479|         0|            0|            0|  0.00%|class Jacobian(object):
   480|         0|            0|            0|  0.00%|    """
   481|         0|            0|            0|  0.00%|    Common interface for Jacobians or Jacobian approximations.
   482|         0|            0|            0|  0.00%|
   483|         0|            0|            0|  0.00%|    The optional methods come useful when implementing trust region
   484|         0|            0|            0|  0.00%|    etc., algorithms that often require evaluating transposes of the
   485|         0|            0|            0|  0.00%|    Jacobian.
   486|         0|            0|            0|  0.00%|
   487|         0|            0|            0|  0.00%|    Methods
   488|         0|            0|            0|  0.00%|    -------
   489|         0|            0|            0|  0.00%|    solve
   490|         0|            0|            0|  0.00%|        Returns J^-1 * v
   491|         0|            0|            0|  0.00%|    update
   492|         0|            0|            0|  0.00%|        Updates Jacobian to point `x` (where the function has residual `Fx`)
   493|         0|            0|            0|  0.00%|
   494|         0|            0|            0|  0.00%|    matvec : optional
   495|         0|            0|            0|  0.00%|        Returns J * v
   496|         0|            0|            0|  0.00%|    rmatvec : optional
   497|         0|            0|            0|  0.00%|        Returns A^H * v
   498|         0|            0|            0|  0.00%|    rsolve : optional
   499|         0|            0|            0|  0.00%|        Returns A^-H * v
   500|         0|            0|            0|  0.00%|    matmat : optional
   501|         0|            0|            0|  0.00%|        Returns A * V, where V is a dense matrix with dimensions (N,K).
   502|         0|            0|            0|  0.00%|    todense : optional
   503|         0|            0|            0|  0.00%|        Form the dense Jacobian matrix. Necessary for dense trust region
   504|         0|            0|            0|  0.00%|        algorithms, and useful for testing.
   505|         0|            0|            0|  0.00%|
   506|         0|            0|            0|  0.00%|    Attributes
   507|         0|            0|            0|  0.00%|    ----------
   508|         0|            0|            0|  0.00%|    shape
   509|         0|            0|            0|  0.00%|        Matrix dimensions (M, N)
   510|         0|            0|            0|  0.00%|    dtype
   511|         0|            0|            0|  0.00%|        Data type of the matrix.
   512|         0|            0|            0|  0.00%|    func : callable, optional
   513|         0|            0|            0|  0.00%|        Function the Jacobian corresponds to
   514|         0|            0|            0|  0.00%|
   515|         0|            0|            0|  0.00%|    """
   516|         0|            0|            0|  0.00%|
   517|         0|            0|            0|  0.00%|    def __init__(self, **kw):
   518|         0|            0|            0|  0.00%|        names = ["solve", "update", "matvec", "rmatvec", "rsolve",
   519|         0|            0|            0|  0.00%|                 "matmat", "todense", "shape", "dtype"]
   520|         0|            0|            0|  0.00%|        for name, value in kw.items():
   521|         0|            0|            0|  0.00%|            if name not in names:
   522|         0|            0|            0|  0.00%|                raise ValueError("Unknown keyword argument %s" % name)
   523|         0|            0|            0|  0.00%|            if value is not None:
   524|         0|            0|            0|  0.00%|                setattr(self, name, kw[name])
   525|         0|            0|            0|  0.00%|
   526|         0|            0|            0|  0.00%|        if hasattr(self, 'todense'):
   527|         0|            0|            0|  0.00%|            self.__array__ = lambda: self.todense()
   528|         0|            0|            0|  0.00%|
   529|         0|            0|            0|  0.00%|    def aspreconditioner(self):
   530|         0|            0|            0|  0.00%|        return InverseJacobian(self)
   531|         0|            0|            0|  0.00%|
   532|         0|            0|            0|  0.00%|    def solve(self, v, tol=0):
   533|         0|            0|            0|  0.00%|        raise NotImplementedError
   534|         0|            0|            0|  0.00%|
   535|         0|            0|            0|  0.00%|    def update(self, x, F):
   536|         0|            0|            0|  0.00%|        pass
   537|         0|            0|            0|  0.00%|
   538|         0|            0|            0|  0.00%|    def setup(self, x, F, func):
   539|         0|            0|            0|  0.00%|        self.func = func
   540|         0|            0|            0|  0.00%|        self.shape = (F.size, x.size)
   541|         0|            0|            0|  0.00%|        self.dtype = F.dtype
   542|         0|            0|            0|  0.00%|        if self.__class__.setup is Jacobian.setup:
   543|         0|            0|            0|  0.00%|            # Call on the first point unless overridden
   544|         0|            0|            0|  0.00%|            self.update(x, F)
   545|         0|            0|            0|  0.00%|
   546|         0|            0|            0|  0.00%|
   547|         0|            0|            0|  0.00%|class InverseJacobian(object):
   548|         0|            0|            0|  0.00%|    def __init__(self, jacobian):
   549|         0|            0|            0|  0.00%|        self.jacobian = jacobian
   550|         0|            0|            0|  0.00%|        self.matvec = jacobian.solve
   551|         0|            0|            0|  0.00%|        self.update = jacobian.update
   552|         0|            0|            0|  0.00%|        if hasattr(jacobian, 'setup'):
   553|         0|            0|            0|  0.00%|            self.setup = jacobian.setup
   554|         0|            0|            0|  0.00%|        if hasattr(jacobian, 'rsolve'):
   555|         0|            0|            0|  0.00%|            self.rmatvec = jacobian.rsolve
   556|         0|            0|            0|  0.00%|
   557|         0|            0|            0|  0.00%|    @property
   558|         0|            0|            0|  0.00%|    def shape(self):
   559|         0|            0|            0|  0.00%|        return self.jacobian.shape
   560|         0|            0|            0|  0.00%|
   561|         0|            0|            0|  0.00%|    @property
   562|         0|            0|            0|  0.00%|    def dtype(self):
   563|         0|            0|            0|  0.00%|        return self.jacobian.dtype
   564|         0|            0|            0|  0.00%|
   565|         0|            0|            0|  0.00%|
   566|         0|            0|            0|  0.00%|def asjacobian(J):
   567|         0|            0|            0|  0.00%|    """
   568|         0|            0|            0|  0.00%|    Convert given object to one suitable for use as a Jacobian.
   569|         0|            0|            0|  0.00%|    """
   570|         0|            0|            0|  0.00%|    spsolve = scipy.sparse.linalg.spsolve
   571|         0|            0|            0|  0.00%|    if isinstance(J, Jacobian):
   572|         0|            0|            0|  0.00%|        return J
   573|         0|            0|            0|  0.00%|    elif inspect.isclass(J) and issubclass(J, Jacobian):
   574|         0|            0|            0|  0.00%|        return J()
   575|         0|            0|            0|  0.00%|    elif isinstance(J, np.ndarray):
   576|         0|            0|            0|  0.00%|        if J.ndim > 2:
   577|         0|            0|            0|  0.00%|            raise ValueError('array must have rank <= 2')
   578|         0|            0|            0|  0.00%|        J = np.atleast_2d(np.asarray(J))
   579|         0|            0|            0|  0.00%|        if J.shape[0] != J.shape[1]:
   580|         0|            0|            0|  0.00%|            raise ValueError('array must be square')
   581|         0|            0|            0|  0.00%|
   582|         0|            0|            0|  0.00%|        return Jacobian(matvec=lambda v: dot(J, v),
   583|         0|            0|            0|  0.00%|                        rmatvec=lambda v: dot(J.conj().T, v),
   584|         0|            0|            0|  0.00%|                        solve=lambda v: solve(J, v),
   585|         0|            0|            0|  0.00%|                        rsolve=lambda v: solve(J.conj().T, v),
   586|         0|            0|            0|  0.00%|                        dtype=J.dtype, shape=J.shape)
   587|         0|            0|            0|  0.00%|    elif scipy.sparse.isspmatrix(J):
   588|         0|            0|            0|  0.00%|        if J.shape[0] != J.shape[1]:
   589|         0|            0|            0|  0.00%|            raise ValueError('matrix must be square')
   590|         0|            0|            0|  0.00%|        return Jacobian(matvec=lambda v: J*v,
   591|         0|            0|            0|  0.00%|                        rmatvec=lambda v: J.conj().T * v,
   592|         0|            0|            0|  0.00%|                        solve=lambda v: spsolve(J, v),
   593|         0|            0|            0|  0.00%|                        rsolve=lambda v: spsolve(J.conj().T, v),
   594|         0|            0|            0|  0.00%|                        dtype=J.dtype, shape=J.shape)
   595|         0|            0|            0|  0.00%|    elif hasattr(J, 'shape') and hasattr(J, 'dtype') and hasattr(J, 'solve'):
   596|         0|            0|            0|  0.00%|        return Jacobian(matvec=getattr(J, 'matvec'),
   597|         0|            0|            0|  0.00%|                        rmatvec=getattr(J, 'rmatvec'),
   598|         0|            0|            0|  0.00%|                        solve=J.solve,
   599|         0|            0|            0|  0.00%|                        rsolve=getattr(J, 'rsolve'),
   600|         0|            0|            0|  0.00%|                        update=getattr(J, 'update'),
   601|         0|            0|            0|  0.00%|                        setup=getattr(J, 'setup'),
   602|         0|            0|            0|  0.00%|                        dtype=J.dtype,
   603|         0|            0|            0|  0.00%|                        shape=J.shape)
   604|         0|            0|            0|  0.00%|    elif callable(J):
   605|         0|            0|            0|  0.00%|        # Assume it's a function J(x) that returns the Jacobian
   606|         0|            0|            0|  0.00%|        class Jac(Jacobian):
   607|         0|            0|            0|  0.00%|            def update(self, x, F):
   608|         0|            0|            0|  0.00%|                self.x = x
   609|         0|            0|            0|  0.00%|
   610|         0|            0|            0|  0.00%|            def solve(self, v, tol=0):
   611|         0|            0|            0|  0.00%|                m = J(self.x)
   612|         0|            0|            0|  0.00%|                if isinstance(m, np.ndarray):
   613|         0|            0|            0|  0.00%|                    return solve(m, v)
   614|         0|            0|            0|  0.00%|                elif scipy.sparse.isspmatrix(m):
   615|         0|            0|            0|  0.00%|                    return spsolve(m, v)
   616|         0|            0|            0|  0.00%|                else:
   617|         0|            0|            0|  0.00%|                    raise ValueError("Unknown matrix type")
   618|         0|            0|            0|  0.00%|
   619|         0|            0|            0|  0.00%|            def matvec(self, v):
   620|         0|            0|            0|  0.00%|                m = J(self.x)
   621|         0|            0|            0|  0.00%|                if isinstance(m, np.ndarray):
   622|         0|            0|            0|  0.00%|                    return dot(m, v)
   623|         0|            0|            0|  0.00%|                elif scipy.sparse.isspmatrix(m):
   624|         0|            0|            0|  0.00%|                    return m*v
   625|         0|            0|            0|  0.00%|                else:
   626|         0|            0|            0|  0.00%|                    raise ValueError("Unknown matrix type")
   627|         0|            0|            0|  0.00%|
   628|         0|            0|            0|  0.00%|            def rsolve(self, v, tol=0):
   629|         0|            0|            0|  0.00%|                m = J(self.x)
   630|         0|            0|            0|  0.00%|                if isinstance(m, np.ndarray):
   631|         0|            0|            0|  0.00%|                    return solve(m.conj().T, v)
   632|         0|            0|            0|  0.00%|                elif scipy.sparse.isspmatrix(m):
   633|         0|            0|            0|  0.00%|                    return spsolve(m.conj().T, v)
   634|         0|            0|            0|  0.00%|                else:
   635|         0|            0|            0|  0.00%|                    raise ValueError("Unknown matrix type")
   636|         0|            0|            0|  0.00%|
   637|         0|            0|            0|  0.00%|            def rmatvec(self, v):
   638|         0|            0|            0|  0.00%|                m = J(self.x)
   639|         0|            0|            0|  0.00%|                if isinstance(m, np.ndarray):
   640|         0|            0|            0|  0.00%|                    return dot(m.conj().T, v)
   641|         0|            0|            0|  0.00%|                elif scipy.sparse.isspmatrix(m):
   642|         0|            0|            0|  0.00%|                    return m.conj().T * v
   643|         0|            0|            0|  0.00%|                else:
   644|         0|            0|            0|  0.00%|                    raise ValueError("Unknown matrix type")
   645|         0|            0|            0|  0.00%|        return Jac()
   646|         0|            0|            0|  0.00%|    elif isinstance(J, str):
   647|         0|            0|            0|  0.00%|        return dict(broyden1=BroydenFirst,
   648|         0|            0|            0|  0.00%|                    broyden2=BroydenSecond,
   649|         0|            0|            0|  0.00%|                    anderson=Anderson,
   650|         0|            0|            0|  0.00%|                    diagbroyden=DiagBroyden,
   651|         0|            0|            0|  0.00%|                    linearmixing=LinearMixing,
   652|         0|            0|            0|  0.00%|                    excitingmixing=ExcitingMixing,
   653|         0|            0|            0|  0.00%|                    krylov=KrylovJacobian)[J]()
   654|         0|            0|            0|  0.00%|    else:
   655|         0|            0|            0|  0.00%|        raise TypeError('Cannot convert object to a Jacobian')
   656|         0|            0|            0|  0.00%|
   657|         0|            0|            0|  0.00%|
   658|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   659|         0|            0|            0|  0.00%|# Broyden
   660|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   661|         0|            0|            0|  0.00%|
   662|         0|            0|            0|  0.00%|class GenericBroyden(Jacobian):
   663|         0|            0|            0|  0.00%|    def setup(self, x0, f0, func):
   664|         0|            0|            0|  0.00%|        Jacobian.setup(self, x0, f0, func)
   665|         0|            0|            0|  0.00%|        self.last_f = f0
   666|         0|            0|            0|  0.00%|        self.last_x = x0
   667|         0|            0|            0|  0.00%|
   668|         0|            0|            0|  0.00%|        if hasattr(self, 'alpha') and self.alpha is None:
   669|         0|            0|            0|  0.00%|            # Autoscale the initial Jacobian parameter
   670|         0|            0|            0|  0.00%|            # unless we have already guessed the solution.
   671|         0|            0|            0|  0.00%|            normf0 = norm(f0)
   672|         0|            0|            0|  0.00%|            if normf0:
   673|         0|            0|            0|  0.00%|                self.alpha = 0.5*max(norm(x0), 1) / normf0
   674|         0|            0|            0|  0.00%|            else:
   675|         0|            0|            0|  0.00%|                self.alpha = 1.0
   676|         0|            0|            0|  0.00%|
   677|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
   678|         0|            0|            0|  0.00%|        raise NotImplementedError
   679|         0|            0|            0|  0.00%|
   680|         0|            0|            0|  0.00%|    def update(self, x, f):
   681|         0|            0|            0|  0.00%|        df = f - self.last_f
   682|         0|            0|            0|  0.00%|        dx = x - self.last_x
   683|         0|            0|            0|  0.00%|        self._update(x, f, dx, df, norm(dx), norm(df))
   684|         0|            0|            0|  0.00%|        self.last_f = f
   685|         0|            0|            0|  0.00%|        self.last_x = x
   686|         0|            0|            0|  0.00%|
   687|         0|            0|            0|  0.00%|
   688|         0|            0|            0|  0.00%|class LowRankMatrix(object):
   689|         0|            0|            0|  0.00%|    r"""
   690|         0|            0|            0|  0.00%|    A matrix represented as
   691|         0|            0|            0|  0.00%|
   692|         0|            0|            0|  0.00%|    .. math:: \alpha I + \sum_{n=0}^{n=M} c_n d_n^\dagger
   693|         0|            0|            0|  0.00%|
   694|         0|            0|            0|  0.00%|    However, if the rank of the matrix reaches the dimension of the vectors,
   695|         0|            0|            0|  0.00%|    full matrix representation will be used thereon.
   696|         0|            0|            0|  0.00%|
   697|         0|            0|            0|  0.00%|    """
   698|         0|            0|            0|  0.00%|
   699|         0|            0|            0|  0.00%|    def __init__(self, alpha, n, dtype):
   700|         0|            0|            0|  0.00%|        self.alpha = alpha
   701|         0|            0|            0|  0.00%|        self.cs = []
   702|         0|            0|            0|  0.00%|        self.ds = []
   703|         0|            0|            0|  0.00%|        self.n = n
   704|         0|            0|            0|  0.00%|        self.dtype = dtype
   705|         0|            0|            0|  0.00%|        self.collapsed = None
   706|         0|            0|            0|  0.00%|
   707|         0|            0|            0|  0.00%|    @staticmethod
   708|         0|            0|            0|  0.00%|    def _matvec(v, alpha, cs, ds):
   709|         0|            0|            0|  0.00%|        axpy, scal, dotc = get_blas_funcs(['axpy', 'scal', 'dotc'],
   710|         0|            0|            0|  0.00%|                                          cs[:1] + [v])
   711|         0|            0|            0|  0.00%|        w = alpha * v
   712|         0|            0|            0|  0.00%|        for c, d in zip(cs, ds):
   713|         0|            0|            0|  0.00%|            a = dotc(d, v)
   714|         0|            0|            0|  0.00%|            w = axpy(c, w, w.size, a)
   715|         0|            0|            0|  0.00%|        return w
   716|         0|            0|            0|  0.00%|
   717|         0|            0|            0|  0.00%|    @staticmethod
   718|         0|            0|            0|  0.00%|    def _solve(v, alpha, cs, ds):
   719|         0|            0|            0|  0.00%|        """Evaluate w = M^-1 v"""
   720|         0|            0|            0|  0.00%|        if len(cs) == 0:
   721|         0|            0|            0|  0.00%|            return v/alpha
   722|         0|            0|            0|  0.00%|
   723|         0|            0|            0|  0.00%|        # (B + C D^H)^-1 = B^-1 - B^-1 C (I + D^H B^-1 C)^-1 D^H B^-1
   724|         0|            0|            0|  0.00%|
   725|         0|            0|            0|  0.00%|        axpy, dotc = get_blas_funcs(['axpy', 'dotc'], cs[:1] + [v])
   726|         0|            0|            0|  0.00%|
   727|         0|            0|            0|  0.00%|        c0 = cs[0]
   728|         0|            0|            0|  0.00%|        A = alpha * np.identity(len(cs), dtype=c0.dtype)
   729|         0|            0|            0|  0.00%|        for i, d in enumerate(ds):
   730|         0|            0|            0|  0.00%|            for j, c in enumerate(cs):
   731|         0|            0|            0|  0.00%|                A[i,j] += dotc(d, c)
   732|         0|            0|            0|  0.00%|
   733|         0|            0|            0|  0.00%|        q = np.zeros(len(cs), dtype=c0.dtype)
   734|         0|            0|            0|  0.00%|        for j, d in enumerate(ds):
   735|         0|            0|            0|  0.00%|            q[j] = dotc(d, v)
   736|         0|            0|            0|  0.00%|        q /= alpha
   737|         0|            0|            0|  0.00%|        q = solve(A, q)
   738|         0|            0|            0|  0.00%|
   739|         0|            0|            0|  0.00%|        w = v/alpha
   740|         0|            0|            0|  0.00%|        for c, qc in zip(cs, q):
   741|         0|            0|            0|  0.00%|            w = axpy(c, w, w.size, -qc)
   742|         0|            0|            0|  0.00%|
   743|         0|            0|            0|  0.00%|        return w
   744|         0|            0|            0|  0.00%|
   745|         0|            0|            0|  0.00%|    def matvec(self, v):
   746|         0|            0|            0|  0.00%|        """Evaluate w = M v"""
   747|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   748|         0|            0|            0|  0.00%|            return np.dot(self.collapsed, v)
   749|         0|            0|            0|  0.00%|        return LowRankMatrix._matvec(v, self.alpha, self.cs, self.ds)
   750|         0|            0|            0|  0.00%|
   751|         0|            0|            0|  0.00%|    def rmatvec(self, v):
   752|         0|            0|            0|  0.00%|        """Evaluate w = M^H v"""
   753|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   754|         0|            0|            0|  0.00%|            return np.dot(self.collapsed.T.conj(), v)
   755|         0|            0|            0|  0.00%|        return LowRankMatrix._matvec(v, np.conj(self.alpha), self.ds, self.cs)
   756|         0|            0|            0|  0.00%|
   757|         0|            0|            0|  0.00%|    def solve(self, v, tol=0):
   758|         0|            0|            0|  0.00%|        """Evaluate w = M^-1 v"""
   759|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   760|         0|            0|            0|  0.00%|            return solve(self.collapsed, v)
   761|         0|            0|            0|  0.00%|        return LowRankMatrix._solve(v, self.alpha, self.cs, self.ds)
   762|         0|            0|            0|  0.00%|
   763|         0|            0|            0|  0.00%|    def rsolve(self, v, tol=0):
   764|         0|            0|            0|  0.00%|        """Evaluate w = M^-H v"""
   765|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   766|         0|            0|            0|  0.00%|            return solve(self.collapsed.T.conj(), v)
   767|         0|            0|            0|  0.00%|        return LowRankMatrix._solve(v, np.conj(self.alpha), self.ds, self.cs)
   768|         0|            0|            0|  0.00%|
   769|         0|            0|            0|  0.00%|    def append(self, c, d):
   770|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   771|         0|            0|            0|  0.00%|            self.collapsed += c[:,None] * d[None,:].conj()
   772|         0|            0|            0|  0.00%|            return
   773|         0|            0|            0|  0.00%|
   774|         0|            0|            0|  0.00%|        self.cs.append(c)
   775|         0|            0|            0|  0.00%|        self.ds.append(d)
   776|         0|            0|            0|  0.00%|
   777|         0|            0|            0|  0.00%|        if len(self.cs) > c.size:
   778|         0|            0|            0|  0.00%|            self.collapse()
   779|         0|            0|            0|  0.00%|
   780|         0|            0|            0|  0.00%|    def __array__(self):
   781|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   782|         0|            0|            0|  0.00%|            return self.collapsed
   783|         0|            0|            0|  0.00%|
   784|         0|            0|            0|  0.00%|        Gm = self.alpha*np.identity(self.n, dtype=self.dtype)
   785|         0|            0|            0|  0.00%|        for c, d in zip(self.cs, self.ds):
   786|         0|            0|            0|  0.00%|            Gm += c[:,None]*d[None,:].conj()
   787|         0|            0|            0|  0.00%|        return Gm
   788|         0|            0|            0|  0.00%|
   789|         0|            0|            0|  0.00%|    def collapse(self):
   790|         0|            0|            0|  0.00%|        """Collapse the low-rank matrix to a full-rank one."""
   791|         0|            0|            0|  0.00%|        self.collapsed = np.array(self)
   792|         0|            0|            0|  0.00%|        self.cs = None
   793|         0|            0|            0|  0.00%|        self.ds = None
   794|         0|            0|            0|  0.00%|        self.alpha = None
   795|         0|            0|            0|  0.00%|
   796|         0|            0|            0|  0.00%|    def restart_reduce(self, rank):
   797|         0|            0|            0|  0.00%|        """
   798|         0|            0|            0|  0.00%|        Reduce the rank of the matrix by dropping all vectors.
   799|         0|            0|            0|  0.00%|        """
   800|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   801|         0|            0|            0|  0.00%|            return
   802|         0|            0|            0|  0.00%|        assert rank > 0
   803|         0|            0|            0|  0.00%|        if len(self.cs) > rank:
   804|         0|            0|            0|  0.00%|            del self.cs[:]
   805|         0|            0|            0|  0.00%|            del self.ds[:]
   806|         0|            0|            0|  0.00%|
   807|         0|            0|            0|  0.00%|    def simple_reduce(self, rank):
   808|         0|            0|            0|  0.00%|        """
   809|         0|            0|            0|  0.00%|        Reduce the rank of the matrix by dropping oldest vectors.
   810|         0|            0|            0|  0.00%|        """
   811|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   812|         0|            0|            0|  0.00%|            return
   813|         0|            0|            0|  0.00%|        assert rank > 0
   814|         0|            0|            0|  0.00%|        while len(self.cs) > rank:
   815|         0|            0|            0|  0.00%|            del self.cs[0]
   816|         0|            0|            0|  0.00%|            del self.ds[0]
   817|         0|            0|            0|  0.00%|
   818|         0|            0|            0|  0.00%|    def svd_reduce(self, max_rank, to_retain=None):
   819|         0|            0|            0|  0.00%|        """
   820|         0|            0|            0|  0.00%|        Reduce the rank of the matrix by retaining some SVD components.
   821|         0|            0|            0|  0.00%|
   822|         0|            0|            0|  0.00%|        This corresponds to the \"Broyden Rank Reduction Inverse\"
   823|         0|            0|            0|  0.00%|        algorithm described in [1]_.
   824|         0|            0|            0|  0.00%|
   825|         0|            0|            0|  0.00%|        Note that the SVD decomposition can be done by solving only a
   826|         0|            0|            0|  0.00%|        problem whose size is the effective rank of this matrix, which
   827|         0|            0|            0|  0.00%|        is viable even for large problems.
   828|         0|            0|            0|  0.00%|
   829|         0|            0|            0|  0.00%|        Parameters
   830|         0|            0|            0|  0.00%|        ----------
   831|         0|            0|            0|  0.00%|        max_rank : int
   832|         0|            0|            0|  0.00%|            Maximum rank of this matrix after reduction.
   833|         0|            0|            0|  0.00%|        to_retain : int, optional
   834|         0|            0|            0|  0.00%|            Number of SVD components to retain when reduction is done
   835|         0|            0|            0|  0.00%|            (ie. rank > max_rank). Default is ``max_rank - 2``.
   836|         0|            0|            0|  0.00%|
   837|         0|            0|            0|  0.00%|        References
   838|         0|            0|            0|  0.00%|        ----------
   839|         0|            0|            0|  0.00%|        .. [1] B.A. van der Rotten, PhD thesis,
   840|         0|            0|            0|  0.00%|           \"A limited memory Broyden method to solve high-dimensional
   841|         0|            0|            0|  0.00%|           systems of nonlinear equations\". Mathematisch Instituut,
   842|         0|            0|            0|  0.00%|           Universiteit Leiden, The Netherlands (2003).
   843|         0|            0|            0|  0.00%|
   844|         0|            0|            0|  0.00%|           https://web.archive.org/web/20161022015821/http://www.math.leidenuniv.nl/scripties/Rotten.pdf
   845|         0|            0|            0|  0.00%|
   846|         0|            0|            0|  0.00%|        """
   847|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   848|         0|            0|            0|  0.00%|            return
   849|         0|            0|            0|  0.00%|
   850|         0|            0|            0|  0.00%|        p = max_rank
   851|         0|            0|            0|  0.00%|        if to_retain is not None:
   852|         0|            0|            0|  0.00%|            q = to_retain
   853|         0|            0|            0|  0.00%|        else:
   854|         0|            0|            0|  0.00%|            q = p - 2
   855|         0|            0|            0|  0.00%|
   856|         0|            0|            0|  0.00%|        if self.cs:
   857|         0|            0|            0|  0.00%|            p = min(p, len(self.cs[0]))
   858|         0|            0|            0|  0.00%|        q = max(0, min(q, p-1))
   859|         0|            0|            0|  0.00%|
   860|         0|            0|            0|  0.00%|        m = len(self.cs)
   861|         0|            0|            0|  0.00%|        if m < p:
   862|         0|            0|            0|  0.00%|            # nothing to do
   863|         0|            0|            0|  0.00%|            return
   864|         0|            0|            0|  0.00%|
   865|         0|            0|            0|  0.00%|        C = np.array(self.cs).T
   866|         0|            0|            0|  0.00%|        D = np.array(self.ds).T
   867|         0|            0|            0|  0.00%|
   868|         0|            0|            0|  0.00%|        D, R = qr(D, mode='economic')
   869|         0|            0|            0|  0.00%|        C = dot(C, R.T.conj())
   870|         0|            0|            0|  0.00%|
   871|         0|            0|            0|  0.00%|        U, S, WH = svd(C, full_matrices=False, compute_uv=True)
   872|         0|            0|            0|  0.00%|
   873|         0|            0|            0|  0.00%|        C = dot(C, inv(WH))
   874|         0|            0|            0|  0.00%|        D = dot(D, WH.T.conj())
   875|         0|            0|            0|  0.00%|
   876|         0|            0|            0|  0.00%|        for k in range(q):
   877|         0|            0|            0|  0.00%|            self.cs[k] = C[:,k].copy()
   878|         0|            0|            0|  0.00%|            self.ds[k] = D[:,k].copy()
   879|         0|            0|            0|  0.00%|
   880|         0|            0|            0|  0.00%|        del self.cs[q:]
   881|         0|            0|            0|  0.00%|        del self.ds[q:]
   882|         0|            0|            0|  0.00%|
   883|         0|            0|            0|  0.00%|
   884|         0|            0|            0|  0.00%|_doc_parts['broyden_params'] = """
   885|         0|            0|            0|  0.00%|    alpha : float, optional
   886|         0|            0|            0|  0.00%|        Initial guess for the Jacobian is ``(-1/alpha)``.
   887|         0|            0|            0|  0.00%|    reduction_method : str or tuple, optional
   888|         0|            0|            0|  0.00%|        Method used in ensuring that the rank of the Broyden matrix
   889|         0|            0|            0|  0.00%|        stays low. Can either be a string giving the name of the method,
   890|         0|            0|            0|  0.00%|        or a tuple of the form ``(method, param1, param2, ...)``
   891|         0|            0|            0|  0.00%|        that gives the name of the method and values for additional parameters.
   892|         0|            0|            0|  0.00%|
   893|         0|            0|            0|  0.00%|        Methods available:
   894|         0|            0|            0|  0.00%|
   895|         0|            0|            0|  0.00%|            - ``restart``: drop all matrix columns. Has no extra parameters.
   896|         0|            0|            0|  0.00%|            - ``simple``: drop oldest matrix column. Has no extra parameters.
   897|         0|            0|            0|  0.00%|            - ``svd``: keep only the most significant SVD components.
   898|         0|            0|            0|  0.00%|              Takes an extra parameter, ``to_retain``, which determines the
   899|         0|            0|            0|  0.00%|              number of SVD components to retain when rank reduction is done.
   900|         0|            0|            0|  0.00%|              Default is ``max_rank - 2``.
   901|         0|            0|            0|  0.00%|
   902|         0|            0|            0|  0.00%|    max_rank : int, optional
   903|         0|            0|            0|  0.00%|        Maximum rank for the Broyden matrix.
   904|         0|            0|            0|  0.00%|        Default is infinity (i.e., no rank reduction).
   905|         0|            0|            0|  0.00%|    """.strip()
   906|         0|            0|            0|  0.00%|
   907|         0|            0|            0|  0.00%|
   908|         0|            0|            0|  0.00%|class BroydenFirst(GenericBroyden):
   909|         0|            0|            0|  0.00%|    r"""
   910|         0|            0|            0|  0.00%|    Find a root of a function, using Broyden's first Jacobian approximation.
   911|         0|            0|            0|  0.00%|
   912|         0|            0|            0|  0.00%|    This method is also known as \"Broyden's good method\".
   913|         0|            0|            0|  0.00%|
   914|         0|            0|            0|  0.00%|    Parameters
   915|         0|            0|            0|  0.00%|    ----------
   916|         0|            0|            0|  0.00%|    %(params_basic)s
   917|         0|            0|            0|  0.00%|    %(broyden_params)s
   918|         0|            0|            0|  0.00%|    %(params_extra)s
   919|         0|            0|            0|  0.00%|
   920|         0|            0|            0|  0.00%|    See Also
   921|         0|            0|            0|  0.00%|    --------
   922|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
   923|         0|            0|            0|  0.00%|           functions. See ``method=='broyden1'`` in particular.
   924|         0|            0|            0|  0.00%|
   925|         0|            0|            0|  0.00%|    Notes
   926|         0|            0|            0|  0.00%|    -----
   927|         0|            0|            0|  0.00%|    This algorithm implements the inverse Jacobian Quasi-Newton update
   928|         0|            0|            0|  0.00%|
   929|         0|            0|            0|  0.00%|    .. math:: H_+ = H + (dx - H df) dx^\dagger H / ( dx^\dagger H df)
   930|         0|            0|            0|  0.00%|
   931|         0|            0|            0|  0.00%|    which corresponds to Broyden's first Jacobian update
   932|         0|            0|            0|  0.00%|
   933|         0|            0|            0|  0.00%|    .. math:: J_+ = J + (df - J dx) dx^\dagger / dx^\dagger dx
   934|         0|            0|            0|  0.00%|
   935|         0|            0|            0|  0.00%|
   936|         0|            0|            0|  0.00%|    References
   937|         0|            0|            0|  0.00%|    ----------
   938|         0|            0|            0|  0.00%|    .. [1] B.A. van der Rotten, PhD thesis,
   939|         0|            0|            0|  0.00%|       \"A limited memory Broyden method to solve high-dimensional
   940|         0|            0|            0|  0.00%|       systems of nonlinear equations\". Mathematisch Instituut,
   941|         0|            0|            0|  0.00%|       Universiteit Leiden, The Netherlands (2003).
   942|         0|            0|            0|  0.00%|
   943|         0|            0|            0|  0.00%|       https://web.archive.org/web/20161022015821/http://www.math.leidenuniv.nl/scripties/Rotten.pdf
   944|         0|            0|            0|  0.00%|
   945|         0|            0|            0|  0.00%|    """
   946|         0|            0|            0|  0.00%|
   947|         0|            0|            0|  0.00%|    def __init__(self, alpha=None, reduction_method='restart', max_rank=None):
   948|         0|            0|            0|  0.00%|        GenericBroyden.__init__(self)
   949|         0|            0|            0|  0.00%|        self.alpha = alpha
   950|         0|            0|            0|  0.00%|        self.Gm = None
   951|         0|            0|            0|  0.00%|
   952|         0|            0|            0|  0.00%|        if max_rank is None:
   953|         0|            0|            0|  0.00%|            max_rank = np.inf
   954|         0|            0|            0|  0.00%|        self.max_rank = max_rank
   955|         0|            0|            0|  0.00%|
   956|         0|            0|            0|  0.00%|        if isinstance(reduction_method, str):
   957|         0|            0|            0|  0.00%|            reduce_params = ()
   958|         0|            0|            0|  0.00%|        else:
   959|         0|            0|            0|  0.00%|            reduce_params = reduction_method[1:]
   960|         0|            0|            0|  0.00%|            reduction_method = reduction_method[0]
   961|         0|            0|            0|  0.00%|        reduce_params = (max_rank - 1,) + reduce_params
   962|         0|            0|            0|  0.00%|
   963|         0|            0|            0|  0.00%|        if reduction_method == 'svd':
   964|         0|            0|            0|  0.00%|            self._reduce = lambda: self.Gm.svd_reduce(*reduce_params)
   965|         0|            0|            0|  0.00%|        elif reduction_method == 'simple':
   966|         0|            0|            0|  0.00%|            self._reduce = lambda: self.Gm.simple_reduce(*reduce_params)
   967|         0|            0|            0|  0.00%|        elif reduction_method == 'restart':
   968|         0|            0|            0|  0.00%|            self._reduce = lambda: self.Gm.restart_reduce(*reduce_params)
   969|         0|            0|            0|  0.00%|        else:
   970|         0|            0|            0|  0.00%|            raise ValueError("Unknown rank reduction method '%s'" %
   971|         0|            0|            0|  0.00%|                             reduction_method)
   972|         0|            0|            0|  0.00%|
   973|         0|            0|            0|  0.00%|    def setup(self, x, F, func):
   974|         0|            0|            0|  0.00%|        GenericBroyden.setup(self, x, F, func)
   975|         0|            0|            0|  0.00%|        self.Gm = LowRankMatrix(-self.alpha, self.shape[0], self.dtype)
   976|         0|            0|            0|  0.00%|
   977|         0|            0|            0|  0.00%|    def todense(self):
   978|         0|            0|            0|  0.00%|        return inv(self.Gm)
   979|         0|            0|            0|  0.00%|
   980|         0|            0|            0|  0.00%|    def solve(self, f, tol=0):
   981|         0|            0|            0|  0.00%|        r = self.Gm.matvec(f)
   982|         0|            0|            0|  0.00%|        if not np.isfinite(r).all():
   983|         0|            0|            0|  0.00%|            # singular; reset the Jacobian approximation
   984|         0|            0|            0|  0.00%|            self.setup(self.last_x, self.last_f, self.func)
   985|         0|            0|            0|  0.00%|        return self.Gm.matvec(f)
   986|         0|            0|            0|  0.00%|
   987|         0|            0|            0|  0.00%|    def matvec(self, f):
   988|         0|            0|            0|  0.00%|        return self.Gm.solve(f)
   989|         0|            0|            0|  0.00%|
   990|         0|            0|            0|  0.00%|    def rsolve(self, f, tol=0):
   991|         0|            0|            0|  0.00%|        return self.Gm.rmatvec(f)
   992|         0|            0|            0|  0.00%|
   993|         0|            0|            0|  0.00%|    def rmatvec(self, f):
   994|         0|            0|            0|  0.00%|        return self.Gm.rsolve(f)
   995|         0|            0|            0|  0.00%|
   996|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
   997|         0|            0|            0|  0.00%|        self._reduce()  # reduce first to preserve secant condition
   998|         0|            0|            0|  0.00%|
   999|         0|            0|            0|  0.00%|        v = self.Gm.rmatvec(dx)
  1000|         0|            0|            0|  0.00%|        c = dx - self.Gm.matvec(df)
  1001|         0|            0|            0|  0.00%|        d = v / vdot(df, v)
  1002|         0|            0|            0|  0.00%|
  1003|         0|            0|            0|  0.00%|        self.Gm.append(c, d)
  1004|         0|            0|            0|  0.00%|
  1005|         0|            0|            0|  0.00%|
  1006|         0|            0|            0|  0.00%|class BroydenSecond(BroydenFirst):
  1007|         0|            0|            0|  0.00%|    """
  1008|         0|            0|            0|  0.00%|    Find a root of a function, using Broyden\'s second Jacobian approximation.
  1009|         0|            0|            0|  0.00%|
  1010|         0|            0|            0|  0.00%|    This method is also known as \"Broyden's bad method\".
  1011|         0|            0|            0|  0.00%|
  1012|         0|            0|            0|  0.00%|    Parameters
  1013|         0|            0|            0|  0.00%|    ----------
  1014|         0|            0|            0|  0.00%|    %(params_basic)s
  1015|         0|            0|            0|  0.00%|    %(broyden_params)s
  1016|         0|            0|            0|  0.00%|    %(params_extra)s
  1017|         0|            0|            0|  0.00%|
  1018|         0|            0|            0|  0.00%|    See Also
  1019|         0|            0|            0|  0.00%|    --------
  1020|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1021|         0|            0|            0|  0.00%|           functions. See ``method=='broyden2'`` in particular.
  1022|         0|            0|            0|  0.00%|
  1023|         0|            0|            0|  0.00%|    Notes
  1024|         0|            0|            0|  0.00%|    -----
  1025|         0|            0|            0|  0.00%|    This algorithm implements the inverse Jacobian Quasi-Newton update
  1026|         0|            0|            0|  0.00%|
  1027|         0|            0|            0|  0.00%|    .. math:: H_+ = H + (dx - H df) df^\\dagger / ( df^\\dagger df)
  1028|         0|            0|            0|  0.00%|
  1029|         0|            0|            0|  0.00%|    corresponding to Broyden's second method.
  1030|         0|            0|            0|  0.00%|
  1031|         0|            0|            0|  0.00%|    References
  1032|         0|            0|            0|  0.00%|    ----------
  1033|         0|            0|            0|  0.00%|    .. [1] B.A. van der Rotten, PhD thesis,
  1034|         0|            0|            0|  0.00%|       \"A limited memory Broyden method to solve high-dimensional
  1035|         0|            0|            0|  0.00%|       systems of nonlinear equations\". Mathematisch Instituut,
  1036|         0|            0|            0|  0.00%|       Universiteit Leiden, The Netherlands (2003).
  1037|         0|            0|            0|  0.00%|
  1038|         0|            0|            0|  0.00%|       https://web.archive.org/web/20161022015821/http://www.math.leidenuniv.nl/scripties/Rotten.pdf
  1039|         0|            0|            0|  0.00%|
  1040|         0|            0|            0|  0.00%|    """
  1041|         0|            0|            0|  0.00%|
  1042|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
  1043|         0|            0|            0|  0.00%|        self._reduce()  # reduce first to preserve secant condition
  1044|         0|            0|            0|  0.00%|
  1045|         0|            0|            0|  0.00%|        v = df
  1046|         0|            0|            0|  0.00%|        c = dx - self.Gm.matvec(df)
  1047|         0|            0|            0|  0.00%|        d = v / df_norm**2
  1048|         0|            0|            0|  0.00%|        self.Gm.append(c, d)
  1049|         0|            0|            0|  0.00%|
  1050|         0|            0|            0|  0.00%|
  1051|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1052|         0|            0|            0|  0.00%|# Broyden-like (restricted memory)
  1053|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1054|         0|            0|            0|  0.00%|
  1055|         0|            0|            0|  0.00%|class Anderson(GenericBroyden):
  1056|         0|            0|            0|  0.00%|    """
  1057|         0|            0|            0|  0.00%|    Find a root of a function, using (extended) Anderson mixing.
  1058|         0|            0|            0|  0.00%|
  1059|         0|            0|            0|  0.00%|    The Jacobian is formed by for a 'best' solution in the space
  1060|         0|            0|            0|  0.00%|    spanned by last `M` vectors. As a result, only a MxM matrix
  1061|         0|            0|            0|  0.00%|    inversions and MxN multiplications are required. [Ey]_
  1062|         0|            0|            0|  0.00%|
  1063|         0|            0|            0|  0.00%|    Parameters
  1064|         0|            0|            0|  0.00%|    ----------
  1065|         0|            0|            0|  0.00%|    %(params_basic)s
  1066|         0|            0|            0|  0.00%|    alpha : float, optional
  1067|         0|            0|            0|  0.00%|        Initial guess for the Jacobian is (-1/alpha).
  1068|         0|            0|            0|  0.00%|    M : float, optional
  1069|         0|            0|            0|  0.00%|        Number of previous vectors to retain. Defaults to 5.
  1070|         0|            0|            0|  0.00%|    w0 : float, optional
  1071|         0|            0|            0|  0.00%|        Regularization parameter for numerical stability.
  1072|         0|            0|            0|  0.00%|        Compared to unity, good values of the order of 0.01.
  1073|         0|            0|            0|  0.00%|    %(params_extra)s
  1074|         0|            0|            0|  0.00%|
  1075|         0|            0|            0|  0.00%|    See Also
  1076|         0|            0|            0|  0.00%|    --------
  1077|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1078|         0|            0|            0|  0.00%|           functions. See ``method=='anderson'`` in particular.
  1079|         0|            0|            0|  0.00%|
  1080|         0|            0|            0|  0.00%|    References
  1081|         0|            0|            0|  0.00%|    ----------
  1082|         0|            0|            0|  0.00%|    .. [Ey] V. Eyert, J. Comp. Phys., 124, 271 (1996).
  1083|         0|            0|            0|  0.00%|
  1084|         0|            0|            0|  0.00%|    """
  1085|         0|            0|            0|  0.00%|
  1086|         0|            0|            0|  0.00%|    # Note:
  1087|         0|            0|            0|  0.00%|    #
  1088|         0|            0|            0|  0.00%|    # Anderson method maintains a rank M approximation of the inverse Jacobian,
  1089|         0|            0|            0|  0.00%|    #
  1090|         0|            0|            0|  0.00%|    #     J^-1 v ~ -v*alpha + (dX + alpha dF) A^-1 dF^H v
  1091|         0|            0|            0|  0.00%|    #     A      = W + dF^H dF
  1092|         0|            0|            0|  0.00%|    #     W      = w0^2 diag(dF^H dF)
  1093|         0|            0|            0|  0.00%|    #
  1094|         0|            0|            0|  0.00%|    # so that for w0 = 0 the secant condition applies for last M iterates, i.e.,
  1095|         0|            0|            0|  0.00%|    #
  1096|         0|            0|            0|  0.00%|    #     J^-1 df_j = dx_j
  1097|         0|            0|            0|  0.00%|    #
  1098|         0|            0|            0|  0.00%|    # for all j = 0 ... M-1.
  1099|         0|            0|            0|  0.00%|    #
  1100|         0|            0|            0|  0.00%|    # Moreover, (from Sherman-Morrison-Woodbury formula)
  1101|         0|            0|            0|  0.00%|    #
  1102|         0|            0|            0|  0.00%|    #    J v ~ [ b I - b^2 C (I + b dF^H A^-1 C)^-1 dF^H ] v
  1103|         0|            0|            0|  0.00%|    #    C   = (dX + alpha dF) A^-1
  1104|         0|            0|            0|  0.00%|    #    b   = -1/alpha
  1105|         0|            0|            0|  0.00%|    #
  1106|         0|            0|            0|  0.00%|    # and after simplification
  1107|         0|            0|            0|  0.00%|    #
  1108|         0|            0|            0|  0.00%|    #    J v ~ -v/alpha + (dX/alpha + dF) (dF^H dX - alpha W)^-1 dF^H v
  1109|         0|            0|            0|  0.00%|    #
  1110|         0|            0|            0|  0.00%|
  1111|         0|            0|            0|  0.00%|    def __init__(self, alpha=None, w0=0.01, M=5):
  1112|         0|            0|            0|  0.00%|        GenericBroyden.__init__(self)
  1113|         0|            0|            0|  0.00%|        self.alpha = alpha
  1114|         0|            0|            0|  0.00%|        self.M = M
  1115|         0|            0|            0|  0.00%|        self.dx = []
  1116|         0|            0|            0|  0.00%|        self.df = []
  1117|         0|            0|            0|  0.00%|        self.gamma = None
  1118|         0|            0|            0|  0.00%|        self.w0 = w0
  1119|         0|            0|            0|  0.00%|
  1120|         0|            0|            0|  0.00%|    def solve(self, f, tol=0):
  1121|         0|            0|            0|  0.00%|        dx = -self.alpha*f
  1122|         0|            0|            0|  0.00%|
  1123|         0|            0|            0|  0.00%|        n = len(self.dx)
  1124|         0|            0|            0|  0.00%|        if n == 0:
  1125|         0|            0|            0|  0.00%|            return dx
  1126|         0|            0|            0|  0.00%|
  1127|         0|            0|            0|  0.00%|        df_f = np.empty(n, dtype=f.dtype)
  1128|         0|            0|            0|  0.00%|        for k in range(n):
  1129|         0|            0|            0|  0.00%|            df_f[k] = vdot(self.df[k], f)
  1130|         0|            0|            0|  0.00%|
  1131|         0|            0|            0|  0.00%|        try:
  1132|         0|            0|            0|  0.00%|            gamma = solve(self.a, df_f)
  1133|         0|            0|            0|  0.00%|        except LinAlgError:
  1134|         0|            0|            0|  0.00%|            # singular; reset the Jacobian approximation
  1135|         0|            0|            0|  0.00%|            del self.dx[:]
  1136|         0|            0|            0|  0.00%|            del self.df[:]
  1137|         0|            0|            0|  0.00%|            return dx
  1138|         0|            0|            0|  0.00%|
  1139|         0|            0|            0|  0.00%|        for m in range(n):
  1140|         0|            0|            0|  0.00%|            dx += gamma[m]*(self.dx[m] + self.alpha*self.df[m])
  1141|         0|            0|            0|  0.00%|        return dx
  1142|         0|            0|            0|  0.00%|
  1143|         0|            0|            0|  0.00%|    def matvec(self, f):
  1144|         0|            0|            0|  0.00%|        dx = -f/self.alpha
  1145|         0|            0|            0|  0.00%|
  1146|         0|            0|            0|  0.00%|        n = len(self.dx)
  1147|         0|            0|            0|  0.00%|        if n == 0:
  1148|         0|            0|            0|  0.00%|            return dx
  1149|         0|            0|            0|  0.00%|
  1150|         0|            0|            0|  0.00%|        df_f = np.empty(n, dtype=f.dtype)
  1151|         0|            0|            0|  0.00%|        for k in range(n):
  1152|         0|            0|            0|  0.00%|            df_f[k] = vdot(self.df[k], f)
  1153|         0|            0|            0|  0.00%|
  1154|         0|            0|            0|  0.00%|        b = np.empty((n, n), dtype=f.dtype)
  1155|         0|            0|            0|  0.00%|        for i in range(n):
  1156|         0|            0|            0|  0.00%|            for j in range(n):
  1157|         0|            0|            0|  0.00%|                b[i,j] = vdot(self.df[i], self.dx[j])
  1158|         0|            0|            0|  0.00%|                if i == j and self.w0 != 0:
  1159|         0|            0|            0|  0.00%|                    b[i,j] -= vdot(self.df[i], self.df[i])*self.w0**2*self.alpha
  1160|         0|            0|            0|  0.00%|        gamma = solve(b, df_f)
  1161|         0|            0|            0|  0.00%|
  1162|         0|            0|            0|  0.00%|        for m in range(n):
  1163|         0|            0|            0|  0.00%|            dx += gamma[m]*(self.df[m] + self.dx[m]/self.alpha)
  1164|         0|            0|            0|  0.00%|        return dx
  1165|         0|            0|            0|  0.00%|
  1166|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
  1167|         0|            0|            0|  0.00%|        if self.M == 0:
  1168|         0|            0|            0|  0.00%|            return
  1169|         0|            0|            0|  0.00%|
  1170|         0|            0|            0|  0.00%|        self.dx.append(dx)
  1171|         0|            0|            0|  0.00%|        self.df.append(df)
  1172|         0|            0|            0|  0.00%|
  1173|         0|            0|            0|  0.00%|        while len(self.dx) > self.M:
  1174|         0|            0|            0|  0.00%|            self.dx.pop(0)
  1175|         0|            0|            0|  0.00%|            self.df.pop(0)
  1176|         0|            0|            0|  0.00%|
  1177|         0|            0|            0|  0.00%|        n = len(self.dx)
  1178|         0|            0|            0|  0.00%|        a = np.zeros((n, n), dtype=f.dtype)
  1179|         0|            0|            0|  0.00%|
  1180|         0|            0|            0|  0.00%|        for i in range(n):
  1181|         0|            0|            0|  0.00%|            for j in range(i, n):
  1182|         0|            0|            0|  0.00%|                if i == j:
  1183|         0|            0|            0|  0.00%|                    wd = self.w0**2
  1184|         0|            0|            0|  0.00%|                else:
  1185|         0|            0|            0|  0.00%|                    wd = 0
  1186|         0|            0|            0|  0.00%|                a[i,j] = (1+wd)*vdot(self.df[i], self.df[j])
  1187|         0|            0|            0|  0.00%|
  1188|         0|            0|            0|  0.00%|        a += np.triu(a, 1).T.conj()
  1189|         0|            0|            0|  0.00%|        self.a = a
  1190|         0|            0|            0|  0.00%|
  1191|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1192|         0|            0|            0|  0.00%|# Simple iterations
  1193|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1194|         0|            0|            0|  0.00%|
  1195|         0|            0|            0|  0.00%|
  1196|         0|            0|            0|  0.00%|class DiagBroyden(GenericBroyden):
  1197|         0|            0|            0|  0.00%|    """
  1198|         0|            0|            0|  0.00%|    Find a root of a function, using diagonal Broyden Jacobian approximation.
  1199|         0|            0|            0|  0.00%|
  1200|         0|            0|            0|  0.00%|    The Jacobian approximation is derived from previous iterations, by
  1201|         0|            0|            0|  0.00%|    retaining only the diagonal of Broyden matrices.
  1202|         0|            0|            0|  0.00%|
  1203|         0|            0|            0|  0.00%|    .. warning::
  1204|         0|            0|            0|  0.00%|
  1205|         0|            0|            0|  0.00%|       This algorithm may be useful for specific problems, but whether
  1206|         0|            0|            0|  0.00%|       it will work may depend strongly on the problem.
  1207|         0|            0|            0|  0.00%|
  1208|         0|            0|            0|  0.00%|    Parameters
  1209|         0|            0|            0|  0.00%|    ----------
  1210|         0|            0|            0|  0.00%|    %(params_basic)s
  1211|         0|            0|            0|  0.00%|    alpha : float, optional
  1212|         0|            0|            0|  0.00%|        Initial guess for the Jacobian is (-1/alpha).
  1213|         0|            0|            0|  0.00%|    %(params_extra)s
  1214|         0|            0|            0|  0.00%|
  1215|         0|            0|            0|  0.00%|    See Also
  1216|         0|            0|            0|  0.00%|    --------
  1217|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1218|         0|            0|            0|  0.00%|           functions. See ``method=='diagbroyden'`` in particular.
  1219|         0|            0|            0|  0.00%|    """
  1220|         0|            0|            0|  0.00%|
  1221|         0|            0|            0|  0.00%|    def __init__(self, alpha=None):
  1222|         0|            0|            0|  0.00%|        GenericBroyden.__init__(self)
  1223|         0|            0|            0|  0.00%|        self.alpha = alpha
  1224|         0|            0|            0|  0.00%|
  1225|         0|            0|            0|  0.00%|    def setup(self, x, F, func):
  1226|         0|            0|            0|  0.00%|        GenericBroyden.setup(self, x, F, func)
  1227|         0|            0|            0|  0.00%|        self.d = np.full((self.shape[0],), 1 / self.alpha, dtype=self.dtype)
  1228|         0|            0|            0|  0.00%|
  1229|         0|            0|            0|  0.00%|    def solve(self, f, tol=0):
  1230|         0|            0|            0|  0.00%|        return -f / self.d
  1231|         0|            0|            0|  0.00%|
  1232|         0|            0|            0|  0.00%|    def matvec(self, f):
  1233|         0|            0|            0|  0.00%|        return -f * self.d
  1234|         0|            0|            0|  0.00%|
  1235|         0|            0|            0|  0.00%|    def rsolve(self, f, tol=0):
  1236|         0|            0|            0|  0.00%|        return -f / self.d.conj()
  1237|         0|            0|            0|  0.00%|
  1238|         0|            0|            0|  0.00%|    def rmatvec(self, f):
  1239|         0|            0|            0|  0.00%|        return -f * self.d.conj()
  1240|         0|            0|            0|  0.00%|
  1241|         0|            0|            0|  0.00%|    def todense(self):
  1242|         0|            0|            0|  0.00%|        return np.diag(-self.d)
  1243|         0|            0|            0|  0.00%|
  1244|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
  1245|         0|            0|            0|  0.00%|        self.d -= (df + self.d*dx)*dx/dx_norm**2
  1246|         0|            0|            0|  0.00%|
  1247|         0|            0|            0|  0.00%|
  1248|         0|            0|            0|  0.00%|class LinearMixing(GenericBroyden):
  1249|         0|            0|            0|  0.00%|    """
  1250|         0|            0|            0|  0.00%|    Find a root of a function, using a scalar Jacobian approximation.
  1251|         0|            0|            0|  0.00%|
  1252|         0|            0|            0|  0.00%|    .. warning::
  1253|         0|            0|            0|  0.00%|
  1254|         0|            0|            0|  0.00%|       This algorithm may be useful for specific problems, but whether
  1255|         0|            0|            0|  0.00%|       it will work may depend strongly on the problem.
  1256|         0|            0|            0|  0.00%|
  1257|         0|            0|            0|  0.00%|    Parameters
  1258|         0|            0|            0|  0.00%|    ----------
  1259|         0|            0|            0|  0.00%|    %(params_basic)s
  1260|         0|            0|            0|  0.00%|    alpha : float, optional
  1261|         0|            0|            0|  0.00%|        The Jacobian approximation is (-1/alpha).
  1262|         0|            0|            0|  0.00%|    %(params_extra)s
  1263|         0|            0|            0|  0.00%|
  1264|         0|            0|            0|  0.00%|    See Also
  1265|         0|            0|            0|  0.00%|    --------
  1266|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1267|         0|            0|            0|  0.00%|           functions. See ``method=='linearmixing'`` in particular.
  1268|         0|            0|            0|  0.00%|
  1269|         0|            0|            0|  0.00%|    """
  1270|         0|            0|            0|  0.00%|
  1271|         0|            0|            0|  0.00%|    def __init__(self, alpha=None):
  1272|         0|            0|            0|  0.00%|        GenericBroyden.__init__(self)
  1273|         0|            0|            0|  0.00%|        self.alpha = alpha
  1274|         0|            0|            0|  0.00%|
  1275|         0|            0|            0|  0.00%|    def solve(self, f, tol=0):
  1276|         0|            0|            0|  0.00%|        return -f*self.alpha
  1277|         0|            0|            0|  0.00%|
  1278|         0|            0|            0|  0.00%|    def matvec(self, f):
  1279|         0|            0|            0|  0.00%|        return -f/self.alpha
  1280|         0|            0|            0|  0.00%|
  1281|         0|            0|            0|  0.00%|    def rsolve(self, f, tol=0):
  1282|         0|            0|            0|  0.00%|        return -f*np.conj(self.alpha)
  1283|         0|            0|            0|  0.00%|
  1284|         0|            0|            0|  0.00%|    def rmatvec(self, f):
  1285|         0|            0|            0|  0.00%|        return -f/np.conj(self.alpha)
  1286|         0|            0|            0|  0.00%|
  1287|         0|            0|            0|  0.00%|    def todense(self):
  1288|         0|            0|            0|  0.00%|        return np.diag(np.full(self.shape[0], -1/self.alpha))
  1289|         0|            0|            0|  0.00%|
  1290|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
  1291|         0|            0|            0|  0.00%|        pass
  1292|         0|            0|            0|  0.00%|
  1293|         0|            0|            0|  0.00%|
  1294|         0|            0|            0|  0.00%|class ExcitingMixing(GenericBroyden):
  1295|         0|            0|            0|  0.00%|    """
  1296|         0|            0|            0|  0.00%|    Find a root of a function, using a tuned diagonal Jacobian approximation.
  1297|         0|            0|            0|  0.00%|
  1298|         0|            0|            0|  0.00%|    The Jacobian matrix is diagonal and is tuned on each iteration.
  1299|         0|            0|            0|  0.00%|
  1300|         0|            0|            0|  0.00%|    .. warning::
  1301|         0|            0|            0|  0.00%|
  1302|         0|            0|            0|  0.00%|       This algorithm may be useful for specific problems, but whether
  1303|         0|            0|            0|  0.00%|       it will work may depend strongly on the problem.
  1304|         0|            0|            0|  0.00%|
  1305|         0|            0|            0|  0.00%|    See Also
  1306|         0|            0|            0|  0.00%|    --------
  1307|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1308|         0|            0|            0|  0.00%|           functions. See ``method=='excitingmixing'`` in particular.
  1309|         0|            0|            0|  0.00%|
  1310|         0|            0|            0|  0.00%|    Parameters
  1311|         0|            0|            0|  0.00%|    ----------
  1312|         0|            0|            0|  0.00%|    %(params_basic)s
  1313|         0|            0|            0|  0.00%|    alpha : float, optional
  1314|         0|            0|            0|  0.00%|        Initial Jacobian approximation is (-1/alpha).
  1315|         0|            0|            0|  0.00%|    alphamax : float, optional
  1316|         0|            0|            0|  0.00%|        The entries of the diagonal Jacobian are kept in the range
  1317|         0|            0|            0|  0.00%|        ``[alpha, alphamax]``.
  1318|         0|            0|            0|  0.00%|    %(params_extra)s
  1319|         0|            0|            0|  0.00%|    """
  1320|         0|            0|            0|  0.00%|
  1321|         0|            0|            0|  0.00%|    def __init__(self, alpha=None, alphamax=1.0):
  1322|         0|            0|            0|  0.00%|        GenericBroyden.__init__(self)
  1323|         0|            0|            0|  0.00%|        self.alpha = alpha
  1324|         0|            0|            0|  0.00%|        self.alphamax = alphamax
  1325|         0|            0|            0|  0.00%|        self.beta = None
  1326|         0|            0|            0|  0.00%|
  1327|         0|            0|            0|  0.00%|    def setup(self, x, F, func):
  1328|         0|            0|            0|  0.00%|        GenericBroyden.setup(self, x, F, func)
  1329|         0|            0|            0|  0.00%|        self.beta = np.full((self.shape[0],), self.alpha, dtype=self.dtype)
  1330|         0|            0|            0|  0.00%|
  1331|         0|            0|            0|  0.00%|    def solve(self, f, tol=0):
  1332|         0|            0|            0|  0.00%|        return -f*self.beta
  1333|         0|            0|            0|  0.00%|
  1334|         0|            0|            0|  0.00%|    def matvec(self, f):
  1335|         0|            0|            0|  0.00%|        return -f/self.beta
  1336|         0|            0|            0|  0.00%|
  1337|         0|            0|            0|  0.00%|    def rsolve(self, f, tol=0):
  1338|         0|            0|            0|  0.00%|        return -f*self.beta.conj()
  1339|         0|            0|            0|  0.00%|
  1340|         0|            0|            0|  0.00%|    def rmatvec(self, f):
  1341|         0|            0|            0|  0.00%|        return -f/self.beta.conj()
  1342|         0|            0|            0|  0.00%|
  1343|         0|            0|            0|  0.00%|    def todense(self):
  1344|         0|            0|            0|  0.00%|        return np.diag(-1/self.beta)
  1345|         0|            0|            0|  0.00%|
  1346|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
  1347|         0|            0|            0|  0.00%|        incr = f*self.last_f > 0
  1348|         0|            0|            0|  0.00%|        self.beta[incr] += self.alpha
  1349|         0|            0|            0|  0.00%|        self.beta[~incr] = self.alpha
  1350|         0|            0|            0|  0.00%|        np.clip(self.beta, 0, self.alphamax, out=self.beta)
  1351|         0|            0|            0|  0.00%|
  1352|         0|            0|            0|  0.00%|
  1353|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1354|         0|            0|            0|  0.00%|# Iterative/Krylov approximated Jacobians
  1355|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1356|         0|            0|            0|  0.00%|
  1357|         0|            0|            0|  0.00%|class KrylovJacobian(Jacobian):
  1358|         0|            0|            0|  0.00%|    r"""
  1359|         0|            0|            0|  0.00%|    Find a root of a function, using Krylov approximation for inverse Jacobian.
  1360|         0|            0|            0|  0.00%|
  1361|         0|            0|            0|  0.00%|    This method is suitable for solving large-scale problems.
  1362|         0|            0|            0|  0.00%|
  1363|         0|            0|            0|  0.00%|    Parameters
  1364|         0|            0|            0|  0.00%|    ----------
  1365|         0|            0|            0|  0.00%|    %(params_basic)s
  1366|         0|            0|            0|  0.00%|    rdiff : float, optional
  1367|         0|            0|            0|  0.00%|        Relative step size to use in numerical differentiation.
  1368|         0|            0|            0|  0.00%|    method : {'lgmres', 'gmres', 'bicgstab', 'cgs', 'minres'} or function
  1369|         0|            0|            0|  0.00%|        Krylov method to use to approximate the Jacobian.
  1370|         0|            0|            0|  0.00%|        Can be a string, or a function implementing the same interface as
  1371|         0|            0|            0|  0.00%|        the iterative solvers in `scipy.sparse.linalg`.
  1372|         0|            0|            0|  0.00%|
  1373|         0|            0|            0|  0.00%|        The default is `scipy.sparse.linalg.lgmres`.
  1374|         0|            0|            0|  0.00%|    inner_maxiter : int, optional
  1375|         0|            0|            0|  0.00%|        Parameter to pass to the "inner" Krylov solver: maximum number of
  1376|         0|            0|            0|  0.00%|        iterations. Iteration will stop after maxiter steps even if the
  1377|         0|            0|            0|  0.00%|        specified tolerance has not been achieved.
  1378|         0|            0|            0|  0.00%|    inner_M : LinearOperator or InverseJacobian
  1379|         0|            0|            0|  0.00%|        Preconditioner for the inner Krylov iteration.
  1380|         0|            0|            0|  0.00%|        Note that you can use also inverse Jacobians as (adaptive)
  1381|         0|            0|            0|  0.00%|        preconditioners. For example,
  1382|         0|            0|            0|  0.00%|
  1383|         0|            0|            0|  0.00%|        >>> from scipy.optimize.nonlin import BroydenFirst, KrylovJacobian
  1384|         0|            0|            0|  0.00%|        >>> from scipy.optimize.nonlin import InverseJacobian
  1385|         0|            0|            0|  0.00%|        >>> jac = BroydenFirst()
  1386|         0|            0|            0|  0.00%|        >>> kjac = KrylovJacobian(inner_M=InverseJacobian(jac))
  1387|         0|            0|            0|  0.00%|
  1388|         0|            0|            0|  0.00%|        If the preconditioner has a method named 'update', it will be called
  1389|         0|            0|            0|  0.00%|        as ``update(x, f)`` after each nonlinear step, with ``x`` giving
  1390|         0|            0|            0|  0.00%|        the current point, and ``f`` the current function value.
  1391|         0|            0|            0|  0.00%|    outer_k : int, optional
  1392|         0|            0|            0|  0.00%|        Size of the subspace kept across LGMRES nonlinear iterations.
  1393|         0|            0|            0|  0.00%|        See `scipy.sparse.linalg.lgmres` for details.
  1394|         0|            0|            0|  0.00%|    inner_kwargs : kwargs
  1395|         0|            0|            0|  0.00%|        Keyword parameters for the "inner" Krylov solver
  1396|         0|            0|            0|  0.00%|        (defined with `method`). Parameter names must start with
  1397|         0|            0|            0|  0.00%|        the `inner_` prefix which will be stripped before passing on
  1398|         0|            0|            0|  0.00%|        the inner method. See, e.g., `scipy.sparse.linalg.gmres` for details.
  1399|         0|            0|            0|  0.00%|    %(params_extra)s
  1400|         0|            0|            0|  0.00%|
  1401|         0|            0|            0|  0.00%|    See Also
  1402|         0|            0|            0|  0.00%|    --------
  1403|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1404|         0|            0|            0|  0.00%|           functions. See ``method=='krylov'`` in particular.
  1405|         0|            0|            0|  0.00%|    scipy.sparse.linalg.gmres
  1406|         0|            0|            0|  0.00%|    scipy.sparse.linalg.lgmres
  1407|         0|            0|            0|  0.00%|
  1408|         0|            0|            0|  0.00%|    Notes
  1409|         0|            0|            0|  0.00%|    -----
  1410|         0|            0|            0|  0.00%|    This function implements a Newton-Krylov solver. The basic idea is
  1411|         0|            0|            0|  0.00%|    to compute the inverse of the Jacobian with an iterative Krylov
  1412|         0|            0|            0|  0.00%|    method. These methods require only evaluating the Jacobian-vector
  1413|         0|            0|            0|  0.00%|    products, which are conveniently approximated by a finite difference:
  1414|         0|            0|            0|  0.00%|
  1415|         0|            0|            0|  0.00%|    .. math:: J v \approx (f(x + \omega*v/|v|) - f(x)) / \omega
  1416|         0|            0|            0|  0.00%|
  1417|         0|            0|            0|  0.00%|    Due to the use of iterative matrix inverses, these methods can
  1418|         0|            0|            0|  0.00%|    deal with large nonlinear problems.
  1419|         0|            0|            0|  0.00%|
  1420|         0|            0|            0|  0.00%|    SciPy's `scipy.sparse.linalg` module offers a selection of Krylov
  1421|         0|            0|            0|  0.00%|    solvers to choose from. The default here is `lgmres`, which is a
  1422|         0|            0|            0|  0.00%|    variant of restarted GMRES iteration that reuses some of the
  1423|         0|            0|            0|  0.00%|    information obtained in the previous Newton steps to invert
  1424|         0|            0|            0|  0.00%|    Jacobians in subsequent steps.
  1425|         0|            0|            0|  0.00%|
  1426|         0|            0|            0|  0.00%|    For a review on Newton-Krylov methods, see for example [1]_,
  1427|         0|            0|            0|  0.00%|    and for the LGMRES sparse inverse method, see [2]_.
  1428|         0|            0|            0|  0.00%|
  1429|         0|            0|            0|  0.00%|    References
  1430|         0|            0|            0|  0.00%|    ----------
  1431|         0|            0|            0|  0.00%|    .. [1] D.A. Knoll and D.E. Keyes, J. Comp. Phys. 193, 357 (2004).
  1432|         0|            0|            0|  0.00%|           :doi:`10.1016/j.jcp.2003.08.010`
  1433|         0|            0|            0|  0.00%|    .. [2] A.H. Baker and E.R. Jessup and T. Manteuffel,
  1434|         0|            0|            0|  0.00%|           SIAM J. Matrix Anal. Appl. 26, 962 (2005).
  1435|         0|            0|            0|  0.00%|           :doi:`10.1137/S0895479803422014`
  1436|         0|            0|            0|  0.00%|
  1437|         0|            0|            0|  0.00%|    """
  1438|         0|            0|            0|  0.00%|
  1439|         0|            0|            0|  0.00%|    def __init__(self, rdiff=None, method='lgmres', inner_maxiter=20,
  1440|         0|            0|            0|  0.00%|                 inner_M=None, outer_k=10, **kw):
  1441|         0|            0|            0|  0.00%|        self.preconditioner = inner_M
  1442|         0|            0|            0|  0.00%|        self.rdiff = rdiff
  1443|         0|            0|            0|  0.00%|        self.method = dict(
  1444|         0|            0|            0|  0.00%|            bicgstab=scipy.sparse.linalg.bicgstab,
  1445|         0|            0|            0|  0.00%|            gmres=scipy.sparse.linalg.gmres,
  1446|         0|            0|            0|  0.00%|            lgmres=scipy.sparse.linalg.lgmres,
  1447|         0|            0|            0|  0.00%|            cgs=scipy.sparse.linalg.cgs,
  1448|         0|            0|            0|  0.00%|            minres=scipy.sparse.linalg.minres,
  1449|         0|            0|            0|  0.00%|            ).get(method, method)
  1450|         0|            0|            0|  0.00%|
  1451|         0|            0|            0|  0.00%|        self.method_kw = dict(maxiter=inner_maxiter, M=self.preconditioner)
  1452|         0|            0|            0|  0.00%|
  1453|         0|            0|            0|  0.00%|        if self.method is scipy.sparse.linalg.gmres:
  1454|         0|            0|            0|  0.00%|            # Replace GMRES's outer iteration with Newton steps
  1455|         0|            0|            0|  0.00%|            self.method_kw['restrt'] = inner_maxiter
  1456|         0|            0|            0|  0.00%|            self.method_kw['maxiter'] = 1
  1457|         0|            0|            0|  0.00%|            self.method_kw.setdefault('atol', 0)
  1458|         0|            0|            0|  0.00%|        elif self.method is scipy.sparse.linalg.gcrotmk:
  1459|         0|            0|            0|  0.00%|            self.method_kw.setdefault('atol', 0)
  1460|         0|            0|            0|  0.00%|        elif self.method is scipy.sparse.linalg.lgmres:
  1461|         0|            0|            0|  0.00%|            self.method_kw['outer_k'] = outer_k
  1462|         0|            0|            0|  0.00%|            # Replace LGMRES's outer iteration with Newton steps
  1463|         0|            0|            0|  0.00%|            self.method_kw['maxiter'] = 1
  1464|         0|            0|            0|  0.00%|            # Carry LGMRES's `outer_v` vectors across nonlinear iterations
  1465|         0|            0|            0|  0.00%|            self.method_kw.setdefault('outer_v', [])
  1466|         0|            0|            0|  0.00%|            self.method_kw.setdefault('prepend_outer_v', True)
  1467|         0|            0|            0|  0.00%|            # But don't carry the corresponding Jacobian*v products, in case
  1468|         0|            0|            0|  0.00%|            # the Jacobian changes a lot in the nonlinear step
  1469|         0|            0|            0|  0.00%|            #
  1470|         0|            0|            0|  0.00%|            # XXX: some trust-region inspired ideas might be more efficient...
  1471|         0|            0|            0|  0.00%|            #      See e.g., Brown & Saad. But needs to be implemented separately
  1472|         0|            0|            0|  0.00%|            #      since it's not an inexact Newton method.
  1473|         0|            0|            0|  0.00%|            self.method_kw.setdefault('store_outer_Av', False)
  1474|         0|            0|            0|  0.00%|            self.method_kw.setdefault('atol', 0)
  1475|         0|            0|            0|  0.00%|
  1476|         0|            0|            0|  0.00%|        for key, value in kw.items():
  1477|         0|            0|            0|  0.00%|            if not key.startswith('inner_'):
  1478|         0|            0|            0|  0.00%|                raise ValueError("Unknown parameter %s" % key)
  1479|         0|            0|            0|  0.00%|            self.method_kw[key[6:]] = value
  1480|         0|            0|            0|  0.00%|
  1481|         0|            0|            0|  0.00%|    def _update_diff_step(self):
  1482|         0|            0|            0|  0.00%|        mx = abs(self.x0).max()
  1483|         0|            0|            0|  0.00%|        mf = abs(self.f0).max()
  1484|         0|            0|            0|  0.00%|        self.omega = self.rdiff * max(1, mx) / max(1, mf)
  1485|         0|            0|            0|  0.00%|
  1486|         0|            0|            0|  0.00%|    def matvec(self, v):
  1487|         0|            0|            0|  0.00%|        nv = norm(v)
  1488|         0|            0|            0|  0.00%|        if nv == 0:
  1489|         0|            0|            0|  0.00%|            return 0*v
  1490|         0|            0|            0|  0.00%|        sc = self.omega / nv
  1491|         0|            0|            0|  0.00%|        r = (self.func(self.x0 + sc*v) - self.f0) / sc
  1492|         0|            0|            0|  0.00%|        if not np.all(np.isfinite(r)) and np.all(np.isfinite(v)):
  1493|         0|            0|            0|  0.00%|            raise ValueError('Function returned non-finite results')
  1494|         0|            0|            0|  0.00%|        return r
  1495|         0|            0|            0|  0.00%|
  1496|         0|            0|            0|  0.00%|    def solve(self, rhs, tol=0):
  1497|         0|            0|            0|  0.00%|        if 'tol' in self.method_kw:
  1498|         0|            0|            0|  0.00%|            sol, info = self.method(self.op, rhs, **self.method_kw)
  1499|         0|            0|            0|  0.00%|        else:
  1500|         0|            0|            0|  0.00%|            sol, info = self.method(self.op, rhs, tol=tol, **self.method_kw)
  1501|         0|            0|            0|  0.00%|        return sol
  1502|         0|            0|            0|  0.00%|
  1503|         0|            0|            0|  0.00%|    def update(self, x, f):
  1504|         0|            0|            0|  0.00%|        self.x0 = x
  1505|         0|            0|            0|  0.00%|        self.f0 = f
  1506|         0|            0|            0|  0.00%|        self._update_diff_step()
  1507|         0|            0|            0|  0.00%|
  1508|         0|            0|            0|  0.00%|        # Update also the preconditioner, if possible
  1509|         0|            0|            0|  0.00%|        if self.preconditioner is not None:
  1510|         0|            0|            0|  0.00%|            if hasattr(self.preconditioner, 'update'):
  1511|         0|            0|            0|  0.00%|                self.preconditioner.update(x, f)
  1512|         0|            0|            0|  0.00%|
  1513|         0|            0|            0|  0.00%|    def setup(self, x, f, func):
  1514|         0|            0|            0|  0.00%|        Jacobian.setup(self, x, f, func)
  1515|         0|            0|            0|  0.00%|        self.x0 = x
  1516|         0|            0|            0|  0.00%|        self.f0 = f
  1517|         0|            0|            0|  0.00%|        self.op = scipy.sparse.linalg.aslinearoperator(self)
  1518|         0|            0|            0|  0.00%|
  1519|         0|            0|            0|  0.00%|        if self.rdiff is None:
  1520|         0|            0|            0|  0.00%|            self.rdiff = np.finfo(x.dtype).eps ** (1./2)
  1521|         0|            0|            0|  0.00%|
  1522|         0|            0|            0|  0.00%|        self._update_diff_step()
  1523|         0|            0|            0|  0.00%|
  1524|         0|            0|            0|  0.00%|        # Setup also the preconditioner, if possible
  1525|         0|            0|            0|  0.00%|        if self.preconditioner is not None:
  1526|         0|            0|            0|  0.00%|            if hasattr(self.preconditioner, 'setup'):
  1527|         0|            0|            0|  0.00%|                self.preconditioner.setup(x, f, func)
  1528|         0|            0|            0|  0.00%|
  1529|         0|            0|            0|  0.00%|
  1530|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1531|         0|            0|            0|  0.00%|# Wrapper functions
  1532|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1533|         0|            0|            0|  0.00%|
  1534|         0|            0|            0|  0.00%|def _nonlin_wrapper(name, jac):
  1535|         0|            0|            0|  0.00%|    """
  1536|         0|            0|            0|  0.00%|    Construct a solver wrapper with given name and Jacobian approx.
  1537|         0|            0|            0|  0.00%|
  1538|         0|            0|            0|  0.00%|    It inspects the keyword arguments of ``jac.__init__``, and allows to
  1539|         0|            0|            0|  0.00%|    use the same arguments in the wrapper function, in addition to the
  1540|         0|            0|            0|  0.00%|    keyword arguments of `nonlin_solve`
  1541|         0|            0|            0|  0.00%|
  1542|         0|            0|            0|  0.00%|    """
  1543|         0|            0|            0|  0.00%|    signature = _getfullargspec(jac.__init__)
  1544|         0|            0|            0|  0.00%|    args, varargs, varkw, defaults, kwonlyargs, kwdefaults, _ = signature
  1545|         0|            0|            0|  0.00%|    kwargs = list(zip(args[-len(defaults):], defaults))
  1546|         0|            0|            0|  0.00%|    kw_str = ", ".join(["%s=%r" % (k, v) for k, v in kwargs])
  1547|         0|            0|            0|  0.00%|    if kw_str:
  1548|         0|            0|            0|  0.00%|        kw_str = ", " + kw_str
  1549|         0|            0|            0|  0.00%|    kwkw_str = ", ".join(["%s=%s" % (k, k) for k, v in kwargs])
  1550|         0|            0|            0|  0.00%|    if kwkw_str:
  1551|         0|            0|            0|  0.00%|        kwkw_str = kwkw_str + ", "
  1552|         0|            0|            0|  0.00%|    if kwonlyargs:
  1553|         0|            0|            0|  0.00%|        raise ValueError('Unexpected signature %s' % signature)
  1554|         0|            0|            0|  0.00%|
  1555|         0|            0|            0|  0.00%|    # Construct the wrapper function so that its keyword arguments
  1556|         0|            0|            0|  0.00%|    # are visible in pydoc.help etc.
  1557|         0|            0|            0|  0.00%|    wrapper = """
  1558|         0|            0|            0|  0.00%|def %(name)s(F, xin, iter=None %(kw)s, verbose=False, maxiter=None,
  1559|         0|            0|            0|  0.00%|             f_tol=None, f_rtol=None, x_tol=None, x_rtol=None,
  1560|         0|            0|            0|  0.00%|             tol_norm=None, line_search='armijo', callback=None, **kw):
  1561|         0|            0|            0|  0.00%|    jac = %(jac)s(%(kwkw)s **kw)
  1562|         0|            0|            0|  0.00%|    return nonlin_solve(F, xin, jac, iter, verbose, maxiter,
  1563|         0|            0|            0|  0.00%|                        f_tol, f_rtol, x_tol, x_rtol, tol_norm, line_search,
  1564|         0|            0|            0|  0.00%|                        callback)
  1565|         0|            0|            0|  0.00%|"""
  1566|         0|            0|            0|  0.00%|
  1567|         0|            0|            0|  0.00%|    wrapper = wrapper % dict(name=name, kw=kw_str, jac=jac.__name__,
  1568|         0|            0|            0|  0.00%|                             kwkw=kwkw_str)
  1569|         0|            0|            0|  0.00%|    ns = {}
  1570|         0|            0|            0|  0.00%|    ns.update(globals())
  1571|         0|            0|            0|  0.00%|    exec(wrapper, ns)
  1572|         0|            0|            0|  0.00%|    func = ns[name]
  1573|         0|            0|            0|  0.00%|    func.__doc__ = jac.__doc__
  1574|         0|            0|            0|  0.00%|    _set_doc(func)
  1575|         0|            0|            0|  0.00%|    return func
  1576|         0|            0|            0|  0.00%|
  1577|         0|            0|            0|  0.00%|
  1578|         0|            0|            0|  0.00%|broyden1 = _nonlin_wrapper('broyden1', BroydenFirst)
  1579|         0|            0|            0|  0.00%|broyden2 = _nonlin_wrapper('broyden2', BroydenSecond)
  1580|         0|            0|            0|  0.00%|anderson = _nonlin_wrapper('anderson', Anderson)
  1581|         0|            0|            0|  0.00%|linearmixing = _nonlin_wrapper('linearmixing', LinearMixing)
  1582|         0|            0|            0|  0.00%|diagbroyden = _nonlin_wrapper('diagbroyden', DiagBroyden)
  1583|         0|            0|            0|  0.00%|excitingmixing = _nonlin_wrapper('excitingmixing', ExcitingMixing)
  1584|         0|            0|            0|  0.00%|newton_krylov = _nonlin_wrapper('newton_krylov', KrylovJacobian)
File: <string>_44
File duration: 2.38419e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.38419e-05|  1.19209e-05|  0.00%|
File: <string>_31
File duration: 2.38419e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.38419e-05|  1.19209e-05|  0.00%|
File: <string>_81
File duration: 2.36034e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.36034e-05|  1.18017e-05|  0.00%|
File: <string>_149
File duration: 2.36034e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.36034e-05|  1.18017e-05|  0.00%|
File: <string>_343
File duration: 2.36034e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.36034e-05|  1.18017e-05|  0.00%|
File: <string>_113
File duration: 2.36034e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.36034e-05|  1.18017e-05|  0.00%|
File: <string>_119
File duration: 2.36034e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.36034e-05|  1.18017e-05|  0.00%|
File: <string>_150
File duration: 2.36034e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.36034e-05|  1.18017e-05|  0.00%|
File: <string>_129
File duration: 2.3365e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|   2.3365e-05|  1.16825e-05|  0.00%|
File: <string>_290
File duration: 2.3365e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|   2.3365e-05|  1.16825e-05|  0.00%|
File: <string>_47
File duration: 2.3365e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|   2.3365e-05|  1.16825e-05|  0.00%|
File: <string>_32
File duration: 2.3365e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|   2.3365e-05|  1.16825e-05|  0.00%|
File: <string>_144
File duration: 2.31266e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.31266e-05|  1.15633e-05|  0.00%|
(call)|         1|   1.0252e-05|   1.0252e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/jit/annotations.py:48 __getitem__
File: <string>_52
File duration: 2.31266e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.31266e-05|  1.15633e-05|  0.00%|
File: <string>_154
File duration: 2.31266e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|r"""
     2|         1|  9.29832e-06|  9.29832e-06|  0.00%|
     3|         0|            0|            0|  0.00%|Nonlinear solvers
     4|         1|  1.38283e-05|  1.38283e-05|  0.00%|-----------------
     5|         0|            0|            0|  0.00%|
     6|         0|            0|            0|  0.00%|.. currentmodule:: scipy.optimize
     7|         0|            0|            0|  0.00%|
     8|         0|            0|            0|  0.00%|This is a collection of general-purpose nonlinear multidimensional
     9|         0|            0|            0|  0.00%|solvers. These solvers find *x* for which *F(x) = 0*. Both *x*
    10|         0|            0|            0|  0.00%|and *F* can be multidimensional.
    11|         0|            0|            0|  0.00%|
    12|         0|            0|            0|  0.00%|Routines
    13|         0|            0|            0|  0.00%|~~~~~~~~
    14|         0|            0|            0|  0.00%|
    15|         0|            0|            0|  0.00%|Large-scale nonlinear solvers:
    16|         0|            0|            0|  0.00%|
    17|         0|            0|            0|  0.00%|.. autosummary::
    18|         0|            0|            0|  0.00%|
    19|         0|            0|            0|  0.00%|   newton_krylov
    20|         0|            0|            0|  0.00%|   anderson
    21|         0|            0|            0|  0.00%|
    22|         0|            0|            0|  0.00%|General nonlinear solvers:
    23|         0|            0|            0|  0.00%|
    24|         0|            0|            0|  0.00%|.. autosummary::
    25|         0|            0|            0|  0.00%|
    26|         0|            0|            0|  0.00%|   broyden1
    27|         0|            0|            0|  0.00%|   broyden2
    28|         0|            0|            0|  0.00%|
    29|         0|            0|            0|  0.00%|Simple iterations:
    30|         0|            0|            0|  0.00%|
    31|         0|            0|            0|  0.00%|.. autosummary::
    32|         0|            0|            0|  0.00%|
    33|         0|            0|            0|  0.00%|   excitingmixing
    34|         0|            0|            0|  0.00%|   linearmixing
    35|         0|            0|            0|  0.00%|   diagbroyden
    36|         0|            0|            0|  0.00%|
    37|         0|            0|            0|  0.00%|
    38|         0|            0|            0|  0.00%|Examples
    39|         0|            0|            0|  0.00%|~~~~~~~~
    40|         0|            0|            0|  0.00%|
    41|         0|            0|            0|  0.00%|**Small problem**
    42|         0|            0|            0|  0.00%|
    43|         0|            0|            0|  0.00%|>>> def F(x):
    44|         0|            0|            0|  0.00%|...    return np.cos(x) + x[::-1] - [1, 2, 3, 4]
    45|         0|            0|            0|  0.00%|>>> import scipy.optimize
    46|         0|            0|            0|  0.00%|>>> x = scipy.optimize.broyden1(F, [1,1,1,1], f_tol=1e-14)
    47|         0|            0|            0|  0.00%|>>> x
    48|         0|            0|            0|  0.00%|array([ 4.04674914,  3.91158389,  2.71791677,  1.61756251])
    49|         0|            0|            0|  0.00%|>>> np.cos(x) + x[::-1]
    50|         0|            0|            0|  0.00%|array([ 1.,  2.,  3.,  4.])
    51|         0|            0|            0|  0.00%|
    52|         0|            0|            0|  0.00%|
    53|         0|            0|            0|  0.00%|**Large problem**
    54|         0|            0|            0|  0.00%|
    55|         0|            0|            0|  0.00%|Suppose that we needed to solve the following integrodifferential
    56|         0|            0|            0|  0.00%|equation on the square :math:`[0,1]\times[0,1]`:
    57|         0|            0|            0|  0.00%|
    58|         0|            0|            0|  0.00%|.. math::
    59|         0|            0|            0|  0.00%|
    60|         0|            0|            0|  0.00%|   \nabla^2 P = 10 \left(\int_0^1\int_0^1\cosh(P)\,dx\,dy\right)^2
    61|         0|            0|            0|  0.00%|
    62|         0|            0|            0|  0.00%|with :math:`P(x,1) = 1` and :math:`P=0` elsewhere on the boundary of
    63|         0|            0|            0|  0.00%|the square.
    64|         0|            0|            0|  0.00%|
    65|         0|            0|            0|  0.00%|The solution can be found using the `newton_krylov` solver:
    66|         0|            0|            0|  0.00%|
    67|         0|            0|            0|  0.00%|.. plot::
    68|         0|            0|            0|  0.00%|
    69|         0|            0|            0|  0.00%|   import numpy as np
    70|         0|            0|            0|  0.00%|   from scipy.optimize import newton_krylov
    71|         0|            0|            0|  0.00%|   from numpy import cosh, zeros_like, mgrid, zeros
    72|         0|            0|            0|  0.00%|
    73|         0|            0|            0|  0.00%|   # parameters
    74|         0|            0|            0|  0.00%|   nx, ny = 75, 75
    75|         0|            0|            0|  0.00%|   hx, hy = 1./(nx-1), 1./(ny-1)
    76|         0|            0|            0|  0.00%|
    77|         0|            0|            0|  0.00%|   P_left, P_right = 0, 0
    78|         0|            0|            0|  0.00%|   P_top, P_bottom = 1, 0
    79|         0|            0|            0|  0.00%|
    80|         0|            0|            0|  0.00%|   def residual(P):
    81|         0|            0|            0|  0.00%|       d2x = zeros_like(P)
    82|         0|            0|            0|  0.00%|       d2y = zeros_like(P)
    83|         0|            0|            0|  0.00%|
    84|         0|            0|            0|  0.00%|       d2x[1:-1] = (P[2:]   - 2*P[1:-1] + P[:-2]) / hx/hx
    85|         0|            0|            0|  0.00%|       d2x[0]    = (P[1]    - 2*P[0]    + P_left)/hx/hx
    86|         0|            0|            0|  0.00%|       d2x[-1]   = (P_right - 2*P[-1]   + P[-2])/hx/hx
    87|         0|            0|            0|  0.00%|
    88|         0|            0|            0|  0.00%|       d2y[:,1:-1] = (P[:,2:] - 2*P[:,1:-1] + P[:,:-2])/hy/hy
    89|         0|            0|            0|  0.00%|       d2y[:,0]    = (P[:,1]  - 2*P[:,0]    + P_bottom)/hy/hy
    90|         0|            0|            0|  0.00%|       d2y[:,-1]   = (P_top   - 2*P[:,-1]   + P[:,-2])/hy/hy
    91|         0|            0|            0|  0.00%|
    92|         0|            0|            0|  0.00%|       return d2x + d2y - 10*cosh(P).mean()**2
    93|         0|            0|            0|  0.00%|
    94|         0|            0|            0|  0.00%|   # solve
    95|         0|            0|            0|  0.00%|   guess = zeros((nx, ny), float)
    96|         0|            0|            0|  0.00%|   sol = newton_krylov(residual, guess, method='lgmres', verbose=1)
    97|         0|            0|            0|  0.00%|   print('Residual: %g' % abs(residual(sol)).max())
    98|         0|            0|            0|  0.00%|
    99|         0|            0|            0|  0.00%|   # visualize
   100|         0|            0|            0|  0.00%|   import matplotlib.pyplot as plt
   101|         0|            0|            0|  0.00%|   x, y = mgrid[0:1:(nx*1j), 0:1:(ny*1j)]
   102|         0|            0|            0|  0.00%|   plt.pcolormesh(x, y, sol, shading='gouraud')
   103|         0|            0|            0|  0.00%|   plt.colorbar()
   104|         0|            0|            0|  0.00%|   plt.show()
   105|         0|            0|            0|  0.00%|
   106|         0|            0|            0|  0.00%|"""
   107|         0|            0|            0|  0.00%|# Copyright (C) 2009, Pauli Virtanen <pav@iki.fi>
   108|         0|            0|            0|  0.00%|# Distributed under the same license as SciPy.
   109|         0|            0|            0|  0.00%|
   110|         0|            0|            0|  0.00%|import sys
   111|         0|            0|            0|  0.00%|import numpy as np
   112|         0|            0|            0|  0.00%|from scipy.linalg import norm, solve, inv, qr, svd, LinAlgError
   113|         0|            0|            0|  0.00%|from numpy import asarray, dot, vdot
   114|         0|            0|            0|  0.00%|import scipy.sparse.linalg
   115|         0|            0|            0|  0.00%|import scipy.sparse
   116|         0|            0|            0|  0.00%|from scipy.linalg import get_blas_funcs
   117|         0|            0|            0|  0.00%|import inspect
   118|         0|            0|            0|  0.00%|from scipy._lib._util import getfullargspec_no_self as _getfullargspec
   119|         0|            0|            0|  0.00%|from .linesearch import scalar_search_wolfe1, scalar_search_armijo
   120|         0|            0|            0|  0.00%|
   121|         0|            0|            0|  0.00%|
   122|         0|            0|            0|  0.00%|__all__ = [
   123|         0|            0|            0|  0.00%|    'broyden1', 'broyden2', 'anderson', 'linearmixing',
   124|         0|            0|            0|  0.00%|    'diagbroyden', 'excitingmixing', 'newton_krylov']
   125|         0|            0|            0|  0.00%|
   126|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   127|         0|            0|            0|  0.00%|# Utility functions
   128|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   129|         0|            0|            0|  0.00%|
   130|         0|            0|            0|  0.00%|
   131|         0|            0|            0|  0.00%|class NoConvergence(Exception):
   132|         0|            0|            0|  0.00%|    pass
   133|         0|            0|            0|  0.00%|
   134|         0|            0|            0|  0.00%|
   135|         0|            0|            0|  0.00%|def maxnorm(x):
   136|         0|            0|            0|  0.00%|    return np.absolute(x).max()
   137|         0|            0|            0|  0.00%|
   138|         0|            0|            0|  0.00%|
   139|         0|            0|            0|  0.00%|def _as_inexact(x):
   140|         0|            0|            0|  0.00%|    """Return `x` as an array, of either floats or complex floats"""
   141|         0|            0|            0|  0.00%|    x = asarray(x)
   142|         0|            0|            0|  0.00%|    if not np.issubdtype(x.dtype, np.inexact):
   143|         0|            0|            0|  0.00%|        return asarray(x, dtype=np.float_)
   144|         0|            0|            0|  0.00%|    return x
   145|         0|            0|            0|  0.00%|
   146|         0|            0|            0|  0.00%|
   147|         0|            0|            0|  0.00%|def _array_like(x, x0):
   148|         0|            0|            0|  0.00%|    """Return ndarray `x` as same array subclass and shape as `x0`"""
   149|         0|            0|            0|  0.00%|    x = np.reshape(x, np.shape(x0))
   150|         0|            0|            0|  0.00%|    wrap = getattr(x0, '__array_wrap__', x.__array_wrap__)
   151|         0|            0|            0|  0.00%|    return wrap(x)
   152|         0|            0|            0|  0.00%|
   153|         0|            0|            0|  0.00%|
   154|         0|            0|            0|  0.00%|def _safe_norm(v):
   155|         0|            0|            0|  0.00%|    if not np.isfinite(v).all():
   156|         0|            0|            0|  0.00%|        return np.array(np.inf)
   157|         0|            0|            0|  0.00%|    return norm(v)
   158|         0|            0|            0|  0.00%|
   159|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   160|         0|            0|            0|  0.00%|# Generic nonlinear solver machinery
   161|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   162|         0|            0|            0|  0.00%|
   163|         0|            0|            0|  0.00%|
   164|         0|            0|            0|  0.00%|_doc_parts = dict(
   165|         0|            0|            0|  0.00%|    params_basic="""
   166|         0|            0|            0|  0.00%|    F : function(x) -> f
   167|         0|            0|            0|  0.00%|        Function whose root to find; should take and return an array-like
   168|         0|            0|            0|  0.00%|        object.
   169|         0|            0|            0|  0.00%|    xin : array_like
   170|         0|            0|            0|  0.00%|        Initial guess for the solution
   171|         0|            0|            0|  0.00%|    """.strip(),
   172|         0|            0|            0|  0.00%|    params_extra="""
   173|         0|            0|            0|  0.00%|    iter : int, optional
   174|         0|            0|            0|  0.00%|        Number of iterations to make. If omitted (default), make as many
   175|         0|            0|            0|  0.00%|        as required to meet tolerances.
   176|         0|            0|            0|  0.00%|    verbose : bool, optional
   177|         0|            0|            0|  0.00%|        Print status to stdout on every iteration.
   178|         0|            0|            0|  0.00%|    maxiter : int, optional
   179|         0|            0|            0|  0.00%|        Maximum number of iterations to make. If more are needed to
   180|         0|            0|            0|  0.00%|        meet convergence, `NoConvergence` is raised.
   181|         0|            0|            0|  0.00%|    f_tol : float, optional
   182|         0|            0|            0|  0.00%|        Absolute tolerance (in max-norm) for the residual.
   183|         0|            0|            0|  0.00%|        If omitted, default is 6e-6.
   184|         0|            0|            0|  0.00%|    f_rtol : float, optional
   185|         0|            0|            0|  0.00%|        Relative tolerance for the residual. If omitted, not used.
   186|         0|            0|            0|  0.00%|    x_tol : float, optional
   187|         0|            0|            0|  0.00%|        Absolute minimum step size, as determined from the Jacobian
   188|         0|            0|            0|  0.00%|        approximation. If the step size is smaller than this, optimization
   189|         0|            0|            0|  0.00%|        is terminated as successful. If omitted, not used.
   190|         0|            0|            0|  0.00%|    x_rtol : float, optional
   191|         0|            0|            0|  0.00%|        Relative minimum step size. If omitted, not used.
   192|         0|            0|            0|  0.00%|    tol_norm : function(vector) -> scalar, optional
   193|         0|            0|            0|  0.00%|        Norm to use in convergence check. Default is the maximum norm.
   194|         0|            0|            0|  0.00%|    line_search : {None, 'armijo' (default), 'wolfe'}, optional
   195|         0|            0|            0|  0.00%|        Which type of a line search to use to determine the step size in the
   196|         0|            0|            0|  0.00%|        direction given by the Jacobian approximation. Defaults to 'armijo'.
   197|         0|            0|            0|  0.00%|    callback : function, optional
   198|         0|            0|            0|  0.00%|        Optional callback function. It is called on every iteration as
   199|         0|            0|            0|  0.00%|        ``callback(x, f)`` where `x` is the current solution and `f`
   200|         0|            0|            0|  0.00%|        the corresponding residual.
   201|         0|            0|            0|  0.00%|
   202|         0|            0|            0|  0.00%|    Returns
   203|         0|            0|            0|  0.00%|    -------
   204|         0|            0|            0|  0.00%|    sol : ndarray
   205|         0|            0|            0|  0.00%|        An array (of similar array type as `x0`) containing the final solution.
   206|         0|            0|            0|  0.00%|
   207|         0|            0|            0|  0.00%|    Raises
   208|         0|            0|            0|  0.00%|    ------
   209|         0|            0|            0|  0.00%|    NoConvergence
   210|         0|            0|            0|  0.00%|        When a solution was not found.
   211|         0|            0|            0|  0.00%|
   212|         0|            0|            0|  0.00%|    """.strip()
   213|         0|            0|            0|  0.00%|)
   214|         0|            0|            0|  0.00%|
   215|         0|            0|            0|  0.00%|
   216|         0|            0|            0|  0.00%|def _set_doc(obj):
   217|         0|            0|            0|  0.00%|    if obj.__doc__:
   218|         0|            0|            0|  0.00%|        obj.__doc__ = obj.__doc__ % _doc_parts
   219|         0|            0|            0|  0.00%|
   220|         0|            0|            0|  0.00%|
   221|         0|            0|            0|  0.00%|def nonlin_solve(F, x0, jacobian='krylov', iter=None, verbose=False,
   222|         0|            0|            0|  0.00%|                 maxiter=None, f_tol=None, f_rtol=None, x_tol=None, x_rtol=None,
   223|         0|            0|            0|  0.00%|                 tol_norm=None, line_search='armijo', callback=None,
   224|         0|            0|            0|  0.00%|                 full_output=False, raise_exception=True):
   225|         0|            0|            0|  0.00%|    """
   226|         0|            0|            0|  0.00%|    Find a root of a function, in a way suitable for large-scale problems.
   227|         0|            0|            0|  0.00%|
   228|         0|            0|            0|  0.00%|    Parameters
   229|         0|            0|            0|  0.00%|    ----------
   230|         0|            0|            0|  0.00%|    %(params_basic)s
   231|         0|            0|            0|  0.00%|    jacobian : Jacobian
   232|         0|            0|            0|  0.00%|        A Jacobian approximation: `Jacobian` object or something that
   233|         0|            0|            0|  0.00%|        `asjacobian` can transform to one. Alternatively, a string specifying
   234|         0|            0|            0|  0.00%|        which of the builtin Jacobian approximations to use:
   235|         0|            0|            0|  0.00%|
   236|         0|            0|            0|  0.00%|            krylov, broyden1, broyden2, anderson
   237|         0|            0|            0|  0.00%|            diagbroyden, linearmixing, excitingmixing
   238|         0|            0|            0|  0.00%|
   239|         0|            0|            0|  0.00%|    %(params_extra)s
   240|         0|            0|            0|  0.00%|    full_output : bool
   241|         0|            0|            0|  0.00%|        If true, returns a dictionary `info` containing convergence
   242|         0|            0|            0|  0.00%|        information.
   243|         0|            0|            0|  0.00%|    raise_exception : bool
   244|         0|            0|            0|  0.00%|        If True, a `NoConvergence` exception is raise if no solution is found.
   245|         0|            0|            0|  0.00%|
   246|         0|            0|            0|  0.00%|    See Also
   247|         0|            0|            0|  0.00%|    --------
   248|         0|            0|            0|  0.00%|    asjacobian, Jacobian
   249|         0|            0|            0|  0.00%|
   250|         0|            0|            0|  0.00%|    Notes
   251|         0|            0|            0|  0.00%|    -----
   252|         0|            0|            0|  0.00%|    This algorithm implements the inexact Newton method, with
   253|         0|            0|            0|  0.00%|    backtracking or full line searches. Several Jacobian
   254|         0|            0|            0|  0.00%|    approximations are available, including Krylov and Quasi-Newton
   255|         0|            0|            0|  0.00%|    methods.
   256|         0|            0|            0|  0.00%|
   257|         0|            0|            0|  0.00%|    References
   258|         0|            0|            0|  0.00%|    ----------
   259|         0|            0|            0|  0.00%|    .. [KIM] C. T. Kelley, \"Iterative Methods for Linear and Nonlinear
   260|         0|            0|            0|  0.00%|       Equations\". Society for Industrial and Applied Mathematics. (1995)
   261|         0|            0|            0|  0.00%|       https://archive.siam.org/books/kelley/fr16/
   262|         0|            0|            0|  0.00%|
   263|         0|            0|            0|  0.00%|    """
   264|         0|            0|            0|  0.00%|    # Can't use default parameters because it's being explicitly passed as None
   265|         0|            0|            0|  0.00%|    # from the calling function, so we need to set it here.
   266|         0|            0|            0|  0.00%|    tol_norm = maxnorm if tol_norm is None else tol_norm
   267|         0|            0|            0|  0.00%|    condition = TerminationCondition(f_tol=f_tol, f_rtol=f_rtol,
   268|         0|            0|            0|  0.00%|                                     x_tol=x_tol, x_rtol=x_rtol,
   269|         0|            0|            0|  0.00%|                                     iter=iter, norm=tol_norm)
   270|         0|            0|            0|  0.00%|
   271|         0|            0|            0|  0.00%|    x0 = _as_inexact(x0)
   272|         0|            0|            0|  0.00%|    func = lambda z: _as_inexact(F(_array_like(z, x0))).flatten()
   273|         0|            0|            0|  0.00%|    x = x0.flatten()
   274|         0|            0|            0|  0.00%|
   275|         0|            0|            0|  0.00%|    dx = np.inf
   276|         0|            0|            0|  0.00%|    Fx = func(x)
   277|         0|            0|            0|  0.00%|    Fx_norm = norm(Fx)
   278|         0|            0|            0|  0.00%|
   279|         0|            0|            0|  0.00%|    jacobian = asjacobian(jacobian)
   280|         0|            0|            0|  0.00%|    jacobian.setup(x.copy(), Fx, func)
   281|         0|            0|            0|  0.00%|
   282|         0|            0|            0|  0.00%|    if maxiter is None:
   283|         0|            0|            0|  0.00%|        if iter is not None:
   284|         0|            0|            0|  0.00%|            maxiter = iter + 1
   285|         0|            0|            0|  0.00%|        else:
   286|         0|            0|            0|  0.00%|            maxiter = 100*(x.size+1)
   287|         0|            0|            0|  0.00%|
   288|         0|            0|            0|  0.00%|    if line_search is True:
   289|         0|            0|            0|  0.00%|        line_search = 'armijo'
   290|         0|            0|            0|  0.00%|    elif line_search is False:
   291|         0|            0|            0|  0.00%|        line_search = None
   292|         0|            0|            0|  0.00%|
   293|         0|            0|            0|  0.00%|    if line_search not in (None, 'armijo', 'wolfe'):
   294|         0|            0|            0|  0.00%|        raise ValueError("Invalid line search")
   295|         0|            0|            0|  0.00%|
   296|         0|            0|            0|  0.00%|    # Solver tolerance selection
   297|         0|            0|            0|  0.00%|    gamma = 0.9
   298|         0|            0|            0|  0.00%|    eta_max = 0.9999
   299|         0|            0|            0|  0.00%|    eta_treshold = 0.1
   300|         0|            0|            0|  0.00%|    eta = 1e-3
   301|         0|            0|            0|  0.00%|
   302|         0|            0|            0|  0.00%|    for n in range(maxiter):
   303|         0|            0|            0|  0.00%|        status = condition.check(Fx, x, dx)
   304|         0|            0|            0|  0.00%|        if status:
   305|         0|            0|            0|  0.00%|            break
   306|         0|            0|            0|  0.00%|
   307|         0|            0|            0|  0.00%|        # The tolerance, as computed for scipy.sparse.linalg.* routines
   308|         0|            0|            0|  0.00%|        tol = min(eta, eta*Fx_norm)
   309|         0|            0|            0|  0.00%|        dx = -jacobian.solve(Fx, tol=tol)
   310|         0|            0|            0|  0.00%|
   311|         0|            0|            0|  0.00%|        if norm(dx) == 0:
   312|         0|            0|            0|  0.00%|            raise ValueError("Jacobian inversion yielded zero vector. "
   313|         0|            0|            0|  0.00%|                             "This indicates a bug in the Jacobian "
   314|         0|            0|            0|  0.00%|                             "approximation.")
   315|         0|            0|            0|  0.00%|
   316|         0|            0|            0|  0.00%|        # Line search, or Newton step
   317|         0|            0|            0|  0.00%|        if line_search:
   318|         0|            0|            0|  0.00%|            s, x, Fx, Fx_norm_new = _nonlin_line_search(func, x, Fx, dx,
   319|         0|            0|            0|  0.00%|                                                        line_search)
   320|         0|            0|            0|  0.00%|        else:
   321|         0|            0|            0|  0.00%|            s = 1.0
   322|         0|            0|            0|  0.00%|            x = x + dx
   323|         0|            0|            0|  0.00%|            Fx = func(x)
   324|         0|            0|            0|  0.00%|            Fx_norm_new = norm(Fx)
   325|         0|            0|            0|  0.00%|
   326|         0|            0|            0|  0.00%|        jacobian.update(x.copy(), Fx)
   327|         0|            0|            0|  0.00%|
   328|         0|            0|            0|  0.00%|        if callback:
   329|         0|            0|            0|  0.00%|            callback(x, Fx)
   330|         0|            0|            0|  0.00%|
   331|         0|            0|            0|  0.00%|        # Adjust forcing parameters for inexact methods
   332|         0|            0|            0|  0.00%|        eta_A = gamma * Fx_norm_new**2 / Fx_norm**2
   333|         0|            0|            0|  0.00%|        if gamma * eta**2 < eta_treshold:
   334|         0|            0|            0|  0.00%|            eta = min(eta_max, eta_A)
   335|         0|            0|            0|  0.00%|        else:
   336|         0|            0|            0|  0.00%|            eta = min(eta_max, max(eta_A, gamma*eta**2))
   337|         0|            0|            0|  0.00%|
   338|         0|            0|            0|  0.00%|        Fx_norm = Fx_norm_new
   339|         0|            0|            0|  0.00%|
   340|         0|            0|            0|  0.00%|        # Print status
   341|         0|            0|            0|  0.00%|        if verbose:
   342|         0|            0|            0|  0.00%|            sys.stdout.write("%d:  |F(x)| = %g; step %g\n" % (
   343|         0|            0|            0|  0.00%|                n, tol_norm(Fx), s))
   344|         0|            0|            0|  0.00%|            sys.stdout.flush()
   345|         0|            0|            0|  0.00%|    else:
   346|         0|            0|            0|  0.00%|        if raise_exception:
   347|         0|            0|            0|  0.00%|            raise NoConvergence(_array_like(x, x0))
   348|         0|            0|            0|  0.00%|        else:
   349|         0|            0|            0|  0.00%|            status = 2
   350|         0|            0|            0|  0.00%|
   351|         0|            0|            0|  0.00%|    if full_output:
   352|         0|            0|            0|  0.00%|        info = {'nit': condition.iteration,
   353|         0|            0|            0|  0.00%|                'fun': Fx,
   354|         0|            0|            0|  0.00%|                'status': status,
   355|         0|            0|            0|  0.00%|                'success': status == 1,
   356|         0|            0|            0|  0.00%|                'message': {1: 'A solution was found at the specified '
   357|         0|            0|            0|  0.00%|                               'tolerance.',
   358|         0|            0|            0|  0.00%|                            2: 'The maximum number of iterations allowed '
   359|         0|            0|            0|  0.00%|                               'has been reached.'
   360|         0|            0|            0|  0.00%|                            }[status]
   361|         0|            0|            0|  0.00%|                }
   362|         0|            0|            0|  0.00%|        return _array_like(x, x0), info
   363|         0|            0|            0|  0.00%|    else:
   364|         0|            0|            0|  0.00%|        return _array_like(x, x0)
   365|         0|            0|            0|  0.00%|
   366|         0|            0|            0|  0.00%|
   367|         0|            0|            0|  0.00%|_set_doc(nonlin_solve)
   368|         0|            0|            0|  0.00%|
   369|         0|            0|            0|  0.00%|
   370|         0|            0|            0|  0.00%|def _nonlin_line_search(func, x, Fx, dx, search_type='armijo', rdiff=1e-8,
   371|         0|            0|            0|  0.00%|                        smin=1e-2):
   372|         0|            0|            0|  0.00%|    tmp_s = [0]
   373|         0|            0|            0|  0.00%|    tmp_Fx = [Fx]
   374|         0|            0|            0|  0.00%|    tmp_phi = [norm(Fx)**2]
   375|         0|            0|            0|  0.00%|    s_norm = norm(x) / norm(dx)
   376|         0|            0|            0|  0.00%|
   377|         0|            0|            0|  0.00%|    def phi(s, store=True):
   378|         0|            0|            0|  0.00%|        if s == tmp_s[0]:
   379|         0|            0|            0|  0.00%|            return tmp_phi[0]
   380|         0|            0|            0|  0.00%|        xt = x + s*dx
   381|         0|            0|            0|  0.00%|        v = func(xt)
   382|         0|            0|            0|  0.00%|        p = _safe_norm(v)**2
   383|         0|            0|            0|  0.00%|        if store:
   384|         0|            0|            0|  0.00%|            tmp_s[0] = s
   385|         0|            0|            0|  0.00%|            tmp_phi[0] = p
   386|         0|            0|            0|  0.00%|            tmp_Fx[0] = v
   387|         0|            0|            0|  0.00%|        return p
   388|         0|            0|            0|  0.00%|
   389|         0|            0|            0|  0.00%|    def derphi(s):
   390|         0|            0|            0|  0.00%|        ds = (abs(s) + s_norm + 1) * rdiff
   391|         0|            0|            0|  0.00%|        return (phi(s+ds, store=False) - phi(s)) / ds
   392|         0|            0|            0|  0.00%|
   393|         0|            0|            0|  0.00%|    if search_type == 'wolfe':
   394|         0|            0|            0|  0.00%|        s, phi1, phi0 = scalar_search_wolfe1(phi, derphi, tmp_phi[0],
   395|         0|            0|            0|  0.00%|                                             xtol=1e-2, amin=smin)
   396|         0|            0|            0|  0.00%|    elif search_type == 'armijo':
   397|         0|            0|            0|  0.00%|        s, phi1 = scalar_search_armijo(phi, tmp_phi[0], -tmp_phi[0],
   398|         0|            0|            0|  0.00%|                                       amin=smin)
   399|         0|            0|            0|  0.00%|
   400|         0|            0|            0|  0.00%|    if s is None:
   401|         0|            0|            0|  0.00%|        # XXX: No suitable step length found. Take the full Newton step,
   402|         0|            0|            0|  0.00%|        #      and hope for the best.
   403|         0|            0|            0|  0.00%|        s = 1.0
   404|         0|            0|            0|  0.00%|
   405|         0|            0|            0|  0.00%|    x = x + s*dx
   406|         0|            0|            0|  0.00%|    if s == tmp_s[0]:
   407|         0|            0|            0|  0.00%|        Fx = tmp_Fx[0]
   408|         0|            0|            0|  0.00%|    else:
   409|         0|            0|            0|  0.00%|        Fx = func(x)
   410|         0|            0|            0|  0.00%|    Fx_norm = norm(Fx)
   411|         0|            0|            0|  0.00%|
   412|         0|            0|            0|  0.00%|    return s, x, Fx, Fx_norm
   413|         0|            0|            0|  0.00%|
   414|         0|            0|            0|  0.00%|
   415|         0|            0|            0|  0.00%|class TerminationCondition(object):
   416|         0|            0|            0|  0.00%|    """
   417|         0|            0|            0|  0.00%|    Termination condition for an iteration. It is terminated if
   418|         0|            0|            0|  0.00%|
   419|         0|            0|            0|  0.00%|    - |F| < f_rtol*|F_0|, AND
   420|         0|            0|            0|  0.00%|    - |F| < f_tol
   421|         0|            0|            0|  0.00%|
   422|         0|            0|            0|  0.00%|    AND
   423|         0|            0|            0|  0.00%|
   424|         0|            0|            0|  0.00%|    - |dx| < x_rtol*|x|, AND
   425|         0|            0|            0|  0.00%|    - |dx| < x_tol
   426|         0|            0|            0|  0.00%|
   427|         0|            0|            0|  0.00%|    """
   428|         0|            0|            0|  0.00%|    def __init__(self, f_tol=None, f_rtol=None, x_tol=None, x_rtol=None,
   429|         0|            0|            0|  0.00%|                 iter=None, norm=maxnorm):
   430|         0|            0|            0|  0.00%|
   431|         0|            0|            0|  0.00%|        if f_tol is None:
   432|         0|            0|            0|  0.00%|            f_tol = np.finfo(np.float_).eps ** (1./3)
   433|         0|            0|            0|  0.00%|        if f_rtol is None:
   434|         0|            0|            0|  0.00%|            f_rtol = np.inf
   435|         0|            0|            0|  0.00%|        if x_tol is None:
   436|         0|            0|            0|  0.00%|            x_tol = np.inf
   437|         0|            0|            0|  0.00%|        if x_rtol is None:
   438|         0|            0|            0|  0.00%|            x_rtol = np.inf
   439|         0|            0|            0|  0.00%|
   440|         0|            0|            0|  0.00%|        self.x_tol = x_tol
   441|         0|            0|            0|  0.00%|        self.x_rtol = x_rtol
   442|         0|            0|            0|  0.00%|        self.f_tol = f_tol
   443|         0|            0|            0|  0.00%|        self.f_rtol = f_rtol
   444|         0|            0|            0|  0.00%|
   445|         0|            0|            0|  0.00%|        self.norm = norm
   446|         0|            0|            0|  0.00%|
   447|         0|            0|            0|  0.00%|        self.iter = iter
   448|         0|            0|            0|  0.00%|
   449|         0|            0|            0|  0.00%|        self.f0_norm = None
   450|         0|            0|            0|  0.00%|        self.iteration = 0
   451|         0|            0|            0|  0.00%|
   452|         0|            0|            0|  0.00%|    def check(self, f, x, dx):
   453|         0|            0|            0|  0.00%|        self.iteration += 1
   454|         0|            0|            0|  0.00%|        f_norm = self.norm(f)
   455|         0|            0|            0|  0.00%|        x_norm = self.norm(x)
   456|         0|            0|            0|  0.00%|        dx_norm = self.norm(dx)
   457|         0|            0|            0|  0.00%|
   458|         0|            0|            0|  0.00%|        if self.f0_norm is None:
   459|         0|            0|            0|  0.00%|            self.f0_norm = f_norm
   460|         0|            0|            0|  0.00%|
   461|         0|            0|            0|  0.00%|        if f_norm == 0:
   462|         0|            0|            0|  0.00%|            return 1
   463|         0|            0|            0|  0.00%|
   464|         0|            0|            0|  0.00%|        if self.iter is not None:
   465|         0|            0|            0|  0.00%|            # backwards compatibility with SciPy 0.6.0
   466|         0|            0|            0|  0.00%|            return 2 * (self.iteration > self.iter)
   467|         0|            0|            0|  0.00%|
   468|         0|            0|            0|  0.00%|        # NB: condition must succeed for rtol=inf even if norm == 0
   469|         0|            0|            0|  0.00%|        return int((f_norm <= self.f_tol
   470|         0|            0|            0|  0.00%|                    and f_norm/self.f_rtol <= self.f0_norm)
   471|         0|            0|            0|  0.00%|                   and (dx_norm <= self.x_tol
   472|         0|            0|            0|  0.00%|                        and dx_norm/self.x_rtol <= x_norm))
   473|         0|            0|            0|  0.00%|
   474|         0|            0|            0|  0.00%|
   475|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   476|         0|            0|            0|  0.00%|# Generic Jacobian approximation
   477|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   478|         0|            0|            0|  0.00%|
   479|         0|            0|            0|  0.00%|class Jacobian(object):
   480|         0|            0|            0|  0.00%|    """
   481|         0|            0|            0|  0.00%|    Common interface for Jacobians or Jacobian approximations.
   482|         0|            0|            0|  0.00%|
   483|         0|            0|            0|  0.00%|    The optional methods come useful when implementing trust region
   484|         0|            0|            0|  0.00%|    etc., algorithms that often require evaluating transposes of the
   485|         0|            0|            0|  0.00%|    Jacobian.
   486|         0|            0|            0|  0.00%|
   487|         0|            0|            0|  0.00%|    Methods
   488|         0|            0|            0|  0.00%|    -------
   489|         0|            0|            0|  0.00%|    solve
   490|         0|            0|            0|  0.00%|        Returns J^-1 * v
   491|         0|            0|            0|  0.00%|    update
   492|         0|            0|            0|  0.00%|        Updates Jacobian to point `x` (where the function has residual `Fx`)
   493|         0|            0|            0|  0.00%|
   494|         0|            0|            0|  0.00%|    matvec : optional
   495|         0|            0|            0|  0.00%|        Returns J * v
   496|         0|            0|            0|  0.00%|    rmatvec : optional
   497|         0|            0|            0|  0.00%|        Returns A^H * v
   498|         0|            0|            0|  0.00%|    rsolve : optional
   499|         0|            0|            0|  0.00%|        Returns A^-H * v
   500|         0|            0|            0|  0.00%|    matmat : optional
   501|         0|            0|            0|  0.00%|        Returns A * V, where V is a dense matrix with dimensions (N,K).
   502|         0|            0|            0|  0.00%|    todense : optional
   503|         0|            0|            0|  0.00%|        Form the dense Jacobian matrix. Necessary for dense trust region
   504|         0|            0|            0|  0.00%|        algorithms, and useful for testing.
   505|         0|            0|            0|  0.00%|
   506|         0|            0|            0|  0.00%|    Attributes
   507|         0|            0|            0|  0.00%|    ----------
   508|         0|            0|            0|  0.00%|    shape
   509|         0|            0|            0|  0.00%|        Matrix dimensions (M, N)
   510|         0|            0|            0|  0.00%|    dtype
   511|         0|            0|            0|  0.00%|        Data type of the matrix.
   512|         0|            0|            0|  0.00%|    func : callable, optional
   513|         0|            0|            0|  0.00%|        Function the Jacobian corresponds to
   514|         0|            0|            0|  0.00%|
   515|         0|            0|            0|  0.00%|    """
   516|         0|            0|            0|  0.00%|
   517|         0|            0|            0|  0.00%|    def __init__(self, **kw):
   518|         0|            0|            0|  0.00%|        names = ["solve", "update", "matvec", "rmatvec", "rsolve",
   519|         0|            0|            0|  0.00%|                 "matmat", "todense", "shape", "dtype"]
   520|         0|            0|            0|  0.00%|        for name, value in kw.items():
   521|         0|            0|            0|  0.00%|            if name not in names:
   522|         0|            0|            0|  0.00%|                raise ValueError("Unknown keyword argument %s" % name)
   523|         0|            0|            0|  0.00%|            if value is not None:
   524|         0|            0|            0|  0.00%|                setattr(self, name, kw[name])
   525|         0|            0|            0|  0.00%|
   526|         0|            0|            0|  0.00%|        if hasattr(self, 'todense'):
   527|         0|            0|            0|  0.00%|            self.__array__ = lambda: self.todense()
   528|         0|            0|            0|  0.00%|
   529|         0|            0|            0|  0.00%|    def aspreconditioner(self):
   530|         0|            0|            0|  0.00%|        return InverseJacobian(self)
   531|         0|            0|            0|  0.00%|
   532|         0|            0|            0|  0.00%|    def solve(self, v, tol=0):
   533|         0|            0|            0|  0.00%|        raise NotImplementedError
   534|         0|            0|            0|  0.00%|
   535|         0|            0|            0|  0.00%|    def update(self, x, F):
   536|         0|            0|            0|  0.00%|        pass
   537|         0|            0|            0|  0.00%|
   538|         0|            0|            0|  0.00%|    def setup(self, x, F, func):
   539|         0|            0|            0|  0.00%|        self.func = func
   540|         0|            0|            0|  0.00%|        self.shape = (F.size, x.size)
   541|         0|            0|            0|  0.00%|        self.dtype = F.dtype
   542|         0|            0|            0|  0.00%|        if self.__class__.setup is Jacobian.setup:
   543|         0|            0|            0|  0.00%|            # Call on the first point unless overridden
   544|         0|            0|            0|  0.00%|            self.update(x, F)
   545|         0|            0|            0|  0.00%|
   546|         0|            0|            0|  0.00%|
   547|         0|            0|            0|  0.00%|class InverseJacobian(object):
   548|         0|            0|            0|  0.00%|    def __init__(self, jacobian):
   549|         0|            0|            0|  0.00%|        self.jacobian = jacobian
   550|         0|            0|            0|  0.00%|        self.matvec = jacobian.solve
   551|         0|            0|            0|  0.00%|        self.update = jacobian.update
   552|         0|            0|            0|  0.00%|        if hasattr(jacobian, 'setup'):
   553|         0|            0|            0|  0.00%|            self.setup = jacobian.setup
   554|         0|            0|            0|  0.00%|        if hasattr(jacobian, 'rsolve'):
   555|         0|            0|            0|  0.00%|            self.rmatvec = jacobian.rsolve
   556|         0|            0|            0|  0.00%|
   557|         0|            0|            0|  0.00%|    @property
   558|         0|            0|            0|  0.00%|    def shape(self):
   559|         0|            0|            0|  0.00%|        return self.jacobian.shape
   560|         0|            0|            0|  0.00%|
   561|         0|            0|            0|  0.00%|    @property
   562|         0|            0|            0|  0.00%|    def dtype(self):
   563|         0|            0|            0|  0.00%|        return self.jacobian.dtype
   564|         0|            0|            0|  0.00%|
   565|         0|            0|            0|  0.00%|
   566|         0|            0|            0|  0.00%|def asjacobian(J):
   567|         0|            0|            0|  0.00%|    """
   568|         0|            0|            0|  0.00%|    Convert given object to one suitable for use as a Jacobian.
   569|         0|            0|            0|  0.00%|    """
   570|         0|            0|            0|  0.00%|    spsolve = scipy.sparse.linalg.spsolve
   571|         0|            0|            0|  0.00%|    if isinstance(J, Jacobian):
   572|         0|            0|            0|  0.00%|        return J
   573|         0|            0|            0|  0.00%|    elif inspect.isclass(J) and issubclass(J, Jacobian):
   574|         0|            0|            0|  0.00%|        return J()
   575|         0|            0|            0|  0.00%|    elif isinstance(J, np.ndarray):
   576|         0|            0|            0|  0.00%|        if J.ndim > 2:
   577|         0|            0|            0|  0.00%|            raise ValueError('array must have rank <= 2')
   578|         0|            0|            0|  0.00%|        J = np.atleast_2d(np.asarray(J))
   579|         0|            0|            0|  0.00%|        if J.shape[0] != J.shape[1]:
   580|         0|            0|            0|  0.00%|            raise ValueError('array must be square')
   581|         0|            0|            0|  0.00%|
   582|         0|            0|            0|  0.00%|        return Jacobian(matvec=lambda v: dot(J, v),
   583|         0|            0|            0|  0.00%|                        rmatvec=lambda v: dot(J.conj().T, v),
   584|         0|            0|            0|  0.00%|                        solve=lambda v: solve(J, v),
   585|         0|            0|            0|  0.00%|                        rsolve=lambda v: solve(J.conj().T, v),
   586|         0|            0|            0|  0.00%|                        dtype=J.dtype, shape=J.shape)
   587|         0|            0|            0|  0.00%|    elif scipy.sparse.isspmatrix(J):
   588|         0|            0|            0|  0.00%|        if J.shape[0] != J.shape[1]:
   589|         0|            0|            0|  0.00%|            raise ValueError('matrix must be square')
   590|         0|            0|            0|  0.00%|        return Jacobian(matvec=lambda v: J*v,
   591|         0|            0|            0|  0.00%|                        rmatvec=lambda v: J.conj().T * v,
   592|         0|            0|            0|  0.00%|                        solve=lambda v: spsolve(J, v),
   593|         0|            0|            0|  0.00%|                        rsolve=lambda v: spsolve(J.conj().T, v),
   594|         0|            0|            0|  0.00%|                        dtype=J.dtype, shape=J.shape)
   595|         0|            0|            0|  0.00%|    elif hasattr(J, 'shape') and hasattr(J, 'dtype') and hasattr(J, 'solve'):
   596|         0|            0|            0|  0.00%|        return Jacobian(matvec=getattr(J, 'matvec'),
   597|         0|            0|            0|  0.00%|                        rmatvec=getattr(J, 'rmatvec'),
   598|         0|            0|            0|  0.00%|                        solve=J.solve,
   599|         0|            0|            0|  0.00%|                        rsolve=getattr(J, 'rsolve'),
   600|         0|            0|            0|  0.00%|                        update=getattr(J, 'update'),
   601|         0|            0|            0|  0.00%|                        setup=getattr(J, 'setup'),
   602|         0|            0|            0|  0.00%|                        dtype=J.dtype,
   603|         0|            0|            0|  0.00%|                        shape=J.shape)
   604|         0|            0|            0|  0.00%|    elif callable(J):
   605|         0|            0|            0|  0.00%|        # Assume it's a function J(x) that returns the Jacobian
   606|         0|            0|            0|  0.00%|        class Jac(Jacobian):
   607|         0|            0|            0|  0.00%|            def update(self, x, F):
   608|         0|            0|            0|  0.00%|                self.x = x
   609|         0|            0|            0|  0.00%|
   610|         0|            0|            0|  0.00%|            def solve(self, v, tol=0):
   611|         0|            0|            0|  0.00%|                m = J(self.x)
   612|         0|            0|            0|  0.00%|                if isinstance(m, np.ndarray):
   613|         0|            0|            0|  0.00%|                    return solve(m, v)
   614|         0|            0|            0|  0.00%|                elif scipy.sparse.isspmatrix(m):
   615|         0|            0|            0|  0.00%|                    return spsolve(m, v)
   616|         0|            0|            0|  0.00%|                else:
   617|         0|            0|            0|  0.00%|                    raise ValueError("Unknown matrix type")
   618|         0|            0|            0|  0.00%|
   619|         0|            0|            0|  0.00%|            def matvec(self, v):
   620|         0|            0|            0|  0.00%|                m = J(self.x)
   621|         0|            0|            0|  0.00%|                if isinstance(m, np.ndarray):
   622|         0|            0|            0|  0.00%|                    return dot(m, v)
   623|         0|            0|            0|  0.00%|                elif scipy.sparse.isspmatrix(m):
   624|         0|            0|            0|  0.00%|                    return m*v
   625|         0|            0|            0|  0.00%|                else:
   626|         0|            0|            0|  0.00%|                    raise ValueError("Unknown matrix type")
   627|         0|            0|            0|  0.00%|
   628|         0|            0|            0|  0.00%|            def rsolve(self, v, tol=0):
   629|         0|            0|            0|  0.00%|                m = J(self.x)
   630|         0|            0|            0|  0.00%|                if isinstance(m, np.ndarray):
   631|         0|            0|            0|  0.00%|                    return solve(m.conj().T, v)
   632|         0|            0|            0|  0.00%|                elif scipy.sparse.isspmatrix(m):
   633|         0|            0|            0|  0.00%|                    return spsolve(m.conj().T, v)
   634|         0|            0|            0|  0.00%|                else:
   635|         0|            0|            0|  0.00%|                    raise ValueError("Unknown matrix type")
   636|         0|            0|            0|  0.00%|
   637|         0|            0|            0|  0.00%|            def rmatvec(self, v):
   638|         0|            0|            0|  0.00%|                m = J(self.x)
   639|         0|            0|            0|  0.00%|                if isinstance(m, np.ndarray):
   640|         0|            0|            0|  0.00%|                    return dot(m.conj().T, v)
   641|         0|            0|            0|  0.00%|                elif scipy.sparse.isspmatrix(m):
   642|         0|            0|            0|  0.00%|                    return m.conj().T * v
   643|         0|            0|            0|  0.00%|                else:
   644|         0|            0|            0|  0.00%|                    raise ValueError("Unknown matrix type")
   645|         0|            0|            0|  0.00%|        return Jac()
   646|         0|            0|            0|  0.00%|    elif isinstance(J, str):
   647|         0|            0|            0|  0.00%|        return dict(broyden1=BroydenFirst,
   648|         0|            0|            0|  0.00%|                    broyden2=BroydenSecond,
   649|         0|            0|            0|  0.00%|                    anderson=Anderson,
   650|         0|            0|            0|  0.00%|                    diagbroyden=DiagBroyden,
   651|         0|            0|            0|  0.00%|                    linearmixing=LinearMixing,
   652|         0|            0|            0|  0.00%|                    excitingmixing=ExcitingMixing,
   653|         0|            0|            0|  0.00%|                    krylov=KrylovJacobian)[J]()
   654|         0|            0|            0|  0.00%|    else:
   655|         0|            0|            0|  0.00%|        raise TypeError('Cannot convert object to a Jacobian')
   656|         0|            0|            0|  0.00%|
   657|         0|            0|            0|  0.00%|
   658|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   659|         0|            0|            0|  0.00%|# Broyden
   660|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   661|         0|            0|            0|  0.00%|
   662|         0|            0|            0|  0.00%|class GenericBroyden(Jacobian):
   663|         0|            0|            0|  0.00%|    def setup(self, x0, f0, func):
   664|         0|            0|            0|  0.00%|        Jacobian.setup(self, x0, f0, func)
   665|         0|            0|            0|  0.00%|        self.last_f = f0
   666|         0|            0|            0|  0.00%|        self.last_x = x0
   667|         0|            0|            0|  0.00%|
   668|         0|            0|            0|  0.00%|        if hasattr(self, 'alpha') and self.alpha is None:
   669|         0|            0|            0|  0.00%|            # Autoscale the initial Jacobian parameter
   670|         0|            0|            0|  0.00%|            # unless we have already guessed the solution.
   671|         0|            0|            0|  0.00%|            normf0 = norm(f0)
   672|         0|            0|            0|  0.00%|            if normf0:
   673|         0|            0|            0|  0.00%|                self.alpha = 0.5*max(norm(x0), 1) / normf0
   674|         0|            0|            0|  0.00%|            else:
   675|         0|            0|            0|  0.00%|                self.alpha = 1.0
   676|         0|            0|            0|  0.00%|
   677|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
   678|         0|            0|            0|  0.00%|        raise NotImplementedError
   679|         0|            0|            0|  0.00%|
   680|         0|            0|            0|  0.00%|    def update(self, x, f):
   681|         0|            0|            0|  0.00%|        df = f - self.last_f
   682|         0|            0|            0|  0.00%|        dx = x - self.last_x
   683|         0|            0|            0|  0.00%|        self._update(x, f, dx, df, norm(dx), norm(df))
   684|         0|            0|            0|  0.00%|        self.last_f = f
   685|         0|            0|            0|  0.00%|        self.last_x = x
   686|         0|            0|            0|  0.00%|
   687|         0|            0|            0|  0.00%|
   688|         0|            0|            0|  0.00%|class LowRankMatrix(object):
   689|         0|            0|            0|  0.00%|    r"""
   690|         0|            0|            0|  0.00%|    A matrix represented as
   691|         0|            0|            0|  0.00%|
   692|         0|            0|            0|  0.00%|    .. math:: \alpha I + \sum_{n=0}^{n=M} c_n d_n^\dagger
   693|         0|            0|            0|  0.00%|
   694|         0|            0|            0|  0.00%|    However, if the rank of the matrix reaches the dimension of the vectors,
   695|         0|            0|            0|  0.00%|    full matrix representation will be used thereon.
   696|         0|            0|            0|  0.00%|
   697|         0|            0|            0|  0.00%|    """
   698|         0|            0|            0|  0.00%|
   699|         0|            0|            0|  0.00%|    def __init__(self, alpha, n, dtype):
   700|         0|            0|            0|  0.00%|        self.alpha = alpha
   701|         0|            0|            0|  0.00%|        self.cs = []
   702|         0|            0|            0|  0.00%|        self.ds = []
   703|         0|            0|            0|  0.00%|        self.n = n
   704|         0|            0|            0|  0.00%|        self.dtype = dtype
   705|         0|            0|            0|  0.00%|        self.collapsed = None
   706|         0|            0|            0|  0.00%|
   707|         0|            0|            0|  0.00%|    @staticmethod
   708|         0|            0|            0|  0.00%|    def _matvec(v, alpha, cs, ds):
   709|         0|            0|            0|  0.00%|        axpy, scal, dotc = get_blas_funcs(['axpy', 'scal', 'dotc'],
   710|         0|            0|            0|  0.00%|                                          cs[:1] + [v])
   711|         0|            0|            0|  0.00%|        w = alpha * v
   712|         0|            0|            0|  0.00%|        for c, d in zip(cs, ds):
   713|         0|            0|            0|  0.00%|            a = dotc(d, v)
   714|         0|            0|            0|  0.00%|            w = axpy(c, w, w.size, a)
   715|         0|            0|            0|  0.00%|        return w
   716|         0|            0|            0|  0.00%|
   717|         0|            0|            0|  0.00%|    @staticmethod
   718|         0|            0|            0|  0.00%|    def _solve(v, alpha, cs, ds):
   719|         0|            0|            0|  0.00%|        """Evaluate w = M^-1 v"""
   720|         0|            0|            0|  0.00%|        if len(cs) == 0:
   721|         0|            0|            0|  0.00%|            return v/alpha
   722|         0|            0|            0|  0.00%|
   723|         0|            0|            0|  0.00%|        # (B + C D^H)^-1 = B^-1 - B^-1 C (I + D^H B^-1 C)^-1 D^H B^-1
   724|         0|            0|            0|  0.00%|
   725|         0|            0|            0|  0.00%|        axpy, dotc = get_blas_funcs(['axpy', 'dotc'], cs[:1] + [v])
   726|         0|            0|            0|  0.00%|
   727|         0|            0|            0|  0.00%|        c0 = cs[0]
   728|         0|            0|            0|  0.00%|        A = alpha * np.identity(len(cs), dtype=c0.dtype)
   729|         0|            0|            0|  0.00%|        for i, d in enumerate(ds):
   730|         0|            0|            0|  0.00%|            for j, c in enumerate(cs):
   731|         0|            0|            0|  0.00%|                A[i,j] += dotc(d, c)
   732|         0|            0|            0|  0.00%|
   733|         0|            0|            0|  0.00%|        q = np.zeros(len(cs), dtype=c0.dtype)
   734|         0|            0|            0|  0.00%|        for j, d in enumerate(ds):
   735|         0|            0|            0|  0.00%|            q[j] = dotc(d, v)
   736|         0|            0|            0|  0.00%|        q /= alpha
   737|         0|            0|            0|  0.00%|        q = solve(A, q)
   738|         0|            0|            0|  0.00%|
   739|         0|            0|            0|  0.00%|        w = v/alpha
   740|         0|            0|            0|  0.00%|        for c, qc in zip(cs, q):
   741|         0|            0|            0|  0.00%|            w = axpy(c, w, w.size, -qc)
   742|         0|            0|            0|  0.00%|
   743|         0|            0|            0|  0.00%|        return w
   744|         0|            0|            0|  0.00%|
   745|         0|            0|            0|  0.00%|    def matvec(self, v):
   746|         0|            0|            0|  0.00%|        """Evaluate w = M v"""
   747|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   748|         0|            0|            0|  0.00%|            return np.dot(self.collapsed, v)
   749|         0|            0|            0|  0.00%|        return LowRankMatrix._matvec(v, self.alpha, self.cs, self.ds)
   750|         0|            0|            0|  0.00%|
   751|         0|            0|            0|  0.00%|    def rmatvec(self, v):
   752|         0|            0|            0|  0.00%|        """Evaluate w = M^H v"""
   753|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   754|         0|            0|            0|  0.00%|            return np.dot(self.collapsed.T.conj(), v)
   755|         0|            0|            0|  0.00%|        return LowRankMatrix._matvec(v, np.conj(self.alpha), self.ds, self.cs)
   756|         0|            0|            0|  0.00%|
   757|         0|            0|            0|  0.00%|    def solve(self, v, tol=0):
   758|         0|            0|            0|  0.00%|        """Evaluate w = M^-1 v"""
   759|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   760|         0|            0|            0|  0.00%|            return solve(self.collapsed, v)
   761|         0|            0|            0|  0.00%|        return LowRankMatrix._solve(v, self.alpha, self.cs, self.ds)
   762|         0|            0|            0|  0.00%|
   763|         0|            0|            0|  0.00%|    def rsolve(self, v, tol=0):
   764|         0|            0|            0|  0.00%|        """Evaluate w = M^-H v"""
   765|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   766|         0|            0|            0|  0.00%|            return solve(self.collapsed.T.conj(), v)
   767|         0|            0|            0|  0.00%|        return LowRankMatrix._solve(v, np.conj(self.alpha), self.ds, self.cs)
   768|         0|            0|            0|  0.00%|
   769|         0|            0|            0|  0.00%|    def append(self, c, d):
   770|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   771|         0|            0|            0|  0.00%|            self.collapsed += c[:,None] * d[None,:].conj()
   772|         0|            0|            0|  0.00%|            return
   773|         0|            0|            0|  0.00%|
   774|         0|            0|            0|  0.00%|        self.cs.append(c)
   775|         0|            0|            0|  0.00%|        self.ds.append(d)
   776|         0|            0|            0|  0.00%|
   777|         0|            0|            0|  0.00%|        if len(self.cs) > c.size:
   778|         0|            0|            0|  0.00%|            self.collapse()
   779|         0|            0|            0|  0.00%|
   780|         0|            0|            0|  0.00%|    def __array__(self):
   781|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   782|         0|            0|            0|  0.00%|            return self.collapsed
   783|         0|            0|            0|  0.00%|
   784|         0|            0|            0|  0.00%|        Gm = self.alpha*np.identity(self.n, dtype=self.dtype)
   785|         0|            0|            0|  0.00%|        for c, d in zip(self.cs, self.ds):
   786|         0|            0|            0|  0.00%|            Gm += c[:,None]*d[None,:].conj()
   787|         0|            0|            0|  0.00%|        return Gm
   788|         0|            0|            0|  0.00%|
   789|         0|            0|            0|  0.00%|    def collapse(self):
   790|         0|            0|            0|  0.00%|        """Collapse the low-rank matrix to a full-rank one."""
   791|         0|            0|            0|  0.00%|        self.collapsed = np.array(self)
   792|         0|            0|            0|  0.00%|        self.cs = None
   793|         0|            0|            0|  0.00%|        self.ds = None
   794|         0|            0|            0|  0.00%|        self.alpha = None
   795|         0|            0|            0|  0.00%|
   796|         0|            0|            0|  0.00%|    def restart_reduce(self, rank):
   797|         0|            0|            0|  0.00%|        """
   798|         0|            0|            0|  0.00%|        Reduce the rank of the matrix by dropping all vectors.
   799|         0|            0|            0|  0.00%|        """
   800|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   801|         0|            0|            0|  0.00%|            return
   802|         0|            0|            0|  0.00%|        assert rank > 0
   803|         0|            0|            0|  0.00%|        if len(self.cs) > rank:
   804|         0|            0|            0|  0.00%|            del self.cs[:]
   805|         0|            0|            0|  0.00%|            del self.ds[:]
   806|         0|            0|            0|  0.00%|
   807|         0|            0|            0|  0.00%|    def simple_reduce(self, rank):
   808|         0|            0|            0|  0.00%|        """
   809|         0|            0|            0|  0.00%|        Reduce the rank of the matrix by dropping oldest vectors.
   810|         0|            0|            0|  0.00%|        """
   811|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   812|         0|            0|            0|  0.00%|            return
   813|         0|            0|            0|  0.00%|        assert rank > 0
   814|         0|            0|            0|  0.00%|        while len(self.cs) > rank:
   815|         0|            0|            0|  0.00%|            del self.cs[0]
   816|         0|            0|            0|  0.00%|            del self.ds[0]
   817|         0|            0|            0|  0.00%|
   818|         0|            0|            0|  0.00%|    def svd_reduce(self, max_rank, to_retain=None):
   819|         0|            0|            0|  0.00%|        """
   820|         0|            0|            0|  0.00%|        Reduce the rank of the matrix by retaining some SVD components.
   821|         0|            0|            0|  0.00%|
   822|         0|            0|            0|  0.00%|        This corresponds to the \"Broyden Rank Reduction Inverse\"
   823|         0|            0|            0|  0.00%|        algorithm described in [1]_.
   824|         0|            0|            0|  0.00%|
   825|         0|            0|            0|  0.00%|        Note that the SVD decomposition can be done by solving only a
   826|         0|            0|            0|  0.00%|        problem whose size is the effective rank of this matrix, which
   827|         0|            0|            0|  0.00%|        is viable even for large problems.
   828|         0|            0|            0|  0.00%|
   829|         0|            0|            0|  0.00%|        Parameters
   830|         0|            0|            0|  0.00%|        ----------
   831|         0|            0|            0|  0.00%|        max_rank : int
   832|         0|            0|            0|  0.00%|            Maximum rank of this matrix after reduction.
   833|         0|            0|            0|  0.00%|        to_retain : int, optional
   834|         0|            0|            0|  0.00%|            Number of SVD components to retain when reduction is done
   835|         0|            0|            0|  0.00%|            (ie. rank > max_rank). Default is ``max_rank - 2``.
   836|         0|            0|            0|  0.00%|
   837|         0|            0|            0|  0.00%|        References
   838|         0|            0|            0|  0.00%|        ----------
   839|         0|            0|            0|  0.00%|        .. [1] B.A. van der Rotten, PhD thesis,
   840|         0|            0|            0|  0.00%|           \"A limited memory Broyden method to solve high-dimensional
   841|         0|            0|            0|  0.00%|           systems of nonlinear equations\". Mathematisch Instituut,
   842|         0|            0|            0|  0.00%|           Universiteit Leiden, The Netherlands (2003).
   843|         0|            0|            0|  0.00%|
   844|         0|            0|            0|  0.00%|           https://web.archive.org/web/20161022015821/http://www.math.leidenuniv.nl/scripties/Rotten.pdf
   845|         0|            0|            0|  0.00%|
   846|         0|            0|            0|  0.00%|        """
   847|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   848|         0|            0|            0|  0.00%|            return
   849|         0|            0|            0|  0.00%|
   850|         0|            0|            0|  0.00%|        p = max_rank
   851|         0|            0|            0|  0.00%|        if to_retain is not None:
   852|         0|            0|            0|  0.00%|            q = to_retain
   853|         0|            0|            0|  0.00%|        else:
   854|         0|            0|            0|  0.00%|            q = p - 2
   855|         0|            0|            0|  0.00%|
   856|         0|            0|            0|  0.00%|        if self.cs:
   857|         0|            0|            0|  0.00%|            p = min(p, len(self.cs[0]))
   858|         0|            0|            0|  0.00%|        q = max(0, min(q, p-1))
   859|         0|            0|            0|  0.00%|
   860|         0|            0|            0|  0.00%|        m = len(self.cs)
   861|         0|            0|            0|  0.00%|        if m < p:
   862|         0|            0|            0|  0.00%|            # nothing to do
   863|         0|            0|            0|  0.00%|            return
   864|         0|            0|            0|  0.00%|
   865|         0|            0|            0|  0.00%|        C = np.array(self.cs).T
   866|         0|            0|            0|  0.00%|        D = np.array(self.ds).T
   867|         0|            0|            0|  0.00%|
   868|         0|            0|            0|  0.00%|        D, R = qr(D, mode='economic')
   869|         0|            0|            0|  0.00%|        C = dot(C, R.T.conj())
   870|         0|            0|            0|  0.00%|
   871|         0|            0|            0|  0.00%|        U, S, WH = svd(C, full_matrices=False, compute_uv=True)
   872|         0|            0|            0|  0.00%|
   873|         0|            0|            0|  0.00%|        C = dot(C, inv(WH))
   874|         0|            0|            0|  0.00%|        D = dot(D, WH.T.conj())
   875|         0|            0|            0|  0.00%|
   876|         0|            0|            0|  0.00%|        for k in range(q):
   877|         0|            0|            0|  0.00%|            self.cs[k] = C[:,k].copy()
   878|         0|            0|            0|  0.00%|            self.ds[k] = D[:,k].copy()
   879|         0|            0|            0|  0.00%|
   880|         0|            0|            0|  0.00%|        del self.cs[q:]
   881|         0|            0|            0|  0.00%|        del self.ds[q:]
   882|         0|            0|            0|  0.00%|
   883|         0|            0|            0|  0.00%|
   884|         0|            0|            0|  0.00%|_doc_parts['broyden_params'] = """
   885|         0|            0|            0|  0.00%|    alpha : float, optional
   886|         0|            0|            0|  0.00%|        Initial guess for the Jacobian is ``(-1/alpha)``.
   887|         0|            0|            0|  0.00%|    reduction_method : str or tuple, optional
   888|         0|            0|            0|  0.00%|        Method used in ensuring that the rank of the Broyden matrix
   889|         0|            0|            0|  0.00%|        stays low. Can either be a string giving the name of the method,
   890|         0|            0|            0|  0.00%|        or a tuple of the form ``(method, param1, param2, ...)``
   891|         0|            0|            0|  0.00%|        that gives the name of the method and values for additional parameters.
   892|         0|            0|            0|  0.00%|
   893|         0|            0|            0|  0.00%|        Methods available:
   894|         0|            0|            0|  0.00%|
   895|         0|            0|            0|  0.00%|            - ``restart``: drop all matrix columns. Has no extra parameters.
   896|         0|            0|            0|  0.00%|            - ``simple``: drop oldest matrix column. Has no extra parameters.
   897|         0|            0|            0|  0.00%|            - ``svd``: keep only the most significant SVD components.
   898|         0|            0|            0|  0.00%|              Takes an extra parameter, ``to_retain``, which determines the
   899|         0|            0|            0|  0.00%|              number of SVD components to retain when rank reduction is done.
   900|         0|            0|            0|  0.00%|              Default is ``max_rank - 2``.
   901|         0|            0|            0|  0.00%|
   902|         0|            0|            0|  0.00%|    max_rank : int, optional
   903|         0|            0|            0|  0.00%|        Maximum rank for the Broyden matrix.
   904|         0|            0|            0|  0.00%|        Default is infinity (i.e., no rank reduction).
   905|         0|            0|            0|  0.00%|    """.strip()
   906|         0|            0|            0|  0.00%|
   907|         0|            0|            0|  0.00%|
   908|         0|            0|            0|  0.00%|class BroydenFirst(GenericBroyden):
   909|         0|            0|            0|  0.00%|    r"""
   910|         0|            0|            0|  0.00%|    Find a root of a function, using Broyden's first Jacobian approximation.
   911|         0|            0|            0|  0.00%|
   912|         0|            0|            0|  0.00%|    This method is also known as \"Broyden's good method\".
   913|         0|            0|            0|  0.00%|
   914|         0|            0|            0|  0.00%|    Parameters
   915|         0|            0|            0|  0.00%|    ----------
   916|         0|            0|            0|  0.00%|    %(params_basic)s
   917|         0|            0|            0|  0.00%|    %(broyden_params)s
   918|         0|            0|            0|  0.00%|    %(params_extra)s
   919|         0|            0|            0|  0.00%|
   920|         0|            0|            0|  0.00%|    See Also
   921|         0|            0|            0|  0.00%|    --------
   922|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
   923|         0|            0|            0|  0.00%|           functions. See ``method=='broyden1'`` in particular.
   924|         0|            0|            0|  0.00%|
   925|         0|            0|            0|  0.00%|    Notes
   926|         0|            0|            0|  0.00%|    -----
   927|         0|            0|            0|  0.00%|    This algorithm implements the inverse Jacobian Quasi-Newton update
   928|         0|            0|            0|  0.00%|
   929|         0|            0|            0|  0.00%|    .. math:: H_+ = H + (dx - H df) dx^\dagger H / ( dx^\dagger H df)
   930|         0|            0|            0|  0.00%|
   931|         0|            0|            0|  0.00%|    which corresponds to Broyden's first Jacobian update
   932|         0|            0|            0|  0.00%|
   933|         0|            0|            0|  0.00%|    .. math:: J_+ = J + (df - J dx) dx^\dagger / dx^\dagger dx
   934|         0|            0|            0|  0.00%|
   935|         0|            0|            0|  0.00%|
   936|         0|            0|            0|  0.00%|    References
   937|         0|            0|            0|  0.00%|    ----------
   938|         0|            0|            0|  0.00%|    .. [1] B.A. van der Rotten, PhD thesis,
   939|         0|            0|            0|  0.00%|       \"A limited memory Broyden method to solve high-dimensional
   940|         0|            0|            0|  0.00%|       systems of nonlinear equations\". Mathematisch Instituut,
   941|         0|            0|            0|  0.00%|       Universiteit Leiden, The Netherlands (2003).
   942|         0|            0|            0|  0.00%|
   943|         0|            0|            0|  0.00%|       https://web.archive.org/web/20161022015821/http://www.math.leidenuniv.nl/scripties/Rotten.pdf
   944|         0|            0|            0|  0.00%|
   945|         0|            0|            0|  0.00%|    """
   946|         0|            0|            0|  0.00%|
   947|         0|            0|            0|  0.00%|    def __init__(self, alpha=None, reduction_method='restart', max_rank=None):
   948|         0|            0|            0|  0.00%|        GenericBroyden.__init__(self)
   949|         0|            0|            0|  0.00%|        self.alpha = alpha
   950|         0|            0|            0|  0.00%|        self.Gm = None
   951|         0|            0|            0|  0.00%|
   952|         0|            0|            0|  0.00%|        if max_rank is None:
   953|         0|            0|            0|  0.00%|            max_rank = np.inf
   954|         0|            0|            0|  0.00%|        self.max_rank = max_rank
   955|         0|            0|            0|  0.00%|
   956|         0|            0|            0|  0.00%|        if isinstance(reduction_method, str):
   957|         0|            0|            0|  0.00%|            reduce_params = ()
   958|         0|            0|            0|  0.00%|        else:
   959|         0|            0|            0|  0.00%|            reduce_params = reduction_method[1:]
   960|         0|            0|            0|  0.00%|            reduction_method = reduction_method[0]
   961|         0|            0|            0|  0.00%|        reduce_params = (max_rank - 1,) + reduce_params
   962|         0|            0|            0|  0.00%|
   963|         0|            0|            0|  0.00%|        if reduction_method == 'svd':
   964|         0|            0|            0|  0.00%|            self._reduce = lambda: self.Gm.svd_reduce(*reduce_params)
   965|         0|            0|            0|  0.00%|        elif reduction_method == 'simple':
   966|         0|            0|            0|  0.00%|            self._reduce = lambda: self.Gm.simple_reduce(*reduce_params)
   967|         0|            0|            0|  0.00%|        elif reduction_method == 'restart':
   968|         0|            0|            0|  0.00%|            self._reduce = lambda: self.Gm.restart_reduce(*reduce_params)
   969|         0|            0|            0|  0.00%|        else:
   970|         0|            0|            0|  0.00%|            raise ValueError("Unknown rank reduction method '%s'" %
   971|         0|            0|            0|  0.00%|                             reduction_method)
   972|         0|            0|            0|  0.00%|
   973|         0|            0|            0|  0.00%|    def setup(self, x, F, func):
   974|         0|            0|            0|  0.00%|        GenericBroyden.setup(self, x, F, func)
   975|         0|            0|            0|  0.00%|        self.Gm = LowRankMatrix(-self.alpha, self.shape[0], self.dtype)
   976|         0|            0|            0|  0.00%|
   977|         0|            0|            0|  0.00%|    def todense(self):
   978|         0|            0|            0|  0.00%|        return inv(self.Gm)
   979|         0|            0|            0|  0.00%|
   980|         0|            0|            0|  0.00%|    def solve(self, f, tol=0):
   981|         0|            0|            0|  0.00%|        r = self.Gm.matvec(f)
   982|         0|            0|            0|  0.00%|        if not np.isfinite(r).all():
   983|         0|            0|            0|  0.00%|            # singular; reset the Jacobian approximation
   984|         0|            0|            0|  0.00%|            self.setup(self.last_x, self.last_f, self.func)
   985|         0|            0|            0|  0.00%|        return self.Gm.matvec(f)
   986|         0|            0|            0|  0.00%|
   987|         0|            0|            0|  0.00%|    def matvec(self, f):
   988|         0|            0|            0|  0.00%|        return self.Gm.solve(f)
   989|         0|            0|            0|  0.00%|
   990|         0|            0|            0|  0.00%|    def rsolve(self, f, tol=0):
   991|         0|            0|            0|  0.00%|        return self.Gm.rmatvec(f)
   992|         0|            0|            0|  0.00%|
   993|         0|            0|            0|  0.00%|    def rmatvec(self, f):
   994|         0|            0|            0|  0.00%|        return self.Gm.rsolve(f)
   995|         0|            0|            0|  0.00%|
   996|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
   997|         0|            0|            0|  0.00%|        self._reduce()  # reduce first to preserve secant condition
   998|         0|            0|            0|  0.00%|
   999|         0|            0|            0|  0.00%|        v = self.Gm.rmatvec(dx)
  1000|         0|            0|            0|  0.00%|        c = dx - self.Gm.matvec(df)
  1001|         0|            0|            0|  0.00%|        d = v / vdot(df, v)
  1002|         0|            0|            0|  0.00%|
  1003|         0|            0|            0|  0.00%|        self.Gm.append(c, d)
  1004|         0|            0|            0|  0.00%|
  1005|         0|            0|            0|  0.00%|
  1006|         0|            0|            0|  0.00%|class BroydenSecond(BroydenFirst):
  1007|         0|            0|            0|  0.00%|    """
  1008|         0|            0|            0|  0.00%|    Find a root of a function, using Broyden\'s second Jacobian approximation.
  1009|         0|            0|            0|  0.00%|
  1010|         0|            0|            0|  0.00%|    This method is also known as \"Broyden's bad method\".
  1011|         0|            0|            0|  0.00%|
  1012|         0|            0|            0|  0.00%|    Parameters
  1013|         0|            0|            0|  0.00%|    ----------
  1014|         0|            0|            0|  0.00%|    %(params_basic)s
  1015|         0|            0|            0|  0.00%|    %(broyden_params)s
  1016|         0|            0|            0|  0.00%|    %(params_extra)s
  1017|         0|            0|            0|  0.00%|
  1018|         0|            0|            0|  0.00%|    See Also
  1019|         0|            0|            0|  0.00%|    --------
  1020|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1021|         0|            0|            0|  0.00%|           functions. See ``method=='broyden2'`` in particular.
  1022|         0|            0|            0|  0.00%|
  1023|         0|            0|            0|  0.00%|    Notes
  1024|         0|            0|            0|  0.00%|    -----
  1025|         0|            0|            0|  0.00%|    This algorithm implements the inverse Jacobian Quasi-Newton update
  1026|         0|            0|            0|  0.00%|
  1027|         0|            0|            0|  0.00%|    .. math:: H_+ = H + (dx - H df) df^\\dagger / ( df^\\dagger df)
  1028|         0|            0|            0|  0.00%|
  1029|         0|            0|            0|  0.00%|    corresponding to Broyden's second method.
  1030|         0|            0|            0|  0.00%|
  1031|         0|            0|            0|  0.00%|    References
  1032|         0|            0|            0|  0.00%|    ----------
  1033|         0|            0|            0|  0.00%|    .. [1] B.A. van der Rotten, PhD thesis,
  1034|         0|            0|            0|  0.00%|       \"A limited memory Broyden method to solve high-dimensional
  1035|         0|            0|            0|  0.00%|       systems of nonlinear equations\". Mathematisch Instituut,
  1036|         0|            0|            0|  0.00%|       Universiteit Leiden, The Netherlands (2003).
  1037|         0|            0|            0|  0.00%|
  1038|         0|            0|            0|  0.00%|       https://web.archive.org/web/20161022015821/http://www.math.leidenuniv.nl/scripties/Rotten.pdf
  1039|         0|            0|            0|  0.00%|
  1040|         0|            0|            0|  0.00%|    """
  1041|         0|            0|            0|  0.00%|
  1042|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
  1043|         0|            0|            0|  0.00%|        self._reduce()  # reduce first to preserve secant condition
  1044|         0|            0|            0|  0.00%|
  1045|         0|            0|            0|  0.00%|        v = df
  1046|         0|            0|            0|  0.00%|        c = dx - self.Gm.matvec(df)
  1047|         0|            0|            0|  0.00%|        d = v / df_norm**2
  1048|         0|            0|            0|  0.00%|        self.Gm.append(c, d)
  1049|         0|            0|            0|  0.00%|
  1050|         0|            0|            0|  0.00%|
  1051|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1052|         0|            0|            0|  0.00%|# Broyden-like (restricted memory)
  1053|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1054|         0|            0|            0|  0.00%|
  1055|         0|            0|            0|  0.00%|class Anderson(GenericBroyden):
  1056|         0|            0|            0|  0.00%|    """
  1057|         0|            0|            0|  0.00%|    Find a root of a function, using (extended) Anderson mixing.
  1058|         0|            0|            0|  0.00%|
  1059|         0|            0|            0|  0.00%|    The Jacobian is formed by for a 'best' solution in the space
  1060|         0|            0|            0|  0.00%|    spanned by last `M` vectors. As a result, only a MxM matrix
  1061|         0|            0|            0|  0.00%|    inversions and MxN multiplications are required. [Ey]_
  1062|         0|            0|            0|  0.00%|
  1063|         0|            0|            0|  0.00%|    Parameters
  1064|         0|            0|            0|  0.00%|    ----------
  1065|         0|            0|            0|  0.00%|    %(params_basic)s
  1066|         0|            0|            0|  0.00%|    alpha : float, optional
  1067|         0|            0|            0|  0.00%|        Initial guess for the Jacobian is (-1/alpha).
  1068|         0|            0|            0|  0.00%|    M : float, optional
  1069|         0|            0|            0|  0.00%|        Number of previous vectors to retain. Defaults to 5.
  1070|         0|            0|            0|  0.00%|    w0 : float, optional
  1071|         0|            0|            0|  0.00%|        Regularization parameter for numerical stability.
  1072|         0|            0|            0|  0.00%|        Compared to unity, good values of the order of 0.01.
  1073|         0|            0|            0|  0.00%|    %(params_extra)s
  1074|         0|            0|            0|  0.00%|
  1075|         0|            0|            0|  0.00%|    See Also
  1076|         0|            0|            0|  0.00%|    --------
  1077|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1078|         0|            0|            0|  0.00%|           functions. See ``method=='anderson'`` in particular.
  1079|         0|            0|            0|  0.00%|
  1080|         0|            0|            0|  0.00%|    References
  1081|         0|            0|            0|  0.00%|    ----------
  1082|         0|            0|            0|  0.00%|    .. [Ey] V. Eyert, J. Comp. Phys., 124, 271 (1996).
  1083|         0|            0|            0|  0.00%|
  1084|         0|            0|            0|  0.00%|    """
  1085|         0|            0|            0|  0.00%|
  1086|         0|            0|            0|  0.00%|    # Note:
  1087|         0|            0|            0|  0.00%|    #
  1088|         0|            0|            0|  0.00%|    # Anderson method maintains a rank M approximation of the inverse Jacobian,
  1089|         0|            0|            0|  0.00%|    #
  1090|         0|            0|            0|  0.00%|    #     J^-1 v ~ -v*alpha + (dX + alpha dF) A^-1 dF^H v
  1091|         0|            0|            0|  0.00%|    #     A      = W + dF^H dF
  1092|         0|            0|            0|  0.00%|    #     W      = w0^2 diag(dF^H dF)
  1093|         0|            0|            0|  0.00%|    #
  1094|         0|            0|            0|  0.00%|    # so that for w0 = 0 the secant condition applies for last M iterates, i.e.,
  1095|         0|            0|            0|  0.00%|    #
  1096|         0|            0|            0|  0.00%|    #     J^-1 df_j = dx_j
  1097|         0|            0|            0|  0.00%|    #
  1098|         0|            0|            0|  0.00%|    # for all j = 0 ... M-1.
  1099|         0|            0|            0|  0.00%|    #
  1100|         0|            0|            0|  0.00%|    # Moreover, (from Sherman-Morrison-Woodbury formula)
  1101|         0|            0|            0|  0.00%|    #
  1102|         0|            0|            0|  0.00%|    #    J v ~ [ b I - b^2 C (I + b dF^H A^-1 C)^-1 dF^H ] v
  1103|         0|            0|            0|  0.00%|    #    C   = (dX + alpha dF) A^-1
  1104|         0|            0|            0|  0.00%|    #    b   = -1/alpha
  1105|         0|            0|            0|  0.00%|    #
  1106|         0|            0|            0|  0.00%|    # and after simplification
  1107|         0|            0|            0|  0.00%|    #
  1108|         0|            0|            0|  0.00%|    #    J v ~ -v/alpha + (dX/alpha + dF) (dF^H dX - alpha W)^-1 dF^H v
  1109|         0|            0|            0|  0.00%|    #
  1110|         0|            0|            0|  0.00%|
  1111|         0|            0|            0|  0.00%|    def __init__(self, alpha=None, w0=0.01, M=5):
  1112|         0|            0|            0|  0.00%|        GenericBroyden.__init__(self)
  1113|         0|            0|            0|  0.00%|        self.alpha = alpha
  1114|         0|            0|            0|  0.00%|        self.M = M
  1115|         0|            0|            0|  0.00%|        self.dx = []
  1116|         0|            0|            0|  0.00%|        self.df = []
  1117|         0|            0|            0|  0.00%|        self.gamma = None
  1118|         0|            0|            0|  0.00%|        self.w0 = w0
  1119|         0|            0|            0|  0.00%|
  1120|         0|            0|            0|  0.00%|    def solve(self, f, tol=0):
  1121|         0|            0|            0|  0.00%|        dx = -self.alpha*f
  1122|         0|            0|            0|  0.00%|
  1123|         0|            0|            0|  0.00%|        n = len(self.dx)
  1124|         0|            0|            0|  0.00%|        if n == 0:
  1125|         0|            0|            0|  0.00%|            return dx
  1126|         0|            0|            0|  0.00%|
  1127|         0|            0|            0|  0.00%|        df_f = np.empty(n, dtype=f.dtype)
  1128|         0|            0|            0|  0.00%|        for k in range(n):
  1129|         0|            0|            0|  0.00%|            df_f[k] = vdot(self.df[k], f)
  1130|         0|            0|            0|  0.00%|
  1131|         0|            0|            0|  0.00%|        try:
  1132|         0|            0|            0|  0.00%|            gamma = solve(self.a, df_f)
  1133|         0|            0|            0|  0.00%|        except LinAlgError:
  1134|         0|            0|            0|  0.00%|            # singular; reset the Jacobian approximation
  1135|         0|            0|            0|  0.00%|            del self.dx[:]
  1136|         0|            0|            0|  0.00%|            del self.df[:]
  1137|         0|            0|            0|  0.00%|            return dx
  1138|         0|            0|            0|  0.00%|
  1139|         0|            0|            0|  0.00%|        for m in range(n):
  1140|         0|            0|            0|  0.00%|            dx += gamma[m]*(self.dx[m] + self.alpha*self.df[m])
  1141|         0|            0|            0|  0.00%|        return dx
  1142|         0|            0|            0|  0.00%|
  1143|         0|            0|            0|  0.00%|    def matvec(self, f):
  1144|         0|            0|            0|  0.00%|        dx = -f/self.alpha
  1145|         0|            0|            0|  0.00%|
  1146|         0|            0|            0|  0.00%|        n = len(self.dx)
  1147|         0|            0|            0|  0.00%|        if n == 0:
  1148|         0|            0|            0|  0.00%|            return dx
  1149|         0|            0|            0|  0.00%|
  1150|         0|            0|            0|  0.00%|        df_f = np.empty(n, dtype=f.dtype)
  1151|         0|            0|            0|  0.00%|        for k in range(n):
  1152|         0|            0|            0|  0.00%|            df_f[k] = vdot(self.df[k], f)
  1153|         0|            0|            0|  0.00%|
  1154|         0|            0|            0|  0.00%|        b = np.empty((n, n), dtype=f.dtype)
  1155|         0|            0|            0|  0.00%|        for i in range(n):
  1156|         0|            0|            0|  0.00%|            for j in range(n):
  1157|         0|            0|            0|  0.00%|                b[i,j] = vdot(self.df[i], self.dx[j])
  1158|         0|            0|            0|  0.00%|                if i == j and self.w0 != 0:
  1159|         0|            0|            0|  0.00%|                    b[i,j] -= vdot(self.df[i], self.df[i])*self.w0**2*self.alpha
  1160|         0|            0|            0|  0.00%|        gamma = solve(b, df_f)
  1161|         0|            0|            0|  0.00%|
  1162|         0|            0|            0|  0.00%|        for m in range(n):
  1163|         0|            0|            0|  0.00%|            dx += gamma[m]*(self.df[m] + self.dx[m]/self.alpha)
  1164|         0|            0|            0|  0.00%|        return dx
  1165|         0|            0|            0|  0.00%|
  1166|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
  1167|         0|            0|            0|  0.00%|        if self.M == 0:
  1168|         0|            0|            0|  0.00%|            return
  1169|         0|            0|            0|  0.00%|
  1170|         0|            0|            0|  0.00%|        self.dx.append(dx)
  1171|         0|            0|            0|  0.00%|        self.df.append(df)
  1172|         0|            0|            0|  0.00%|
  1173|         0|            0|            0|  0.00%|        while len(self.dx) > self.M:
  1174|         0|            0|            0|  0.00%|            self.dx.pop(0)
  1175|         0|            0|            0|  0.00%|            self.df.pop(0)
  1176|         0|            0|            0|  0.00%|
  1177|         0|            0|            0|  0.00%|        n = len(self.dx)
  1178|         0|            0|            0|  0.00%|        a = np.zeros((n, n), dtype=f.dtype)
  1179|         0|            0|            0|  0.00%|
  1180|         0|            0|            0|  0.00%|        for i in range(n):
  1181|         0|            0|            0|  0.00%|            for j in range(i, n):
  1182|         0|            0|            0|  0.00%|                if i == j:
  1183|         0|            0|            0|  0.00%|                    wd = self.w0**2
  1184|         0|            0|            0|  0.00%|                else:
  1185|         0|            0|            0|  0.00%|                    wd = 0
  1186|         0|            0|            0|  0.00%|                a[i,j] = (1+wd)*vdot(self.df[i], self.df[j])
  1187|         0|            0|            0|  0.00%|
  1188|         0|            0|            0|  0.00%|        a += np.triu(a, 1).T.conj()
  1189|         0|            0|            0|  0.00%|        self.a = a
  1190|         0|            0|            0|  0.00%|
  1191|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1192|         0|            0|            0|  0.00%|# Simple iterations
  1193|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1194|         0|            0|            0|  0.00%|
  1195|         0|            0|            0|  0.00%|
  1196|         0|            0|            0|  0.00%|class DiagBroyden(GenericBroyden):
  1197|         0|            0|            0|  0.00%|    """
  1198|         0|            0|            0|  0.00%|    Find a root of a function, using diagonal Broyden Jacobian approximation.
  1199|         0|            0|            0|  0.00%|
  1200|         0|            0|            0|  0.00%|    The Jacobian approximation is derived from previous iterations, by
  1201|         0|            0|            0|  0.00%|    retaining only the diagonal of Broyden matrices.
  1202|         0|            0|            0|  0.00%|
  1203|         0|            0|            0|  0.00%|    .. warning::
  1204|         0|            0|            0|  0.00%|
  1205|         0|            0|            0|  0.00%|       This algorithm may be useful for specific problems, but whether
  1206|         0|            0|            0|  0.00%|       it will work may depend strongly on the problem.
  1207|         0|            0|            0|  0.00%|
  1208|         0|            0|            0|  0.00%|    Parameters
  1209|         0|            0|            0|  0.00%|    ----------
  1210|         0|            0|            0|  0.00%|    %(params_basic)s
  1211|         0|            0|            0|  0.00%|    alpha : float, optional
  1212|         0|            0|            0|  0.00%|        Initial guess for the Jacobian is (-1/alpha).
  1213|         0|            0|            0|  0.00%|    %(params_extra)s
  1214|         0|            0|            0|  0.00%|
  1215|         0|            0|            0|  0.00%|    See Also
  1216|         0|            0|            0|  0.00%|    --------
  1217|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1218|         0|            0|            0|  0.00%|           functions. See ``method=='diagbroyden'`` in particular.
  1219|         0|            0|            0|  0.00%|    """
  1220|         0|            0|            0|  0.00%|
  1221|         0|            0|            0|  0.00%|    def __init__(self, alpha=None):
  1222|         0|            0|            0|  0.00%|        GenericBroyden.__init__(self)
  1223|         0|            0|            0|  0.00%|        self.alpha = alpha
  1224|         0|            0|            0|  0.00%|
  1225|         0|            0|            0|  0.00%|    def setup(self, x, F, func):
  1226|         0|            0|            0|  0.00%|        GenericBroyden.setup(self, x, F, func)
  1227|         0|            0|            0|  0.00%|        self.d = np.full((self.shape[0],), 1 / self.alpha, dtype=self.dtype)
  1228|         0|            0|            0|  0.00%|
  1229|         0|            0|            0|  0.00%|    def solve(self, f, tol=0):
  1230|         0|            0|            0|  0.00%|        return -f / self.d
  1231|         0|            0|            0|  0.00%|
  1232|         0|            0|            0|  0.00%|    def matvec(self, f):
  1233|         0|            0|            0|  0.00%|        return -f * self.d
  1234|         0|            0|            0|  0.00%|
  1235|         0|            0|            0|  0.00%|    def rsolve(self, f, tol=0):
  1236|         0|            0|            0|  0.00%|        return -f / self.d.conj()
  1237|         0|            0|            0|  0.00%|
  1238|         0|            0|            0|  0.00%|    def rmatvec(self, f):
  1239|         0|            0|            0|  0.00%|        return -f * self.d.conj()
  1240|         0|            0|            0|  0.00%|
  1241|         0|            0|            0|  0.00%|    def todense(self):
  1242|         0|            0|            0|  0.00%|        return np.diag(-self.d)
  1243|         0|            0|            0|  0.00%|
  1244|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
  1245|         0|            0|            0|  0.00%|        self.d -= (df + self.d*dx)*dx/dx_norm**2
  1246|         0|            0|            0|  0.00%|
  1247|         0|            0|            0|  0.00%|
  1248|         0|            0|            0|  0.00%|class LinearMixing(GenericBroyden):
  1249|         0|            0|            0|  0.00%|    """
  1250|         0|            0|            0|  0.00%|    Find a root of a function, using a scalar Jacobian approximation.
  1251|         0|            0|            0|  0.00%|
  1252|         0|            0|            0|  0.00%|    .. warning::
  1253|         0|            0|            0|  0.00%|
  1254|         0|            0|            0|  0.00%|       This algorithm may be useful for specific problems, but whether
  1255|         0|            0|            0|  0.00%|       it will work may depend strongly on the problem.
  1256|         0|            0|            0|  0.00%|
  1257|         0|            0|            0|  0.00%|    Parameters
  1258|         0|            0|            0|  0.00%|    ----------
  1259|         0|            0|            0|  0.00%|    %(params_basic)s
  1260|         0|            0|            0|  0.00%|    alpha : float, optional
  1261|         0|            0|            0|  0.00%|        The Jacobian approximation is (-1/alpha).
  1262|         0|            0|            0|  0.00%|    %(params_extra)s
  1263|         0|            0|            0|  0.00%|
  1264|         0|            0|            0|  0.00%|    See Also
  1265|         0|            0|            0|  0.00%|    --------
  1266|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1267|         0|            0|            0|  0.00%|           functions. See ``method=='linearmixing'`` in particular.
  1268|         0|            0|            0|  0.00%|
  1269|         0|            0|            0|  0.00%|    """
  1270|         0|            0|            0|  0.00%|
  1271|         0|            0|            0|  0.00%|    def __init__(self, alpha=None):
  1272|         0|            0|            0|  0.00%|        GenericBroyden.__init__(self)
  1273|         0|            0|            0|  0.00%|        self.alpha = alpha
  1274|         0|            0|            0|  0.00%|
  1275|         0|            0|            0|  0.00%|    def solve(self, f, tol=0):
  1276|         0|            0|            0|  0.00%|        return -f*self.alpha
  1277|         0|            0|            0|  0.00%|
  1278|         0|            0|            0|  0.00%|    def matvec(self, f):
  1279|         0|            0|            0|  0.00%|        return -f/self.alpha
  1280|         0|            0|            0|  0.00%|
  1281|         0|            0|            0|  0.00%|    def rsolve(self, f, tol=0):
  1282|         0|            0|            0|  0.00%|        return -f*np.conj(self.alpha)
  1283|         0|            0|            0|  0.00%|
  1284|         0|            0|            0|  0.00%|    def rmatvec(self, f):
  1285|         0|            0|            0|  0.00%|        return -f/np.conj(self.alpha)
  1286|         0|            0|            0|  0.00%|
  1287|         0|            0|            0|  0.00%|    def todense(self):
  1288|         0|            0|            0|  0.00%|        return np.diag(np.full(self.shape[0], -1/self.alpha))
  1289|         0|            0|            0|  0.00%|
  1290|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
  1291|         0|            0|            0|  0.00%|        pass
  1292|         0|            0|            0|  0.00%|
  1293|         0|            0|            0|  0.00%|
  1294|         0|            0|            0|  0.00%|class ExcitingMixing(GenericBroyden):
  1295|         0|            0|            0|  0.00%|    """
  1296|         0|            0|            0|  0.00%|    Find a root of a function, using a tuned diagonal Jacobian approximation.
  1297|         0|            0|            0|  0.00%|
  1298|         0|            0|            0|  0.00%|    The Jacobian matrix is diagonal and is tuned on each iteration.
  1299|         0|            0|            0|  0.00%|
  1300|         0|            0|            0|  0.00%|    .. warning::
  1301|         0|            0|            0|  0.00%|
  1302|         0|            0|            0|  0.00%|       This algorithm may be useful for specific problems, but whether
  1303|         0|            0|            0|  0.00%|       it will work may depend strongly on the problem.
  1304|         0|            0|            0|  0.00%|
  1305|         0|            0|            0|  0.00%|    See Also
  1306|         0|            0|            0|  0.00%|    --------
  1307|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1308|         0|            0|            0|  0.00%|           functions. See ``method=='excitingmixing'`` in particular.
  1309|         0|            0|            0|  0.00%|
  1310|         0|            0|            0|  0.00%|    Parameters
  1311|         0|            0|            0|  0.00%|    ----------
  1312|         0|            0|            0|  0.00%|    %(params_basic)s
  1313|         0|            0|            0|  0.00%|    alpha : float, optional
  1314|         0|            0|            0|  0.00%|        Initial Jacobian approximation is (-1/alpha).
  1315|         0|            0|            0|  0.00%|    alphamax : float, optional
  1316|         0|            0|            0|  0.00%|        The entries of the diagonal Jacobian are kept in the range
  1317|         0|            0|            0|  0.00%|        ``[alpha, alphamax]``.
  1318|         0|            0|            0|  0.00%|    %(params_extra)s
  1319|         0|            0|            0|  0.00%|    """
  1320|         0|            0|            0|  0.00%|
  1321|         0|            0|            0|  0.00%|    def __init__(self, alpha=None, alphamax=1.0):
  1322|         0|            0|            0|  0.00%|        GenericBroyden.__init__(self)
  1323|         0|            0|            0|  0.00%|        self.alpha = alpha
  1324|         0|            0|            0|  0.00%|        self.alphamax = alphamax
  1325|         0|            0|            0|  0.00%|        self.beta = None
  1326|         0|            0|            0|  0.00%|
  1327|         0|            0|            0|  0.00%|    def setup(self, x, F, func):
  1328|         0|            0|            0|  0.00%|        GenericBroyden.setup(self, x, F, func)
  1329|         0|            0|            0|  0.00%|        self.beta = np.full((self.shape[0],), self.alpha, dtype=self.dtype)
  1330|         0|            0|            0|  0.00%|
  1331|         0|            0|            0|  0.00%|    def solve(self, f, tol=0):
  1332|         0|            0|            0|  0.00%|        return -f*self.beta
  1333|         0|            0|            0|  0.00%|
  1334|         0|            0|            0|  0.00%|    def matvec(self, f):
  1335|         0|            0|            0|  0.00%|        return -f/self.beta
  1336|         0|            0|            0|  0.00%|
  1337|         0|            0|            0|  0.00%|    def rsolve(self, f, tol=0):
  1338|         0|            0|            0|  0.00%|        return -f*self.beta.conj()
  1339|         0|            0|            0|  0.00%|
  1340|         0|            0|            0|  0.00%|    def rmatvec(self, f):
  1341|         0|            0|            0|  0.00%|        return -f/self.beta.conj()
  1342|         0|            0|            0|  0.00%|
  1343|         0|            0|            0|  0.00%|    def todense(self):
  1344|         0|            0|            0|  0.00%|        return np.diag(-1/self.beta)
  1345|         0|            0|            0|  0.00%|
  1346|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
  1347|         0|            0|            0|  0.00%|        incr = f*self.last_f > 0
  1348|         0|            0|            0|  0.00%|        self.beta[incr] += self.alpha
  1349|         0|            0|            0|  0.00%|        self.beta[~incr] = self.alpha
  1350|         0|            0|            0|  0.00%|        np.clip(self.beta, 0, self.alphamax, out=self.beta)
  1351|         0|            0|            0|  0.00%|
  1352|         0|            0|            0|  0.00%|
  1353|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1354|         0|            0|            0|  0.00%|# Iterative/Krylov approximated Jacobians
  1355|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1356|         0|            0|            0|  0.00%|
  1357|         0|            0|            0|  0.00%|class KrylovJacobian(Jacobian):
  1358|         0|            0|            0|  0.00%|    r"""
  1359|         0|            0|            0|  0.00%|    Find a root of a function, using Krylov approximation for inverse Jacobian.
  1360|         0|            0|            0|  0.00%|
  1361|         0|            0|            0|  0.00%|    This method is suitable for solving large-scale problems.
  1362|         0|            0|            0|  0.00%|
  1363|         0|            0|            0|  0.00%|    Parameters
  1364|         0|            0|            0|  0.00%|    ----------
  1365|         0|            0|            0|  0.00%|    %(params_basic)s
  1366|         0|            0|            0|  0.00%|    rdiff : float, optional
  1367|         0|            0|            0|  0.00%|        Relative step size to use in numerical differentiation.
  1368|         0|            0|            0|  0.00%|    method : {'lgmres', 'gmres', 'bicgstab', 'cgs', 'minres'} or function
  1369|         0|            0|            0|  0.00%|        Krylov method to use to approximate the Jacobian.
  1370|         0|            0|            0|  0.00%|        Can be a string, or a function implementing the same interface as
  1371|         0|            0|            0|  0.00%|        the iterative solvers in `scipy.sparse.linalg`.
  1372|         0|            0|            0|  0.00%|
  1373|         0|            0|            0|  0.00%|        The default is `scipy.sparse.linalg.lgmres`.
  1374|         0|            0|            0|  0.00%|    inner_maxiter : int, optional
  1375|         0|            0|            0|  0.00%|        Parameter to pass to the "inner" Krylov solver: maximum number of
  1376|         0|            0|            0|  0.00%|        iterations. Iteration will stop after maxiter steps even if the
  1377|         0|            0|            0|  0.00%|        specified tolerance has not been achieved.
  1378|         0|            0|            0|  0.00%|    inner_M : LinearOperator or InverseJacobian
  1379|         0|            0|            0|  0.00%|        Preconditioner for the inner Krylov iteration.
  1380|         0|            0|            0|  0.00%|        Note that you can use also inverse Jacobians as (adaptive)
  1381|         0|            0|            0|  0.00%|        preconditioners. For example,
  1382|         0|            0|            0|  0.00%|
  1383|         0|            0|            0|  0.00%|        >>> from scipy.optimize.nonlin import BroydenFirst, KrylovJacobian
  1384|         0|            0|            0|  0.00%|        >>> from scipy.optimize.nonlin import InverseJacobian
  1385|         0|            0|            0|  0.00%|        >>> jac = BroydenFirst()
  1386|         0|            0|            0|  0.00%|        >>> kjac = KrylovJacobian(inner_M=InverseJacobian(jac))
  1387|         0|            0|            0|  0.00%|
  1388|         0|            0|            0|  0.00%|        If the preconditioner has a method named 'update', it will be called
  1389|         0|            0|            0|  0.00%|        as ``update(x, f)`` after each nonlinear step, with ``x`` giving
  1390|         0|            0|            0|  0.00%|        the current point, and ``f`` the current function value.
  1391|         0|            0|            0|  0.00%|    outer_k : int, optional
  1392|         0|            0|            0|  0.00%|        Size of the subspace kept across LGMRES nonlinear iterations.
  1393|         0|            0|            0|  0.00%|        See `scipy.sparse.linalg.lgmres` for details.
  1394|         0|            0|            0|  0.00%|    inner_kwargs : kwargs
  1395|         0|            0|            0|  0.00%|        Keyword parameters for the "inner" Krylov solver
  1396|         0|            0|            0|  0.00%|        (defined with `method`). Parameter names must start with
  1397|         0|            0|            0|  0.00%|        the `inner_` prefix which will be stripped before passing on
  1398|         0|            0|            0|  0.00%|        the inner method. See, e.g., `scipy.sparse.linalg.gmres` for details.
  1399|         0|            0|            0|  0.00%|    %(params_extra)s
  1400|         0|            0|            0|  0.00%|
  1401|         0|            0|            0|  0.00%|    See Also
  1402|         0|            0|            0|  0.00%|    --------
  1403|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1404|         0|            0|            0|  0.00%|           functions. See ``method=='krylov'`` in particular.
  1405|         0|            0|            0|  0.00%|    scipy.sparse.linalg.gmres
  1406|         0|            0|            0|  0.00%|    scipy.sparse.linalg.lgmres
  1407|         0|            0|            0|  0.00%|
  1408|         0|            0|            0|  0.00%|    Notes
  1409|         0|            0|            0|  0.00%|    -----
  1410|         0|            0|            0|  0.00%|    This function implements a Newton-Krylov solver. The basic idea is
  1411|         0|            0|            0|  0.00%|    to compute the inverse of the Jacobian with an iterative Krylov
  1412|         0|            0|            0|  0.00%|    method. These methods require only evaluating the Jacobian-vector
  1413|         0|            0|            0|  0.00%|    products, which are conveniently approximated by a finite difference:
  1414|         0|            0|            0|  0.00%|
  1415|         0|            0|            0|  0.00%|    .. math:: J v \approx (f(x + \omega*v/|v|) - f(x)) / \omega
  1416|         0|            0|            0|  0.00%|
  1417|         0|            0|            0|  0.00%|    Due to the use of iterative matrix inverses, these methods can
  1418|         0|            0|            0|  0.00%|    deal with large nonlinear problems.
  1419|         0|            0|            0|  0.00%|
  1420|         0|            0|            0|  0.00%|    SciPy's `scipy.sparse.linalg` module offers a selection of Krylov
  1421|         0|            0|            0|  0.00%|    solvers to choose from. The default here is `lgmres`, which is a
  1422|         0|            0|            0|  0.00%|    variant of restarted GMRES iteration that reuses some of the
  1423|         0|            0|            0|  0.00%|    information obtained in the previous Newton steps to invert
  1424|         0|            0|            0|  0.00%|    Jacobians in subsequent steps.
  1425|         0|            0|            0|  0.00%|
  1426|         0|            0|            0|  0.00%|    For a review on Newton-Krylov methods, see for example [1]_,
  1427|         0|            0|            0|  0.00%|    and for the LGMRES sparse inverse method, see [2]_.
  1428|         0|            0|            0|  0.00%|
  1429|         0|            0|            0|  0.00%|    References
  1430|         0|            0|            0|  0.00%|    ----------
  1431|         0|            0|            0|  0.00%|    .. [1] D.A. Knoll and D.E. Keyes, J. Comp. Phys. 193, 357 (2004).
  1432|         0|            0|            0|  0.00%|           :doi:`10.1016/j.jcp.2003.08.010`
  1433|         0|            0|            0|  0.00%|    .. [2] A.H. Baker and E.R. Jessup and T. Manteuffel,
  1434|         0|            0|            0|  0.00%|           SIAM J. Matrix Anal. Appl. 26, 962 (2005).
  1435|         0|            0|            0|  0.00%|           :doi:`10.1137/S0895479803422014`
  1436|         0|            0|            0|  0.00%|
  1437|         0|            0|            0|  0.00%|    """
  1438|         0|            0|            0|  0.00%|
  1439|         0|            0|            0|  0.00%|    def __init__(self, rdiff=None, method='lgmres', inner_maxiter=20,
  1440|         0|            0|            0|  0.00%|                 inner_M=None, outer_k=10, **kw):
  1441|         0|            0|            0|  0.00%|        self.preconditioner = inner_M
  1442|         0|            0|            0|  0.00%|        self.rdiff = rdiff
  1443|         0|            0|            0|  0.00%|        self.method = dict(
  1444|         0|            0|            0|  0.00%|            bicgstab=scipy.sparse.linalg.bicgstab,
  1445|         0|            0|            0|  0.00%|            gmres=scipy.sparse.linalg.gmres,
  1446|         0|            0|            0|  0.00%|            lgmres=scipy.sparse.linalg.lgmres,
  1447|         0|            0|            0|  0.00%|            cgs=scipy.sparse.linalg.cgs,
  1448|         0|            0|            0|  0.00%|            minres=scipy.sparse.linalg.minres,
  1449|         0|            0|            0|  0.00%|            ).get(method, method)
  1450|         0|            0|            0|  0.00%|
  1451|         0|            0|            0|  0.00%|        self.method_kw = dict(maxiter=inner_maxiter, M=self.preconditioner)
  1452|         0|            0|            0|  0.00%|
  1453|         0|            0|            0|  0.00%|        if self.method is scipy.sparse.linalg.gmres:
  1454|         0|            0|            0|  0.00%|            # Replace GMRES's outer iteration with Newton steps
  1455|         0|            0|            0|  0.00%|            self.method_kw['restrt'] = inner_maxiter
  1456|         0|            0|            0|  0.00%|            self.method_kw['maxiter'] = 1
  1457|         0|            0|            0|  0.00%|            self.method_kw.setdefault('atol', 0)
  1458|         0|            0|            0|  0.00%|        elif self.method is scipy.sparse.linalg.gcrotmk:
  1459|         0|            0|            0|  0.00%|            self.method_kw.setdefault('atol', 0)
  1460|         0|            0|            0|  0.00%|        elif self.method is scipy.sparse.linalg.lgmres:
  1461|         0|            0|            0|  0.00%|            self.method_kw['outer_k'] = outer_k
  1462|         0|            0|            0|  0.00%|            # Replace LGMRES's outer iteration with Newton steps
  1463|         0|            0|            0|  0.00%|            self.method_kw['maxiter'] = 1
  1464|         0|            0|            0|  0.00%|            # Carry LGMRES's `outer_v` vectors across nonlinear iterations
  1465|         0|            0|            0|  0.00%|            self.method_kw.setdefault('outer_v', [])
  1466|         0|            0|            0|  0.00%|            self.method_kw.setdefault('prepend_outer_v', True)
  1467|         0|            0|            0|  0.00%|            # But don't carry the corresponding Jacobian*v products, in case
  1468|         0|            0|            0|  0.00%|            # the Jacobian changes a lot in the nonlinear step
  1469|         0|            0|            0|  0.00%|            #
  1470|         0|            0|            0|  0.00%|            # XXX: some trust-region inspired ideas might be more efficient...
  1471|         0|            0|            0|  0.00%|            #      See e.g., Brown & Saad. But needs to be implemented separately
  1472|         0|            0|            0|  0.00%|            #      since it's not an inexact Newton method.
  1473|         0|            0|            0|  0.00%|            self.method_kw.setdefault('store_outer_Av', False)
  1474|         0|            0|            0|  0.00%|            self.method_kw.setdefault('atol', 0)
  1475|         0|            0|            0|  0.00%|
  1476|         0|            0|            0|  0.00%|        for key, value in kw.items():
  1477|         0|            0|            0|  0.00%|            if not key.startswith('inner_'):
  1478|         0|            0|            0|  0.00%|                raise ValueError("Unknown parameter %s" % key)
  1479|         0|            0|            0|  0.00%|            self.method_kw[key[6:]] = value
  1480|         0|            0|            0|  0.00%|
  1481|         0|            0|            0|  0.00%|    def _update_diff_step(self):
  1482|         0|            0|            0|  0.00%|        mx = abs(self.x0).max()
  1483|         0|            0|            0|  0.00%|        mf = abs(self.f0).max()
  1484|         0|            0|            0|  0.00%|        self.omega = self.rdiff * max(1, mx) / max(1, mf)
  1485|         0|            0|            0|  0.00%|
  1486|         0|            0|            0|  0.00%|    def matvec(self, v):
  1487|         0|            0|            0|  0.00%|        nv = norm(v)
  1488|         0|            0|            0|  0.00%|        if nv == 0:
  1489|         0|            0|            0|  0.00%|            return 0*v
  1490|         0|            0|            0|  0.00%|        sc = self.omega / nv
  1491|         0|            0|            0|  0.00%|        r = (self.func(self.x0 + sc*v) - self.f0) / sc
  1492|         0|            0|            0|  0.00%|        if not np.all(np.isfinite(r)) and np.all(np.isfinite(v)):
  1493|         0|            0|            0|  0.00%|            raise ValueError('Function returned non-finite results')
  1494|         0|            0|            0|  0.00%|        return r
  1495|         0|            0|            0|  0.00%|
  1496|         0|            0|            0|  0.00%|    def solve(self, rhs, tol=0):
  1497|         0|            0|            0|  0.00%|        if 'tol' in self.method_kw:
  1498|         0|            0|            0|  0.00%|            sol, info = self.method(self.op, rhs, **self.method_kw)
  1499|         0|            0|            0|  0.00%|        else:
  1500|         0|            0|            0|  0.00%|            sol, info = self.method(self.op, rhs, tol=tol, **self.method_kw)
  1501|         0|            0|            0|  0.00%|        return sol
  1502|         0|            0|            0|  0.00%|
  1503|         0|            0|            0|  0.00%|    def update(self, x, f):
  1504|         0|            0|            0|  0.00%|        self.x0 = x
  1505|         0|            0|            0|  0.00%|        self.f0 = f
  1506|         0|            0|            0|  0.00%|        self._update_diff_step()
  1507|         0|            0|            0|  0.00%|
  1508|         0|            0|            0|  0.00%|        # Update also the preconditioner, if possible
  1509|         0|            0|            0|  0.00%|        if self.preconditioner is not None:
  1510|         0|            0|            0|  0.00%|            if hasattr(self.preconditioner, 'update'):
  1511|         0|            0|            0|  0.00%|                self.preconditioner.update(x, f)
  1512|         0|            0|            0|  0.00%|
  1513|         0|            0|            0|  0.00%|    def setup(self, x, f, func):
  1514|         0|            0|            0|  0.00%|        Jacobian.setup(self, x, f, func)
  1515|         0|            0|            0|  0.00%|        self.x0 = x
  1516|         0|            0|            0|  0.00%|        self.f0 = f
  1517|         0|            0|            0|  0.00%|        self.op = scipy.sparse.linalg.aslinearoperator(self)
  1518|         0|            0|            0|  0.00%|
  1519|         0|            0|            0|  0.00%|        if self.rdiff is None:
  1520|         0|            0|            0|  0.00%|            self.rdiff = np.finfo(x.dtype).eps ** (1./2)
  1521|         0|            0|            0|  0.00%|
  1522|         0|            0|            0|  0.00%|        self._update_diff_step()
  1523|         0|            0|            0|  0.00%|
  1524|         0|            0|            0|  0.00%|        # Setup also the preconditioner, if possible
  1525|         0|            0|            0|  0.00%|        if self.preconditioner is not None:
  1526|         0|            0|            0|  0.00%|            if hasattr(self.preconditioner, 'setup'):
  1527|         0|            0|            0|  0.00%|                self.preconditioner.setup(x, f, func)
  1528|         0|            0|            0|  0.00%|
  1529|         0|            0|            0|  0.00%|
  1530|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1531|         0|            0|            0|  0.00%|# Wrapper functions
  1532|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1533|         0|            0|            0|  0.00%|
  1534|         0|            0|            0|  0.00%|def _nonlin_wrapper(name, jac):
  1535|         0|            0|            0|  0.00%|    """
  1536|         0|            0|            0|  0.00%|    Construct a solver wrapper with given name and Jacobian approx.
  1537|         0|            0|            0|  0.00%|
  1538|         0|            0|            0|  0.00%|    It inspects the keyword arguments of ``jac.__init__``, and allows to
  1539|         0|            0|            0|  0.00%|    use the same arguments in the wrapper function, in addition to the
  1540|         0|            0|            0|  0.00%|    keyword arguments of `nonlin_solve`
  1541|         0|            0|            0|  0.00%|
  1542|         0|            0|            0|  0.00%|    """
  1543|         0|            0|            0|  0.00%|    signature = _getfullargspec(jac.__init__)
  1544|         0|            0|            0|  0.00%|    args, varargs, varkw, defaults, kwonlyargs, kwdefaults, _ = signature
  1545|         0|            0|            0|  0.00%|    kwargs = list(zip(args[-len(defaults):], defaults))
  1546|         0|            0|            0|  0.00%|    kw_str = ", ".join(["%s=%r" % (k, v) for k, v in kwargs])
  1547|         0|            0|            0|  0.00%|    if kw_str:
  1548|         0|            0|            0|  0.00%|        kw_str = ", " + kw_str
  1549|         0|            0|            0|  0.00%|    kwkw_str = ", ".join(["%s=%s" % (k, k) for k, v in kwargs])
  1550|         0|            0|            0|  0.00%|    if kwkw_str:
  1551|         0|            0|            0|  0.00%|        kwkw_str = kwkw_str + ", "
  1552|         0|            0|            0|  0.00%|    if kwonlyargs:
  1553|         0|            0|            0|  0.00%|        raise ValueError('Unexpected signature %s' % signature)
  1554|         0|            0|            0|  0.00%|
  1555|         0|            0|            0|  0.00%|    # Construct the wrapper function so that its keyword arguments
  1556|         0|            0|            0|  0.00%|    # are visible in pydoc.help etc.
  1557|         0|            0|            0|  0.00%|    wrapper = """
  1558|         0|            0|            0|  0.00%|def %(name)s(F, xin, iter=None %(kw)s, verbose=False, maxiter=None,
  1559|         0|            0|            0|  0.00%|             f_tol=None, f_rtol=None, x_tol=None, x_rtol=None,
  1560|         0|            0|            0|  0.00%|             tol_norm=None, line_search='armijo', callback=None, **kw):
  1561|         0|            0|            0|  0.00%|    jac = %(jac)s(%(kwkw)s **kw)
  1562|         0|            0|            0|  0.00%|    return nonlin_solve(F, xin, jac, iter, verbose, maxiter,
  1563|         0|            0|            0|  0.00%|                        f_tol, f_rtol, x_tol, x_rtol, tol_norm, line_search,
  1564|         0|            0|            0|  0.00%|                        callback)
  1565|         0|            0|            0|  0.00%|"""
  1566|         0|            0|            0|  0.00%|
  1567|         0|            0|            0|  0.00%|    wrapper = wrapper % dict(name=name, kw=kw_str, jac=jac.__name__,
  1568|         0|            0|            0|  0.00%|                             kwkw=kwkw_str)
  1569|         0|            0|            0|  0.00%|    ns = {}
  1570|         0|            0|            0|  0.00%|    ns.update(globals())
  1571|         0|            0|            0|  0.00%|    exec(wrapper, ns)
  1572|         0|            0|            0|  0.00%|    func = ns[name]
  1573|         0|            0|            0|  0.00%|    func.__doc__ = jac.__doc__
  1574|         0|            0|            0|  0.00%|    _set_doc(func)
  1575|         0|            0|            0|  0.00%|    return func
  1576|         0|            0|            0|  0.00%|
  1577|         0|            0|            0|  0.00%|
  1578|         0|            0|            0|  0.00%|broyden1 = _nonlin_wrapper('broyden1', BroydenFirst)
  1579|         0|            0|            0|  0.00%|broyden2 = _nonlin_wrapper('broyden2', BroydenSecond)
  1580|         0|            0|            0|  0.00%|anderson = _nonlin_wrapper('anderson', Anderson)
  1581|         0|            0|            0|  0.00%|linearmixing = _nonlin_wrapper('linearmixing', LinearMixing)
  1582|         0|            0|            0|  0.00%|diagbroyden = _nonlin_wrapper('diagbroyden', DiagBroyden)
  1583|         0|            0|            0|  0.00%|excitingmixing = _nonlin_wrapper('excitingmixing', ExcitingMixing)
  1584|         0|            0|            0|  0.00%|newton_krylov = _nonlin_wrapper('newton_krylov', KrylovJacobian)
File: <string>_2
File duration: 2.31266e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.31266e-05|  1.15633e-05|  0.00%|
File: <string>_68
File duration: 2.31266e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.31266e-05|  1.15633e-05|  0.00%|
File: <string>_148
File duration: 2.31266e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.31266e-05|  1.15633e-05|  0.00%|
File: <string>_320
File duration: 2.28882e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.28882e-05|  1.14441e-05|  0.00%|
File: <string>_155
File duration: 2.28882e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|r"""
     2|         1|  9.05991e-06|  9.05991e-06|  0.00%|
     3|         0|            0|            0|  0.00%|Nonlinear solvers
     4|         1|  1.38283e-05|  1.38283e-05|  0.00%|-----------------
     5|         0|            0|            0|  0.00%|
     6|         0|            0|            0|  0.00%|.. currentmodule:: scipy.optimize
     7|         0|            0|            0|  0.00%|
     8|         0|            0|            0|  0.00%|This is a collection of general-purpose nonlinear multidimensional
     9|         0|            0|            0|  0.00%|solvers. These solvers find *x* for which *F(x) = 0*. Both *x*
    10|         0|            0|            0|  0.00%|and *F* can be multidimensional.
    11|         0|            0|            0|  0.00%|
    12|         0|            0|            0|  0.00%|Routines
    13|         0|            0|            0|  0.00%|~~~~~~~~
    14|         0|            0|            0|  0.00%|
    15|         0|            0|            0|  0.00%|Large-scale nonlinear solvers:
    16|         0|            0|            0|  0.00%|
    17|         0|            0|            0|  0.00%|.. autosummary::
    18|         0|            0|            0|  0.00%|
    19|         0|            0|            0|  0.00%|   newton_krylov
    20|         0|            0|            0|  0.00%|   anderson
    21|         0|            0|            0|  0.00%|
    22|         0|            0|            0|  0.00%|General nonlinear solvers:
    23|         0|            0|            0|  0.00%|
    24|         0|            0|            0|  0.00%|.. autosummary::
    25|         0|            0|            0|  0.00%|
    26|         0|            0|            0|  0.00%|   broyden1
    27|         0|            0|            0|  0.00%|   broyden2
    28|         0|            0|            0|  0.00%|
    29|         0|            0|            0|  0.00%|Simple iterations:
    30|         0|            0|            0|  0.00%|
    31|         0|            0|            0|  0.00%|.. autosummary::
    32|         0|            0|            0|  0.00%|
    33|         0|            0|            0|  0.00%|   excitingmixing
    34|         0|            0|            0|  0.00%|   linearmixing
    35|         0|            0|            0|  0.00%|   diagbroyden
    36|         0|            0|            0|  0.00%|
    37|         0|            0|            0|  0.00%|
    38|         0|            0|            0|  0.00%|Examples
    39|         0|            0|            0|  0.00%|~~~~~~~~
    40|         0|            0|            0|  0.00%|
    41|         0|            0|            0|  0.00%|**Small problem**
    42|         0|            0|            0|  0.00%|
    43|         0|            0|            0|  0.00%|>>> def F(x):
    44|         0|            0|            0|  0.00%|...    return np.cos(x) + x[::-1] - [1, 2, 3, 4]
    45|         0|            0|            0|  0.00%|>>> import scipy.optimize
    46|         0|            0|            0|  0.00%|>>> x = scipy.optimize.broyden1(F, [1,1,1,1], f_tol=1e-14)
    47|         0|            0|            0|  0.00%|>>> x
    48|         0|            0|            0|  0.00%|array([ 4.04674914,  3.91158389,  2.71791677,  1.61756251])
    49|         0|            0|            0|  0.00%|>>> np.cos(x) + x[::-1]
    50|         0|            0|            0|  0.00%|array([ 1.,  2.,  3.,  4.])
    51|         0|            0|            0|  0.00%|
    52|         0|            0|            0|  0.00%|
    53|         0|            0|            0|  0.00%|**Large problem**
    54|         0|            0|            0|  0.00%|
    55|         0|            0|            0|  0.00%|Suppose that we needed to solve the following integrodifferential
    56|         0|            0|            0|  0.00%|equation on the square :math:`[0,1]\times[0,1]`:
    57|         0|            0|            0|  0.00%|
    58|         0|            0|            0|  0.00%|.. math::
    59|         0|            0|            0|  0.00%|
    60|         0|            0|            0|  0.00%|   \nabla^2 P = 10 \left(\int_0^1\int_0^1\cosh(P)\,dx\,dy\right)^2
    61|         0|            0|            0|  0.00%|
    62|         0|            0|            0|  0.00%|with :math:`P(x,1) = 1` and :math:`P=0` elsewhere on the boundary of
    63|         0|            0|            0|  0.00%|the square.
    64|         0|            0|            0|  0.00%|
    65|         0|            0|            0|  0.00%|The solution can be found using the `newton_krylov` solver:
    66|         0|            0|            0|  0.00%|
    67|         0|            0|            0|  0.00%|.. plot::
    68|         0|            0|            0|  0.00%|
    69|         0|            0|            0|  0.00%|   import numpy as np
    70|         0|            0|            0|  0.00%|   from scipy.optimize import newton_krylov
    71|         0|            0|            0|  0.00%|   from numpy import cosh, zeros_like, mgrid, zeros
    72|         0|            0|            0|  0.00%|
    73|         0|            0|            0|  0.00%|   # parameters
    74|         0|            0|            0|  0.00%|   nx, ny = 75, 75
    75|         0|            0|            0|  0.00%|   hx, hy = 1./(nx-1), 1./(ny-1)
    76|         0|            0|            0|  0.00%|
    77|         0|            0|            0|  0.00%|   P_left, P_right = 0, 0
    78|         0|            0|            0|  0.00%|   P_top, P_bottom = 1, 0
    79|         0|            0|            0|  0.00%|
    80|         0|            0|            0|  0.00%|   def residual(P):
    81|         0|            0|            0|  0.00%|       d2x = zeros_like(P)
    82|         0|            0|            0|  0.00%|       d2y = zeros_like(P)
    83|         0|            0|            0|  0.00%|
    84|         0|            0|            0|  0.00%|       d2x[1:-1] = (P[2:]   - 2*P[1:-1] + P[:-2]) / hx/hx
    85|         0|            0|            0|  0.00%|       d2x[0]    = (P[1]    - 2*P[0]    + P_left)/hx/hx
    86|         0|            0|            0|  0.00%|       d2x[-1]   = (P_right - 2*P[-1]   + P[-2])/hx/hx
    87|         0|            0|            0|  0.00%|
    88|         0|            0|            0|  0.00%|       d2y[:,1:-1] = (P[:,2:] - 2*P[:,1:-1] + P[:,:-2])/hy/hy
    89|         0|            0|            0|  0.00%|       d2y[:,0]    = (P[:,1]  - 2*P[:,0]    + P_bottom)/hy/hy
    90|         0|            0|            0|  0.00%|       d2y[:,-1]   = (P_top   - 2*P[:,-1]   + P[:,-2])/hy/hy
    91|         0|            0|            0|  0.00%|
    92|         0|            0|            0|  0.00%|       return d2x + d2y - 10*cosh(P).mean()**2
    93|         0|            0|            0|  0.00%|
    94|         0|            0|            0|  0.00%|   # solve
    95|         0|            0|            0|  0.00%|   guess = zeros((nx, ny), float)
    96|         0|            0|            0|  0.00%|   sol = newton_krylov(residual, guess, method='lgmres', verbose=1)
    97|         0|            0|            0|  0.00%|   print('Residual: %g' % abs(residual(sol)).max())
    98|         0|            0|            0|  0.00%|
    99|         0|            0|            0|  0.00%|   # visualize
   100|         0|            0|            0|  0.00%|   import matplotlib.pyplot as plt
   101|         0|            0|            0|  0.00%|   x, y = mgrid[0:1:(nx*1j), 0:1:(ny*1j)]
   102|         0|            0|            0|  0.00%|   plt.pcolormesh(x, y, sol, shading='gouraud')
   103|         0|            0|            0|  0.00%|   plt.colorbar()
   104|         0|            0|            0|  0.00%|   plt.show()
   105|         0|            0|            0|  0.00%|
   106|         0|            0|            0|  0.00%|"""
   107|         0|            0|            0|  0.00%|# Copyright (C) 2009, Pauli Virtanen <pav@iki.fi>
   108|         0|            0|            0|  0.00%|# Distributed under the same license as SciPy.
   109|         0|            0|            0|  0.00%|
   110|         0|            0|            0|  0.00%|import sys
   111|         0|            0|            0|  0.00%|import numpy as np
   112|         0|            0|            0|  0.00%|from scipy.linalg import norm, solve, inv, qr, svd, LinAlgError
   113|         0|            0|            0|  0.00%|from numpy import asarray, dot, vdot
   114|         0|            0|            0|  0.00%|import scipy.sparse.linalg
   115|         0|            0|            0|  0.00%|import scipy.sparse
   116|         0|            0|            0|  0.00%|from scipy.linalg import get_blas_funcs
   117|         0|            0|            0|  0.00%|import inspect
   118|         0|            0|            0|  0.00%|from scipy._lib._util import getfullargspec_no_self as _getfullargspec
   119|         0|            0|            0|  0.00%|from .linesearch import scalar_search_wolfe1, scalar_search_armijo
   120|         0|            0|            0|  0.00%|
   121|         0|            0|            0|  0.00%|
   122|         0|            0|            0|  0.00%|__all__ = [
   123|         0|            0|            0|  0.00%|    'broyden1', 'broyden2', 'anderson', 'linearmixing',
   124|         0|            0|            0|  0.00%|    'diagbroyden', 'excitingmixing', 'newton_krylov']
   125|         0|            0|            0|  0.00%|
   126|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   127|         0|            0|            0|  0.00%|# Utility functions
   128|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   129|         0|            0|            0|  0.00%|
   130|         0|            0|            0|  0.00%|
   131|         0|            0|            0|  0.00%|class NoConvergence(Exception):
   132|         0|            0|            0|  0.00%|    pass
   133|         0|            0|            0|  0.00%|
   134|         0|            0|            0|  0.00%|
   135|         0|            0|            0|  0.00%|def maxnorm(x):
   136|         0|            0|            0|  0.00%|    return np.absolute(x).max()
   137|         0|            0|            0|  0.00%|
   138|         0|            0|            0|  0.00%|
   139|         0|            0|            0|  0.00%|def _as_inexact(x):
   140|         0|            0|            0|  0.00%|    """Return `x` as an array, of either floats or complex floats"""
   141|         0|            0|            0|  0.00%|    x = asarray(x)
   142|         0|            0|            0|  0.00%|    if not np.issubdtype(x.dtype, np.inexact):
   143|         0|            0|            0|  0.00%|        return asarray(x, dtype=np.float_)
   144|         0|            0|            0|  0.00%|    return x
   145|         0|            0|            0|  0.00%|
   146|         0|            0|            0|  0.00%|
   147|         0|            0|            0|  0.00%|def _array_like(x, x0):
   148|         0|            0|            0|  0.00%|    """Return ndarray `x` as same array subclass and shape as `x0`"""
   149|         0|            0|            0|  0.00%|    x = np.reshape(x, np.shape(x0))
   150|         0|            0|            0|  0.00%|    wrap = getattr(x0, '__array_wrap__', x.__array_wrap__)
   151|         0|            0|            0|  0.00%|    return wrap(x)
   152|         0|            0|            0|  0.00%|
   153|         0|            0|            0|  0.00%|
   154|         0|            0|            0|  0.00%|def _safe_norm(v):
   155|         0|            0|            0|  0.00%|    if not np.isfinite(v).all():
   156|         0|            0|            0|  0.00%|        return np.array(np.inf)
   157|         0|            0|            0|  0.00%|    return norm(v)
   158|         0|            0|            0|  0.00%|
   159|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   160|         0|            0|            0|  0.00%|# Generic nonlinear solver machinery
   161|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   162|         0|            0|            0|  0.00%|
   163|         0|            0|            0|  0.00%|
   164|         0|            0|            0|  0.00%|_doc_parts = dict(
   165|         0|            0|            0|  0.00%|    params_basic="""
   166|         0|            0|            0|  0.00%|    F : function(x) -> f
   167|         0|            0|            0|  0.00%|        Function whose root to find; should take and return an array-like
   168|         0|            0|            0|  0.00%|        object.
   169|         0|            0|            0|  0.00%|    xin : array_like
   170|         0|            0|            0|  0.00%|        Initial guess for the solution
   171|         0|            0|            0|  0.00%|    """.strip(),
   172|         0|            0|            0|  0.00%|    params_extra="""
   173|         0|            0|            0|  0.00%|    iter : int, optional
   174|         0|            0|            0|  0.00%|        Number of iterations to make. If omitted (default), make as many
   175|         0|            0|            0|  0.00%|        as required to meet tolerances.
   176|         0|            0|            0|  0.00%|    verbose : bool, optional
   177|         0|            0|            0|  0.00%|        Print status to stdout on every iteration.
   178|         0|            0|            0|  0.00%|    maxiter : int, optional
   179|         0|            0|            0|  0.00%|        Maximum number of iterations to make. If more are needed to
   180|         0|            0|            0|  0.00%|        meet convergence, `NoConvergence` is raised.
   181|         0|            0|            0|  0.00%|    f_tol : float, optional
   182|         0|            0|            0|  0.00%|        Absolute tolerance (in max-norm) for the residual.
   183|         0|            0|            0|  0.00%|        If omitted, default is 6e-6.
   184|         0|            0|            0|  0.00%|    f_rtol : float, optional
   185|         0|            0|            0|  0.00%|        Relative tolerance for the residual. If omitted, not used.
   186|         0|            0|            0|  0.00%|    x_tol : float, optional
   187|         0|            0|            0|  0.00%|        Absolute minimum step size, as determined from the Jacobian
   188|         0|            0|            0|  0.00%|        approximation. If the step size is smaller than this, optimization
   189|         0|            0|            0|  0.00%|        is terminated as successful. If omitted, not used.
   190|         0|            0|            0|  0.00%|    x_rtol : float, optional
   191|         0|            0|            0|  0.00%|        Relative minimum step size. If omitted, not used.
   192|         0|            0|            0|  0.00%|    tol_norm : function(vector) -> scalar, optional
   193|         0|            0|            0|  0.00%|        Norm to use in convergence check. Default is the maximum norm.
   194|         0|            0|            0|  0.00%|    line_search : {None, 'armijo' (default), 'wolfe'}, optional
   195|         0|            0|            0|  0.00%|        Which type of a line search to use to determine the step size in the
   196|         0|            0|            0|  0.00%|        direction given by the Jacobian approximation. Defaults to 'armijo'.
   197|         0|            0|            0|  0.00%|    callback : function, optional
   198|         0|            0|            0|  0.00%|        Optional callback function. It is called on every iteration as
   199|         0|            0|            0|  0.00%|        ``callback(x, f)`` where `x` is the current solution and `f`
   200|         0|            0|            0|  0.00%|        the corresponding residual.
   201|         0|            0|            0|  0.00%|
   202|         0|            0|            0|  0.00%|    Returns
   203|         0|            0|            0|  0.00%|    -------
   204|         0|            0|            0|  0.00%|    sol : ndarray
   205|         0|            0|            0|  0.00%|        An array (of similar array type as `x0`) containing the final solution.
   206|         0|            0|            0|  0.00%|
   207|         0|            0|            0|  0.00%|    Raises
   208|         0|            0|            0|  0.00%|    ------
   209|         0|            0|            0|  0.00%|    NoConvergence
   210|         0|            0|            0|  0.00%|        When a solution was not found.
   211|         0|            0|            0|  0.00%|
   212|         0|            0|            0|  0.00%|    """.strip()
   213|         0|            0|            0|  0.00%|)
   214|         0|            0|            0|  0.00%|
   215|         0|            0|            0|  0.00%|
   216|         0|            0|            0|  0.00%|def _set_doc(obj):
   217|         0|            0|            0|  0.00%|    if obj.__doc__:
   218|         0|            0|            0|  0.00%|        obj.__doc__ = obj.__doc__ % _doc_parts
   219|         0|            0|            0|  0.00%|
   220|         0|            0|            0|  0.00%|
   221|         0|            0|            0|  0.00%|def nonlin_solve(F, x0, jacobian='krylov', iter=None, verbose=False,
   222|         0|            0|            0|  0.00%|                 maxiter=None, f_tol=None, f_rtol=None, x_tol=None, x_rtol=None,
   223|         0|            0|            0|  0.00%|                 tol_norm=None, line_search='armijo', callback=None,
   224|         0|            0|            0|  0.00%|                 full_output=False, raise_exception=True):
   225|         0|            0|            0|  0.00%|    """
   226|         0|            0|            0|  0.00%|    Find a root of a function, in a way suitable for large-scale problems.
   227|         0|            0|            0|  0.00%|
   228|         0|            0|            0|  0.00%|    Parameters
   229|         0|            0|            0|  0.00%|    ----------
   230|         0|            0|            0|  0.00%|    %(params_basic)s
   231|         0|            0|            0|  0.00%|    jacobian : Jacobian
   232|         0|            0|            0|  0.00%|        A Jacobian approximation: `Jacobian` object or something that
   233|         0|            0|            0|  0.00%|        `asjacobian` can transform to one. Alternatively, a string specifying
   234|         0|            0|            0|  0.00%|        which of the builtin Jacobian approximations to use:
   235|         0|            0|            0|  0.00%|
   236|         0|            0|            0|  0.00%|            krylov, broyden1, broyden2, anderson
   237|         0|            0|            0|  0.00%|            diagbroyden, linearmixing, excitingmixing
   238|         0|            0|            0|  0.00%|
   239|         0|            0|            0|  0.00%|    %(params_extra)s
   240|         0|            0|            0|  0.00%|    full_output : bool
   241|         0|            0|            0|  0.00%|        If true, returns a dictionary `info` containing convergence
   242|         0|            0|            0|  0.00%|        information.
   243|         0|            0|            0|  0.00%|    raise_exception : bool
   244|         0|            0|            0|  0.00%|        If True, a `NoConvergence` exception is raise if no solution is found.
   245|         0|            0|            0|  0.00%|
   246|         0|            0|            0|  0.00%|    See Also
   247|         0|            0|            0|  0.00%|    --------
   248|         0|            0|            0|  0.00%|    asjacobian, Jacobian
   249|         0|            0|            0|  0.00%|
   250|         0|            0|            0|  0.00%|    Notes
   251|         0|            0|            0|  0.00%|    -----
   252|         0|            0|            0|  0.00%|    This algorithm implements the inexact Newton method, with
   253|         0|            0|            0|  0.00%|    backtracking or full line searches. Several Jacobian
   254|         0|            0|            0|  0.00%|    approximations are available, including Krylov and Quasi-Newton
   255|         0|            0|            0|  0.00%|    methods.
   256|         0|            0|            0|  0.00%|
   257|         0|            0|            0|  0.00%|    References
   258|         0|            0|            0|  0.00%|    ----------
   259|         0|            0|            0|  0.00%|    .. [KIM] C. T. Kelley, \"Iterative Methods for Linear and Nonlinear
   260|         0|            0|            0|  0.00%|       Equations\". Society for Industrial and Applied Mathematics. (1995)
   261|         0|            0|            0|  0.00%|       https://archive.siam.org/books/kelley/fr16/
   262|         0|            0|            0|  0.00%|
   263|         0|            0|            0|  0.00%|    """
   264|         0|            0|            0|  0.00%|    # Can't use default parameters because it's being explicitly passed as None
   265|         0|            0|            0|  0.00%|    # from the calling function, so we need to set it here.
   266|         0|            0|            0|  0.00%|    tol_norm = maxnorm if tol_norm is None else tol_norm
   267|         0|            0|            0|  0.00%|    condition = TerminationCondition(f_tol=f_tol, f_rtol=f_rtol,
   268|         0|            0|            0|  0.00%|                                     x_tol=x_tol, x_rtol=x_rtol,
   269|         0|            0|            0|  0.00%|                                     iter=iter, norm=tol_norm)
   270|         0|            0|            0|  0.00%|
   271|         0|            0|            0|  0.00%|    x0 = _as_inexact(x0)
   272|         0|            0|            0|  0.00%|    func = lambda z: _as_inexact(F(_array_like(z, x0))).flatten()
   273|         0|            0|            0|  0.00%|    x = x0.flatten()
   274|         0|            0|            0|  0.00%|
   275|         0|            0|            0|  0.00%|    dx = np.inf
   276|         0|            0|            0|  0.00%|    Fx = func(x)
   277|         0|            0|            0|  0.00%|    Fx_norm = norm(Fx)
   278|         0|            0|            0|  0.00%|
   279|         0|            0|            0|  0.00%|    jacobian = asjacobian(jacobian)
   280|         0|            0|            0|  0.00%|    jacobian.setup(x.copy(), Fx, func)
   281|         0|            0|            0|  0.00%|
   282|         0|            0|            0|  0.00%|    if maxiter is None:
   283|         0|            0|            0|  0.00%|        if iter is not None:
   284|         0|            0|            0|  0.00%|            maxiter = iter + 1
   285|         0|            0|            0|  0.00%|        else:
   286|         0|            0|            0|  0.00%|            maxiter = 100*(x.size+1)
   287|         0|            0|            0|  0.00%|
   288|         0|            0|            0|  0.00%|    if line_search is True:
   289|         0|            0|            0|  0.00%|        line_search = 'armijo'
   290|         0|            0|            0|  0.00%|    elif line_search is False:
   291|         0|            0|            0|  0.00%|        line_search = None
   292|         0|            0|            0|  0.00%|
   293|         0|            0|            0|  0.00%|    if line_search not in (None, 'armijo', 'wolfe'):
   294|         0|            0|            0|  0.00%|        raise ValueError("Invalid line search")
   295|         0|            0|            0|  0.00%|
   296|         0|            0|            0|  0.00%|    # Solver tolerance selection
   297|         0|            0|            0|  0.00%|    gamma = 0.9
   298|         0|            0|            0|  0.00%|    eta_max = 0.9999
   299|         0|            0|            0|  0.00%|    eta_treshold = 0.1
   300|         0|            0|            0|  0.00%|    eta = 1e-3
   301|         0|            0|            0|  0.00%|
   302|         0|            0|            0|  0.00%|    for n in range(maxiter):
   303|         0|            0|            0|  0.00%|        status = condition.check(Fx, x, dx)
   304|         0|            0|            0|  0.00%|        if status:
   305|         0|            0|            0|  0.00%|            break
   306|         0|            0|            0|  0.00%|
   307|         0|            0|            0|  0.00%|        # The tolerance, as computed for scipy.sparse.linalg.* routines
   308|         0|            0|            0|  0.00%|        tol = min(eta, eta*Fx_norm)
   309|         0|            0|            0|  0.00%|        dx = -jacobian.solve(Fx, tol=tol)
   310|         0|            0|            0|  0.00%|
   311|         0|            0|            0|  0.00%|        if norm(dx) == 0:
   312|         0|            0|            0|  0.00%|            raise ValueError("Jacobian inversion yielded zero vector. "
   313|         0|            0|            0|  0.00%|                             "This indicates a bug in the Jacobian "
   314|         0|            0|            0|  0.00%|                             "approximation.")
   315|         0|            0|            0|  0.00%|
   316|         0|            0|            0|  0.00%|        # Line search, or Newton step
   317|         0|            0|            0|  0.00%|        if line_search:
   318|         0|            0|            0|  0.00%|            s, x, Fx, Fx_norm_new = _nonlin_line_search(func, x, Fx, dx,
   319|         0|            0|            0|  0.00%|                                                        line_search)
   320|         0|            0|            0|  0.00%|        else:
   321|         0|            0|            0|  0.00%|            s = 1.0
   322|         0|            0|            0|  0.00%|            x = x + dx
   323|         0|            0|            0|  0.00%|            Fx = func(x)
   324|         0|            0|            0|  0.00%|            Fx_norm_new = norm(Fx)
   325|         0|            0|            0|  0.00%|
   326|         0|            0|            0|  0.00%|        jacobian.update(x.copy(), Fx)
   327|         0|            0|            0|  0.00%|
   328|         0|            0|            0|  0.00%|        if callback:
   329|         0|            0|            0|  0.00%|            callback(x, Fx)
   330|         0|            0|            0|  0.00%|
   331|         0|            0|            0|  0.00%|        # Adjust forcing parameters for inexact methods
   332|         0|            0|            0|  0.00%|        eta_A = gamma * Fx_norm_new**2 / Fx_norm**2
   333|         0|            0|            0|  0.00%|        if gamma * eta**2 < eta_treshold:
   334|         0|            0|            0|  0.00%|            eta = min(eta_max, eta_A)
   335|         0|            0|            0|  0.00%|        else:
   336|         0|            0|            0|  0.00%|            eta = min(eta_max, max(eta_A, gamma*eta**2))
   337|         0|            0|            0|  0.00%|
   338|         0|            0|            0|  0.00%|        Fx_norm = Fx_norm_new
   339|         0|            0|            0|  0.00%|
   340|         0|            0|            0|  0.00%|        # Print status
   341|         0|            0|            0|  0.00%|        if verbose:
   342|         0|            0|            0|  0.00%|            sys.stdout.write("%d:  |F(x)| = %g; step %g\n" % (
   343|         0|            0|            0|  0.00%|                n, tol_norm(Fx), s))
   344|         0|            0|            0|  0.00%|            sys.stdout.flush()
   345|         0|            0|            0|  0.00%|    else:
   346|         0|            0|            0|  0.00%|        if raise_exception:
   347|         0|            0|            0|  0.00%|            raise NoConvergence(_array_like(x, x0))
   348|         0|            0|            0|  0.00%|        else:
   349|         0|            0|            0|  0.00%|            status = 2
   350|         0|            0|            0|  0.00%|
   351|         0|            0|            0|  0.00%|    if full_output:
   352|         0|            0|            0|  0.00%|        info = {'nit': condition.iteration,
   353|         0|            0|            0|  0.00%|                'fun': Fx,
   354|         0|            0|            0|  0.00%|                'status': status,
   355|         0|            0|            0|  0.00%|                'success': status == 1,
   356|         0|            0|            0|  0.00%|                'message': {1: 'A solution was found at the specified '
   357|         0|            0|            0|  0.00%|                               'tolerance.',
   358|         0|            0|            0|  0.00%|                            2: 'The maximum number of iterations allowed '
   359|         0|            0|            0|  0.00%|                               'has been reached.'
   360|         0|            0|            0|  0.00%|                            }[status]
   361|         0|            0|            0|  0.00%|                }
   362|         0|            0|            0|  0.00%|        return _array_like(x, x0), info
   363|         0|            0|            0|  0.00%|    else:
   364|         0|            0|            0|  0.00%|        return _array_like(x, x0)
   365|         0|            0|            0|  0.00%|
   366|         0|            0|            0|  0.00%|
   367|         0|            0|            0|  0.00%|_set_doc(nonlin_solve)
   368|         0|            0|            0|  0.00%|
   369|         0|            0|            0|  0.00%|
   370|         0|            0|            0|  0.00%|def _nonlin_line_search(func, x, Fx, dx, search_type='armijo', rdiff=1e-8,
   371|         0|            0|            0|  0.00%|                        smin=1e-2):
   372|         0|            0|            0|  0.00%|    tmp_s = [0]
   373|         0|            0|            0|  0.00%|    tmp_Fx = [Fx]
   374|         0|            0|            0|  0.00%|    tmp_phi = [norm(Fx)**2]
   375|         0|            0|            0|  0.00%|    s_norm = norm(x) / norm(dx)
   376|         0|            0|            0|  0.00%|
   377|         0|            0|            0|  0.00%|    def phi(s, store=True):
   378|         0|            0|            0|  0.00%|        if s == tmp_s[0]:
   379|         0|            0|            0|  0.00%|            return tmp_phi[0]
   380|         0|            0|            0|  0.00%|        xt = x + s*dx
   381|         0|            0|            0|  0.00%|        v = func(xt)
   382|         0|            0|            0|  0.00%|        p = _safe_norm(v)**2
   383|         0|            0|            0|  0.00%|        if store:
   384|         0|            0|            0|  0.00%|            tmp_s[0] = s
   385|         0|            0|            0|  0.00%|            tmp_phi[0] = p
   386|         0|            0|            0|  0.00%|            tmp_Fx[0] = v
   387|         0|            0|            0|  0.00%|        return p
   388|         0|            0|            0|  0.00%|
   389|         0|            0|            0|  0.00%|    def derphi(s):
   390|         0|            0|            0|  0.00%|        ds = (abs(s) + s_norm + 1) * rdiff
   391|         0|            0|            0|  0.00%|        return (phi(s+ds, store=False) - phi(s)) / ds
   392|         0|            0|            0|  0.00%|
   393|         0|            0|            0|  0.00%|    if search_type == 'wolfe':
   394|         0|            0|            0|  0.00%|        s, phi1, phi0 = scalar_search_wolfe1(phi, derphi, tmp_phi[0],
   395|         0|            0|            0|  0.00%|                                             xtol=1e-2, amin=smin)
   396|         0|            0|            0|  0.00%|    elif search_type == 'armijo':
   397|         0|            0|            0|  0.00%|        s, phi1 = scalar_search_armijo(phi, tmp_phi[0], -tmp_phi[0],
   398|         0|            0|            0|  0.00%|                                       amin=smin)
   399|         0|            0|            0|  0.00%|
   400|         0|            0|            0|  0.00%|    if s is None:
   401|         0|            0|            0|  0.00%|        # XXX: No suitable step length found. Take the full Newton step,
   402|         0|            0|            0|  0.00%|        #      and hope for the best.
   403|         0|            0|            0|  0.00%|        s = 1.0
   404|         0|            0|            0|  0.00%|
   405|         0|            0|            0|  0.00%|    x = x + s*dx
   406|         0|            0|            0|  0.00%|    if s == tmp_s[0]:
   407|         0|            0|            0|  0.00%|        Fx = tmp_Fx[0]
   408|         0|            0|            0|  0.00%|    else:
   409|         0|            0|            0|  0.00%|        Fx = func(x)
   410|         0|            0|            0|  0.00%|    Fx_norm = norm(Fx)
   411|         0|            0|            0|  0.00%|
   412|         0|            0|            0|  0.00%|    return s, x, Fx, Fx_norm
   413|         0|            0|            0|  0.00%|
   414|         0|            0|            0|  0.00%|
   415|         0|            0|            0|  0.00%|class TerminationCondition(object):
   416|         0|            0|            0|  0.00%|    """
   417|         0|            0|            0|  0.00%|    Termination condition for an iteration. It is terminated if
   418|         0|            0|            0|  0.00%|
   419|         0|            0|            0|  0.00%|    - |F| < f_rtol*|F_0|, AND
   420|         0|            0|            0|  0.00%|    - |F| < f_tol
   421|         0|            0|            0|  0.00%|
   422|         0|            0|            0|  0.00%|    AND
   423|         0|            0|            0|  0.00%|
   424|         0|            0|            0|  0.00%|    - |dx| < x_rtol*|x|, AND
   425|         0|            0|            0|  0.00%|    - |dx| < x_tol
   426|         0|            0|            0|  0.00%|
   427|         0|            0|            0|  0.00%|    """
   428|         0|            0|            0|  0.00%|    def __init__(self, f_tol=None, f_rtol=None, x_tol=None, x_rtol=None,
   429|         0|            0|            0|  0.00%|                 iter=None, norm=maxnorm):
   430|         0|            0|            0|  0.00%|
   431|         0|            0|            0|  0.00%|        if f_tol is None:
   432|         0|            0|            0|  0.00%|            f_tol = np.finfo(np.float_).eps ** (1./3)
   433|         0|            0|            0|  0.00%|        if f_rtol is None:
   434|         0|            0|            0|  0.00%|            f_rtol = np.inf
   435|         0|            0|            0|  0.00%|        if x_tol is None:
   436|         0|            0|            0|  0.00%|            x_tol = np.inf
   437|         0|            0|            0|  0.00%|        if x_rtol is None:
   438|         0|            0|            0|  0.00%|            x_rtol = np.inf
   439|         0|            0|            0|  0.00%|
   440|         0|            0|            0|  0.00%|        self.x_tol = x_tol
   441|         0|            0|            0|  0.00%|        self.x_rtol = x_rtol
   442|         0|            0|            0|  0.00%|        self.f_tol = f_tol
   443|         0|            0|            0|  0.00%|        self.f_rtol = f_rtol
   444|         0|            0|            0|  0.00%|
   445|         0|            0|            0|  0.00%|        self.norm = norm
   446|         0|            0|            0|  0.00%|
   447|         0|            0|            0|  0.00%|        self.iter = iter
   448|         0|            0|            0|  0.00%|
   449|         0|            0|            0|  0.00%|        self.f0_norm = None
   450|         0|            0|            0|  0.00%|        self.iteration = 0
   451|         0|            0|            0|  0.00%|
   452|         0|            0|            0|  0.00%|    def check(self, f, x, dx):
   453|         0|            0|            0|  0.00%|        self.iteration += 1
   454|         0|            0|            0|  0.00%|        f_norm = self.norm(f)
   455|         0|            0|            0|  0.00%|        x_norm = self.norm(x)
   456|         0|            0|            0|  0.00%|        dx_norm = self.norm(dx)
   457|         0|            0|            0|  0.00%|
   458|         0|            0|            0|  0.00%|        if self.f0_norm is None:
   459|         0|            0|            0|  0.00%|            self.f0_norm = f_norm
   460|         0|            0|            0|  0.00%|
   461|         0|            0|            0|  0.00%|        if f_norm == 0:
   462|         0|            0|            0|  0.00%|            return 1
   463|         0|            0|            0|  0.00%|
   464|         0|            0|            0|  0.00%|        if self.iter is not None:
   465|         0|            0|            0|  0.00%|            # backwards compatibility with SciPy 0.6.0
   466|         0|            0|            0|  0.00%|            return 2 * (self.iteration > self.iter)
   467|         0|            0|            0|  0.00%|
   468|         0|            0|            0|  0.00%|        # NB: condition must succeed for rtol=inf even if norm == 0
   469|         0|            0|            0|  0.00%|        return int((f_norm <= self.f_tol
   470|         0|            0|            0|  0.00%|                    and f_norm/self.f_rtol <= self.f0_norm)
   471|         0|            0|            0|  0.00%|                   and (dx_norm <= self.x_tol
   472|         0|            0|            0|  0.00%|                        and dx_norm/self.x_rtol <= x_norm))
   473|         0|            0|            0|  0.00%|
   474|         0|            0|            0|  0.00%|
   475|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   476|         0|            0|            0|  0.00%|# Generic Jacobian approximation
   477|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   478|         0|            0|            0|  0.00%|
   479|         0|            0|            0|  0.00%|class Jacobian(object):
   480|         0|            0|            0|  0.00%|    """
   481|         0|            0|            0|  0.00%|    Common interface for Jacobians or Jacobian approximations.
   482|         0|            0|            0|  0.00%|
   483|         0|            0|            0|  0.00%|    The optional methods come useful when implementing trust region
   484|         0|            0|            0|  0.00%|    etc., algorithms that often require evaluating transposes of the
   485|         0|            0|            0|  0.00%|    Jacobian.
   486|         0|            0|            0|  0.00%|
   487|         0|            0|            0|  0.00%|    Methods
   488|         0|            0|            0|  0.00%|    -------
   489|         0|            0|            0|  0.00%|    solve
   490|         0|            0|            0|  0.00%|        Returns J^-1 * v
   491|         0|            0|            0|  0.00%|    update
   492|         0|            0|            0|  0.00%|        Updates Jacobian to point `x` (where the function has residual `Fx`)
   493|         0|            0|            0|  0.00%|
   494|         0|            0|            0|  0.00%|    matvec : optional
   495|         0|            0|            0|  0.00%|        Returns J * v
   496|         0|            0|            0|  0.00%|    rmatvec : optional
   497|         0|            0|            0|  0.00%|        Returns A^H * v
   498|         0|            0|            0|  0.00%|    rsolve : optional
   499|         0|            0|            0|  0.00%|        Returns A^-H * v
   500|         0|            0|            0|  0.00%|    matmat : optional
   501|         0|            0|            0|  0.00%|        Returns A * V, where V is a dense matrix with dimensions (N,K).
   502|         0|            0|            0|  0.00%|    todense : optional
   503|         0|            0|            0|  0.00%|        Form the dense Jacobian matrix. Necessary for dense trust region
   504|         0|            0|            0|  0.00%|        algorithms, and useful for testing.
   505|         0|            0|            0|  0.00%|
   506|         0|            0|            0|  0.00%|    Attributes
   507|         0|            0|            0|  0.00%|    ----------
   508|         0|            0|            0|  0.00%|    shape
   509|         0|            0|            0|  0.00%|        Matrix dimensions (M, N)
   510|         0|            0|            0|  0.00%|    dtype
   511|         0|            0|            0|  0.00%|        Data type of the matrix.
   512|         0|            0|            0|  0.00%|    func : callable, optional
   513|         0|            0|            0|  0.00%|        Function the Jacobian corresponds to
   514|         0|            0|            0|  0.00%|
   515|         0|            0|            0|  0.00%|    """
   516|         0|            0|            0|  0.00%|
   517|         0|            0|            0|  0.00%|    def __init__(self, **kw):
   518|         0|            0|            0|  0.00%|        names = ["solve", "update", "matvec", "rmatvec", "rsolve",
   519|         0|            0|            0|  0.00%|                 "matmat", "todense", "shape", "dtype"]
   520|         0|            0|            0|  0.00%|        for name, value in kw.items():
   521|         0|            0|            0|  0.00%|            if name not in names:
   522|         0|            0|            0|  0.00%|                raise ValueError("Unknown keyword argument %s" % name)
   523|         0|            0|            0|  0.00%|            if value is not None:
   524|         0|            0|            0|  0.00%|                setattr(self, name, kw[name])
   525|         0|            0|            0|  0.00%|
   526|         0|            0|            0|  0.00%|        if hasattr(self, 'todense'):
   527|         0|            0|            0|  0.00%|            self.__array__ = lambda: self.todense()
   528|         0|            0|            0|  0.00%|
   529|         0|            0|            0|  0.00%|    def aspreconditioner(self):
   530|         0|            0|            0|  0.00%|        return InverseJacobian(self)
   531|         0|            0|            0|  0.00%|
   532|         0|            0|            0|  0.00%|    def solve(self, v, tol=0):
   533|         0|            0|            0|  0.00%|        raise NotImplementedError
   534|         0|            0|            0|  0.00%|
   535|         0|            0|            0|  0.00%|    def update(self, x, F):
   536|         0|            0|            0|  0.00%|        pass
   537|         0|            0|            0|  0.00%|
   538|         0|            0|            0|  0.00%|    def setup(self, x, F, func):
   539|         0|            0|            0|  0.00%|        self.func = func
   540|         0|            0|            0|  0.00%|        self.shape = (F.size, x.size)
   541|         0|            0|            0|  0.00%|        self.dtype = F.dtype
   542|         0|            0|            0|  0.00%|        if self.__class__.setup is Jacobian.setup:
   543|         0|            0|            0|  0.00%|            # Call on the first point unless overridden
   544|         0|            0|            0|  0.00%|            self.update(x, F)
   545|         0|            0|            0|  0.00%|
   546|         0|            0|            0|  0.00%|
   547|         0|            0|            0|  0.00%|class InverseJacobian(object):
   548|         0|            0|            0|  0.00%|    def __init__(self, jacobian):
   549|         0|            0|            0|  0.00%|        self.jacobian = jacobian
   550|         0|            0|            0|  0.00%|        self.matvec = jacobian.solve
   551|         0|            0|            0|  0.00%|        self.update = jacobian.update
   552|         0|            0|            0|  0.00%|        if hasattr(jacobian, 'setup'):
   553|         0|            0|            0|  0.00%|            self.setup = jacobian.setup
   554|         0|            0|            0|  0.00%|        if hasattr(jacobian, 'rsolve'):
   555|         0|            0|            0|  0.00%|            self.rmatvec = jacobian.rsolve
   556|         0|            0|            0|  0.00%|
   557|         0|            0|            0|  0.00%|    @property
   558|         0|            0|            0|  0.00%|    def shape(self):
   559|         0|            0|            0|  0.00%|        return self.jacobian.shape
   560|         0|            0|            0|  0.00%|
   561|         0|            0|            0|  0.00%|    @property
   562|         0|            0|            0|  0.00%|    def dtype(self):
   563|         0|            0|            0|  0.00%|        return self.jacobian.dtype
   564|         0|            0|            0|  0.00%|
   565|         0|            0|            0|  0.00%|
   566|         0|            0|            0|  0.00%|def asjacobian(J):
   567|         0|            0|            0|  0.00%|    """
   568|         0|            0|            0|  0.00%|    Convert given object to one suitable for use as a Jacobian.
   569|         0|            0|            0|  0.00%|    """
   570|         0|            0|            0|  0.00%|    spsolve = scipy.sparse.linalg.spsolve
   571|         0|            0|            0|  0.00%|    if isinstance(J, Jacobian):
   572|         0|            0|            0|  0.00%|        return J
   573|         0|            0|            0|  0.00%|    elif inspect.isclass(J) and issubclass(J, Jacobian):
   574|         0|            0|            0|  0.00%|        return J()
   575|         0|            0|            0|  0.00%|    elif isinstance(J, np.ndarray):
   576|         0|            0|            0|  0.00%|        if J.ndim > 2:
   577|         0|            0|            0|  0.00%|            raise ValueError('array must have rank <= 2')
   578|         0|            0|            0|  0.00%|        J = np.atleast_2d(np.asarray(J))
   579|         0|            0|            0|  0.00%|        if J.shape[0] != J.shape[1]:
   580|         0|            0|            0|  0.00%|            raise ValueError('array must be square')
   581|         0|            0|            0|  0.00%|
   582|         0|            0|            0|  0.00%|        return Jacobian(matvec=lambda v: dot(J, v),
   583|         0|            0|            0|  0.00%|                        rmatvec=lambda v: dot(J.conj().T, v),
   584|         0|            0|            0|  0.00%|                        solve=lambda v: solve(J, v),
   585|         0|            0|            0|  0.00%|                        rsolve=lambda v: solve(J.conj().T, v),
   586|         0|            0|            0|  0.00%|                        dtype=J.dtype, shape=J.shape)
   587|         0|            0|            0|  0.00%|    elif scipy.sparse.isspmatrix(J):
   588|         0|            0|            0|  0.00%|        if J.shape[0] != J.shape[1]:
   589|         0|            0|            0|  0.00%|            raise ValueError('matrix must be square')
   590|         0|            0|            0|  0.00%|        return Jacobian(matvec=lambda v: J*v,
   591|         0|            0|            0|  0.00%|                        rmatvec=lambda v: J.conj().T * v,
   592|         0|            0|            0|  0.00%|                        solve=lambda v: spsolve(J, v),
   593|         0|            0|            0|  0.00%|                        rsolve=lambda v: spsolve(J.conj().T, v),
   594|         0|            0|            0|  0.00%|                        dtype=J.dtype, shape=J.shape)
   595|         0|            0|            0|  0.00%|    elif hasattr(J, 'shape') and hasattr(J, 'dtype') and hasattr(J, 'solve'):
   596|         0|            0|            0|  0.00%|        return Jacobian(matvec=getattr(J, 'matvec'),
   597|         0|            0|            0|  0.00%|                        rmatvec=getattr(J, 'rmatvec'),
   598|         0|            0|            0|  0.00%|                        solve=J.solve,
   599|         0|            0|            0|  0.00%|                        rsolve=getattr(J, 'rsolve'),
   600|         0|            0|            0|  0.00%|                        update=getattr(J, 'update'),
   601|         0|            0|            0|  0.00%|                        setup=getattr(J, 'setup'),
   602|         0|            0|            0|  0.00%|                        dtype=J.dtype,
   603|         0|            0|            0|  0.00%|                        shape=J.shape)
   604|         0|            0|            0|  0.00%|    elif callable(J):
   605|         0|            0|            0|  0.00%|        # Assume it's a function J(x) that returns the Jacobian
   606|         0|            0|            0|  0.00%|        class Jac(Jacobian):
   607|         0|            0|            0|  0.00%|            def update(self, x, F):
   608|         0|            0|            0|  0.00%|                self.x = x
   609|         0|            0|            0|  0.00%|
   610|         0|            0|            0|  0.00%|            def solve(self, v, tol=0):
   611|         0|            0|            0|  0.00%|                m = J(self.x)
   612|         0|            0|            0|  0.00%|                if isinstance(m, np.ndarray):
   613|         0|            0|            0|  0.00%|                    return solve(m, v)
   614|         0|            0|            0|  0.00%|                elif scipy.sparse.isspmatrix(m):
   615|         0|            0|            0|  0.00%|                    return spsolve(m, v)
   616|         0|            0|            0|  0.00%|                else:
   617|         0|            0|            0|  0.00%|                    raise ValueError("Unknown matrix type")
   618|         0|            0|            0|  0.00%|
   619|         0|            0|            0|  0.00%|            def matvec(self, v):
   620|         0|            0|            0|  0.00%|                m = J(self.x)
   621|         0|            0|            0|  0.00%|                if isinstance(m, np.ndarray):
   622|         0|            0|            0|  0.00%|                    return dot(m, v)
   623|         0|            0|            0|  0.00%|                elif scipy.sparse.isspmatrix(m):
   624|         0|            0|            0|  0.00%|                    return m*v
   625|         0|            0|            0|  0.00%|                else:
   626|         0|            0|            0|  0.00%|                    raise ValueError("Unknown matrix type")
   627|         0|            0|            0|  0.00%|
   628|         0|            0|            0|  0.00%|            def rsolve(self, v, tol=0):
   629|         0|            0|            0|  0.00%|                m = J(self.x)
   630|         0|            0|            0|  0.00%|                if isinstance(m, np.ndarray):
   631|         0|            0|            0|  0.00%|                    return solve(m.conj().T, v)
   632|         0|            0|            0|  0.00%|                elif scipy.sparse.isspmatrix(m):
   633|         0|            0|            0|  0.00%|                    return spsolve(m.conj().T, v)
   634|         0|            0|            0|  0.00%|                else:
   635|         0|            0|            0|  0.00%|                    raise ValueError("Unknown matrix type")
   636|         0|            0|            0|  0.00%|
   637|         0|            0|            0|  0.00%|            def rmatvec(self, v):
   638|         0|            0|            0|  0.00%|                m = J(self.x)
   639|         0|            0|            0|  0.00%|                if isinstance(m, np.ndarray):
   640|         0|            0|            0|  0.00%|                    return dot(m.conj().T, v)
   641|         0|            0|            0|  0.00%|                elif scipy.sparse.isspmatrix(m):
   642|         0|            0|            0|  0.00%|                    return m.conj().T * v
   643|         0|            0|            0|  0.00%|                else:
   644|         0|            0|            0|  0.00%|                    raise ValueError("Unknown matrix type")
   645|         0|            0|            0|  0.00%|        return Jac()
   646|         0|            0|            0|  0.00%|    elif isinstance(J, str):
   647|         0|            0|            0|  0.00%|        return dict(broyden1=BroydenFirst,
   648|         0|            0|            0|  0.00%|                    broyden2=BroydenSecond,
   649|         0|            0|            0|  0.00%|                    anderson=Anderson,
   650|         0|            0|            0|  0.00%|                    diagbroyden=DiagBroyden,
   651|         0|            0|            0|  0.00%|                    linearmixing=LinearMixing,
   652|         0|            0|            0|  0.00%|                    excitingmixing=ExcitingMixing,
   653|         0|            0|            0|  0.00%|                    krylov=KrylovJacobian)[J]()
   654|         0|            0|            0|  0.00%|    else:
   655|         0|            0|            0|  0.00%|        raise TypeError('Cannot convert object to a Jacobian')
   656|         0|            0|            0|  0.00%|
   657|         0|            0|            0|  0.00%|
   658|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   659|         0|            0|            0|  0.00%|# Broyden
   660|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   661|         0|            0|            0|  0.00%|
   662|         0|            0|            0|  0.00%|class GenericBroyden(Jacobian):
   663|         0|            0|            0|  0.00%|    def setup(self, x0, f0, func):
   664|         0|            0|            0|  0.00%|        Jacobian.setup(self, x0, f0, func)
   665|         0|            0|            0|  0.00%|        self.last_f = f0
   666|         0|            0|            0|  0.00%|        self.last_x = x0
   667|         0|            0|            0|  0.00%|
   668|         0|            0|            0|  0.00%|        if hasattr(self, 'alpha') and self.alpha is None:
   669|         0|            0|            0|  0.00%|            # Autoscale the initial Jacobian parameter
   670|         0|            0|            0|  0.00%|            # unless we have already guessed the solution.
   671|         0|            0|            0|  0.00%|            normf0 = norm(f0)
   672|         0|            0|            0|  0.00%|            if normf0:
   673|         0|            0|            0|  0.00%|                self.alpha = 0.5*max(norm(x0), 1) / normf0
   674|         0|            0|            0|  0.00%|            else:
   675|         0|            0|            0|  0.00%|                self.alpha = 1.0
   676|         0|            0|            0|  0.00%|
   677|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
   678|         0|            0|            0|  0.00%|        raise NotImplementedError
   679|         0|            0|            0|  0.00%|
   680|         0|            0|            0|  0.00%|    def update(self, x, f):
   681|         0|            0|            0|  0.00%|        df = f - self.last_f
   682|         0|            0|            0|  0.00%|        dx = x - self.last_x
   683|         0|            0|            0|  0.00%|        self._update(x, f, dx, df, norm(dx), norm(df))
   684|         0|            0|            0|  0.00%|        self.last_f = f
   685|         0|            0|            0|  0.00%|        self.last_x = x
   686|         0|            0|            0|  0.00%|
   687|         0|            0|            0|  0.00%|
   688|         0|            0|            0|  0.00%|class LowRankMatrix(object):
   689|         0|            0|            0|  0.00%|    r"""
   690|         0|            0|            0|  0.00%|    A matrix represented as
   691|         0|            0|            0|  0.00%|
   692|         0|            0|            0|  0.00%|    .. math:: \alpha I + \sum_{n=0}^{n=M} c_n d_n^\dagger
   693|         0|            0|            0|  0.00%|
   694|         0|            0|            0|  0.00%|    However, if the rank of the matrix reaches the dimension of the vectors,
   695|         0|            0|            0|  0.00%|    full matrix representation will be used thereon.
   696|         0|            0|            0|  0.00%|
   697|         0|            0|            0|  0.00%|    """
   698|         0|            0|            0|  0.00%|
   699|         0|            0|            0|  0.00%|    def __init__(self, alpha, n, dtype):
   700|         0|            0|            0|  0.00%|        self.alpha = alpha
   701|         0|            0|            0|  0.00%|        self.cs = []
   702|         0|            0|            0|  0.00%|        self.ds = []
   703|         0|            0|            0|  0.00%|        self.n = n
   704|         0|            0|            0|  0.00%|        self.dtype = dtype
   705|         0|            0|            0|  0.00%|        self.collapsed = None
   706|         0|            0|            0|  0.00%|
   707|         0|            0|            0|  0.00%|    @staticmethod
   708|         0|            0|            0|  0.00%|    def _matvec(v, alpha, cs, ds):
   709|         0|            0|            0|  0.00%|        axpy, scal, dotc = get_blas_funcs(['axpy', 'scal', 'dotc'],
   710|         0|            0|            0|  0.00%|                                          cs[:1] + [v])
   711|         0|            0|            0|  0.00%|        w = alpha * v
   712|         0|            0|            0|  0.00%|        for c, d in zip(cs, ds):
   713|         0|            0|            0|  0.00%|            a = dotc(d, v)
   714|         0|            0|            0|  0.00%|            w = axpy(c, w, w.size, a)
   715|         0|            0|            0|  0.00%|        return w
   716|         0|            0|            0|  0.00%|
   717|         0|            0|            0|  0.00%|    @staticmethod
   718|         0|            0|            0|  0.00%|    def _solve(v, alpha, cs, ds):
   719|         0|            0|            0|  0.00%|        """Evaluate w = M^-1 v"""
   720|         0|            0|            0|  0.00%|        if len(cs) == 0:
   721|         0|            0|            0|  0.00%|            return v/alpha
   722|         0|            0|            0|  0.00%|
   723|         0|            0|            0|  0.00%|        # (B + C D^H)^-1 = B^-1 - B^-1 C (I + D^H B^-1 C)^-1 D^H B^-1
   724|         0|            0|            0|  0.00%|
   725|         0|            0|            0|  0.00%|        axpy, dotc = get_blas_funcs(['axpy', 'dotc'], cs[:1] + [v])
   726|         0|            0|            0|  0.00%|
   727|         0|            0|            0|  0.00%|        c0 = cs[0]
   728|         0|            0|            0|  0.00%|        A = alpha * np.identity(len(cs), dtype=c0.dtype)
   729|         0|            0|            0|  0.00%|        for i, d in enumerate(ds):
   730|         0|            0|            0|  0.00%|            for j, c in enumerate(cs):
   731|         0|            0|            0|  0.00%|                A[i,j] += dotc(d, c)
   732|         0|            0|            0|  0.00%|
   733|         0|            0|            0|  0.00%|        q = np.zeros(len(cs), dtype=c0.dtype)
   734|         0|            0|            0|  0.00%|        for j, d in enumerate(ds):
   735|         0|            0|            0|  0.00%|            q[j] = dotc(d, v)
   736|         0|            0|            0|  0.00%|        q /= alpha
   737|         0|            0|            0|  0.00%|        q = solve(A, q)
   738|         0|            0|            0|  0.00%|
   739|         0|            0|            0|  0.00%|        w = v/alpha
   740|         0|            0|            0|  0.00%|        for c, qc in zip(cs, q):
   741|         0|            0|            0|  0.00%|            w = axpy(c, w, w.size, -qc)
   742|         0|            0|            0|  0.00%|
   743|         0|            0|            0|  0.00%|        return w
   744|         0|            0|            0|  0.00%|
   745|         0|            0|            0|  0.00%|    def matvec(self, v):
   746|         0|            0|            0|  0.00%|        """Evaluate w = M v"""
   747|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   748|         0|            0|            0|  0.00%|            return np.dot(self.collapsed, v)
   749|         0|            0|            0|  0.00%|        return LowRankMatrix._matvec(v, self.alpha, self.cs, self.ds)
   750|         0|            0|            0|  0.00%|
   751|         0|            0|            0|  0.00%|    def rmatvec(self, v):
   752|         0|            0|            0|  0.00%|        """Evaluate w = M^H v"""
   753|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   754|         0|            0|            0|  0.00%|            return np.dot(self.collapsed.T.conj(), v)
   755|         0|            0|            0|  0.00%|        return LowRankMatrix._matvec(v, np.conj(self.alpha), self.ds, self.cs)
   756|         0|            0|            0|  0.00%|
   757|         0|            0|            0|  0.00%|    def solve(self, v, tol=0):
   758|         0|            0|            0|  0.00%|        """Evaluate w = M^-1 v"""
   759|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   760|         0|            0|            0|  0.00%|            return solve(self.collapsed, v)
   761|         0|            0|            0|  0.00%|        return LowRankMatrix._solve(v, self.alpha, self.cs, self.ds)
   762|         0|            0|            0|  0.00%|
   763|         0|            0|            0|  0.00%|    def rsolve(self, v, tol=0):
   764|         0|            0|            0|  0.00%|        """Evaluate w = M^-H v"""
   765|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   766|         0|            0|            0|  0.00%|            return solve(self.collapsed.T.conj(), v)
   767|         0|            0|            0|  0.00%|        return LowRankMatrix._solve(v, np.conj(self.alpha), self.ds, self.cs)
   768|         0|            0|            0|  0.00%|
   769|         0|            0|            0|  0.00%|    def append(self, c, d):
   770|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   771|         0|            0|            0|  0.00%|            self.collapsed += c[:,None] * d[None,:].conj()
   772|         0|            0|            0|  0.00%|            return
   773|         0|            0|            0|  0.00%|
   774|         0|            0|            0|  0.00%|        self.cs.append(c)
   775|         0|            0|            0|  0.00%|        self.ds.append(d)
   776|         0|            0|            0|  0.00%|
   777|         0|            0|            0|  0.00%|        if len(self.cs) > c.size:
   778|         0|            0|            0|  0.00%|            self.collapse()
   779|         0|            0|            0|  0.00%|
   780|         0|            0|            0|  0.00%|    def __array__(self):
   781|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   782|         0|            0|            0|  0.00%|            return self.collapsed
   783|         0|            0|            0|  0.00%|
   784|         0|            0|            0|  0.00%|        Gm = self.alpha*np.identity(self.n, dtype=self.dtype)
   785|         0|            0|            0|  0.00%|        for c, d in zip(self.cs, self.ds):
   786|         0|            0|            0|  0.00%|            Gm += c[:,None]*d[None,:].conj()
   787|         0|            0|            0|  0.00%|        return Gm
   788|         0|            0|            0|  0.00%|
   789|         0|            0|            0|  0.00%|    def collapse(self):
   790|         0|            0|            0|  0.00%|        """Collapse the low-rank matrix to a full-rank one."""
   791|         0|            0|            0|  0.00%|        self.collapsed = np.array(self)
   792|         0|            0|            0|  0.00%|        self.cs = None
   793|         0|            0|            0|  0.00%|        self.ds = None
   794|         0|            0|            0|  0.00%|        self.alpha = None
   795|         0|            0|            0|  0.00%|
   796|         0|            0|            0|  0.00%|    def restart_reduce(self, rank):
   797|         0|            0|            0|  0.00%|        """
   798|         0|            0|            0|  0.00%|        Reduce the rank of the matrix by dropping all vectors.
   799|         0|            0|            0|  0.00%|        """
   800|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   801|         0|            0|            0|  0.00%|            return
   802|         0|            0|            0|  0.00%|        assert rank > 0
   803|         0|            0|            0|  0.00%|        if len(self.cs) > rank:
   804|         0|            0|            0|  0.00%|            del self.cs[:]
   805|         0|            0|            0|  0.00%|            del self.ds[:]
   806|         0|            0|            0|  0.00%|
   807|         0|            0|            0|  0.00%|    def simple_reduce(self, rank):
   808|         0|            0|            0|  0.00%|        """
   809|         0|            0|            0|  0.00%|        Reduce the rank of the matrix by dropping oldest vectors.
   810|         0|            0|            0|  0.00%|        """
   811|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   812|         0|            0|            0|  0.00%|            return
   813|         0|            0|            0|  0.00%|        assert rank > 0
   814|         0|            0|            0|  0.00%|        while len(self.cs) > rank:
   815|         0|            0|            0|  0.00%|            del self.cs[0]
   816|         0|            0|            0|  0.00%|            del self.ds[0]
   817|         0|            0|            0|  0.00%|
   818|         0|            0|            0|  0.00%|    def svd_reduce(self, max_rank, to_retain=None):
   819|         0|            0|            0|  0.00%|        """
   820|         0|            0|            0|  0.00%|        Reduce the rank of the matrix by retaining some SVD components.
   821|         0|            0|            0|  0.00%|
   822|         0|            0|            0|  0.00%|        This corresponds to the \"Broyden Rank Reduction Inverse\"
   823|         0|            0|            0|  0.00%|        algorithm described in [1]_.
   824|         0|            0|            0|  0.00%|
   825|         0|            0|            0|  0.00%|        Note that the SVD decomposition can be done by solving only a
   826|         0|            0|            0|  0.00%|        problem whose size is the effective rank of this matrix, which
   827|         0|            0|            0|  0.00%|        is viable even for large problems.
   828|         0|            0|            0|  0.00%|
   829|         0|            0|            0|  0.00%|        Parameters
   830|         0|            0|            0|  0.00%|        ----------
   831|         0|            0|            0|  0.00%|        max_rank : int
   832|         0|            0|            0|  0.00%|            Maximum rank of this matrix after reduction.
   833|         0|            0|            0|  0.00%|        to_retain : int, optional
   834|         0|            0|            0|  0.00%|            Number of SVD components to retain when reduction is done
   835|         0|            0|            0|  0.00%|            (ie. rank > max_rank). Default is ``max_rank - 2``.
   836|         0|            0|            0|  0.00%|
   837|         0|            0|            0|  0.00%|        References
   838|         0|            0|            0|  0.00%|        ----------
   839|         0|            0|            0|  0.00%|        .. [1] B.A. van der Rotten, PhD thesis,
   840|         0|            0|            0|  0.00%|           \"A limited memory Broyden method to solve high-dimensional
   841|         0|            0|            0|  0.00%|           systems of nonlinear equations\". Mathematisch Instituut,
   842|         0|            0|            0|  0.00%|           Universiteit Leiden, The Netherlands (2003).
   843|         0|            0|            0|  0.00%|
   844|         0|            0|            0|  0.00%|           https://web.archive.org/web/20161022015821/http://www.math.leidenuniv.nl/scripties/Rotten.pdf
   845|         0|            0|            0|  0.00%|
   846|         0|            0|            0|  0.00%|        """
   847|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   848|         0|            0|            0|  0.00%|            return
   849|         0|            0|            0|  0.00%|
   850|         0|            0|            0|  0.00%|        p = max_rank
   851|         0|            0|            0|  0.00%|        if to_retain is not None:
   852|         0|            0|            0|  0.00%|            q = to_retain
   853|         0|            0|            0|  0.00%|        else:
   854|         0|            0|            0|  0.00%|            q = p - 2
   855|         0|            0|            0|  0.00%|
   856|         0|            0|            0|  0.00%|        if self.cs:
   857|         0|            0|            0|  0.00%|            p = min(p, len(self.cs[0]))
   858|         0|            0|            0|  0.00%|        q = max(0, min(q, p-1))
   859|         0|            0|            0|  0.00%|
   860|         0|            0|            0|  0.00%|        m = len(self.cs)
   861|         0|            0|            0|  0.00%|        if m < p:
   862|         0|            0|            0|  0.00%|            # nothing to do
   863|         0|            0|            0|  0.00%|            return
   864|         0|            0|            0|  0.00%|
   865|         0|            0|            0|  0.00%|        C = np.array(self.cs).T
   866|         0|            0|            0|  0.00%|        D = np.array(self.ds).T
   867|         0|            0|            0|  0.00%|
   868|         0|            0|            0|  0.00%|        D, R = qr(D, mode='economic')
   869|         0|            0|            0|  0.00%|        C = dot(C, R.T.conj())
   870|         0|            0|            0|  0.00%|
   871|         0|            0|            0|  0.00%|        U, S, WH = svd(C, full_matrices=False, compute_uv=True)
   872|         0|            0|            0|  0.00%|
   873|         0|            0|            0|  0.00%|        C = dot(C, inv(WH))
   874|         0|            0|            0|  0.00%|        D = dot(D, WH.T.conj())
   875|         0|            0|            0|  0.00%|
   876|         0|            0|            0|  0.00%|        for k in range(q):
   877|         0|            0|            0|  0.00%|            self.cs[k] = C[:,k].copy()
   878|         0|            0|            0|  0.00%|            self.ds[k] = D[:,k].copy()
   879|         0|            0|            0|  0.00%|
   880|         0|            0|            0|  0.00%|        del self.cs[q:]
   881|         0|            0|            0|  0.00%|        del self.ds[q:]
   882|         0|            0|            0|  0.00%|
   883|         0|            0|            0|  0.00%|
   884|         0|            0|            0|  0.00%|_doc_parts['broyden_params'] = """
   885|         0|            0|            0|  0.00%|    alpha : float, optional
   886|         0|            0|            0|  0.00%|        Initial guess for the Jacobian is ``(-1/alpha)``.
   887|         0|            0|            0|  0.00%|    reduction_method : str or tuple, optional
   888|         0|            0|            0|  0.00%|        Method used in ensuring that the rank of the Broyden matrix
   889|         0|            0|            0|  0.00%|        stays low. Can either be a string giving the name of the method,
   890|         0|            0|            0|  0.00%|        or a tuple of the form ``(method, param1, param2, ...)``
   891|         0|            0|            0|  0.00%|        that gives the name of the method and values for additional parameters.
   892|         0|            0|            0|  0.00%|
   893|         0|            0|            0|  0.00%|        Methods available:
   894|         0|            0|            0|  0.00%|
   895|         0|            0|            0|  0.00%|            - ``restart``: drop all matrix columns. Has no extra parameters.
   896|         0|            0|            0|  0.00%|            - ``simple``: drop oldest matrix column. Has no extra parameters.
   897|         0|            0|            0|  0.00%|            - ``svd``: keep only the most significant SVD components.
   898|         0|            0|            0|  0.00%|              Takes an extra parameter, ``to_retain``, which determines the
   899|         0|            0|            0|  0.00%|              number of SVD components to retain when rank reduction is done.
   900|         0|            0|            0|  0.00%|              Default is ``max_rank - 2``.
   901|         0|            0|            0|  0.00%|
   902|         0|            0|            0|  0.00%|    max_rank : int, optional
   903|         0|            0|            0|  0.00%|        Maximum rank for the Broyden matrix.
   904|         0|            0|            0|  0.00%|        Default is infinity (i.e., no rank reduction).
   905|         0|            0|            0|  0.00%|    """.strip()
   906|         0|            0|            0|  0.00%|
   907|         0|            0|            0|  0.00%|
   908|         0|            0|            0|  0.00%|class BroydenFirst(GenericBroyden):
   909|         0|            0|            0|  0.00%|    r"""
   910|         0|            0|            0|  0.00%|    Find a root of a function, using Broyden's first Jacobian approximation.
   911|         0|            0|            0|  0.00%|
   912|         0|            0|            0|  0.00%|    This method is also known as \"Broyden's good method\".
   913|         0|            0|            0|  0.00%|
   914|         0|            0|            0|  0.00%|    Parameters
   915|         0|            0|            0|  0.00%|    ----------
   916|         0|            0|            0|  0.00%|    %(params_basic)s
   917|         0|            0|            0|  0.00%|    %(broyden_params)s
   918|         0|            0|            0|  0.00%|    %(params_extra)s
   919|         0|            0|            0|  0.00%|
   920|         0|            0|            0|  0.00%|    See Also
   921|         0|            0|            0|  0.00%|    --------
   922|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
   923|         0|            0|            0|  0.00%|           functions. See ``method=='broyden1'`` in particular.
   924|         0|            0|            0|  0.00%|
   925|         0|            0|            0|  0.00%|    Notes
   926|         0|            0|            0|  0.00%|    -----
   927|         0|            0|            0|  0.00%|    This algorithm implements the inverse Jacobian Quasi-Newton update
   928|         0|            0|            0|  0.00%|
   929|         0|            0|            0|  0.00%|    .. math:: H_+ = H + (dx - H df) dx^\dagger H / ( dx^\dagger H df)
   930|         0|            0|            0|  0.00%|
   931|         0|            0|            0|  0.00%|    which corresponds to Broyden's first Jacobian update
   932|         0|            0|            0|  0.00%|
   933|         0|            0|            0|  0.00%|    .. math:: J_+ = J + (df - J dx) dx^\dagger / dx^\dagger dx
   934|         0|            0|            0|  0.00%|
   935|         0|            0|            0|  0.00%|
   936|         0|            0|            0|  0.00%|    References
   937|         0|            0|            0|  0.00%|    ----------
   938|         0|            0|            0|  0.00%|    .. [1] B.A. van der Rotten, PhD thesis,
   939|         0|            0|            0|  0.00%|       \"A limited memory Broyden method to solve high-dimensional
   940|         0|            0|            0|  0.00%|       systems of nonlinear equations\". Mathematisch Instituut,
   941|         0|            0|            0|  0.00%|       Universiteit Leiden, The Netherlands (2003).
   942|         0|            0|            0|  0.00%|
   943|         0|            0|            0|  0.00%|       https://web.archive.org/web/20161022015821/http://www.math.leidenuniv.nl/scripties/Rotten.pdf
   944|         0|            0|            0|  0.00%|
   945|         0|            0|            0|  0.00%|    """
   946|         0|            0|            0|  0.00%|
   947|         0|            0|            0|  0.00%|    def __init__(self, alpha=None, reduction_method='restart', max_rank=None):
   948|         0|            0|            0|  0.00%|        GenericBroyden.__init__(self)
   949|         0|            0|            0|  0.00%|        self.alpha = alpha
   950|         0|            0|            0|  0.00%|        self.Gm = None
   951|         0|            0|            0|  0.00%|
   952|         0|            0|            0|  0.00%|        if max_rank is None:
   953|         0|            0|            0|  0.00%|            max_rank = np.inf
   954|         0|            0|            0|  0.00%|        self.max_rank = max_rank
   955|         0|            0|            0|  0.00%|
   956|         0|            0|            0|  0.00%|        if isinstance(reduction_method, str):
   957|         0|            0|            0|  0.00%|            reduce_params = ()
   958|         0|            0|            0|  0.00%|        else:
   959|         0|            0|            0|  0.00%|            reduce_params = reduction_method[1:]
   960|         0|            0|            0|  0.00%|            reduction_method = reduction_method[0]
   961|         0|            0|            0|  0.00%|        reduce_params = (max_rank - 1,) + reduce_params
   962|         0|            0|            0|  0.00%|
   963|         0|            0|            0|  0.00%|        if reduction_method == 'svd':
   964|         0|            0|            0|  0.00%|            self._reduce = lambda: self.Gm.svd_reduce(*reduce_params)
   965|         0|            0|            0|  0.00%|        elif reduction_method == 'simple':
   966|         0|            0|            0|  0.00%|            self._reduce = lambda: self.Gm.simple_reduce(*reduce_params)
   967|         0|            0|            0|  0.00%|        elif reduction_method == 'restart':
   968|         0|            0|            0|  0.00%|            self._reduce = lambda: self.Gm.restart_reduce(*reduce_params)
   969|         0|            0|            0|  0.00%|        else:
   970|         0|            0|            0|  0.00%|            raise ValueError("Unknown rank reduction method '%s'" %
   971|         0|            0|            0|  0.00%|                             reduction_method)
   972|         0|            0|            0|  0.00%|
   973|         0|            0|            0|  0.00%|    def setup(self, x, F, func):
   974|         0|            0|            0|  0.00%|        GenericBroyden.setup(self, x, F, func)
   975|         0|            0|            0|  0.00%|        self.Gm = LowRankMatrix(-self.alpha, self.shape[0], self.dtype)
   976|         0|            0|            0|  0.00%|
   977|         0|            0|            0|  0.00%|    def todense(self):
   978|         0|            0|            0|  0.00%|        return inv(self.Gm)
   979|         0|            0|            0|  0.00%|
   980|         0|            0|            0|  0.00%|    def solve(self, f, tol=0):
   981|         0|            0|            0|  0.00%|        r = self.Gm.matvec(f)
   982|         0|            0|            0|  0.00%|        if not np.isfinite(r).all():
   983|         0|            0|            0|  0.00%|            # singular; reset the Jacobian approximation
   984|         0|            0|            0|  0.00%|            self.setup(self.last_x, self.last_f, self.func)
   985|         0|            0|            0|  0.00%|        return self.Gm.matvec(f)
   986|         0|            0|            0|  0.00%|
   987|         0|            0|            0|  0.00%|    def matvec(self, f):
   988|         0|            0|            0|  0.00%|        return self.Gm.solve(f)
   989|         0|            0|            0|  0.00%|
   990|         0|            0|            0|  0.00%|    def rsolve(self, f, tol=0):
   991|         0|            0|            0|  0.00%|        return self.Gm.rmatvec(f)
   992|         0|            0|            0|  0.00%|
   993|         0|            0|            0|  0.00%|    def rmatvec(self, f):
   994|         0|            0|            0|  0.00%|        return self.Gm.rsolve(f)
   995|         0|            0|            0|  0.00%|
   996|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
   997|         0|            0|            0|  0.00%|        self._reduce()  # reduce first to preserve secant condition
   998|         0|            0|            0|  0.00%|
   999|         0|            0|            0|  0.00%|        v = self.Gm.rmatvec(dx)
  1000|         0|            0|            0|  0.00%|        c = dx - self.Gm.matvec(df)
  1001|         0|            0|            0|  0.00%|        d = v / vdot(df, v)
  1002|         0|            0|            0|  0.00%|
  1003|         0|            0|            0|  0.00%|        self.Gm.append(c, d)
  1004|         0|            0|            0|  0.00%|
  1005|         0|            0|            0|  0.00%|
  1006|         0|            0|            0|  0.00%|class BroydenSecond(BroydenFirst):
  1007|         0|            0|            0|  0.00%|    """
  1008|         0|            0|            0|  0.00%|    Find a root of a function, using Broyden\'s second Jacobian approximation.
  1009|         0|            0|            0|  0.00%|
  1010|         0|            0|            0|  0.00%|    This method is also known as \"Broyden's bad method\".
  1011|         0|            0|            0|  0.00%|
  1012|         0|            0|            0|  0.00%|    Parameters
  1013|         0|            0|            0|  0.00%|    ----------
  1014|         0|            0|            0|  0.00%|    %(params_basic)s
  1015|         0|            0|            0|  0.00%|    %(broyden_params)s
  1016|         0|            0|            0|  0.00%|    %(params_extra)s
  1017|         0|            0|            0|  0.00%|
  1018|         0|            0|            0|  0.00%|    See Also
  1019|         0|            0|            0|  0.00%|    --------
  1020|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1021|         0|            0|            0|  0.00%|           functions. See ``method=='broyden2'`` in particular.
  1022|         0|            0|            0|  0.00%|
  1023|         0|            0|            0|  0.00%|    Notes
  1024|         0|            0|            0|  0.00%|    -----
  1025|         0|            0|            0|  0.00%|    This algorithm implements the inverse Jacobian Quasi-Newton update
  1026|         0|            0|            0|  0.00%|
  1027|         0|            0|            0|  0.00%|    .. math:: H_+ = H + (dx - H df) df^\\dagger / ( df^\\dagger df)
  1028|         0|            0|            0|  0.00%|
  1029|         0|            0|            0|  0.00%|    corresponding to Broyden's second method.
  1030|         0|            0|            0|  0.00%|
  1031|         0|            0|            0|  0.00%|    References
  1032|         0|            0|            0|  0.00%|    ----------
  1033|         0|            0|            0|  0.00%|    .. [1] B.A. van der Rotten, PhD thesis,
  1034|         0|            0|            0|  0.00%|       \"A limited memory Broyden method to solve high-dimensional
  1035|         0|            0|            0|  0.00%|       systems of nonlinear equations\". Mathematisch Instituut,
  1036|         0|            0|            0|  0.00%|       Universiteit Leiden, The Netherlands (2003).
  1037|         0|            0|            0|  0.00%|
  1038|         0|            0|            0|  0.00%|       https://web.archive.org/web/20161022015821/http://www.math.leidenuniv.nl/scripties/Rotten.pdf
  1039|         0|            0|            0|  0.00%|
  1040|         0|            0|            0|  0.00%|    """
  1041|         0|            0|            0|  0.00%|
  1042|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
  1043|         0|            0|            0|  0.00%|        self._reduce()  # reduce first to preserve secant condition
  1044|         0|            0|            0|  0.00%|
  1045|         0|            0|            0|  0.00%|        v = df
  1046|         0|            0|            0|  0.00%|        c = dx - self.Gm.matvec(df)
  1047|         0|            0|            0|  0.00%|        d = v / df_norm**2
  1048|         0|            0|            0|  0.00%|        self.Gm.append(c, d)
  1049|         0|            0|            0|  0.00%|
  1050|         0|            0|            0|  0.00%|
  1051|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1052|         0|            0|            0|  0.00%|# Broyden-like (restricted memory)
  1053|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1054|         0|            0|            0|  0.00%|
  1055|         0|            0|            0|  0.00%|class Anderson(GenericBroyden):
  1056|         0|            0|            0|  0.00%|    """
  1057|         0|            0|            0|  0.00%|    Find a root of a function, using (extended) Anderson mixing.
  1058|         0|            0|            0|  0.00%|
  1059|         0|            0|            0|  0.00%|    The Jacobian is formed by for a 'best' solution in the space
  1060|         0|            0|            0|  0.00%|    spanned by last `M` vectors. As a result, only a MxM matrix
  1061|         0|            0|            0|  0.00%|    inversions and MxN multiplications are required. [Ey]_
  1062|         0|            0|            0|  0.00%|
  1063|         0|            0|            0|  0.00%|    Parameters
  1064|         0|            0|            0|  0.00%|    ----------
  1065|         0|            0|            0|  0.00%|    %(params_basic)s
  1066|         0|            0|            0|  0.00%|    alpha : float, optional
  1067|         0|            0|            0|  0.00%|        Initial guess for the Jacobian is (-1/alpha).
  1068|         0|            0|            0|  0.00%|    M : float, optional
  1069|         0|            0|            0|  0.00%|        Number of previous vectors to retain. Defaults to 5.
  1070|         0|            0|            0|  0.00%|    w0 : float, optional
  1071|         0|            0|            0|  0.00%|        Regularization parameter for numerical stability.
  1072|         0|            0|            0|  0.00%|        Compared to unity, good values of the order of 0.01.
  1073|         0|            0|            0|  0.00%|    %(params_extra)s
  1074|         0|            0|            0|  0.00%|
  1075|         0|            0|            0|  0.00%|    See Also
  1076|         0|            0|            0|  0.00%|    --------
  1077|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1078|         0|            0|            0|  0.00%|           functions. See ``method=='anderson'`` in particular.
  1079|         0|            0|            0|  0.00%|
  1080|         0|            0|            0|  0.00%|    References
  1081|         0|            0|            0|  0.00%|    ----------
  1082|         0|            0|            0|  0.00%|    .. [Ey] V. Eyert, J. Comp. Phys., 124, 271 (1996).
  1083|         0|            0|            0|  0.00%|
  1084|         0|            0|            0|  0.00%|    """
  1085|         0|            0|            0|  0.00%|
  1086|         0|            0|            0|  0.00%|    # Note:
  1087|         0|            0|            0|  0.00%|    #
  1088|         0|            0|            0|  0.00%|    # Anderson method maintains a rank M approximation of the inverse Jacobian,
  1089|         0|            0|            0|  0.00%|    #
  1090|         0|            0|            0|  0.00%|    #     J^-1 v ~ -v*alpha + (dX + alpha dF) A^-1 dF^H v
  1091|         0|            0|            0|  0.00%|    #     A      = W + dF^H dF
  1092|         0|            0|            0|  0.00%|    #     W      = w0^2 diag(dF^H dF)
  1093|         0|            0|            0|  0.00%|    #
  1094|         0|            0|            0|  0.00%|    # so that for w0 = 0 the secant condition applies for last M iterates, i.e.,
  1095|         0|            0|            0|  0.00%|    #
  1096|         0|            0|            0|  0.00%|    #     J^-1 df_j = dx_j
  1097|         0|            0|            0|  0.00%|    #
  1098|         0|            0|            0|  0.00%|    # for all j = 0 ... M-1.
  1099|         0|            0|            0|  0.00%|    #
  1100|         0|            0|            0|  0.00%|    # Moreover, (from Sherman-Morrison-Woodbury formula)
  1101|         0|            0|            0|  0.00%|    #
  1102|         0|            0|            0|  0.00%|    #    J v ~ [ b I - b^2 C (I + b dF^H A^-1 C)^-1 dF^H ] v
  1103|         0|            0|            0|  0.00%|    #    C   = (dX + alpha dF) A^-1
  1104|         0|            0|            0|  0.00%|    #    b   = -1/alpha
  1105|         0|            0|            0|  0.00%|    #
  1106|         0|            0|            0|  0.00%|    # and after simplification
  1107|         0|            0|            0|  0.00%|    #
  1108|         0|            0|            0|  0.00%|    #    J v ~ -v/alpha + (dX/alpha + dF) (dF^H dX - alpha W)^-1 dF^H v
  1109|         0|            0|            0|  0.00%|    #
  1110|         0|            0|            0|  0.00%|
  1111|         0|            0|            0|  0.00%|    def __init__(self, alpha=None, w0=0.01, M=5):
  1112|         0|            0|            0|  0.00%|        GenericBroyden.__init__(self)
  1113|         0|            0|            0|  0.00%|        self.alpha = alpha
  1114|         0|            0|            0|  0.00%|        self.M = M
  1115|         0|            0|            0|  0.00%|        self.dx = []
  1116|         0|            0|            0|  0.00%|        self.df = []
  1117|         0|            0|            0|  0.00%|        self.gamma = None
  1118|         0|            0|            0|  0.00%|        self.w0 = w0
  1119|         0|            0|            0|  0.00%|
  1120|         0|            0|            0|  0.00%|    def solve(self, f, tol=0):
  1121|         0|            0|            0|  0.00%|        dx = -self.alpha*f
  1122|         0|            0|            0|  0.00%|
  1123|         0|            0|            0|  0.00%|        n = len(self.dx)
  1124|         0|            0|            0|  0.00%|        if n == 0:
  1125|         0|            0|            0|  0.00%|            return dx
  1126|         0|            0|            0|  0.00%|
  1127|         0|            0|            0|  0.00%|        df_f = np.empty(n, dtype=f.dtype)
  1128|         0|            0|            0|  0.00%|        for k in range(n):
  1129|         0|            0|            0|  0.00%|            df_f[k] = vdot(self.df[k], f)
  1130|         0|            0|            0|  0.00%|
  1131|         0|            0|            0|  0.00%|        try:
  1132|         0|            0|            0|  0.00%|            gamma = solve(self.a, df_f)
  1133|         0|            0|            0|  0.00%|        except LinAlgError:
  1134|         0|            0|            0|  0.00%|            # singular; reset the Jacobian approximation
  1135|         0|            0|            0|  0.00%|            del self.dx[:]
  1136|         0|            0|            0|  0.00%|            del self.df[:]
  1137|         0|            0|            0|  0.00%|            return dx
  1138|         0|            0|            0|  0.00%|
  1139|         0|            0|            0|  0.00%|        for m in range(n):
  1140|         0|            0|            0|  0.00%|            dx += gamma[m]*(self.dx[m] + self.alpha*self.df[m])
  1141|         0|            0|            0|  0.00%|        return dx
  1142|         0|            0|            0|  0.00%|
  1143|         0|            0|            0|  0.00%|    def matvec(self, f):
  1144|         0|            0|            0|  0.00%|        dx = -f/self.alpha
  1145|         0|            0|            0|  0.00%|
  1146|         0|            0|            0|  0.00%|        n = len(self.dx)
  1147|         0|            0|            0|  0.00%|        if n == 0:
  1148|         0|            0|            0|  0.00%|            return dx
  1149|         0|            0|            0|  0.00%|
  1150|         0|            0|            0|  0.00%|        df_f = np.empty(n, dtype=f.dtype)
  1151|         0|            0|            0|  0.00%|        for k in range(n):
  1152|         0|            0|            0|  0.00%|            df_f[k] = vdot(self.df[k], f)
  1153|         0|            0|            0|  0.00%|
  1154|         0|            0|            0|  0.00%|        b = np.empty((n, n), dtype=f.dtype)
  1155|         0|            0|            0|  0.00%|        for i in range(n):
  1156|         0|            0|            0|  0.00%|            for j in range(n):
  1157|         0|            0|            0|  0.00%|                b[i,j] = vdot(self.df[i], self.dx[j])
  1158|         0|            0|            0|  0.00%|                if i == j and self.w0 != 0:
  1159|         0|            0|            0|  0.00%|                    b[i,j] -= vdot(self.df[i], self.df[i])*self.w0**2*self.alpha
  1160|         0|            0|            0|  0.00%|        gamma = solve(b, df_f)
  1161|         0|            0|            0|  0.00%|
  1162|         0|            0|            0|  0.00%|        for m in range(n):
  1163|         0|            0|            0|  0.00%|            dx += gamma[m]*(self.df[m] + self.dx[m]/self.alpha)
  1164|         0|            0|            0|  0.00%|        return dx
  1165|         0|            0|            0|  0.00%|
  1166|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
  1167|         0|            0|            0|  0.00%|        if self.M == 0:
  1168|         0|            0|            0|  0.00%|            return
  1169|         0|            0|            0|  0.00%|
  1170|         0|            0|            0|  0.00%|        self.dx.append(dx)
  1171|         0|            0|            0|  0.00%|        self.df.append(df)
  1172|         0|            0|            0|  0.00%|
  1173|         0|            0|            0|  0.00%|        while len(self.dx) > self.M:
  1174|         0|            0|            0|  0.00%|            self.dx.pop(0)
  1175|         0|            0|            0|  0.00%|            self.df.pop(0)
  1176|         0|            0|            0|  0.00%|
  1177|         0|            0|            0|  0.00%|        n = len(self.dx)
  1178|         0|            0|            0|  0.00%|        a = np.zeros((n, n), dtype=f.dtype)
  1179|         0|            0|            0|  0.00%|
  1180|         0|            0|            0|  0.00%|        for i in range(n):
  1181|         0|            0|            0|  0.00%|            for j in range(i, n):
  1182|         0|            0|            0|  0.00%|                if i == j:
  1183|         0|            0|            0|  0.00%|                    wd = self.w0**2
  1184|         0|            0|            0|  0.00%|                else:
  1185|         0|            0|            0|  0.00%|                    wd = 0
  1186|         0|            0|            0|  0.00%|                a[i,j] = (1+wd)*vdot(self.df[i], self.df[j])
  1187|         0|            0|            0|  0.00%|
  1188|         0|            0|            0|  0.00%|        a += np.triu(a, 1).T.conj()
  1189|         0|            0|            0|  0.00%|        self.a = a
  1190|         0|            0|            0|  0.00%|
  1191|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1192|         0|            0|            0|  0.00%|# Simple iterations
  1193|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1194|         0|            0|            0|  0.00%|
  1195|         0|            0|            0|  0.00%|
  1196|         0|            0|            0|  0.00%|class DiagBroyden(GenericBroyden):
  1197|         0|            0|            0|  0.00%|    """
  1198|         0|            0|            0|  0.00%|    Find a root of a function, using diagonal Broyden Jacobian approximation.
  1199|         0|            0|            0|  0.00%|
  1200|         0|            0|            0|  0.00%|    The Jacobian approximation is derived from previous iterations, by
  1201|         0|            0|            0|  0.00%|    retaining only the diagonal of Broyden matrices.
  1202|         0|            0|            0|  0.00%|
  1203|         0|            0|            0|  0.00%|    .. warning::
  1204|         0|            0|            0|  0.00%|
  1205|         0|            0|            0|  0.00%|       This algorithm may be useful for specific problems, but whether
  1206|         0|            0|            0|  0.00%|       it will work may depend strongly on the problem.
  1207|         0|            0|            0|  0.00%|
  1208|         0|            0|            0|  0.00%|    Parameters
  1209|         0|            0|            0|  0.00%|    ----------
  1210|         0|            0|            0|  0.00%|    %(params_basic)s
  1211|         0|            0|            0|  0.00%|    alpha : float, optional
  1212|         0|            0|            0|  0.00%|        Initial guess for the Jacobian is (-1/alpha).
  1213|         0|            0|            0|  0.00%|    %(params_extra)s
  1214|         0|            0|            0|  0.00%|
  1215|         0|            0|            0|  0.00%|    See Also
  1216|         0|            0|            0|  0.00%|    --------
  1217|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1218|         0|            0|            0|  0.00%|           functions. See ``method=='diagbroyden'`` in particular.
  1219|         0|            0|            0|  0.00%|    """
  1220|         0|            0|            0|  0.00%|
  1221|         0|            0|            0|  0.00%|    def __init__(self, alpha=None):
  1222|         0|            0|            0|  0.00%|        GenericBroyden.__init__(self)
  1223|         0|            0|            0|  0.00%|        self.alpha = alpha
  1224|         0|            0|            0|  0.00%|
  1225|         0|            0|            0|  0.00%|    def setup(self, x, F, func):
  1226|         0|            0|            0|  0.00%|        GenericBroyden.setup(self, x, F, func)
  1227|         0|            0|            0|  0.00%|        self.d = np.full((self.shape[0],), 1 / self.alpha, dtype=self.dtype)
  1228|         0|            0|            0|  0.00%|
  1229|         0|            0|            0|  0.00%|    def solve(self, f, tol=0):
  1230|         0|            0|            0|  0.00%|        return -f / self.d
  1231|         0|            0|            0|  0.00%|
  1232|         0|            0|            0|  0.00%|    def matvec(self, f):
  1233|         0|            0|            0|  0.00%|        return -f * self.d
  1234|         0|            0|            0|  0.00%|
  1235|         0|            0|            0|  0.00%|    def rsolve(self, f, tol=0):
  1236|         0|            0|            0|  0.00%|        return -f / self.d.conj()
  1237|         0|            0|            0|  0.00%|
  1238|         0|            0|            0|  0.00%|    def rmatvec(self, f):
  1239|         0|            0|            0|  0.00%|        return -f * self.d.conj()
  1240|         0|            0|            0|  0.00%|
  1241|         0|            0|            0|  0.00%|    def todense(self):
  1242|         0|            0|            0|  0.00%|        return np.diag(-self.d)
  1243|         0|            0|            0|  0.00%|
  1244|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
  1245|         0|            0|            0|  0.00%|        self.d -= (df + self.d*dx)*dx/dx_norm**2
  1246|         0|            0|            0|  0.00%|
  1247|         0|            0|            0|  0.00%|
  1248|         0|            0|            0|  0.00%|class LinearMixing(GenericBroyden):
  1249|         0|            0|            0|  0.00%|    """
  1250|         0|            0|            0|  0.00%|    Find a root of a function, using a scalar Jacobian approximation.
  1251|         0|            0|            0|  0.00%|
  1252|         0|            0|            0|  0.00%|    .. warning::
  1253|         0|            0|            0|  0.00%|
  1254|         0|            0|            0|  0.00%|       This algorithm may be useful for specific problems, but whether
  1255|         0|            0|            0|  0.00%|       it will work may depend strongly on the problem.
  1256|         0|            0|            0|  0.00%|
  1257|         0|            0|            0|  0.00%|    Parameters
  1258|         0|            0|            0|  0.00%|    ----------
  1259|         0|            0|            0|  0.00%|    %(params_basic)s
  1260|         0|            0|            0|  0.00%|    alpha : float, optional
  1261|         0|            0|            0|  0.00%|        The Jacobian approximation is (-1/alpha).
  1262|         0|            0|            0|  0.00%|    %(params_extra)s
  1263|         0|            0|            0|  0.00%|
  1264|         0|            0|            0|  0.00%|    See Also
  1265|         0|            0|            0|  0.00%|    --------
  1266|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1267|         0|            0|            0|  0.00%|           functions. See ``method=='linearmixing'`` in particular.
  1268|         0|            0|            0|  0.00%|
  1269|         0|            0|            0|  0.00%|    """
  1270|         0|            0|            0|  0.00%|
  1271|         0|            0|            0|  0.00%|    def __init__(self, alpha=None):
  1272|         0|            0|            0|  0.00%|        GenericBroyden.__init__(self)
  1273|         0|            0|            0|  0.00%|        self.alpha = alpha
  1274|         0|            0|            0|  0.00%|
  1275|         0|            0|            0|  0.00%|    def solve(self, f, tol=0):
  1276|         0|            0|            0|  0.00%|        return -f*self.alpha
  1277|         0|            0|            0|  0.00%|
  1278|         0|            0|            0|  0.00%|    def matvec(self, f):
  1279|         0|            0|            0|  0.00%|        return -f/self.alpha
  1280|         0|            0|            0|  0.00%|
  1281|         0|            0|            0|  0.00%|    def rsolve(self, f, tol=0):
  1282|         0|            0|            0|  0.00%|        return -f*np.conj(self.alpha)
  1283|         0|            0|            0|  0.00%|
  1284|         0|            0|            0|  0.00%|    def rmatvec(self, f):
  1285|         0|            0|            0|  0.00%|        return -f/np.conj(self.alpha)
  1286|         0|            0|            0|  0.00%|
  1287|         0|            0|            0|  0.00%|    def todense(self):
  1288|         0|            0|            0|  0.00%|        return np.diag(np.full(self.shape[0], -1/self.alpha))
  1289|         0|            0|            0|  0.00%|
  1290|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
  1291|         0|            0|            0|  0.00%|        pass
  1292|         0|            0|            0|  0.00%|
  1293|         0|            0|            0|  0.00%|
  1294|         0|            0|            0|  0.00%|class ExcitingMixing(GenericBroyden):
  1295|         0|            0|            0|  0.00%|    """
  1296|         0|            0|            0|  0.00%|    Find a root of a function, using a tuned diagonal Jacobian approximation.
  1297|         0|            0|            0|  0.00%|
  1298|         0|            0|            0|  0.00%|    The Jacobian matrix is diagonal and is tuned on each iteration.
  1299|         0|            0|            0|  0.00%|
  1300|         0|            0|            0|  0.00%|    .. warning::
  1301|         0|            0|            0|  0.00%|
  1302|         0|            0|            0|  0.00%|       This algorithm may be useful for specific problems, but whether
  1303|         0|            0|            0|  0.00%|       it will work may depend strongly on the problem.
  1304|         0|            0|            0|  0.00%|
  1305|         0|            0|            0|  0.00%|    See Also
  1306|         0|            0|            0|  0.00%|    --------
  1307|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1308|         0|            0|            0|  0.00%|           functions. See ``method=='excitingmixing'`` in particular.
  1309|         0|            0|            0|  0.00%|
  1310|         0|            0|            0|  0.00%|    Parameters
  1311|         0|            0|            0|  0.00%|    ----------
  1312|         0|            0|            0|  0.00%|    %(params_basic)s
  1313|         0|            0|            0|  0.00%|    alpha : float, optional
  1314|         0|            0|            0|  0.00%|        Initial Jacobian approximation is (-1/alpha).
  1315|         0|            0|            0|  0.00%|    alphamax : float, optional
  1316|         0|            0|            0|  0.00%|        The entries of the diagonal Jacobian are kept in the range
  1317|         0|            0|            0|  0.00%|        ``[alpha, alphamax]``.
  1318|         0|            0|            0|  0.00%|    %(params_extra)s
  1319|         0|            0|            0|  0.00%|    """
  1320|         0|            0|            0|  0.00%|
  1321|         0|            0|            0|  0.00%|    def __init__(self, alpha=None, alphamax=1.0):
  1322|         0|            0|            0|  0.00%|        GenericBroyden.__init__(self)
  1323|         0|            0|            0|  0.00%|        self.alpha = alpha
  1324|         0|            0|            0|  0.00%|        self.alphamax = alphamax
  1325|         0|            0|            0|  0.00%|        self.beta = None
  1326|         0|            0|            0|  0.00%|
  1327|         0|            0|            0|  0.00%|    def setup(self, x, F, func):
  1328|         0|            0|            0|  0.00%|        GenericBroyden.setup(self, x, F, func)
  1329|         0|            0|            0|  0.00%|        self.beta = np.full((self.shape[0],), self.alpha, dtype=self.dtype)
  1330|         0|            0|            0|  0.00%|
  1331|         0|            0|            0|  0.00%|    def solve(self, f, tol=0):
  1332|         0|            0|            0|  0.00%|        return -f*self.beta
  1333|         0|            0|            0|  0.00%|
  1334|         0|            0|            0|  0.00%|    def matvec(self, f):
  1335|         0|            0|            0|  0.00%|        return -f/self.beta
  1336|         0|            0|            0|  0.00%|
  1337|         0|            0|            0|  0.00%|    def rsolve(self, f, tol=0):
  1338|         0|            0|            0|  0.00%|        return -f*self.beta.conj()
  1339|         0|            0|            0|  0.00%|
  1340|         0|            0|            0|  0.00%|    def rmatvec(self, f):
  1341|         0|            0|            0|  0.00%|        return -f/self.beta.conj()
  1342|         0|            0|            0|  0.00%|
  1343|         0|            0|            0|  0.00%|    def todense(self):
  1344|         0|            0|            0|  0.00%|        return np.diag(-1/self.beta)
  1345|         0|            0|            0|  0.00%|
  1346|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
  1347|         0|            0|            0|  0.00%|        incr = f*self.last_f > 0
  1348|         0|            0|            0|  0.00%|        self.beta[incr] += self.alpha
  1349|         0|            0|            0|  0.00%|        self.beta[~incr] = self.alpha
  1350|         0|            0|            0|  0.00%|        np.clip(self.beta, 0, self.alphamax, out=self.beta)
  1351|         0|            0|            0|  0.00%|
  1352|         0|            0|            0|  0.00%|
  1353|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1354|         0|            0|            0|  0.00%|# Iterative/Krylov approximated Jacobians
  1355|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1356|         0|            0|            0|  0.00%|
  1357|         0|            0|            0|  0.00%|class KrylovJacobian(Jacobian):
  1358|         0|            0|            0|  0.00%|    r"""
  1359|         0|            0|            0|  0.00%|    Find a root of a function, using Krylov approximation for inverse Jacobian.
  1360|         0|            0|            0|  0.00%|
  1361|         0|            0|            0|  0.00%|    This method is suitable for solving large-scale problems.
  1362|         0|            0|            0|  0.00%|
  1363|         0|            0|            0|  0.00%|    Parameters
  1364|         0|            0|            0|  0.00%|    ----------
  1365|         0|            0|            0|  0.00%|    %(params_basic)s
  1366|         0|            0|            0|  0.00%|    rdiff : float, optional
  1367|         0|            0|            0|  0.00%|        Relative step size to use in numerical differentiation.
  1368|         0|            0|            0|  0.00%|    method : {'lgmres', 'gmres', 'bicgstab', 'cgs', 'minres'} or function
  1369|         0|            0|            0|  0.00%|        Krylov method to use to approximate the Jacobian.
  1370|         0|            0|            0|  0.00%|        Can be a string, or a function implementing the same interface as
  1371|         0|            0|            0|  0.00%|        the iterative solvers in `scipy.sparse.linalg`.
  1372|         0|            0|            0|  0.00%|
  1373|         0|            0|            0|  0.00%|        The default is `scipy.sparse.linalg.lgmres`.
  1374|         0|            0|            0|  0.00%|    inner_maxiter : int, optional
  1375|         0|            0|            0|  0.00%|        Parameter to pass to the "inner" Krylov solver: maximum number of
  1376|         0|            0|            0|  0.00%|        iterations. Iteration will stop after maxiter steps even if the
  1377|         0|            0|            0|  0.00%|        specified tolerance has not been achieved.
  1378|         0|            0|            0|  0.00%|    inner_M : LinearOperator or InverseJacobian
  1379|         0|            0|            0|  0.00%|        Preconditioner for the inner Krylov iteration.
  1380|         0|            0|            0|  0.00%|        Note that you can use also inverse Jacobians as (adaptive)
  1381|         0|            0|            0|  0.00%|        preconditioners. For example,
  1382|         0|            0|            0|  0.00%|
  1383|         0|            0|            0|  0.00%|        >>> from scipy.optimize.nonlin import BroydenFirst, KrylovJacobian
  1384|         0|            0|            0|  0.00%|        >>> from scipy.optimize.nonlin import InverseJacobian
  1385|         0|            0|            0|  0.00%|        >>> jac = BroydenFirst()
  1386|         0|            0|            0|  0.00%|        >>> kjac = KrylovJacobian(inner_M=InverseJacobian(jac))
  1387|         0|            0|            0|  0.00%|
  1388|         0|            0|            0|  0.00%|        If the preconditioner has a method named 'update', it will be called
  1389|         0|            0|            0|  0.00%|        as ``update(x, f)`` after each nonlinear step, with ``x`` giving
  1390|         0|            0|            0|  0.00%|        the current point, and ``f`` the current function value.
  1391|         0|            0|            0|  0.00%|    outer_k : int, optional
  1392|         0|            0|            0|  0.00%|        Size of the subspace kept across LGMRES nonlinear iterations.
  1393|         0|            0|            0|  0.00%|        See `scipy.sparse.linalg.lgmres` for details.
  1394|         0|            0|            0|  0.00%|    inner_kwargs : kwargs
  1395|         0|            0|            0|  0.00%|        Keyword parameters for the "inner" Krylov solver
  1396|         0|            0|            0|  0.00%|        (defined with `method`). Parameter names must start with
  1397|         0|            0|            0|  0.00%|        the `inner_` prefix which will be stripped before passing on
  1398|         0|            0|            0|  0.00%|        the inner method. See, e.g., `scipy.sparse.linalg.gmres` for details.
  1399|         0|            0|            0|  0.00%|    %(params_extra)s
  1400|         0|            0|            0|  0.00%|
  1401|         0|            0|            0|  0.00%|    See Also
  1402|         0|            0|            0|  0.00%|    --------
  1403|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1404|         0|            0|            0|  0.00%|           functions. See ``method=='krylov'`` in particular.
  1405|         0|            0|            0|  0.00%|    scipy.sparse.linalg.gmres
  1406|         0|            0|            0|  0.00%|    scipy.sparse.linalg.lgmres
  1407|         0|            0|            0|  0.00%|
  1408|         0|            0|            0|  0.00%|    Notes
  1409|         0|            0|            0|  0.00%|    -----
  1410|         0|            0|            0|  0.00%|    This function implements a Newton-Krylov solver. The basic idea is
  1411|         0|            0|            0|  0.00%|    to compute the inverse of the Jacobian with an iterative Krylov
  1412|         0|            0|            0|  0.00%|    method. These methods require only evaluating the Jacobian-vector
  1413|         0|            0|            0|  0.00%|    products, which are conveniently approximated by a finite difference:
  1414|         0|            0|            0|  0.00%|
  1415|         0|            0|            0|  0.00%|    .. math:: J v \approx (f(x + \omega*v/|v|) - f(x)) / \omega
  1416|         0|            0|            0|  0.00%|
  1417|         0|            0|            0|  0.00%|    Due to the use of iterative matrix inverses, these methods can
  1418|         0|            0|            0|  0.00%|    deal with large nonlinear problems.
  1419|         0|            0|            0|  0.00%|
  1420|         0|            0|            0|  0.00%|    SciPy's `scipy.sparse.linalg` module offers a selection of Krylov
  1421|         0|            0|            0|  0.00%|    solvers to choose from. The default here is `lgmres`, which is a
  1422|         0|            0|            0|  0.00%|    variant of restarted GMRES iteration that reuses some of the
  1423|         0|            0|            0|  0.00%|    information obtained in the previous Newton steps to invert
  1424|         0|            0|            0|  0.00%|    Jacobians in subsequent steps.
  1425|         0|            0|            0|  0.00%|
  1426|         0|            0|            0|  0.00%|    For a review on Newton-Krylov methods, see for example [1]_,
  1427|         0|            0|            0|  0.00%|    and for the LGMRES sparse inverse method, see [2]_.
  1428|         0|            0|            0|  0.00%|
  1429|         0|            0|            0|  0.00%|    References
  1430|         0|            0|            0|  0.00%|    ----------
  1431|         0|            0|            0|  0.00%|    .. [1] D.A. Knoll and D.E. Keyes, J. Comp. Phys. 193, 357 (2004).
  1432|         0|            0|            0|  0.00%|           :doi:`10.1016/j.jcp.2003.08.010`
  1433|         0|            0|            0|  0.00%|    .. [2] A.H. Baker and E.R. Jessup and T. Manteuffel,
  1434|         0|            0|            0|  0.00%|           SIAM J. Matrix Anal. Appl. 26, 962 (2005).
  1435|         0|            0|            0|  0.00%|           :doi:`10.1137/S0895479803422014`
  1436|         0|            0|            0|  0.00%|
  1437|         0|            0|            0|  0.00%|    """
  1438|         0|            0|            0|  0.00%|
  1439|         0|            0|            0|  0.00%|    def __init__(self, rdiff=None, method='lgmres', inner_maxiter=20,
  1440|         0|            0|            0|  0.00%|                 inner_M=None, outer_k=10, **kw):
  1441|         0|            0|            0|  0.00%|        self.preconditioner = inner_M
  1442|         0|            0|            0|  0.00%|        self.rdiff = rdiff
  1443|         0|            0|            0|  0.00%|        self.method = dict(
  1444|         0|            0|            0|  0.00%|            bicgstab=scipy.sparse.linalg.bicgstab,
  1445|         0|            0|            0|  0.00%|            gmres=scipy.sparse.linalg.gmres,
  1446|         0|            0|            0|  0.00%|            lgmres=scipy.sparse.linalg.lgmres,
  1447|         0|            0|            0|  0.00%|            cgs=scipy.sparse.linalg.cgs,
  1448|         0|            0|            0|  0.00%|            minres=scipy.sparse.linalg.minres,
  1449|         0|            0|            0|  0.00%|            ).get(method, method)
  1450|         0|            0|            0|  0.00%|
  1451|         0|            0|            0|  0.00%|        self.method_kw = dict(maxiter=inner_maxiter, M=self.preconditioner)
  1452|         0|            0|            0|  0.00%|
  1453|         0|            0|            0|  0.00%|        if self.method is scipy.sparse.linalg.gmres:
  1454|         0|            0|            0|  0.00%|            # Replace GMRES's outer iteration with Newton steps
  1455|         0|            0|            0|  0.00%|            self.method_kw['restrt'] = inner_maxiter
  1456|         0|            0|            0|  0.00%|            self.method_kw['maxiter'] = 1
  1457|         0|            0|            0|  0.00%|            self.method_kw.setdefault('atol', 0)
  1458|         0|            0|            0|  0.00%|        elif self.method is scipy.sparse.linalg.gcrotmk:
  1459|         0|            0|            0|  0.00%|            self.method_kw.setdefault('atol', 0)
  1460|         0|            0|            0|  0.00%|        elif self.method is scipy.sparse.linalg.lgmres:
  1461|         0|            0|            0|  0.00%|            self.method_kw['outer_k'] = outer_k
  1462|         0|            0|            0|  0.00%|            # Replace LGMRES's outer iteration with Newton steps
  1463|         0|            0|            0|  0.00%|            self.method_kw['maxiter'] = 1
  1464|         0|            0|            0|  0.00%|            # Carry LGMRES's `outer_v` vectors across nonlinear iterations
  1465|         0|            0|            0|  0.00%|            self.method_kw.setdefault('outer_v', [])
  1466|         0|            0|            0|  0.00%|            self.method_kw.setdefault('prepend_outer_v', True)
  1467|         0|            0|            0|  0.00%|            # But don't carry the corresponding Jacobian*v products, in case
  1468|         0|            0|            0|  0.00%|            # the Jacobian changes a lot in the nonlinear step
  1469|         0|            0|            0|  0.00%|            #
  1470|         0|            0|            0|  0.00%|            # XXX: some trust-region inspired ideas might be more efficient...
  1471|         0|            0|            0|  0.00%|            #      See e.g., Brown & Saad. But needs to be implemented separately
  1472|         0|            0|            0|  0.00%|            #      since it's not an inexact Newton method.
  1473|         0|            0|            0|  0.00%|            self.method_kw.setdefault('store_outer_Av', False)
  1474|         0|            0|            0|  0.00%|            self.method_kw.setdefault('atol', 0)
  1475|         0|            0|            0|  0.00%|
  1476|         0|            0|            0|  0.00%|        for key, value in kw.items():
  1477|         0|            0|            0|  0.00%|            if not key.startswith('inner_'):
  1478|         0|            0|            0|  0.00%|                raise ValueError("Unknown parameter %s" % key)
  1479|         0|            0|            0|  0.00%|            self.method_kw[key[6:]] = value
  1480|         0|            0|            0|  0.00%|
  1481|         0|            0|            0|  0.00%|    def _update_diff_step(self):
  1482|         0|            0|            0|  0.00%|        mx = abs(self.x0).max()
  1483|         0|            0|            0|  0.00%|        mf = abs(self.f0).max()
  1484|         0|            0|            0|  0.00%|        self.omega = self.rdiff * max(1, mx) / max(1, mf)
  1485|         0|            0|            0|  0.00%|
  1486|         0|            0|            0|  0.00%|    def matvec(self, v):
  1487|         0|            0|            0|  0.00%|        nv = norm(v)
  1488|         0|            0|            0|  0.00%|        if nv == 0:
  1489|         0|            0|            0|  0.00%|            return 0*v
  1490|         0|            0|            0|  0.00%|        sc = self.omega / nv
  1491|         0|            0|            0|  0.00%|        r = (self.func(self.x0 + sc*v) - self.f0) / sc
  1492|         0|            0|            0|  0.00%|        if not np.all(np.isfinite(r)) and np.all(np.isfinite(v)):
  1493|         0|            0|            0|  0.00%|            raise ValueError('Function returned non-finite results')
  1494|         0|            0|            0|  0.00%|        return r
  1495|         0|            0|            0|  0.00%|
  1496|         0|            0|            0|  0.00%|    def solve(self, rhs, tol=0):
  1497|         0|            0|            0|  0.00%|        if 'tol' in self.method_kw:
  1498|         0|            0|            0|  0.00%|            sol, info = self.method(self.op, rhs, **self.method_kw)
  1499|         0|            0|            0|  0.00%|        else:
  1500|         0|            0|            0|  0.00%|            sol, info = self.method(self.op, rhs, tol=tol, **self.method_kw)
  1501|         0|            0|            0|  0.00%|        return sol
  1502|         0|            0|            0|  0.00%|
  1503|         0|            0|            0|  0.00%|    def update(self, x, f):
  1504|         0|            0|            0|  0.00%|        self.x0 = x
  1505|         0|            0|            0|  0.00%|        self.f0 = f
  1506|         0|            0|            0|  0.00%|        self._update_diff_step()
  1507|         0|            0|            0|  0.00%|
  1508|         0|            0|            0|  0.00%|        # Update also the preconditioner, if possible
  1509|         0|            0|            0|  0.00%|        if self.preconditioner is not None:
  1510|         0|            0|            0|  0.00%|            if hasattr(self.preconditioner, 'update'):
  1511|         0|            0|            0|  0.00%|                self.preconditioner.update(x, f)
  1512|         0|            0|            0|  0.00%|
  1513|         0|            0|            0|  0.00%|    def setup(self, x, f, func):
  1514|         0|            0|            0|  0.00%|        Jacobian.setup(self, x, f, func)
  1515|         0|            0|            0|  0.00%|        self.x0 = x
  1516|         0|            0|            0|  0.00%|        self.f0 = f
  1517|         0|            0|            0|  0.00%|        self.op = scipy.sparse.linalg.aslinearoperator(self)
  1518|         0|            0|            0|  0.00%|
  1519|         0|            0|            0|  0.00%|        if self.rdiff is None:
  1520|         0|            0|            0|  0.00%|            self.rdiff = np.finfo(x.dtype).eps ** (1./2)
  1521|         0|            0|            0|  0.00%|
  1522|         0|            0|            0|  0.00%|        self._update_diff_step()
  1523|         0|            0|            0|  0.00%|
  1524|         0|            0|            0|  0.00%|        # Setup also the preconditioner, if possible
  1525|         0|            0|            0|  0.00%|        if self.preconditioner is not None:
  1526|         0|            0|            0|  0.00%|            if hasattr(self.preconditioner, 'setup'):
  1527|         0|            0|            0|  0.00%|                self.preconditioner.setup(x, f, func)
  1528|         0|            0|            0|  0.00%|
  1529|         0|            0|            0|  0.00%|
  1530|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1531|         0|            0|            0|  0.00%|# Wrapper functions
  1532|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1533|         0|            0|            0|  0.00%|
  1534|         0|            0|            0|  0.00%|def _nonlin_wrapper(name, jac):
  1535|         0|            0|            0|  0.00%|    """
  1536|         0|            0|            0|  0.00%|    Construct a solver wrapper with given name and Jacobian approx.
  1537|         0|            0|            0|  0.00%|
  1538|         0|            0|            0|  0.00%|    It inspects the keyword arguments of ``jac.__init__``, and allows to
  1539|         0|            0|            0|  0.00%|    use the same arguments in the wrapper function, in addition to the
  1540|         0|            0|            0|  0.00%|    keyword arguments of `nonlin_solve`
  1541|         0|            0|            0|  0.00%|
  1542|         0|            0|            0|  0.00%|    """
  1543|         0|            0|            0|  0.00%|    signature = _getfullargspec(jac.__init__)
  1544|         0|            0|            0|  0.00%|    args, varargs, varkw, defaults, kwonlyargs, kwdefaults, _ = signature
  1545|         0|            0|            0|  0.00%|    kwargs = list(zip(args[-len(defaults):], defaults))
  1546|         0|            0|            0|  0.00%|    kw_str = ", ".join(["%s=%r" % (k, v) for k, v in kwargs])
  1547|         0|            0|            0|  0.00%|    if kw_str:
  1548|         0|            0|            0|  0.00%|        kw_str = ", " + kw_str
  1549|         0|            0|            0|  0.00%|    kwkw_str = ", ".join(["%s=%s" % (k, k) for k, v in kwargs])
  1550|         0|            0|            0|  0.00%|    if kwkw_str:
  1551|         0|            0|            0|  0.00%|        kwkw_str = kwkw_str + ", "
  1552|         0|            0|            0|  0.00%|    if kwonlyargs:
  1553|         0|            0|            0|  0.00%|        raise ValueError('Unexpected signature %s' % signature)
  1554|         0|            0|            0|  0.00%|
  1555|         0|            0|            0|  0.00%|    # Construct the wrapper function so that its keyword arguments
  1556|         0|            0|            0|  0.00%|    # are visible in pydoc.help etc.
  1557|         0|            0|            0|  0.00%|    wrapper = """
  1558|         0|            0|            0|  0.00%|def %(name)s(F, xin, iter=None %(kw)s, verbose=False, maxiter=None,
  1559|         0|            0|            0|  0.00%|             f_tol=None, f_rtol=None, x_tol=None, x_rtol=None,
  1560|         0|            0|            0|  0.00%|             tol_norm=None, line_search='armijo', callback=None, **kw):
  1561|         0|            0|            0|  0.00%|    jac = %(jac)s(%(kwkw)s **kw)
  1562|         0|            0|            0|  0.00%|    return nonlin_solve(F, xin, jac, iter, verbose, maxiter,
  1563|         0|            0|            0|  0.00%|                        f_tol, f_rtol, x_tol, x_rtol, tol_norm, line_search,
  1564|         0|            0|            0|  0.00%|                        callback)
  1565|         0|            0|            0|  0.00%|"""
  1566|         0|            0|            0|  0.00%|
  1567|         0|            0|            0|  0.00%|    wrapper = wrapper % dict(name=name, kw=kw_str, jac=jac.__name__,
  1568|         0|            0|            0|  0.00%|                             kwkw=kwkw_str)
  1569|         0|            0|            0|  0.00%|    ns = {}
  1570|         0|            0|            0|  0.00%|    ns.update(globals())
  1571|         0|            0|            0|  0.00%|    exec(wrapper, ns)
  1572|         0|            0|            0|  0.00%|    func = ns[name]
  1573|         0|            0|            0|  0.00%|    func.__doc__ = jac.__doc__
  1574|         0|            0|            0|  0.00%|    _set_doc(func)
  1575|         0|            0|            0|  0.00%|    return func
  1576|         0|            0|            0|  0.00%|
  1577|         0|            0|            0|  0.00%|
  1578|         0|            0|            0|  0.00%|broyden1 = _nonlin_wrapper('broyden1', BroydenFirst)
  1579|         0|            0|            0|  0.00%|broyden2 = _nonlin_wrapper('broyden2', BroydenSecond)
  1580|         0|            0|            0|  0.00%|anderson = _nonlin_wrapper('anderson', Anderson)
  1581|         0|            0|            0|  0.00%|linearmixing = _nonlin_wrapper('linearmixing', LinearMixing)
  1582|         0|            0|            0|  0.00%|diagbroyden = _nonlin_wrapper('diagbroyden', DiagBroyden)
  1583|         0|            0|            0|  0.00%|excitingmixing = _nonlin_wrapper('excitingmixing', ExcitingMixing)
  1584|         0|            0|            0|  0.00%|newton_krylov = _nonlin_wrapper('newton_krylov', KrylovJacobian)
File: <string>_71
File duration: 2.28882e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.28882e-05|  1.14441e-05|  0.00%|
File: <string>_35
File duration: 2.28882e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.28882e-05|  1.14441e-05|  0.00%|
File: <string>_303
File duration: 2.26498e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.26498e-05|  1.13249e-05|  0.00%|
File: <string>_146
File duration: 2.26498e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.26498e-05|  1.13249e-05|  0.00%|
(call)|         1|  9.53674e-06|  9.53674e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/jit/annotations.py:48 __getitem__
File: <string>_74
File duration: 2.26498e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.26498e-05|  1.13249e-05|  0.00%|
File: <string>_60
File duration: 2.24113e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.24113e-05|  1.12057e-05|  0.00%|
File: <string>_64
File duration: 2.24113e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.24113e-05|  1.12057e-05|  0.00%|
File: <string>_308
File duration: 2.24113e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.24113e-05|  1.12057e-05|  0.00%|
File: <string>_29
File duration: 2.24113e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.24113e-05|  1.12057e-05|  0.00%|
File: <string>_75
File duration: 2.21729e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.21729e-05|  1.10865e-05|  0.00%|
File: <string>_284
File duration: 2.21729e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.21729e-05|  1.10865e-05|  0.00%|
File: <string>_72
File duration: 2.21729e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.21729e-05|  1.10865e-05|  0.00%|
File: <string>_306
File duration: 2.21729e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.21729e-05|  1.10865e-05|  0.00%|
File: <string>_323
File duration: 2.21729e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.21729e-05|  1.10865e-05|  0.00%|
File: <string>_48
File duration: 2.19345e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.19345e-05|  1.09673e-05|  0.00%|
File: <string>_278
File duration: 2.19345e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.19345e-05|  1.09673e-05|  0.00%|
File: <string>_285
File duration: 2.19345e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.19345e-05|  1.09673e-05|  0.00%|
File: <string>_54
File duration: 2.19345e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.19345e-05|  1.09673e-05|  0.00%|
File: <string>_302
File duration: 2.19345e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.19345e-05|  1.09673e-05|  0.00%|
File: <string>_63
File duration: 2.19345e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.19345e-05|  1.09673e-05|  0.00%|
File: <string>_279
File duration: 2.19345e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.19345e-05|  1.09673e-05|  0.00%|
File: <string>_296
File duration: 2.19345e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.19345e-05|  1.09673e-05|  0.00%|
File: <string>_132
File duration: 2.19345e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.19345e-05|  1.09673e-05|  0.00%|
(call)|         1|  9.77516e-06|  9.77516e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/jit/annotations.py:48 __getitem__
File: <string>_340
File duration: 2.19345e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.19345e-05|  1.09673e-05|  0.00%|
File: <string>_307
File duration: 2.19345e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.19345e-05|  1.09673e-05|  0.00%|
File: <string>_321
File duration: 2.16961e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.16961e-05|   1.0848e-05|  0.00%|
File: <string>_55
File duration: 2.16961e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.16961e-05|   1.0848e-05|  0.00%|
File: <string>_313
File duration: 2.16961e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.16961e-05|   1.0848e-05|  0.00%|
File: <string>_280
File duration: 2.16961e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.16961e-05|   1.0848e-05|  0.00%|
File: <string>_327
File duration: 2.16961e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.16961e-05|   1.0848e-05|  0.00%|
File: <string>_283
File duration: 2.16961e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.16961e-05|   1.0848e-05|  0.00%|
File: <string>_326
File duration: 2.16961e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.16961e-05|   1.0848e-05|  0.00%|
File: <string>_287
File duration: 2.16961e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.16961e-05|   1.0848e-05|  0.00%|
File: <string>_291
File duration: 2.16961e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.16961e-05|   1.0848e-05|  0.00%|
File: <string>_333
File duration: 2.16961e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.16961e-05|   1.0848e-05|  0.00%|
File: <string>_310
File duration: 2.16961e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.16961e-05|   1.0848e-05|  0.00%|
File: <string>_57
File duration: 2.14577e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.14577e-05|  1.07288e-05|  0.00%|
File: <string>_66
File duration: 2.14577e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.14577e-05|  1.07288e-05|  0.00%|
File: <string>_65
File duration: 2.14577e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.14577e-05|  1.07288e-05|  0.00%|
File: <string>_319
File duration: 2.14577e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.14577e-05|  1.07288e-05|  0.00%|
File: <string>_8
File duration: 2.14577e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.14577e-05|  1.07288e-05|  0.00%|
File: <string>_9
File duration: 2.14577e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.14577e-05|  1.07288e-05|  0.00%|
File: <string>_69
File duration: 2.14577e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.14577e-05|  1.07288e-05|  0.00%|
File: <string>_286
File duration: 2.14577e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.14577e-05|  1.07288e-05|  0.00%|
File: <string>_301
File duration: 2.14577e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.14577e-05|  1.07288e-05|  0.00%|
File: <string>_88
File duration: 2.14577e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.14577e-05|  1.07288e-05|  0.00%|
File: <string>_49
File duration: 2.12193e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.12193e-05|  1.06096e-05|  0.00%|
File: <string>_61
File duration: 2.12193e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.12193e-05|  1.06096e-05|  0.00%|
File: <string>_292
File duration: 2.12193e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.12193e-05|  1.06096e-05|  0.00%|
File: <string>_59
File duration: 2.12193e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.12193e-05|  1.06096e-05|  0.00%|
File: <string>_328
File duration: 2.12193e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.12193e-05|  1.06096e-05|  0.00%|
File: <string>_58
File duration: 2.12193e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.12193e-05|  1.06096e-05|  0.00%|
File: <string>_316
File duration: 2.12193e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.12193e-05|  1.06096e-05|  0.00%|
File: <string>_312
File duration: 2.12193e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.12193e-05|  1.06096e-05|  0.00%|
File: <string>_300
File duration: 2.12193e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.12193e-05|  1.06096e-05|  0.00%|
File: <string>_318
File duration: 2.12193e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.12193e-05|  1.06096e-05|  0.00%|
File: <string>_289
File duration: 2.12193e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.12193e-05|  1.06096e-05|  0.00%|
File: <string>_315
File duration: 2.09808e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.09808e-05|  1.04904e-05|  0.00%|
File: <string>_298
File duration: 2.07424e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.07424e-05|  1.03712e-05|  0.00%|
File: <string>_309
File duration: 2.07424e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.07424e-05|  1.03712e-05|  0.00%|
File: <string>_50
File duration: 2.07424e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.07424e-05|  1.03712e-05|  0.00%|
File: <string>_89
File duration: 2.0504e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|   2.0504e-05|   1.0252e-05|  0.00%|
File: <string>_331
File duration: 2.0504e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|   2.0504e-05|   1.0252e-05|  0.00%|
File: <string>_53
File duration: 2.0504e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|   2.0504e-05|   1.0252e-05|  0.00%|
File: <string>_332
File duration: 2.0504e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|   2.0504e-05|   1.0252e-05|  0.00%|
File: <string>_324
File duration: 2.02656e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.02656e-05|  1.01328e-05|  0.00%|
File: <string>_317
File duration: 2.02656e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.02656e-05|  1.01328e-05|  0.00%|
File: <string>_325
File duration: 2.00272e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.00272e-05|  1.00136e-05|  0.00%|
File: <decorator-gen-8>
File duration: 2.00272e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.00272e-05|  1.00136e-05|  0.00%|
File: <string>_330
File duration: 2.00272e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.00272e-05|  1.00136e-05|  0.00%|
File: <string>_299
File duration: 2.00272e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.00272e-05|  1.00136e-05|  0.00%|
File: <string>_329
File duration: 2.00272e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.00272e-05|  1.00136e-05|  0.00%|
File: <decorator-gen-4>
File duration: 1.93119e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.93119e-05|  9.65595e-06|  0.00%|
File: <decorator-gen-2>
File duration: 1.90735e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.90735e-05|  9.53674e-06|  0.00%|
File: <decorator-gen-6>
File duration: 1.88351e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.88351e-05|  9.41753e-06|  0.00%|
File: <decorator-gen-1>
File duration: 1.88351e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.88351e-05|  9.41753e-06|  0.00%|
File: <decorator-gen-3>
File duration: 1.85966e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.85966e-05|  9.29832e-06|  0.00%|
File: <decorator-gen-5>
File duration: 1.85966e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.85966e-05|  9.29832e-06|  0.00%|
File: <attrs generated hash attr._make.Factory>
File duration: 1.81198e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.81198e-05|  9.05991e-06|  0.00%|def __hash__(self):
     2|         0|            0|            0|  0.00%|        return hash((
     3|         0|            0|            0|  0.00%|                5393907198784260284,
     4|         0|            0|            0|  0.00%|                self.factory,
     5|         0|            0|            0|  0.00%|                self.takes_self,
     6|         0|            0|            0|  0.00%|            ))
File: <attrs generated hash jsonschema._types.TypeChecker>
File duration: 1.81198e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.81198e-05|  9.05991e-06|  0.00%|def __hash__(self):
     2|         0|            0|            0|  0.00%|        return hash((
     3|         0|            0|            0|  0.00%|                4542480909573231856,
     4|         0|            0|            0|  0.00%|                self._type_checkers,
     5|         0|            0|            0|  0.00%|            ))
File: <decorator-gen-9>
File duration: 1.78814e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.78814e-05|   8.9407e-06|  0.00%|
File: <attrs generated init attr.validators._DeepMapping>
File duration: 1.78814e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.78814e-05|   8.9407e-06|  0.00%|def __init__(self, key_validator, value_validator, mapping_validator=attr_dict['mapping_validator'].default):
     2|         0|            0|            0|  0.00%|    self.key_validator = key_validator
     3|         0|            0|            0|  0.00%|    self.value_validator = value_validator
     4|         0|            0|            0|  0.00%|    self.mapping_validator = mapping_validator
     5|         0|            0|            0|  0.00%|    if _config._run_validators is True:
     6|         0|            0|            0|  0.00%|        __attr_validator_key_validator(self, __attr_key_validator, self.key_validator)
     7|         0|            0|            0|  0.00%|        __attr_validator_value_validator(self, __attr_value_validator, self.value_validator)
     8|         0|            0|            0|  0.00%|        __attr_validator_mapping_validator(self, __attr_mapping_validator, self.mapping_validator)
File: <attrs generated init attr.validators._DeepIterable>
File duration: 1.78814e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.78814e-05|   8.9407e-06|  0.00%|def __init__(self, member_validator, iterable_validator=attr_dict['iterable_validator'].default):
     2|         0|            0|            0|  0.00%|    self.member_validator = member_validator
     3|         0|            0|            0|  0.00%|    self.iterable_validator = iterable_validator
     4|         0|            0|            0|  0.00%|    if _config._run_validators is True:
     5|         0|            0|            0|  0.00%|        __attr_validator_member_validator(self, __attr_member_validator, self.member_validator)
     6|         0|            0|            0|  0.00%|        __attr_validator_iterable_validator(self, __attr_iterable_validator, self.iterable_validator)
File: <attrs generated eq attr._make._AndValidator>
File duration: 1.78814e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.78814e-05|   8.9407e-06|  0.00%|def __eq__(self, other):
     2|         0|            0|            0|  0.00%|    if other.__class__ is not self.__class__:
     3|         0|            0|            0|  0.00%|        return NotImplemented
     4|         0|            0|            0|  0.00%|    return  (
     5|         0|            0|            0|  0.00%|        self._validators,
     6|         0|            0|            0|  0.00%|    ) == (
     7|         0|            0|            0|  0.00%|        other._validators,
     8|         0|            0|            0|  0.00%|    )
File: <attrs generated eq attr._make.Factory>
File duration: 1.78814e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.78814e-05|   8.9407e-06|  0.00%|def __eq__(self, other):
     2|         0|            0|            0|  0.00%|    if other.__class__ is not self.__class__:
     3|         0|            0|            0|  0.00%|        return NotImplemented
     4|         0|            0|            0|  0.00%|    return  (
     5|         0|            0|            0|  0.00%|        self.factory,
     6|         0|            0|            0|  0.00%|        self.takes_self,
     7|         0|            0|            0|  0.00%|    ) == (
     8|         0|            0|            0|  0.00%|        other.factory,
     9|         0|            0|            0|  0.00%|        other.takes_self,
    10|         0|            0|            0|  0.00%|    )
File: <attrs generated hash attr.validators._DeepIterable>
File duration: 1.7643e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|   1.7643e-05|  8.82149e-06|  0.00%|def __hash__(self):
     2|         0|            0|            0|  0.00%|        return hash((
     3|         0|            0|            0|  0.00%|                2105923963505359537,
     4|         0|            0|            0|  0.00%|                self.member_validator,
     5|         0|            0|            0|  0.00%|                self.iterable_validator,
     6|         0|            0|            0|  0.00%|            ))
File: <attrs generated eq attr.validators._DeepIterable>
File duration: 1.7643e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|   1.7643e-05|  8.82149e-06|  0.00%|def __eq__(self, other):
     2|         0|            0|            0|  0.00%|    if other.__class__ is not self.__class__:
     3|         0|            0|            0|  0.00%|        return NotImplemented
     4|         0|            0|            0|  0.00%|    return  (
     5|         0|            0|            0|  0.00%|        self.member_validator,
     6|         0|            0|            0|  0.00%|        self.iterable_validator,
     7|         0|            0|            0|  0.00%|    ) == (
     8|         0|            0|            0|  0.00%|        other.member_validator,
     9|         0|            0|            0|  0.00%|        other.iterable_validator,
    10|         0|            0|            0|  0.00%|    )
File: <attrs generated hash attr.validators._InstanceOfValidator>
File duration: 1.7643e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|   1.7643e-05|  8.82149e-06|  0.00%|def __hash__(self):
     2|         0|            0|            0|  0.00%|        return hash((
     3|         0|            0|            0|  0.00%|                3370215652773262169,
     4|         0|            0|            0|  0.00%|                self.type,
     5|         0|            0|            0|  0.00%|            ))
File: <attrs generated eq attr._make._CountingAttr>
File duration: 1.7643e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|   1.7643e-05|  8.82149e-06|  0.00%|def __eq__(self, other):
     2|         0|            0|            0|  0.00%|    if other.__class__ is not self.__class__:
     3|         0|            0|            0|  0.00%|        return NotImplemented
     4|         0|            0|            0|  0.00%|    return  (
     5|         0|            0|            0|  0.00%|        self.counter,
     6|         0|            0|            0|  0.00%|        self._default,
     7|         0|            0|            0|  0.00%|        self.repr,
     8|         0|            0|            0|  0.00%|        self.eq,
     9|         0|            0|            0|  0.00%|        self.order,
    10|         0|            0|            0|  0.00%|        self.hash,
    11|         0|            0|            0|  0.00%|        self.init,
    12|         0|            0|            0|  0.00%|        self.metadata,
    13|         0|            0|            0|  0.00%|    ) == (
    14|         0|            0|            0|  0.00%|        other.counter,
    15|         0|            0|            0|  0.00%|        other._default,
    16|         0|            0|            0|  0.00%|        other.repr,
    17|         0|            0|            0|  0.00%|        other.eq,
    18|         0|            0|            0|  0.00%|        other.order,
    19|         0|            0|            0|  0.00%|        other.hash,
    20|         0|            0|            0|  0.00%|        other.init,
    21|         0|            0|            0|  0.00%|        other.metadata,
    22|         0|            0|            0|  0.00%|    )
File: <attrs generated hash attr.validators._ProvidesValidator>
File duration: 1.74046e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.74046e-05|  8.70228e-06|  0.00%|def __hash__(self):
     2|         0|            0|            0|  0.00%|        return hash((
     3|         0|            0|            0|  0.00%|                1093595940065610104,
     4|         0|            0|            0|  0.00%|                self.interface,
     5|         0|            0|            0|  0.00%|            ))
File: <attrs generated eq attr.validators._ProvidesValidator>
File duration: 1.74046e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.74046e-05|  8.70228e-06|  0.00%|def __eq__(self, other):
     2|         0|            0|            0|  0.00%|    if other.__class__ is not self.__class__:
     3|         0|            0|            0|  0.00%|        return NotImplemented
     4|         0|            0|            0|  0.00%|    return  (
     5|         0|            0|            0|  0.00%|        self.interface,
     6|         0|            0|            0|  0.00%|    ) == (
     7|         0|            0|            0|  0.00%|        other.interface,
     8|         0|            0|            0|  0.00%|    )
File: <attrs generated eq attr.validators._DeepMapping>
File duration: 1.74046e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.74046e-05|  8.70228e-06|  0.00%|def __eq__(self, other):
     2|         0|            0|            0|  0.00%|    if other.__class__ is not self.__class__:
     3|         0|            0|            0|  0.00%|        return NotImplemented
     4|         0|            0|            0|  0.00%|    return  (
     5|         0|            0|            0|  0.00%|        self.key_validator,
     6|         0|            0|            0|  0.00%|        self.value_validator,
     7|         0|            0|            0|  0.00%|        self.mapping_validator,
     8|         0|            0|            0|  0.00%|    ) == (
     9|         0|            0|            0|  0.00%|        other.key_validator,
    10|         0|            0|            0|  0.00%|        other.value_validator,
    11|         0|            0|            0|  0.00%|        other.mapping_validator,
    12|         0|            0|            0|  0.00%|    )
File: <attrs generated hash attr._make._AndValidator>
File duration: 1.74046e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.74046e-05|  8.70228e-06|  0.00%|def __hash__(self):
     2|         0|            0|            0|  0.00%|        return hash((
     3|         0|            0|            0|  0.00%|                -1864441214420063301,
     4|         0|            0|            0|  0.00%|                self._validators,
     5|         0|            0|            0|  0.00%|            ))
File: <attrs generated eq attr.validators._InValidator>
File duration: 1.74046e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.74046e-05|  8.70228e-06|  0.00%|def __eq__(self, other):
     2|         0|            0|            0|  0.00%|    if other.__class__ is not self.__class__:
     3|         0|            0|            0|  0.00%|        return NotImplemented
     4|         0|            0|            0|  0.00%|    return  (
     5|         0|            0|            0|  0.00%|        self.options,
     6|         0|            0|            0|  0.00%|    ) == (
     7|         0|            0|            0|  0.00%|        other.options,
     8|         0|            0|            0|  0.00%|    )
File: <attrs generated eq jsonschema.exceptions.RefResolutionError>
File duration: 1.74046e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.74046e-05|  8.70228e-06|  0.00%|def __eq__(self, other):
     2|         0|            0|            0|  0.00%|    if other.__class__ is not self.__class__:
     3|         0|            0|            0|  0.00%|        return NotImplemented
     4|         0|            0|            0|  0.00%|    return  (
     5|         0|            0|            0|  0.00%|        self._cause,
     6|         0|            0|            0|  0.00%|    ) == (
     7|         0|            0|            0|  0.00%|        other._cause,
     8|         0|            0|            0|  0.00%|    )
File: <attrs generated hash attr.validators._MatchesReValidator>
File duration: 1.71661e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.71661e-05|  8.58307e-06|  0.00%|def __hash__(self):
     2|         0|            0|            0|  0.00%|        return hash((
     3|         0|            0|            0|  0.00%|                -4271941862535552134,
     4|         0|            0|            0|  0.00%|                self.regex,
     5|         0|            0|            0|  0.00%|                self.flags,
     6|         0|            0|            0|  0.00%|                self.match_func,
     7|         0|            0|            0|  0.00%|            ))
File: <attrs generated eq attr._make.Attribute>
File duration: 1.71661e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.71661e-05|  8.58307e-06|  0.00%|def __eq__(self, other):
     2|         0|            0|            0|  0.00%|    if other.__class__ is not self.__class__:
     3|         0|            0|            0|  0.00%|        return NotImplemented
     4|         0|            0|            0|  0.00%|    return  (
     5|         0|            0|            0|  0.00%|        self.name,
     6|         0|            0|            0|  0.00%|        self.default,
     7|         0|            0|            0|  0.00%|        self.validator,
     8|         0|            0|            0|  0.00%|        self.repr,
     9|         0|            0|            0|  0.00%|        self.eq,
    10|         0|            0|            0|  0.00%|        self.order,
    11|         0|            0|            0|  0.00%|        self.hash,
    12|         0|            0|            0|  0.00%|        self.init,
    13|         0|            0|            0|  0.00%|        self.metadata,
    14|         0|            0|            0|  0.00%|        self.type,
    15|         0|            0|            0|  0.00%|        self.converter,
    16|         0|            0|            0|  0.00%|        self.kw_only,
    17|         0|            0|            0|  0.00%|    ) == (
    18|         0|            0|            0|  0.00%|        other.name,
    19|         0|            0|            0|  0.00%|        other.default,
    20|         0|            0|            0|  0.00%|        other.validator,
    21|         0|            0|            0|  0.00%|        other.repr,
    22|         0|            0|            0|  0.00%|        other.eq,
    23|         0|            0|            0|  0.00%|        other.order,
    24|         0|            0|            0|  0.00%|        other.hash,
    25|         0|            0|            0|  0.00%|        other.init,
    26|         0|            0|            0|  0.00%|        other.metadata,
    27|         0|            0|            0|  0.00%|        other.type,
    28|         0|            0|            0|  0.00%|        other.converter,
    29|         0|            0|            0|  0.00%|        other.kw_only,
    30|         0|            0|            0|  0.00%|    )
File: <attrs generated hash attr.validators._DeepMapping>
File duration: 1.71661e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.71661e-05|  8.58307e-06|  0.00%|def __hash__(self):
     2|         0|            0|            0|  0.00%|        return hash((
     3|         0|            0|            0|  0.00%|                6882582680236537071,
     4|         0|            0|            0|  0.00%|                self.key_validator,
     5|         0|            0|            0|  0.00%|                self.value_validator,
     6|         0|            0|            0|  0.00%|                self.mapping_validator,
     7|         0|            0|            0|  0.00%|            ))
File: <attrs generated eq attr.validators._InstanceOfValidator>
File duration: 1.71661e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.71661e-05|  8.58307e-06|  0.00%|def __eq__(self, other):
     2|         0|            0|            0|  0.00%|    if other.__class__ is not self.__class__:
     3|         0|            0|            0|  0.00%|        return NotImplemented
     4|         0|            0|            0|  0.00%|    return  (
     5|         0|            0|            0|  0.00%|        self.type,
     6|         0|            0|            0|  0.00%|    ) == (
     7|         0|            0|            0|  0.00%|        other.type,
     8|         0|            0|            0|  0.00%|    )
File: <attrs generated eq attr.validators._IsCallableValidator>
File duration: 1.71661e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.71661e-05|  8.58307e-06|  0.00%|def __eq__(self, other):
     2|         0|            0|            0|  0.00%|    if other.__class__ is not self.__class__:
     3|         0|            0|            0|  0.00%|        return NotImplemented
     4|         0|            0|            0|  0.00%|    return True
File: <attrs generated hash jsonschema.exceptions.RefResolutionError>
File duration: 1.71661e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.71661e-05|  8.58307e-06|  0.00%|def __hash__(self):
     2|         0|            0|            0|  0.00%|        return hash((
     3|         0|            0|            0|  0.00%|                8502259353471090546,
     4|         0|            0|            0|  0.00%|                self._cause,
     5|         0|            0|            0|  0.00%|            ))
File: <attrs generated hash attr.validators._IsCallableValidator>
File duration: 1.69277e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.69277e-05|  8.46386e-06|  0.00%|def __hash__(self):
     2|         0|            0|            0|  0.00%|        return hash((
     3|         0|            0|            0|  0.00%|                8469373335100983428,
     4|         0|            0|            0|  0.00%|            ))
File: <attrs generated hash attr.validators._OptionalValidator>
File duration: 1.69277e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.69277e-05|  8.46386e-06|  0.00%|def __hash__(self):
     2|         0|            0|            0|  0.00%|        return hash((
     3|         0|            0|            0|  0.00%|                -8979033221112557317,
     4|         0|            0|            0|  0.00%|                self.validator,
     5|         0|            0|            0|  0.00%|            ))
File: <attrs generated eq attr.validators._MatchesReValidator>
File duration: 1.69277e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.69277e-05|  8.46386e-06|  0.00%|def __eq__(self, other):
     2|         0|            0|            0|  0.00%|    if other.__class__ is not self.__class__:
     3|         0|            0|            0|  0.00%|        return NotImplemented
     4|         0|            0|            0|  0.00%|    return  (
     5|         0|            0|            0|  0.00%|        self.regex,
     6|         0|            0|            0|  0.00%|        self.flags,
     7|         0|            0|            0|  0.00%|        self.match_func,
     8|         0|            0|            0|  0.00%|    ) == (
     9|         0|            0|            0|  0.00%|        other.regex,
    10|         0|            0|            0|  0.00%|        other.flags,
    11|         0|            0|            0|  0.00%|        other.match_func,
    12|         0|            0|            0|  0.00%|    )
File: <attrs generated hash attr.validators._InValidator>
File duration: 1.69277e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.69277e-05|  8.46386e-06|  0.00%|def __hash__(self):
     2|         0|            0|            0|  0.00%|        return hash((
     3|         0|            0|            0|  0.00%|                8054298972478467570,
     4|         0|            0|            0|  0.00%|                self.options,
     5|         0|            0|            0|  0.00%|            ))
File: <decorator-gen-0>
File duration: 1.66893e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.66893e-05|  8.34465e-06|  0.00%|
File: <attrs generated init jsonschema.exceptions.RefResolutionError>
File duration: 1.64509e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.64509e-05|  8.22544e-06|  0.00%|def __init__(self, cause):
     2|         0|            0|            0|  0.00%|    self._cause = cause
File: <attrs generated hash attr._make.Attribute>
File duration: 1.64509e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.64509e-05|  8.22544e-06|  0.00%|def __hash__(self):
     2|         0|            0|            0|  0.00%|        return hash((
     3|         0|            0|            0|  0.00%|                -7337551026719914074,
     4|         0|            0|            0|  0.00%|                self.name,
     5|         0|            0|            0|  0.00%|                self.default,
     6|         0|            0|            0|  0.00%|                self.validator,
     7|         0|            0|            0|  0.00%|                self.repr,
     8|         0|            0|            0|  0.00%|                self.eq,
     9|         0|            0|            0|  0.00%|                self.order,
    10|         0|            0|            0|  0.00%|                self.hash,
    11|         0|            0|            0|  0.00%|                self.init,
    12|         0|            0|            0|  0.00%|                self.type,
    13|         0|            0|            0|  0.00%|                self.converter,
    14|         0|            0|            0|  0.00%|                self.kw_only,
    15|         0|            0|            0|  0.00%|            ))
File: <attrs generated init attr.validators._InstanceOfValidator>
File duration: 1.62125e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.62125e-05|  8.10623e-06|  0.00%|def __init__(self, type):
     2|         0|            0|            0|  0.00%|    self.type = type
File: <attrs generated init attr.validators._MatchesReValidator>
File duration: 1.5974e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|   1.5974e-05|  7.98702e-06|  0.00%|def __init__(self, regex, flags, match_func):
     2|         0|            0|            0|  0.00%|    _inst_dict = self.__dict__
     3|         0|            0|            0|  0.00%|    _inst_dict['regex'] = regex
     4|         0|            0|            0|  0.00%|    _inst_dict['flags'] = flags
     5|         0|            0|            0|  0.00%|    _inst_dict['match_func'] = match_func
File: <attrs generated init attr.validators._InValidator>
File duration: 1.5974e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|   1.5974e-05|  7.98702e-06|  0.00%|def __init__(self, options):
     2|         0|            0|            0|  0.00%|    self.options = options
File: <attrs generated init attr.validators._ProvidesValidator>
File duration: 1.54972e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.54972e-05|   7.7486e-06|  0.00%|def __init__(self, interface):
     2|         0|            0|            0|  0.00%|    self.interface = interface
File: <attrs generated init attr._make._AndValidator>
File duration: 1.38283e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.38283e-05|  6.91414e-06|  0.00%|def __init__(self, validators):
     2|         0|            0|            0|  0.00%|    self._validators = validators
