Command line: test_speed_GP.py
Total duration: 367.663s
File: <frozen importlib._bootstrap>
File duration: 16.5991s (4.51%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         0|            0|            0|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         0|            0|            0|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         0|            0|            0|  0.00%|
     9|         0|            0|            0|  0.00%|
    10|         0|            0|            0|  0.00%|
    11|         0|            0|            0|  0.00%|
    12|         0|            0|            0|  0.00%|
    13|         0|            0|            0|  0.00%|
    14|         0|            0|            0|  0.00%|
    15|         0|            0|            0|  0.00%|
    16|         0|            0|            0|  0.00%|
    17|         0|            0|            0|  0.00%|
    18|         0|            0|            0|  0.00%|
    19|         0|            0|            0|  0.00%|
    20|         0|            0|            0|  0.00%|
    21|         0|            0|            0|  0.00%|
    22|         0|            0|            0|  0.00%|
    23|         0|            0|            0|  0.00%|
    24|         0|            0|            0|  0.00%|
    25|         0|            0|            0|  0.00%|
    26|         0|            0|            0|  0.00%|
    27|         0|            0|            0|  0.00%|
    28|         0|            0|            0|  0.00%|
    29|         0|            0|            0|  0.00%|
    30|         0|            0|            0|  0.00%|
    31|         0|            0|            0|  0.00%|
    32|         0|            0|            0|  0.00%|
    33|         0|            0|            0|  0.00%|
    34|         0|            0|            0|  0.00%|
    35|      2856|   0.00654626|  2.29211e-06|  0.00%|
    36|      2856|    0.0132716|  4.64691e-06|  0.00%|
    37|         0|            0|            0|  0.00%|
    38|         0|            0|            0|  0.00%|
    39|         0|            0|            0|  0.00%|
    40|         0|            0|            0|  0.00%|
    41|         0|            0|            0|  0.00%|
    42|         0|            0|            0|  0.00%|
    43|         0|            0|            0|  0.00%|
    44|         0|            0|            0|  0.00%|
    45|         0|            0|            0|  0.00%|
    46|         0|            0|            0|  0.00%|
    47|         0|            0|            0|  0.00%|
    48|         0|            0|            0|  0.00%|
    49|         0|            0|            0|  0.00%|
    50|         0|            0|            0|  0.00%|
    51|         0|            0|            0|  0.00%|
    52|         0|            0|            0|  0.00%|
    53|         0|            0|            0|  0.00%|
    54|         0|            0|            0|  0.00%|
    55|         0|            0|            0|  0.00%|
    56|         0|            0|            0|  0.00%|
    57|         0|            0|            0|  0.00%|
    58|     39156|     0.107317|  2.74077e-06|  0.03%|
    59|     39156|     0.194911|  4.97781e-06|  0.05%|
    60|     39156|     0.157905|  4.03272e-06|  0.04%|
    61|     39156|      0.13449|  3.43474e-06|  0.04%|
    62|     39156|     0.135305|  3.45555e-06|  0.04%|
    63|     39156|     0.137471|  3.51087e-06|  0.04%|
    64|     39156|     0.136428|  3.48422e-06|  0.04%|
    65|         0|            0|            0|  0.00%|
    66|         0|            0|            0|  0.00%|
    67|         0|            0|            0|  0.00%|
    68|         0|            0|            0|  0.00%|
    69|         0|            0|            0|  0.00%|
    70|         0|            0|            0|  0.00%|
    71|         0|            0|            0|  0.00%|
    72|         0|            0|            0|  0.00%|
    73|         0|            0|            0|  0.00%|
    74|         0|            0|            0|  0.00%|
    75|         0|            0|            0|  0.00%|
    76|         0|            0|            0|  0.00%|
    77|         0|            0|            0|  0.00%|
    78|     41599|      0.12989|  3.12244e-06|  0.04%|
    79|         0|            0|            0|  0.00%|
    80|         0|            0|            0|  0.00%|
    81|         0|            0|            0|  0.00%|
    82|         0|            0|            0|  0.00%|
    83|         0|            0|            0|  0.00%|
    84|     41599|     0.154439|  3.71256e-06|  0.04%|
    85|     41599|      0.16276|  3.91259e-06|  0.04%|
    86|     41599|     0.139235|  3.34706e-06|  0.04%|
    87|     41599|      0.13907|   3.3431e-06|  0.04%|
    88|     41599|     0.179649|   4.3186e-06|  0.05%|
    89|     41599|     0.148514|  3.57012e-06|  0.04%|
    90|     41599|     0.150917|   3.6279e-06|  0.04%|
    91|     41599|     0.157481|  3.78569e-06|  0.04%|
    92|     41599|     0.157084|  3.77614e-06|  0.04%|
    93|         0|            0|            0|  0.00%|
    94|         0|            0|            0|  0.00%|
    95|         0|            0|            0|  0.00%|
    96|         0|            0|            0|  0.00%|
    97|         0|            0|            0|  0.00%|
    98|         0|            0|            0|  0.00%|
    99|         0|            0|            0|  0.00%|
   100|         0|            0|            0|  0.00%|
   101|     41599|      0.15276|   3.6722e-06|  0.04%|
   102|         0|            0|            0|  0.00%|
   103|     41599|     0.104667|  2.51609e-06|  0.03%|
   104|     41599|     0.155418|  3.73611e-06|  0.04%|
   105|     41599|     0.152267|  3.66036e-06|  0.04%|
   106|     41599|     0.159376|  3.83125e-06|  0.04%|
   107|         0|            0|            0|  0.00%|
   108|     41599|      0.15069|  3.62245e-06|  0.04%|
   109|     41599|     0.163788|  3.93731e-06|  0.04%|
   110|     41599|      0.14492|  3.48375e-06|  0.04%|
   111|     39156|     0.133664|  3.41362e-06|  0.04%|
   112|     39156|     0.152616|  3.89765e-06|  0.04%|
   113|         0|            0|            0|  0.00%|
   114|         0|            0|            0|  0.00%|
   115|         0|            0|            0|  0.00%|
   116|         0|            0|            0|  0.00%|
   117|         0|            0|            0|  0.00%|
   118|         0|            0|            0|  0.00%|
   119|         0|            0|            0|  0.00%|
   120|         0|            0|            0|  0.00%|
   121|         0|            0|            0|  0.00%|
   122|         0|            0|            0|  0.00%|
   123|         0|            0|            0|  0.00%|
   124|         0|            0|            0|  0.00%|
   125|         0|            0|            0|  0.00%|
   126|         0|            0|            0|  0.00%|
   127|         0|            0|            0|  0.00%|
   128|         0|            0|            0|  0.00%|
   129|         0|            0|            0|  0.00%|
   130|         0|            0|            0|  0.00%|
   131|         0|            0|            0|  0.00%|
   132|         0|            0|            0|  0.00%|
   133|         0|            0|            0|  0.00%|
   134|         0|            0|            0|  0.00%|
   135|         0|            0|            0|  0.00%|
   136|         0|            0|            0|  0.00%|
   137|         0|            0|            0|  0.00%|
   138|         0|            0|            0|  0.00%|
   139|         0|            0|            0|  0.00%|
   140|         0|            0|            0|  0.00%|
   141|         0|            0|            0|  0.00%|
   142|         0|            0|            0|  0.00%|
   143|     21207|    0.0586603|  2.76608e-06|  0.02%|
   144|     21207|     0.088721|  4.18357e-06|  0.02%|
   145|     21207|    0.0914767|  4.31351e-06|  0.02%|
   146|         0|            0|            0|  0.00%|
   147|     21207|    0.0525825|  2.47949e-06|  0.01%|
   148|     21207|     0.238024|  1.12239e-05|  0.06%|
(call)|     21207|      2.37276|  0.000111885|  0.65%|# <frozen importlib._bootstrap>:157 _get_module_lock
   149|     21207|      0.22571|  1.06432e-05|  0.06%|
(call)|     21207|     0.868465|  4.09518e-05|  0.24%|# <frozen importlib._bootstrap>:78 acquire
   150|         0|            0|            0|  0.00%|
   151|     21207|    0.0624356|   2.9441e-06|  0.02%|
   152|     21207|     0.242772|  1.14477e-05|  0.07%|
(call)|     21207|     0.715057|   3.3718e-05|  0.19%|# <frozen importlib._bootstrap>:103 release
   153|         0|            0|            0|  0.00%|
   154|         0|            0|            0|  0.00%|
   155|         0|            0|            0|  0.00%|
   156|         0|            0|            0|  0.00%|
   157|     41599|      0.50176|  1.20618e-05|  0.14%|
   158|         0|            0|            0|  0.00%|
   159|         0|            0|            0|  0.00%|
   160|         0|            0|            0|  0.00%|
   161|         0|            0|            0|  0.00%|
   162|         0|            0|            0|  0.00%|
   163|     41599|     0.202645|  4.87138e-06|  0.06%|
   164|     41599|     0.157794|  3.79322e-06|  0.04%|
   165|     41599|     0.151489|  3.64164e-06|  0.04%|
   166|     41599|     0.249712|  6.00285e-06|  0.07%|
   167|     39156|     0.175186|  4.47405e-06|  0.05%|
   168|     39156|     0.174501|  4.45656e-06|  0.05%|
   169|         0|            0|            0|  0.00%|
   170|     41599|     0.161476|  3.88172e-06|  0.04%|
   171|     39156|     0.146191|  3.73356e-06|  0.04%|
   172|         0|            0|            0|  0.00%|
   173|         0|            0|            0|  0.00%|
   174|     39156|     0.446723|  1.14088e-05|  0.12%|
(call)|     39156|      1.00383|  2.56367e-05|  0.27%|# <frozen importlib._bootstrap>:58 __init__
   175|         0|            0|            0|  0.00%|
   176|     78312|     0.264708|  3.38018e-06|  0.07%|
   177|     39156|     0.159947|  4.08486e-06|  0.04%|
   178|     39156|     0.133011|  3.39695e-06|  0.04%|
   179|         0|            0|            0|  0.00%|
   180|         0|            0|            0|  0.00%|
   181|         0|            0|            0|  0.00%|
   182|     39156|     0.138354|  3.53339e-06|  0.04%|
   183|     39156|     0.142673|  3.64371e-06|  0.04%|
   184|         0|            0|            0|  0.00%|
   185|     39156|     0.150064|  3.83247e-06|  0.04%|
   186|         0|            0|            0|  0.00%|
   187|     39156|     0.180717|  4.61531e-06|  0.05%|
   188|         0|            0|            0|  0.00%|
   189|     41599|     0.157639|  3.78949e-06|  0.04%|
   190|         0|            0|            0|  0.00%|
   191|     41599|     0.151967|  3.65314e-06|  0.04%|
   192|         0|            0|            0|  0.00%|
   193|         0|            0|            0|  0.00%|
   194|     20392|    0.0900176|  4.41436e-06|  0.02%|
   195|         0|            0|            0|  0.00%|
   196|         0|            0|            0|  0.00%|
   197|         0|            0|            0|  0.00%|
   198|         0|            0|            0|  0.00%|
   199|         0|            0|            0|  0.00%|
   200|     20392|      0.22178|  1.08758e-05|  0.06%|
(call)|     20392|      1.65354|  8.10877e-05|  0.45%|# <frozen importlib._bootstrap>:157 _get_module_lock
   201|     20392|    0.0689242|  3.37996e-06|  0.02%|
   202|     20392|     0.236221|   1.1584e-05|  0.06%|
(call)|     20392|     0.803333|  3.93945e-05|  0.22%|# <frozen importlib._bootstrap>:78 acquire
   203|         0|            0|            0|  0.00%|
   204|         0|            0|            0|  0.00%|
   205|         0|            0|            0|  0.00%|
   206|         0|            0|            0|  0.00%|
   207|         0|            0|            0|  0.00%|
   208|     20392|     0.221062|  1.08406e-05|  0.06%|
(call)|     20392|      0.60235|  2.95386e-05|  0.16%|# <frozen importlib._bootstrap>:103 release
   209|         0|            0|            0|  0.00%|
   210|         0|            0|            0|  0.00%|
   211|      4651|    0.0124502|  2.67689e-06|  0.00%|
   212|         0|            0|            0|  0.00%|
   213|         0|            0|            0|  0.00%|
   214|         0|            0|            0|  0.00%|
   215|         0|            0|            0|  0.00%|
   216|         0|            0|            0|  0.00%|
   217|         0|            0|            0|  0.00%|
   218|         0|            0|            0|  0.00%|
   219|      4651|     0.526436|  0.000113188|  0.14%|
(call)|         1|  3.17097e-05|  3.17097e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/envs.py:18 <module>
(call)|      1417|      38.9642|    0.0274977| 10.60%|# <frozen importlib._bootstrap>:978 _find_and_load
(call)|       825|     0.104109|  0.000126192|  0.03%|# <frozen importlib._bootstrap>:194 _lock_unlock_module
(call)|         1|  2.21729e-05|  2.21729e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/constants.py:17 <module>
(call)|         1|   0.00134468|   0.00134468|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/exceptions.py:16 <module>
(call)|        46|   0.00091815|  1.99598e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/__init__.py:1 <module>
(call)|         1|   0.00865841|   0.00865841|  0.00%|# /opt/anaconda3/lib/python3.7/uuid.py:45 <module>
(call)|         1|   0.00996041|   0.00996041|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/click/_compat.py:2 <module>
(call)|         1|  0.000166655|  0.000166655|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/click/_unicodefun.py:1 <module>
(call)|         1|  7.86781e-05|  7.86781e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/click/globals.py:1 <module>
(call)|         1|   0.00462842|   0.00462842|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/click/utils.py:1 <module>
(call)|         1|   0.00888157|   0.00888157|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/click/exceptions.py:1 <module>
(call)|         1|   0.00111818|   0.00111818|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/click/parser.py:20 <module>
(call)|         1|   0.00347567|   0.00347567|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/click/types.py:1 <module>
(call)|         1|   0.00813317|   0.00813317|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/click/termui.py:1 <module>
(call)|         1|    0.0157311|    0.0157311|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/click/formatting.py:1 <module>
(call)|         1|    0.0571356|    0.0571356|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/click/core.py:1 <module>
(call)|         1|   0.00098896|   0.00098896|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/click/decorators.py:1 <module>
(call)|         1|     0.067539|     0.067539|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/click/__init__.py:6 <module>
(call)|         1|  7.39098e-05|  7.39098e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/urllib3/packages/ssl_match_hostname/__init__.py:1 <module>
(call)|         1|   0.00358748|   0.00358748|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/urllib3/packages/__init__.py:1 <module>
(call)|         1|    0.0333307|    0.0333307|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/urllib3/packages/six.py:21 <module>
(call)|         1|    0.0474954|    0.0474954|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/urllib3/exceptions.py:1 <module>
(call)|         1|  0.000305176|  0.000305176|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/urllib3/util/wait.py:1 <module>
(call)|         1|  4.48227e-05|  4.48227e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/urllib3/contrib/_appengine_environ.py:3 <module>
(call)|         1|   0.00922537|   0.00922537|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/urllib3/util/connection.py:1 <module>
(call)|         1|     0.010031|     0.010031|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/brotli/brotli.py:2 <module>
(call)|         1|    0.0128448|    0.0128448|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/brotli/__init__.py:3 <module>
(call)|         1|    0.0183113|    0.0183113|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/urllib3/util/request.py:1 <module>
(call)|         1|  0.000173092|  0.000173092|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/urllib3/util/response.py:1 <module>
(call)|         1|    0.0088675|    0.0088675|  0.00%|# /opt/anaconda3/lib/python3.7/hmac.py:4 <module>
(call)|         1|      1.00175|      1.00175|  0.27%|# /opt/anaconda3/lib/python3.7/site-packages/urllib3/util/url.py:1 <module>
(call)|         1|      1.01825|      1.01825|  0.28%|# /opt/anaconda3/lib/python3.7/site-packages/urllib3/util/ssl_.py:1 <module>
(call)|         1|  0.000289679|  0.000289679|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/urllib3/util/timeout.py:1 <module>
(call)|         1|   0.00288296|   0.00288296|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/urllib3/util/retry.py:1 <module>
(call)|         1|      1.06523|      1.06523|  0.29%|# /opt/anaconda3/lib/python3.7/site-packages/urllib3/util/__init__.py:1 <module>
(call)|         1|   0.00115204|   0.00115204|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/urllib3/_collections.py:1 <module>
(call)|         1|       1.0811|       1.0811|  0.29%|# /opt/anaconda3/lib/python3.7/site-packages/urllib3/connection.py:1 <module>
(call)|         1|  0.000682592|  0.000682592|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/urllib3/fields.py:1 <module>
(call)|         1|   0.00384068|   0.00384068|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/urllib3/filepost.py:1 <module>
(call)|         1|   0.00894666|   0.00894666|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/urllib3/request.py:1 <module>
(call)|         1|   0.00379467|   0.00379467|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/urllib3/response.py:1 <module>
(call)|         1|  0.000234842|  0.000234842|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/urllib3/util/queue.py:1 <module>
(call)|         1|      1.15855|      1.15855|  0.32%|# /opt/anaconda3/lib/python3.7/site-packages/urllib3/connectionpool.py:1 <module>
(call)|         1|   0.00563884|   0.00563884|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/urllib3/poolmanager.py:1 <module>
(call)|         1|      1.17168|      1.17168|  0.32%|# /opt/anaconda3/lib/python3.7/site-packages/urllib3/__init__.py:3 <module>
(call)|         1|  5.81741e-05|  5.81741e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/chardet/compat.py:22 <module>
(call)|         1|  0.000447273|  0.000447273|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/chardet/enums.py:5 <module>
(call)|         1|  0.000237703|  0.000237703|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/chardet/charsetprober.py:29 <module>
(call)|         1|   0.00581479|   0.00581479|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/chardet/charsetgroupprober.py:28 <module>
(call)|         1|  0.000240803|  0.000240803|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/chardet/codingstatemachine.py:28 <module>
(call)|         1|   0.00103307|   0.00103307|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/chardet/escsm.py:28 <module>
(call)|         1|   0.00707555|   0.00707555|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/chardet/escprober.py:28 <module>
(call)|         1|  0.000592232|  0.000592232|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/chardet/latin1prober.py:29 <module>
(call)|         1|   0.00476646|   0.00476646|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/chardet/mbcssm.py:28 <module>
(call)|         1|   0.00753975|   0.00753975|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/chardet/utf8prober.py:28 <module>
(call)|         1|  0.000241041|  0.000241041|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/chardet/mbcharsetprober.py:30 <module>
(call)|         1|  0.000155687|  0.000155687|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/chardet/euctwfreq.py:44 <module>
(call)|         1|  0.000114441|  0.000114441|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/chardet/euckrfreq.py:41 <module>
(call)|         1|  0.000115871|  0.000115871|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/chardet/gb2312freq.py:42 <module>
(call)|         1|   0.00015831|   0.00015831|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/chardet/big5freq.py:43 <module>
(call)|         1|  0.000125885|  0.000125885|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/chardet/jisfreq.py:44 <module>
(call)|         1|    0.0146797|    0.0146797|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/chardet/chardistribution.py:28 <module>
(call)|         1|   0.00110626|   0.00110626|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/chardet/jpcntx.py:31 <module>
(call)|         1|    0.0241895|    0.0241895|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/chardet/sjisprober.py:28 <module>
(call)|         1|  0.000456095|  0.000456095|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/chardet/eucjpprober.py:28 <module>
(call)|         1|    0.0003438|    0.0003438|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/chardet/gb2312prober.py:28 <module>
(call)|         1|   0.00031352|   0.00031352|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/chardet/euckrprober.py:28 <module>
(call)|         1|  0.000254631|  0.000254631|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/chardet/cp949prober.py:28 <module>
(call)|         1|  0.000331879|  0.000331879|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/chardet/big5prober.py:28 <module>
(call)|         1|   0.00025177|   0.00025177|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/chardet/euctwprober.py:28 <module>
(call)|         1|    0.0544934|    0.0544934|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/chardet/mbcsgroupprober.py:30 <module>
(call)|         1|   0.00030303|   0.00030303|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/chardet/sbcharsetprober.py:29 <module>
(call)|         1|   0.00226474|   0.00226474|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/chardet/langcyrillicmodel.py:31 <module>
(call)|         1|  0.000828028|  0.000828028|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/chardet/langgreekmodel.py:35 <module>
(call)|         1|  0.000902176|  0.000902176|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/chardet/langbulgarianmodel.py:38 <module>
(call)|         1|  0.000403404|  0.000403404|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/chardet/langthaimodel.py:37 <module>
(call)|         1|  0.000419617|  0.000419617|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/chardet/langhebrewmodel.py:38 <module>
(call)|         1|  0.000366688|  0.000366688|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/chardet/hebrewprober.py:28 <module>
(call)|         1|  0.000926733|  0.000926733|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/chardet/langturkishmodel.py:37 <module>
(call)|         1|     0.028681|     0.028681|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/chardet/sbcsgroupprober.py:29 <module>
(call)|         1|     0.118609|     0.118609|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/chardet/universaldetector.py:36 <module>
(call)|         1|  2.64645e-05|  2.64645e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/chardet/version.py:6 <module>
(call)|         1|     0.127193|     0.127193|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/chardet/__init__.py:19 <module>
(call)|         1|   0.00139785|   0.00139785|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/requests/exceptions.py:8 <module>
(call)|         1|  5.29289e-05|  5.29289e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/requests/__version__.py:5 <module>
(call)|         1|   0.00416946|   0.00416946|  0.00%|# /opt/anaconda3/lib/python3.7/importlib/resources.py:1 <module>
(call)|         1|   0.00713396|   0.00713396|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/certifi/core.py:8 <module>
(call)|         1|   0.00983405|   0.00983405|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/certifi/__init__.py:1 <module>
(call)|         1|    0.0142145|    0.0142145|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/requests/certs.py:14 <module>
(call)|         1|   0.00248742|   0.00248742|  0.00%|# /opt/anaconda3/lib/python3.7/numbers.py:6 <module>
(call)|         3|   0.00019455|  6.48499e-05|  0.00%|# /opt/anaconda3/lib/python3.7/abc.py:130 register
(call)|         3|    0.0034368|    0.0011456|  0.00%|# /opt/anaconda3/lib/python3.7/collections/__init__.py:316 namedtuple
(call)|         3|  0.000164509|  5.48363e-05|  0.00%|# /opt/anaconda3/lib/python3.7/abc.py:125 __new__
(call)|         1|    0.0104733|    0.0104733|  0.00%|# /opt/anaconda3/lib/python3.7/decimal.py:2 <module>
(call)|         1|  0.000108242|  0.000108242|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/simplejson/errors.py:2 <module>
(call)|         1|  5.31673e-05|  5.31673e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/simplejson/raw_json.py:2 <module>
(call)|         1|  0.000207663|  0.000207663|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/simplejson/compat.py:2 <module>
(call)|         1|   0.00246954|   0.00246954|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/simplejson/scanner.py:2 <module>
(call)|         1|   0.00894046|   0.00894046|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/simplejson/decoder.py:2 <module>
(call)|         1|    0.0117698|    0.0117698|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/simplejson/encoder.py:2 <module>
(call)|         1|    0.0456145|    0.0456145|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/simplejson/__init__.py:119 <module>
(call)|         1|     0.292626|     0.292626|  0.08%|# /opt/anaconda3/lib/python3.7/http/cookiejar.py:26 <module>
(call)|         1|     0.148035|     0.148035|  0.04%|# /opt/anaconda3/lib/python3.7/http/cookies.py:127 <module>
(call)|         1|     0.497093|     0.497093|  0.14%|# /opt/anaconda3/lib/python3.7/site-packages/requests/compat.py:9 <module>
(call)|         1|     0.499416|     0.499416|  0.14%|# /opt/anaconda3/lib/python3.7/site-packages/requests/_internal_utils.py:9 <module>
(call)|         1|   0.00136399|   0.00136399|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/requests/cookies.py:10 <module>
(call)|         1|  0.000469446|  0.000469446|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/requests/structures.py:8 <module>
(call)|         1|      0.54336|      0.54336|  0.15%|# /opt/anaconda3/lib/python3.7/site-packages/requests/utils.py:9 <module>
(call)|         1|  1.52588e-05|  1.52588e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/idna/package_data.py:1 <module>
(call)|         1|    0.0248928|    0.0248928|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/idna/idnadata.py:3 <module>
(call)|         1|  4.91142e-05|  4.91142e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/idna/intranges.py:6 <module>
(call)|         1|    0.0438697|    0.0438697|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/idna/core.py:1 <module>
(call)|         1|    0.0491581|    0.0491581|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/idna/__init__.py:1 <module>
(call)|         1|    0.0686383|    0.0686383|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/requests/packages.py:1 <module>
(call)|         1|   0.00338531|   0.00338531|  0.00%|# /opt/anaconda3/lib/python3.7/stringprep.py:6 <module>
(call)|         1|   0.00745893|   0.00745893|  0.00%|# /opt/anaconda3/lib/python3.7/encodings/idna.py:3 <module>
(call)|         1|  3.14713e-05|  3.14713e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/requests/hooks.py:13 <module>
(call)|         1|  0.000893593|  0.000893593|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/requests/auth.py:8 <module>
(call)|         1|   0.00739288|   0.00739288|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/requests/status_codes.py:21 <module>
(call)|         1|    0.0293782|    0.0293782|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/requests/models.py:8 <module>
(call)|         1|   0.00390291|   0.00390291|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/socks.py:1 <module>
(call)|         1|     0.010139|     0.010139|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/urllib3/contrib/socks.py:36 <module>
(call)|         1|    0.0146737|    0.0146737|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/requests/adapters.py:9 <module>
(call)|         1|    0.0192883|    0.0192883|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/requests/sessions.py:9 <module>
(call)|         1|     0.022191|     0.022191|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/requests/api.py:11 <module>
(call)|         1|      1.99102|      1.99102|  0.54%|# /opt/anaconda3/lib/python3.7/site-packages/requests/__init__.py:41 <module>
(call)|         1|  1.50204e-05|  1.50204e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/bravado/__init__.py:2 <module>
(call)|         1|  3.26633e-05|  3.26633e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/bravado_core/__init__.py:2 <module>
(call)|         1|  0.000400543|  0.000400543|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/bravado_core/docstring.py:2 <module>
(call)|         1|  0.000413179|  0.000413179|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/bravado_core/exception.py:2 <module>
(call)|         1|  1.52588e-05|  1.52588e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/dateutil/_version.py:4 <module>
(call)|         1|   0.00281572|   0.00281572|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/dateutil/__init__.py:2 <module>
(call)|         1|  0.000102997|  0.000102997|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/dateutil/_common.py:3 <module>
(call)|         1|   0.00399756|   0.00399756|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/dateutil/relativedelta.py:2 <module>
(call)|         1|  0.000720739|  0.000720739|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/dateutil/tz/_common.py:1 <module>
(call)|         1|  0.000458956|  0.000458956|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/dateutil/tz/_factories.py:1 <module>
(call)|         1|    0.0010941|    0.0010941|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/dateutil/tz/win.py:8 <module>
(call)|         1|    0.0193546|    0.0193546|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/dateutil/tz/tz.py:9 <module>
(call)|         1|     0.022692|     0.022692|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/dateutil/tz/__init__.py:2 <module>
(call)|         1|    0.0402231|    0.0402231|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/dateutil/parser/_parser.py:30 <module>
(call)|         1|   0.00622606|   0.00622606|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/dateutil/parser/isoparser.py:9 <module>
(call)|         1|    0.0531681|    0.0531681|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/dateutil/parser/__init__.py:2 <module>
(call)|         1|  0.000304461|  0.000304461|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pytz/exceptions.py:3 <module>
(call)|         1|  0.000952244|  0.000952244|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pytz/lazy.py:1 <module>
(call)|         1|  0.000899792|  0.000899792|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pytz/tzinfo.py:1 <module>
(call)|         1|  0.000219107|  0.000219107|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pytz/tzfile.py:4 <module>
(call)|         1|    0.0408294|    0.0408294|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/pytz/__init__.py:9 <module>
(call)|         1|  0.000100613|  0.000100613|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/bravado_core/_compat.py:2 <module>
(call)|         1|   0.00265789|   0.00265789|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/bravado_core/schema.py:2 <module>
(call)|         1|     0.118079|     0.118079|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/bravado_core/formatter.py:5 <module>
(call)|         1|  1.71661e-05|  1.71661e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/bravado_core/content_type.py:2 <module>
(call)|         1|    0.0202422|    0.0202422|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/bravado_core/util.py:2 <module>
(call)|         1|    0.0248888|    0.0248888|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/bravado_core/_decorators.py:2 <module>
(call)|         1|  0.000166893|  0.000166893|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/yaml/error.py:2 <module>
(call)|         1|   0.00110412|   0.00110412|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/yaml/tokens.py:2 <module>
(call)|         1|  0.000721931|  0.000721931|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/yaml/events.py:4 <module>
(call)|         1|  0.000227928|  0.000227928|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/yaml/nodes.py:2 <module>
(call)|         1|      1.22147|      1.22147|  0.33%|# /opt/anaconda3/lib/python3.7/site-packages/yaml/reader.py:18 <module>
(call)|         1|   0.00371718|   0.00371718|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/yaml/scanner.py:27 <module>
(call)|         1|   0.00120497|   0.00120497|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/yaml/parser.py:62 <module>
(call)|         1|   0.00036478|   0.00036478|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/yaml/composer.py:2 <module>
(call)|         1|     0.085314|     0.085314|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/yaml/constructor.py:3 <module>
(call)|         1|     0.228345|     0.228345|  0.06%|# /opt/anaconda3/lib/python3.7/site-packages/yaml/resolver.py:2 <module>
(call)|         1|      1.55845|      1.55845|  0.42%|# /opt/anaconda3/lib/python3.7/site-packages/yaml/loader.py:2 <module>
(call)|         1|   0.00321126|   0.00321126|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/yaml/emitter.py:9 <module>
(call)|         1|    0.0004704|    0.0004704|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/yaml/serializer.py:2 <module>
(call)|         1|   0.00248647|   0.00248647|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/yaml/representer.py:2 <module>
(call)|         1|    0.0150445|    0.0150445|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/yaml/dumper.py:2 <module>
(call)|       173|   0.00275922|  1.59492e-05|  0.00%|# <frozen importlib._bootstrap>:416 parent
(call)|         1|   0.00532126|   0.00532126|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/yaml/cyaml.py:3 <module>
(call)|         1|      1.60055|      1.60055|  0.44%|# /opt/anaconda3/lib/python3.7/site-packages/yaml/__init__.py:2 <module>
(call)|         1|  1.71661e-05|  1.71661e-05|  0.00%|# /opt/anaconda3/lib/python3.7/xml/parsers/__init__.py:8 <module>
(call)|         1|   0.00355554|   0.00355554|  0.00%|# /opt/anaconda3/lib/python3.7/xml/parsers/expat.py:1 <module>
(call)|         1|    0.0592368|    0.0592368|  0.02%|# /opt/anaconda3/lib/python3.7/plistlib.py:47 <module>
(call)|         1|  0.000193834|  0.000193834|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pkg_resources/extern/__init__.py:1 <module>
(call)|         1|    0.0331252|    0.0331252|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/pkg_resources/_vendor/six.py:1 <module>
(call)|         1|   0.00118852|   0.00118852|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pkg_resources/_vendor/appdirs.py:9 <module>
(call)|         1|  0.000118732|  0.000118732|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pkg_resources/_vendor/packaging/__about__.py:4 <module>
(call)|         2|   0.00642633|   0.00321317|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pkg_resources/_vendor/packaging/__init__.py:4 <module>
(call)|         1|  0.000293255|  0.000293255|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pkg_resources/_vendor/packaging/_structures.py:4 <module>
(call)|         1|     0.191916|     0.191916|  0.05%|# /opt/anaconda3/lib/python3.7/site-packages/pkg_resources/_vendor/packaging/version.py:4 <module>
(call)|         1|   7.9155e-05|   7.9155e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pkg_resources/_vendor/packaging/_compat.py:4 <module>
(call)|         1|     0.600292|     0.600292|  0.16%|# /opt/anaconda3/lib/python3.7/site-packages/pkg_resources/_vendor/packaging/specifiers.py:4 <module>
(call)|         1|     0.662062|     0.662062|  0.18%|# /opt/anaconda3/lib/python3.7/site-packages/pkg_resources/_vendor/pyparsing.py:75 <module>
(call)|         1|    0.0317256|    0.0317256|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/pkg_resources/_vendor/packaging/markers.py:4 <module>
(call)|         1|      1.35013|      1.35013|  0.37%|# /opt/anaconda3/lib/python3.7/site-packages/pkg_resources/_vendor/packaging/requirements.py:4 <module>
(call)|         1|      6.57783|      6.57783|  1.79%|# /opt/anaconda3/lib/python3.7/site-packages/pkg_resources/__init__.py:16 <module>
(call)|         1|      8.19157|      8.19157|  2.23%|# /opt/anaconda3/lib/python3.7/site-packages/swagger_spec_validator/common.py:2 <module>
(call)|         1|  5.91278e-05|  5.91278e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/attr/_config.py:1 <module>
(call)|         1|  0.000816822|  0.000816822|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/attr/_compat.py:1 <module>
(call)|         1|  0.000380993|  0.000380993|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/attr/exceptions.py:1 <module>
(call)|         1|    0.0327594|    0.0327594|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/attr/_make.py:1 <module>
(call)|         1|     0.036124|     0.036124|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/attr/converters.py:3 <module>
(call)|         1|    0.0003016|    0.0003016|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/attr/filters.py:3 <module>
(call)|         1|    0.0412571|    0.0412571|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/attr/validators.py:3 <module>
(call)|         1|  0.000537395|  0.000537395|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/attr/_funcs.py:1 <module>
(call)|         1|   0.00653315|   0.00653315|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/attr/_version_info.py:1 <module>
(call)|         1|    0.0995193|    0.0995193|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/attr/__init__.py:1 <module>
(call)|         1|  0.000219822|  0.000219822|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/jsonschema/compat.py:5 <module>
(call)|         1|   0.00332785|   0.00332785|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/jsonschema/_utils.py:1 <module>
(call)|         1|     0.116796|     0.116796|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/jsonschema/exceptions.py:3 <module>
(call)|         1|      1.30199|      1.30199|  0.35%|# /opt/anaconda3/lib/python3.7/site-packages/regex/_regex_core.py:16 <module>
(call)|         1|      1.31529|      1.31529|  0.36%|# /opt/anaconda3/lib/python3.7/site-packages/regex/regex.py:231 <module>
(call)|         1|      1.31837|      1.31837|  0.36%|# /opt/anaconda3/lib/python3.7/site-packages/regex/__init__.py:1 <module>
(call)|         1|  0.000346661|  0.000346661|  0.00%|# /opt/anaconda3/lib/python3.7/encodings/raw_unicode_escape.py:8 <module>
(call)|         1|      1.44539|      1.44539|  0.39%|# /opt/anaconda3/lib/python3.7/site-packages/rfc3987.py:125 <module>
(call)|         1|    0.0306628|    0.0306628|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/strict_rfc3339.py:20 <module>
(call)|         1|    0.0216537|    0.0216537|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/webcolors.py:9 <module>
(call)|         1|    0.0126758|    0.0126758|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/jsonpointer.py:33 <module>
(call)|         1|  0.000463009|  0.000463009|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/uritemplate/orderedset.py:3 <module>
(call)|         1|  0.000509024|  0.000509024|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/uritemplate/variable.py:16 <module>
(call)|         1|   0.00805712|   0.00805712|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/uritemplate/template.py:16 <module>
(call)|         1|     0.013922|     0.013922|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/uritemplate/api.py:8 <module>
(call)|         1|    0.0169981|    0.0169981|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/uritemplate/__init__.py:13 <module>
(call)|         1|      1.57836|      1.57836|  0.43%|# /opt/anaconda3/lib/python3.7/site-packages/jsonschema/_format.py:1 <module>
(call)|         1|  0.000181198|  0.000181198|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pyrsistent/_compat.py:1 <module>
(call)|         1|  0.000219822|  0.000219822|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pyrsistent/_transformations.py:1 <module>
(call)|         1|    0.0102911|    0.0102911|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pyrsistent/_pvector.py:1 <module>
(call)|         1|    0.0180852|    0.0180852|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pyrsistent/_pmap.py:1 <module>
(call)|         1|   0.00112247|   0.00112247|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pyrsistent/_pset.py:1 <module>
(call)|         1|  0.000938416|  0.000938416|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pyrsistent/_pbag.py:1 <module>
(call)|         1|   0.00159025|   0.00159025|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pyrsistent/_plist.py:1 <module>
(call)|         1|   0.00114274|   0.00114274|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pyrsistent/_pdeque.py:1 <module>
(call)|         1|   0.00570154|   0.00570154|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pyrsistent/_checked_types.py:1 <module>
(call)|         1|  0.000876188|  0.000876188|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pyrsistent/_field_common.py:1 <module>
(call)|         1|   0.00130248|   0.00130248|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pyrsistent/_precord.py:1 <module>
(call)|         1|   0.00142646|   0.00142646|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pyrsistent/_pclass.py:1 <module>
(call)|         1|  3.74317e-05|  3.74317e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pyrsistent/_immutable.py:1 <module>
(call)|         1|  0.000169754|  0.000169754|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pyrsistent/_helpers.py:1 <module>
(call)|         1|  0.000163555|  0.000163555|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pyrsistent/_toolz.py:40 <module>
(call)|         1|    0.0661426|    0.0661426|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/pyrsistent/__init__.py:3 <module>
(call)|         1|    0.0790415|    0.0790415|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/jsonschema/_types.py:1 <module>
(call)|         1|   0.00032711|   0.00032711|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/jsonschema/_legacy_validators.py:1 <module>
(call)|         1|   0.00073719|   0.00073719|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/jsonschema/_validators.py:1 <module>
(call)|         1|    0.0172992|    0.0172992|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/jsonschema/validators.py:3 <module>
(call)|         1|   0.00484991|   0.00484991|  0.00%|# /opt/anaconda3/lib/python3.7/csv.py:4 <module>
(call)|         1|  0.000644684|  0.000644684|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/zipp.py:1 <module>
(call)|         1|     0.171712|     0.171712|  0.05%|# /opt/anaconda3/lib/python3.7/configparser.py:139 <module>
(call)|         1|     0.176284|     0.176284|  0.05%|# /opt/anaconda3/lib/python3.7/site-packages/importlib_metadata/_compat.py:1 <module>
(call)|         1|     0.287773|     0.287773|  0.08%|# /opt/anaconda3/lib/python3.7/site-packages/importlib_metadata/__init__.py:1 <module>
(call)|         1|      2.15322|      2.15322|  0.59%|# /opt/anaconda3/lib/python3.7/site-packages/jsonschema/__init__.py:9 <module>
(call)|         1|   0.00123429|   0.00123429|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/swagger_spec_validator/ref_validators.py:2 <module>
(call)|         1|       2.1645|       2.1645|  0.59%|# /opt/anaconda3/lib/python3.7/site-packages/swagger_spec_validator/validator12.py:10 <module>
(call)|         1|      0.00263|      0.00263|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/swagger_spec_validator/validator20.py:2 <module>
(call)|         1|      2.17396|      2.17396|  0.59%|# /opt/anaconda3/lib/python3.7/site-packages/swagger_spec_validator/util.py:2 <module>
(call)|         1|      10.3714|      10.3714|  2.82%|# /opt/anaconda3/lib/python3.7/site-packages/swagger_spec_validator/__init__.py:2 <module>
(call)|         1|        10.38|        10.38|  2.82%|# /opt/anaconda3/lib/python3.7/site-packages/bravado_core/model.py:2 <module>
(call)|         1|      10.4127|      10.4127|  2.83%|# /opt/anaconda3/lib/python3.7/site-packages/bravado_core/marshal.py:2 <module>
(call)|         1|    0.0024991|    0.0024991|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/bravado_core/unmarshal.py:7 <module>
(call)|         1|   0.00158787|   0.00158787|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/bravado_core/swagger20_validator.py:2 <module>
(call)|         1|   0.00544453|   0.00544453|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/bravado_core/validate.py:6 <module>
(call)|         1|      10.4352|      10.4352|  2.84%|# /opt/anaconda3/lib/python3.7/site-packages/bravado_core/param.py:2 <module>
(call)|         1|    0.0155122|    0.0155122|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/proxytypes.py:4 <module>
(call)|         1|    0.0236247|    0.0236247|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/jsonref.py:1 <module>
(call)|         1|  0.000402689|  0.000402689|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/bravado_core/security_requirement.py:2 <module>
(call)|         1|   0.00436258|   0.00436258|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/bravado_core/operation.py:2 <module>
(call)|         1|   0.00778389|   0.00778389|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/bravado_core/resource.py:2 <module>
(call)|         1|  0.000520706|  0.000520706|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/bravado_core/security_definition.py:2 <module>
(call)|         1|   0.00190401|   0.00190401|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/bravado_core/spec_flattening.py:2 <module>
(call)|         1|     0.050175|     0.050175|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/bravado_core/spec.py:2 <module>
(call)|         1|  1.54972e-05|  1.54972e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/msgpack/_version.py:1 <module>
(call)|         1|  0.000528574|  0.000528574|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/msgpack/exceptions.py:1 <module>
(call)|       167|   0.00395703|  2.36948e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
(call)|         1|    0.0208707|    0.0208707|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/msgpack/__init__.py:2 <module>
(call)|         1|    0.0265334|    0.0265334|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/bravado_core/response.py:2 <module>
(call)|         1|  5.24521e-05|  5.24521e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/monotonic.py:40 <module>
(call)|         1|   0.00602293|   0.00602293|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/bravado/response.py:2 <module>
(call)|         1|    0.0413828|    0.0413828|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/bravado/config.py:2 <module>
(call)|         1|  0.000107288|  0.000107288|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/bravado/docstring_property.py:12 <module>
(call)|         1|   9.9659e-05|   9.9659e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/bravado/_equality_util.py:2 <module>
(call)|         1|   0.00872374|   0.00872374|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/bravado/exception.py:2 <module>
(call)|         1|    0.0159574|    0.0159574|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/bravado/http_future.py:2 <module>
(call)|         1|    0.0188444|    0.0188444|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/bravado/http_client.py:2 <module>
(call)|         1|    0.0259705|    0.0259705|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/bravado/requests_client.py:2 <module>
(call)|         1|    0.0012815|    0.0012815|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/bravado/swagger_model.py:2 <module>
(call)|         1|  5.34058e-05|  5.34058e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/bravado/warning.py:2 <module>
(call)|         1|      10.7056|      10.7056|  2.91%|# /opt/anaconda3/lib/python3.7/site-packages/bravado/client.py:45 <module>
(call)|         1|  0.000123501|  0.000123501|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/packaging/__about__.py:4 <module>
(call)|         1|  0.000254393|  0.000254393|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/packaging/_structures.py:4 <module>
(call)|         1|  3.26633e-05|  3.26633e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/packaging/_typing.py:27 <module>
(call)|         1|   0.00863194|   0.00863194|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/packaging/version.py:4 <module>
(call)|         1|   0.00142217|   0.00142217|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/api_exceptions.py:16 <module>
(call)|         1|   0.00158095|   0.00158095|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/backend.py:17 <module>
(call)|         1|  4.86374e-05|  4.86374e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/checkpoint.py:18 <module>
(call)|         1|  8.51154e-05|  8.51154e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/backends/client_config.py:18 <module>
(call)|         1|  0.000288963|  0.000288963|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/_globals.py:17 <module>
(call)|         1|  0.000237703|  0.000237703|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/__config__.py:3 <module>
(call)|         1|  3.52859e-05|  3.52859e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/version.py:5 <module>
(call)|         1|   0.00961709|   0.00961709|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/mkl/__init__.py:26 <module>
(call)|         1|    0.0150564|    0.0150564|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/_distributor_init.py:10 <module>
(call)|         1|  0.000259161|  0.000259161|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/compat/_inspect.py:7 <module>
(call)|         1|   0.00491309|   0.00491309|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/compat/py3k.py:12 <module>
(call)|         1|    0.0116165|    0.0116165|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/compat/__init__.py:10 <module>
(call)|         1|    0.0203152|    0.0203152|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/overrides.py:1 <module>
(call)|         1|    0.0345471|    0.0345471|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/multiarray.py:7 <module>
(call)|         1|   0.00054884|   0.00054884|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/umath.py:7 <module>
(call)|         1|  0.000935316|  0.000935316|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/_string_helpers.py:5 <module>
(call)|         1|  0.000510693|  0.000510693|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/_dtype.py:5 <module>
(call)|         1|    0.0126884|    0.0126884|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/_type_aliases.py:24 <module>
(call)|         1|    0.0233963|    0.0233963|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/numerictypes.py:81 <module>
(call)|         1|  0.000409365|  0.000409365|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/_asarray.py:5 <module>
(call)|         1|   0.00147295|   0.00147295|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/_exceptions.py:7 <module>
(call)|         1|   0.00588369|   0.00588369|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/_methods.py:5 <module>
(call)|         1|    0.0481219|    0.0481219|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/fromnumeric.py:3 <module>
(call)|         1|    0.0605142|    0.0605142|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/shape_base.py:1 <module>
(call)|         1|   0.00132346|   0.00132346|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/_ufunc_config.py:5 <module>
(call)|         1|    0.0116637|    0.0116637|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/arrayprint.py:5 <module>
(call)|         1|     0.110172|     0.110172|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/numeric.py:1 <module>
(call)|         1|    0.0466309|    0.0466309|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/defchararray.py:17 <module>
(call)|         1|   0.00258231|   0.00258231|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/records.py:35 <module>
(call)|         1|  0.000577211|  0.000577211|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/memmap.py:1 <module>
(call)|         1|   0.00328755|   0.00328755|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/function_base.py:1 <module>
(call)|         1|  0.000291824|  0.000291824|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/machar.py:7 <module>
(call)|         1|   0.00201201|   0.00201201|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/getlimits.py:3 <module>
(call)|         1|   0.00197864|   0.00197864|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/einsumfunc.py:4 <module>
(call)|         1|    0.0515165|    0.0515165|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/_add_newdocs.py:10 <module>
(call)|         1|  0.000226736|  0.000226736|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/_dtype_ctypes.py:24 <module>
(call)|         1|    0.0378022|    0.0378022|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/_internal.py:6 <module>
(call)|         1|  0.000127792|  0.000127792|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/_pytesttester.py:29 <module>
(call)|         1|     0.364312|     0.364312|  0.10%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/__init__.py:7 <module>
(call)|         1|    0.0017302|    0.0017302|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/mixins.py:1 <module>
(call)|         1|   0.00204873|   0.00204873|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/ufunclike.py:5 <module>
(call)|         1|    0.0132148|    0.0132148|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/type_check.py:3 <module>
(call)|         1|     0.022197|     0.022197|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/scimath.py:17 <module>
(call)|         1|   0.00876188|   0.00876188|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/twodim_base.py:3 <module>
(call)|         1|    0.0374391|    0.0374391|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/linalg/linalg.py:10 <module>
(call)|         1|    0.0411367|    0.0411367|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/linalg/__init__.py:71 <module>
(call)|         1|    0.0450552|    0.0450552|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/matrixlib/defmatrix.py:1 <module>
(call)|         1|    0.0481379|    0.0481379|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/matrixlib/__init__.py:3 <module>
(call)|         1|   0.00356722|   0.00356722|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/histograms.py:3 <module>
(call)|         1|    0.0467513|    0.0467513|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/function_base.py:1 <module>
(call)|         1|   0.00189471|   0.00189471|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/stride_tricks.py:7 <module>
(call)|         1|     0.111036|     0.111036|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/index_tricks.py:1 <module>
(call)|         1|    0.0129874|    0.0129874|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/nanfunctions.py:22 <module>
(call)|         1|    0.0117695|    0.0117695|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/shape_base.py:1 <module>
(call)|         1|    0.0162086|    0.0162086|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/polynomial.py:4 <module>
(call)|         1|    0.0146844|    0.0146844|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/utils.py:1 <module>
(call)|         1|   0.00658512|   0.00658512|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/arraysetops.py:27 <module>
(call)|         1|  0.000759125|  0.000759125|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/format.py:163 <module>
(call)|         1|  0.000767231|  0.000767231|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/_datasource.py:36 <module>
(call)|         1|   0.00176764|   0.00176764|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/_iotools.py:3 <module>
(call)|         1|    0.0209725|    0.0209725|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/npyio.py:1 <module>
(call)|         1|    0.0484056|    0.0484056|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/financial.py:12 <module>
(call)|         1|  0.000238895|  0.000238895|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/arrayterator.py:9 <module>
(call)|         1|   0.00112629|   0.00112629|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/arraypad.py:5 <module>
(call)|         1|  0.000183105|  0.000183105|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/_version.py:7 <module>
(call)|         1|     0.305466|     0.305466|  0.08%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/__init__.py:13 <module>
(call)|         1|    0.0141025|    0.0141025|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/fft/_pocketfft.py:29 <module>
(call)|         1|   0.00196767|   0.00196767|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/fft/helper.py:4 <module>
(call)|         1|    0.0221908|    0.0221908|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/fft/__init__.py:192 <module>
(call)|         1|  0.000912428|  0.000912428|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/polynomial/polyutils.py:45 <module>
(call)|         1|   0.00360155|   0.00360155|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/polynomial/_polybase.py:8 <module>
(call)|         1|    0.0112641|    0.0112641|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/polynomial/polynomial.py:74 <module>
(call)|         1|   0.00193381|   0.00193381|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/polynomial/chebyshev.py:109 <module>
(call)|         1|   0.00157332|   0.00157332|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/polynomial/legendre.py:81 <module>
(call)|         1|    0.0016489|    0.0016489|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/polynomial/hermite.py:77 <module>
(call)|         1|   0.00147748|   0.00147748|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/polynomial/hermite_e.py:77 <module>
(call)|         1|    0.0015111|    0.0015111|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/polynomial/laguerre.py:77 <module>
(call)|         1|    0.0358889|    0.0358889|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/polynomial/__init__.py:15 <module>
(call)|         8|   0.00102997|  0.000128746|  0.00%|# <string>_16:1 <module>
(call)|        16|  0.000493765|  3.08603e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/getlimits.py:498 __init__
(call)|        12|  0.000250578|  2.08815e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/getlimits.py:522 max
(call)|         1|   0.00022459|   0.00022459|  0.00%|# /opt/anaconda3/lib/python3.7/secrets.py:7 <module>
(call)|         9|    0.0428374|   0.00475971|  0.01%|# /opt/anaconda3/lib/python3.7/re.py:232 compile
(call)|         2|  2.00272e-05|  1.00136e-05|  0.00%|# /opt/anaconda3/lib/python3.7/abc.py:7 abstractmethod
(call)|         1|  1.83582e-05|  1.83582e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/_ufunc_config.py:429 __init__
(call)|         1|  0.000203371|  0.000203371|  0.00%|# /opt/anaconda3/lib/python3.7/contextlib.py:70 __call__
(call)|         1|  3.95775e-05|  3.95775e-05|  0.00%|# /opt/anaconda3/lib/python3.7/abc.py:137 __instancecheck__
(call)|         1|  0.000141382|  0.000141382|  0.00%|# /opt/anaconda3/lib/python3.7/random.py:681 getrandbits
(call)|         1|  8.70228e-05|  8.70228e-05|  0.00%|# <__array_function__ internals>_0:2 concatenate
(call)|         1|  0.000368595|  0.000368595|  0.00%|# /opt/anaconda3/lib/python3.7/contextlib.py:71 inner
(call)|         1|    0.0362666|    0.0362666|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/random/_pickle.py:1 <module>
(call)|         1|     0.040519|     0.040519|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/random/__init__.py:124 <module>
(call)|         1|   0.00469398|   0.00469398|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/ctypeslib.py:51 <module>
(call)|         1|     0.127784|     0.127784|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/ma/core.py:21 <module>
(call)|         1|   0.00784397|   0.00784397|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/ma/extras.py:10 <module>
(call)|         1|     0.144874|     0.144874|  0.04%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/ma/__init__.py:41 <module>
(call)|         1|      1.01719|      1.01719|  0.28%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/__init__.py:106 <module>
(call)|         1|  0.000230789|  0.000230789|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/compat/__init__.py:9 <module>
(call)|         1|  3.24249e-05|  3.24249e-05|  0.00%|# /opt/anaconda3/lib/python3.7/distutils/__init__.py:9 <module>
(call)|         1|     0.025991|     0.025991|  0.01%|# /opt/anaconda3/lib/python3.7/distutils/version.py:27 <module>
(call)|         1|    0.0379298|    0.0379298|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/compat/numpy/__init__.py:1 <module>
(call)|         1|   0.00543356|   0.00543356|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/_config/config.py:49 <module>
(call)|         1|   0.00438309|   0.00438309|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/_config/dates.py:3 <module>
(call)|         1|  0.000722647|  0.000722647|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/_config/display.py:3 <module>
(call)|         1|    0.0185394|    0.0185394|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/_config/__init__.py:7 <module>
(call)|         1|  0.000384331|  0.000384331|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/_config/localization.py:5 <module>
(call)|         2|  0.000317335|  0.000158668|  0.00%|# /opt/anaconda3/lib/python3.7/locale.py:575 getlocale
(call)|        14|  0.000307083|  2.19345e-05|  0.00%|# /opt/anaconda3/lib/python3.7/calendar.py:77 __getitem__
(call)|        26|  0.000392437|  1.50937e-05|  0.00%|# /opt/anaconda3/lib/python3.7/calendar.py:58 __getitem__
(call)|       633|   0.00562668|  8.88891e-06|  0.00%|# /opt/anaconda3/lib/python3.7/re.py:252 escape
(call)|         1|     0.203088|     0.203088|  0.06%|# /opt/anaconda3/lib/python3.7/site-packages/pytz/lazy.py:97 _lazy
(call)|         6|   0.00100398|   0.00016733|  0.00%|# /opt/anaconda3/lib/python3.7/re.py:307 _subx
(call)|         5|  0.000138044|  2.76089e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/getlimits.py:509 min
(call)|         1|     0.333855|     0.333855|  0.09%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/_libs/tslibs/__init__.py:3 <module>
(call)|         1|     0.337291|     0.337291|  0.09%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/_libs/__init__.py:3 <module>
(call)|         1|     0.074631|     0.074631|  0.02%|# /opt/anaconda3/lib/python3.7/fractions.py:4 <module>
(call)|         1|    0.0232008|    0.0232008|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/config_init.py:11 <module>
(call)|         1|   0.00181699|   0.00181699|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/dtypes/generic.py:1 <module>
(call)|         1|  0.000636816|  0.000636816|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/errors/__init__.py:5 <module>
(call)|         1|   0.00521207|   0.00521207|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/dtypes/base.py:1 <module>
(call)|         1|   0.00127506|   0.00127506|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/dtypes/inference.py:1 <module>
(call)|         1|    0.0593455|    0.0593455|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/dtypes/dtypes.py:1 <module>
(call)|         1|   0.00491214|   0.00491214|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/_typing.py:1 <module>
(call)|         1|    0.0777717|    0.0777717|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/dtypes/common.py:1 <module>
(call)|         1|    0.0859799|    0.0859799|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/arrays/array_.py:1 <module>
(call)|         1|   0.00855637|   0.00855637|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/util/_decorators.py:1 <module>
(call)|         1|  0.000801563|  0.000801563|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/dtypes/missing.py:3 <module>
(call)|         1|   0.00647187|   0.00647187|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/dtypes/cast.py:1 <module>
(call)|         1|     0.011987|     0.011987|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/util/hashing.py:3 <module>
(call)|         1|    0.0300288|    0.0300288|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/util/__init__.py:1 <module>
(call)|         1|  0.000180721|  0.000180721|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/util/_validators.py:4 <module>
(call)|         1|    0.0386989|    0.0386989|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/compat/numpy/function.py:19 <module>
(call)|         1|   0.00258088|   0.00258088|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/common.py:5 <module>
(call)|         1|  8.91685e-05|  8.91685e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/ops/roperator.py:4 <module>
(call)|         1|   0.00315905|   0.00315905|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/ops/missing.py:23 <module>
(call)|         1|  0.000719309|  0.000719309|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/ops/docstrings.py:3 <module>
(call)|         1|    0.0212495|    0.0212495|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/ops/__init__.py:5 <module>
(call)|         1|  0.000167847|  0.000167847|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/indexers.py:3 <module>
(call)|         1|    0.0138304|    0.0138304|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/algorithms.py:4 <module>
(call)|         1|    0.0180638|    0.0180638|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/sorting.py:1 <module>
(call)|         1|    0.0951774|    0.0951774|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/arrays/base.py:7 <module>
(call)|         1|   0.00351667|   0.00351667|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/accessor.py:6 <module>
(call)|         1|  0.000328779|  0.000328779|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/compat/_optional.py:1 <module>
(call)|         1|   0.00027585|   0.00027585|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/bottleneck/slow/reduce.py:1 <module>
(call)|         1|  2.67029e-05|  2.67029e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/bottleneck/slow/nonreduce.py:1 <module>
(call)|         1|  0.000143051|  0.000143051|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/bottleneck/slow/nonreduce_axis.py:1 <module>
(call)|         1|  0.000241756|  0.000241756|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/bottleneck/slow/move.py:1 <module>
(call)|         1|    0.0111649|    0.0111649|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/bottleneck/slow/__init__.py:3 <module>
(call)|         1|  3.19481e-05|  3.19481e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/bottleneck/benchmark/autotimeit.py:1 <module>
(call)|         1|   0.00252533|   0.00252533|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/bottleneck/benchmark/bench.py:1 <module>
(call)|         1|  0.000266552|  0.000266552|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/bottleneck/benchmark/bench_detailed.py:1 <module>
(call)|         1|  0.000268936|  0.000268936|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/bottleneck/tests/util.py:1 <module>
(call)|         1|  0.000166178|  0.000166178|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/bottleneck/_pytesttester.py:5 <module>
(call)|         1|  2.74181e-05|  2.74181e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/bottleneck/_version.py:7 <module>
(call)|         1|    0.0422869|    0.0422869|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/bottleneck/__init__.py:1 <module>
(call)|         1|      0.07042|      0.07042|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/nanops.py:1 <module>
(call)|         1|    0.0866954|    0.0866954|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/base.py:3 <module>
(call)|         1|  0.000740051|  0.000740051|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/missing.py:3 <module>
(call)|         1|  9.70364e-05|  9.70364e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/io/formats/console.py:3 <module>
(call)|         1|     0.125753|     0.125753|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/arrays/categorical.py:1 <module>
(call)|         1|  6.24657e-05|  6.24657e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/dateutil/easter.py:5 <module>
(call)|         1|   0.00698209|   0.00698209|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/tools/datetimes.py:1 <module>
(call)|         1|    0.0468853|    0.0468853|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/tseries/offsets.py:1 <module>
(call)|         1|    0.0527565|    0.0527565|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/tseries/frequencies.py:1 <module>
(call)|         1|    0.0740287|    0.0740287|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/arrays/datetimelike.py:1 <module>
(call)|         1|  0.000779629|  0.000779629|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/arrays/_ranges.py:4 <module>
(call)|         1|    0.0902135|    0.0902135|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/arrays/datetimes.py:1 <module>
(call)|         1|  0.000286102|  0.000286102|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/tools/numeric.py:1 <module>
(call)|         1|   0.00863481|   0.00863481|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/arrays/integer.py:1 <module>
(call)|         1|  0.000490904|  0.000490904|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/dtypes/concat.py:3 <module>
(call)|         1|  0.000540495|  0.000540495|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/io/formats/printing.py:3 <module>
(call)|         1|   0.00418496|   0.00418496|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/indexes/frozen.py:9 <module>
(call)|         1|    0.0417705|    0.0417705|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/strings.py:1 <module>
(call)|         1|     0.125795|     0.125795|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/indexes/base.py:1 <module>
(call)|         1|     0.143342|     0.143342|  0.04%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/arrays/interval.py:1 <module>
(call)|         1|   0.00488997|   0.00488997|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/arrays/numpy_.py:1 <module>
(call)|         1|    0.0112007|    0.0112007|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/arrays/period.py:1 <module>
(call)|         1|    0.0146005|    0.0146005|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/arrays/sparse.py:3 <module>
(call)|         1|    0.0055294|    0.0055294|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/arrays/timedeltas.py:1 <module>
(call)|         1|     0.617696|     0.617696|  0.17%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/arrays/__init__.py:1 <module>
(call)|         1|    0.0130658|    0.0130658|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/indexes/category.py:1 <module>
(call)|         1|  0.000479698|  0.000479698|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/tools/timedeltas.py:3 <module>
(call)|         1|       0.0102|       0.0102|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/indexes/datetimelike.py:3 <module>
(call)|         1|    0.0160716|    0.0160716|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/indexes/numeric.py:1 <module>
(call)|         1|    0.0444815|    0.0444815|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/indexes/datetimes.py:1 <module>
(call)|         1|  0.000192165|  0.000192165|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/util/_exceptions.py:1 <module>
(call)|         1|    0.0310931|    0.0310931|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/indexes/multi.py:1 <module>
(call)|         1|   0.00751042|   0.00751042|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/indexes/timedeltas.py:1 <module>
(call)|         1|    0.0801764|    0.0801764|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/indexes/interval.py:1 <module>
(call)|         1|    0.0115833|    0.0115833|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/indexes/period.py:1 <module>
(call)|         1|   0.00709629|   0.00709629|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/indexes/range.py:1 <module>
(call)|         1|     0.172299|     0.172299|  0.05%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/indexes/api.py:1 <module>
(call)|         1|     0.174862|     0.174862|  0.05%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/index.py:1 <module>
(call)|         1|   0.00914311|   0.00914311|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/indexing.py:1 <module>
(call)|         1|   6.1512e-05|   6.1512e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/internals/arrays.py:3 <module>
(call)|         1|    0.0305955|    0.0305955|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/internals/blocks.py:1 <module>
(call)|         1|  0.000970602|  0.000970602|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/internals/concat.py:2 <module>
(call)|         1|    0.0189991|    0.0189991|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/internals/managers.py:1 <module>
(call)|         1|    0.0577486|    0.0577486|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/internals/__init__.py:1 <module>
(call)|         1|   0.00123692|   0.00123692|  0.00%|# /opt/anaconda3/lib/python3.7/gzip.py:4 <module>
(call)|         1|    0.0101979|    0.0101979|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/io/common.py:1 <module>
(call)|         1|    0.0215104|    0.0215104|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/io/formats/format.py:4 <module>
(call)|         1|     0.376518|     0.376518|  0.10%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/generic.py:1 <module>
(call)|         1|    0.0019908|    0.0019908|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/internals/construction.py:4 <module>
(call)|         1|    0.0053997|    0.0053997|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/indexes/accessors.py:3 <module>
(call)|         1|   0.00108814|   0.00108814|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/cbook/deprecation.py:1 <module>
(call)|         1|     0.025275|     0.025275|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/cbook/__init__.py:7 <module>
(call)|         1|     0.482474|     0.482474|  0.13%|# /opt/anaconda3/lib/python3.7/site-packages/pyparsing.py:96 <module>
(call)|         1|     0.555776|     0.555776|  0.15%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/fontconfig_pattern.py:6 <module>
(call)|         1|   0.00220084|   0.00220084|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/docstring.py:1 <module>
(call)|         1|     0.040828|     0.040828|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/_color_data.py:1 <module>
(call)|         1|    0.0746064|    0.0746064|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/colors.py:66 <module>
(call)|         1|  0.000963688|  0.000963688|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/cycler.py:41 <module>
(call)|         1|      0.67503|      0.67503|  0.18%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/rcsetup.py:15 <module>
(call)|         1|  4.19617e-05|  4.19617e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/_version.py:7 <module>
(call)|         1|       0.9631|       0.9631|  0.26%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/__init__.py:101 <module>
(call)|         1|   0.00683498|   0.00683498|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/path.py:10 <module>
(call)|         1|    0.0190969|    0.0190969|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/transforms.py:30 <module>
(call)|         1|     0.219483|     0.219483|  0.06%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/artist.py:1 <module>
(call)|         1|   0.00427556|   0.00427556|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/dateutil/rrule.py:7 <module>
(call)|         1|  0.000514507|  0.000514507|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/units.py:43 <module>
(call)|         1|    0.0188649|    0.0188649|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/ticker.py:165 <module>
(call)|         1|     0.055603|     0.055603|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/dates.py:133 <module>
(call)|         1|    0.0632679|    0.0632679|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/plotting/_matplotlib/converter.py:1 <module>
(call)|         1|  0.000168324|  0.000168324|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/plotting/_matplotlib/compat.py:2 <module>
(call)|         1|    0.0630763|    0.0630763|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/_cm.py:7 <module>
(call)|         1|     0.409878|     0.409878|  0.11%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/_cm_listed.py:1 <module>
(call)|         1|     0.598169|     0.598169|  0.16%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/cm.py:16 <module>
(call)|         1|     0.601209|     0.601209|  0.16%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/plotting/_matplotlib/style.py:2 <module>
(call)|         1|    0.0107419|    0.0107419|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/markers.py:128 <module>
(call)|         1|        0.263|        0.263|  0.07%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/lines.py:4 <module>
(call)|         1|   0.00825477|   0.00825477|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/bezier.py:3 <module>
(call)|         1|     0.534896|     0.534896|  0.15%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/patches.py:1 <module>
(call)|         1|     0.153723|     0.153723|  0.04%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/_mathtext_data.py:3 <module>
(call)|         1|     0.160977|     0.160977|  0.04%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/afm.py:34 <module>
(call)|         1|     0.201411|     0.201411|  0.05%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/font_manager.py:14 <module>
(call)|         1|  7.84397e-05|  7.84397e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/_text_layout.py:3 <module>
(call)|         1|    0.0212374|    0.0212374|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/dviread.py:18 <module>
(call)|         1|     0.164378|     0.164378|  0.04%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/mathtext.py:16 <module>
(call)|         1|     0.200579|     0.200579|  0.05%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/textpath.py:1 <module>
(call)|         1|     0.786104|     0.786104|  0.21%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/text.py:3 <module>
(call)|         1|      1.38591|      1.38591|  0.38%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/table.py:20 <module>
(call)|         1|      1.38914|      1.38914|  0.38%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/plotting/_matplotlib/tools.py:2 <module>
(call)|         1|      2.00611|      2.00611|  0.55%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/plotting/_matplotlib/core.py:1 <module>
(call)|         1|      3.26923|      3.26923|  0.89%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/plotting/_matplotlib/boxplot.py:1 <module>
(call)|         1|   0.00120616|   0.00120616|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/plotting/_matplotlib/hist.py:1 <module>
(call)|         1|  0.000419617|  0.000419617|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/plotting/_matplotlib/misc.py:1 <module>
(call)|         1|  0.000594378|  0.000594378|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/plotting/_matplotlib/timeseries.py:3 <module>
(call)|         1|      3.28289|      3.28289|  0.89%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/plotting/_matplotlib/__init__.py:1 <module>
(call)|         1|       3.2894|       3.2894|  0.89%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/plotting/_core.py:1 <module>
(call)|         1|   0.00126195|   0.00126195|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/plotting/_misc.py:1 <module>
(call)|         1|      3.29611|      3.29611|  0.90%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/plotting/__init__.py:58 <module>
(call)|         1|  0.000284672|  0.000284672|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/groupby/base.py:5 <module>
(call)|         1|    0.0634739|    0.0634739|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/window.py:4 <module>
(call)|         1|      3.47482|      3.47482|  0.95%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/series.py:3 <module>
(call)|         1|      4.04219|      4.04219|  1.10%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/frame.py:10 <module>
(call)|         1|  0.000182867|  0.000182867|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/api/extensions/__init__.py:1 <module>
(call)|         1|  7.82013e-05|  7.82013e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/dtypes/api.py:3 <module>
(call)|         1|   0.00253606|   0.00253606|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/api/types/__init__.py:1 <module>
(call)|         1|   0.00894165|   0.00894165|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/api/__init__.py:1 <module>
(call)|         1|    0.0473387|    0.0473387|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/groupby/groupby.py:8 <module>
(call)|         1|  0.000210285|  0.000210285|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/sparse/scipy_sparse.py:5 <module>
(call)|         1|     0.035368|     0.035368|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/sparse/series.py:4 <module>
(call)|         1|     0.111525|     0.111525|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/sparse/frame.py:4 <module>
(call)|         1|      4.24354|      4.24354|  1.15%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/groupby/generic.py:7 <module>
(call)|         1|   0.00666809|   0.00666809|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/groupby/ops.py:7 <module>
(call)|         1|    0.0110002|    0.0110002|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/groupby/grouper.py:4 <module>
(call)|         1|      4.26077|      4.26077|  1.16%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/groupby/__init__.py:1 <module>
(call)|         1|   0.00230551|   0.00230551|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/reshape/reshape.py:1 <module>
(call)|         1|      4.89435|      4.89435|  1.33%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/api.py:3 <module>
(call)|         1|  0.000122547|  0.000122547|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/sparse/api.py:2 <module>
(call)|         1|  0.000189781|  0.000189781|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/tseries/api.py:3 <module>
(call)|         1|  0.000256777|  0.000256777|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/computation/common.py:1 <module>
(call)|         1|   0.00345731|   0.00345731|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/computation/align.py:2 <module>
(call)|         1|   0.00019455|   0.00019455|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/compat/chainmap.py:1 <module>
(call)|         1|   0.00373268|   0.00373268|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/computation/scope.py:3 <module>
(call)|         1|   0.00969481|   0.00969481|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/computation/ops.py:2 <module>
(call)|         1|    0.0193639|    0.0193639|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/computation/engines.py:3 <module>
(call)|         1|    0.0222156|    0.0222156|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/computation/eval.py:5 <module>
(call)|         1|    0.0248303|    0.0248303|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/computation/api.py:3 <module>
(call)|         1|   0.00129676|   0.00129676|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/reshape/concat.py:3 <module>
(call)|         1|   0.00223684|   0.00223684|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/reshape/melt.py:1 <module>
(call)|         1|    0.0068872|    0.0068872|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/reshape/merge.py:3 <module>
(call)|         1|  9.56059e-05|  9.56059e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/reshape/util.py:1 <module>
(call)|         1|   0.00707674|   0.00707674|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/reshape/pivot.py:1 <module>
(call)|         1|   0.00117278|   0.00117278|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/reshape/tile.py:3 <module>
(call)|         1|    0.0317893|    0.0317893|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/reshape/api.py:3 <module>
(call)|         1|  0.000149727|  0.000149727|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/util/_print_versions.py:1 <module>
(call)|         1|  0.000361919|  0.000361919|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/io/clipboards.py:1 <module>
(call)|         1|  0.000175476|  0.000175476|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/io/excel/_util.py:1 <module>
(call)|         1|  1.95503e-05|  1.95503e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/compat/__init__.py:72 _import_lzma
(call)|         1|  0.000143528|  0.000143528|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/io/date_converters.py:1 <module>
(call)|         1|     0.037415|     0.037415|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/io/parsers.py:3 <module>
(call)|         1|   0.00231886|   0.00231886|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/io/excel/_odfreader.py:1 <module>
(call)|         1|   0.00103951|   0.00103951|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/io/excel/_openpyxl.py:1 <module>
(call)|         1|   0.00043726|   0.00043726|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/io/excel/_xlrd.py:1 <module>
(call)|         1|    0.0608876|    0.0608876|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/io/excel/_base.py:1 <module>
(call)|         1|   0.00277925|   0.00277925|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/io/excel/_xlsxwriter.py:1 <module>
(call)|         1|  0.000369787|  0.000369787|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/io/excel/_xlwt.py:1 <module>
(call)|         1|    0.0721967|    0.0721967|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/io/excel/__init__.py:1 <module>
(call)|         1|  0.000643015|  0.000643015|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/io/feather_format.py:1 <module>
(call)|         1|  6.29425e-05|  6.29425e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/io/gbq.py:1 <module>
(call)|         1|   0.00771451|   0.00771451|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/io/html.py:4 <module>
(call)|         1|   0.00645614|   0.00645614|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/io/json/_normalize.py:4 <module>
(call)|         1|  0.000687122|  0.000687122|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/io/json/_table_schema.py:5 <module>
(call)|         1|    0.0163896|    0.0163896|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/io/json/_json.py:1 <module>
(call)|         1|     0.107286|     0.107286|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/io/json/__init__.py:1 <module>
(call)|         1|  0.000325918|  0.000325918|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/io/msgpack/exceptions.py:1 <module>
(call)|         1|  1.69277e-05|  1.69277e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/io/msgpack/_version.py:1 <module>
(call)|         1|    0.0111029|    0.0111029|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/io/msgpack/__init__.py:3 <module>
(call)|         1|     0.018604|     0.018604|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/io/packers.py:39 <module>
(call)|         1|  0.000732422|  0.000732422|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/io/parquet.py:1 <module>
(call)|         1|  0.000731468|  0.000731468|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/compat/pickle_compat.py:3 <module>
(call)|         1|   0.00345683|   0.00345683|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/io/pickle.py:1 <module>
(call)|         1|    0.0357387|    0.0357387|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/computation/expr.py:2 <module>
(call)|         1|    0.0417874|    0.0417874|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/core/computation/pytables.py:1 <module>
(call)|         1|    0.0979955|    0.0979955|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/io/pytables.py:4 <module>
(call)|         1|  5.50747e-05|  5.50747e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/io/sas/sasreader.py:3 <module>
(call)|         1|   0.00300002|   0.00300002|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/io/sas/__init__.py:1 <module>
(call)|         1|   0.00194693|   0.00194693|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/io/spss.py:1 <module>
(call)|         1|   0.00492072|   0.00492072|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/io/sql.py:4 <module>
(call)|         1|    0.0208578|    0.0208578|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/io/stata.py:11 <module>
(call)|         1|     0.378922|     0.378922|  0.10%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/io/api.py:3 <module>
(call)|         1|  0.000267982|  0.000267982|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/util/_tester.py:3 <module>
(call)|         1|    0.0221801|    0.0221801|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/util/testing.py:1 <module>
(call)|         1|    0.0255611|    0.0255611|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/testing.py:5 <module>
(call)|         1|  0.000208378|  0.000208378|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/arrays/__init__.py:5 <module>
(call)|         1|  0.000219584|  0.000219584|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/_version.py:7 <module>
(call)|         1|      6.91746|      6.91746|  1.88%|# /opt/anaconda3/lib/python3.7/site-packages/pandas/__init__.py:3 <module>
(call)|         1|   0.00635219|   0.00635219|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/channels/channels.py:16 <module>
(call)|         1|  0.000154734|  0.000154734|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/threads/neptune_thread.py:16 <module>
(call)|         1|    0.0073123|    0.0073123|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/channels/channels_values_sender.py:16 <module>
(call)|         1|    0.0365632|    0.0365632|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/psutil/_common.py:5 <module>
(call)|         1|  0.000563622|  0.000563622|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/psutil/_compat.py:5 <module>
(call)|         1|  0.000822544|  0.000822544|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/psutil/_psposix.py:5 <module>
(call)|         1|     0.120572|     0.120572|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/psutil/_pslinux.py:5 <module>
(call)|         1|     0.192751|     0.192751|  0.05%|# /opt/anaconda3/lib/python3.7/site-packages/psutil/__init__.py:21 <module>
(call)|         1|     0.197925|     0.197925|  0.05%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/abort.py:17 <module>
(call)|         1|  6.05583e-05|  6.05583e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/hardware/gauges/gauge_mode.py:18 <module>
(call)|         1|  0.000123501|  0.000123501|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/hardware/cgroup/cgroup_filesystem_reader.py:17 <module>
(call)|         1|  9.84669e-05|  9.84669e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/hardware/system/system_monitor.py:17 <module>
(call)|         1|   0.00845432|   0.00845432|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/hardware/cgroup/cgroup_monitor.py:17 <module>
(call)|         1|  0.000118256|  0.000118256|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/hardware/gauges/gauge.py:17 <module>
(call)|         1|    0.0167911|    0.0167911|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/hardware/gauges/cpu.py:17 <module>
(call)|         1|  1.97887e-05|  1.97887e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/hardware/constants.py:17 <module>
(call)|         1|     0.123454|     0.123454|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/py3nvml/py3nvml.py:32 <module>
(call)|         1|  0.000436306|  0.000436306|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/py3nvml/nvidia_smi.py:42 <module>
(call)|         1|  0.000426531|  0.000426531|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/py3nvml/utils.py:1 <module>
(call)|         1|     0.135324|     0.135324|  0.04%|# /opt/anaconda3/lib/python3.7/site-packages/py3nvml/__init__.py:1 <module>
(call)|         1|     0.140609|     0.140609|  0.04%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/hardware/gpu/gpu_monitor.py:17 <module>
(call)|         1|     0.147922|     0.147922|  0.04%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/hardware/gauges/gpu.py:16 <module>
(call)|         1|  0.000277519|  0.000277519|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/hardware/gauges/memory.py:17 <module>
(call)|         1|     0.172368|     0.172368|  0.05%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/hardware/gauges/gauge_factory.py:16 <module>
(call)|         1|  0.000323057|  0.000323057|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/hardware/metrics/metric.py:18 <module>
(call)|         1|  5.76973e-05|  5.76973e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/hardware/metrics/metrics_container.py:18 <module>
(call)|         1|   0.00564361|   0.00564361|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/hardware/metrics/metrics_factory.py:16 <module>
(call)|         1|   0.00200105|   0.00200105|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/hardware/metrics/reports/metric_report.py:17 <module>
(call)|         1|   0.00442195|   0.00442195|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/hardware/metrics/reports/metric_reporter.py:16 <module>
(call)|         1|   0.00684619|   0.00684619|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/hardware/metrics/reports/metric_reporter_factory.py:16 <module>
(call)|         1|  5.50747e-05|  5.50747e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/hardware/metrics/service/metric_service.py:18 <module>
(call)|         1|  8.22544e-05|  8.22544e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/hardware/resources/gpu_card_indices_provider.py:17 <module>
(call)|         1|  0.000108242|  0.000108242|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/hardware/resources/system_resource_info.py:18 <module>
(call)|         1|   0.00575519|   0.00575519|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/hardware/resources/system_resource_info_factory.py:17 <module>
(call)|         1|     0.209425|     0.209425|  0.06%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/hardware/metrics/service/metric_service_factory.py:16 <module>
(call)|         1|    0.0042398|    0.0042398|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/streams/channel_writer.py:17 <module>
(call)|         1|  0.000258207|  0.000258207|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/streams/stdstream_uploader.py:16 <module>
(call)|         1|   0.00037837|   0.00037837|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/websocket/_exceptions.py:21 <module>
(call)|         1|   0.00476336|   0.00476336|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/websocket/_utils.py:21 <module>
(call)|         1|    0.0116754|    0.0116754|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/websocket/_abnf.py:21 <module>
(call)|         1|   0.00442743|   0.00442743|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/websocket/_cookiejar.py:1 <module>
(call)|         1|  0.000921965|  0.000921965|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/websocket/_logging.py:21 <module>
(call)|         1|  0.000139952|  0.000139952|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/websocket/_ssl_compat.py:21 <module>
(call)|         1|   0.00302935|   0.00302935|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/websocket/_socket.py:21 <module>
(call)|         1|  0.000141621|  0.000141621|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/websocket/_url.py:21 <module>
(call)|         1|    0.0119326|    0.0119326|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/websocket/_http.py:21 <module>
(call)|         1|    0.0222077|    0.0222077|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/websocket/_handshake.py:21 <module>
(call)|         1|    0.0260057|    0.0260057|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/websocket/_core.py:21 <module>
(call)|         1|      0.02912|      0.02912|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/websocket/_app.py:21 <module>
(call)|         1|    0.0462477|    0.0462477|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/websocket/__init__.py:21 <module>
(call)|         1|  0.000449181|  0.000449181|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/websockets/message.py:18 <module>
(call)|         1|  0.000131845|  0.000131845|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/websockets/websocket_message_processor.py:16 <module>
(call)|         1|     0.059417|     0.059417|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/threads/aborting_thread.py:16 <module>
(call)|         1|  0.000456333|  0.000456333|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/threads/hardware_metric_reporting_thread.py:16 <module>
(call)|         1|  0.000513792|  0.000513792|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/threads/ping_thread.py:16 <module>
(call)|         1|  5.84126e-05|  5.84126e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/future/__init__.py:82 <module>
(call)|         1|   0.00181627|   0.00181627|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/future/utils/__init__.py:50 <module>
(call)|         1|    0.0112457|    0.0112457|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/websockets/websocket_client_adapter.py:17 <module>
(call)|         1|    0.0141551|    0.0141551|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/websockets/reconnecting_websocket.py:17 <module>
(call)|         1|    0.0169024|    0.0169024|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/websockets/reconnecting_websocket_factory.py:16 <module>
(call)|         1|  0.000129461|  0.000129461|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/git_info.py:18 <module>
(call)|         1|   0.00338817|   0.00338817|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/utils.py:17 <module>
(call)|         1|     0.535532|     0.535532|  0.15%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/execution/execution_context.py:16 <module>
(call)|         1|    0.0123763|    0.0123763|  0.00%|# /opt/anaconda3/lib/python3.7/tarfile.py:30 <module>
(call)|         1|  0.000141621|  0.000141621|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/future/builtins/iterators.py:33 <module>
(call)|         1|  0.000174046|  0.000174046|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/future/builtins/misc.py:39 <module>
(call)|         1|   0.00629759|   0.00629759|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/future/builtins/__init__.py:8 <module>
(call)|         1|    0.0259001|    0.0259001|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/storage/datastream.py:17 <module>
(call)|         1|     0.029572|     0.029572|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/storage/storage_utils.py:16 <module>
(call)|         1|  1.66893e-05|  1.66893e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/PIL/_version.py:2 <module>
(call)|         1|   0.00335479|   0.00335479|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/PIL/__init__.py:15 <module>
(call)|         1|  7.82013e-05|  7.82013e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/PIL/ImageMode.py:17 <module>
(call)|         1|    0.0104997|    0.0104997|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/PIL/TiffTags.py:20 <module>
(call)|         1|  0.000157595|  0.000157595|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/PIL/_util.py:1 <module>
(call)|         1|   0.00291204|   0.00291204|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/PIL/_binary.py:14 <module>
(call)|         1|  7.34329e-05|  7.34329e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/cffi/lock.py:1 <module>
(call)|         1|  0.000212193|  0.000212193|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/cffi/error.py:2 <module>
(call)|         1|   0.00468564|   0.00468564|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/cffi/model.py:1 <module>
(call)|         1|    0.0147188|    0.0147188|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/cffi/api.py:1 <module>
(call)|         1|    0.0178168|    0.0178168|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/cffi/__init__.py:1 <module>
(call)|         1|    0.0677443|    0.0677443|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/PIL/Image.py:27 <module>
(call)|         1|    0.0790563|    0.0790563|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/utils/image.py:16 <module>
(call)|         1|      7.60838|      7.60838|  2.07%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/experiments.py:16 <module>
(call)|         1|  0.000707388|  0.000707388|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/backends/credentials.py:17 <module>
(call)|         1|  0.000410318|  0.000410318|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/utils/http.py:16 <module>
(call)|         1|  0.000382423|  0.000382423|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/model.py:18 <module>
(call)|         1|  0.000124216|  0.000124216|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/notebook.py:17 <module>
(call)|         1|  0.000112057|  0.000112057|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/jwt/compat.py:4 <module>
(call)|         1|  0.000565052|  0.000565052|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/jwt/exceptions.py:1 <module>
(call)|         1|  8.89301e-05|  8.89301e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/cryptography/__about__.py:5 <module>
(call)|         1|    0.0028224|    0.0028224|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/cryptography/__init__.py:5 <module>
(call)|         1|   4.1008e-05|   4.1008e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/cryptography/hazmat/__init__.py:10 <module>
(call)|         1|  4.50611e-05|  4.50611e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/cryptography/hazmat/primitives/__init__.py:5 <module>
(call)|         1|  0.000370979|  0.000370979|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/cryptography/hazmat/primitives/asymmetric/__init__.py:5 <module>
(call)|         1|  0.000510693|  0.000510693|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/cryptography/utils.py:5 <module>
(call)|         1|  0.000427961|  0.000427961|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/cryptography/hazmat/_der.py:5 <module>
(call)|         1|   0.00568843|   0.00568843|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/cryptography/exceptions.py:5 <module>
(call)|         1|   7.4625e-05|   7.4625e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/cryptography/hazmat/backends/__init__.py:5 <module>
(call)|         1|   0.00478005|   0.00478005|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/cryptography/hazmat/backends/interfaces.py:5 <module>
(call)|         1|    0.0283954|    0.0283954|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/cryptography/hazmat/primitives/hashes.py:5 <module>
(call)|         1|    0.0375028|    0.0375028|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/cryptography/hazmat/primitives/asymmetric/utils.py:5 <module>
(call)|         1|    0.0561526|    0.0561526|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/jwt/utils.py:1 <module>
(call)|         1|    0.0108669|    0.0108669|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/cryptography/hazmat/primitives/serialization/base.py:5 <module>
(call)|         1|   0.00192714|   0.00192714|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/cryptography/hazmat/primitives/asymmetric/dsa.py:5 <module>
(call)|         1|   0.00019908|   0.00019908|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/cryptography/hazmat/_oid.py:5 <module>
(call)|         1|    0.0162971|    0.0162971|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/cryptography/hazmat/primitives/asymmetric/ec.py:5 <module>
(call)|         1|  0.000542402|  0.000542402|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/cryptography/hazmat/primitives/asymmetric/ed25519.py:5 <module>
(call)|         1|   0.00188851|   0.00188851|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/cryptography/hazmat/primitives/asymmetric/rsa.py:5 <module>
(call)|         1|    0.0314341|    0.0314341|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/cryptography/hazmat/primitives/serialization/ssh.py:5 <module>
(call)|         1|    0.0476935|    0.0476935|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/cryptography/hazmat/primitives/serialization/__init__.py:5 <module>
(call)|         1|  0.000917673|  0.000917673|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/cryptography/hazmat/primitives/asymmetric/padding.py:5 <module>
(call)|         1|     0.119075|     0.119075|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/jwt/algorithms.py:1 <module>
(call)|         1|     0.122405|     0.122405|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/jwt/api_jws.py:1 <module>
(call)|         1|     0.126305|     0.126305|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/jwt/api_jwt.py:1 <module>
(call)|         1|     0.129413|     0.129413|  0.04%|# /opt/anaconda3/lib/python3.7/site-packages/jwt/__init__.py:9 <module>
(call)|         1|  0.000454903|  0.000454903|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/__init__.py:10 <module>
(call)|         1|    0.0306623|    0.0306623|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/common.py:8 <module>
(call)|         1|   0.00589728|   0.00589728|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth2/rfc6749/utils.py:7 <module>
(call)|         1|   0.00293946|   0.00293946|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth2/rfc6749/errors.py:8 <module>
(call)|         1|   0.00592923|   0.00592923|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth2/rfc6749/endpoints/base.py:8 <module>
(call)|         1|    0.0512178|    0.0512178|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth2/rfc6749/endpoints/authorization.py:8 <module>
(call)|         1|  0.000735044|  0.000735044|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth2/rfc6749/endpoints/introspect.py:9 <module>
(call)|         1|    0.0010674|    0.0010674|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth2/rfc6749/endpoints/token.py:8 <module>
(call)|         1|  0.000818014|  0.000818014|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth2/rfc6749/endpoints/revocation.py:9 <module>
(call)|         1|  0.000514507|  0.000514507|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/uri_validate.py:10 <module>
(call)|         1|  0.000898361|  0.000898361|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth2/rfc6749/request_validator.py:5 <module>
(call)|         1|   0.00801635|   0.00801635|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth2/rfc6749/grant_types/base.py:5 <module>
(call)|         1|    0.0116999|    0.0116999|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth2/rfc6749/grant_types/authorization_code.py:5 <module>
(call)|         1|  0.000938416|  0.000938416|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth2/rfc6749/grant_types/implicit.py:5 <module>
(call)|         1|  0.000861168|  0.000861168|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth2/rfc6749/grant_types/resource_owner_password_credentials.py:5 <module>
(call)|         1|   0.00085187|   0.00085187|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth2/rfc6749/grant_types/client_credentials.py:5 <module>
(call)|         1|  0.000836134|  0.000836134|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth2/rfc6749/grant_types/refresh_token.py:5 <module>
(call)|         1|    0.0286436|    0.0286436|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth2/rfc6749/grant_types/__init__.py:5 <module>
(call)|         1|    0.0397685|    0.0397685|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth2/rfc6749/endpoints/metadata.py:9 <module>
(call)|         1|  0.000748873|  0.000748873|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth2/rfc6749/endpoints/resource.py:8 <module>
(call)|         1|   0.00564623|   0.00564623|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth2/rfc6749/tokens.py:9 <module>
(call)|         1|   0.00951838|   0.00951838|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth2/rfc6749/endpoints/pre_configured.py:8 <module>
(call)|         1|     0.116022|     0.116022|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth2/rfc6749/endpoints/__init__.py:8 <module>
(call)|         1|      0.11991|      0.11991|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth2/rfc6749/__init__.py:8 <module>
(call)|         1|   0.00462627|   0.00462627|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/signals.py:6 <module>
(call)|         1|    0.0122235|    0.0122235|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth2/rfc6749/parameters.py:9 <module>
(call)|         1|    0.0158458|    0.0158458|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth2/rfc6749/clients/base.py:8 <module>
(call)|         1|  0.000333548|  0.000333548|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth2/rfc6749/clients/web_application.py:8 <module>
(call)|         1|  0.000273466|  0.000273466|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth2/rfc6749/clients/mobile_application.py:8 <module>
(call)|         1|   0.00023818|   0.00023818|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth2/rfc6749/clients/legacy_application.py:8 <module>
(call)|         1|  0.000291586|  0.000291586|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth2/rfc6749/clients/backend_application.py:8 <module>
(call)|         1|  0.000288963|  0.000288963|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth2/rfc6749/clients/service_application.py:8 <module>
(call)|         1|    0.0338578|    0.0338578|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth2/rfc6749/clients/__init__.py:8 <module>
(call)|         1|     0.161622|     0.161622|  0.04%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth2/__init__.py:8 <module>
(call)|         1|   0.00449038|   0.00449038|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth1/rfc5849/utils.py:8 <module>
(call)|         1|    0.0113058|    0.0113058|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth1/rfc5849/parameters.py:9 <module>
(call)|         1|    0.0049603|    0.0049603|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth1/rfc5849/signature.py:23 <module>
(call)|         1|     0.027257|     0.027257|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth1/rfc5849/__init__.py:8 <module>
(call)|         1|  0.000767469|  0.000767469|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth1/rfc5849/request_validator.py:8 <module>
(call)|         1|  0.000360727|  0.000360727|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth1/rfc5849/errors.py:8 <module>
(call)|         1|   0.00322437|   0.00322437|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth1/rfc5849/endpoints/base.py:8 <module>
(call)|         1|   0.00054884|   0.00054884|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth1/rfc5849/endpoints/request_token.py:10 <module>
(call)|         1|   0.00217247|   0.00217247|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth1/rfc5849/endpoints/authorization.py:8 <module>
(call)|         1|  0.000709772|  0.000709772|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth1/rfc5849/endpoints/access_token.py:10 <module>
(call)|         1|  0.000605345|  0.000605345|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth1/rfc5849/endpoints/resource.py:8 <module>
(call)|         1|  0.000487804|  0.000487804|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth1/rfc5849/endpoints/signature_only.py:7 <module>
(call)|         1|  0.000497103|  0.000497103|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth1/rfc5849/endpoints/pre_configured.py:1 <module>
(call)|         1|     0.027061|     0.027061|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth1/rfc5849/endpoints/__init__.py:1 <module>
(call)|         1|    0.0639925|    0.0639925|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/oauthlib/oauth1/__init__.py:8 <module>
(call)|         1|    0.0671744|    0.0671744|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/requests_oauthlib/oauth1_auth.py:2 <module>
(call)|         1|   0.00586486|   0.00586486|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/requests_oauthlib/oauth1_session.py:1 <module>
(call)|         1|   0.00028801|   0.00028801|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/requests_oauthlib/oauth2_auth.py:1 <module>
(call)|         1|   0.00116563|   0.00116563|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/requests_oauthlib/oauth2_session.py:1 <module>
(call)|         1|    0.0862894|    0.0862894|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/requests_oauthlib/__init__.py:1 <module>
(call)|         1|     0.395953|     0.395953|  0.11%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/oauth.py:16 <module>
(call)|         1|  0.000491142|  0.000491142|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/notebooks/comm.py:16 <module>
(call)|         1|   0.00392246|   0.00392246|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/notebooks/notebooks.py:16 <module>
(call)|         1|    0.0110016|    0.0110016|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/projects.py:17 <module>
(call)|         1|      20.8695|      20.8695|  5.68%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/backends/hosted_neptune_backend.py:16 <module>
(call)|         1|   0.00116444|   0.00116444|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/backends/offline_backend.py:16 <module>
(call)|         1|  1.83582e-05|  1.83582e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/patterns.py:18 <module>
(call)|         1|   0.00322056|   0.00322056|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/sessions.py:17 <module>
(call)|         1|  2.71797e-05|  2.71797e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/_version.py:7 <module>
(call)|         1|      20.9025|      20.9025|  5.69%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/__init__.py:16 <module>
(call)|         1|   0.00086689|   0.00086689|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/_utils.py:1 <module>
(call)|         1|  0.000378847|  0.000378847|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/_utils_internal.py:1 <module>
(call)|         1|  3.29018e-05|  3.29018e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/version.py:1 <module>
(call)|         1|  0.000480413|  0.000480413|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/_six.py:21 <module>
(call)|         1|  0.000385523|  0.000385523|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/random.py:1 <module>
(call)|         1|   0.00371599|   0.00371599|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/serialization.py:1 <module>
(call)|         1|  0.000667334|  0.000667334|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/_tensor_str.py:1 <module>
(call)|         1|  0.000234365|  0.000234365|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/_namedtensor_internals.py:1 <module>
(call)|         1|  0.000504017|  0.000504017|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/utils/throughput_benchmark.py:1 <module>
(call)|         1|   0.00342703|   0.00342703|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/utils/__init__.py:1 <module>
(call)|         1|  0.000277996|  0.000277996|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/utils/hooks.py:1 <module>
(call)|         1|    0.0179725|    0.0179725|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/tensor.py:1 <module>
(call)|         1|  0.000689983|  0.000689983|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/storage.py:1 <module>
(call)|         1|  0.000317335|  0.000317335|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/cuda/_utils.py:1 <module>
(call)|         1|  0.000801086|  0.000801086|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/cuda/memory.py:1 <module>
(call)|         1|  0.000544071|  0.000544071|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/cuda/random.py:1 <module>
(call)|         1|  0.000503778|  0.000503778|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/cuda/profiler.py:1 <module>
(call)|         1|  7.48634e-05|  7.48634e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/cuda/nvtx.py:1 <module>
(call)|         1|  0.000497103|  0.000497103|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/cuda/streams.py:1 <module>
(call)|         1|  0.000874758|  0.000874758|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/cuda/amp/grad_scaler.py:1 <module>
(call)|         1|   0.00403714|   0.00403714|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/cuda/amp/__init__.py:1 <module>
(call)|         1|    0.0466545|    0.0466545|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torch/cuda/__init__.py:9 <module>
(call)|         1|  0.000181198|  0.000181198|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/sparse/__init__.py:2 <module>
(call)|         1|  0.000292778|  0.000292778|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/parameter.py:1 <module>
(call)|         1|   0.00661492|   0.00661492|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:1 <module>
(call)|         1|  3.67165e-05|  3.67165e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/_reduction.py:1 <module>
(call)|         1|   0.00026536|   0.00026536|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/utils.py:1 <module>
(call)|         1|  0.000418186|  0.000418186|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/grad.py:1 <module>
(call)|         1|  0.000263214|  0.000263214|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/_VF.py:1 <module>
(call)|         1|     0.016252|     0.016252|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/typing_extensions.py:1 <module>
(call)|         1|    0.0256486|    0.0256486|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torch/_jit_internal.py:5 <module>
(call)|         1|   0.00154209|   0.00154209|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/_overrides.py:16 <module>
(call)|         1|    0.0740678|    0.0740678|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/functional.py:1 <module>
(call)|         1|   0.00119424|   0.00119424|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/init.py:1 <module>
(call)|         1|    0.0820732|    0.0820732|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/linear.py:1 <module>
(call)|         1|   0.00300264|   0.00300264|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/conv.py:2 <module>
(call)|         1|   0.00547099|   0.00547099|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/activation.py:1 <module>
(call)|         1|   0.00347304|   0.00347304|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/loss.py:1 <module>
(call)|         1|   0.00234723|   0.00234723|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/container.py:1 <module>
(call)|         1|   0.00370812|   0.00370812|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/pooling.py:1 <module>
(call)|         1|  0.000442266|  0.000442266|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/variable.py:1 <module>
(call)|         1|   0.00277472|   0.00277472|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/function.py:1 <module>
(call)|         1|  0.000283241|  0.000283241|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/testing/__init__.py:3 <module>
(call)|         1|   0.00388241|   0.00388241|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/gradcheck.py:1 <module>
(call)|         1|   0.00043273|   0.00043273|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/grad_mode.py:1 <module>
(call)|         1|  0.000296831|  0.000296831|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/anomaly_mode.py:1 <module>
(call)|         1|    0.0038693|    0.0038693|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/profiler.py:1 <module>
(call)|         1|  0.000422716|  0.000422716|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/functional.py:1 <module>
(call)|         1|    0.0341754|    0.0341754|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/__init__.py:6 <module>
(call)|         1|    0.0380225|    0.0380225|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/_functions.py:1 <module>
(call)|         1|    0.0422907|    0.0422907|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/batchnorm.py:1 <module>
(call)|         1|  0.000664949|  0.000664949|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/instancenorm.py:1 <module>
(call)|         1|   0.00133491|   0.00133491|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/normalization.py:1 <module>
(call)|         1|   0.00073123|   0.00073123|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/dropout.py:1 <module>
(call)|         1|   0.00130773|   0.00130773|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/padding.py:1 <module>
(call)|         1|   0.00105095|   0.00105095|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/sparse.py:1 <module>
(call)|         1|    0.0022943|    0.0022943|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/utils/rnn.py:1 <module>
(call)|         1|  0.000225067|  0.000225067|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/utils/clip_grad.py:1 <module>
(call)|         1|  0.000482321|  0.000482321|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/utils/weight_norm.py:3 <module>
(call)|         1|  0.000169516|  0.000169516|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/utils/convert_parameters.py:1 <module>
(call)|         1|  0.000533819|  0.000533819|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/utils/spectral_norm.py:3 <module>
(call)|         1|  0.000259399|  0.000259399|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/utils/fusion.py:2 <module>
(call)|         1|  0.000153065|  0.000153065|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/utils/memory_format.py:1 <module>
(call)|         1|    0.0227931|    0.0227931|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/utils/__init__.py:1 <module>
(call)|         1|    0.0294178|    0.0294178|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/rnn.py:1 <module>
(call)|         1|  0.000389099|  0.000389099|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/pixelshuffle.py:1 <module>
(call)|         1|  0.000558138|  0.000558138|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/upsampling.py:1 <module>
(call)|         1|  0.000481606|  0.000481606|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/distance.py:1 <module>
(call)|         1|  0.000445843|  0.000445843|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/fold.py:2 <module>
(call)|         1|   0.00147319|   0.00147319|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/adaptive.py:3 <module>
(call)|         1|   0.00169992|   0.00169992|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/transformer.py:1 <module>
(call)|         1|    0.0001297|    0.0001297|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/flatten.py:1 <module>
(call)|         1|     0.246118|     0.246118|  0.07%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/__init__.py:1 <module>
(call)|         1|  0.000278473|  0.000278473|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/parallel/parallel_apply.py:1 <module>
(call)|         1|  0.000237226|  0.000237226|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/cuda/nccl.py:1 <module>
(call)|         1|   0.00327373|   0.00327373|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/cuda/comm.py:1 <module>
(call)|         1|   0.00633383|   0.00633383|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/parallel/replicate.py:1 <module>
(call)|         1|   0.00109148|   0.00109148|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/parallel/_functions.py:1 <module>
(call)|         1|   0.00387263|   0.00387263|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/parallel/scatter_gather.py:1 <module>
(call)|         1|   0.00714326|   0.00714326|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/parallel/data_parallel.py:1 <module>
(call)|         1|  5.60284e-05|  5.60284e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributed/constants.py:1 <module>
(call)|         1|  0.000803232|  0.000803232|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributed/rendezvous.py:1 <module>
(call)|         1|    0.0139949|    0.0139949|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributed/distributed_c10d.py:1 <module>
(call)|         1|    0.0186601|    0.0186601|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributed/__init__.py:1 <module>
(call)|         1|    0.0228422|    0.0228422|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/parallel/distributed.py:1 <module>
(call)|         1|    0.0474036|    0.0474036|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/parallel/__init__.py:1 <module>
(call)|         1|     0.302244|     0.302244|  0.08%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/__init__.py:1 <module>
(call)|         1|  0.000213861|  0.000213861|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/_linalg_utils.py:3 <module>
(call)|         1|   0.00309825|   0.00309825|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/_lowrank.py:2 <module>
(call)|         1|     0.313371|     0.313371|  0.09%|# /opt/anaconda3/lib/python3.7/site-packages/torch/functional.py:1 <module>
(call)|         1|  0.000597715|  0.000597715|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/intrinsic/modules/fused.py:1 <module>
(call)|         1|   0.00364947|   0.00364947|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/intrinsic/modules/__init__.py:3 <module>
(call)|         1|   0.00691915|   0.00691915|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/intrinsic/__init__.py:3 <module>
(call)|         1|  0.000828028|  0.000828028|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/quantized/functional.py:1 <module>
(call)|         1|   0.00439835|   0.00439835|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/quantized/modules/activation.py:1 <module>
(call)|         1|  0.000700951|  0.000700951|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/quantized/modules/batchnorm.py:1 <module>
(call)|         1|  0.000508785|  0.000508785|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/qat/modules/linear.py:1 <module>
(call)|         1|  0.000353098|  0.000353098|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/qat/modules/conv.py:1 <module>
(call)|         1|   0.00655627|   0.00655627|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/qat/modules/__init__.py:3 <module>
(call)|         1|   0.00929308|   0.00929308|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/qat/__init__.py:1 <module>
(call)|         1|    0.0125465|    0.0125465|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/intrinsic/qat/modules/linear_relu.py:1 <module>
(call)|         1|   0.00175881|   0.00175881|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/intrinsic/qat/modules/conv_fused.py:1 <module>
(call)|         1|    0.0197875|    0.0197875|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/intrinsic/qat/modules/__init__.py:1 <module>
(call)|         1|    0.0230818|    0.0230818|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/intrinsic/qat/__init__.py:1 <module>
(call)|         1|    0.0012362|    0.0012362|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/jit/annotations.py:1 <module>
(call)|         1|   0.00430703|   0.00430703|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/jit/frontend.py:1 <module>
(call)|         1|  0.000434399|  0.000434399|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/backends/__init__.py:1 <module>
(call)|         1|  0.000831604|  0.000831604|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/backends/cudnn/__init__.py:1 <module>
(call)|         1|   0.00877929|   0.00877929|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/jit/_builtins.py:1 <module>
(call)|         1|     0.021028|     0.021028|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torch/jit/_recursive.py:1 <module>
(call)|         1|  0.000731707|  0.000731707|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributed/autograd/__init__.py:1 <module>
(call)|         1|    0.0954857|    0.0954857|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/torch/jit/__init__.py:1 <module>
(call)|         1|    0.0999839|    0.0999839|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/torch/_ops.py:1 <module>
(call)|         1|  0.000177622|  0.000177622|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/quantized/modules/utils.py:1 <module>
(call)|         1|     0.133345|     0.133345|  0.04%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/quantized/modules/conv.py:2 <module>
(call)|         1|   0.00105095|   0.00105095|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/quantized/modules/linear.py:1 <module>
(call)|         1|  0.000734568|  0.000734568|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/quantized/modules/functional_modules.py:1 <module>
(call)|         1|     0.266953|     0.266953|  0.07%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/quantized/modules/__init__.py:3 <module>
(call)|         1|     0.270749|     0.270749|  0.07%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/quantized/__init__.py:1 <module>
(call)|         1|  0.000813246|  0.000813246|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/optim/optimizer.py:1 <module>
(call)|         1|   0.00397396|   0.00397396|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/optim/adadelta.py:1 <module>
(call)|         1|  0.000556469|  0.000556469|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/optim/adagrad.py:1 <module>
(call)|         1|  0.000629902|  0.000629902|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/optim/adam.py:1 <module>
(call)|         1|  0.000526428|  0.000526428|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/optim/adamw.py:1 <module>
(call)|         1|  0.000511646|  0.000511646|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/optim/sparse_adam.py:1 <module>
(call)|         1|   0.00053668|   0.00053668|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/optim/adamax.py:1 <module>
(call)|         1|  0.000500202|  0.000500202|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/optim/asgd.py:1 <module>
(call)|         1|  0.000569105|  0.000569105|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/optim/sgd.py:1 <module>
(call)|         1|  0.000512123|  0.000512123|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/optim/rprop.py:1 <module>
(call)|         1|  0.000536203|  0.000536203|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/optim/rmsprop.py:1 <module>
(call)|         1|  0.000704765|  0.000704765|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/optim/lbfgs.py:1 <module>
(call)|         1|    0.0031538|    0.0031538|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/optim/lr_scheduler.py:1 <module>
(call)|         1|    0.0458009|    0.0458009|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torch/optim/__init__.py:6 <module>
(call)|         1|     0.002882|     0.002882|  0.00%|# /opt/anaconda3/lib/python3.7/multiprocessing/process.py:10 <module>
(call)|         1|   0.00171399|   0.00171399|  0.00%|# /opt/anaconda3/lib/python3.7/multiprocessing/reduction.py:10 <module>
(call)|         1|    0.0135977|    0.0135977|  0.00%|# /opt/anaconda3/lib/python3.7/multiprocessing/context.py:1 <module>
(call)|         1|    0.0176039|    0.0176039|  0.00%|# /opt/anaconda3/lib/python3.7/multiprocessing/__init__.py:15 <module>
(call)|         1|   0.00134802|   0.00134802|  0.00%|# /opt/anaconda3/lib/python3.7/multiprocessing/util.py:10 <module>
(call)|         1|  0.000715256|  0.000715256|  0.00%|# /opt/anaconda3/lib/python3.7/multiprocessing/resource_sharer.py:11 <module>
(call)|         1|    0.0296035|    0.0296035|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torch/multiprocessing/reductions.py:1 <module>
(call)|         1|     0.011261|     0.011261|  0.00%|# /opt/anaconda3/lib/python3.7/multiprocessing/connection.py:10 <module>
(call)|         1|    0.0145404|    0.0145404|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/multiprocessing/spawn.py:1 <module>
(call)|         1|    0.0523407|    0.0523407|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torch/multiprocessing/__init__.py:15 <module>
(call)|         1|  0.000371456|  0.000371456|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/utils/backcompat/__init__.py:1 <module>
(call)|         1|  0.000463724|  0.000463724|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/onnx/__init__.py:1 <module>
(call)|         1|    0.0083487|    0.0083487|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/tqdm/utils.py:1 <module>
(call)|         1|  0.000335932|  0.000335932|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/tqdm/_monitor.py:1 <module>
(call)|         1|    0.0196497|    0.0196497|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/tqdm/std.py:9 <module>
(call)|         1|   0.00053215|   0.00053215|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/tqdm/gui.py:9 <module>
(call)|         1|  5.98431e-05|  5.98431e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/tqdm/_tqdm_pandas.py:1 <module>
(call)|         1|  0.000588417|  0.000588417|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/tqdm/_version.py:2 <module>
(call)|         1|    0.0260885|    0.0260885|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/tqdm/cli.py:1 <module>
(call)|         1|    0.0580761|    0.0580761|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/tqdm/__init__.py:1 <module>
(call)|         1|  0.000257015|  0.000257015|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/tqdm/autonotebook.py:1 <module>
(call)|         1|   0.00327587|   0.00327587|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/tqdm/auto.py:1 <module>
(call)|         1|    0.0756822|    0.0756822|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/torch/hub.py:1 <module>
(call)|         1|   0.00348735|   0.00348735|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/constraints.py:21 <module>
(call)|         1|  0.000523806|  0.000523806|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/utils.py:1 <module>
(call)|         1|   0.00408816|   0.00408816|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/distribution.py:1 <module>
(call)|         1|   0.00707173|   0.00707173|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/exp_family.py:1 <module>
(call)|         1|    0.0170989|    0.0170989|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/bernoulli.py:1 <module>
(call)|         1|   0.00102878|   0.00102878|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/dirichlet.py:1 <module>
(call)|         1|   0.00440693|   0.00440693|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/beta.py:1 <module>
(call)|         1|  0.000994444|  0.000994444|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/binomial.py:1 <module>
(call)|         1|   0.00157857|   0.00157857|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/categorical.py:1 <module>
(call)|         1|  0.000700474|  0.000700474|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/cauchy.py:1 <module>
(call)|         1|  0.000683784|  0.000683784|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/gamma.py:1 <module>
(call)|         1|   0.00365329|   0.00365329|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/chi2.py:1 <module>
(call)|         1|   0.00524402|   0.00524402|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/transforms.py:1 <module>
(call)|         1|     0.010844|     0.010844|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/constraint_registry.py:66 <module>
(call)|         1|   0.00149131|   0.00149131|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/continuous_bernoulli.py:1 <module>
(call)|         1|  0.000716209|  0.000716209|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/exponential.py:1 <module>
(call)|         1|  0.000837803|  0.000837803|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/fishersnedecor.py:1 <module>
(call)|         1|   0.00101209|   0.00101209|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/geometric.py:1 <module>
(call)|         1|  0.000787497|  0.000787497|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/uniform.py:1 <module>
(call)|         1|  0.000690699|  0.000690699|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/transformed_distribution.py:1 <module>
(call)|         1|   0.00723982|   0.00723982|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/gumbel.py:1 <module>
(call)|         1|  0.000685215|  0.000685215|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/half_cauchy.py:1 <module>
(call)|         1|  0.000813961|  0.000813961|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/normal.py:1 <module>
(call)|         1|   0.00389862|   0.00389862|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/half_normal.py:1 <module>
(call)|         1|  0.000728846|  0.000728846|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/independent.py:1 <module>
(call)|         1|  0.000695944|  0.000695944|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/laplace.py:1 <module>
(call)|         1|   0.00122142|   0.00122142|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/multivariate_normal.py:1 <module>
(call)|         1|   0.00515032|   0.00515032|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/lowrank_multivariate_normal.py:1 <module>
(call)|         1|   0.00061202|   0.00061202|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/one_hot_categorical.py:1 <module>
(call)|         1|  0.000432968|  0.000432968|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/pareto.py:1 <module>
(call)|         1|  0.000666857|  0.000666857|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/poisson.py:1 <module>
(call)|         1|    0.0398588|    0.0398588|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/kl.py:1 <module>
(call)|         1|  0.000455141|  0.000455141|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/log_normal.py:1 <module>
(call)|         1|  0.000527859|  0.000527859|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/logistic_normal.py:1 <module>
(call)|         1|  0.000878334|  0.000878334|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/mixture_same_family.py:1 <module>
(call)|         1|   0.00105858|   0.00105858|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/multinomial.py:1 <module>
(call)|         1|   0.00128388|   0.00128388|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/negative_binomial.py:1 <module>
(call)|         1|   0.00120854|   0.00120854|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/relaxed_bernoulli.py:1 <module>
(call)|         1|  0.000919819|  0.000919819|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/relaxed_categorical.py:1 <module>
(call)|         1|  0.000639915|  0.000639915|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/studentT.py:1 <module>
(call)|         1|  0.000352383|  0.000352383|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributed/rpc/constants.py:1 <module>
(call)|         1|   0.00908113|   0.00908113|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributed/rpc/backend_registry.py:1 <module>
(call)|         1|   0.00430918|   0.00430918|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributed/rpc/internal.py:1 <module>
(call)|         1|    0.0216966|    0.0216966|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributed/rpc/api.py:1 <module>
(call)|         1|    0.0264146|    0.0264146|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributed/rpc/__init__.py:1 <module>
(call)|         1|     0.432049|     0.432049|  0.12%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/von_mises.py:1 <module>
(call)|         1|   0.00074029|   0.00074029|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/weibull.py:1 <module>
(call)|         1|     0.606155|     0.606155|  0.16%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/__init__.py:72 <module>
(call)|         1|  0.000752687|  0.000752687|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/backends/cuda/__init__.py:1 <module>
(call)|         1|  0.000136852|  0.000136852|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/backends/mkl/__init__.py:1 <module>
(call)|         1|  0.000572443|  0.000572443|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/backends/mkldnn/__init__.py:1 <module>
(call)|         1|  0.000163078|  0.000163078|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/backends/openmp/__init__.py:1 <module>
(call)|         1|  0.000424147|  0.000424147|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/backends/quantized/__init__.py:1 <module>
(call)|         1|  0.000503302|  0.000503302|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/intrinsic/quantized/modules/linear_relu.py:1 <module>
(call)|         1|  0.000933409|  0.000933409|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/intrinsic/quantized/modules/conv_relu.py:1 <module>
(call)|         1|   0.00664902|   0.00664902|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/intrinsic/quantized/modules/__init__.py:3 <module>
(call)|         1|   0.00967312|   0.00967312|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/intrinsic/quantized/__init__.py:1 <module>
(call)|         1|  0.000567675|  0.000567675|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/quantized/dynamic/modules/linear.py:1 <module>
(call)|         1|   0.00192571|   0.00192571|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/quantized/dynamic/modules/rnn.py:1 <module>
(call)|         1|   0.00804973|   0.00804973|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/quantized/dynamic/modules/__init__.py:3 <module>
(call)|         1|    0.0115216|    0.0115216|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/quantized/dynamic/__init__.py:2 <module>
(call)|         1|  0.000340462|  0.000340462|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/quantization/stubs.py:2 <module>
(call)|         1|    0.0302367|    0.0302367|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torch/quantization/default_mappings.py:2 <module>
(call)|         1|   0.00510693|   0.00510693|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/quantization/observer.py:1 <module>
(call)|         1|   0.00107145|   0.00107145|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/quantization/fake_quantize.py:1 <module>
(call)|         1|    0.0141211|    0.0141211|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/quantization/qconfig.py:1 <module>
(call)|         1|    0.0506792|    0.0506792|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torch/quantization/quantize.py:1 <module>
(call)|         1|  0.000427008|  0.000427008|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/quantization/fuse_modules.py:1 <module>
(call)|         1|    0.0568759|    0.0568759|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/torch/quantization/__init__.py:1 <module>
(call)|         1|  0.000623703|  0.000623703|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/utils/data/sampler.py:1 <module>
(call)|         1|  0.000657082|  0.000657082|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/utils/data/distributed.py:1 <module>
(call)|         1|  0.000835657|  0.000835657|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/utils/data/dataset.py:1 <module>
(call)|         1|  0.000317097|  0.000317097|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/utils/data/_utils/signal_handling.py:31 <module>
(call)|         1|   0.00502372|   0.00502372|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/utils/data/_utils/worker.py:5 <module>
(call)|         1|  0.000427246|  0.000427246|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/utils/data/_utils/pin_memory.py:6 <module>
(call)|         1|   0.00370455|   0.00370455|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/utils/data/_utils/collate.py:6 <module>
(call)|         1|  0.000163317|  0.000163317|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/utils/data/_utils/fetch.py:4 <module>
(call)|         1|    0.0209188|    0.0209188|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torch/utils/data/_utils/__init__.py:8 <module>
(call)|         1|     0.025249|     0.025249|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torch/utils/data/dataloader.py:6 <module>
(call)|         1|    0.0376439|    0.0376439|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torch/utils/data/__init__.py:1 <module>
(call)|         1|  0.000208855|  0.000208855|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/__config__.py:1 <module>
(call)|         1|  2.83718e-05|  2.83718e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/__future__.py:11 <module>
(call)|         1|    0.0134261|    0.0134261|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/_torch_docs.py:1 <module>
(call)|         1|    0.0228376|    0.0228376|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torch/_tensor_docs.py:1 <module>
(call)|         1|  0.000496626|  0.000496626|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/_storage_docs.py:1 <module>
(call)|         1|  0.000314236|  0.000314236|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/_classes.py:1 <module>
(call)|         1|  0.000255585|  0.000255585|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/quasirandom.py:1 <module>
(call)|         1|   0.00011301|   0.00011301|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/multiprocessing/_atfork.py:1 <module>
(call)|         1|  0.000885487|  0.000885487|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/_lobpcg.py:2 <module>
(call)|         1|       1.9413|       1.9413|  0.53%|# /opt/anaconda3/lib/python3.7/site-packages/torch/__init__.py:11 <module>
(call)|         1|  0.000288963|  0.000288963|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/_pylab_helpers.py:3 <module>
(call)|         1|    0.0159421|    0.0159421|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/backend_tools.py:12 <module>
(call)|         1|  8.84533e-05|  8.84533e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/tight_bbox.py:3 <module>
(call)|         1|     0.010114|     0.010114|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/widgets.py:10 <module>
(call)|         1|    0.0613413|    0.0613413|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/backend_bases.py:33 <module>
(call)|         1|    0.0656264|    0.0656264|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/backends/__init__.py:1 <module>
(call)|         1|   0.00085187|   0.00085187|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/category.py:11 <module>
(call)|         1|      0.28966|      0.28966|  0.08%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/collections.py:10 <module>
(call)|         1|     0.018796|     0.018796|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/texmanager.py:29 <module>
(call)|         1|   0.00094986|   0.00094986|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/blocking_input.py:20 <module>
(call)|         1|    0.0277755|    0.0277755|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/contour.py:3 <module>
(call)|         1|    0.0120091|    0.0120091|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/image.py:4 <module>
(call)|         1|   0.00698376|   0.00698376|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/offsetbox.py:15 <module>
(call)|         1|  0.000355721|  0.000355721|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/container.py:1 <module>
(call)|         1|   0.00186443|   0.00186443|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/legend_handler.py:25 <module>
(call)|         1|    0.0240469|    0.0240469|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/legend.py:22 <module>
(call)|         1|     0.014266|     0.014266|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/mlab.py:54 <module>
(call)|         1|   0.00453019|   0.00453019|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/quiver.py:15 <module>
(call)|         1|  4.55379e-05|  4.55379e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/stackplot.py:8 <module>
(call)|         1|   0.00098753|   0.00098753|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/streamplot.py:4 <module>
(call)|         1|   0.00027132|   0.00027132|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/tri/triangulation.py:1 <module>
(call)|         1|  0.000215292|  0.000215292|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/tri/tricontour.py:1 <module>
(call)|         1|  0.000415087|  0.000415087|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/tri/tritools.py:3 <module>
(call)|         1|  0.000448465|  0.000448465|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/tri/trifinder.py:1 <module>
(call)|         1|   0.00370526|   0.00370526|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/tri/triinterpolate.py:3 <module>
(call)|         1|  0.000366926|  0.000366926|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/tri/trirefine.py:3 <module>
(call)|         1|  0.000196457|  0.000196457|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/tri/tripcolor.py:1 <module>
(call)|         1|  0.000108242|  0.000108242|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/tri/triplot.py:1 <module>
(call)|         1|    0.0266786|    0.0266786|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/tri/__init__.py:3 <module>
(call)|         1|    0.0178566|    0.0178566|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/scale.py:8 <module>
(call)|         1|     0.123775|     0.123775|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axis.py:3 <module>
(call)|         1|   0.00288177|   0.00288177|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/spines.py:1 <module>
(call)|         1|     0.164309|     0.164309|  0.04%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_base.py:1 <module>
(call)|         1|   0.00234389|   0.00234389|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_secondary_axes.py:1 <module>
(call)|         1|     0.938747|     0.938747|  0.26%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:1 <module>
(call)|         1|  0.000288963|  0.000288963|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/tight_layout.py:10 <module>
(call)|         1|   0.00172734|   0.00172734|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/_layoutbox.py:16 <module>
(call)|         1|   0.00947666|   0.00947666|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/gridspec.py:10 <module>
(call)|         1|      1.36348|      1.36348|  0.37%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_subplots.py:1 <module>
(call)|         1|      1.36677|      1.36677|  0.37%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/__init__.py:1 <module>
(call)|         1|   0.00477123|   0.00477123|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/projections/geo.py:1 <module>
(call)|         1|   0.00848007|   0.00848007|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/projections/polar.py:1 <module>
(call)|         1|   0.00444651|   0.00444651|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/mpl_toolkits/mplot3d/proj3d.py:3 <module>
(call)|         1|    0.0159976|    0.0159976|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/mpl_toolkits/mplot3d/art3d.py:8 <module>
(call)|         1|    0.0034554|    0.0034554|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/mpl_toolkits/mplot3d/axis3d.py:5 <module>
(call)|         1|    0.0428946|    0.0428946|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/mpl_toolkits/mplot3d/axes3d.py:11 <module>
(call)|         1|    0.0466797|    0.0466797|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/mpl_toolkits/mplot3d/__init__.py:1 <module>
(call)|         1|      1.44518|      1.44518|  0.39%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/projections/__init__.py:1 <module>
(call)|         1|  0.000719309|  0.000719309|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/_constrained_layout.py:16 <module>
(call)|         1|    0.0104208|    0.0104208|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/colorbar.py:20 <module>
(call)|         1|      1.65275|      1.65275|  0.45%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/figure.py:12 <module>
(call)|         1|  3.31402e-05|  3.31402e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/dill/info.py:2 <module>
(call)|         1|    0.0125699|    0.0125699|  0.00%|# /opt/anaconda3/lib/python3.7/_pyio.py:3 <module>
(call)|         1|  0.000143051|  0.000143051|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/dill/settings.py:10 <module>
(call)|         1|    0.0811453|    0.0811453|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/dill/_dill.py:17 <module>
(call)|         1|   0.00150156|   0.00150156|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/dill/source.py:19 <module>
(call)|         1|   0.00104976|   0.00104976|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/dill/temp.py:11 <module>
(call)|         1|  0.000268221|  0.000268221|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/dill/pointers.py:9 <module>
(call)|         1|   0.00340319|   0.00340319|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/dill/detect.py:10 <module>
(call)|         1|    0.0002141|    0.0002141|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/dill/objtypes.py:13 <module>
(call)|         1|     0.107475|     0.107475|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/dill/__init__.py:10 <module>
(call)|         1|  6.65188e-05|  6.65188e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/_shared/version_requirements.py:1 <module>
(call)|         1|   0.00142384|   0.00142384|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/util/dtype.py:1 <module>
(call)|         1|  0.000135183|  0.000135183|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/util/shape.py:1 <module>
(call)|         1|  0.000113249|  0.000113249|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/util/noise.py:1 <module>
(call)|         1|  4.14848e-05|  4.14848e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/util/apply_parallel.py:1 <module>
(call)|         1|  3.14713e-05|  3.14713e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/util/arraycrop.py:4 <module>
(call)|         1|  0.000274897|  0.000274897|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/util/compare.py:1 <module>
(call)|         1|  2.95639e-05|  2.95639e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/util/_regular_grid.py:1 <module>
(call)|         1|  2.16961e-05|  2.16961e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/util/unique.py:1 <module>
(call)|         1|  8.96454e-05|  8.96454e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/util/_invert.py:1 <module>
(call)|         1|  4.72069e-05|  4.72069e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/util/_montage.py:1 <module>
(call)|         1|  0.000386715|  0.000386715|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/_shared/_warnings.py:1 <module>
(call)|         1|   0.00324869|   0.00324869|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/_shared/utils.py:1 <module>
(call)|         1|    0.0335155|    0.0335155|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/util/__init__.py:1 <module>
(call)|         1|  2.81334e-05|  2.81334e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/data/_binary_blobs.py:1 <module>
(call)|         1|  0.000377655|  0.000377655|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/data/_detect.py:1 <module>
(call)|         1|    0.0076344|    0.0076344|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/data/__init__.py:7 <module>
(call)|         1|  2.86102e-05|  2.86102e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/util/lookfor.py:1 <module>
(call)|         1|    0.0579746|    0.0579746|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/__init__.py:67 <module>
(call)|         1|  0.000231028|  0.000231028|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/_lib/_testutils.py:4 <module>
(call)|         1|   0.00329971|   0.00329971|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/_lib/__init__.py:11 <module>
(call)|         1|  0.000114679|  0.000114679|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/_lib/deprecation.py:1 <module>
(call)|         1|  2.00272e-05|  2.00272e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/_distributor_init.py:10 <module>
(call)|         1|  0.000245571|  0.000245571|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/__config__.py:3 <module>
(call)|         1|  3.48091e-05|  3.48091e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/version.py:3 <module>
(call)|         1|   0.00329471|   0.00329471|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/_lib/_pep440.py:5 <module>
(call)|         4|  0.000397921|  9.94802e-05|  0.00%|# /opt/anaconda3/lib/python3.7/ctypes/__init__.py:73 CFUNCTYPE
(call)|         4|  4.43459e-05|  1.10865e-05|  0.00%|# /opt/anaconda3/lib/python3.7/ctypes/__init__.py:497 cast
(call)|         1|   0.00312805|   0.00312805|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/_lib/_ccallback.py:1 <module>
(call)|         1|   0.00710702|   0.00710702|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/_lib/_uarray/_backend.py:1 <module>
(call)|         1|     0.010344|     0.010344|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/_lib/_uarray/__init__.py:113 <module>
(call)|         1|    0.0175626|    0.0175626|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/_lib/uarray.py:8 <module>
(call)|         1|     0.061512|     0.061512|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/fft/_basic.py:1 <module>
(call)|         1|    0.0177941|    0.0177941|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/fft/_realtransforms.py:1 <module>
(call)|         1|  0.000462055|  0.000462055|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/fft/_pocketfft/helper.py:1 <module>
(call)|         1|   0.00663543|   0.00663543|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/fft/_pocketfft/basic.py:3 <module>
(call)|         1|   0.00042367|   0.00042367|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/fft/_pocketfft/realtransforms.py:1 <module>
(call)|         1|    0.0129569|    0.0129569|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/fft/_pocketfft/__init__.py:1 <module>
(call)|         1|    0.0166156|    0.0166156|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/fft/_helper.py:1 <module>
(call)|         1|  0.000664234|  0.000664234|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/fft/_backend.py:1 <module>
(call)|         1|     0.108193|     0.108193|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/fft/__init__.py:72 <module>
(call)|         1|     0.243518|     0.243518|  0.07%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/__init__.py:58 <module>
(call)|         1|   0.00498962|   0.00498962|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/linalg/blas.py:202 <module>
(call)|         1|   0.00264454|   0.00264454|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/_lib/_util.py:1 <module>
(call)|         1|    0.0483596|    0.0483596|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/linalg/lapack.py:776 <module>
(call)|         1|     0.059134|     0.059134|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/linalg/misc.py:1 <module>
(call)|         1|   0.00219059|   0.00219059|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/linalg/flinalg.py:5 <module>
(call)|         1|   0.00138211|   0.00138211|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/linalg/decomp.py:16 <module>
(call)|         1|  0.000490904|  0.000490904|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/linalg/decomp_svd.py:1 <module>
(call)|         1|    0.0160637|    0.0160637|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/linalg/basic.py:7 <module>
(call)|         1|  0.000330687|  0.000330687|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/linalg/decomp_lu.py:1 <module>
(call)|         1|  0.000464678|  0.000464678|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/linalg/_decomp_ldl.py:1 <module>
(call)|         1|  0.000329971|  0.000329971|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/linalg/decomp_cholesky.py:1 <module>
(call)|         1|  0.000215769|  0.000215769|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/linalg/decomp_qr.py:1 <module>
(call)|         1|  0.000368834|  0.000368834|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/linalg/_decomp_qz.py:1 <module>
(call)|         1|   0.00143361|   0.00143361|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/linalg/decomp_schur.py:1 <module>
(call)|         1|  0.000281096|  0.000281096|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/linalg/_decomp_polar.py:1 <module>
(call)|         1|  0.000548363|  0.000548363|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/linalg/special_matrices.py:1 <module>
(call)|         1|  0.000385046|  0.000385046|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/linalg/_expm_frechet.py:1 <module>
(call)|         1|  0.000367403|  0.000367403|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/linalg/_matfuncs_sqrtm.py:6 <module>
(call)|         1|    0.0107865|    0.0107865|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/linalg/matfuncs.py:5 <module>
(call)|         1|   0.00107193|   0.00107193|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/linalg/_solvers.py:1 <module>
(call)|         1|  9.60827e-05|  9.60827e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/linalg/_procrustes.py:4 <module>
(call)|         1|  0.000540018|  0.000540018|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/sputils.py:2 <module>
(call)|         1|   0.00766587|   0.00766587|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/base.py:1 <module>
(call)|         1|   0.00203991|   0.00203991|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/data.py:7 <module>
(call)|         1|  0.000947714|  0.000947714|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/dia.py:1 <module>
(call)|         1|  0.000592709|  0.000592709|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/_index.py:2 <module>
(call)|         1|    0.0175514|    0.0175514|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/compressed.py:1 <module>
(call)|         1|    0.0231905|    0.0231905|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/csr.py:1 <module>
(call)|         1|  0.000692844|  0.000692844|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/csc.py:1 <module>
(call)|         1|   0.00441837|   0.00441837|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/lil.py:2 <module>
(call)|         1|   0.00183034|   0.00183034|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/dok.py:1 <module>
(call)|         1|    0.0011735|    0.0011735|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/coo.py:1 <module>
(call)|         1|    0.0028007|    0.0028007|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/bsr.py:1 <module>
(call)|         1|   0.00109625|   0.00109625|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/construct.py:2 <module>
(call)|         1|  0.000131845|  0.000131845|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/extract.py:2 <module>
(call)|         1|   0.00025177|   0.00025177|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/_matrix_io.py:1 <module>
(call)|         1|  0.000268936|  0.000268936|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/csgraph/_laplacian.py:3 <module>
(call)|         1|   0.00263524|   0.00263524|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/csgraph/_validation.py:1 <module>
(call)|         1|     0.022686|     0.022686|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/csgraph/__init__.py:151 <module>
(call)|         1|     0.113234|     0.113234|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/__init__.py:219 <module>
(call)|         1|     0.116096|     0.116096|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/linalg/_sketches.py:1 <module>
(call)|         1|  0.000400305|  0.000400305|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/linalg/_decomp_cossin.py:2 <module>
(call)|         1|     0.254239|     0.254239|  0.07%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/linalg/__init__.py:192 <module>
(call)|         1|     0.529376|     0.529376|  0.14%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/color/colorconv.py:50 <module>
(call)|         1|   0.00399756|   0.00399756|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/color/rgb_colors.py:1 <module>
(call)|         1|   0.00864577|   0.00864577|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/color/colorlabel.py:1 <module>
(call)|         1|  0.000198364|  0.000198364|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/color/delta_e.py:19 <module>
(call)|         1|     0.547584|     0.547584|  0.15%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/color/__init__.py:1 <module>
(call)|         1|     0.295001|     0.295001|  0.08%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/style/core.py:12 <module>
(call)|         1|     0.298371|     0.298371|  0.08%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/style/__init__.py:1 <module>
(call)|         2|   0.00446558|   0.00223279|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/backends/backend_macosx.py:1 <module>
(call)|         1|   0.00982666|   0.00982666|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/backends/backend_agg.py:21 <module>
(call)|         1|    0.0671136|    0.0671136|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/backends/qt_compat.py:12 <module>
(call)|         1|   0.00204349|   0.00204349|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/backends/qt_editor/_formlayout.py:33 <module>
(call)|         1|    0.0752373|    0.0752373|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/backends/qt_editor/figureoptions.py:6 <module>
(call)|         1|  0.000106096|  0.000106096|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/backends/qt_editor/formsubplottool.py:1 <module>
(call)|         1|   0.00113535|   0.00113535|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/backend_managers.py:1 <module>
(call)|         1|    0.0968194|    0.0968194|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/backends/backend_qt5.py:1 <module>
(call)|         1|     0.113305|     0.113305|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/backends/backend_qt5agg.py:3 <module>
(call)|         1|  0.000293255|  0.000293255|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/backends/backend_qt4agg.py:3 <module>
(call)|         1|   0.00909019|   0.00909019|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/backends/backend_cairo.py:7 <module>
(call)|         1|    0.0122352|    0.0122352|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/backends/backend_gtk3agg.py:1 <module>
(call)|         1|  0.000412226|  0.000412226|  0.00%|# /opt/anaconda3/lib/python3.7/tkinter/constants.py:4 <module>
(call)|         1|    0.0800943|    0.0800943|  0.02%|# /opt/anaconda3/lib/python3.7/tkinter/__init__.py:31 <module>
(call)|         1|  0.000190735|  0.000190735|  0.00%|# /opt/anaconda3/lib/python3.7/tkinter/commondialog.py:11 <module>
(call)|         1|   0.00288868|   0.00288868|  0.00%|# /opt/anaconda3/lib/python3.7/tkinter/messagebox.py:25 <module>
(call)|         1|   0.00629616|   0.00629616|  0.00%|# /opt/anaconda3/lib/python3.7/tkinter/simpledialog.py:24 <module>
(call)|         1|  0.000214815|  0.000214815|  0.00%|# /opt/anaconda3/lib/python3.7/tkinter/dialog.py:3 <module>
(call)|         1|   0.00393271|   0.00393271|  0.00%|# /opt/anaconda3/lib/python3.7/tkinter/filedialog.py:13 <module>
(call)|         1|     0.111395|     0.111395|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/backends/_backend_tk.py:1 <module>
(call)|         1|     0.114376|     0.114376|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/backends/backend_tkagg.py:1 <module>
(call)|         1|   0.00454307|   0.00454307|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/backends/backend_wxagg.py:1 <module>
(call)|         1|     0.674881|     0.674881|  0.18%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/pyplot.py:19 <module>
(call)|         1|      1.32388|      1.32388|  0.36%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/namedtuple.py:1 <module>
(call)|         1|      1.44387|      1.44387|  0.39%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities.py:1 <module>
(call)|         1|  0.000720024|  0.000720024|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptunecontrib/_version.py:12 <module>
(call)|         1|    0.0192695|    0.0192695|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/neptunecontrib/__init__.py:17 <module>
(call)|         1|  3.74317e-05|  3.74317e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptunecontrib/api/audio.py:16 <module>
(call)|         1|  0.000135422|  0.000135422|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptunecontrib/api/chart.py:17 <module>
(call)|         1|  0.000350714|  0.000350714|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptunecontrib/api/explainers.py:17 <module>
(call)|         1|  3.95775e-05|  3.95775e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptunecontrib/api/html.py:17 <module>
(call)|         1|  3.43323e-05|  3.43323e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptunecontrib/api/table.py:17 <module>
(call)|         1|  0.000499725|  0.000499725|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/joblib/hashing.py:4 <module>
(call)|         1|  0.000185966|  0.000185966|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/joblib/disk.py:3 <module>
(call)|         1|   0.00289059|   0.00289059|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/joblib/logger.py:5 <module>
(call)|         1|   0.00732851|   0.00732851|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/joblib/func_inspect.py:3 <module>
(call)|         1|  0.000220776|  0.000220776|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/joblib/backports.py:3 <module>
(call)|         1|   0.00658536|   0.00658536|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/joblib/compressor.py:1 <module>
(call)|         1|  0.000638008|  0.000638008|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/joblib/numpy_pickle_utils.py:1 <module>
(call)|         1|  0.000610113|  0.000610113|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/joblib/numpy_pickle_compat.py:1 <module>
(call)|         1|    0.0170496|    0.0170496|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/joblib/numpy_pickle.py:1 <module>
(call)|         1|    0.0250239|    0.0250239|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/joblib/_store_backends.py:1 <module>
(call)|         1|    0.0439107|    0.0439107|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/joblib/memory.py:5 <module>
(call)|         1|   0.00131154|   0.00131154|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/joblib/_multiprocessing_helpers.py:5 <module>
(call)|         1|   0.00631118|   0.00631118|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/joblib/_deprecated_my_exceptions.py:5 <module>
(call)|         1|    0.0103664|    0.0103664|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/joblib/my_exceptions.py:1 <module>
(call)|         1|   0.00107861|   0.00107861|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/joblib/externals/loky/_base.py:13 <module>
(call)|         1|  0.000117064|  0.000117064|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/joblib/externals/loky/backend/compat_posix.py:7 <module>
(call)|         1|   0.00258183|   0.00258183|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/joblib/externals/loky/backend/compat.py:7 <module>
(call)|         1|   0.00553632|   0.00553632|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/joblib/externals/loky/backend/process.py:9 <module>
(call)|         1|    0.0090034|    0.0090034|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/joblib/externals/loky/backend/context.py:13 <module>
(call)|         1|    0.0014503|    0.0014503|  0.00%|# /opt/anaconda3/lib/python3.7/multiprocessing/synchronize.py:11 <module>
(call)|         1|    0.0167782|    0.0167782|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/joblib/externals/loky/backend/__init__.py:1 <module>
(call)|         1|  0.000464916|  0.000464916|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/joblib/externals/loky/backend/_posix_reduction.py:9 <module>
(call)|         1|   0.00628877|   0.00628877|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/joblib/externals/cloudpickle/cloudpickle.py:42 <module>
(call)|         1|    0.0100658|    0.0100658|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/joblib/externals/cloudpickle/__init__.py:1 <module>
(call)|         1|    0.0210238|    0.0210238|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/joblib/externals/loky/backend/reduction.py:11 <module>
(call)|         1|   0.00127602|   0.00127602|  0.00%|# /opt/anaconda3/lib/python3.7/multiprocessing/queues.py:10 <module>
(call)|         1|   0.00549984|   0.00549984|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/joblib/externals/loky/backend/queues.py:12 <module>
(call)|         1|  0.000222445|  0.000222445|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/joblib/externals/loky/backend/utils.py:1 <module>
(call)|         1|   0.00193644|   0.00193644|  0.00%|# /opt/anaconda3/lib/python3.7/concurrent/futures/process.py:44 <module>
(call)|         1|    0.0220733|    0.0220733|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/joblib/externals/loky/process_executor.py:56 <module>
(call)|         1|    0.0252995|    0.0252995|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/joblib/externals/loky/reusable_executor.py:6 <module>
(call)|         1|  0.000322342|  0.000322342|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/joblib/externals/loky/cloudpickle_wrapper.py:1 <module>
(call)|         1|    0.0793326|    0.0793326|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/joblib/externals/loky/__init__.py:5 <module>
(call)|         1|  0.000339508|  0.000339508|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/joblib/externals/loky/backend/spawn.py:9 <module>
(call)|         1|   0.00382662|   0.00382662|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/joblib/externals/loky/backend/resource_tracker.py:42 <module>
(call)|         1|    0.0938187|    0.0938187|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/joblib/_memmapping_reducer.py:3 <module>
(call)|         1|   0.00245404|   0.00245404|  0.00%|# /opt/anaconda3/lib/python3.7/multiprocessing/pool.py:10 <module>
(call)|         1|     0.102549|     0.102549|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/joblib/pool.py:11 <module>
(call)|         1|  0.000341892|  0.000341892|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/joblib/executor.py:6 <module>
(call)|         1|     0.304696|     0.304696|  0.08%|# /opt/anaconda3/lib/python3.7/site-packages/joblib/_parallel_backends.py:3 <module>
(call)|         1|     0.313627|     0.313627|  0.09%|# /opt/anaconda3/lib/python3.7/site-packages/joblib/parallel.py:3 <module>
(call)|         1|      0.36555|      0.36555|  0.10%|# /opt/anaconda3/lib/python3.7/site-packages/joblib/__init__.py:91 <module>
(call)|         1|     0.371117|     0.371117|  0.10%|# /opt/anaconda3/lib/python3.7/site-packages/neptunecontrib/api/utils.py:16 <module>
(call)|         1|  4.05312e-05|  4.05312e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptunecontrib/api/video.py:16 <module>
(call)|         1|     0.391286|     0.391286|  0.11%|# /opt/anaconda3/lib/python3.7/site-packages/neptunecontrib/api/__init__.py:17 <module>
(call)|         1|      5.47288|      5.47288|  1.49%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_neptune.py:1 <module>
(call)|         1|   0.00153375|   0.00153375|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/PIL/ImageColor.py:20 <module>
(call)|         1|   0.00507021|   0.00507021|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/PIL/ImageDraw.py:33 <module>
(call)|         1|  4.60148e-05|  4.60148e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/models/utils.py:1 <module>
(call)|         1|   0.00253415|   0.00253415|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/models/alexnet.py:1 <module>
(call)|         1|  0.000878334|  0.000878334|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/models/resnet.py:1 <module>
(call)|         1|  0.000389338|  0.000389338|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/models/vgg.py:1 <module>
(call)|         1|  0.000294685|  0.000294685|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/models/squeezenet.py:1 <module>
(call)|         1|   0.00257945|   0.00257945|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/models/inception.py:1 <module>
(call)|         1|  0.000391245|  0.000391245|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/utils/checkpoint.py:1 <module>
(call)|         1|    0.0043602|    0.0043602|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/models/densenet.py:1 <module>
(call)|         1|   0.00186038|   0.00186038|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/models/googlenet.py:1 <module>
(call)|         1|  0.000391006|  0.000391006|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/models/mobilenet.py:1 <module>
(call)|         1|  0.000552893|  0.000552893|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/models/mnasnet.py:1 <module>
(call)|         1|  0.000373125|  0.000373125|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/models/shufflenetv2.py:1 <module>
(call)|         1|  0.000286579|  0.000286579|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/models/_utils.py:1 <module>
(call)|         1|  0.000272036|  0.000272036|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/models/segmentation/_utils.py:1 <module>
(call)|         1|   0.00327229|   0.00327229|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/models/segmentation/deeplabv3.py:1 <module>
(call)|         1|  0.000224829|  0.000224829|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/models/segmentation/fcn.py:1 <module>
(call)|         1|    0.0120018|    0.0120018|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/models/segmentation/segmentation.py:1 <module>
(call)|         1|    0.0149972|    0.0149972|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/models/segmentation/__init__.py:1 <module>
(call)|         1|  0.000380278|  0.000380278|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/ops/boxes.py:1 <module>
(call)|         1|  0.000121117|  0.000121117|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/ops/new_empty_tensor.py:1 <module>
(call)|         1|  0.000365973|  0.000365973|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/ops/deform_conv.py:1 <module>
(call)|         1|   0.00011158|   0.00011158|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/ops/_utils.py:1 <module>
(call)|         1|    0.0031836|    0.0031836|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/ops/roi_align.py:1 <module>
(call)|         1|  0.000268698|  0.000268698|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/ops/roi_pool.py:1 <module>
(call)|         1|  0.000288486|  0.000288486|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/ops/ps_roi_align.py:1 <module>
(call)|         1|  0.000424862|  0.000424862|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/ops/ps_roi_pool.py:1 <module>
(call)|         1|     0.162669|     0.162669|  0.04%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/ops/poolers.py:2 <module>
(call)|         1|  0.000496387|  0.000496387|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/ops/feature_pyramid_network.py:1 <module>
(call)|         1|   4.1008e-05|   4.1008e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/ops/_register_onnx_ops.py:1 <module>
(call)|         1|   0.00986624|   0.00986624|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/onnx/utils.py:1 <module>
(call)|         1|    0.0149279|    0.0149279|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/onnx/symbolic_helper.py:1 <module>
(call)|         1|    0.0960684|    0.0960684|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/torch/onnx/symbolic_opset9.py:1 <module>
(call)|         1|  0.000408649|  0.000408649|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/onnx/symbolic_opset7.py:1 <module>
(call)|         1|   0.00319386|   0.00319386|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/onnx/symbolic_opset8.py:1 <module>
(call)|         1|   0.00355387|   0.00355387|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/onnx/symbolic_opset10.py:1 <module>
(call)|         1|   0.00703049|   0.00703049|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/onnx/symbolic_opset11.py:1 <module>
(call)|         1|  0.000283003|  0.000283003|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/onnx/symbolic_opset12.py:1 <module>
(call)|         1|    0.0293543|    0.0293543|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torch/onnx/symbolic_registry.py:1 <module>
(call)|         1|     0.358917|     0.358917|  0.10%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/ops/__init__.py:1 <module>
(call)|         1|  0.000638723|  0.000638723|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/ops/misc.py:1 <module>
(call)|         1|  0.000324011|  0.000324011|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/models/detection/generalized_rcnn.py:4 <module>
(call)|         1|     0.989625|     0.989625|  0.27%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/models/detection/_utils.py:1 <module>
(call)|         1|    0.0583725|    0.0583725|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/models/detection/image_list.py:2 <module>
(call)|         1|      1.05885|      1.05885|  0.29%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/models/detection/rpn.py:2 <module>
(call)|         1|      2.35448|      2.35448|  0.64%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/models/detection/roi_heads.py:1 <module>
(call)|         1|  0.000730276|  0.000730276|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/models/detection/transform.py:1 <module>
(call)|         1|  0.000568628|  0.000568628|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/models/detection/backbone_utils.py:1 <module>
(call)|         1|       3.7944|       3.7944|  1.03%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/models/detection/faster_rcnn.py:1 <module>
(call)|         1|  0.000799894|  0.000799894|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/models/detection/mask_rcnn.py:1 <module>
(call)|         1|  0.000651598|  0.000651598|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/models/detection/keypoint_rcnn.py:1 <module>
(call)|         1|      3.80342|      3.80342|  1.03%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/models/detection/__init__.py:1 <module>
(call)|         1|  0.000878096|  0.000878096|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/models/video/resnet.py:1 <module>
(call)|         1|   0.00390267|   0.00390267|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/models/video/__init__.py:1 <module>
(call)|         1|  8.17776e-05|  8.17776e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/models/quantization/utils.py:1 <module>
(call)|         1|   0.00318003|   0.00318003|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/models/quantization/mobilenet.py:1 <module>
(call)|         1|  0.000700951|  0.000700951|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/models/quantization/resnet.py:1 <module>
(call)|         1|   0.00056529|   0.00056529|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/models/quantization/googlenet.py:1 <module>
(call)|         1|   0.00121546|   0.00121546|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/models/quantization/inception.py:1 <module>
(call)|         1|  0.000701427|  0.000701427|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/models/quantization/shufflenetv2.py:1 <module>
(call)|         1|    0.0189712|    0.0189712|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/models/quantization/__init__.py:1 <module>
(call)|         1|      3.89465|      3.89465|  1.06%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/models/__init__.py:1 <module>
(call)|         1|  0.000207424|  0.000207424|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/datasets/vision.py:1 <module>
(call)|         1|  5.26905e-05|  5.26905e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/utils/model_zoo.py:2 <module>
(call)|         1|   0.00283456|   0.00283456|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/datasets/utils.py:1 <module>
(call)|         1|   0.00830674|   0.00830674|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/datasets/lsun.py:1 <module>
(call)|         1|  0.000352621|  0.000352621|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/datasets/folder.py:1 <module>
(call)|         1|  0.000283957|  0.000283957|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/datasets/coco.py:1 <module>
(call)|         1|   0.00067687|   0.00067687|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/datasets/cifar.py:1 <module>
(call)|         1|  0.000463486|  0.000463486|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/datasets/stl10.py:1 <module>
(call)|         1|   0.00160861|   0.00160861|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/datasets/mnist.py:1 <module>
(call)|         1|   0.00048089|   0.00048089|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/datasets/svhn.py:1 <module>
(call)|         1|  0.000600338|  0.000600338|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/datasets/phototour.py:1 <module>
(call)|         1|    0.0005126|    0.0005126|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/PIL/ImageOps.py:20 <module>
(call)|         1|   0.00267386|   0.00267386|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/PIL/ImageFilter.py:18 <module>
(call)|         1|  0.000268698|  0.000268698|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/PIL/ImageStat.py:24 <module>
(call)|         1|   0.00845647|   0.00845647|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/PIL/ImageEnhance.py:21 <module>
(call)|         1|    0.0202212|    0.0202212|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/transforms/functional.py:1 <module>
(call)|         1|    0.0347278|    0.0347278|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/transforms/transforms.py:1 <module>
(call)|         1|    0.0380397|    0.0380397|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/transforms/__init__.py:1 <module>
(call)|         1|    0.0411346|    0.0411346|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/datasets/fakedata.py:1 <module>
(call)|         1|  0.000307322|  0.000307322|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/datasets/semeion.py:1 <module>
(call)|         1|  0.000362873|  0.000362873|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/datasets/omniglot.py:1 <module>
(call)|         1|  0.000408649|  0.000408649|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/datasets/sbu.py:1 <module>
(call)|         1|    0.0296183|    0.0296183|  0.01%|# /opt/anaconda3/lib/python3.7/_markupbase.py:6 <module>
(call)|         1|     0.198185|     0.198185|  0.05%|# /opt/anaconda3/lib/python3.7/html/parser.py:1 <module>
(call)|         1|     0.201192|     0.201192|  0.05%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/datasets/flickr.py:1 <module>
(call)|         1|    0.0264037|    0.0264037|  0.01%|# /opt/anaconda3/lib/python3.7/xml/etree/ElementPath.py:59 <module>
(call)|         1|    0.0378394|    0.0378394|  0.01%|# /opt/anaconda3/lib/python3.7/xml/etree/ElementTree.py:34 <module>
(call)|         1|    0.0451131|    0.0451131|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/datasets/voc.py:1 <module>
(call)|         1|   0.00347733|   0.00347733|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/datasets/cityscapes.py:1 <module>
(call)|         1|  0.000436306|  0.000436306|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/datasets/imagenet.py:1 <module>
(call)|         1|  0.000617504|  0.000617504|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/datasets/caltech.py:1 <module>
(call)|         1|  0.000372171|  0.000372171|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/datasets/celeba.py:1 <module>
(call)|         1|  0.000602484|  0.000602484|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/datasets/sbd.py:1 <module>
(call)|         1|   0.00033021|   0.00033021|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/datasets/usps.py:1 <module>
(call)|         1|     0.123816|     0.123816|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/io/_video_opt.py:2 <module>
(call)|         1|   0.00460315|   0.00460315|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/io/video.py:1 <module>
(call)|         1|     0.134197|     0.134197|  0.04%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/io/__init__.py:1 <module>
(call)|         1|     0.137292|     0.137292|  0.04%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/datasets/video_utils.py:1 <module>
(call)|         1|     0.140255|     0.140255|  0.04%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/datasets/kinetics.py:1 <module>
(call)|         1|  0.000432491|  0.000432491|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/datasets/hmdb51.py:1 <module>
(call)|         1|  0.000432968|  0.000432968|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/datasets/ucf101.py:1 <module>
(call)|         1|     0.508227|     0.508227|  0.14%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/datasets/__init__.py:1 <module>
(call)|         1|  5.43594e-05|  5.43594e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/utils.py:1 <module>
(call)|         1|   0.00658822|   0.00658822|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/extension.py:1 <module>
(call)|         1|  0.000234127|  0.000234127|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/version.py:1 <module>
(call)|         1|      4.42536|      4.42536|  1.20%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/__init__.py:1 <module>
(call)|         1|  7.79629e-05|  7.79629e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/ndimage/_ni_support.py:31 <module>
(call)|         1|  0.000111818|  0.000111818|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/_lib/doccer.py:2 <module>
(call)|         1|   0.00444293|   0.00444293|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/ndimage/_ni_docstrings.py:1 <module>
(call)|         1|    0.0487735|    0.0487735|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/ndimage/filters.py:31 <module>
(call)|         1|  0.000547171|  0.000547171|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/ndimage/fourier.py:31 <module>
(call)|         1|    0.0142596|    0.0142596|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/ndimage/interpolation.py:31 <module>
(call)|         1|   0.00215435|   0.00215435|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/ndimage/morphology.py:31 <module>
(call)|         1|    0.0081768|    0.0081768|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/ndimage/measurements.py:31 <module>
(call)|         1|    0.0834706|    0.0834706|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/ndimage/__init__.py:119 <module>
(call)|         1|  3.76701e-05|  3.76701e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/_shared/_geometry.py:1 <module>
(call)|         1|   0.00487804|   0.00487804|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/draw/draw.py:1 <module>
(call)|         1|  0.000200748|  0.000200748|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/special/sf_error.py:1 <module>
(call)|         1|   0.00582075|   0.00582075|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/special/orthogonal.py:72 <module>
(call)|         1|    0.0174713|    0.0174713|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/special/_basic.py:5 <module>
(call)|         1|  0.000109911|  0.000109911|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/special/_logsumexp.py:1 <module>
(call)|         1|  0.000253439|  0.000253439|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/special/spfun_stats.py:33 <module>
(call)|         1|   0.00193286|   0.00193286|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/special/_ellip_harm.py:1 <module>
(call)|         1|  6.38962e-05|  6.38962e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/special/_lambertw.py:1 <module>
(call)|         1|  0.000105381|  0.000105381|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/special/_spherical_bessel.py:1 <module>
(call)|         1|    0.0437458|    0.0437458|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/special/__init__.py:629 <module>
(call)|         1|    0.0462937|    0.0462937|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/draw/draw3d.py:1 <module>
(call)|         1|  0.000374317|  0.000374317|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/draw/_random_shapes.py:1 <module>
(call)|         1|  0.000203371|  0.000203371|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/draw/_polygon2mask.py:1 <module>
(call)|         1|  2.88486e-05|  2.88486e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/draw/draw_nd.py:1 <module>
(call)|         1|    0.0644352|    0.0644352|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/draw/__init__.py:1 <module>
(call)|         1|    0.0671182|    0.0671182|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/morphology/selem.py:1 <module>
(call)|         1|    0.0704267|    0.0704267|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/morphology/misc.py:1 <module>
(call)|         1|     0.159468|     0.159468|  0.04%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/morphology/binary.py:3 <module>
(call)|         1|   0.00152421|   0.00152421|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/morphology/grey.py:3 <module>
(call)|         1|   0.00230646|   0.00230646|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/measure/_find_contours.py:1 <module>
(call)|         1|  0.000395298|  0.000395298|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/measure/_marching_cubes_lewiner_luts.py:6 <module>
(call)|         1|   0.00585151|   0.00585151|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/measure/_marching_cubes_lewiner.py:1 <module>
(call)|         1|   0.00226212|   0.00226212|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/measure/_marching_cubes_classic.py:1 <module>
(call)|         1|   0.00186038|   0.00186038|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/measure/_label.py:1 <module>
(call)|         1|   0.00231409|   0.00231409|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/measure/_moments.py:1 <module>
(call)|         1|      0.03473|      0.03473|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/measure/_regionprops.py:1 <module>
(call)|         1|  3.57628e-05|  3.57628e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/metrics/_contingency_table.py:1 <module>
(call)|         1|   0.00279498|   0.00279498|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/metrics/_adapted_rand_error.py:1 <module>
(call)|         1|  0.000176191|  0.000176191|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/metrics/_variation_of_information.py:1 <module>
(call)|         1|   0.00019598|   0.00019598|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/metrics/simple_metrics.py:1 <module>
(call)|         1|  0.000335693|  0.000335693|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/metrics/_structural_similarity.py:1 <module>
(call)|         1|    0.0141129|    0.0141129|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/metrics/__init__.py:1 <module>
(call)|         1|    0.0174918|    0.0174918|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/measure/simple_metrics.py:1 <module>
(call)|         1|  0.000127316|  0.000127316|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/measure/_structural_similarity.py:1 <module>
(call)|         1|   0.00386024|   0.00386024|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/signal/windows/windows.py:1 <module>
(call)|         1|   0.00720167|   0.00720167|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/signal/windows/__init__.py:39 <module>
(call)|         1|  0.000414133|  0.000414133|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/signal/waveforms.py:7 <module>
(call)|         1|   0.00195932|   0.00195932|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/signal/_max_len_seq.py:4 <module>
(call)|         1|   0.00208306|   0.00208306|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/signal/_upfirdn.py:34 <module>
(call)|         1|  0.000834227|  0.000834227|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/signal/bsplines.py:1 <module>
(call)|         1|    0.0026741|    0.0026741|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/linesearch.py:13 <module>
(call)|         1|   0.00213218|   0.00213218|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/linalg/interface.py:41 <module>
(call)|         1|  0.000276089|  0.000276089|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/linalg/isolve/utils.py:1 <module>
(call)|         1|   0.00462389|   0.00462389|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/_lib/decorator.py:33 <module>
(call)|         1|   0.00749397|   0.00749397|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/_lib/_threadsafety.py:1 <module>
(call)|         1|    0.0404592|    0.0404592|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/linalg/isolve/iterative.py:1 <module>
(call)|         1|  0.000287533|  0.000287533|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/linalg/isolve/minres.py:1 <module>
(call)|         1|  0.000366449|  0.000366449|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/linalg/isolve/_gcrotmk.py:4 <module>
(call)|         1|   0.00329638|   0.00329638|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/linalg/isolve/lgmres.py:4 <module>
(call)|         1|  0.000197649|  0.000197649|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/linalg/isolve/lsqr.py:50 <module>
(call)|         1|   0.00032258|   0.00032258|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/linalg/isolve/lsmr.py:17 <module>
(call)|         1|    0.0583899|    0.0583899|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/linalg/isolve/__init__.py:1 <module>
(call)|         1|   0.00730729|   0.00730729|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/linalg/dsolve/linsolve.py:1 <module>
(call)|         1|  0.000877142|  0.000877142|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/linalg/dsolve/_add_newdocs.py:1 <module>
(call)|         1|    0.0140135|    0.0140135|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/linalg/dsolve/__init__.py:52 <module>
(call)|         1|  0.000500679|  0.000500679|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/linalg/eigen/lobpcg/lobpcg.py:18 <module>
(call)|         1|   0.00362492|   0.00362492|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/linalg/eigen/lobpcg/__init__.py:9 <module>
(call)|         1|    0.0165999|    0.0165999|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/linalg/eigen/arpack/arpack.py:7 <module>
(call)|         1|    0.0196936|    0.0196936|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/linalg/eigen/arpack/__init__.py:19 <module>
(call)|         1|    0.0227132|    0.0227132|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/linalg/eigen/__init__.py:8 <module>
(call)|         1|   0.00148678|   0.00148678|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/linalg/_expm_multiply.py:2 <module>
(call)|         1|   0.00615525|   0.00615525|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/linalg/matfuncs.py:3 <module>
(call)|         1|  0.000529766|  0.000529766|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/linalg/_onenormest.py:2 <module>
(call)|         1|   0.00017786|   0.00017786|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/linalg/_norm.py:3 <module>
(call)|         1|     0.119124|     0.119124|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/linalg/__init__.py:109 <module>
(call)|         1|     0.124252|     0.124252|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_numdiff.py:1 <module>
(call)|         1|    0.0015099|    0.0015099|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_hessian_update_strategy.py:1 <module>
(call)|         1|   0.00527358|   0.00527358|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_differentiable_functions.py:1 <module>
(call)|         1|     0.147337|     0.147337|  0.04%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/optimize.py:20 <module>
(call)|         1|  0.000260592|  0.000260592|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_trustregion.py:1 <module>
(call)|         1|   0.00278878|   0.00278878|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_trustregion_dogleg.py:1 <module>
(call)|         1|  0.000155449|  0.000155449|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_trustregion_ncg.py:1 <module>
(call)|         1|   0.00417972|   0.00417972|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_trlib/__init__.py:1 <module>
(call)|         1|   0.00704145|   0.00704145|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_trustregion_krylov.py:1 <module>
(call)|         1|  0.000550985|  0.000550985|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_trustregion_exact.py:1 <module>
(call)|         1|   0.00112581|   0.00112581|  0.00%|# /opt/anaconda3/lib/python3.7/unittest/util.py:1 <module>
(call)|         1|   0.00520539|   0.00520539|  0.00%|# /opt/anaconda3/lib/python3.7/unittest/result.py:1 <module>
(call)|         1|   0.00762272|   0.00762272|  0.00%|# /opt/anaconda3/lib/python3.7/unittest/case.py:1 <module>
(call)|         1|   0.00100756|   0.00100756|  0.00%|# /opt/anaconda3/lib/python3.7/unittest/suite.py:1 <module>
(call)|         1|     0.011766|     0.011766|  0.00%|# /opt/anaconda3/lib/python3.7/unittest/loader.py:1 <module>
(call)|         1|  0.000212908|  0.000212908|  0.00%|# /opt/anaconda3/lib/python3.7/unittest/signals.py:1 <module>
(call)|         1|   0.00357819|   0.00357819|  0.00%|# /opt/anaconda3/lib/python3.7/unittest/runner.py:1 <module>
(call)|         1|   0.00691628|   0.00691628|  0.00%|# /opt/anaconda3/lib/python3.7/unittest/main.py:1 <module>
(call)|         1|    0.0464418|    0.0464418|  0.01%|# /opt/anaconda3/lib/python3.7/unittest/__init__.py:45 <module>
(call)|         1|   0.00738502|   0.00738502|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/testing/_private/utils.py:4 <module>
(call)|         1|  0.000296593|  0.000296593|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/testing/_private/decorators.py:15 <module>
(call)|         1|  0.000474691|  0.000474691|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/testing/_private/nosetester.py:6 <module>
(call)|         1|    0.0696352|    0.0696352|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/testing/__init__.py:7 <module>
(call)|         1|     0.073343|     0.073343|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_constraints.py:1 <module>
(call)|         1|   0.00493622|   0.00493622|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_trustregion_constr/projections.py:1 <module>
(call)|         1|  0.000352144|  0.000352144|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_trustregion_constr/qp_subproblem.py:1 <module>
(call)|         1|    0.0109372|    0.0109372|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_trustregion_constr/equality_constrained_sqp.py:1 <module>
(call)|         1|  0.000258207|  0.000258207|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_trustregion_constr/canonical_constraint.py:1 <module>
(call)|         1|  0.000473022|  0.000473022|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_trustregion_constr/tr_interior_point.py:13 <module>
(call)|         1|  0.000279665|  0.000279665|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_trustregion_constr/report.py:1 <module>
(call)|         1|    0.0999844|    0.0999844|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_trustregion_constr/minimize_trustregion_constr.py:1 <module>
(call)|         1|     0.102837|     0.102837|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_trustregion_constr/__init__.py:1 <module>
(call)|         1|   0.00279713|   0.00279713|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/lbfgsb.py:9 <module>
(call)|         1|   0.00259447|   0.00259447|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/tnc.py:33 <module>
(call)|         1|   0.00278258|   0.00278258|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/cobyla.py:11 <module>
(call)|         1|   0.00354409|   0.00354409|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/slsqp.py:14 <module>
(call)|         1|      0.14976|      0.14976|  0.04%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_minimize.py:8 <module>
(call)|         1|   0.00114608|   0.00114608|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_lsq/common.py:1 <module>
(call)|         1|   0.00479531|   0.00479531|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_lsq/trf.py:95 <module>
(call)|         1|  0.000558615|  0.000558615|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_lsq/dogbox.py:42 <module>
(call)|         1|    0.0120497|    0.0120497|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_lsq/least_squares.py:1 <module>
(call)|         1|   0.00252318|   0.00252318|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_lsq/trf_linear.py:2 <module>
(call)|         1|  0.000398636|  0.000398636|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_lsq/bvls.py:1 <module>
(call)|         1|    0.0089643|    0.0089643|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_lsq/lsq_linear.py:1 <module>
(call)|         1|    0.0266464|    0.0266464|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_lsq/__init__.py:1 <module>
(call)|         1|    0.0329182|    0.0329182|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/minpack.py:1 <module>
(call)|         1|  0.000469208|  0.000469208|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_spectral.py:3 <module>
(call)|         1|    0.0219097|    0.0219097|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/nonlin.py:106 <module>
(call)|         1|     0.064034|     0.064034|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_root.py:7 <module>
(call)|         1|   0.00321603|   0.00321603|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/zeros.py:1 <module>
(call)|         1|   0.00596929|   0.00596929|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_root_scalar.py:8 <module>
(call)|         1|   0.00178385|   0.00178385|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_nnls.py:1 <module>
(call)|         1|   0.00106287|   0.00106287|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_basinhopping.py:3 <module>
(call)|         1|  0.000333548|  0.000333548|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_remove_redundancy.py:4 <module>
(call)|         1|   0.00505495|   0.00505495|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_linprog_util.py:3 <module>
(call)|         1|    0.0173101|    0.0173101|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_linprog_ip.py:18 <module>
(call)|         1|  0.000295401|  0.000295401|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_linprog_simplex.py:29 <module>
(call)|         1|     0.003093|     0.003093|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_linprog_rs.py:17 <module>
(call)|         1|     0.029022|     0.029022|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_linprog.py:16 <module>
(call)|         1|   0.00206208|   0.00206208|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_lsap.py:12 <module>
(call)|         1|   0.00206518|   0.00206518|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_differentialevolution.py:4 <module>
(call)|         1|  0.000946999|  0.000946999|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/spatial/kdtree.py:3 <module>
(call)|         1|  6.36578e-05|  6.36578e-05|  0.00%|# /opt/anaconda3/lib/python3.7/multiprocessing/context.py:40 cpu_count
(call)|         1|    0.0023067|    0.0023067|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/spatial/_spherical_voronoi.py:6 <module>
(call)|         1|   0.00576878|   0.00576878|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/spatial/_plotutils.py:1 <module>
(call)|         1|  8.39233e-05|  8.39233e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/spatial/_procrustes.py:6 <module>
(call)|         1|    0.0156016|    0.0156016|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/spatial/distance.py:72 <module>
(call)|         1|    0.0189073|    0.0189073|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/spatial/_geometric_slerp.py:1 <module>
(call)|         1|    0.0586338|    0.0586338|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/constants/codata.py:51 <module>
(call)|         1|   0.00224686|   0.00224686|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/constants/constants.py:8 <module>
(call)|         1|    0.0754986|    0.0754986|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/constants/__init__.py:317 <module>
(call)|         1|    0.0783391|    0.0783391|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/spatial/transform/_rotation_groups.py:1 <module>
(call)|         1|    0.0833118|    0.0833118|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/spatial/transform/rotation.py:1 <module>
(call)|         1|   0.00037837|   0.00037837|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/spatial/transform/_rotation_spline.py:1 <module>
(call)|         1|    0.0897896|    0.0897896|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/spatial/transform/__init__.py:18 <module>
(call)|         1|     0.138959|     0.138959|  0.04%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/spatial/__init__.py:94 <module>
(call)|         1|   0.00013566|   0.00013566|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_shgo_lib/sobol_seq.py:21 <module>
(call)|         1|  0.000863075|  0.000863075|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_shgo_lib/triangulation.py:1 <module>
(call)|         1|     0.153886|     0.153886|  0.04%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_shgo.py:3 <module>
(call)|         1|   0.00125098|   0.00125098|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/_dual_annealing.py:8 <module>
(call)|         1|     0.589949|     0.589949|  0.16%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/optimize/__init__.py:385 <module>
(call)|         1|     0.599481|     0.599481|  0.16%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/signal/filter_design.py:2 <module>
(call)|         1|  0.000962257|  0.000962257|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/signal/fir_filter_design.py:2 <module>
(call)|         1|   0.00147367|   0.00147367|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/integrate/_quadrature.py:1 <module>
(call)|         1|   0.00254488|   0.00254488|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/integrate/odepack.py:3 <module>
(call)|         1|   0.00280404|   0.00280404|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/integrate/quadpack.py:3 <module>
(call)|         1|   0.00993347|   0.00993347|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/integrate/_ode.py:39 <module>
(call)|         1|   0.00109792|   0.00109792|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/integrate/_bvp.py:1 <module>
(call)|         1|  0.000608444|  0.000608444|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/integrate/_ivp/common.py:1 <module>
(call)|         1|  0.000316381|  0.000316381|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/integrate/_ivp/base.py:1 <module>
(call)|         1|   0.00709772|   0.00709772|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/integrate/_ivp/bdf.py:1 <module>
(call)|         1|   0.00121284|   0.00121284|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/integrate/_ivp/radau.py:1 <module>
(call)|         1|    0.0030148|    0.0030148|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/integrate/_ivp/dop853_coefficients.py:1 <module>
(call)|         1|    0.0077455|    0.0077455|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/integrate/_ivp/rk.py:1 <module>
(call)|         1|  0.000548601|  0.000548601|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/integrate/_ivp/lsoda.py:1 <module>
(call)|         1|    0.0280175|    0.0280175|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/integrate/_ivp/ivp.py:1 <module>
(call)|         1|      0.03215|      0.03215|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/integrate/_ivp/__init__.py:1 <module>
(call)|         1|   0.00105667|   0.00105667|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/integrate/_quad_vec.py:1 <module>
(call)|         1|    0.0721297|    0.0721297|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/integrate/__init__.py:89 <module>
(call)|         1|   0.00580716|   0.00580716|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/interpolate/_fitpack_impl.py:22 <module>
(call)|         1|   0.00367165|   0.00367165|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/interpolate/_bsplines.py:1 <module>
(call)|         1|    0.0154109|    0.0154109|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/interpolate/fitpack.py:1 <module>
(call)|         1|  0.000789165|  0.000789165|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/interpolate/polyint.py:1 <module>
(call)|         1|    0.0037787|    0.0037787|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/interpolate/fitpack2.py:7 <module>
(call)|         1|    0.0391288|    0.0391288|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/interpolate/interpolate.py:1 <module>
(call)|         1|  0.000418186|  0.000418186|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/interpolate/rbf.py:45 <module>
(call)|         1|   0.00104213|   0.00104213|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/interpolate/_cubic.py:1 <module>
(call)|         1|  0.000295877|  0.000295877|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/interpolate/ndgriddata.py:6 <module>
(call)|         1|  0.000204802|  0.000204802|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/interpolate/_pade.py:1 <module>
(call)|         1|    0.0556273|    0.0556273|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/interpolate/__init__.py:164 <module>
(call)|         1|    0.0004673|    0.0004673|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/signal/lti_conversion.py:4 <module>
(call)|         1|      0.14298|      0.14298|  0.04%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/signal/ltisys.py:4 <module>
(call)|         1|    0.0001297|    0.0001297|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/signal/_arraytools.py:3 <module>
(call)|         1|    0.0122004|    0.0122004|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/signal/signaltools.py:4 <module>
(call)|         1|  0.000308752|  0.000308752|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/signal/_savitzky_golay.py:1 <module>
(call)|         1|   0.00292087|   0.00292087|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/signal/spectral.py:2 <module>
(call)|         1|  0.000557423|  0.000557423|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/signal/wavelets.py:1 <module>
(call)|         1|   0.00173593|   0.00173593|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/stats/_distr_params.py:3 <module>
(call)|         1|   0.00146031|   0.00146031|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/misc/doccer.py:2 <module>
(call)|         1|  0.000246048|  0.000246048|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/misc/common.py:4 <module>
(call)|         1|   0.00834942|   0.00834942|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/misc/__init__.py:19 <module>
(call)|         1|   0.00019002|   0.00019002|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/stats/_constants.py:4 <module>
(call)|         1|    0.0472221|    0.0472221|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/stats/_distn_infrastructure.py:5 <module>
(call)|         1|  6.60419e-05|  6.60419e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/stats/_rvs_sampling.py:1 <module>
(call)|         1|   0.00136089|   0.00136089|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/stats/_tukeylambda_stats.py:1 <module>
(call)|         1|  0.000463486|  0.000463486|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/stats/_ksstats.py:68 <module>
(call)|         1|      1.75496|      1.75496|  0.48%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/stats/_continuous_distns.py:6 <module>
(call)|         1|     0.233401|     0.233401|  0.06%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/stats/_discrete_distns.py:5 <module>
(call)|         1|       2.0482|       2.0482|  0.56%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/stats/distributions.py:8 <module>
(call)|         1|   0.00160146|   0.00160146|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/stats/_stats_mstats_common.py:1 <module>
(call)|         1|    0.0311623|    0.0311623|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/stats/mstats_basic.py:4 <module>
(call)|         1|   0.00348973|   0.00348973|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/stats/_wilcoxon_data.py:1 <module>
(call)|         1|   0.00734687|   0.00734687|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/stats/_hypotests.py:1 <module>
(call)|         1|      2.14881|      2.14881|  0.58%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/stats/stats.py:164 <module>
(call)|         1|  0.000273943|  0.000273943|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/stats/contingency.py:2 <module>
(call)|         1|    0.0224993|    0.0224993|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/stats/morestats.py:1 <module>
(call)|         1|   0.00319457|   0.00319457|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/stats/_binned_statistic.py:1 <module>
(call)|         1|   0.00310278|   0.00310278|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/stats/kde.py:21 <module>
(call)|         1|  0.000767946|  0.000767946|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/stats/mstats_extras.py:4 <module>
(call)|         1|   0.00386548|   0.00386548|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/stats/mstats.py:130 <module>
(call)|         1|     0.071924|     0.071924|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/stats/_multivariate.py:4 <module>
(call)|         1|      2.27378|      2.27378|  0.62%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/stats/__init__.py:387 <module>
(call)|         1|      2.27969|      2.27969|  0.62%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/signal/_peak_finding.py:3 <module>
(call)|         1|      3.09893|      3.09893|  0.84%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/signal/__init__.py:288 <module>
(call)|         1|      3.10201|      3.10201|  0.84%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/measure/_polygon.py:1 <module>
(call)|         1|   0.00205112|   0.00205112|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/measure/pnpoly.py:1 <module>
(call)|         1|  9.39369e-05|  9.39369e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/measure/profile.py:1 <module>
(call)|         1|  0.000865936|  0.000865936|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/measure/fit.py:1 <module>
(call)|         1|  9.87053e-05|  9.87053e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/measure/block.py:1 <module>
(call)|         1|  0.000112057|  0.000112057|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/measure/entropy.py:1 <module>
(call)|         1|      3.19999|      3.19999|  0.87%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/measure/__init__.py:1 <module>
(call)|         1|  8.60691e-05|  8.60691e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/_shared/fft.py:7 <module>
(call)|         1|   0.00291419|   0.00291419|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/filters/lpi_filter.py:4 <module>
(call)|         1|  0.000218391|  0.000218391|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/filters/_gaussian.py:1 <module>
(call)|         1|  0.000193596|  0.000193596|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/restoration/uft.py:20 <module>
(call)|         1|   0.00337863|   0.00337863|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/restoration/deconvolution.py:1 <module>
(call)|         1|   0.00552702|   0.00552702|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/restoration/unwrap.py:1 <module>
(call)|         1|  0.000341654|  0.000341654|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pywt/_functions.py:8 <module>
(call)|         1|  1.64509e-05|  1.64509e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pywt/_c99_config.py:3 <module>
(call)|         1|  0.000169992|  0.000169992|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pywt/_utils.py:4 <module>
(call)|         1|   0.00590515|   0.00590515|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pywt/_dwt.py:1 <module>
(call)|         1|  0.000444174|  0.000444174|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pywt/_multidim.py:8 <module>
(call)|         1|     0.014092|     0.014092|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pywt/_multilevel.py:9 <module>
(call)|         1|  0.000164032|  0.000164032|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pywt/_thresholding.py:9 <module>
(call)|         1|   0.00154471|   0.00154471|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pywt/_wavelet_packets.py:6 <module>
(call)|         1|   0.00314546|   0.00314546|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pywt/_swt.py:1 <module>
(call)|         1|  0.000211477|  0.000211477|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pywt/_cwt.py:1 <module>
(call)|         1|  5.62668e-05|  5.62668e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pywt/data/_readers.py:1 <module>
(call)|         1|  0.000279427|  0.000279427|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pywt/data/_wavelab_signals.py:2 <module>
(call)|         1|   0.00557876|   0.00557876|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pywt/data/__init__.py:1 <module>
(call)|         1|  4.19617e-05|  4.19617e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pywt/version.py:3 <module>
(call)|         1|  0.000178576|  0.000178576|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pywt/_pytesttester.py:26 <module>
(call)|         1|    0.0708663|    0.0708663|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/pywt/__init__.py:11 <module>
(call)|         1|    0.0784979|    0.0784979|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/restoration/_denoise.py:1 <module>
(call)|         1|     0.151085|     0.151085|  0.04%|# /opt/anaconda3/lib/python3.7/site-packages/dask/config.py:1 <module>
(call)|         1|  0.000243664|  0.000243664|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/dask/utils_test.py:1 <module>
(call)|         1|   0.00318217|   0.00318217|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/dask/core.py:1 <module>
(call)|         1|   0.00701594|   0.00701594|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/dask/optimization.py:1 <module>
(call)|         1|    0.0290792|    0.0290792|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/dask/utils.py:1 <module>
(call)|         1|    0.0325329|    0.0325329|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/dask/datasets.py:1 <module>
(call)|         1|  0.000441551|  0.000441551|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/dask/order.py:77 <module>
(call)|         1|  0.000452042|  0.000452042|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/dask/callbacks.py:1 <module>
(call)|         1|     0.007267|     0.007267|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/dask/local.py:106 <module>
(call)|         1|  0.000205994|  0.000205994|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/toolz/compatibility.py:1 <module>
(call)|         1|  1.88351e-05|  1.88351e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/toolz/utils.py:1 <module>
(call)|         1|   0.00637937|   0.00637937|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/toolz/itertoolz.py:1 <module>
(call)|         1|    0.0172861|    0.0172861|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/toolz/_signatures.py:14 <module>
(call)|         1|    0.0244887|    0.0244887|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/toolz/functoolz.py:1 <module>
(call)|         1|  0.000182629|  0.000182629|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/toolz/dicttoolz.py:1 <module>
(call)|         1|  0.000144958|  0.000144958|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/toolz/recipes.py:1 <module>
(call)|         1|     0.573105|     0.573105|  0.16%|# /opt/anaconda3/lib/python3.7/site-packages/toolz/curried/operator.py:1 <module>
(call)|         1|  0.000303984|  0.000303984|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/toolz/curried/exceptions.py:1 <module>
(call)|         1|     0.583345|     0.583345|  0.16%|# /opt/anaconda3/lib/python3.7/site-packages/toolz/curried/__init__.py:25 <module>
(call)|         1|  0.000201225|  0.000201225|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/toolz/sandbox/core.py:1 <module>
(call)|         1|  0.000133038|  0.000133038|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/toolz/sandbox/parallel.py:1 <module>
(call)|         1|   0.00615811|   0.00615811|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/toolz/sandbox/__init__.py:1 <module>
(call)|         1|     0.860448|     0.860448|  0.23%|# /opt/anaconda3/lib/python3.7/site-packages/toolz/__init__.py:1 <module>
(call)|         1|  0.000212669|  0.000212669|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/cytoolz/compatibility.py:1 <module>
(call)|         1|  9.89437e-05|  9.89437e-05|  0.00%|# <string>_337:1 <module>
(call)|         1|   0.00136971|   0.00136971|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/cytoolz/_signatures.py:1 <module>
(call)|         1|     0.562549|     0.562549|  0.15%|# /opt/anaconda3/lib/python3.7/site-packages/cytoolz/curried/operator.py:1 <module>
(call)|         1|  0.000221491|  0.000221491|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/cytoolz/curried/exceptions.py:1 <module>
(call)|         1|     0.570099|     0.570099|  0.16%|# /opt/anaconda3/lib/python3.7/site-packages/cytoolz/curried/__init__.py:25 <module>
(call)|         1|  2.24113e-05|  2.24113e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/cytoolz/_version.py:1 <module>
(call)|         1|     0.721641|     0.721641|  0.20%|# /opt/anaconda3/lib/python3.7/site-packages/cytoolz/__init__.py:1 <module>
(call)|         1|         1.63|         1.63|  0.44%|# /opt/anaconda3/lib/python3.7/site-packages/tlz/_build_tlz.py:1 <module>
(call)|         1|      1.63335|      1.63335|  0.44%|# /opt/anaconda3/lib/python3.7/site-packages/tlz/__init__.py:7 <module>
(call)|         1|    0.0015676|    0.0015676|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/dask/system.py:1 <module>
(call)|         1|   0.00472236|   0.00472236|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/dask/threaded.py:5 <module>
(call)|         1|    0.0149684|    0.0149684|  0.00%|# /opt/anaconda3/lib/python3.7/dataclasses.py:1 <module>
(call)|         1|       0.0191|       0.0191|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/dask/compatibility.py:1 <module>
(call)|         1|  0.000416756|  0.000416756|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/dask/context.py:3 <module>
(call)|         1|    0.0140111|    0.0140111|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/dask/hashing.py:1 <module>
(call)|         1|   0.00447607|   0.00447607|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/cloudpickle/compat.py:1 <module>
(call)|         1|     0.010242|     0.010242|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/cloudpickle/cloudpickle.py:42 <module>
(call)|         1|   0.00156188|   0.00156188|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/cloudpickle/cloudpickle_fast.py:12 <module>
(call)|         1|    0.0174983|    0.0174983|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/cloudpickle/__init__.py:1 <module>
(call)|         1|  0.000530243|  0.000530243|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/tblib/cpython.py:5 <module>
(call)|         1|    0.0249689|    0.0249689|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/tblib/__init__.py:1 <module>
(call)|         1|  0.000258923|  0.000258923|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/tblib/pickling_support.py:1 <module>
(call)|         1|     0.103739|     0.103739|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/dask/multiprocessing.py:1 <module>
(call)|         1|     0.153916|     0.153916|  0.04%|# /opt/anaconda3/lib/python3.7/site-packages/dask/base.py:1 <module>
(call)|         1|  0.000612974|  0.000612974|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/dask/highlevelgraph.py:1 <module>
(call)|         1|      2.02647|      2.02647|  0.55%|# /opt/anaconda3/lib/python3.7/site-packages/dask/delayed.py:1 <module>
(call)|         1|  3.69549e-05|  3.69549e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/dask/_version.py:7 <module>
(call)|         1|      2.23257|      2.23257|  0.61%|# /opt/anaconda3/lib/python3.7/site-packages/dask/__init__.py:1 <module>
(call)|         1|      2.23766|      2.23766|  0.61%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/restoration/_cycle_spin.py:1 <module>
(call)|         1|   0.00219059|   0.00219059|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/restoration/non_local_means.py:1 <module>
(call)|         1|  0.000306368|  0.000306368|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/restoration/inpaint.py:2 <module>
(call)|         1|      2.34364|      2.34364|  0.64%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/restoration/__init__.py:3 <module>
(call)|         1|       2.3477|       2.3477|  0.64%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/filters/edges.py:11 <module>
(call)|         1|  3.00407e-05|  3.00407e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/filters/_rank_order.py:10 <module>
(call)|         1|   0.00016737|   0.00016737|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/filters/_gabor.py:1 <module>
(call)|         1|  0.000785112|  0.000785112|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/exposure/exposure.py:1 <module>
(call)|         1|  0.000187874|  0.000187874|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/color/adapt_rgb.py:1 <module>
(call)|         1|   0.00329447|   0.00329447|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/exposure/_adapthist.py:15 <module>
(call)|         1|  4.45843e-05|  4.45843e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/exposure/histogram_matching.py:1 <module>
(call)|         1|     0.011899|     0.011899|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/exposure/__init__.py:1 <module>
(call)|         1|  0.000137806|  0.000137806|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/transform/histogram_matching.py:1 <module>
(call)|         1|   0.00212479|   0.00212479|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/transform/hough_transform.py:1 <module>
(call)|         1|   0.00223589|   0.00223589|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/transform/_geometric.py:1 <module>
(call)|         1|   0.00765514|   0.00765514|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/transform/_warps.py:1 <module>
(call)|         1|    0.0130713|    0.0130713|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/transform/radon_transform.py:1 <module>
(call)|         1|  0.000156641|  0.000156641|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/transform/finite_radon_transform.py:4 <module>
(call)|         1|  0.000131369|  0.000131369|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/transform/integral.py:1 <module>
(call)|         1|   0.00045228|   0.00045228|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/transform/pyramids.py:1 <module>
(call)|         1|    0.0319843|    0.0319843|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/transform/__init__.py:1 <module>
(call)|         1|    0.0522997|    0.0522997|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/filters/thresholding.py:1 <module>
(call)|         1|  0.000489235|  0.000489235|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/filters/ridges.py:9 <module>
(call)|         1|   0.00487542|   0.00487542|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/filters/rank/generic.py:49 <module>
(call)|         1|   0.00237203|   0.00237203|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/filters/rank/_percentile.py:23 <module>
(call)|         1|   0.00251341|   0.00251341|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/filters/rank/bilateral.py:24 <module>
(call)|         1|    0.0182383|    0.0182383|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/filters/rank/__init__.py:1 <module>
(call)|         1|  0.000424623|  0.000424623|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/filters/_median.py:2 <module>
(call)|         1|  0.000126362|  0.000126362|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/filters/_unsharp_mask.py:1 <module>
(call)|         1|      2.44951|      2.44951|  0.67%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/filters/__init__.py:1 <module>
(call)|         1|      2.45269|      2.45269|  0.67%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/morphology/greyreconstruct.py:11 <module>
(call)|         1|  8.70228e-05|  8.70228e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/morphology/_util.py:1 <module>
(call)|         1|       2.4604|       2.4604|  0.67%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/morphology/extrema.py:11 <module>
(call)|         1|      2.46504|      2.46504|  0.67%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/morphology/watershed.py:25 <module>
(call)|         1|   0.00516176|   0.00516176|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/morphology/_skeletonize.py:3 <module>
(call)|         1|   0.00232506|   0.00232506|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/morphology/convex_hull.py:1 <module>
(call)|         1|   0.00209808|   0.00209808|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/morphology/_flood_fill.py:5 <module>
(call)|         1|   0.00248528|   0.00248528|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/morphology/max_tree.py:38 <module>
(call)|         1|      5.86043|      5.86043|  1.59%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/morphology/__init__.py:1 <module>
(call)|         1|      10.3082|      10.3082|  2.80%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_visualization.py:1 <module>
(call)|         1|      10.3209|      10.3209|  2.81%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:1 <module>
(call)|         1|  0.000344753|  0.000344753|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/cropper_uncropper.py:1 <module>
(call)|         1|  0.000375271|  0.000375271|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/non_max_suppression.py:1 <module>
(call)|         1|  0.000228167|  0.000228167|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/unet_parts.py:1 <module>
(call)|         1|   0.00102925|   0.00102925|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/encoders_decoders.py:1 <module>
(call)|         1|   0.00935411|   0.00935411|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/unet_model.py:1 <module>
(call)|         1|    0.0234885|    0.0234885|  0.01%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/vae_parts.py:1 <module>
(call)|         1|      10.3626|      10.3626|  2.82%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/vae_model.py:1 <module>
(call)|         1|   0.00808096|   0.00808096|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/segmentation/random_walker_segmentation.py:9 <module>
(call)|         1|  0.000442028|  0.000442028|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/segmentation/active_contour_model.py:1 <module>
(call)|         1|   0.00211477|   0.00211477|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/segmentation/_felzenszwalb.py:1 <module>
(call)|         1|   0.00226521|   0.00226521|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/segmentation/slic_superpixels.py:1 <module>
(call)|         1|    0.0021987|    0.0021987|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/segmentation/_quickshift.py:1 <module>
(call)|         1|  0.000368834|  0.000368834|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/segmentation/boundaries.py:2 <module>
(call)|         1|   9.9659e-05|   9.9659e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/segmentation/_clear_border.py:1 <module>
(call)|         1|  0.000447989|  0.000447989|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/segmentation/_join.py:1 <module>
(call)|         1|  0.000263453|  0.000263453|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/segmentation/_chan_vese.py:1 <module>
(call)|         1|   0.00199389|   0.00199389|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/segmentation/morphsnakes.py:1 <module>
(call)|         1|    0.0447364|    0.0447364|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/skimage/segmentation/__init__.py:1 <module>
(call)|         1|  0.000134706|  0.000134706|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/igraph/compat.py:6 <module>
(call)|         1|   0.00369668|   0.00369668|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/igraph/configuration.py:9 <module>
(call)|         1|    0.0012536|    0.0012536|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/igraph/datatypes.py:3 <module>
(call)|         1|   0.00140929|   0.00140929|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/igraph/utils.py:6 <module>
(call)|         1|     0.333035|     0.333035|  0.09%|# /opt/anaconda3/lib/python3.7/site-packages/igraph/drawing/colors.py:5 <module>
(call)|         1|   0.00152326|   0.00152326|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/igraph/drawing/utils.py:3 <module>
(call)|         1|   0.00457597|   0.00457597|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/igraph/drawing/baseclasses.py:3 <module>
(call)|         1|  0.000607252|  0.000607252|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/igraph/drawing/metamagic.py:61 <module>
(call)|         1|   0.00064373|   0.00064373|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/igraph/drawing/text.py:5 <module>
(call)|         1|    0.0163965|    0.0163965|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/igraph/drawing/edge.py:3 <module>
(call)|         1|   0.00193524|   0.00193524|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/igraph/drawing/shapes.py:17 <module>
(call)|         1|   0.00046587|   0.00046587|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/igraph/drawing/vertex.py:6 <module>
(call)|         1|  0.000916243|  0.000916243|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/igraph/statistics.py:5 <module>
(call)|         1|    0.0044148|    0.0044148|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/igraph/layout.py:7 <module>
(call)|         1|    0.0520434|    0.0520434|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/igraph/drawing/graph.py:14 <module>
(call)|         1|     0.402059|     0.402059|  0.11%|# /opt/anaconda3/lib/python3.7/site-packages/igraph/drawing/__init__.py:16 <module>
(call)|         1|   0.00600672|   0.00600672|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/texttable.py:57 <module>
(call)|         1|    0.0119801|    0.0119801|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/igraph/summary.py:6 <module>
(call)|         1|     0.437861|     0.437861|  0.12%|# /opt/anaconda3/lib/python3.7/site-packages/igraph/clustering.py:5 <module>
(call)|         1|  0.000323057|  0.000323057|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/igraph/cut.py:3 <module>
(call)|         1|  0.000162363|  0.000162363|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/igraph/formula.py:9 <module>
(call)|         1|   0.00028801|   0.00028801|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/igraph/matching.py:3 <module>
(call)|         1|   7.9155e-05|   7.9155e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/igraph/version.py:1 <module>
(call)|         1|     0.525803|     0.525803|  0.14%|# /opt/anaconda3/lib/python3.7/site-packages/igraph/__init__.py:8 <module>
(call)|         1|   0.00152469|   0.00152469|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/leidenalg/VertexPartition.py:1 <module>
(call)|         1|  0.000895262|  0.000895262|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/leidenalg/Optimiser.py:1 <module>
(call)|         1|      0.54454|      0.54454|  0.15%|# /opt/anaconda3/lib/python3.7/site-packages/leidenalg/functions.py:1 <module>
(call)|         1|     0.558345|     0.558345|  0.15%|# /opt/anaconda3/lib/python3.7/site-packages/leidenalg/__init__.py:34 <module>
(call)|         1|     0.614311|     0.614311|  0.17%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/graph_clustering.py:1 <module>
(call)|         1|   0.00025773|   0.00025773|  0.00%|# /opt/anaconda3/lib/python3.7/netrc.py:1 <module>
(call)|         1|   0.00508022|   0.00508022|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/gitdb/__init__.py:5 <module>
(call)|         1|    0.0107226|    0.0107226|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/git/__init__.py:8 <module>
(call)|         1|  0.000361204|  0.000361204|  0.00%|# /opt/anaconda3/lib/python3.7/encodings/ascii.py:8 <module>
(call)|         1|   0.00136018|   0.00136018|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/PIL/ImageFile.py:30 <module>
(call)|         1|  0.000317574|  0.000317574|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/PIL/GimpGradientFile.py:16 <module>
(call)|         1|   0.00014472|   0.00014472|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/PIL/GimpPaletteFile.py:17 <module>
(call)|         1|  0.000135899|  0.000135899|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/PIL/PaletteFile.py:16 <module>
(call)|         1|   0.00871968|   0.00871968|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/PIL/ImagePalette.py:19 <module>
(call)|         1|    0.0166893|    0.0166893|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/PIL/BmpImagePlugin.py:27 <module>
(call)|         1|  0.000251055|  0.000251055|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/PIL/ImageChops.py:18 <module>
(call)|         1|  0.000102997|  0.000102997|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/PIL/ImageSequence.py:19 <module>
(call)|         1|   0.00679088|   0.00679088|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/PIL/GifImagePlugin.py:27 <module>
(call)|         1|    0.0213852|    0.0213852|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/PIL/TiffImagePlugin.py:42 <module>
(call)|         1|   0.00150418|   0.00150418|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/PIL/JpegPresets.py:68 <module>
(call)|         1|    0.0317473|    0.0317473|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/PIL/JpegImagePlugin.py:35 <module>
(call)|         1|  0.000558138|  0.000558138|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/PIL/PpmImagePlugin.py:18 <module>
(call)|         1|    0.0120354|    0.0120354|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/PIL/PngImagePlugin.py:34 <module>
(call)|         1|  0.000478029|  0.000478029|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/_plotly_utils/optional_imports.py:4 <module>
(call)|         1|    0.0435746|    0.0435746|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/_plotly_utils/basevalidators.py:1 <module>
(call)|         1|    0.0508497|    0.0508497|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/_plotly_utils/utils.py:1 <module>
(call)|         1|   0.00359845|   0.00359845|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/subplots.py:2 <module>
(call)|         1|  4.69685e-05|  4.69685e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/optional_imports.py:1 <module>
(call)|         1|  0.000164509|  0.000164509|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/animation.py:1 <module>
(call)|         1|  0.000830412|  0.000830412|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/utils.py:1 <module>
(call)|         1|   0.00399327|   0.00399327|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/callbacks.py:1 <module>
(call)|         1|   0.00885057|   0.00885057|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/__init__.py:1 <module>
(call)|         1|     0.110921|     0.110921|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/basedatatypes.py:1 <module>
(call)|         1|  0.000166416|  0.000166416|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/waterfall/totals/marker/__init__.py:1 <module>
(call)|         1|   0.00409341|   0.00409341|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/waterfall/totals/__init__.py:1 <module>
(call)|         1|  0.000176668|  0.000176668|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/waterfall/increasing/marker/__init__.py:1 <module>
(call)|         1|   0.00388551|   0.00388551|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/waterfall/increasing/__init__.py:1 <module>
(call)|         1|  0.000306845|  0.000306845|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/waterfall/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000158787|  0.000158787|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/waterfall/decreasing/marker/__init__.py:1 <module>
(call)|         1|   0.00362015|   0.00362015|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/waterfall/decreasing/__init__.py:1 <module>
(call)|         1|  0.000189781|  0.000189781|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/waterfall/connector/__init__.py:1 <module>
(call)|         1|    0.0316556|    0.0316556|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/waterfall/__init__.py:1 <module>
(call)|         1|  0.000615597|  0.000615597|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/volume/slices/__init__.py:1 <module>
(call)|         1|  0.000249147|  0.000249147|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/volume/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000211239|  0.000211239|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/volume/colorbar/title/__init__.py:1 <module>
(call)|         1|    0.0252595|    0.0252595|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/volume/colorbar/__init__.py:1 <module>
(call)|         1|  0.000534534|  0.000534534|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/volume/caps/__init__.py:1 <module>
(call)|         1|    0.0570705|    0.0570705|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/volume/__init__.py:1 <module>
(call)|         1|  0.000198364|  0.000198364|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/violin/unselected/__init__.py:1 <module>
(call)|         1|  0.000205994|  0.000205994|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/violin/selected/__init__.py:1 <module>
(call)|         1|  0.000206709|  0.000206709|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/violin/marker/__init__.py:1 <module>
(call)|         1|  0.000254869|  0.000254869|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/violin/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000233889|  0.000233889|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/violin/box/__init__.py:1 <module>
(call)|         1|     0.021518|     0.021518|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/violin/__init__.py:1 <module>
(call)|         1|   0.00031662|   0.00031662|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/treemap/pathbar/__init__.py:1 <module>
(call)|         1|   0.00026083|   0.00026083|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/treemap/marker/colorbar/title/__init__.py:1 <module>
(call)|         1|   0.00434685|   0.00434685|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/treemap/marker/colorbar/__init__.py:1 <module>
(call)|         1|    0.0105312|    0.0105312|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/treemap/marker/__init__.py:1 <module>
(call)|         1|    0.0002563|    0.0002563|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/treemap/hoverlabel/__init__.py:1 <module>
(call)|         1|     0.026072|     0.026072|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/treemap/__init__.py:1 <module>
(call)|         1|   0.00026536|   0.00026536|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/table/hoverlabel/__init__.py:1 <module>
(call)|         1|   0.00151968|   0.00151968|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/table/header/__init__.py:1 <module>
(call)|         1|  0.000883341|  0.000883341|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/table/cells/__init__.py:1 <module>
(call)|         1|    0.0151875|    0.0151875|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/table/__init__.py:1 <module>
(call)|         1|  0.000283957|  0.000283957|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/surface/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000211954|  0.000211954|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/surface/contours/z/__init__.py:1 <module>
(call)|         1|  0.000190973|  0.000190973|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/surface/contours/y/__init__.py:1 <module>
(call)|         1|  0.000198841|  0.000198841|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/surface/contours/x/__init__.py:1 <module>
(call)|         1|     0.011734|     0.011734|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/surface/contours/__init__.py:1 <module>
(call)|         1|  0.000192881|  0.000192881|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/surface/colorbar/title/__init__.py:1 <module>
(call)|         1|   0.00434422|   0.00434422|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/surface/colorbar/__init__.py:1 <module>
(call)|         1|    0.0314307|    0.0314307|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/surface/__init__.py:1 <module>
(call)|         1|  0.000194788|  0.000194788|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/sunburst/marker/colorbar/title/__init__.py:1 <module>
(call)|         1|   0.00434422|   0.00434422|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/sunburst/marker/colorbar/__init__.py:1 <module>
(call)|         1|    0.0102842|    0.0102842|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/sunburst/marker/__init__.py:1 <module>
(call)|         1|  0.000260353|  0.000260353|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/sunburst/hoverlabel/__init__.py:1 <module>
(call)|         1|    0.0209877|    0.0209877|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/sunburst/__init__.py:1 <module>
(call)|         1|  0.000356913|  0.000356913|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/streamtube/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000202417|  0.000202417|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/streamtube/colorbar/title/__init__.py:1 <module>
(call)|         1|   0.00447679|   0.00447679|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/streamtube/colorbar/__init__.py:1 <module>
(call)|         1|    0.0165722|    0.0165722|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/streamtube/__init__.py:1 <module>
(call)|         1|  0.000218153|  0.000218153|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/splom/unselected/__init__.py:1 <module>
(call)|         1|  0.000226498|  0.000226498|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/splom/selected/__init__.py:1 <module>
(call)|         1|  0.000192642|  0.000192642|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/splom/marker/colorbar/title/__init__.py:1 <module>
(call)|         1|   0.00430799|   0.00430799|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/splom/marker/colorbar/__init__.py:1 <module>
(call)|         1|    0.0104473|    0.0104473|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/splom/marker/__init__.py:1 <module>
(call)|         1|  0.000278234|  0.000278234|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/splom/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000242233|  0.000242233|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/splom/dimension/__init__.py:1 <module>
(call)|         1|    0.0480628|    0.0480628|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/splom/__init__.py:1 <module>
(call)|         1|  0.000337124|  0.000337124|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scatterternary/unselected/__init__.py:1 <module>
(call)|         1|  0.000402927|  0.000402927|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scatterternary/selected/__init__.py:1 <module>
(call)|         1|  0.000191212|  0.000191212|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scatterternary/marker/colorbar/title/__init__.py:1 <module>
(call)|         1|   0.00443244|   0.00443244|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scatterternary/marker/colorbar/__init__.py:1 <module>
(call)|         1|    0.0109081|    0.0109081|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scatterternary/marker/__init__.py:1 <module>
(call)|         1|  0.000257015|  0.000257015|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scatterternary/hoverlabel/__init__.py:1 <module>
(call)|         1|    0.0288734|    0.0288734|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scatterternary/__init__.py:1 <module>
(call)|         1|  0.000423431|  0.000423431|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scatterpolargl/unselected/__init__.py:1 <module>
(call)|         1|  0.000346184|  0.000346184|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scatterpolargl/selected/__init__.py:1 <module>
(call)|         1|  0.000199556|  0.000199556|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scatterpolargl/marker/colorbar/title/__init__.py:1 <module>
(call)|         1|   0.00447583|   0.00447583|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scatterpolargl/marker/colorbar/__init__.py:1 <module>
(call)|         1|    0.0106299|    0.0106299|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scatterpolargl/marker/__init__.py:1 <module>
(call)|         1|  0.000285387|  0.000285387|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scatterpolargl/hoverlabel/__init__.py:1 <module>
(call)|         1|    0.0285404|    0.0285404|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scatterpolargl/__init__.py:1 <module>
(call)|         1|  0.000404835|  0.000404835|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scatterpolar/unselected/__init__.py:1 <module>
(call)|         1|  0.000337839|  0.000337839|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scatterpolar/selected/__init__.py:1 <module>
(call)|         1|  0.000254869|  0.000254869|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scatterpolar/marker/colorbar/title/__init__.py:1 <module>
(call)|         1|   0.00448966|   0.00448966|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scatterpolar/marker/colorbar/__init__.py:1 <module>
(call)|         1|    0.0112085|    0.0112085|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scatterpolar/marker/__init__.py:1 <module>
(call)|         1|  0.000277281|  0.000277281|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scatterpolar/hoverlabel/__init__.py:1 <module>
(call)|         1|    0.0298095|    0.0298095|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scatterpolar/__init__.py:1 <module>
(call)|         1|  0.000193119|  0.000193119|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scattermapbox/unselected/__init__.py:1 <module>
(call)|         1|  0.000202417|  0.000202417|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scattermapbox/selected/__init__.py:1 <module>
(call)|         1|   0.00019455|   0.00019455|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scattermapbox/marker/colorbar/title/__init__.py:1 <module>
(call)|         1|   0.00439548|   0.00439548|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scattermapbox/marker/colorbar/__init__.py:1 <module>
(call)|         1|    0.0100234|    0.0100234|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scattermapbox/marker/__init__.py:1 <module>
(call)|         1|  0.000261068|  0.000261068|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scattermapbox/hoverlabel/__init__.py:1 <module>
(call)|         1|    0.0270343|    0.0270343|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scattermapbox/__init__.py:1 <module>
(call)|         1|  0.000363111|  0.000363111|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scattergl/unselected/__init__.py:1 <module>
(call)|         1|  0.000486851|  0.000486851|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scattergl/selected/__init__.py:1 <module>
(call)|         1|   0.00020504|   0.00020504|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scattergl/marker/colorbar/title/__init__.py:1 <module>
(call)|         1|   0.00520825|   0.00520825|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scattergl/marker/colorbar/__init__.py:1 <module>
(call)|         1|    0.0119102|    0.0119102|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scattergl/marker/__init__.py:1 <module>
(call)|         1|  0.000270128|  0.000270128|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scattergl/hoverlabel/__init__.py:1 <module>
(call)|         1|     0.032923|     0.032923|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scattergl/__init__.py:1 <module>
(call)|         1|  0.000415325|  0.000415325|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scattergeo/unselected/__init__.py:1 <module>
(call)|         1|  0.000411749|  0.000411749|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scattergeo/selected/__init__.py:1 <module>
(call)|         1|  0.000211716|  0.000211716|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scattergeo/marker/colorbar/title/__init__.py:1 <module>
(call)|         1|   0.00441098|   0.00441098|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scattergeo/marker/colorbar/__init__.py:1 <module>
(call)|         1|    0.0110047|    0.0110047|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scattergeo/marker/__init__.py:1 <module>
(call)|         1|  0.000263214|  0.000263214|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scattergeo/hoverlabel/__init__.py:1 <module>
(call)|         1|    0.0288868|    0.0288868|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scattergeo/__init__.py:1 <module>
(call)|         1|  0.000345469|  0.000345469|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scattercarpet/unselected/__init__.py:1 <module>
(call)|         1|  0.000346899|  0.000346899|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scattercarpet/selected/__init__.py:1 <module>
(call)|         1|  0.000236034|  0.000236034|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scattercarpet/marker/colorbar/title/__init__.py:1 <module>
(call)|         1|   0.00445914|   0.00445914|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scattercarpet/marker/colorbar/__init__.py:1 <module>
(call)|         1|    0.0111291|    0.0111291|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scattercarpet/marker/__init__.py:1 <module>
(call)|         1|  0.000317097|  0.000317097|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scattercarpet/hoverlabel/__init__.py:1 <module>
(call)|         1|    0.0303938|    0.0303938|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scattercarpet/__init__.py:1 <module>
(call)|         1|   0.00061202|   0.00061202|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scatter3d/projection/__init__.py:1 <module>
(call)|         1|  0.000191927|  0.000191927|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scatter3d/marker/colorbar/title/__init__.py:1 <module>
(call)|         1|   0.00430322|   0.00430322|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scatter3d/marker/colorbar/__init__.py:1 <module>
(call)|         1|    0.0104003|    0.0104003|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scatter3d/marker/__init__.py:1 <module>
(call)|         1|  0.000189304|  0.000189304|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scatter3d/line/colorbar/title/__init__.py:1 <module>
(call)|         1|   0.00429916|   0.00429916|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scatter3d/line/colorbar/__init__.py:1 <module>
(call)|         1|    0.0097754|    0.0097754|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scatter3d/line/__init__.py:1 <module>
(call)|         1|  0.000253201|  0.000253201|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scatter3d/hoverlabel/__init__.py:1 <module>
(call)|         1|     0.042264|     0.042264|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scatter3d/__init__.py:1 <module>
(call)|         1|  0.000340223|  0.000340223|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scatter/unselected/__init__.py:1 <module>
(call)|         1|  0.000339746|  0.000339746|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scatter/selected/__init__.py:1 <module>
(call)|         1|  0.000217915|  0.000217915|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scatter/marker/colorbar/title/__init__.py:1 <module>
(call)|         1|   0.00423813|   0.00423813|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scatter/marker/colorbar/__init__.py:1 <module>
(call)|         1|    0.0110059|    0.0110059|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scatter/marker/__init__.py:1 <module>
(call)|         1|  0.000267506|  0.000267506|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scatter/hoverlabel/__init__.py:1 <module>
(call)|         1|    0.0312104|    0.0312104|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/scatter/__init__.py:1 <module>
(call)|         1|  0.000385761|  0.000385761|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/sankey/node/hoverlabel/__init__.py:1 <module>
(call)|         1|   0.00446534|   0.00446534|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/sankey/node/__init__.py:1 <module>
(call)|         1|  0.000255108|  0.000255108|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/sankey/link/hoverlabel/__init__.py:1 <module>
(call)|         1|   0.00460815|   0.00460815|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/sankey/link/__init__.py:1 <module>
(call)|         1|  0.000969172|  0.000969172|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/sankey/hoverlabel/__init__.py:1 <module>
(call)|         1|    0.0230761|    0.0230761|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/sankey/__init__.py:1 <module>
(call)|         1|  0.000163078|  0.000163078|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/pointcloud/marker/__init__.py:1 <module>
(call)|         1|  0.000313282|  0.000313282|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/pointcloud/hoverlabel/__init__.py:1 <module>
(call)|         1|   0.00784922|   0.00784922|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/pointcloud/__init__.py:1 <module>
(call)|         1|  0.000275135|  0.000275135|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/pie/title/__init__.py:1 <module>
(call)|         1|  0.000223875|  0.000223875|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/pie/marker/__init__.py:1 <module>
(call)|         1|  0.000264645|  0.000264645|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/pie/hoverlabel/__init__.py:1 <module>
(call)|         1|    0.0136304|    0.0136304|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/pie/__init__.py:1 <module>
(call)|         1|  0.000196218|  0.000196218|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/parcoords/line/colorbar/title/__init__.py:1 <module>
(call)|         1|   0.00438476|   0.00438476|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/parcoords/line/colorbar/__init__.py:1 <module>
(call)|         1|    0.0100267|    0.0100267|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/parcoords/line/__init__.py:1 <module>
(call)|         1|    0.0165975|    0.0165975|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/parcoords/__init__.py:1 <module>
(call)|         1|  0.000262022|  0.000262022|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/parcats/line/colorbar/title/__init__.py:1 <module>
(call)|         1|   0.00430655|   0.00430655|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/parcats/line/colorbar/__init__.py:1 <module>
(call)|         1|   0.00980902|   0.00980902|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/parcats/line/__init__.py:1 <module>
(call)|         1|    0.0159237|    0.0159237|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/parcats/__init__.py:1 <module>
(call)|         1|  0.000199318|  0.000199318|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/ohlc/increasing/__init__.py:1 <module>
(call)|         1|  0.000290394|  0.000290394|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/ohlc/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000198841|  0.000198841|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/ohlc/decreasing/__init__.py:1 <module>
(call)|         1|    0.0116234|    0.0116234|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/ohlc/__init__.py:1 <module>
(call)|         1|  0.000266552|  0.000266552|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/mesh3d/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000261307|  0.000261307|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/mesh3d/colorbar/title/__init__.py:1 <module>
(call)|         1|   0.00434709|   0.00434709|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/mesh3d/colorbar/__init__.py:1 <module>
(call)|         1|    0.0162699|    0.0162699|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/mesh3d/__init__.py:1 <module>
(call)|         1|  0.000652552|  0.000652552|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/isosurface/slices/__init__.py:1 <module>
(call)|         1|   0.00031805|   0.00031805|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/isosurface/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000190735|  0.000190735|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/isosurface/colorbar/title/__init__.py:1 <module>
(call)|         1|   0.00432587|   0.00432587|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/isosurface/colorbar/__init__.py:1 <module>
(call)|         1|  0.000574827|  0.000574827|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/isosurface/caps/__init__.py:1 <module>
(call)|         1|    0.0258369|    0.0258369|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/isosurface/__init__.py:1 <module>
(call)|         1|  0.000186443|  0.000186443|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/indicator/title/__init__.py:1 <module>
(call)|         1|  0.000270367|  0.000270367|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/indicator/number/__init__.py:1 <module>
(call)|         1|  0.000202894|  0.000202894|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/indicator/gauge/threshold/__init__.py:1 <module>
(call)|         1|  0.000176907|  0.000176907|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/indicator/gauge/step/__init__.py:1 <module>
(call)|         1|  0.000166655|  0.000166655|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/indicator/gauge/bar/__init__.py:1 <module>
(call)|         1|  0.000453949|  0.000453949|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/indicator/gauge/axis/__init__.py:1 <module>
(call)|         1|    0.0174077|    0.0174077|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/indicator/gauge/__init__.py:1 <module>
(call)|         1|  0.000510693|  0.000510693|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/indicator/delta/__init__.py:1 <module>
(call)|         1|    0.0342236|    0.0342236|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/indicator/__init__.py:1 <module>
(call)|         1|  0.000279665|  0.000279665|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/image/hoverlabel/__init__.py:1 <module>
(call)|         1|   0.00451064|   0.00451064|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/image/__init__.py:1 <module>
(call)|         1|  0.000237226|  0.000237226|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/histogram2dcontour/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000903845|  0.000903845|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/histogram2dcontour/contours/__init__.py:1 <module>
(call)|         1|  0.000222445|  0.000222445|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/histogram2dcontour/colorbar/title/__init__.py:1 <module>
(call)|         1|   0.00489354|   0.00489354|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/histogram2dcontour/colorbar/__init__.py:1 <module>
(call)|         1|    0.0215473|    0.0215473|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/histogram2dcontour/__init__.py:1 <module>
(call)|         1|  0.000285387|  0.000285387|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/histogram2d/hoverlabel/__init__.py:1 <module>
(call)|         1|   0.00021553|   0.00021553|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/histogram2d/colorbar/title/__init__.py:1 <module>
(call)|         1|   0.00728559|   0.00728559|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/histogram2d/colorbar/__init__.py:1 <module>
(call)|         1|    0.0203171|    0.0203171|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/histogram2d/__init__.py:1 <module>
(call)|         1|  0.000329018|  0.000329018|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/histogram/unselected/__init__.py:1 <module>
(call)|         1|  0.000537872|  0.000537872|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/histogram/selected/__init__.py:1 <module>
(call)|         1|  0.000290394|  0.000290394|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/histogram/marker/colorbar/title/__init__.py:1 <module>
(call)|         1|   0.00654221|   0.00654221|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/histogram/marker/colorbar/__init__.py:1 <module>
(call)|         1|      0.02845|      0.02845|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/histogram/marker/__init__.py:1 <module>
(call)|         1|  0.000288963|  0.000288963|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/histogram/hoverlabel/__init__.py:1 <module>
(call)|         1|    0.0865638|    0.0865638|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/histogram/__init__.py:1 <module>
(call)|         1|  0.000271082|  0.000271082|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/heatmapgl/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000192165|  0.000192165|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/heatmapgl/colorbar/title/__init__.py:1 <module>
(call)|         1|   0.00440717|   0.00440717|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/heatmapgl/colorbar/__init__.py:1 <module>
(call)|         1|    0.0148222|    0.0148222|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/heatmapgl/__init__.py:1 <module>
(call)|         1|  0.000360727|  0.000360727|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/heatmap/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000196934|  0.000196934|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/heatmap/colorbar/title/__init__.py:1 <module>
(call)|         1|   0.00433588|   0.00433588|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/heatmap/colorbar/__init__.py:1 <module>
(call)|         1|    0.0150292|    0.0150292|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/heatmap/__init__.py:1 <module>
(call)|         1|  0.000335217|  0.000335217|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/funnelarea/title/__init__.py:1 <module>
(call)|         1|  0.000217915|  0.000217915|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/funnelarea/marker/__init__.py:1 <module>
(call)|         1|  0.000258923|  0.000258923|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/funnelarea/hoverlabel/__init__.py:1 <module>
(call)|         1|    0.0134728|    0.0134728|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/funnelarea/__init__.py:1 <module>
(call)|         1|  0.000206232|  0.000206232|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/funnel/marker/colorbar/title/__init__.py:1 <module>
(call)|         1|   0.00453377|   0.00453377|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/funnel/marker/colorbar/__init__.py:1 <module>
(call)|         1|    0.0107343|    0.0107343|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/funnel/marker/__init__.py:1 <module>
(call)|         1|   0.00026226|   0.00026226|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/funnel/hoverlabel/__init__.py:1 <module>
(call)|         1|     0.000211|     0.000211|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/funnel/connector/__init__.py:1 <module>
(call)|         1|    0.0248404|    0.0248404|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/funnel/__init__.py:1 <module>
(call)|         1|  0.000271797|  0.000271797|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/densitymapbox/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000216961|  0.000216961|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/densitymapbox/colorbar/title/__init__.py:1 <module>
(call)|         1|   0.00433373|   0.00433373|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/densitymapbox/colorbar/__init__.py:1 <module>
(call)|         1|    0.0143049|    0.0143049|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/densitymapbox/__init__.py:1 <module>
(call)|         1|  0.000195026|  0.000195026|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/contourcarpet/contours/__init__.py:1 <module>
(call)|         1|   0.00019455|   0.00019455|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/contourcarpet/colorbar/title/__init__.py:1 <module>
(call)|         1|    0.0042491|    0.0042491|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/contourcarpet/colorbar/__init__.py:1 <module>
(call)|         1|    0.0144234|    0.0144234|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/contourcarpet/__init__.py:1 <module>
(call)|         1|  0.000255823|  0.000255823|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/contour/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000187635|  0.000187635|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/contour/contours/__init__.py:1 <module>
(call)|         1|  0.000193357|  0.000193357|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/contour/colorbar/title/__init__.py:1 <module>
(call)|         1|   0.00428462|   0.00428462|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/contour/colorbar/__init__.py:1 <module>
(call)|         1|    0.0193501|    0.0193501|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/contour/__init__.py:1 <module>
(call)|         1|  0.000253201|  0.000253201|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/cone/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000214577|  0.000214577|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/cone/colorbar/title/__init__.py:1 <module>
(call)|         1|    0.0104563|    0.0104563|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/cone/colorbar/__init__.py:1 <module>
(call)|         1|    0.0273457|    0.0273457|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/cone/__init__.py:1 <module>
(call)|         1|  0.000150204|  0.000150204|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/choroplethmapbox/unselected/__init__.py:1 <module>
(call)|         1|   0.00016284|   0.00016284|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/choroplethmapbox/selected/__init__.py:1 <module>
(call)|         1|  0.000212669|  0.000212669|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/choroplethmapbox/marker/__init__.py:1 <module>
(call)|         1|  0.000279188|  0.000279188|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/choroplethmapbox/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000279188|  0.000279188|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/choroplethmapbox/colorbar/title/__init__.py:1 <module>
(call)|         1|    0.0045085|    0.0045085|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/choroplethmapbox/colorbar/__init__.py:1 <module>
(call)|         1|    0.0257113|    0.0257113|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/choroplethmapbox/__init__.py:1 <module>
(call)|         1|  0.000153065|  0.000153065|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/choropleth/unselected/__init__.py:1 <module>
(call)|         1|  0.000149012|  0.000149012|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/choropleth/selected/__init__.py:1 <module>
(call)|         1|  0.000262022|  0.000262022|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/choropleth/marker/__init__.py:1 <module>
(call)|         1|  0.000279665|  0.000279665|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/choropleth/hoverlabel/__init__.py:1 <module>
(call)|         1|   0.00019002|   0.00019002|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/choropleth/colorbar/title/__init__.py:1 <module>
(call)|         1|   0.00439548|   0.00439548|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/choropleth/colorbar/__init__.py:1 <module>
(call)|         1|    0.0265517|    0.0265517|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/choropleth/__init__.py:1 <module>
(call)|         1|   0.00019598|   0.00019598|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/carpet/baxis/title/__init__.py:1 <module>
(call)|         1|   0.00464702|   0.00464702|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/carpet/baxis/__init__.py:1 <module>
(call)|         1|  0.000209093|  0.000209093|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/carpet/aaxis/title/__init__.py:1 <module>
(call)|         1|    0.0043273|    0.0043273|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/carpet/aaxis/__init__.py:1 <module>
(call)|         1|    0.0243587|    0.0243587|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/carpet/__init__.py:1 <module>
(call)|         1|  0.000187159|  0.000187159|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/candlestick/increasing/__init__.py:1 <module>
(call)|         1|  0.000325441|  0.000325441|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/candlestick/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000191689|  0.000191689|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/candlestick/decreasing/__init__.py:1 <module>
(call)|         1|    0.0118413|    0.0118413|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/candlestick/__init__.py:1 <module>
(call)|         1|  0.000187159|  0.000187159|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/box/unselected/__init__.py:1 <module>
(call)|         1|  0.000198603|  0.000198603|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/box/selected/__init__.py:1 <module>
(call)|         1|  0.000260115|  0.000260115|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/box/marker/__init__.py:1 <module>
(call)|         1|  0.000305653|  0.000305653|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/box/hoverlabel/__init__.py:1 <module>
(call)|         1|    0.0159826|    0.0159826|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/box/__init__.py:1 <module>
(call)|         1|  0.000313759|  0.000313759|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/barpolar/unselected/__init__.py:1 <module>
(call)|         1|  0.000391245|  0.000391245|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/barpolar/selected/__init__.py:1 <module>
(call)|         1|  0.000188589|  0.000188589|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/barpolar/marker/colorbar/title/__init__.py:1 <module>
(call)|         1|   0.00457883|   0.00457883|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/barpolar/marker/colorbar/__init__.py:1 <module>
(call)|         1|    0.0115545|    0.0115545|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/barpolar/marker/__init__.py:1 <module>
(call)|         1|  0.000300169|  0.000300169|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/barpolar/hoverlabel/__init__.py:1 <module>
(call)|         1|    0.0282326|    0.0282326|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/barpolar/__init__.py:1 <module>
(call)|         1|  0.000391722|  0.000391722|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/bar/unselected/__init__.py:1 <module>
(call)|         1|  0.000327826|  0.000327826|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/bar/selected/__init__.py:1 <module>
(call)|         1|  0.000201702|  0.000201702|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/bar/marker/colorbar/title/__init__.py:1 <module>
(call)|         1|    0.0045383|    0.0045383|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/bar/marker/colorbar/__init__.py:1 <module>
(call)|         1|    0.0112722|    0.0112722|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/bar/marker/__init__.py:1 <module>
(call)|         1|  0.000248909|  0.000248909|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/bar/hoverlabel/__init__.py:1 <module>
(call)|         1|    0.0314107|    0.0314107|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/bar/__init__.py:1 <module>
(call)|         1|  0.000309706|  0.000309706|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/area/hoverlabel/__init__.py:1 <module>
(call)|         1|   0.00495696|   0.00495696|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/area/__init__.py:1 <module>
(call)|         1|  0.000196218|  0.000196218|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/yaxis/title/__init__.py:1 <module>
(call)|         1|   0.00438547|   0.00438547|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/yaxis/__init__.py:1 <module>
(call)|         1|  0.000189066|  0.000189066|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/xaxis/title/__init__.py:1 <module>
(call)|         1|  0.000170946|  0.000170946|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/xaxis/rangeslider/__init__.py:1 <module>
(call)|         1|  0.000547409|  0.000547409|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/xaxis/rangeselector/__init__.py:1 <module>
(call)|         1|    0.0124178|    0.0124178|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/xaxis/__init__.py:1 <module>
(call)|         1|  0.000781298|  0.000781298|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/updatemenu/__init__.py:1 <module>
(call)|         1|  0.000398874|  0.000398874|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/title/__init__.py:1 <module>
(call)|         1|  0.000201464|  0.000201464|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/ternary/caxis/title/__init__.py:1 <module>
(call)|         1|   0.00428772|   0.00428772|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/ternary/caxis/__init__.py:1 <module>
(call)|         1|  0.000195265|  0.000195265|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/ternary/baxis/title/__init__.py:1 <module>
(call)|         1|   0.00426173|   0.00426173|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/ternary/baxis/__init__.py:1 <module>
(call)|         1|  0.000184059|  0.000184059|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/ternary/aaxis/title/__init__.py:1 <module>
(call)|         1|   0.00421572|   0.00421572|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/ternary/aaxis/__init__.py:1 <module>
(call)|         1|    0.0290716|    0.0290716|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/ternary/__init__.py:1 <module>
(call)|         1|   0.00919962|   0.00919962|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/template/data/__init__.py:1 <module>
(call)|         1|     0.015172|     0.015172|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/template/__init__.py:1 <module>
(call)|         1|  0.000192404|  0.000192404|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/slider/currentvalue/__init__.py:1 <module>
(call)|         1|   0.00504684|   0.00504684|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/slider/__init__.py:1 <module>
(call)|         1|  0.000205517|  0.000205517|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/shape/__init__.py:1 <module>
(call)|         1|  0.000201702|  0.000201702|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/scene/zaxis/title/__init__.py:1 <module>
(call)|         1|   0.00422764|   0.00422764|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/scene/zaxis/__init__.py:1 <module>
(call)|         1|  0.000192642|  0.000192642|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/scene/yaxis/title/__init__.py:1 <module>
(call)|         1|   0.00431275|   0.00431275|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/scene/yaxis/__init__.py:1 <module>
(call)|         1|  0.000279188|  0.000279188|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/scene/xaxis/title/__init__.py:1 <module>
(call)|         1|   0.00429988|   0.00429988|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/scene/xaxis/__init__.py:1 <module>
(call)|         1|  0.000790834|  0.000790834|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/scene/camera/__init__.py:1 <module>
(call)|         1|   0.00027895|   0.00027895|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/scene/annotation/hoverlabel/__init__.py:1 <module>
(call)|         1|   0.00416279|   0.00416279|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/scene/annotation/__init__.py:1 <module>
(call)|         1|    0.0501168|    0.0501168|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/scene/__init__.py:1 <module>
(call)|         1|  0.000279188|  0.000279188|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/polar/radialaxis/title/__init__.py:1 <module>
(call)|         1|   0.00479198|   0.00479198|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/polar/radialaxis/__init__.py:1 <module>
(call)|         1|  0.000611782|  0.000611782|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/polar/angularaxis/__init__.py:1 <module>
(call)|         1|    0.0182383|    0.0182383|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/polar/__init__.py:1 <module>
(call)|         1|  0.000203609|  0.000203609|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/mapbox/layer/symbol/__init__.py:1 <module>
(call)|         1|   0.00456047|   0.00456047|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/mapbox/layer/__init__.py:1 <module>
(call)|         1|   0.00935817|   0.00935817|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/mapbox/__init__.py:1 <module>
(call)|         1|  0.000892401|  0.000892401|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/legend/title/__init__.py:1 <module>
(call)|         1|   0.00492692|   0.00492692|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/legend/__init__.py:1 <module>
(call)|         1|  0.000196457|  0.000196457|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000193119|  0.000193119|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/grid/__init__.py:1 <module>
(call)|         1|  0.000212193|  0.000212193|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/geo/projection/__init__.py:1 <module>
(call)|         1|   0.00525856|   0.00525856|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/geo/__init__.py:1 <module>
(call)|         1|   0.00030303|   0.00030303|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/coloraxis/colorbar/title/__init__.py:1 <module>
(call)|         1|   0.00440884|   0.00440884|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/coloraxis/colorbar/__init__.py:1 <module>
(call)|         1|    0.0101159|    0.0101159|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/coloraxis/__init__.py:1 <module>
(call)|         1|   0.00017786|   0.00017786|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/annotation/hoverlabel/__init__.py:1 <module>
(call)|         1|   0.00414324|   0.00414324|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/annotation/__init__.py:1 <module>
(call)|         1|     0.302872|     0.302872|  0.08%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/layout/__init__.py:1 <module>
(call)|         1|    0.0114176|    0.0114176|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/_figure.py:1 <module>
(call)|         1|    0.0146515|    0.0146515|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/_deprecations.py:1 <module>
(call)|         1|  6.10352e-05|  6.10352e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/ipywidgets/_version.py:4 <module>
(call)|         1|  5.24521e-05|  5.24521e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/ipykernel/_version.py:1 <module>
(call)|         1|  3.21865e-05|  3.21865e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/jupyter_client/_version.py:1 <module>
(call)|         1|  0.000114679|  0.000114679|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/zmq/backend/select.py:1 <module>
(call)|         1|  0.000872135|  0.000872135|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/zmq/error.py:1 <module>
(call)|         1|    0.0324361|    0.0324361|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/zmq/backend/cython/__init__.py:1 <module>
(call)|         1|    0.0389338|    0.0389338|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/zmq/backend/__init__.py:1 <module>
(call)|         1|   0.00341582|   0.00341582|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/zmq/utils/constant_names.py:1 <module>
(call)|         1|    0.0182347|    0.0182347|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/zmq/sugar/constants.py:1 <module>
(call)|         1|  0.000310898|  0.000310898|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/zmq/sugar/attrsettr.py:2 <module>
(call)|         1|  0.000390768|  0.000390768|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/zmq/sugar/poll.py:1 <module>
(call)|         1|   0.00012517|   0.00012517|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/zmq/utils/strtypes.py:6 <module>
(call)|         1|   0.00278211|   0.00278211|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/zmq/utils/jsonapi.py:13 <module>
(call)|         1|    0.0152714|    0.0152714|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/zmq/sugar/socket.py:2 <module>
(call)|         1|    0.0216749|    0.0216749|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/zmq/sugar/context.py:2 <module>
(call)|         1|  0.000408888|  0.000408888|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/zmq/sugar/frame.py:2 <module>
(call)|         1|  0.000322819|  0.000322819|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/zmq/sugar/tracker.py:1 <module>
(call)|         1|  0.000198603|  0.000198603|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/zmq/sugar/version.py:1 <module>
(call)|         1|  9.13143e-05|  9.13143e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/zmq/sugar/stopwatch.py:1 <module>
(call)|         1|    0.0590067|    0.0590067|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/zmq/sugar/__init__.py:1 <module>
(call)|         1|     0.111121|     0.111121|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/zmq/__init__.py:1 <module>
(call)|         1|    0.0238643|    0.0238643|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/jupyter_client/localinterfaces.py:1 <module>
(call)|         1|  2.55108e-05|  2.55108e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/jupyter_core/version.py:4 <module>
(call)|         1|   0.00297928|   0.00297928|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/jupyter_core/__init__.py:1 <module>
(call)|         1|   0.00096941|   0.00096941|  0.00%|# /opt/anaconda3/lib/python3.7/distutils/errors.py:9 <module>
(call)|         1|  7.36713e-05|  7.36713e-05|  0.00%|# /opt/anaconda3/lib/python3.7/distutils/dep_util.py:5 <module>
(call)|         1|  0.000128269|  0.000128269|  0.00%|# /opt/anaconda3/lib/python3.7/distutils/debug.py:1 <module>
(call)|         1|  0.000264168|  0.000264168|  0.00%|# /opt/anaconda3/lib/python3.7/distutils/log.py:1 <module>
(call)|         1|   0.00632095|   0.00632095|  0.00%|# /opt/anaconda3/lib/python3.7/distutils/spawn.py:7 <module>
(call)|         1|    0.0160038|    0.0160038|  0.00%|# /opt/anaconda3/lib/python3.7/distutils/util.py:5 <module>
(call)|         1|    0.0201855|    0.0201855|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/jupyter_core/paths.py:2 <module>
(call)|         1|     0.178466|     0.178466|  0.05%|# /opt/anaconda3/lib/python3.7/site-packages/jupyter_client/connect.py:5 <module>
(call)|         1|  3.12328e-05|  3.12328e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/traitlets/log.py:1 <module>
(call)|         1|   0.00260091|   0.00260091|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/jupyter_client/launcher.py:1 <module>
(call)|         1|  0.000593662|  0.000593662|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/jupyter_client/channelsabc.py:1 <module>
(call)|         1|   0.00433326|   0.00433326|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/jupyter_client/channels.py:1 <module>
(call)|         1|  0.000418663|  0.000418663|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/jupyter_client/clientabc.py:1 <module>
(call)|         1|    0.0138764|    0.0138764|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/jupyter_client/client.py:1 <module>
(call)|         1|    0.0149438|    0.0149438|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/jupyter_client/kernelspec.py:1 <module>
(call)|         1|  0.000393391|  0.000393391|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/jupyter_client/managerabc.py:1 <module>
(call)|         1|    0.0290666|    0.0290666|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/jupyter_client/manager.py:1 <module>
(call)|         1|  0.000231028|  0.000231028|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/jupyter_client/blocking/channels.py:4 <module>
(call)|         1|   0.00539041|   0.00539041|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/jupyter_client/blocking/client.py:4 <module>
(call)|         1|   0.00880146|   0.00880146|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/jupyter_client/blocking/__init__.py:1 <module>
(call)|         1|   0.00247717|   0.00247717|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/zmq/_future.py:1 <module>
(call)|         1|   0.00595069|   0.00595069|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/zmq/asyncio/__init__.py:4 <module>
(call)|         1|  0.000221014|  0.000221014|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/jupyter_client/asynchronous/channels.py:1 <module>
(call)|         1|     0.015095|     0.015095|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/jupyter_client/asynchronous/client.py:1 <module>
(call)|         1|    0.0182943|    0.0182943|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/jupyter_client/asynchronous/__init__.py:1 <module>
(call)|         1|   0.00626063|   0.00626063|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/jupyter_client/multikernelmanager.py:1 <module>
(call)|         1|     0.280595|     0.280595|  0.08%|# /opt/anaconda3/lib/python3.7/site-packages/jupyter_client/__init__.py:1 <module>
(call)|         1|     0.285886|     0.285886|  0.08%|# /opt/anaconda3/lib/python3.7/site-packages/ipykernel/connect.py:2 <module>
(call)|         1|       0.2916|       0.2916|  0.08%|# /opt/anaconda3/lib/python3.7/site-packages/ipykernel/__init__.py:1 <module>
(call)|         1|  2.21729e-05|  2.21729e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/tornado/__init__.py:16 <module>
(call)|         1|   0.00353646|   0.00353646|  0.00%|# /opt/anaconda3/lib/python3.7/logging/handlers.py:24 <module>
(call)|         1|    0.0102296|    0.0102296|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/tornado/util.py:11 <module>
(call)|         1|    0.0623682|    0.0623682|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/tornado/escape.py:20 <module>
(call)|         1|   0.00462413|   0.00462413|  0.00%|# /opt/anaconda3/lib/python3.7/curses/__init__.py:11 <module>
(call)|         1|     0.081614|     0.081614|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/tornado/log.py:29 <module>
(call)|         1|   0.00623465|   0.00623465|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/tornado/concurrent.py:26 <module>
(call)|         1|     0.019341|     0.019341|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/tornado/ioloop.py:31 <module>
(call)|         1|    0.0122447|    0.0122447|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/tornado/gen.py:68 <module>
(call)|         1|    0.0176594|    0.0176594|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/tornado/platform/asyncio.py:20 <module>
(call)|         1|     0.135694|     0.135694|  0.04%|# /opt/anaconda3/lib/python3.7/site-packages/zmq/eventloop/ioloop.py:8 <module>
(call)|         1|     0.138407|     0.138407|  0.04%|# /opt/anaconda3/lib/python3.7/site-packages/zmq/eventloop/__init__.py:1 <module>
(call)|         1|  0.000625372|  0.000625372|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/tornado/stack_context.py:72 <module>
(call)|         1|   0.00906634|   0.00906634|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/zmq/eventloop/zmqstream.py:24 <module>
(call)|         1|   0.00696826|   0.00696826|  0.00%|# /opt/anaconda3/lib/python3.7/_strptime.py:12 <module>
(call)|         1|    0.0514014|    0.0514014|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/jupyter_client/jsonutil.py:2 <module>
(call)|         1|    0.0247281|    0.0247281|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/jupyter_client/adapter.py:1 <module>
(call)|         1|     0.251839|     0.251839|  0.07%|# /opt/anaconda3/lib/python3.7/site-packages/jupyter_client/session.py:10 <module>
(call)|         1|   0.00336623|   0.00336623|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/tornado/locks.py:15 <module>
(call)|         1|    0.0109992|    0.0109992|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/tornado/queues.py:26 <module>
(call)|         1|    0.0279388|    0.0279388|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/ipykernel/jsonutil.py:1 <module>
(call)|         1|     0.314487|     0.314487|  0.09%|# /opt/anaconda3/lib/python3.7/site-packages/ipykernel/kernelbase.py:1 <module>
(call)|         1|     0.320238|     0.320238|  0.09%|# /opt/anaconda3/lib/python3.7/site-packages/ipykernel/comm/comm.py:1 <module>
(call)|         1|     0.324524|     0.324524|  0.09%|# /opt/anaconda3/lib/python3.7/site-packages/ipykernel/comm/manager.py:1 <module>
(call)|         1|     0.327493|     0.327493|  0.09%|# /opt/anaconda3/lib/python3.7/site-packages/ipykernel/comm/__init__.py:1 <module>
(call)|         1|     0.636723|     0.636723|  0.17%|# /opt/anaconda3/lib/python3.7/site-packages/ipywidgets/widgets/widget.py:8 <module>
(call)|         1|  4.69685e-05|  4.69685e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/ipywidgets/widgets/util.py:6 <module>
(call)|         1|     0.200502|     0.200502|  0.05%|# /opt/anaconda3/lib/python3.7/site-packages/ipywidgets/widgets/trait_types.py:6 <module>
(call)|         1|    0.0126216|    0.0126216|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/ipywidgets/widgets/widget_layout.py:4 <module>
(call)|         1|    0.0010066|    0.0010066|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/ipywidgets/widgets/widget_style.py:4 <module>
(call)|         1|     0.223403|     0.223403|  0.06%|# /opt/anaconda3/lib/python3.7/site-packages/ipywidgets/widgets/domwidget.py:4 <module>
(call)|         1|  0.000574112|  0.000574112|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/ipywidgets/widgets/valuewidget.py:4 <module>
(call)|         1|   0.00100875|   0.00100875|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/ipywidgets/widgets/widget_core.py:4 <module>
(call)|         1|   0.00475502|   0.00475502|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/ipywidgets/widgets/widget_description.py:4 <module>
(call)|         1|     0.020596|     0.020596|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/ipywidgets/widgets/widget_bool.py:7 <module>
(call)|         1|    0.0096333|    0.0096333|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/ipywidgets/widgets/widget_button.py:8 <module>
(call)|         1|  1.83582e-05|  1.83582e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/ipywidgets/widgets/docutils.py:4 <module>
(call)|         1|    0.0183213|    0.0183213|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/ipywidgets/widgets/widget_box.py:9 <module>
(call)|         1|    0.0519261|    0.0519261|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/ipywidgets/widgets/widget_int.py:7 <module>
(call)|         1|     0.126877|     0.126877|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/ipywidgets/widgets/widget_float.py:4 <module>
(call)|         1|   0.00465345|   0.00465345|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/ipywidgets/widgets/widget_color.py:7 <module>
(call)|         1|   0.00444794|   0.00444794|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/ipywidgets/widgets/widget_date.py:7 <module>
(call)|         1|   0.00631332|   0.00631332|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/ipywidgets/widgets/widget_output.py:7 <module>
(call)|         1|    0.0506122|    0.0506122|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/ipywidgets/widgets/widget_selection.py:7 <module>
(call)|         1|   0.00861788|   0.00861788|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/ipywidgets/widgets/widget_selectioncontainer.py:8 <module>
(call)|         1|    0.0303173|    0.0303173|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/ipywidgets/widgets/widget_string.py:7 <module>
(call)|         1|    0.0137651|    0.0137651|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/ipywidgets/widgets/widget_controller.py:7 <module>
(call)|         1|   0.00327444|   0.00327444|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/ipywidgets/widgets/interaction.py:4 <module>
(call)|         1|   0.00828385|   0.00828385|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/ipywidgets/widgets/widget_link.py:7 <module>
(call)|         1|    0.0183356|    0.0183356|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/ipywidgets/widgets/widget_media.py:4 <module>
(call)|         1|   0.00828505|   0.00828505|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/ipywidgets/widgets/widget_templates.py:1 <module>
(call)|         1|   0.00738311|   0.00738311|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/ipywidgets/widgets/widget_upload.py:7 <module>
(call)|         1|      1.26786|      1.26786|  0.34%|# /opt/anaconda3/lib/python3.7/site-packages/ipywidgets/widgets/__init__.py:4 <module>
(call)|         1|      1.27482|      1.27482|  0.35%|# /opt/anaconda3/lib/python3.7/site-packages/ipywidgets/__init__.py:19 <module>
(call)|         1|  0.000235081|  0.000235081|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/serializers.py:1 <module>
(call)|         1|  2.90871e-05|  2.90871e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/_version.py:7 <module>
(call)|         1|  1.69277e-05|  1.69277e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/_widget_version.py:5 <module>
(call)|         1|   0.00540805|   0.00540805|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/version.py:1 <module>
(call)|         1|    0.0276306|    0.0276306|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/basewidget.py:1 <module>
(call)|         1|    0.0450058|    0.0450058|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/_figurewidget.py:1 <module>
(call)|         1|      3.86788|      3.86788|  1.05%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/__init__.py:1 <module>
(call)|         1|  0.000407934|  0.000407934|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/_plotly_utils/exceptions.py:1 <module>
(call)|         1|   0.00311637|   0.00311637|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/exceptions.py:1 <module>
(call)|         1|  0.000692368|  0.000692368|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/_plotly_utils/files.py:1 <module>
(call)|         1|   0.00321341|   0.00321341|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/files.py:1 <module>
(call)|         1|    0.0310032|    0.0310032|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/tools.py:9 <module>
(call)|         1|  1.74046e-05|  1.74046e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/offline/_plotlyjs_version.py:3 <module>
(call)|         1|   0.00383663|   0.00383663|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/offline/offline.py:5 <module>
(call)|         1|   0.00697803|   0.00697803|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/offline/__init__.py:5 <module>
(call)|         1|  2.14577e-05|  2.14577e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/_plotly_utils/colors/_swatches.py:1 <module>
(call)|         1|   0.00381899|   0.00381899|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/_plotly_utils/colors/colorbrewer.py:7 <module>
(call)|         1|   0.00281978|   0.00281978|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/_plotly_utils/colors/carto.py:7 <module>
(call)|         1|    0.0156231|    0.0156231|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/_plotly_utils/colors/qualitative.py:5 <module>
(call)|         1|   0.00418949|   0.00418949|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/_plotly_utils/colors/plotlyjs.py:4 <module>
(call)|         1|   0.00212479|   0.00212479|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/_plotly_utils/colors/cmocean.py:7 <module>
(call)|         1|    0.0133824|    0.0133824|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/_plotly_utils/colors/sequential.py:6 <module>
(call)|         1|  0.000562906|  0.000562906|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/_plotly_utils/colors/diverging.py:7 <module>
(call)|         1|   0.00113559|   0.00113559|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/_plotly_utils/colors/cyclical.py:5 <module>
(call)|         1|    0.0450132|    0.0450132|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/_plotly_utils/colors/__init__.py:75 <module>
(call)|         1|    0.0479147|    0.0479147|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/colors.py:1 <module>
(call)|         1|  0.000524282|  0.000524282|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/retrying.py:15 <module>
(call)|         1|  0.000358582|  0.000358582|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/io/_utils.py:1 <module>
(call)|         1|    0.0129397|    0.0129397|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/io/_orca.py:1 <module>
(call)|         1|  6.38962e-05|  6.38962e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/io/orca.py:1 <module>
(call)|         1|  0.000228405|  0.000228405|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/io/_json.py:1 <module>
(call)|         1|    0.0008533|    0.0008533|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/io/_templates.py:1 <module>
(call)|         1|   0.00242972|   0.00242972|  0.00%|# /opt/anaconda3/lib/python3.7/webbrowser.py:2 <module>
(call)|         1|   0.00662708|   0.00662708|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/io/_html.py:1 <module>
(call)|         1|   0.00266528|   0.00266528|  0.00%|# /opt/anaconda3/lib/python3.7/socketserver.py:119 <module>
(call)|         1|    0.0620656|    0.0620656|  0.02%|# /opt/anaconda3/lib/python3.7/http/server.py:32 <module>
(call)|         1|    0.0691376|    0.0691376|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/io/_base_renderers.py:1 <module>
(call)|         1|  2.52724e-05|  2.52724e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/nbformat/_version.py:2 <module>
(call)|         1|  0.000236511|  0.000236511|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/ipython_genutils/ipstruct.py:5 <module>
(call)|         1|   0.00336599|   0.00336599|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/nbformat/v1/nbbase.py:6 <module>
(call)|         1|  0.000149727|  0.000149727|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/nbformat/v1/rwbase.py:6 <module>
(call)|         1|   0.00307274|   0.00307274|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/nbformat/v1/nbjson.py:6 <module>
(call)|         1|  4.07696e-05|  4.07696e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/nbformat/v1/convert.py:1 <module>
(call)|         1|    0.0152559|    0.0152559|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/nbformat/v1/__init__.py:1 <module>
(call)|         1|  0.000330925|  0.000330925|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/nbformat/v2/nbbase.py:11 <module>
(call)|         1|  5.79357e-05|  5.79357e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/nbformat/_compat.py:1 <module>
(call)|         1|   0.00281501|   0.00281501|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/nbformat/v2/rwbase.py:6 <module>
(call)|         1|   0.00568986|   0.00568986|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/nbformat/v2/nbjson.py:6 <module>
(call)|         1|  3.93391e-05|  3.93391e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/nbformat/v2/nbxml.py:2 <module>
(call)|         1|    0.0109832|    0.0109832|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/nbformat/v2/nbpy.py:6 <module>
(call)|         1|  8.22544e-05|  8.22544e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/nbformat/v2/convert.py:7 <module>
(call)|         1|    0.0303218|    0.0303218|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/nbformat/v2/__init__.py:6 <module>
(call)|         1|  0.000260592|  0.000260592|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/nbformat/v3/nbbase.py:7 <module>
(call)|         1|  0.000390291|  0.000390291|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/nbformat/v3/rwbase.py:1 <module>
(call)|         1|   0.00322843|   0.00322843|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/nbformat/v3/nbjson.py:1 <module>
(call)|         1|  0.000704288|  0.000704288|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/nbformat/v3/nbpy.py:6 <module>
(call)|         1|  0.000391483|  0.000391483|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/nbformat/v3/convert.py:1 <module>
(call)|         1|    0.0154386|    0.0154386|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/nbformat/v3/__init__.py:2 <module>
(call)|         1|  0.000208378|  0.000208378|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/nbformat/notebooknode.py:1 <module>
(call)|         1|   0.00301361|   0.00301361|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/nbformat/v4/nbbase.py:7 <module>
(call)|         1|   0.00107455|   0.00107455|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/nbformat/v4/rwbase.py:1 <module>
(call)|         1|   0.00399756|   0.00399756|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/nbformat/v4/nbjson.py:1 <module>
(call)|         1|  0.000555277|  0.000555277|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/nbformat/v4/convert.py:1 <module>
(call)|         1|     0.015873|     0.015873|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/nbformat/v4/__init__.py:1 <module>
(call)|         1|  6.38962e-05|  6.38962e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/nbformat/sentinel.py:1 <module>
(call)|         1|  0.000101566|  0.000101566|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/nbformat/reader.py:1 <module>
(call)|         1|   0.00334549|   0.00334549|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/nbformat/validator.py:4 <module>
(call)|         1|  0.000270367|  0.000270367|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/nbformat/converter.py:1 <module>
(call)|         1|     0.104184|     0.104184|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/nbformat/__init__.py:4 <module>
(call)|         1|     0.193473|     0.193473|  0.05%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/io/_renderers.py:1 <module>
(call)|         1|  6.93798e-05|  6.93798e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/io/base_renderers.py:1 <module>
(call)|         1|     0.234862|     0.234862|  0.06%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/io/__init__.py:1 <module>
(call)|         1|  8.34465e-05|  8.34465e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/data/__init__.py:3 <module>
(call)|         1|    0.0133154|    0.0133154|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/_docstring_gen.py:1 <module>
(call)|         1|       4.2337|       4.2337|  1.15%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/__init__.py:27 <module>
(call)|         1|   0.00111079|   0.00111079|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/matplotlylib/mplexporter/utils.py:4 <module>
(call)|         1|  5.79357e-05|  5.79357e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/matplotlylib/mplexporter/_py3k_compat.py:3 <module>
(call)|         1|   0.00794101|   0.00794101|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/matplotlylib/mplexporter/renderers/base.py:1 <module>
(call)|         1|  0.000831127|  0.000831127|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/matplotlylib/mplexporter/exporter.py:6 <module>
(call)|         1|   0.00365424|   0.00365424|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/matplotlylib/mplexporter/renderers/vega_renderer.py:1 <module>
(call)|         1|   0.00023365|   0.00023365|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/matplotlylib/mplexporter/renderers/vincent_renderer.py:1 <module>
(call)|         1|  0.000300407|  0.000300407|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/matplotlylib/mplexporter/renderers/fake_renderer.py:1 <module>
(call)|         1|    0.0234578|    0.0234578|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/matplotlylib/mplexporter/renderers/__init__.py:7 <module>
(call)|         1|    0.0265324|    0.0265324|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/matplotlylib/mplexporter/__init__.py:1 <module>
(call)|         1|   0.00105715|   0.00105715|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/matplotlylib/mpltools.py:6 <module>
(call)|         1|    0.0339746|    0.0339746|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/matplotlylib/renderer.py:8 <module>
(call)|         1|     0.037375|     0.037375|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/matplotlylib/__init__.py:11 <module>
(call)|         1|    0.0192695|    0.0192695|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/__init__.py:1 <module>
(call)|         1|    0.0008564|    0.0008564|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/angularaxis/__init__.py:1 <module>
(call)|         1|     0.006984|     0.006984|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/annotation/__init__.py:1 <module>
(call)|         1|  0.000227928|  0.000227928|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/annotation/font/__init__.py:1 <module>
(call)|         1|  0.000183582|  0.000183582|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/annotation/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000305176|  0.000305176|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/annotation/hoverlabel/font/__init__.py:1 <module>
(call)|         1|   0.00181508|   0.00181508|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/coloraxis/__init__.py:1 <module>
(call)|         1|   0.00615478|   0.00615478|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/coloraxis/colorbar/__init__.py:1 <module>
(call)|         1|   0.00019455|   0.00019455|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/coloraxis/colorbar/tickfont/__init__.py:1 <module>
(call)|         1|   0.00041914|   0.00041914|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/coloraxis/colorbar/tickformatstop/__init__.py:1 <module>
(call)|         1|  0.000194073|  0.000194073|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/coloraxis/colorbar/title/__init__.py:1 <module>
(call)|         1|  0.000200033|  0.000200033|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/coloraxis/colorbar/title/font/__init__.py:1 <module>
(call)|         1|  0.000188589|  0.000188589|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/colorscale/__init__.py:1 <module>
(call)|         1|  0.000223637|  0.000223637|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/font/__init__.py:1 <module>
(call)|         1|   0.00394249|   0.00394249|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/geo/__init__.py:1 <module>
(call)|         1|   0.00013566|   0.00013566|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/geo/center/__init__.py:1 <module>
(call)|         1|   0.00026679|   0.00026679|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/geo/domain/__init__.py:1 <module>
(call)|         1|  0.000433207|  0.000433207|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/geo/lataxis/__init__.py:1 <module>
(call)|         1|  0.000436306|  0.000436306|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/geo/lonaxis/__init__.py:1 <module>
(call)|         1|  0.000279188|  0.000279188|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/geo/projection/__init__.py:1 <module>
(call)|         1|  0.000192165|  0.000192165|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/geo/projection/rotation/__init__.py:1 <module>
(call)|         1|   0.00102115|   0.00102115|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/grid/__init__.py:1 <module>
(call)|         1|  0.000154018|  0.000154018|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/grid/domain/__init__.py:1 <module>
(call)|         1|  0.000315905|  0.000315905|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000202179|  0.000202179|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/hoverlabel/font/__init__.py:1 <module>
(call)|         1|   0.00132203|   0.00132203|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/image/__init__.py:1 <module>
(call)|         1|    0.0015645|    0.0015645|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/legend/__init__.py:1 <module>
(call)|         1|  0.000211239|  0.000211239|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/legend/font/__init__.py:1 <module>
(call)|         1|  0.000209332|  0.000209332|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/legend/title/__init__.py:1 <module>
(call)|         1|   0.00018692|   0.00018692|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/legend/title/font/__init__.py:1 <module>
(call)|         1|  0.000724316|  0.000724316|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/mapbox/__init__.py:1 <module>
(call)|         1|  0.000128269|  0.000128269|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/mapbox/center/__init__.py:1 <module>
(call)|         1|  0.000276804|  0.000276804|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/mapbox/domain/__init__.py:1 <module>
(call)|         1|   0.00174189|   0.00174189|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/mapbox/layer/__init__.py:1 <module>
(call)|         1|  7.00951e-05|  7.00951e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/mapbox/layer/circle/__init__.py:1 <module>
(call)|         1|  7.67708e-05|  7.67708e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/mapbox/layer/fill/__init__.py:1 <module>
(call)|         1|  0.000184774|  0.000184774|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/mapbox/layer/line/__init__.py:1 <module>
(call)|         1|  0.000405788|  0.000405788|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/mapbox/layer/symbol/__init__.py:1 <module>
(call)|         1|  0.000259161|  0.000259161|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/mapbox/layer/symbol/textfont/__init__.py:1 <module>
(call)|         1|  0.000458479|  0.000458479|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/margin/__init__.py:1 <module>
(call)|         1|  0.000333309|  0.000333309|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/modebar/__init__.py:1 <module>
(call)|         1|  0.000803471|  0.000803471|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/polar/__init__.py:1 <module>
(call)|         1|   0.00678587|   0.00678587|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/polar/angularaxis/__init__.py:1 <module>
(call)|         1|  0.000208378|  0.000208378|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/polar/angularaxis/tickfont/__init__.py:1 <module>
(call)|         1|  0.000328541|  0.000328541|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/polar/angularaxis/tickformatstop/__init__.py:1 <module>
(call)|         1|  0.000263453|  0.000263453|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/polar/domain/__init__.py:1 <module>
(call)|         1|   0.00806069|   0.00806069|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/polar/radialaxis/__init__.py:1 <module>
(call)|         1|  0.000205517|  0.000205517|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/polar/radialaxis/tickfont/__init__.py:1 <module>
(call)|         1|  0.000331879|  0.000331879|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/polar/radialaxis/tickformatstop/__init__.py:1 <module>
(call)|         1|  0.000127792|  0.000127792|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/polar/radialaxis/title/__init__.py:1 <module>
(call)|         1|  0.000193834|  0.000193834|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/polar/radialaxis/title/font/__init__.py:1 <module>
(call)|         1|     0.001544|     0.001544|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/radialaxis/__init__.py:1 <module>
(call)|         1|   0.00116515|   0.00116515|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/scene/__init__.py:1 <module>
(call)|         1|   0.00512457|   0.00512457|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/scene/annotation/__init__.py:1 <module>
(call)|         1|  0.000203609|  0.000203609|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/scene/annotation/font/__init__.py:1 <module>
(call)|         1|  0.000278473|  0.000278473|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/scene/annotation/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000208378|  0.000208378|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/scene/annotation/hoverlabel/font/__init__.py:1 <module>
(call)|         1|  0.000187159|  0.000187159|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/scene/aspectratio/__init__.py:1 <module>
(call)|         1|  0.000262022|  0.000262022|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/scene/camera/__init__.py:1 <module>
(call)|         1|  0.000199556|  0.000199556|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/scene/camera/center/__init__.py:1 <module>
(call)|         1|  0.000183821|  0.000183821|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/scene/camera/eye/__init__.py:1 <module>
(call)|         1|  7.82013e-05|  7.82013e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/scene/camera/projection/__init__.py:1 <module>
(call)|         1|  0.000174761|  0.000174761|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/scene/camera/up/__init__.py:1 <module>
(call)|         1|  0.000282764|  0.000282764|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/scene/domain/__init__.py:1 <module>
(call)|         1|    0.0104458|    0.0104458|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/scene/xaxis/__init__.py:1 <module>
(call)|         1|  0.000209332|  0.000209332|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/scene/xaxis/tickfont/__init__.py:1 <module>
(call)|         1|  0.000320673|  0.000320673|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/scene/xaxis/tickformatstop/__init__.py:1 <module>
(call)|         1|   0.00014329|   0.00014329|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/scene/xaxis/title/__init__.py:1 <module>
(call)|         1|  0.000235558|  0.000235558|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/scene/xaxis/title/font/__init__.py:1 <module>
(call)|         1|   0.00982094|   0.00982094|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/scene/yaxis/__init__.py:1 <module>
(call)|         1|  0.000204325|  0.000204325|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/scene/yaxis/tickfont/__init__.py:1 <module>
(call)|         1|  0.000319481|  0.000319481|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/scene/yaxis/tickformatstop/__init__.py:1 <module>
(call)|         1|  0.000222921|  0.000222921|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/scene/yaxis/title/__init__.py:1 <module>
(call)|         1|  0.000231981|  0.000231981|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/scene/yaxis/title/font/__init__.py:1 <module>
(call)|         1|   0.00993538|   0.00993538|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/scene/zaxis/__init__.py:1 <module>
(call)|         1|  0.000193357|  0.000193357|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/scene/zaxis/tickfont/__init__.py:1 <module>
(call)|         1|  0.000317574|  0.000317574|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/scene/zaxis/tickformatstop/__init__.py:1 <module>
(call)|         1|  0.000154257|  0.000154257|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/scene/zaxis/title/__init__.py:1 <module>
(call)|         1|  0.000272751|  0.000272751|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/scene/zaxis/title/font/__init__.py:1 <module>
(call)|         1|   0.00246906|   0.00246906|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/shape/__init__.py:1 <module>
(call)|         1|  0.000199556|  0.000199556|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/shape/line/__init__.py:1 <module>
(call)|         1|   0.00253844|   0.00253844|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/slider/__init__.py:1 <module>
(call)|         1|  0.000409126|  0.000409126|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/slider/currentvalue/__init__.py:1 <module>
(call)|         1|  0.000226259|  0.000226259|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/slider/currentvalue/font/__init__.py:1 <module>
(call)|         1|  0.000187635|  0.000187635|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/slider/font/__init__.py:1 <module>
(call)|         1|  0.000294685|  0.000294685|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/slider/pad/__init__.py:1 <module>
(call)|         1|  0.000579357|  0.000579357|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/slider/step/__init__.py:1 <module>
(call)|         1|  0.000186205|  0.000186205|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/slider/transition/__init__.py:1 <module>
(call)|         1|  0.000493765|  0.000493765|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/ternary/__init__.py:1 <module>
(call)|         1|   0.00493455|   0.00493455|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/ternary/aaxis/__init__.py:1 <module>
(call)|         1|  0.000190973|  0.000190973|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/ternary/aaxis/tickfont/__init__.py:1 <module>
(call)|         1|   0.00037837|   0.00037837|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/ternary/aaxis/tickformatstop/__init__.py:1 <module>
(call)|         1|  0.000127316|  0.000127316|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/ternary/aaxis/title/__init__.py:1 <module>
(call)|         1|  0.000253439|  0.000253439|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/ternary/aaxis/title/font/__init__.py:1 <module>
(call)|         1|   0.00509429|   0.00509429|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/ternary/baxis/__init__.py:1 <module>
(call)|         1|  0.000263929|  0.000263929|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/ternary/baxis/tickfont/__init__.py:1 <module>
(call)|         1|  0.000380039|  0.000380039|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/ternary/baxis/tickformatstop/__init__.py:1 <module>
(call)|         1|   0.00014329|   0.00014329|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/ternary/baxis/title/__init__.py:1 <module>
(call)|         1|  0.000262499|  0.000262499|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/ternary/baxis/title/font/__init__.py:1 <module>
(call)|         1|   0.00538468|   0.00538468|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/ternary/caxis/__init__.py:1 <module>
(call)|         1|  0.000194788|  0.000194788|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/ternary/caxis/tickfont/__init__.py:1 <module>
(call)|         1|  0.000439405|  0.000439405|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/ternary/caxis/tickformatstop/__init__.py:1 <module>
(call)|         1|  0.000139713|  0.000139713|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/ternary/caxis/title/__init__.py:1 <module>
(call)|         1|  0.000227928|  0.000227928|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/ternary/caxis/title/font/__init__.py:1 <module>
(call)|         1|  0.000252008|  0.000252008|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/ternary/domain/__init__.py:1 <module>
(call)|         1|  0.000649691|  0.000649691|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/title/__init__.py:1 <module>
(call)|         1|  0.000200272|  0.000200272|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/title/font/__init__.py:1 <module>
(call)|         1|  0.000224113|  0.000224113|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/title/pad/__init__.py:1 <module>
(call)|         1|   0.00023222|   0.00023222|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/transition/__init__.py:1 <module>
(call)|         1|  0.000130177|  0.000130177|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/uniformtext/__init__.py:1 <module>
(call)|         1|   0.00161815|   0.00161815|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/updatemenu/__init__.py:1 <module>
(call)|         1|  0.000580311|  0.000580311|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/updatemenu/button/__init__.py:1 <module>
(call)|         1|  0.000206947|  0.000206947|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/updatemenu/font/__init__.py:1 <module>
(call)|         1|  0.000263691|  0.000263691|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/updatemenu/pad/__init__.py:1 <module>
(call)|         1|    0.0168664|    0.0168664|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/xaxis/__init__.py:1 <module>
(call)|         1|  0.000915289|  0.000915289|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/xaxis/rangeselector/__init__.py:1 <module>
(call)|         1|  0.000533581|  0.000533581|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/xaxis/rangeselector/button/__init__.py:1 <module>
(call)|         1|  0.000190258|  0.000190258|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/xaxis/rangeselector/font/__init__.py:1 <module>
(call)|         1|  0.000530481|  0.000530481|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/xaxis/rangeslider/__init__.py:1 <module>
(call)|         1|  0.000132084|  0.000132084|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/xaxis/rangeslider/yaxis/__init__.py:1 <module>
(call)|         1|  0.000201464|  0.000201464|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/xaxis/tickfont/__init__.py:1 <module>
(call)|         1|  0.000368118|  0.000368118|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/xaxis/tickformatstop/__init__.py:1 <module>
(call)|         1|   0.00019145|   0.00019145|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/xaxis/title/__init__.py:1 <module>
(call)|         1|  0.000237465|  0.000237465|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/xaxis/title/font/__init__.py:1 <module>
(call)|         1|    0.0164721|    0.0164721|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/yaxis/__init__.py:1 <module>
(call)|         1|  0.000249863|  0.000249863|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/yaxis/tickfont/__init__.py:1 <module>
(call)|         1|  0.000406027|  0.000406027|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/yaxis/tickformatstop/__init__.py:1 <module>
(call)|         1|   0.00020051|   0.00020051|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/yaxis/title/__init__.py:1 <module>
(call)|         1|  0.000204802|  0.000204802|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/yaxis/title/font/__init__.py:1 <module>
(call)|         1|  0.000132322|  0.000132322|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/template/__init__.py:1 <module>
(call)|         1|   0.00695205|   0.00695205|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/layout/template/data/__init__.py:1 <module>
(call)|         1|   0.00637674|   0.00637674|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/barpolar/__init__.py:1 <module>
(call)|         1|  0.000739813|  0.000739813|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/barpolar/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000398397|  0.000398397|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/barpolar/hoverlabel/font/__init__.py:1 <module>
(call)|         1|   0.00129342|   0.00129342|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/barpolar/marker/__init__.py:1 <module>
(call)|         1|   0.00638437|   0.00638437|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/barpolar/marker/colorbar/__init__.py:1 <module>
(call)|         1|  0.000190973|  0.000190973|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/barpolar/marker/colorbar/tickfont/__init__.py:1 <module>
(call)|         1|   0.00031805|   0.00031805|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/barpolar/marker/colorbar/tickformatstop/__init__.py:1 <module>
(call)|         1|   0.00027132|   0.00027132|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/barpolar/marker/colorbar/title/__init__.py:1 <module>
(call)|         1|  0.000191212|  0.000191212|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/barpolar/marker/colorbar/title/font/__init__.py:1 <module>
(call)|         1|   0.00100589|   0.00100589|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/barpolar/marker/line/__init__.py:1 <module>
(call)|         1|  0.000150681|  0.000150681|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/barpolar/selected/__init__.py:1 <module>
(call)|         1|  0.000129461|  0.000129461|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/barpolar/selected/marker/__init__.py:1 <module>
(call)|         1|  7.03335e-05|  7.03335e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/barpolar/selected/textfont/__init__.py:1 <module>
(call)|         1|  0.000124693|  0.000124693|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/barpolar/stream/__init__.py:1 <module>
(call)|         1|  0.000124454|  0.000124454|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/barpolar/unselected/__init__.py:1 <module>
(call)|         1|  0.000125885|  0.000125885|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/barpolar/unselected/marker/__init__.py:1 <module>
(call)|         1|  7.62939e-05|  7.62939e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/barpolar/unselected/textfont/__init__.py:1 <module>
(call)|         1|    0.0135632|    0.0135632|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/bar/__init__.py:1 <module>
(call)|         1|    0.0012753|    0.0012753|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/bar/error_x/__init__.py:1 <module>
(call)|         1|    0.0011487|    0.0011487|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/bar/error_y/__init__.py:1 <module>
(call)|         1|   0.00067687|   0.00067687|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/bar/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000411749|  0.000411749|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/bar/hoverlabel/font/__init__.py:1 <module>
(call)|         1|  0.000422001|  0.000422001|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/bar/insidetextfont/__init__.py:1 <module>
(call)|         1|   0.00128555|   0.00128555|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/bar/marker/__init__.py:1 <module>
(call)|         1|   0.00609279|   0.00609279|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/bar/marker/colorbar/__init__.py:1 <module>
(call)|         1|   0.00019455|   0.00019455|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/bar/marker/colorbar/tickfont/__init__.py:1 <module>
(call)|         1|  0.000325918|  0.000325918|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/bar/marker/colorbar/tickformatstop/__init__.py:1 <module>
(call)|         1|  0.000234842|  0.000234842|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/bar/marker/colorbar/title/__init__.py:1 <module>
(call)|         1|  0.000255346|  0.000255346|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/bar/marker/colorbar/title/font/__init__.py:1 <module>
(call)|         1|   0.00155735|   0.00155735|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/bar/marker/line/__init__.py:1 <module>
(call)|         1|  0.000381708|  0.000381708|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/bar/outsidetextfont/__init__.py:1 <module>
(call)|         1|  0.000186205|  0.000186205|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/bar/selected/__init__.py:1 <module>
(call)|         1|  0.000124693|  0.000124693|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/bar/selected/marker/__init__.py:1 <module>
(call)|         1|  7.00951e-05|  7.00951e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/bar/selected/textfont/__init__.py:1 <module>
(call)|         1|  0.000143051|  0.000143051|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/bar/stream/__init__.py:1 <module>
(call)|         1|  0.000398397|  0.000398397|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/bar/textfont/__init__.py:1 <module>
(call)|         1|  0.000126362|  0.000126362|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/bar/unselected/__init__.py:1 <module>
(call)|         1|  0.000137568|  0.000137568|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/bar/unselected/marker/__init__.py:1 <module>
(call)|         1|  7.65324e-05|  7.65324e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/bar/unselected/textfont/__init__.py:1 <module>
(call)|         1|    0.0038805|    0.0038805|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/carpet/__init__.py:1 <module>
(call)|         1|   0.00931525|   0.00931525|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/carpet/aaxis/__init__.py:1 <module>
(call)|         1|  0.000186205|  0.000186205|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/carpet/aaxis/tickfont/__init__.py:1 <module>
(call)|         1|  0.000300646|  0.000300646|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/carpet/aaxis/tickformatstop/__init__.py:1 <module>
(call)|         1|   0.00019002|   0.00019002|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/carpet/aaxis/title/__init__.py:1 <module>
(call)|         1|   0.00018549|   0.00018549|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/carpet/aaxis/title/font/__init__.py:1 <module>
(call)|         1|   0.00902963|   0.00902963|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/carpet/baxis/__init__.py:1 <module>
(call)|         1|  0.000294685|  0.000294685|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/carpet/baxis/tickfont/__init__.py:1 <module>
(call)|         1|  0.000316858|  0.000316858|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/carpet/baxis/tickformatstop/__init__.py:1 <module>
(call)|         1|  0.000197172|  0.000197172|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/carpet/baxis/title/__init__.py:1 <module>
(call)|         1|  0.000173807|  0.000173807|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/carpet/baxis/title/font/__init__.py:1 <module>
(call)|         1|  0.000174046|  0.000174046|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/carpet/font/__init__.py:1 <module>
(call)|         1|   0.00014782|   0.00014782|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/carpet/stream/__init__.py:1 <module>
(call)|         1|    0.0067246|    0.0067246|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/choropleth/__init__.py:1 <module>
(call)|         1|    0.0060215|    0.0060215|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/choropleth/colorbar/__init__.py:1 <module>
(call)|         1|  0.000189543|  0.000189543|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/choropleth/colorbar/tickfont/__init__.py:1 <module>
(call)|         1|  0.000301123|  0.000301123|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/choropleth/colorbar/tickformatstop/__init__.py:1 <module>
(call)|         1|   0.00018239|   0.00018239|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/choropleth/colorbar/title/__init__.py:1 <module>
(call)|         1|  0.000201464|  0.000201464|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/choropleth/colorbar/title/font/__init__.py:1 <module>
(call)|         1|  0.000653982|  0.000653982|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/choropleth/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000413895|  0.000413895|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/choropleth/hoverlabel/font/__init__.py:1 <module>
(call)|         1|  0.000186443|  0.000186443|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/choropleth/marker/__init__.py:1 <module>
(call)|         1|  0.000317574|  0.000317574|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/choropleth/marker/line/__init__.py:1 <module>
(call)|         1|  9.01222e-05|  9.01222e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/choropleth/selected/__init__.py:1 <module>
(call)|         1|  6.77109e-05|  6.77109e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/choropleth/selected/marker/__init__.py:1 <module>
(call)|         1|  0.000122547|  0.000122547|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/choropleth/stream/__init__.py:1 <module>
(call)|         1|  8.46386e-05|  8.46386e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/choropleth/unselected/__init__.py:1 <module>
(call)|         1|   7.7486e-05|   7.7486e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/choropleth/unselected/marker/__init__.py:1 <module>
(call)|         1|   0.00808167|   0.00808167|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/contourcarpet/__init__.py:1 <module>
(call)|         1|    0.0063498|    0.0063498|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/contourcarpet/colorbar/__init__.py:1 <module>
(call)|         1|  0.000236988|  0.000236988|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/contourcarpet/colorbar/tickfont/__init__.py:1 <module>
(call)|         1|  0.000313044|  0.000313044|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/contourcarpet/colorbar/tickformatstop/__init__.py:1 <module>
(call)|         1|  0.000200748|  0.000200748|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/contourcarpet/colorbar/title/__init__.py:1 <module>
(call)|         1|  0.000185728|  0.000185728|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/contourcarpet/colorbar/title/font/__init__.py:1 <module>
(call)|         1|  0.000858545|  0.000858545|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/contourcarpet/contours/__init__.py:1 <module>
(call)|         1|  0.000192642|  0.000192642|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/contourcarpet/contours/labelfont/__init__.py:1 <module>
(call)|         1|  0.000297308|  0.000297308|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/contourcarpet/line/__init__.py:1 <module>
(call)|         1|  0.000141382|  0.000141382|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/contourcarpet/stream/__init__.py:1 <module>
(call)|         1|    0.0109241|    0.0109241|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/contour/__init__.py:1 <module>
(call)|         1|   0.00601315|   0.00601315|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/contour/colorbar/__init__.py:1 <module>
(call)|         1|  0.000191212|  0.000191212|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/contour/colorbar/tickfont/__init__.py:1 <module>
(call)|         1|  0.000375271|  0.000375271|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/contour/colorbar/tickformatstop/__init__.py:1 <module>
(call)|         1|  0.000232697|  0.000232697|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/contour/colorbar/title/__init__.py:1 <module>
(call)|         1|   0.00018549|   0.00018549|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/contour/colorbar/title/font/__init__.py:1 <module>
(call)|         1|  0.000920057|  0.000920057|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/contour/contours/__init__.py:1 <module>
(call)|         1|   0.00018096|   0.00018096|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/contour/contours/labelfont/__init__.py:1 <module>
(call)|         1|  0.000715017|  0.000715017|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/contour/hoverlabel/__init__.py:1 <module>
(call)|         1|   0.00108218|   0.00108218|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/contour/hoverlabel/font/__init__.py:1 <module>
(call)|         1|  0.000259638|  0.000259638|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/contour/line/__init__.py:1 <module>
(call)|         1|  0.000125408|  0.000125408|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/contour/stream/__init__.py:1 <module>
(call)|         1|   0.00639129|   0.00639129|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/heatmapgl/__init__.py:1 <module>
(call)|         1|   0.00636554|   0.00636554|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/heatmapgl/colorbar/__init__.py:1 <module>
(call)|         1|  0.000219584|  0.000219584|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/heatmapgl/colorbar/tickfont/__init__.py:1 <module>
(call)|         1|  0.000339746|  0.000339746|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/heatmapgl/colorbar/tickformatstop/__init__.py:1 <module>
(call)|         1|  0.000202894|  0.000202894|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/heatmapgl/colorbar/title/__init__.py:1 <module>
(call)|         1|  0.000188351|  0.000188351|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/heatmapgl/colorbar/title/font/__init__.py:1 <module>
(call)|         1|  0.000685453|  0.000685453|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/heatmapgl/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000417471|  0.000417471|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/heatmapgl/hoverlabel/font/__init__.py:1 <module>
(call)|         1|  0.000127792|  0.000127792|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/heatmapgl/stream/__init__.py:1 <module>
(call)|         1|   0.00964618|   0.00964618|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/heatmap/__init__.py:1 <module>
(call)|         1|    0.0058434|    0.0058434|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/heatmap/colorbar/__init__.py:1 <module>
(call)|         1|  0.000197411|  0.000197411|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/heatmap/colorbar/tickfont/__init__.py:1 <module>
(call)|         1|  0.000306129|  0.000306129|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/heatmap/colorbar/tickformatstop/__init__.py:1 <module>
(call)|         1|  0.000213385|  0.000213385|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/heatmap/colorbar/title/__init__.py:1 <module>
(call)|         1|  0.000177145|  0.000177145|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/heatmap/colorbar/title/font/__init__.py:1 <module>
(call)|         1|  0.000700474|  0.000700474|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/heatmap/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000384808|  0.000384808|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/heatmap/hoverlabel/font/__init__.py:1 <module>
(call)|         1|  0.000123739|  0.000123739|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/heatmap/stream/__init__.py:1 <module>
(call)|         1|    0.0102558|    0.0102558|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram2dcontour/__init__.py:1 <module>
(call)|         1|   0.00620389|   0.00620389|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram2dcontour/colorbar/__init__.py:1 <module>
(call)|         1|  0.000173569|  0.000173569|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram2dcontour/colorbar/tickfont/__init__.py:1 <module>
(call)|         1|  0.000332832|  0.000332832|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram2dcontour/colorbar/tickformatstop/__init__.py:1 <module>
(call)|         1|   0.00022912|   0.00022912|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram2dcontour/colorbar/title/__init__.py:1 <module>
(call)|         1|  0.000221729|  0.000221729|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram2dcontour/colorbar/title/font/__init__.py:1 <module>
(call)|         1|   0.00085187|   0.00085187|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram2dcontour/contours/__init__.py:1 <module>
(call)|         1|  0.000208616|  0.000208616|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram2dcontour/contours/labelfont/__init__.py:1 <module>
(call)|         1|  0.000639677|  0.000639677|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram2dcontour/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000402927|  0.000402927|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram2dcontour/hoverlabel/font/__init__.py:1 <module>
(call)|         1|  0.000279188|  0.000279188|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram2dcontour/line/__init__.py:1 <module>
(call)|         1|   0.00014782|   0.00014782|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram2dcontour/marker/__init__.py:1 <module>
(call)|         1|    0.0001266|    0.0001266|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram2dcontour/stream/__init__.py:1 <module>
(call)|         1|  0.000180244|  0.000180244|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram2dcontour/xbins/__init__.py:1 <module>
(call)|         1|  0.000204086|  0.000204086|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram2dcontour/ybins/__init__.py:1 <module>
(call)|         1|    0.0105968|    0.0105968|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram2d/__init__.py:1 <module>
(call)|         1|   0.00620627|   0.00620627|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram2d/colorbar/__init__.py:1 <module>
(call)|         1|  0.000782013|  0.000782013|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram2d/colorbar/tickfont/__init__.py:1 <module>
(call)|         1|  0.000306129|  0.000306129|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram2d/colorbar/tickformatstop/__init__.py:1 <module>
(call)|         1|  0.000184298|  0.000184298|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram2d/colorbar/title/__init__.py:1 <module>
(call)|         1|   0.00019908|   0.00019908|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram2d/colorbar/title/font/__init__.py:1 <module>
(call)|         1|  0.000671148|  0.000671148|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram2d/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000383854|  0.000383854|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram2d/hoverlabel/font/__init__.py:1 <module>
(call)|         1|  0.000119925|  0.000119925|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram2d/marker/__init__.py:1 <module>
(call)|         1|  0.000154734|  0.000154734|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram2d/stream/__init__.py:1 <module>
(call)|         1|  0.000186682|  0.000186682|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram2d/xbins/__init__.py:1 <module>
(call)|         1|  0.000186682|  0.000186682|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram2d/ybins/__init__.py:1 <module>
(call)|         1|   0.00830221|   0.00830221|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram/__init__.py:1 <module>
(call)|         1|  0.000188351|  0.000188351|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram/cumulative/__init__.py:1 <module>
(call)|         1|   0.00208735|   0.00208735|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram/error_x/__init__.py:1 <module>
(call)|         1|    0.0011878|    0.0011878|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram/error_y/__init__.py:1 <module>
(call)|         1|  0.000673294|  0.000673294|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000403404|  0.000403404|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram/hoverlabel/font/__init__.py:1 <module>
(call)|         1|   0.00128365|   0.00128365|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram/marker/__init__.py:1 <module>
(call)|         1|   0.00613737|   0.00613737|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram/marker/colorbar/__init__.py:1 <module>
(call)|         1|   0.00021553|   0.00021553|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram/marker/colorbar/tickfont/__init__.py:1 <module>
(call)|         1|  0.000333309|  0.000333309|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram/marker/colorbar/tickformatstop/__init__.py:1 <module>
(call)|         1|  0.000206709|  0.000206709|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram/marker/colorbar/title/__init__.py:1 <module>
(call)|         1|  0.000236034|  0.000236034|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram/marker/colorbar/title/font/__init__.py:1 <module>
(call)|         1|   0.00107503|   0.00107503|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram/marker/line/__init__.py:1 <module>
(call)|         1|  0.000175476|  0.000175476|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram/selected/__init__.py:1 <module>
(call)|         1|  0.000131607|  0.000131607|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram/selected/marker/__init__.py:1 <module>
(call)|         1|  8.05855e-05|  8.05855e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram/selected/textfont/__init__.py:1 <module>
(call)|         1|  0.000131369|  0.000131369|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram/stream/__init__.py:1 <module>
(call)|         1|  0.000129938|  0.000129938|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram/unselected/__init__.py:1 <module>
(call)|         1|  0.000146627|  0.000146627|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram/unselected/marker/__init__.py:1 <module>
(call)|         1|  7.00951e-05|  7.00951e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram/unselected/textfont/__init__.py:1 <module>
(call)|         1|  0.000237703|  0.000237703|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram/xbins/__init__.py:1 <module>
(call)|         1|  0.000282288|  0.000282288|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/histogram/ybins/__init__.py:1 <module>
(call)|         1|    0.0127378|    0.0127378|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/mesh3d/__init__.py:1 <module>
(call)|         1|   0.00603604|   0.00603604|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/mesh3d/colorbar/__init__.py:1 <module>
(call)|         1|   0.00019145|   0.00019145|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/mesh3d/colorbar/tickfont/__init__.py:1 <module>
(call)|         1|  0.000401497|  0.000401497|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/mesh3d/colorbar/tickformatstop/__init__.py:1 <module>
(call)|         1|   0.00018096|   0.00018096|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/mesh3d/colorbar/title/__init__.py:1 <module>
(call)|         1|  0.000179291|  0.000179291|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/mesh3d/colorbar/title/font/__init__.py:1 <module>
(call)|         1|  0.000196934|  0.000196934|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/mesh3d/contour/__init__.py:1 <module>
(call)|         1|  0.000626802|  0.000626802|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/mesh3d/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000413656|  0.000413656|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/mesh3d/hoverlabel/font/__init__.py:1 <module>
(call)|         1|  0.000487566|  0.000487566|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/mesh3d/lighting/__init__.py:1 <module>
(call)|         1|  0.000187874|  0.000187874|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/mesh3d/lightposition/__init__.py:1 <module>
(call)|         1|   0.00014925|   0.00014925|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/mesh3d/stream/__init__.py:1 <module>
(call)|         1|   0.00196671|   0.00196671|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/parcoords/__init__.py:1 <module>
(call)|         1|   0.00115442|   0.00115442|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/parcoords/dimension/__init__.py:1 <module>
(call)|         1|  0.000230551|  0.000230551|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/parcoords/domain/__init__.py:1 <module>
(call)|         1|   0.00018096|   0.00018096|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/parcoords/labelfont/__init__.py:1 <module>
(call)|         1|   0.00102091|   0.00102091|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/parcoords/line/__init__.py:1 <module>
(call)|         1|   0.00618172|   0.00618172|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/parcoords/line/colorbar/__init__.py:1 <module>
(call)|         1|  0.000207901|  0.000207901|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/parcoords/line/colorbar/tickfont/__init__.py:1 <module>
(call)|         1|  0.000302553|  0.000302553|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/parcoords/line/colorbar/tickformatstop/__init__.py:1 <module>
(call)|         1|  0.000244379|  0.000244379|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/parcoords/line/colorbar/title/__init__.py:1 <module>
(call)|         1|  0.000182629|  0.000182629|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/parcoords/line/colorbar/title/font/__init__.py:1 <module>
(call)|         1|  0.000195742|  0.000195742|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/parcoords/rangefont/__init__.py:1 <module>
(call)|         1|  0.000132084|  0.000132084|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/parcoords/stream/__init__.py:1 <module>
(call)|         1|  0.000279427|  0.000279427|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/parcoords/tickfont/__init__.py:1 <module>
(call)|         1|   0.00809312|   0.00809312|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/pie/__init__.py:1 <module>
(call)|         1|  0.000284433|  0.000284433|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/pie/domain/__init__.py:1 <module>
(call)|         1|  0.000636816|  0.000636816|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/pie/hoverlabel/__init__.py:1 <module>
(call)|         1|   0.00041008|   0.00041008|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/pie/hoverlabel/font/__init__.py:1 <module>
(call)|         1|  0.000424147|  0.000424147|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/pie/insidetextfont/__init__.py:1 <module>
(call)|         1|  0.000195026|  0.000195026|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/pie/marker/__init__.py:1 <module>
(call)|         1|  0.000314236|  0.000314236|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/pie/marker/line/__init__.py:1 <module>
(call)|         1|   0.00125599|   0.00125599|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/pie/outsidetextfont/__init__.py:1 <module>
(call)|         1|  0.000138283|  0.000138283|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/pie/stream/__init__.py:1 <module>
(call)|         1|  0.000432014|  0.000432014|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/pie/textfont/__init__.py:1 <module>
(call)|         1|  0.000269413|  0.000269413|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/pie/title/__init__.py:1 <module>
(call)|         1|  0.000408411|  0.000408411|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/pie/title/font/__init__.py:1 <module>
(call)|         1|   0.00812674|   0.00812674|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter3d/__init__.py:1 <module>
(call)|         1|   0.00141859|   0.00141859|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter3d/error_x/__init__.py:1 <module>
(call)|         1|   0.00137329|   0.00137329|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter3d/error_y/__init__.py:1 <module>
(call)|         1|   0.00121784|   0.00121784|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter3d/error_z/__init__.py:1 <module>
(call)|         1|  0.000731945|  0.000731945|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter3d/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000514507|  0.000514507|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter3d/hoverlabel/font/__init__.py:1 <module>
(call)|         1|   0.00127697|   0.00127697|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter3d/line/__init__.py:1 <module>
(call)|         1|   0.00667596|   0.00667596|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter3d/line/colorbar/__init__.py:1 <module>
(call)|         1|  0.000226974|  0.000226974|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter3d/line/colorbar/tickfont/__init__.py:1 <module>
(call)|         1|  0.000342131|  0.000342131|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter3d/line/colorbar/tickformatstop/__init__.py:1 <module>
(call)|         1|  0.000212431|  0.000212431|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter3d/line/colorbar/title/__init__.py:1 <module>
(call)|         1|  0.000223637|  0.000223637|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter3d/line/colorbar/title/font/__init__.py:1 <module>
(call)|         1|   0.00221992|   0.00221992|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter3d/marker/__init__.py:1 <module>
(call)|         1|   0.00740147|   0.00740147|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter3d/marker/colorbar/__init__.py:1 <module>
(call)|         1|   0.00019598|   0.00019598|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter3d/marker/colorbar/tickfont/__init__.py:1 <module>
(call)|         1|  0.000324249|  0.000324249|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter3d/marker/colorbar/tickformatstop/__init__.py:1 <module>
(call)|         1|  0.000198603|  0.000198603|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter3d/marker/colorbar/title/__init__.py:1 <module>
(call)|         1|  0.000206947|  0.000206947|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter3d/marker/colorbar/title/font/__init__.py:1 <module>
(call)|         1|  0.000807285|  0.000807285|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter3d/marker/line/__init__.py:1 <module>
(call)|         1|  0.000232935|  0.000232935|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter3d/projection/__init__.py:1 <module>
(call)|         1|  0.000403166|  0.000403166|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter3d/projection/x/__init__.py:1 <module>
(call)|         1|  0.000184298|  0.000184298|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter3d/projection/y/__init__.py:1 <module>
(call)|         1|  0.000185013|  0.000185013|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter3d/projection/z/__init__.py:1 <module>
(call)|         1|  0.000183105|  0.000183105|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter3d/stream/__init__.py:1 <module>
(call)|         1|  0.000387907|  0.000387907|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter3d/textfont/__init__.py:1 <module>
(call)|         1|   0.00712156|   0.00712156|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattercarpet/__init__.py:1 <module>
(call)|         1|  0.000784636|  0.000784636|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattercarpet/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000379324|  0.000379324|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattercarpet/hoverlabel/font/__init__.py:1 <module>
(call)|         1|  0.000414371|  0.000414371|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattercarpet/line/__init__.py:1 <module>
(call)|         1|   0.00320768|   0.00320768|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattercarpet/marker/__init__.py:1 <module>
(call)|         1|   0.00613809|   0.00613809|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattercarpet/marker/colorbar/__init__.py:1 <module>
(call)|         1|  0.000209808|  0.000209808|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattercarpet/marker/colorbar/tickfont/__init__.py:1 <module>
(call)|         1|  0.000352144|  0.000352144|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattercarpet/marker/colorbar/tickformatstop/__init__.py:1 <module>
(call)|         1|  0.000221968|  0.000221968|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattercarpet/marker/colorbar/title/__init__.py:1 <module>
(call)|         1|  0.000256062|  0.000256062|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattercarpet/marker/colorbar/title/font/__init__.py:1 <module>
(call)|         1|  0.000286579|  0.000286579|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattercarpet/marker/gradient/__init__.py:1 <module>
(call)|         1|  0.000975847|  0.000975847|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattercarpet/marker/line/__init__.py:1 <module>
(call)|         1|  0.000132322|  0.000132322|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattercarpet/selected/__init__.py:1 <module>
(call)|         1|  0.000192404|  0.000192404|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattercarpet/selected/marker/__init__.py:1 <module>
(call)|         1|  7.41482e-05|  7.41482e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattercarpet/selected/textfont/__init__.py:1 <module>
(call)|         1|   0.00014472|   0.00014472|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattercarpet/stream/__init__.py:1 <module>
(call)|         1|  0.000453949|  0.000453949|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattercarpet/textfont/__init__.py:1 <module>
(call)|         1|  0.000196695|  0.000196695|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattercarpet/unselected/__init__.py:1 <module>
(call)|         1|  0.000196218|  0.000196218|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattercarpet/unselected/marker/__init__.py:1 <module>
(call)|         1|   7.1764e-05|   7.1764e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattercarpet/unselected/textfont/__init__.py:1 <module>
(call)|         1|   0.00762486|   0.00762486|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergeo/__init__.py:1 <module>
(call)|         1|  0.000756502|  0.000756502|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergeo/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000419617|  0.000419617|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergeo/hoverlabel/font/__init__.py:1 <module>
(call)|         1|  0.000208378|  0.000208378|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergeo/line/__init__.py:1 <module>
(call)|         1|   0.00285721|   0.00285721|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergeo/marker/__init__.py:1 <module>
(call)|         1|    0.0068984|    0.0068984|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergeo/marker/colorbar/__init__.py:1 <module>
(call)|         1|  0.000217676|  0.000217676|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergeo/marker/colorbar/tickfont/__init__.py:1 <module>
(call)|         1|  0.000347376|  0.000347376|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergeo/marker/colorbar/tickformatstop/__init__.py:1 <module>
(call)|         1|   0.00019145|   0.00019145|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergeo/marker/colorbar/title/__init__.py:1 <module>
(call)|         1|  0.000257015|  0.000257015|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergeo/marker/colorbar/title/font/__init__.py:1 <module>
(call)|         1|  0.000282526|  0.000282526|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergeo/marker/gradient/__init__.py:1 <module>
(call)|         1|  0.000937939|  0.000937939|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergeo/marker/line/__init__.py:1 <module>
(call)|         1|  0.000128984|  0.000128984|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergeo/selected/__init__.py:1 <module>
(call)|         1|  0.000193119|  0.000193119|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergeo/selected/marker/__init__.py:1 <module>
(call)|         1|  7.67708e-05|  7.67708e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergeo/selected/textfont/__init__.py:1 <module>
(call)|         1|  0.000186682|  0.000186682|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergeo/stream/__init__.py:1 <module>
(call)|         1|  0.000381231|  0.000381231|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergeo/textfont/__init__.py:1 <module>
(call)|         1|  0.000125885|  0.000125885|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergeo/unselected/__init__.py:1 <module>
(call)|         1|  0.000186205|  0.000186205|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergeo/unselected/marker/__init__.py:1 <module>
(call)|         1|  7.22408e-05|  7.22408e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergeo/unselected/textfont/__init__.py:1 <module>
(call)|         1|   0.00948644|   0.00948644|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergl/__init__.py:1 <module>
(call)|         1|   0.00122452|   0.00122452|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergl/error_x/__init__.py:1 <module>
(call)|         1|   0.00117135|   0.00117135|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergl/error_y/__init__.py:1 <module>
(call)|         1|  0.000664949|  0.000664949|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergl/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000442266|  0.000442266|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergl/hoverlabel/font/__init__.py:1 <module>
(call)|         1|  0.000255585|  0.000255585|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergl/line/__init__.py:1 <module>
(call)|         1|   0.00261235|   0.00261235|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergl/marker/__init__.py:1 <module>
(call)|         1|   0.00600266|   0.00600266|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergl/marker/colorbar/__init__.py:1 <module>
(call)|         1|  0.000244617|  0.000244617|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergl/marker/colorbar/tickfont/__init__.py:1 <module>
(call)|         1|  0.000311136|  0.000311136|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergl/marker/colorbar/tickformatstop/__init__.py:1 <module>
(call)|         1|  0.000199795|  0.000199795|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergl/marker/colorbar/title/__init__.py:1 <module>
(call)|         1|  0.000210524|  0.000210524|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergl/marker/colorbar/title/font/__init__.py:1 <module>
(call)|         1|  0.000933886|  0.000933886|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergl/marker/line/__init__.py:1 <module>
(call)|         1|  0.000154257|  0.000154257|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergl/selected/__init__.py:1 <module>
(call)|         1|  0.000191927|  0.000191927|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergl/selected/marker/__init__.py:1 <module>
(call)|         1|  8.41618e-05|  8.41618e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergl/selected/textfont/__init__.py:1 <module>
(call)|         1|  0.000134945|  0.000134945|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergl/stream/__init__.py:1 <module>
(call)|         1|  0.000377893|  0.000377893|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergl/textfont/__init__.py:1 <module>
(call)|         1|  0.000191689|  0.000191689|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergl/unselected/__init__.py:1 <module>
(call)|         1|  0.000186443|  0.000186443|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergl/unselected/marker/__init__.py:1 <module>
(call)|         1|  0.000122309|  0.000122309|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattergl/unselected/textfont/__init__.py:1 <module>
(call)|         1|   0.00607848|   0.00607848|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattermapbox/__init__.py:1 <module>
(call)|         1|  0.000687599|  0.000687599|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattermapbox/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000366688|  0.000366688|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattermapbox/hoverlabel/font/__init__.py:1 <module>
(call)|         1|  0.000136614|  0.000136614|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattermapbox/line/__init__.py:1 <module>
(call)|         1|   0.00216103|   0.00216103|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattermapbox/marker/__init__.py:1 <module>
(call)|         1|   0.00672507|   0.00672507|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattermapbox/marker/colorbar/__init__.py:1 <module>
(call)|         1|  0.000233173|  0.000233173|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattermapbox/marker/colorbar/tickfont/__init__.py:1 <module>
(call)|         1|  0.000312567|  0.000312567|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattermapbox/marker/colorbar/tickformatstop/__init__.py:1 <module>
(call)|         1|  0.000226259|  0.000226259|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattermapbox/marker/colorbar/title/__init__.py:1 <module>
(call)|         1|  0.000276089|  0.000276089|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattermapbox/marker/colorbar/title/font/__init__.py:1 <module>
(call)|         1|  9.67979e-05|  9.67979e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattermapbox/selected/__init__.py:1 <module>
(call)|         1|  0.000302076|  0.000302076|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattermapbox/selected/marker/__init__.py:1 <module>
(call)|         1|  0.000127316|  0.000127316|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattermapbox/stream/__init__.py:1 <module>
(call)|         1|  0.000217199|  0.000217199|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattermapbox/textfont/__init__.py:1 <module>
(call)|         1|  0.000101328|  0.000101328|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattermapbox/unselected/__init__.py:1 <module>
(call)|         1|  0.000185251|  0.000185251|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scattermapbox/unselected/marker/__init__.py:1 <module>
(call)|         1|   0.00753379|   0.00753379|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterpolargl/__init__.py:1 <module>
(call)|         1|  0.000650883|  0.000650883|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterpolargl/hoverlabel/__init__.py:1 <module>
(call)|         1|   0.00044179|   0.00044179|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterpolargl/hoverlabel/font/__init__.py:1 <module>
(call)|         1|  0.000366926|  0.000366926|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterpolargl/line/__init__.py:1 <module>
(call)|         1|   0.00274086|   0.00274086|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterpolargl/marker/__init__.py:1 <module>
(call)|         1|   0.00619531|   0.00619531|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterpolargl/marker/colorbar/__init__.py:1 <module>
(call)|         1|  0.000197649|  0.000197649|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterpolargl/marker/colorbar/tickfont/__init__.py:1 <module>
(call)|         1|  0.000298262|  0.000298262|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterpolargl/marker/colorbar/tickformatstop/__init__.py:1 <module>
(call)|         1|  0.000185966|  0.000185966|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterpolargl/marker/colorbar/title/__init__.py:1 <module>
(call)|         1|  0.000223875|  0.000223875|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterpolargl/marker/colorbar/title/font/__init__.py:1 <module>
(call)|         1|   0.00108838|   0.00108838|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterpolargl/marker/line/__init__.py:1 <module>
(call)|         1|  0.000118256|  0.000118256|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterpolargl/selected/__init__.py:1 <module>
(call)|         1|  0.000185013|  0.000185013|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterpolargl/selected/marker/__init__.py:1 <module>
(call)|         1|  7.60555e-05|  7.60555e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterpolargl/selected/textfont/__init__.py:1 <module>
(call)|         1|  0.000148058|  0.000148058|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterpolargl/stream/__init__.py:1 <module>
(call)|         1|   0.00042367|   0.00042367|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterpolargl/textfont/__init__.py:1 <module>
(call)|         1|   0.00012517|   0.00012517|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterpolargl/unselected/__init__.py:1 <module>
(call)|         1|  0.000186205|  0.000186205|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterpolargl/unselected/marker/__init__.py:1 <module>
(call)|         1|  6.96182e-05|  6.96182e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterpolargl/unselected/textfont/__init__.py:1 <module>
(call)|         1|   0.00818872|   0.00818872|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterpolar/__init__.py:1 <module>
(call)|         1|   0.00144577|   0.00144577|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterpolar/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000419378|  0.000419378|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterpolar/hoverlabel/font/__init__.py:1 <module>
(call)|         1|  0.000439882|  0.000439882|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterpolar/line/__init__.py:1 <module>
(call)|         1|   0.00294304|   0.00294304|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterpolar/marker/__init__.py:1 <module>
(call)|         1|   0.00605655|   0.00605655|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterpolar/marker/colorbar/__init__.py:1 <module>
(call)|         1|   0.00022459|   0.00022459|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterpolar/marker/colorbar/tickfont/__init__.py:1 <module>
(call)|         1|   0.00119472|   0.00119472|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterpolar/marker/colorbar/tickformatstop/__init__.py:1 <module>
(call)|         1|  0.000219822|  0.000219822|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterpolar/marker/colorbar/title/__init__.py:1 <module>
(call)|         1|  0.000290155|  0.000290155|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterpolar/marker/colorbar/title/font/__init__.py:1 <module>
(call)|         1|  0.000277758|  0.000277758|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterpolar/marker/gradient/__init__.py:1 <module>
(call)|         1|  0.000962019|  0.000962019|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterpolar/marker/line/__init__.py:1 <module>
(call)|         1|  0.000156164|  0.000156164|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterpolar/selected/__init__.py:1 <module>
(call)|         1|    0.0002563|    0.0002563|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterpolar/selected/marker/__init__.py:1 <module>
(call)|         1|  9.70364e-05|  9.70364e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterpolar/selected/textfont/__init__.py:1 <module>
(call)|         1|  0.000161886|  0.000161886|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterpolar/stream/__init__.py:1 <module>
(call)|         1|  0.000388384|  0.000388384|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterpolar/textfont/__init__.py:1 <module>
(call)|         1|  0.000133276|  0.000133276|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterpolar/unselected/__init__.py:1 <module>
(call)|         1|  0.000202417|  0.000202417|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterpolar/unselected/marker/__init__.py:1 <module>
(call)|         1|   0.00010705|   0.00010705|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterpolar/unselected/textfont/__init__.py:1 <module>
(call)|         1|    0.0118403|    0.0118403|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter/__init__.py:1 <module>
(call)|         1|   0.00124311|   0.00124311|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter/error_x/__init__.py:1 <module>
(call)|         1|   0.00132227|   0.00132227|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter/error_y/__init__.py:1 <module>
(call)|         1|  0.000674486|  0.000674486|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000394821|  0.000394821|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter/hoverlabel/font/__init__.py:1 <module>
(call)|         1|  0.000446081|  0.000446081|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter/line/__init__.py:1 <module>
(call)|         1|   0.00302982|   0.00302982|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter/marker/__init__.py:1 <module>
(call)|         1|   0.00664902|   0.00664902|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter/marker/colorbar/__init__.py:1 <module>
(call)|         1|  0.000189543|  0.000189543|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter/marker/colorbar/tickfont/__init__.py:1 <module>
(call)|         1|  0.000335217|  0.000335217|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter/marker/colorbar/tickformatstop/__init__.py:1 <module>
(call)|         1|  0.000181198|  0.000181198|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter/marker/colorbar/title/__init__.py:1 <module>
(call)|         1|  0.000272036|  0.000272036|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter/marker/colorbar/title/font/__init__.py:1 <module>
(call)|         1|   0.00025034|   0.00025034|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter/marker/gradient/__init__.py:1 <module>
(call)|         1|  0.000933886|  0.000933886|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter/marker/line/__init__.py:1 <module>
(call)|         1|   0.00014925|   0.00014925|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter/selected/__init__.py:1 <module>
(call)|         1|  0.000197887|  0.000197887|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter/selected/marker/__init__.py:1 <module>
(call)|         1|  7.22408e-05|  7.22408e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter/selected/textfont/__init__.py:1 <module>
(call)|         1|  0.000193834|  0.000193834|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter/stream/__init__.py:1 <module>
(call)|         1|  0.000386477|  0.000386477|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter/textfont/__init__.py:1 <module>
(call)|         1|  0.000151157|  0.000151157|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter/unselected/__init__.py:1 <module>
(call)|         1|  0.000178814|  0.000178814|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter/unselected/marker/__init__.py:1 <module>
(call)|         1|  6.96182e-05|  6.96182e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatter/unselected/textfont/__init__.py:1 <module>
(call)|         1|   0.00828433|   0.00828433|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterternary/__init__.py:1 <module>
(call)|         1|  0.000824213|  0.000824213|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterternary/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000407934|  0.000407934|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterternary/hoverlabel/font/__init__.py:1 <module>
(call)|         1|  0.000375509|  0.000375509|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterternary/line/__init__.py:1 <module>
(call)|         1|   0.00290489|   0.00290489|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterternary/marker/__init__.py:1 <module>
(call)|         1|    0.0066998|    0.0066998|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterternary/marker/colorbar/__init__.py:1 <module>
(call)|         1|  0.000198603|  0.000198603|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterternary/marker/colorbar/tickfont/__init__.py:1 <module>
(call)|         1|  0.000369549|  0.000369549|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterternary/marker/colorbar/tickformatstop/__init__.py:1 <module>
(call)|         1|  0.000212193|  0.000212193|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterternary/marker/colorbar/title/__init__.py:1 <module>
(call)|         1|   0.00017786|   0.00017786|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterternary/marker/colorbar/title/font/__init__.py:1 <module>
(call)|         1|  0.000249624|  0.000249624|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterternary/marker/gradient/__init__.py:1 <module>
(call)|         1|    0.0010097|    0.0010097|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterternary/marker/line/__init__.py:1 <module>
(call)|         1|   0.00012064|   0.00012064|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterternary/selected/__init__.py:1 <module>
(call)|         1|  0.000212193|  0.000212193|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterternary/selected/marker/__init__.py:1 <module>
(call)|         1|  7.77245e-05|  7.77245e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterternary/selected/textfont/__init__.py:1 <module>
(call)|         1|  0.000170231|  0.000170231|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterternary/stream/__init__.py:1 <module>
(call)|         1|  0.000407696|  0.000407696|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterternary/textfont/__init__.py:1 <module>
(call)|         1|  0.000148296|  0.000148296|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterternary/unselected/__init__.py:1 <module>
(call)|         1|  0.000198841|  0.000198841|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterternary/unselected/marker/__init__.py:1 <module>
(call)|         1|  8.13007e-05|  8.13007e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/scatterternary/unselected/textfont/__init__.py:1 <module>
(call)|         1|    0.0100439|    0.0100439|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/surface/__init__.py:1 <module>
(call)|         1|   0.00617313|   0.00617313|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/surface/colorbar/__init__.py:1 <module>
(call)|         1|  0.000170469|  0.000170469|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/surface/colorbar/tickfont/__init__.py:1 <module>
(call)|         1|  0.000436544|  0.000436544|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/surface/colorbar/tickformatstop/__init__.py:1 <module>
(call)|         1|  0.000330925|  0.000330925|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/surface/colorbar/title/__init__.py:1 <module>
(call)|         1|  0.000184298|  0.000184298|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/surface/colorbar/title/font/__init__.py:1 <module>
(call)|         1|  0.000184774|  0.000184774|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/surface/contours/__init__.py:1 <module>
(call)|         1|  0.000786304|  0.000786304|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/surface/contours/x/__init__.py:1 <module>
(call)|         1|   0.00019455|   0.00019455|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/surface/contours/x/project/__init__.py:1 <module>
(call)|         1|  0.000864744|  0.000864744|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/surface/contours/y/__init__.py:1 <module>
(call)|         1|  0.000191927|  0.000191927|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/surface/contours/y/project/__init__.py:1 <module>
(call)|         1|  0.000859737|  0.000859737|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/surface/contours/z/__init__.py:1 <module>
(call)|         1|   0.00017643|   0.00017643|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/surface/contours/z/project/__init__.py:1 <module>
(call)|         1|  0.000795603|  0.000795603|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/surface/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000400305|  0.000400305|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/surface/hoverlabel/font/__init__.py:1 <module>
(call)|         1|  0.000321627|  0.000321627|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/surface/lighting/__init__.py:1 <module>
(call)|         1|  0.000222683|  0.000222683|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/surface/lightposition/__init__.py:1 <module>
(call)|         1|  0.000141859|  0.000141859|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/surface/stream/__init__.py:1 <module>
(call)|         1|   0.00233936|   0.00233936|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/table/__init__.py:1 <module>
(call)|         1|    0.0012176|    0.0012176|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/table/cells/__init__.py:1 <module>
(call)|         1|  0.000139475|  0.000139475|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/table/cells/fill/__init__.py:1 <module>
(call)|         1|  0.000436544|  0.000436544|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/table/cells/font/__init__.py:1 <module>
(call)|         1|  0.000324965|  0.000324965|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/table/cells/line/__init__.py:1 <module>
(call)|         1|  0.000379324|  0.000379324|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/table/domain/__init__.py:1 <module>
(call)|         1|   0.00131416|   0.00131416|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/table/header/__init__.py:1 <module>
(call)|         1|  0.000215769|  0.000215769|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/table/header/fill/__init__.py:1 <module>
(call)|         1|  0.000385284|  0.000385284|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/table/header/font/__init__.py:1 <module>
(call)|         1|  0.000241995|  0.000241995|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/table/header/line/__init__.py:1 <module>
(call)|         1|  0.000752449|  0.000752449|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/table/hoverlabel/__init__.py:1 <module>
(call)|         1|  0.000488043|  0.000488043|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/table/hoverlabel/font/__init__.py:1 <module>
(call)|         1|  0.000140905|  0.000140905|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/plotly/validators/table/stream/__init__.py:1 <module>
   220|         0|            0|            0|  0.00%|
   221|         0|            0|            0|  0.00%|
   222|     23382|     0.066222|  2.83218e-06|  0.02%|
   223|         0|            0|            0|  0.00%|
   224|     23382|    0.0936792|  4.00647e-06|  0.03%|
   225|         0|            0|            0|  0.00%|
   226|         0|            0|            0|  0.00%|
   227|         0|            0|            0|  0.00%|
   228|         0|            0|            0|  0.00%|
   229|         0|            0|            0|  0.00%|
   230|         0|            0|            0|  0.00%|
   231|         0|            0|            0|  0.00%|
   232|         0|            0|            0|  0.00%|
   233|         0|            0|            0|  0.00%|
   234|         0|            0|            0|  0.00%|
   235|         0|            0|            0|  0.00%|
   236|         0|            0|            0|  0.00%|
   237|         0|            0|            0|  0.00%|
   238|         0|            0|            0|  0.00%|
   239|         0|            0|            0|  0.00%|
   240|         0|            0|            0|  0.00%|
   241|         0|            0|            0|  0.00%|
   242|         0|            0|            0|  0.00%|
   243|         0|            0|            0|  0.00%|
   244|         0|            0|            0|  0.00%|
   245|         0|            0|            0|  0.00%|
   246|         0|            0|            0|  0.00%|
   247|         0|            0|            0|  0.00%|
   248|         0|            0|            0|  0.00%|
   249|         0|            0|            0|  0.00%|
   250|         0|            0|            0|  0.00%|
   251|         0|            0|            0|  0.00%|
   252|         0|            0|            0|  0.00%|
   253|         0|            0|            0|  0.00%|
   254|         0|            0|            0|  0.00%|
   255|         0|            0|            0|  0.00%|
   256|         0|            0|            0|  0.00%|
   257|         0|            0|            0|  0.00%|
   258|         0|            0|            0|  0.00%|
   259|         0|            0|            0|  0.00%|
   260|         0|            0|            0|  0.00%|
   261|         0|            0|            0|  0.00%|
   262|         0|            0|            0|  0.00%|
   263|         0|            0|            0|  0.00%|
   264|         0|            0|            0|  0.00%|
   265|         0|            0|            0|  0.00%|
   266|         0|            0|            0|  0.00%|
   267|         0|            0|            0|  0.00%|
   268|         0|            0|            0|  0.00%|
   269|        15|  7.79629e-05|  5.19753e-06|  0.00%|
   270|         0|            0|            0|  0.00%|
   271|        15|  8.98838e-05|  5.99225e-06|  0.00%|
   272|        15|  6.93798e-05|  4.62532e-06|  0.00%|
   273|         0|            0|            0|  0.00%|
   274|         0|            0|            0|  0.00%|
   275|         0|            0|            0|  0.00%|
   276|        14|  5.43594e-05|  3.88282e-06|  0.00%|
   277|        14|  0.000215292|   1.5378e-05|  0.00%|
(call)|        14|  0.000100851|  7.20365e-06|  0.00%|# <frozen importlib._bootstrap>:710 module_repr
   278|         0|            0|            0|  0.00%|
   279|         0|            0|            0|  0.00%|
   280|         1|  4.29153e-06|  4.29153e-06|  0.00%|
   281|         1|  7.15256e-06|  7.15256e-06|  0.00%|
   282|         0|            0|            0|  0.00%|
   283|         0|            0|            0|  0.00%|
   284|         0|            0|            0|  0.00%|
   285|         1|  5.72205e-06|  5.72205e-06|  0.00%|
   286|         1|  1.74046e-05|  1.74046e-05|  0.00%|
(call)|         1|  5.74589e-05|  5.74589e-05|  0.00%|# <frozen importlib._bootstrap>:593 _module_repr_from_spec
   287|         0|            0|            0|  0.00%|
   288|         0|            0|            0|  0.00%|
   289|         0|            0|            0|  0.00%|
   290|         0|            0|            0|  0.00%|
   291|         0|            0|            0|  0.00%|
   292|         0|            0|            0|  0.00%|
   293|         0|            0|            0|  0.00%|
   294|         0|            0|            0|  0.00%|
   295|         0|            0|            0|  0.00%|
   296|         0|            0|            0|  0.00%|
   297|         0|            0|            0|  0.00%|
   298|         0|            0|            0|  0.00%|
   299|         0|            0|            0|  0.00%|
   300|         0|            0|            0|  0.00%|
   301|         0|            0|            0|  0.00%|
   302|         0|            0|            0|  0.00%|
   303|         0|            0|            0|  0.00%|
   304|         0|            0|            0|  0.00%|
   305|         0|            0|            0|  0.00%|
   306|         0|            0|            0|  0.00%|
   307|      3079|   0.00758934|  2.46487e-06|  0.00%|
   308|      3079|    0.0114572|  3.72108e-06|  0.00%|
   309|      3079|    0.0114512|  3.71914e-06|  0.00%|
   310|         0|            0|            0|  0.00%|
   311|      3079|   0.00761175|  2.47215e-06|  0.00%|
   312|         0|            0|            0|  0.00%|
   313|         0|            0|            0|  0.00%|
   314|         0|            0|            0|  0.00%|
   315|      3079|     0.011102|   3.6057e-06|  0.00%|
   316|      3079|    0.0127356|  4.13628e-06|  0.00%|
   317|         0|            0|            0|  0.00%|
   318|      3079|    0.0108035|  3.50876e-06|  0.00%|
   319|      3079|    0.0123866|  4.02292e-06|  0.00%|
   320|      3079|    0.0122287|  3.97166e-06|  0.00%|
   321|     27671|     0.164105|  5.93059e-06|  0.04%|
(call)|     12300|    0.0715985|  5.82102e-06|  0.02%|# <frozen importlib._bootstrap>:321 <genexpr>
   322|         8|   2.6226e-05|  3.27826e-06|  0.00%|
   323|         8|  5.53131e-05|  6.91414e-06|  0.00%|
   324|         0|            0|            0|  0.00%|
   325|         0|            0|            0|  0.00%|
   326|         0|            0|            0|  0.00%|
   327|      3071|    0.0338326|  1.10168e-05|  0.01%|
(call)|      3071|    0.0217147|  7.07088e-06|  0.01%|# <frozen importlib._bootstrap>:222 _verbose_message
   328|         0|            0|            0|  0.00%|
   329|      3079|    0.0127144|  4.12939e-06|  0.00%|
   330|         0|            0|            0|  0.00%|
   331|         0|            0|            0|  0.00%|
   332|         0|            0|            0|  0.00%|
   333|         0|            0|            0|  0.00%|
   334|         0|            0|            0|  0.00%|
   335|         0|            0|            0|  0.00%|
   336|         0|            0|            0|  0.00%|
   337|         0|            0|            0|  0.00%|
   338|         0|            0|            0|  0.00%|
   339|         0|            0|            0|  0.00%|
   340|         0|            0|            0|  0.00%|
   341|         0|            0|            0|  0.00%|
   342|         0|            0|            0|  0.00%|
   343|         0|            0|            0|  0.00%|
   344|         0|            0|            0|  0.00%|
   345|         0|            0|            0|  0.00%|
   346|         0|            0|            0|  0.00%|
   347|         0|            0|            0|  0.00%|
   348|         0|            0|            0|  0.00%|
   349|         0|            0|            0|  0.00%|
   350|         0|            0|            0|  0.00%|
   351|         0|            0|            0|  0.00%|
   352|         0|            0|            0|  0.00%|
   353|         0|            0|            0|  0.00%|
   354|         0|            0|            0|  0.00%|
   355|         0|            0|            0|  0.00%|
   356|         0|            0|            0|  0.00%|
   357|         0|            0|            0|  0.00%|
   358|         0|            0|            0|  0.00%|
   359|         0|            0|            0|  0.00%|
   360|         0|            0|            0|  0.00%|
   361|         0|            0|            0|  0.00%|
   362|         0|            0|            0|  0.00%|
   363|         0|            0|            0|  0.00%|
   364|         0|            0|            0|  0.00%|
   365|         0|            0|            0|  0.00%|
   366|         0|            0|            0|  0.00%|
   367|         0|            0|            0|  0.00%|
   368|         0|            0|            0|  0.00%|
   369|      4332|     0.013479|  3.11149e-06|  0.00%|
   370|         0|            0|            0|  0.00%|
   371|      4332|    0.0177302|  4.09285e-06|  0.00%|
   372|      4332|    0.0159748|  3.68762e-06|  0.00%|
   373|      4332|    0.0155058|  3.57936e-06|  0.00%|
   374|      4332|    0.0149555|  3.45234e-06|  0.00%|
   375|      4332|    0.0156846|  3.62064e-06|  0.00%|
   376|         0|            0|            0|  0.00%|
   377|         0|            0|            0|  0.00%|
   378|      4332|    0.0152795|  3.52713e-06|  0.00%|
   379|      4332|    0.0151751|  3.50302e-06|  0.00%|
   380|         0|            0|            0|  0.00%|
   381|         0|            0|            0|  0.00%|
   382|         0|            0|            0|  0.00%|
   383|         0|            0|            0|  0.00%|
   384|         0|            0|            0|  0.00%|
   385|         0|            0|            0|  0.00%|
   386|         0|            0|            0|  0.00%|
   387|         0|            0|            0|  0.00%|
   388|         0|            0|            0|  0.00%|
   389|         0|            0|            0|  0.00%|
   390|         0|            0|            0|  0.00%|
   391|         0|            0|            0|  0.00%|
   392|         0|            0|            0|  0.00%|
   393|         0|            0|            0|  0.00%|
   394|         0|            0|            0|  0.00%|
   395|         0|            0|            0|  0.00%|
   396|         0|            0|            0|  0.00%|
   397|         0|            0|            0|  0.00%|
   398|         0|            0|            0|  0.00%|
   399|         0|            0|            0|  0.00%|
   400|         0|            0|            0|  0.00%|
   401|         0|            0|            0|  0.00%|
   402|         0|            0|            0|  0.00%|
   403|      5925|     0.014219|  2.39984e-06|  0.00%|
   404|         0|            0|            0|  0.00%|
   405|      5925|    0.0200579|   3.3853e-06|  0.01%|
   406|      3070|    0.0106177|  3.45854e-06|  0.00%|
   407|      3070|    0.0101793|  3.31573e-06|  0.00%|
   408|         0|            0|            0|  0.00%|
   409|      3070|    0.0329795|  1.07425e-05|  0.01%|
(call)|      3070|     0.464222|  0.000151212|  0.13%|# <frozen importlib._bootstrap_external>:369 _get_cached
   410|      5925|    0.0207245|  3.49781e-06|  0.01%|
   411|         0|            0|            0|  0.00%|
   412|         0|            0|            0|  0.00%|
   413|         0|            0|            0|  0.00%|
   414|         0|            0|            0|  0.00%|
   415|         0|            0|            0|  0.00%|
   416|      6663|      0.03829|  5.74666e-06|  0.01%|
   417|         0|            0|            0|  0.00%|
   418|         0|            0|            0|  0.00%|
   419|      6663|    0.0272908|  4.09588e-06|  0.01%|
   420|      4343|     0.019069|  4.39073e-06|  0.01%|
   421|         0|            0|            0|  0.00%|
   422|      2320|   0.00781298|  3.36766e-06|  0.00%|
   423|         0|            0|            0|  0.00%|
   424|      3072|   0.00749421|  2.43952e-06|  0.00%|
   425|         0|            0|            0|  0.00%|
   426|      3072|    0.0107009|  3.48338e-06|  0.00%|
   427|         0|            0|            0|  0.00%|
   428|         0|            0|            0|  0.00%|
   429|         0|            0|            0|  0.00%|
   430|         0|            0|            0|  0.00%|
   431|         0|            0|            0|  0.00%|
   432|         0|            0|            0|  0.00%|
   433|        16|  5.50747e-05|  3.44217e-06|  0.00%|
   434|         0|            0|            0|  0.00%|
   435|        16|   8.4877e-05|  5.30481e-06|  0.00%|
   436|         0|            0|            0|  0.00%|
   437|         0|            0|            0|  0.00%|
   438|         0|            0|            0|  0.00%|
   439|         0|            0|            0|  0.00%|
   440|         0|            0|            0|  0.00%|
   441|         0|            0|            0|  0.00%|
   442|         0|            0|            0|  0.00%|
   443|         0|            0|            0|  0.00%|
   444|         0|            0|            0|  0.00%|
   445|         0|            0|            0|  0.00%|
   446|        16|  6.22272e-05|   3.8892e-06|  0.00%|
   447|        16|  9.10759e-05|  5.69224e-06|  0.00%|
   448|        10|  3.93391e-05|  3.93391e-06|  0.00%|
   449|        10|  0.000114441|  1.14441e-05|  0.00%|
(call)|         4|  0.000148296|  3.70741e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/urllib3/packages/six.py:205 is_package
(call)|         6|  0.000171185|  2.85308e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/six.py:209 is_package
   450|         0|            0|            0|  0.00%|
   451|         0|            0|            0|  0.00%|
   452|         0|            0|            0|  0.00%|
   453|         0|            0|            0|  0.00%|
   454|         6|   2.6226e-05|  4.37101e-06|  0.00%|
   455|         0|            0|            0|  0.00%|
   456|        16|  0.000214577|   1.3411e-05|  0.00%|
(call)|        16|  0.000422955|  2.64347e-05|  0.00%|# <frozen importlib._bootstrap>:369 __init__
   457|         0|            0|            0|  0.00%|
   458|         0|            0|            0|  0.00%|
   459|         0|            0|            0|  0.00%|
   460|         0|            0|            0|  0.00%|
   461|         0|            0|            0|  0.00%|
   462|         0|            0|            0|  0.00%|
   463|         0|            0|            0|  0.00%|
   464|         0|            0|            0|  0.00%|
   465|         0|            0|            0|  0.00%|
   466|         0|            0|            0|  0.00%|
   467|         0|            0|            0|  0.00%|
   468|         0|            0|            0|  0.00%|
   469|         0|            0|            0|  0.00%|
   470|         0|            0|            0|  0.00%|
   471|         0|            0|            0|  0.00%|
   472|         0|            0|            0|  0.00%|
   473|         0|            0|            0|  0.00%|
   474|         0|            0|            0|  0.00%|
   475|         0|            0|            0|  0.00%|
   476|         0|            0|            0|  0.00%|
   477|         0|            0|            0|  0.00%|
   478|         0|            0|            0|  0.00%|
   479|         0|            0|            0|  0.00%|
   480|         0|            0|            0|  0.00%|
   481|         0|            0|            0|  0.00%|
   482|         0|            0|            0|  0.00%|
   483|         0|            0|            0|  0.00%|
   484|         0|            0|            0|  0.00%|
   485|         0|            0|            0|  0.00%|
   486|         0|            0|            0|  0.00%|
   487|         0|            0|            0|  0.00%|
   488|         0|            0|            0|  0.00%|
   489|         0|            0|            0|  0.00%|
   490|         0|            0|            0|  0.00%|
   491|         0|            0|            0|  0.00%|
   492|         0|            0|            0|  0.00%|
   493|         0|            0|            0|  0.00%|
   494|         0|            0|            0|  0.00%|
   495|         0|            0|            0|  0.00%|
   496|         0|            0|            0|  0.00%|
   497|         0|            0|            0|  0.00%|
   498|         0|            0|            0|  0.00%|
   499|         0|            0|            0|  0.00%|
   500|         0|            0|            0|  0.00%|
   501|         0|            0|            0|  0.00%|
   502|         0|            0|            0|  0.00%|
   503|         0|            0|            0|  0.00%|
   504|      3079|   0.00992751|  3.22426e-06|  0.00%|
   505|         0|            0|            0|  0.00%|
   506|         0|            0|            0|  0.00%|
   507|         0|            0|            0|  0.00%|
   508|      3079|    0.0140028|  4.54784e-06|  0.00%|
   509|         0|            0|            0|  0.00%|
   510|         0|            0|            0|  0.00%|
   511|         0|            0|            0|  0.00%|
   512|         0|            0|            0|  0.00%|
   513|         0|            0|            0|  0.00%|
   514|      3079|    0.0128942|  4.18777e-06|  0.00%|
   515|      2940|    0.0110769|  3.76766e-06|  0.00%|
   516|      2940|    0.0109825|  3.73555e-06|  0.00%|
   517|         0|            0|            0|  0.00%|
   518|         1|   3.8147e-06|   3.8147e-06|  0.00%|
   519|         1|  4.76837e-06|  4.76837e-06|  0.00%|
   520|         0|            0|            0|  0.00%|
   521|         1|  5.48363e-06|  5.48363e-06|  0.00%|
   522|         0|            0|            0|  0.00%|
   523|         1|   6.4373e-06|   6.4373e-06|  0.00%|
   524|         1|  5.24521e-06|  5.24521e-06|  0.00%|
   525|         1|  5.24521e-06|  5.24521e-06|  0.00%|
   526|         0|            0|            0|  0.00%|
   527|         0|            0|            0|  0.00%|
   528|         0|            0|            0|  0.00%|
   529|         0|            0|            0|  0.00%|
   530|         0|            0|            0|  0.00%|
   531|         0|            0|            0|  0.00%|
   532|         0|            0|            0|  0.00%|
   533|         0|            0|            0|  0.00%|
   534|         0|            0|            0|  0.00%|
   535|         0|            0|            0|  0.00%|
   536|         1|  4.76837e-06|  4.76837e-06|  0.00%|
   537|      2940|    0.0106785|  3.63215e-06|  0.00%|
   538|      2940|     0.011564|  3.93334e-06|  0.00%|
   539|         0|            0|            0|  0.00%|
   540|         0|            0|            0|  0.00%|
   541|         0|            0|            0|  0.00%|
   542|      3079|    0.0117943|  3.83057e-06|  0.00%|
   543|      2940|    0.0104463|  3.55317e-06|  0.00%|
   544|      2940|    0.0321722|  1.09429e-05|  0.01%|
(call)|      2932|    0.0296471|  1.01116e-05|  0.01%|# <frozen importlib._bootstrap>:416 parent
   545|         0|            0|            0|  0.00%|
   546|         0|            0|            0|  0.00%|
   547|         0|            0|            0|  0.00%|
   548|      3079|     0.011898|  3.86425e-06|  0.00%|
   549|      3079|    0.0119462|   3.8799e-06|  0.00%|
   550|         0|            0|            0|  0.00%|
   551|         0|            0|            0|  0.00%|
   552|         0|            0|            0|  0.00%|
   553|      3079|    0.0193429|   6.2822e-06|  0.01%|
   554|      3079|    0.0122309|  3.97235e-06|  0.00%|
   555|      1159|   0.00433326|  3.73879e-06|  0.00%|
   556|      1159|   0.00481486|  4.15433e-06|  0.00%|
   557|         0|            0|            0|  0.00%|
   558|         0|            0|            0|  0.00%|
   559|         0|            0|            0|  0.00%|
   560|      3079|    0.0321293|   1.0435e-05|  0.01%|
(call)|      3071|    0.0181856|  5.92172e-06|  0.00%|# <frozen importlib._bootstrap>:424 has_location
   561|      3070|    0.0143945|  4.68877e-06|  0.00%|
   562|      2856|    0.0106373|  3.72454e-06|  0.00%|
   563|      2856|    0.0112476|  3.93825e-06|  0.00%|
   564|         0|            0|            0|  0.00%|
   565|         0|            0|            0|  0.00%|
   566|         0|            0|            0|  0.00%|
   567|      3070|    0.0139236|  4.53539e-06|  0.00%|
   568|      3070|    0.0339699|  1.10651e-05|  0.01%|
(call)|      3070|     0.547406|  0.000178308|  0.15%|# <frozen importlib._bootstrap>:403 cached
   569|      2855|    0.0115805|  4.05621e-06|  0.00%|
   570|      2855|    0.0297971|  1.04368e-05|  0.01%|
(call)|      2855|    0.0255935|  8.96446e-06|  0.01%|# <frozen importlib._bootstrap>:403 cached
   571|         0|            0|            0|  0.00%|
   572|         0|            0|            0|  0.00%|
   573|      3079|    0.0117671|  3.82174e-06|  0.00%|
   574|         0|            0|            0|  0.00%|
   575|         0|            0|            0|  0.00%|
   576|      3079|   0.00802565|  2.60658e-06|  0.00%|
   577|         0|            0|            0|  0.00%|
   578|         0|            0|            0|  0.00%|
   579|      3079|    0.0113425|  3.68383e-06|  0.00%|
   580|      3079|    0.0117397|  3.81284e-06|  0.00%|
   581|         0|            0|            0|  0.00%|
   582|         0|            0|            0|  0.00%|
   583|      3078|    0.0315824|  1.02607e-05|  0.01%|
(call)|      2855|    0.0167601|  5.87044e-06|  0.00%|# <frozen importlib._bootstrap_external>:719 create_module
(call)|       215|     0.365761|   0.00170122|  0.10%|# <frozen importlib._bootstrap_external>:1040 create_module
(call)|         8|  5.10216e-05|   6.3777e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/tlz/_build_tlz.py:50 create_module
   584|         1|  4.05312e-06|  4.05312e-06|  0.00%|
   585|         0|            0|            0|  0.00%|
   586|         0|            0|            0|  0.00%|
   587|      3079|    0.0107384|  3.48762e-06|  0.00%|
   588|      2856|    0.0286674|  1.00376e-05|  0.01%|
(call)|      2856|    0.0198178|  6.93902e-06|  0.01%|# <frozen importlib._bootstrap>:35 _new_module
   589|      3079|    0.0346024|  1.12382e-05|  0.01%|
(call)|      3079|     0.990421|   0.00032167|  0.27%|# <frozen importlib._bootstrap>:504 _init_module_attrs
   590|      3079|    0.0109658|  3.56149e-06|  0.00%|
   591|         0|            0|            0|  0.00%|
   592|         0|            0|            0|  0.00%|
   593|         1|  6.91414e-06|  6.91414e-06|  0.00%|
   594|         0|            0|            0|  0.00%|
   595|         0|            0|            0|  0.00%|
   596|         1|  7.15256e-06|  7.15256e-06|  0.00%|
   597|         1|  7.39098e-06|  7.39098e-06|  0.00%|
   598|         0|            0|            0|  0.00%|
   599|         0|            0|            0|  0.00%|
   600|         0|            0|            0|  0.00%|
   601|         0|            0|            0|  0.00%|
   602|         0|            0|            0|  0.00%|
   603|         1|  1.74046e-05|  1.74046e-05|  0.00%|
(call)|         1|  9.53674e-06|  9.53674e-06|  0.00%|# <frozen importlib._bootstrap>:424 has_location
   604|         1|  9.05991e-06|  9.05991e-06|  0.00%|
   605|         0|            0|            0|  0.00%|
   606|         0|            0|            0|  0.00%|
   607|         0|            0|            0|  0.00%|
   608|         0|            0|            0|  0.00%|
   609|         0|            0|            0|  0.00%|
   610|         0|            0|            0|  0.00%|
   611|         0|            0|            0|  0.00%|
   612|         0|            0|            0|  0.00%|
   613|         0|            0|            0|  0.00%|
   614|         0|            0|            0|  0.00%|
   615|         0|            0|            0|  0.00%|
   616|         0|            0|            0|  0.00%|
   617|         0|            0|            0|  0.00%|
   618|         0|            0|            0|  0.00%|
   619|         0|            0|            0|  0.00%|
   620|         0|            0|            0|  0.00%|
   621|         0|            0|            0|  0.00%|
   622|         0|            0|            0|  0.00%|
   623|         0|            0|            0|  0.00%|
   624|         0|            0|            0|  0.00%|
   625|         0|            0|            0|  0.00%|
   626|         0|            0|            0|  0.00%|
   627|         0|            0|            0|  0.00%|
   628|         0|            0|            0|  0.00%|
   629|         0|            0|            0|  0.00%|
   630|         0|            0|            0|  0.00%|
   631|         0|            0|            0|  0.00%|
   632|         0|            0|            0|  0.00%|
   633|         0|            0|            0|  0.00%|
   634|        16|  4.22001e-05|  2.63751e-06|  0.00%|
   635|         0|            0|            0|  0.00%|
   636|         0|            0|            0|  0.00%|
   637|         0|            0|            0|  0.00%|
   638|        16|   0.00020504|   1.2815e-05|  0.00%|
(call)|         4|  0.000264883|  6.62208e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/urllib3/packages/six.py:191 load_module
(call)|         6|  0.000376225|  6.27041e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/six.py:195 load_module
(call)|         6|     0.720122|      0.12002|  0.20%|# /opt/anaconda3/lib/python3.7/site-packages/pkg_resources/extern/__init__.py:35 load_module
   639|         0|            0|            0|  0.00%|
   640|        16|  6.69956e-05|  4.18723e-06|  0.00%|
   641|        16|   6.1512e-05|   3.8445e-06|  0.00%|
   642|         0|            0|            0|  0.00%|
   643|         0|            0|            0|  0.00%|
   644|         0|            0|            0|  0.00%|
   645|         0|            0|            0|  0.00%|
   646|        16|  5.93662e-05|  3.71039e-06|  0.00%|
   647|         9|  2.95639e-05|  3.28488e-06|  0.00%|
   648|         0|            0|            0|  0.00%|
   649|         0|            0|            0|  0.00%|
   650|         0|            0|            0|  0.00%|
   651|         9|  3.79086e-05|  4.21206e-06|  0.00%|
   652|         9|  3.52859e-05|  3.92066e-06|  0.00%|
   653|         3|  1.16825e-05|  3.89417e-06|  0.00%|
   654|         0|            0|            0|  0.00%|
   655|         0|            0|            0|  0.00%|
   656|        16|  6.27041e-05|  3.91901e-06|  0.00%|
   657|         9|  2.98023e-05|  3.31137e-06|  0.00%|
   658|         9|  2.90871e-05|   3.2319e-06|  0.00%|
   659|         0|            0|            0|  0.00%|
   660|         0|            0|            0|  0.00%|
   661|        16|  7.31945e-05|  4.57466e-06|  0.00%|
   662|         0|            0|            0|  0.00%|
   663|      3095|    0.0087297|  2.82058e-06|  0.00%|
   664|         0|            0|            0|  0.00%|
   665|      3095|    0.0114105|  3.68674e-06|  0.00%|
   666|         0|            0|            0|  0.00%|
   667|      3094|    0.0129755|  4.19375e-06|  0.00%|
   668|        16|  0.000161886|  1.01179e-05|  0.00%|
(call)|        16|     0.721267|    0.0450792|  0.20%|# <frozen importlib._bootstrap>:634 _load_backward_compatible
   669|         0|            0|            0|  0.00%|
   670|      3079|    0.0332062|  1.07847e-05|  0.01%|
(call)|      3079|      1.53974|  0.000500078|  0.42%|# <frozen importlib._bootstrap>:576 module_from_spec
   671|      3079|    0.0539081|  1.75083e-05|  0.01%|
(call)|      3079|    0.0304978|   9.9051e-06|  0.01%|# <frozen importlib._bootstrap>:307 __init__
(call)|      3079|    0.0314493|  1.02141e-05|  0.01%|# <frozen importlib._bootstrap>:311 __enter__
   672|      3079|    0.0109735|  3.56397e-06|  0.00%|
   673|         0|            0|            0|  0.00%|
   674|         0|            0|            0|  0.00%|
   675|         0|            0|            0|  0.00%|
   676|         0|            0|            0|  0.00%|
   677|      3079|    0.0631592|  2.05129e-05|  0.02%|
(call)|      2855|      42.9855|    0.0150562| 11.69%|# <frozen importlib._bootstrap_external>:722 exec_module
(call)|      3079|     0.267867|  8.69982e-05|  0.07%|# <frozen importlib._bootstrap>:318 __exit__
(call)|       215|     0.598771|   0.00278498|  0.16%|# <frozen importlib._bootstrap_external>:1048 exec_module
(call)|         1|  2.47955e-05|  2.47955e-05|  0.00%|# <frozen importlib._bootstrap_external>:1159 exec_module
(call)|         8|    0.0183153|   0.00228941|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/tlz/_build_tlz.py:53 exec_module
   678|         0|            0|            0|  0.00%|
   679|         0|            0|            0|  0.00%|
   680|         0|            0|            0|  0.00%|
   681|         0|            0|            0|  0.00%|
   682|      3071|    0.0130131|  4.23742e-06|  0.00%|
   683|         0|            0|            0|  0.00%|
   684|         0|            0|            0|  0.00%|
   685|         0|            0|            0|  0.00%|
   686|         0|            0|            0|  0.00%|
   687|         0|            0|            0|  0.00%|
   688|         0|            0|            0|  0.00%|
   689|         0|            0|            0|  0.00%|
   690|         0|            0|            0|  0.00%|
   691|         0|            0|            0|  0.00%|
   692|         0|            0|            0|  0.00%|
   693|         0|            0|            0|  0.00%|
   694|         0|            0|            0|  0.00%|
   695|         0|            0|            0|  0.00%|
   696|         0|            0|            0|  0.00%|
   697|         0|            0|            0|  0.00%|
   698|         0|            0|            0|  0.00%|
   699|         0|            0|            0|  0.00%|
   700|         0|            0|            0|  0.00%|
   701|         0|            0|            0|  0.00%|
   702|         0|            0|            0|  0.00%|
   703|         0|            0|            0|  0.00%|
   704|         0|            0|            0|  0.00%|
   705|         0|            0|            0|  0.00%|
   706|         0|            0|            0|  0.00%|
   707|         0|            0|            0|  0.00%|
   708|         0|            0|            0|  0.00%|
   709|         0|            0|            0|  0.00%|
   710|        14|  3.50475e-05|   2.5034e-06|  0.00%|
   711|         0|            0|            0|  0.00%|
   712|         0|            0|            0|  0.00%|
   713|         0|            0|            0|  0.00%|
   714|         0|            0|            0|  0.00%|
   715|         0|            0|            0|  0.00%|
   716|         0|            0|            0|  0.00%|
   717|        14|  6.58035e-05|  4.70025e-06|  0.00%|
   718|         0|            0|            0|  0.00%|
   719|      3197|   0.00916648|  2.86721e-06|  0.00%|
   720|         0|            0|            0|  0.00%|
   721|      3197|      0.01157|  3.61901e-06|  0.00%|
   722|      3020|    0.0104043|  3.44515e-06|  0.00%|
   723|       177|  0.000936985|   5.2937e-06|  0.00%|
   724|         0|            0|            0|  0.00%|
   725|         0|            0|            0|  0.00%|
   726|       177|  0.000663042|    3.746e-06|  0.00%|
   727|         0|            0|            0|  0.00%|
   728|         0|            0|            0|  0.00%|
   729|         0|            0|            0|  0.00%|
   730|         0|            0|            0|  0.00%|
   731|         0|            0|            0|  0.00%|
   732|         0|            0|            0|  0.00%|
   733|         0|            0|            0|  0.00%|
   734|         0|            0|            0|  0.00%|
   735|         0|            0|            0|  0.00%|
   736|         0|            0|            0|  0.00%|
   737|         0|            0|            0|  0.00%|
   738|         0|            0|            0|  0.00%|
   739|         0|            0|            0|  0.00%|
   740|         0|            0|            0|  0.00%|
   741|         0|            0|            0|  0.00%|
   742|         0|            0|            0|  0.00%|
   743|         0|            0|            0|  0.00%|
   744|         0|            0|            0|  0.00%|
   745|         0|            0|            0|  0.00%|
   746|         0|            0|            0|  0.00%|
   747|         0|            0|            0|  0.00%|
   748|         0|            0|            0|  0.00%|
   749|         0|            0|            0|  0.00%|
   750|         0|            0|            0|  0.00%|
   751|         0|            0|            0|  0.00%|
   752|         0|            0|            0|  0.00%|
   753|         0|            0|            0|  0.00%|
   754|         0|            0|            0|  0.00%|
   755|         0|            0|            0|  0.00%|
   756|         0|            0|            0|  0.00%|
   757|         0|            0|            0|  0.00%|
   758|         0|            0|            0|  0.00%|
   759|         0|            0|            0|  0.00%|
   760|         0|            0|            0|  0.00%|
   761|         0|            0|            0|  0.00%|
   762|         0|            0|            0|  0.00%|
   763|         0|            0|            0|  0.00%|
   764|         0|            0|            0|  0.00%|
   765|         0|            0|            0|  0.00%|
   766|         0|            0|            0|  0.00%|
   767|         0|            0|            0|  0.00%|
   768|         0|            0|            0|  0.00%|
   769|         0|            0|            0|  0.00%|
   770|         0|            0|            0|  0.00%|
   771|         0|            0|            0|  0.00%|
   772|         0|            0|            0|  0.00%|
   773|         0|            0|            0|  0.00%|
   774|         0|            0|            0|  0.00%|
   775|         0|            0|            0|  0.00%|
   776|         0|            0|            0|  0.00%|
   777|         0|            0|            0|  0.00%|
   778|         0|            0|            0|  0.00%|
   779|         0|            0|            0|  0.00%|
   780|         0|            0|            0|  0.00%|
   781|         0|            0|            0|  0.00%|
   782|         0|            0|            0|  0.00%|
   783|         0|            0|            0|  0.00%|
   784|         0|            0|            0|  0.00%|
   785|         0|            0|            0|  0.00%|
   786|         0|            0|            0|  0.00%|
   787|         0|            0|            0|  0.00%|
   788|         0|            0|            0|  0.00%|
   789|         0|            0|            0|  0.00%|
   790|         0|            0|            0|  0.00%|
   791|         0|            0|            0|  0.00%|
   792|      3197|   0.00801539|  2.50716e-06|  0.00%|
   793|         0|            0|            0|  0.00%|
   794|      3197|    0.0148785|   4.6539e-06|  0.00%|
   795|         0|            0|            0|  0.00%|
   796|         0|            0|            0|  0.00%|
   797|      3197|    0.0112259|   3.5114e-06|  0.00%|
   798|         0|            0|            0|  0.00%|
   799|         0|            0|            0|  0.00%|
   800|         0|            0|            0|  0.00%|
   801|         0|            0|            0|  0.00%|
   802|         0|            0|            0|  0.00%|
   803|         0|            0|            0|  0.00%|
   804|         0|            0|            0|  0.00%|
   805|         0|            0|            0|  0.00%|
   806|         0|            0|            0|  0.00%|
   807|         0|            0|            0|  0.00%|
   808|         0|            0|            0|  0.00%|
   809|         0|            0|            0|  0.00%|
   810|         0|            0|            0|  0.00%|
   811|         0|            0|            0|  0.00%|
   812|         0|            0|            0|  0.00%|
   813|         0|            0|            0|  0.00%|
   814|         0|            0|            0|  0.00%|
   815|         0|            0|            0|  0.00%|
   816|         0|            0|            0|  0.00%|
   817|         0|            0|            0|  0.00%|
   818|         0|            0|            0|  0.00%|
   819|         0|            0|            0|  0.00%|
   820|         0|            0|            0|  0.00%|
   821|         0|            0|            0|  0.00%|
   822|         0|            0|            0|  0.00%|
   823|         0|            0|            0|  0.00%|
   824|         0|            0|            0|  0.00%|
   825|         0|            0|            0|  0.00%|
   826|         0|            0|            0|  0.00%|
   827|         0|            0|            0|  0.00%|
   828|         0|            0|            0|  0.00%|
   829|         0|            0|            0|  0.00%|
   830|         0|            0|            0|  0.00%|
   831|         0|            0|            0|  0.00%|
   832|         0|            0|            0|  0.00%|
   833|         0|            0|            0|  0.00%|
   834|         0|            0|            0|  0.00%|
   835|         0|            0|            0|  0.00%|
   836|         0|            0|            0|  0.00%|
   837|         0|            0|            0|  0.00%|
   838|         0|            0|            0|  0.00%|
   839|         0|            0|            0|  0.00%|
   840|         0|            0|            0|  0.00%|
   841|         0|            0|            0|  0.00%|
   842|         0|            0|            0|  0.00%|
   843|         0|            0|            0|  0.00%|
   844|         0|            0|            0|  0.00%|
   845|         0|            0|            0|  0.00%|
   846|         0|            0|            0|  0.00%|
   847|         0|            0|            0|  0.00%|
   848|         0|            0|            0|  0.00%|
   849|         0|            0|            0|  0.00%|
   850|         0|            0|            0|  0.00%|
   851|         0|            0|            0|  0.00%|
   852|         0|            0|            0|  0.00%|
   853|         0|            0|            0|  0.00%|
   854|         0|            0|            0|  0.00%|
   855|     10223|    0.0232096|  2.27033e-06|  0.01%|
   856|         0|            0|            0|  0.00%|
   857|     10223|     0.035912|  3.51287e-06|  0.01%|
   858|         0|            0|            0|  0.00%|
   859|     10223|    0.0264518|  2.58748e-06|  0.01%|
   860|         0|            0|            0|  0.00%|
   861|     10223|    0.0393012|  3.84439e-06|  0.01%|
   862|         0|            0|            0|  0.00%|
   863|         0|            0|            0|  0.00%|
   864|         0|            0|            0|  0.00%|
   865|         0|            0|            0|  0.00%|
   866|         0|            0|            0|  0.00%|
   867|         0|            0|            0|  0.00%|
   868|         0|            0|            0|  0.00%|
   869|         0|            0|            0|  0.00%|
   870|         0|            0|            0|  0.00%|
   871|         0|            0|            0|  0.00%|
   872|         0|            0|            0|  0.00%|
   873|       473|   0.00124931|  2.64125e-06|  0.00%|
   874|         0|            0|            0|  0.00%|
   875|         0|            0|            0|  0.00%|
   876|       473|    0.0058713|  1.24129e-05|  0.00%|
(call)|       236|   0.00272107|    1.153e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/six.py:184 find_module
(call)|       121|   0.00138497|  1.14461e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/urllib3/packages/six.py:180 find_module
(call)|       116|   0.00216579|  1.86706e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pkg_resources/extern/__init__.py:23 find_module
   877|       473|   0.00160003|  3.38272e-06|  0.00%|
   878|       457|   0.00149679|  3.27526e-06|  0.00%|
   879|        16|  0.000197172|  1.23233e-05|  0.00%|
(call)|        16|   0.00143027|  8.93921e-05|  0.00%|# <frozen importlib._bootstrap>:433 spec_from_loader
   880|         0|            0|            0|  0.00%|
   881|         0|            0|            0|  0.00%|
   882|      3197|    0.0118213|  3.69761e-06|  0.00%|
   883|         0|            0|            0|  0.00%|
   884|      3197|    0.0150082|  4.69447e-06|  0.00%|
   885|      3197|     0.013907|     4.35e-06|  0.00%|
   886|         0|            0|            0|  0.00%|
   887|         0|            0|            0|  0.00%|
   888|         0|            0|            0|  0.00%|
   889|         0|            0|            0|  0.00%|
   890|      3197|    0.0140433|  4.39266e-06|  0.00%|
   891|         0|            0|            0|  0.00%|
   892|         0|            0|            0|  0.00%|
   893|         0|            0|            0|  0.00%|
   894|         0|            0|            0|  0.00%|
   895|         0|            0|            0|  0.00%|
   896|      3197|    0.0139174|  4.35328e-06|  0.00%|
   897|     10325|    0.0434179|  4.20513e-06|  0.01%|
   898|     10223|     0.111041|  1.08619e-05|  0.03%|
(call)|     10223|    0.0591216|   5.7832e-06|  0.02%|# <frozen importlib._bootstrap>:855 __enter__
   899|     10223|    0.0409915|  4.00974e-06|  0.01%|
   900|     10223|    0.0438488|  4.28923e-06|  0.01%|
   901|       473|   0.00212049|  4.48308e-06|  0.00%|
   902|       473|   0.00507903|  1.07379e-05|  0.00%|
(call)|       473|    0.0181167|  3.83017e-05|  0.00%|# <frozen importlib._bootstrap>:873 _find_spec_legacy
   903|       473|   0.00208735|  4.41301e-06|  0.00%|
(call)|        16|  9.39369e-05|  5.87106e-06|  0.00%|# <frozen importlib._bootstrap>:859 __exit__
   904|       457|   0.00500607|  1.09542e-05|  0.00%|
(call)|       457|   0.00276732|  6.05541e-06|  0.00%|# <frozen importlib._bootstrap>:859 __exit__
   905|         0|            0|            0|  0.00%|
   906|      9750|     0.176701|  1.81232e-05|  0.05%|
(call)|      3197|    0.0327408|  1.02411e-05|  0.01%|# <frozen importlib._bootstrap>:719 find_spec
(call)|      9750|    0.0628917|  6.45043e-06|  0.02%|# <frozen importlib._bootstrap>:859 __exit__
(call)|      3197|    0.0341198|  1.06725e-05|  0.01%|# <frozen importlib._bootstrap>:792 find_spec
(call)|      3197|      3.07289|  0.000961178|  0.84%|# <frozen importlib._bootstrap_external>:1272 find_spec
(call)|       104|  0.000724316|  6.96457e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/importlib_metadata/_compat.py:94 find_spec
(call)|        55|   0.00105643|  1.92079e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/tlz/_build_tlz.py:45 find_spec
   907|      9766|    0.0405176|  4.14884e-06|  0.01%|
   908|         0|            0|            0|  0.00%|
   909|      3095|    0.0138242|  4.46663e-06|  0.00%|
   910|         0|            0|            0|  0.00%|
   911|         0|            0|            0|  0.00%|
   912|         0|            0|            0|  0.00%|
   913|         0|            0|            0|  0.00%|
   914|         0|            0|            0|  0.00%|
   915|         0|            0|            0|  0.00%|
   916|         0|            0|            0|  0.00%|
   917|         0|            0|            0|  0.00%|
   918|         0|            0|            0|  0.00%|
   919|         0|            0|            0|  0.00%|
   920|         0|            0|            0|  0.00%|
   921|         0|            0|            0|  0.00%|
   922|         0|            0|            0|  0.00%|
   923|         0|            0|            0|  0.00%|
   924|      3095|    0.0124342|  4.01753e-06|  0.00%|
   925|         0|            0|            0|  0.00%|
   926|       102|   0.00036025|  3.53187e-06|  0.00%|
   927|         0|            0|            0|  0.00%|
   928|         0|            0|            0|  0.00%|
   929|     18001|    0.0493977|  2.74416e-06|  0.01%|
   930|         0|            0|            0|  0.00%|
   931|     18001|    0.0725036|  4.02775e-06|  0.02%|
   932|         0|            0|            0|  0.00%|
   933|     18001|    0.0787153|  4.37283e-06|  0.02%|
   934|         0|            0|            0|  0.00%|
   935|     18001|    0.0636582|  3.53637e-06|  0.02%|
   936|         0|            0|            0|  0.00%|
   937|         0|            0|            0|  0.00%|
   938|         0|            0|            0|  0.00%|
   939|         0|            0|            0|  0.00%|
   940|         0|            0|            0|  0.00%|
   941|     18001|    0.0671167|   3.7285e-06|  0.02%|
   942|         0|            0|            0|  0.00%|
   943|         0|            0|            0|  0.00%|
   944|         0|            0|            0|  0.00%|
   945|         0|            0|            0|  0.00%|
   946|         0|            0|            0|  0.00%|
   947|         0|            0|            0|  0.00%|
   948|      3234|    0.0114543|  3.54185e-06|  0.00%|
   949|      3234|    0.0146375|  4.52612e-06|  0.00%|
   950|      3234|    0.0170436|  5.27013e-06|  0.00%|
   951|      3234|    0.0143273|  4.43021e-06|  0.00%|
   952|      3057|    0.0145099|  4.74646e-06|  0.00%|
   953|       109|   0.00145817|  1.33777e-05|  0.00%|
(call)|       109|      22.1517|     0.203226|  6.02%|# <frozen importlib._bootstrap>:211 _call_with_frames_removed
   954|         0|            0|            0|  0.00%|
   955|      3041|    0.0130131|  4.27923e-06|  0.00%|
   956|        20|  9.87053e-05|  4.93526e-06|  0.00%|
   957|      3021|    0.0132554|  4.38774e-06|  0.00%|
   958|      3021|    0.0122664|  4.06038e-06|  0.00%|
   959|      3021|     0.012615|  4.17576e-06|  0.00%|
   960|         1|  4.05312e-06|  4.05312e-06|  0.00%|
   961|         1|  9.77516e-06|  9.77516e-06|  0.00%|
   962|         1|  7.86781e-06|  7.86781e-06|  0.00%|
   963|      3197|    0.0410316|  1.28344e-05|  0.01%|
(call)|      3197|      3.85065|   0.00120446|  1.05%|# <frozen importlib._bootstrap>:882 _find_spec
   964|      3197|    0.0140457|   4.3934e-06|  0.00%|
   965|       102|   0.00105882|  1.03806e-05|  0.00%|
   966|         0|            0|            0|  0.00%|
   967|      3095|    0.0385578|  1.24581e-05|  0.01%|
(call)|      3095|      43.3179|    0.0139961| 11.78%|# <frozen importlib._bootstrap>:663 _load_unlocked
   968|      3087|    0.0138421|    4.484e-06|  0.00%|
   969|         0|            0|            0|  0.00%|
   970|      2969|    0.0127821|  4.30519e-06|  0.00%|
   971|      2969|    0.0193992|  6.53391e-06|  0.01%|
   972|      3087|    0.0123527|  4.00152e-06|  0.00%|
   973|         0|            0|            0|  0.00%|
   974|         0|            0|            0|  0.00%|
   975|         0|            0|            0|  0.00%|
   976|         0|            0|            0|  0.00%|
   977|         0|            0|            0|  0.00%|
   978|     21207|    0.0796554|  3.75609e-06|  0.02%|
   979|         0|            0|            0|  0.00%|
   980|     21207|     0.417675|  1.96951e-05|  0.11%|
(call)|     21207|     0.238858|  1.12632e-05|  0.06%|# <frozen importlib._bootstrap>:143 __init__
(call)|     21207|      3.75754|  0.000177184|  1.02%|# <frozen importlib._bootstrap>:147 __enter__
   981|     21207|     0.134811|  6.35693e-06|  0.04%|
   982|     21207|     0.382587|  1.80406e-05|  0.10%|
(call)|     17973|     0.868737|  4.83357e-05|  0.24%|# <frozen importlib._bootstrap>:151 __exit__
(call)|     17971|     0.396125|  2.20425e-05|  0.11%|# <frozen importlib._bootstrap>:176 cb
   983|      3234|    0.0907309|  2.80553e-05|  0.02%|
(call)|      3234|      44.1156|    0.0136412| 12.00%|# <frozen importlib._bootstrap>:948 _find_and_load_unlocked
(call)|      3234|     0.151527|  4.68544e-05|  0.04%|# <frozen importlib._bootstrap>:151 __exit__
(call)|      3214|     0.066499|  2.06904e-05|  0.02%|# <frozen importlib._bootstrap>:176 cb
   984|         0|            0|            0|  0.00%|
   985|     17973|    0.0757942|  4.21712e-06|  0.02%|
   986|         0|            0|            0|  0.00%|
   987|         0|            0|            0|  0.00%|
   988|         0|            0|            0|  0.00%|
   989|         0|            0|            0|  0.00%|
   990|     17973|     0.340109|  1.89233e-05|  0.09%|
(call)|     17973|      3.54028|  0.000196978|  0.96%|# <frozen importlib._bootstrap>:194 _lock_unlock_module
(call)|     17971|     0.361465|  2.01138e-05|  0.10%|# <frozen importlib._bootstrap>:176 cb
   991|     17973|    0.0790403|  4.39772e-06|  0.02%|
   992|         0|            0|            0|  0.00%|
   993|         0|            0|            0|  0.00%|
   994|     18001|    0.0544541|  3.02506e-06|  0.01%|
   995|         0|            0|            0|  0.00%|
   996|         0|            0|            0|  0.00%|
   997|         0|            0|            0|  0.00%|
   998|         0|            0|            0|  0.00%|
   999|         0|            0|            0|  0.00%|
  1000|         0|            0|            0|  0.00%|
  1001|         0|            0|            0|  0.00%|
  1002|         0|            0|            0|  0.00%|
  1003|     18001|     0.213725|  1.18729e-05|  0.06%|
(call)|     18001|     0.331392|  1.84096e-05|  0.09%|# <frozen importlib._bootstrap>:929 _sanity_check
  1004|     18001|    0.0660512|  3.66931e-06|  0.02%|
  1005|         0|            0|            0|  0.00%|
  1006|     18001|     0.205231|  1.14011e-05|  0.06%|
(call)|     18001|      10.9135|  0.000606273|  2.97%|# <frozen importlib._bootstrap>:978 _find_and_load
  1007|         0|            0|            0|  0.00%|
  1008|         0|            0|            0|  0.00%|
  1009|     35682|     0.287144|  8.04731e-06|  0.08%|
  1010|         0|            0|            0|  0.00%|
  1011|         0|            0|            0|  0.00%|
  1012|         0|            0|            0|  0.00%|
  1013|         0|            0|            0|  0.00%|
  1014|         0|            0|            0|  0.00%|
  1015|         0|            0|            0|  0.00%|
  1016|         0|            0|            0|  0.00%|
  1017|         0|            0|            0|  0.00%|
  1018|         0|            0|            0|  0.00%|
  1019|     35682|     0.224439|  6.28998e-06|  0.06%|
(call)|         1|   1.5974e-05|   1.5974e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/joblib/my_exceptions.py:19 __getattr__
  1020|     45793|     0.209305|  4.57067e-06|  0.06%|
  1021|     24276|     0.118253|  4.87119e-06|  0.03%|
  1022|         0|            0|            0|  0.00%|
  1023|         0|            0|            0|  0.00%|
  1024|         0|            0|            0|  0.00%|
  1025|         0|            0|            0|  0.00%|
  1026|         0|            0|            0|  0.00%|
  1027|         0|            0|            0|  0.00%|
  1028|     24276|     0.102721|  4.23138e-06|  0.03%|
  1029|        24|  0.000114679|  4.77831e-06|  0.00%|
  1030|        15|  7.58171e-05|  5.05447e-06|  0.00%|
  1031|        15|  0.000256062|  1.70708e-05|  0.00%|
(call)|        15|    0.0176535|    0.0011769|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
  1032|     24252|     0.117169|   4.8313e-06|  0.03%|
(call)|         1|  0.000105858|  0.000105858|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/urllib3/packages/six.py:90 __get__
(call)|         6|  0.000423908|  7.06514e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/six.py:91 __get__
  1033|      1246|   0.00794196|  6.37397e-06|  0.00%|
  1034|      1246|   0.00550985|  4.42203e-06|  0.00%|
  1035|      1246|     0.016175|  1.29816e-05|  0.00%|
(call)|      1246|      26.1266|    0.0209684|  7.11%|# <frozen importlib._bootstrap>:211 _call_with_frames_removed
  1036|        15|  0.000101089|   6.7393e-06|  0.00%|
  1037|         0|            0|            0|  0.00%|
  1038|         0|            0|            0|  0.00%|
  1039|         0|            0|            0|  0.00%|
  1040|        14|  9.13143e-05|  6.52245e-06|  0.00%|
  1041|        14|  6.98566e-05|  4.98976e-06|  0.00%|
  1042|        14|   8.7738e-05|    6.267e-06|  0.00%|
  1043|         0|            0|            0|  0.00%|
  1044|     35681|     0.157499|  4.41409e-06|  0.04%|
File: /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py
File duration: 7.72593s (2.10%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  5.45979e-05|  2.72989e-05|  0.00%|import torch
     2|         1|  1.12057e-05|  1.12057e-05|  0.00%|import neptune
     3|         1|  4.62532e-05|  4.62532e-05|  0.00%|from torch.distributions.utils import broadcast_all
(call)|         1|  2.86102e-05|  2.86102e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
     4|         1|  4.26769e-05|  4.26769e-05|  0.00%|from typing import Union, Callable, Optional
(call)|         1|  1.95503e-05|  1.95503e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
     5|         1|  4.19617e-05|  4.19617e-05|  0.00%|from collections import OrderedDict
(call)|         1|  3.91006e-05|  3.91006e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
     6|         0|            0|            0|  0.00%|
     7|         1|  0.000124216|  0.000124216|  0.00%|from .utilities_visualization import show_batch
(call)|         1|  2.28882e-05|  2.28882e-05|  0.00%|# <frozen importlib._bootstrap>:416 parent
(call)|         1|      10.3159|      10.3159|  2.81%|# <frozen importlib._bootstrap>:978 _find_and_load
(call)|         1|  2.24113e-05|  2.24113e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
     8|         1|  7.03335e-05|  7.03335e-05|  0.00%|from .namedtuple import DIST, MetricMiniBatch
(call)|         1|  2.74181e-05|  2.74181e-05|  0.00%|# <frozen importlib._bootstrap>:416 parent
(call)|         1|  1.97887e-05|  1.97887e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
     9|         1|  6.53267e-05|  6.53267e-05|  0.00%|from .utilities_neptune import log_dict_metrics
(call)|         1|  1.54972e-05|  1.54972e-05|  0.00%|# <frozen importlib._bootstrap>:416 parent
(call)|         1|  1.93119e-05|  1.93119e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
    10|         0|            0|            0|  0.00%|
    11|         0|            0|            0|  0.00%|
    12|        47|  0.000227928|  4.84954e-06|  0.00%|def are_broadcastable(a: torch.Tensor, b: torch.Tensor) -> bool:
    13|         0|            0|            0|  0.00%|    """ Return True if tensor are broadcastable to each other, False otherwise """
    14|       368|   0.00262642|  7.13701e-06|  0.00%|    return all((m == n) or (m == 1) or (n == 1) for m, n in zip(a.shape[::-1], b.shape[::-1]))
(call)|       161|   0.00107241|  6.66091e-06|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:14 <genexpr>
    15|         0|            0|            0|  0.00%|
    16|         0|            0|            0|  0.00%|
    17|        49|  0.000419617|  8.56361e-06|  0.00%|def sample_and_kl_diagonal_normal(posterior_mu: torch.Tensor,
    18|         1|   1.4782e-05|   1.4782e-05|  0.00%|                                  posterior_std: torch.Tensor,
    19|         1|  2.40803e-05|  2.40803e-05|  0.00%|                                  prior_mu: torch.Tensor,
    20|         1|  1.52588e-05|  1.52588e-05|  0.00%|                                  prior_std: torch.Tensor,
    21|         1|  1.45435e-05|  1.45435e-05|  0.00%|                                  noisy_sampling: bool,
    22|         1|  1.50204e-05|  1.50204e-05|  0.00%|                                  sample_from_prior: bool) -> DIST:
    23|         0|            0|            0|  0.00%|
    24|        48|   0.00101852|  2.12193e-05|  0.00%|    post_mu, post_std, pr_mu, pr_std = broadcast_all(posterior_mu, posterior_std, prior_mu, prior_std)
(call)|        48|    0.0171843|  0.000358005|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/utils.py:7 broadcast_all
    25|        48|  0.000279903|  5.83132e-06|  0.00%|    if sample_from_prior:
    26|         0|            0|            0|  0.00%|        # working with the prior
    27|         2|  0.000179291|  8.96454e-05|  0.00%|        sample = pr_mu + pr_std * torch.randn_like(pr_mu) if noisy_sampling else pr_mu
    28|         2|   7.4625e-05|  3.73125e-05|  0.00%|        kl = torch.zeros_like(pr_mu)
    29|         0|            0|            0|  0.00%|    else:
    30|         0|            0|            0|  0.00%|        # working with the posterior
    31|        46|   0.00583553|  0.000126859|  0.00%|        sample = post_mu + post_std * torch.randn_like(post_mu) if noisy_sampling else post_mu
    32|        46|   0.00976157|  0.000212208|  0.00%|        tmp = (post_std + pr_std) * (post_std - pr_std) + (post_mu - pr_mu).pow(2)
    33|        46|    0.0094943|  0.000206398|  0.00%|        kl = tmp / (2 * pr_std * pr_std) - post_std.log() + pr_std.log()
    34|         0|            0|            0|  0.00%|
    35|        48|   0.00120497|  2.51035e-05|  0.00%|    return DIST(sample=sample, kl=kl)
(call)|        48|  0.000630617|  1.31379e-05|  0.00%|# <string>_115:1 __new__
    36|         0|            0|            0|  0.00%|
    37|         0|            0|            0|  0.00%|
    38|        25|  0.000126123|  5.04494e-06|  0.00%|def _batch_mv(bmat, bvec):
    39|         0|            0|            0|  0.00%|    """ Performs a batched matrix-vector product, with compatible but different batch shapes.
    40|         0|            0|            0|  0.00%|
    41|         0|            0|            0|  0.00%|        bmat shape (*, n, n)
    42|         0|            0|            0|  0.00%|        bvec shape (*, n)
    43|         0|            0|            0|  0.00%|        result = MatrixVectorMultiplication(bmat,bvec) of shape (*, n)
    44|         0|            0|            0|  0.00%|
    45|         0|            0|            0|  0.00%|        * represents all the batched dimensions which might or might not be presents
    46|         0|            0|            0|  0.00%|
    47|         0|            0|            0|  0.00%|        Very simple procedure
    48|         0|            0|            0|  0.00%|        b = bvec.unsqueeze(-1) -> (*, n, 1)
    49|         0|            0|            0|  0.00%|        c = torch.matmul(bmat, b) = (*, n, n) x (*, n , 1) -> (*, n, 1)
    50|         0|            0|            0|  0.00%|        result = c.squeeze(-1) -> (*, n)
    51|         0|            0|            0|  0.00%|    """
    52|        24|    0.0315287|    0.0013137|  0.01%|    return torch.matmul(bmat, bvec.unsqueeze(-1)).squeeze(-1)
    53|         0|            0|            0|  0.00%|
    54|         0|            0|            0|  0.00%|
    55|        25|  0.000329494|  1.31798e-05|  0.00%|def sample_and_kl_multivariate_normal(posterior_mu: torch.Tensor,
    56|         1|  1.43051e-05|  1.43051e-05|  0.00%|                                      posterior_L_cov: torch.Tensor,
    57|         1|  3.26633e-05|  3.26633e-05|  0.00%|                                      prior_mu: torch.Tensor,
    58|         1|  1.50204e-05|  1.50204e-05|  0.00%|                                      prior_L_cov: torch.Tensor,
    59|         1|  1.45435e-05|  1.45435e-05|  0.00%|                                      noisy_sampling: bool,
    60|         1|  1.57356e-05|  1.57356e-05|  0.00%|                                      sample_from_prior: bool) -> DIST:
    61|         0|            0|            0|  0.00%|
    62|        24|  0.000543594|  2.26498e-05|  0.00%|    post_L, prior_L = broadcast_all(posterior_L_cov, prior_L_cov)  # (*, n, n)
(call)|        24|   0.00769663|  0.000320693|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/utils.py:7 broadcast_all
    63|        24|  0.000414133|  1.72555e-05|  0.00%|    post_mu, prior_mu = broadcast_all(posterior_mu, prior_mu)  # (*, n)
(call)|        24|   0.00507021|  0.000211259|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/distributions/utils.py:7 broadcast_all
    64|        24|  0.000230551|  9.60628e-06|  0.00%|    assert post_L.shape[-1] == post_L.shape[-2] == post_mu.shape[-1]  # number of grid points are the same
    65|        24|  0.000282526|  1.17719e-05|  0.00%|    assert post_L.shape[:-2] == post_mu.shape[:-1]  # batch_size is the same
    66|         0|            0|            0|  0.00%|
    67|        24|  0.000138283|  5.76178e-06|  0.00%|    if sample_from_prior:
    68|         0|            0|            0|  0.00%|        # working with the prior
    69|         1|  5.03063e-05|  5.03063e-05|  0.00%|        eps = torch.randn_like(prior_mu)
    70|         1|  8.53539e-05|  8.53539e-05|  0.00%|        sample = prior_mu + _batch_mv(prior_L, eps) if noisy_sampling else prior_mu  # size: *, n
(call)|         1|  0.000160456|  0.000160456|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:38 _batch_mv
    71|         1|  7.24792e-05|  7.24792e-05|  0.00%|        kl = torch.zeros_like(prior_mu[..., 0])  # size: *
    72|         0|            0|            0|  0.00%|    else:
    73|         0|            0|            0|  0.00%|        # working with the posterior
    74|        23|   0.00127625|  5.54893e-05|  0.00%|        eps = torch.randn_like(post_mu)
    75|        23|     0.001791|  7.78696e-05|  0.00%|        sample = post_mu + _batch_mv(post_L, eps) if noisy_sampling else post_mu
(call)|        23|    0.0314779|   0.00136861|  0.01%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:38 _batch_mv
    76|        23|   0.00115633|  5.02752e-05|  0.00%|        kl = kl_multivariate_normal0_normal1(mu0=post_mu, mu1=prior_mu, L_cov0=post_L, L_cov1=prior_L)
(call)|        23|      2.24685|     0.097689|  0.61%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:80 kl_multivariate_normal0_normal1
    77|        24|  0.000552654|  2.30273e-05|  0.00%|    return DIST(sample=sample, kl=kl)
(call)|        24|  0.000338316|  1.40965e-05|  0.00%|# <string>_115:1 __new__
    78|         0|            0|            0|  0.00%|
    79|         0|            0|            0|  0.00%|
    80|        24|  0.000204086|   8.5036e-06|  0.00%|def kl_multivariate_normal0_normal1(mu0: torch.Tensor,
    81|         1|  1.45435e-05|  1.45435e-05|  0.00%|                                    mu1: torch.Tensor,
    82|         1|  1.45435e-05|  1.45435e-05|  0.00%|                                    L_cov0: torch.Tensor,
    83|         1|  1.50204e-05|  1.50204e-05|  0.00%|                                    L_cov1: torch.Tensor) -> torch.Tensor:
    84|         0|            0|            0|  0.00%|    """
    85|         0|            0|            0|  0.00%|    Function that analytically computes the KL divergence between two MultivariateNormal distributions
    86|         0|            0|            0|  0.00%|    (see https://en.wikipedia.org/wiki/Multivariate_normal_distribution#Kullback%E2%80%93Leibler_divergence)
    87|         0|            0|            0|  0.00%|
    88|         0|            0|            0|  0.00%|    Each MultivariateNormal is defined in terms of its mean and the cholesky decomposition of the covariance matrix
    89|         0|            0|            0|  0.00%|    :param mu0: array with mean value of posterior, size (*, n)
    90|         0|            0|            0|  0.00%|    :param mu1: array with mean value of prior, size (*, n)
    91|         0|            0|            0|  0.00%|    :param L_cov0: lower triangular matrix with the decomposition on the covariance for the posterior, size (*, n, n)
    92|         0|            0|            0|  0.00%|    :param L_cov1: lower triangular matrix with the decomposition on the covariance for the prior, size (*, n, n)
    93|         0|            0|            0|  0.00%|    :return: kl: array with kl divergence between posterior and prior, size (*)
    94|         0|            0|            0|  0.00%|
    95|         0|            0|            0|  0.00%|    Note that n is the number of locations where the MultivariateNormal is evaluated,
    96|         0|            0|            0|  0.00%|    * represents all the batched dimensions which might or might not be presents
    97|         0|            0|            0|  0.00%|    """
    98|         0|            0|            0|  0.00%|
    99|        23|  0.000392199|  1.70521e-05|  0.00%|    assert are_broadcastable(mu0, mu1)  # (*, n)
(call)|        23|   0.00149608|  6.50468e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:12 are_broadcastable
   100|        23|  0.000349045|  1.51759e-05|  0.00%|    assert are_broadcastable(L_cov0, L_cov1)  # (*, n, n)
(call)|        23|   0.00134158|  5.83296e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:12 are_broadcastable
   101|        23|  0.000181675|  7.89891e-06|  0.00%|    n = L_cov0.shape[-1]
   102|         0|            0|            0|  0.00%|
   103|         0|            0|            0|  0.00%|    # Tr[cov1^(-1)cov0] = Tr[L L^T] = sum_of_element_wise_square(L)
   104|         0|            0|            0|  0.00%|    # where L = L1^(-1) L0 -> Solve trilinear problem: L1 L = L0
   105|        23|      2.07628|    0.0902731|  0.56%|    L = torch.triangular_solve(L_cov0, A=L_cov1, upper=False, transpose=False, unitriangular=False)[0]  # (*,n,n)
   106|        23|    0.0154862|  0.000673315|  0.00%|    trace_term = torch.sum(L.pow(2), dim=(-1, -2))  # (*)
   107|         0|            0|            0|  0.00%|    # print("trace_term",trace_term.shape, trace_term)
   108|         0|            0|            0|  0.00%|
   109|         0|            0|            0|  0.00%|    # x^T conv1^(-1) x = z^T z where z = L1^(-1) x -> solve trilinear problem L1 z = x
   110|        23|    0.0122137|  0.000531031|  0.00%|    dmu = (mu0 - mu1).unsqueeze(-1)  # (*,n,1)
   111|        23|     0.124758|   0.00542428|  0.03%|    z = torch.triangular_solve(dmu, A=L_cov1, upper=False, transpose=False, unitriangular=False)[0]  # (*,n,1)
   112|         0|            0|            0|  0.00%|    # Now z.t*z is the sum over both n_points and dimension
   113|        23|   0.00380731|  0.000165535|  0.00%|    square_term = z.pow(2).sum(dim=(-1, -2))  # (*)
   114|         0|            0|            0|  0.00%|    # print("square_term",square_term.shape, square_term)
   115|         0|            0|            0|  0.00%|
   116|         0|            0|            0|  0.00%|    # log[det(cov)]= log[det(L L^T)] = logdet(L) + logdet(L^T) = 2 logdet(L)
   117|         0|            0|            0|  0.00%|    # where logdet casn be computed as the sum of the diagonal elements
   118|        23|   0.00300169|  0.000130508|  0.00%|    logdet1 = torch.diagonal(L_cov1, dim1=-1, dim2=-2).log().sum(-1)
   119|        23|   0.00205874|  8.95106e-05|  0.00%|    logdet0 = torch.diagonal(L_cov0, dim1=-1, dim2=-2).log().sum(-1)
   120|        23|   0.00227952|  9.91096e-05|  0.00%|    logdet_term = 2 * (logdet1 - logdet0)  # (*)  factor of 2 b/c log[det(L L^T)]= 2 log[det(L)]
   121|         0|            0|            0|  0.00%|    # print("logdet_term",logdet_term.shape, logdet_term)
   122|         0|            0|            0|  0.00%|
   123|        23|   0.00301003|  0.000130871|  0.00%|    return 0.5 * (trace_term + square_term - n + logdet_term)
   124|         0|            0|            0|  0.00%|
   125|         0|            0|            0|  0.00%|
   126|         3|  8.82149e-05|   2.9405e-05|  0.00%|class Moving_Average_Calculator(object):
(call)|         1|  3.86238e-05|  3.86238e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:126 Moving_Average_Calculator
   127|         0|            0|            0|  0.00%|    """ Compute the moving average of a dictionary.
   128|         0|            0|            0|  0.00%|        Return the dictionary with the moving average up to that point
   129|         0|            0|            0|  0.00%|
   130|         0|            0|            0|  0.00%|        beta is the factor multiplying the moving average.
   131|         0|            0|            0|  0.00%|        Approximately we average the last 1/(1-beta) points.
   132|         0|            0|            0|  0.00%|        For example:
   133|         0|            0|            0|  0.00%|        beta = 0.9 -> 10 points
   134|         0|            0|            0|  0.00%|        beta = 0.99 -> 100 points
   135|         0|            0|            0|  0.00%|        The larger beta the longer the time average.
   136|         1|   3.8147e-06|   3.8147e-06|  0.00%|    """
   137|         0|            0|            0|  0.00%|
   138|         2|  1.16825e-05|  5.84126e-06|  0.00%|    def __init__(self, beta):
   139|         1|  7.86781e-06|  7.86781e-06|  0.00%|        super().__init__()
   140|         1|   6.4373e-06|   6.4373e-06|  0.00%|        self._bias = None
   141|         1|  8.10623e-06|  8.10623e-06|  0.00%|        self._steps = 0
   142|         1|  4.76837e-06|  4.76837e-06|  0.00%|        self._beta = beta
   143|         1|  6.91414e-06|  6.91414e-06|  0.00%|        self._dict_accumulate = {}
   144|         1|  7.15256e-06|  7.15256e-06|  0.00%|        self._dict_MA = {}
   145|         0|            0|            0|  0.00%|
   146|        21|  0.000184774|  8.79878e-06|  0.00%|    def accumulate(self, input_dict):
   147|        20|  0.000200748|  1.00374e-05|  0.00%|        self._steps += 1
   148|        20|  0.000213861|  1.06931e-05|  0.00%|        self._bias = 1 - self._beta ** self._steps
   149|         0|            0|            0|  0.00%|
   150|        40|  0.000250101|  6.25253e-06|  0.00%|        for key, value in input_dict.items():
   151|        20|  0.000102997|  5.14984e-06|  0.00%|            try:
   152|        20|  0.000138998|   6.9499e-06|  0.00%|                tmp = self._beta * self._dict_accumulate[key] + (1 - self._beta) * value
   153|        19|  8.60691e-05|  4.52995e-06|  0.00%|                self._dict_accumulate[key] = tmp
   154|         1|  5.00679e-06|  5.00679e-06|  0.00%|            except KeyError:
   155|         1|  5.96046e-06|  5.96046e-06|  0.00%|                self._dict_accumulate[key] = (1 - self._beta) * value
   156|        20|  0.000148773|  7.43866e-06|  0.00%|            self._dict_MA[key] = self._dict_accumulate[key] / self._bias
   157|        20|  7.36713e-05|  3.68357e-06|  0.00%|        return self._dict_MA
   158|         0|            0|            0|  0.00%|
   159|         0|            0|            0|  0.00%|
   160|         3|  8.08239e-05|  2.69413e-05|  0.00%|class Accumulator(object):
(call)|         1|   8.9407e-05|   8.9407e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:160 Accumulator
   161|         1|  4.05312e-06|  4.05312e-06|  0.00%|    """ accumulate a tuple or dictionary into a dictionary """
   162|         0|            0|            0|  0.00%|
   163|         7|  4.14848e-05|   5.9264e-06|  0.00%|    def __init__(self):
   164|         6|  4.05312e-05|  6.75519e-06|  0.00%|        super().__init__()
   165|         6|   2.7895e-05|  4.64916e-06|  0.00%|        self._counter = 0
   166|         6|  2.98023e-05|  4.96705e-06|  0.00%|        self._dict_accumulate = OrderedDict()
   167|         0|            0|            0|  0.00%|
   168|       400|   0.00106192|  2.65479e-06|  0.00%|    def _accumulate_key_value(self, key, value, counter_increment):
   169|       399|   0.00152373|  3.81888e-06|  0.00%|        if isinstance(value, torch.Tensor):
   170|        21|   0.00734258|  0.000349647|  0.00%|            x = value.detach().item() * counter_increment
   171|       378|   0.00143099|  3.78568e-06|  0.00%|        elif isinstance(value, float):
   172|       378|   0.00129271|  3.41986e-06|  0.00%|            x = value * counter_increment
   173|         0|            0|            0|  0.00%|        else:
   174|         0|            0|            0|  0.00%|            raise Exception
   175|       399|   0.00183654|  4.60285e-06|  0.00%|        self._dict_accumulate[key] = x + self._dict_accumulate.get(key, 0)
   176|         0|            0|            0|  0.00%|
   177|        22|  0.000140667|  6.39395e-06|  0.00%|    def accumulate(self, source: Union[tuple, dict], counter_increment: int = 1):
(call)|         1|   2.7895e-05|   2.7895e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
   178|        21|  0.000145435|  6.92549e-06|  0.00%|        self._counter += counter_increment
   179|         0|            0|            0|  0.00%|
   180|        21|  0.000130653|  6.22159e-06|  0.00%|        if isinstance(source, tuple):
   181|       420|   0.00146532|  3.48886e-06|  0.00%|            for key in source._fields:
   182|       399|   0.00153875|  3.85653e-06|  0.00%|                value = getattr(source, key)
   183|       399|   0.00421309|  1.05591e-05|  0.00%|                self._accumulate_key_value(key, value, counter_increment)
(call)|       399|    0.0144832|  3.62988e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:168 _accumulate_key_value
   184|         0|            0|            0|  0.00%|        else:
   185|         0|            0|            0|  0.00%|            for key, value in source.items():
   186|         0|            0|            0|  0.00%|                self._accumulate_key_value(key, value, counter_increment)
   187|         0|            0|            0|  0.00%|
   188|         7|  3.76701e-05|  5.38145e-06|  0.00%|    def get_average(self):
   189|         6|  0.000130653|  2.17756e-05|  0.00%|        tmp = self._dict_accumulate.copy()
   190|       120|  0.000432014|  3.60012e-06|  0.00%|        for k, v in self._dict_accumulate.items():
   191|       114|  0.000377655|  3.31276e-06|  0.00%|            tmp[k] = v/self._counter
   192|         6|  1.83582e-05|  3.05971e-06|  0.00%|        return tmp
   193|         0|            0|            0|  0.00%|
   194|         0|            0|            0|  0.00%|
   195|         3|  8.70228e-05|  2.90076e-05|  0.00%|class ConditionalRandomCrop(object):
(call)|         1|  0.000279188|  0.000279188|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:195 ConditionalRandomCrop
   196|         0|            0|            0|  0.00%|    """ Crop a torch Tensor at random locations to obtain output of given size.
   197|         1|  4.52995e-06|  4.52995e-06|  0.00%|        The random crop is accepted only if it is inside the Region Of Interest (ROI) """
   198|         0|            0|            0|  0.00%|
   199|         3|  3.29018e-05|  1.09673e-05|  0.00%|    def __init__(self, desired_w, desired_h, min_roi_fraction: float = 0.0, n_crops_per_image: int = 1):
   200|         2|  2.86102e-05|  1.43051e-05|  0.00%|        super().__init__()
   201|         2|  1.28746e-05|   6.4373e-06|  0.00%|        self.desired_w = desired_w
   202|         2|  9.53674e-06|  4.76837e-06|  0.00%|        self.desired_h = desired_h
   203|         2|  8.82149e-06|  4.41074e-06|  0.00%|        self.min_roi_fraction = min_roi_fraction
   204|         2|  9.29832e-06|  4.64916e-06|  0.00%|        self.desired_area = desired_w * desired_h
   205|         2|  8.82149e-06|  4.41074e-06|  0.00%|        self.n_crops_per_image = n_crops_per_image
   206|         0|            0|            0|  0.00%|
   207|      4269|    0.0147827|  3.46279e-06|  0.00%|    @staticmethod
   208|         1|  7.15256e-06|  7.15256e-06|  0.00%|    def get_smallest_corner_for_crop(w_raw: int, h_raw: int, w_desired: int, h_desired: int):
   209|      4268|    0.0167453|  3.92346e-06|  0.00%|        assert w_desired <= w_raw
   210|      4268|    0.0159268|  3.73169e-06|  0.00%|        assert h_desired <= h_raw
   211|         0|            0|            0|  0.00%|
   212|      4268|    0.0157993|   3.7018e-06|  0.00%|        if w_raw == w_desired and h_raw == h_desired:
   213|         0|            0|            0|  0.00%|            return 0, 0
   214|         0|            0|            0|  0.00%|        else:
   215|      4268|    0.0900698|  2.11035e-05|  0.02%|            i = torch.randint(low=0, high=w_raw - w_desired + 1, size=[1]).item()
   216|      4268|    0.0658071|  1.54187e-05|  0.02%|            j = torch.randint(low=0, high=h_raw - h_desired + 1, size=[1]).item()
   217|      4268|    0.0213165|   4.9945e-06|  0.01%|            return i, j
   218|         0|            0|            0|  0.00%|
   219|      2569|    0.0112469|  4.37794e-06|  0.00%|    def get_index(self,
   220|         0|            0|            0|  0.00%|                  img: torch.Tensor,
   221|         0|            0|            0|  0.00%|                  roi_mask: Optional[torch.Tensor] = None,
   222|         0|            0|            0|  0.00%|                  cum_sum_roi_mask: Optional[torch.Tensor] = None,
   223|         1|   3.6478e-05|   3.6478e-05|  0.00%|                  n_crops_per_image: Optional[int] = None):
(call)|         3|  7.36713e-05|  2.45571e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
   224|         0|            0|            0|  0.00%|        """ img.shape: *,c,w,h where * might or might not be present
   225|         0|            0|            0|  0.00%|            roi_mask:  *,1,w,h where * might or might not be present
   226|         0|            0|            0|  0.00%|            cum_sum_roi_mask: *,1,w,h where * might or might not be present
   227|         0|            0|            0|  0.00%|
   228|         0|            0|            0|  0.00%|            return a list of images
   229|         0|            0|            0|  0.00%|        """
   230|      2569|    0.0133429|  5.19379e-06|  0.00%|        n_crops_per_image = self.n_crops_per_image if n_crops_per_image is None else n_crops_per_image
   231|         0|            0|            0|  0.00%|
   232|      2569|    0.0127237|  4.95278e-06|  0.00%|        if roi_mask is not None and cum_sum_roi_mask is not None:
   233|         0|            0|            0|  0.00%|            raise Exception("Only one between roi_mask and cum_sum_roi_mask can be specified")
   234|         0|            0|            0|  0.00%|
   235|      2569|    0.0157235|  6.12046e-06|  0.00%|        if len(img.shape) == 3:
   236|      2568|    0.0330842|  1.28832e-05|  0.01%|            img = img.unsqueeze(0)
   237|      2569|    0.0162179|  6.31294e-06|  0.00%|        if cum_sum_roi_mask is not None and len(cum_sum_roi_mask.shape) == 3:
   238|      2568|    0.0214155|  8.33936e-06|  0.01%|            cum_sum_roi_mask = cum_sum_roi_mask.unsqueeze(0)
   239|      2569|    0.0139832|  5.44307e-06|  0.00%|        if roi_mask is not None and len(roi_mask.shape) == 3:
   240|         0|            0|            0|  0.00%|            roi_mask = roi_mask.unsqueeze(0)
   241|         0|            0|            0|  0.00%|
   242|      2569|    0.0143032|  5.56762e-06|  0.00%|        assert len(img.shape) == 4
   243|      2569|    0.0126982|  4.94285e-06|  0.00%|        assert (roi_mask is None or len(roi_mask.shape) == 4)
   244|      2569|    0.0138395|  5.38711e-06|  0.00%|        assert (cum_sum_roi_mask is None or len(cum_sum_roi_mask.shape) == 4)
   245|         0|            0|            0|  0.00%|
   246|      2569|    0.0346625|  1.34926e-05|  0.01%|        with torch.no_grad():
(call)|      2569|      0.02917|  1.13546e-05|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/grad_mode.py:65 __enter__
   247|         0|            0|            0|  0.00%|
   248|      2569|    0.0135949|  5.29189e-06|  0.00%|            bij_list = []
   249|      5138|    0.0480878|  9.35925e-06|  0.01%|            for b in range(img.shape[0]):
(call)|      2569|    0.0765829|  2.98104e-05|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/grad_mode.py:69 __exit__
   250|      5201|    0.0249169|  4.79079e-06|  0.01%|                for n in range(n_crops_per_image):
   251|      2632|    0.0121286|  4.60813e-06|  0.00%|                    fraction = 0
   252|      6900|    0.0335381|  4.86059e-06|  0.01%|                    while fraction < self.min_roi_fraction:
(call)|        85|   0.00241017|   2.8355e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/tensor.py:25 wrapped
   253|      4268|    0.0403953|  9.46468e-06|  0.01%|                        i, j = self.get_smallest_corner_for_crop(w_raw=img[b].shape[-2],
   254|      4268|    0.0360513|  8.44688e-06|  0.01%|                                                                 h_raw=img[b].shape[-1],
   255|      4268|    0.0210598|  4.93434e-06|  0.01%|                                                                 w_desired=self.desired_w,
   256|      4268|      0.05955|  1.39527e-05|  0.02%|                                                                 h_desired=self.desired_h)
(call)|      4268|     0.240441|  5.63358e-05|  0.07%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:207 get_smallest_corner_for_crop
   257|         0|            0|            0|  0.00%|
   258|      4268|    0.0198574|  4.65263e-06|  0.01%|                        if cum_sum_roi_mask is not None:
   259|      4183|    0.0747337|  1.78661e-05|  0.02%|                            term1 = cum_sum_roi_mask[b, 0, i + self.desired_w - 1, j + self.desired_h - 1].item()
   260|      4183|    0.0666349|  1.59299e-05|  0.02%|                            term2 = 0 if i < 1 else cum_sum_roi_mask[b, 0, i - 1, j + self.desired_h - 1].item()
   261|      4183|    0.0624795|  1.49365e-05|  0.02%|                            term3 = 0 if j < 1 else cum_sum_roi_mask[b, 0, i + self.desired_w - 1, j - 1].item()
   262|      4183|    0.0613563|   1.4668e-05|  0.02%|                            term4 = 0 if (i < 1 or j < 1) else cum_sum_roi_mask[b, 0, i - 1, j - 1].item()
   263|      4183|    0.0247386|  5.91407e-06|  0.01%|                            fraction = float(term1 - term2 - term3 + term4) / self.desired_area
   264|        85|  0.000416517|   4.9002e-06|  0.00%|                        elif roi_mask is not None:
   265|        85|  0.000452042|  5.31814e-06|  0.00%|                            fraction = roi_mask[b, 0, i:i+self.desired_w,
   266|        85|   0.00632143|  7.43698e-05|  0.00%|                                       j:j+self.desired_h].sum().float()/self.desired_area
   267|         0|            0|            0|  0.00%|                        else:
   268|         0|            0|            0|  0.00%|                            fraction = 1.0
   269|         0|            0|            0|  0.00%|
   270|      2632|    0.0123084|  4.67643e-06|  0.00%|                    bij_list.append([b, i, j])
   271|      2569|    0.0110004|  4.28198e-06|  0.00%|        return bij_list
   272|         0|            0|            0|  0.00%|
   273|        23|  0.000133753|  5.81534e-06|  0.00%|    def collate_crops_from_list(self, img: torch.Tensor, bij_list: list):
   274|      2698|    0.0878222|  3.25509e-05|  0.02%|        return torch.stack([img[b, :, i:i+self.desired_w, j:j+self.desired_h] for b, i, j in bij_list], dim=-4)
(call)|        22|    0.0324485|   0.00147493|  0.01%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:274 <listcomp>
   275|         0|            0|            0|  0.00%|
   276|         1|  9.53674e-06|  9.53674e-06|  0.00%|    def crop(self,
   277|         0|            0|            0|  0.00%|             img: torch.Tensor,
   278|         0|            0|            0|  0.00%|             roi_mask: Optional[torch.Tensor] = None,
   279|         0|            0|            0|  0.00%|             cum_sum_roi_mask: Optional[torch.Tensor] = None,
   280|         1|  4.91142e-05|  4.91142e-05|  0.00%|             n_crops_per_image: Optional[int] = None):
(call)|         3|  6.38962e-05|  2.12987e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
   281|         0|            0|            0|  0.00%|
   282|         1|  5.96046e-06|  5.96046e-06|  0.00%|        n_crops_per_image = self.n_crops_per_image if n_crops_per_image is None else n_crops_per_image
   283|         1|  2.40803e-05|  2.40803e-05|  0.00%|        bij_list = self.get_index(img, roi_mask, cum_sum_roi_mask, n_crops_per_image)
(call)|         1|    0.0223632|    0.0223632|  0.01%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:219 get_index
   284|         1|  3.09944e-05|  3.09944e-05|  0.00%|        return self.collate_crops_from_list(img, bij_list)
(call)|         1|   0.00208282|   0.00208282|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:273 collate_crops_from_list
   285|         0|            0|            0|  0.00%|
   286|         0|            0|            0|  0.00%|
   287|         3|  9.77516e-05|  3.25839e-05|  0.00%|class SpecialDataSet(object):
(call)|         1|  0.000843048|  0.000843048|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:287 SpecialDataSet
   288|         2|  2.14577e-05|  1.07288e-05|  0.00%|    def __init__(self,
   289|         0|            0|            0|  0.00%|                 img: torch.Tensor,
   290|         0|            0|            0|  0.00%|                 roi_mask: Optional[torch.Tensor] = None,
   291|         0|            0|            0|  0.00%|                 labels: Optional[torch.Tensor] = None,
   292|         0|            0|            0|  0.00%|                 data_augmentation: Optional[ConditionalRandomCrop] = None,
   293|         0|            0|            0|  0.00%|                 store_in_cuda: bool = False,
   294|         0|            0|            0|  0.00%|                 drop_last=False,
   295|         0|            0|            0|  0.00%|                 batch_size=4,
   296|         1|   3.6478e-05|   3.6478e-05|  0.00%|                 shuffle=False):
(call)|         3|  0.000743628|  0.000247876|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
   297|         0|            0|            0|  0.00%|        """ :param device: 'cpu' or 'cuda:0'
   298|         0|            0|            0|  0.00%|            Dataset returns random crops of a given size inside the Region Of Interest.
   299|         0|            0|            0|  0.00%|            The function getitem returns imgs, labels and indeces
   300|         0|            0|            0|  0.00%|        """
   301|         2|  4.60148e-05|  2.30074e-05|  0.00%|        assert len(img.shape) == 4
   302|         2|  1.16825e-05|  5.84126e-06|  0.00%|        assert (roi_mask is None or len(roi_mask.shape) == 4)
   303|         2|  9.77516e-06|  4.88758e-06|  0.00%|        assert (labels is None or labels.shape[0] == img.shape[0])
   304|         0|            0|            0|  0.00%|
   305|         2|  7.15256e-05|  3.57628e-05|  0.00%|        storing_device = torch.device('cuda') if store_in_cuda else torch.device('cpu')
   306|         0|            0|            0|  0.00%|
   307|         2|   1.4782e-05|  7.39098e-06|  0.00%|        self.drop_last = drop_last
   308|         2|  1.07288e-05|  5.36442e-06|  0.00%|        self.batch_size = batch_size
   309|         2|  2.55108e-05|  1.27554e-05|  0.00%|        self.shuffle = shuffle
   310|         0|            0|            0|  0.00%|
   311|         0|            0|            0|  0.00%|        # Expand the dataset so that I can do one crop per image
   312|         2|  9.29832e-06|  4.64916e-06|  0.00%|        if data_augmentation is None:
   313|         1|  2.24113e-05|  2.24113e-05|  0.00%|            new_batch_size = img.shape[0]
   314|         1|  5.72205e-06|  5.72205e-06|  0.00%|            self.data_augmentaion = None
   315|         0|            0|            0|  0.00%|        else:
   316|         1|  7.62939e-06|  7.62939e-06|  0.00%|            new_batch_size = img.shape[0] * data_augmentation.n_crops_per_image
   317|         1|  6.67572e-06|  6.67572e-06|  0.00%|            self.data_augmentaion = data_augmentation
   318|         0|            0|            0|  0.00%|
   319|         2|   1.0252e-05|    5.126e-06|  0.00%|        if store_in_cuda:
   320|         0|            0|            0|  0.00%|            self.img = img.cuda().detach().expand(new_batch_size, -1, -1, -1)
   321|         0|            0|            0|  0.00%|        else:
   322|         2|   0.00130653|  0.000653267|  0.00%|            self.img = img.cpu().detach().expand(new_batch_size, -1, -1, -1)
   323|         0|            0|            0|  0.00%|
   324|         2|  2.12193e-05|  1.06096e-05|  0.00%|        if labels is None:
   325|         2|  0.000284672|  0.000142336|  0.00%|            self.labels = -1*torch.ones(self.img.shape[0], device=storing_device).detach()
   326|         0|            0|            0|  0.00%|        else:
   327|         0|            0|            0|  0.00%|            self.labels = labels.to(storing_device).detach()
   328|         2|  4.88758e-05|  2.44379e-05|  0.00%|        self.labels = self.labels.expand(new_batch_size)
   329|         0|            0|            0|  0.00%|
   330|         2|  1.21593e-05|  6.07967e-06|  0.00%|        if roi_mask is None:
   331|         1|   1.0252e-05|   1.0252e-05|  0.00%|            self.roi_mask = None
   332|         1|  1.04904e-05|  1.04904e-05|  0.00%|            self.cum_roi_mask = None
   333|         0|            0|            0|  0.00%|        else:
   334|         1|  0.000107765|  0.000107765|  0.00%|            self.roi_mask = roi_mask.to(storing_device).detach().expand(new_batch_size, -1, -1, -1)
   335|         1|    0.0640249|    0.0640249|  0.02%|            self.cum_roi_mask = roi_mask.to(storing_device).detach().cumsum(dim=-1).cumsum(
   336|         1|     0.220805|     0.220805|  0.06%|                dim=-2).expand(new_batch_size, -1, -1, -1)
   337|         0|            0|            0|  0.00%|
   338|        22|  6.77109e-05|  3.07777e-06|  0.00%|    def __len__(self):
   339|        21|  0.000193119|  9.19615e-06|  0.00%|        return self.img.shape[0]
   340|         0|            0|            0|  0.00%|
   341|        24|  0.000156879|  6.53664e-06|  0.00%|    def __getitem__(self, index: torch.Tensor):
   342|        23|  0.000204563|  8.89405e-06|  0.00%|        assert isinstance(index, torch.Tensor)
   343|         0|            0|            0|  0.00%|
   344|        23|  0.000152826|  6.64462e-06|  0.00%|        if self.data_augmentaion is None:
   345|         2|  0.000559568|  0.000279784|  0.00%|            return self.img[index], self.labels[index], index
   346|         0|            0|            0|  0.00%|        else:
   347|        21|   8.7738e-05|    4.178e-06|  0.00%|            bij_list = []
   348|      2589|    0.0325058|  1.25553e-05|  0.01%|            for i in index:
(call)|        21|  0.000964403|   4.5924e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/tensor.py:454 __iter__
(call)|      2568|    0.0279961|  1.09019e-05|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torch/tensor.py:468 <lambda>
   349|      2568|    0.0244942|  9.53823e-06|  0.01%|                bij_list += self.data_augmentaion.get_index(img=self.img[i],
   350|      2568|    0.0203948|   7.9419e-06|  0.01%|                                                            cum_sum_roi_mask=self.cum_roi_mask[i],
   351|      2568|    0.0433025|  1.68624e-05|  0.01%|                                                            n_crops_per_image=1)
(call)|      2568|       1.1691|  0.000455259|  0.32%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:219 get_index
   352|        21|     0.001863|  8.87144e-05|  0.00%|            return self.data_augmentaion.collate_crops_from_list(self.img, bij_list), self.labels[index], index
(call)|        21|    0.0858657|   0.00408884|  0.02%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:273 collate_crops_from_list
   353|         0|            0|            0|  0.00%|
   354|         7|  4.12464e-05|  5.89234e-06|  0.00%|    def __iter__(self, batch_size=None, drop_last=None, shuffle=None):
   355|         0|            0|            0|  0.00%|        # If not specified use defaults
   356|         6|  6.65188e-05|  1.10865e-05|  0.00%|        batch_size = self.batch_size if batch_size is None else batch_size
   357|         6|  2.76566e-05|  4.60943e-06|  0.00%|        drop_last = self.drop_last if drop_last is None else drop_last
   358|         6|  2.67029e-05|  4.45048e-06|  0.00%|        shuffle = self.shuffle if shuffle is None else shuffle
   359|         0|            0|            0|  0.00%|
   360|         0|            0|            0|  0.00%|        # Actual generation of iterator
   361|         6|  0.000125647|  2.09411e-05|  0.00%|        n_max = max(1, self.__len__() - (self.__len__() % batch_size) if drop_last else self.__len__())
(call)|        11|  0.000172615|  1.56923e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:338 __len__
   362|         6|  0.000945091|  0.000157515|  0.00%|        index = torch.randperm(self.__len__()).long() if shuffle else torch.arange(self.__len__()).long()
(call)|         6|  3.40939e-05|  5.68231e-06|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:338 __len__
   363|        27|  0.000219345|  8.12389e-06|  0.00%|        for pos in range(0, n_max, batch_size):
   364|        42|   0.00159454|  3.79653e-05|  0.00%|            yield self.__getitem__(index[pos:pos + batch_size])
(call)|        21|      1.39269|    0.0663184|  0.38%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:341 __getitem__
   365|         0|            0|            0|  0.00%|
   366|         1|   6.4373e-06|   6.4373e-06|  0.00%|    def load(self, batch_size=None, index=None):
   367|         0|            0|            0|  0.00%|        if (batch_size is None and index is None) or (batch_size is not None and index is not None):
   368|         0|            0|            0|  0.00%|            raise Exception("Only one between batch_size and index must be specified")
   369|         0|            0|            0|  0.00%|        index = torch.randint(low=0, high=self.__len__(), size=(batch_size,)).long() if index is None else index
   370|         0|            0|            0|  0.00%|        return self.__getitem__(index)
   371|         0|            0|            0|  0.00%|
   372|         3|  2.95639e-05|  9.85463e-06|  0.00%|    def check_batch(self, batch_size: int = 8):
   373|         2|   0.00013423|  6.71148e-05|  0.00%|        print("Dataset lenght:", self.__len__())
(call)|         2|  2.59876e-05|  1.29938e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:338 __len__
(call)|         8|   0.00385904|   0.00048238|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/streams/stdstream_uploader.py:30 write
   374|         2|  0.000118017|  5.90086e-05|  0.00%|        print("img.shape", self.img.shape)
(call)|         8|   0.00224543|  0.000280678|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/streams/stdstream_uploader.py:30 write
   375|         2|  9.84669e-05|  4.92334e-05|  0.00%|        print("img.dtype", self.img.dtype)
(call)|         8|   0.00224876|  0.000281096|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/streams/stdstream_uploader.py:30 write
   376|         2|  0.000123501|  6.17504e-05|  0.00%|        print("img.device", self.img.device)
(call)|         8|   0.00220728|   0.00027591|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/streams/stdstream_uploader.py:30 write
   377|         2|   0.00823092|   0.00411546|  0.00%|        index = torch.randperm(self.__len__(), dtype=torch.long, device=self.img.device, requires_grad=False)
(call)|         2|  1.97887e-05|  9.89437e-06|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:338 __len__
   378|         0|            0|            0|  0.00%|        # grab one minibatch
   379|         2|  0.000140667|  7.03335e-05|  0.00%|        img, labels, index = self.__getitem__(index[:batch_size])
(call)|         2|    0.0149589|   0.00747943|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:341 __getitem__
   380|         2|  0.000163555|  8.17776e-05|  0.00%|        print("MINIBATCH: img.shapes labels.shape, index.shape ->", img.shape, labels.shape, index.shape)
(call)|        16|   0.00281286|  0.000175804|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/streams/stdstream_uploader.py:30 write
   381|         2|   0.00435853|   0.00217927|  0.00%|        print("MINIBATCH: min and max of minibatch", torch.min(img), torch.max(img))
(call)|        12|   0.00268507|  0.000223756|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/streams/stdstream_uploader.py:30 write
(call)|         4|   0.00562906|   0.00140727|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/tensor.py:157 __repr__
   382|         2|  7.08103e-05|  3.54052e-05|  0.00%|        return show_batch(img, n_col=4, n_padding=4, pad_value=1, figsize=(24, 24))
(call)|         2|      2.53235|      1.26618|  0.69%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_visualization.py:166 show_batch
   383|         0|            0|            0|  0.00%|
   384|         0|            0|            0|  0.00%|
   385|         6|   4.8399e-05|   8.0665e-06|  0.00%|def process_one_epoch(model: torch.nn.Module,
   386|         0|            0|            0|  0.00%|                      dataloader: SpecialDataSet,
   387|         0|            0|            0|  0.00%|                      optimizer: Optional[torch.optim.Optimizer] = None,
   388|         0|            0|            0|  0.00%|                      weight_clipper: Optional[Callable[[None], None]] = None,
   389|         0|            0|            0|  0.00%|                      verbose: bool = False,
   390|         0|            0|            0|  0.00%|                      neptune_experiment: Optional[neptune.experiments.Experiment] = None,
   391|         1|  0.000179529|  0.000179529|  0.00%|                      neptune_prefix: Optional[str] = None) -> MetricMiniBatch:
(call)|         4|    0.0017786|  0.000444651|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
(call)|         1|  0.000603676|  0.000603676|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:746 __getitem__
   392|         0|            0|            0|  0.00%|    """ return a tuple with all the metrics averaged over a epoch """
   393|         6|  0.000112057|  1.86761e-05|  0.00%|    metric_accumulator = Accumulator()
(call)|         6|  0.000131369|  2.18948e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:163 __init__
   394|         0|            0|            0|  0.00%|
   395|        27|   0.00216365|  8.01351e-05|  0.00%|    for i, (imgs, labels, index) in enumerate(dataloader):
(call)|        27|      1.39593|    0.0517011|  0.38%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:354 __iter__
   396|         0|            0|            0|  0.00%|
   397|         0|            0|            0|  0.00%|        # Put data in GPU if available
   398|        21|  0.000725269|  3.45366e-05|  0.00%|        if torch.cuda.is_available() and (imgs.device == torch.device('cpu')):
(call)|        21|  0.000734806|  3.49908e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/cuda/__init__.py:33 is_available
   399|        21|      3.77044|     0.179545|  1.03%|            imgs = imgs.cuda()
   400|         0|            0|            0|  0.00%|
   401|        21|   0.00889754|  0.000423693|  0.00%|        metrics = model.forward(imgs_in=imgs).metrics  # the forward function returns metric and other stuff
(call)|        21|      18.4929|     0.880615|  5.03%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/vae_model.py:632 forward
   402|        21|  0.000284195|  1.35331e-05|  0.00%|        if verbose:
   403|         5|  0.000407219|  8.14438e-05|  0.00%|            print("i = %3d train_loss=%.5f" % (i, metrics.loss))
(call)|        10|   0.00920081|  0.000920081|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/streams/stdstream_uploader.py:30 write
   404|         0|            0|            0|  0.00%|
   405|         0|            0|            0|  0.00%|        # Accumulate metrics over an epoch
   406|        21|  0.000396729|  1.88918e-05|  0.00%|        with torch.no_grad():
(call)|        21|  0.000379324|   1.8063e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/grad_mode.py:65 __enter__
   407|        21|  0.000870705|  4.14621e-05|  0.00%|            metric_accumulator.accumulate(source=metrics, counter_increment=len(index))
(call)|        21|  0.000347137|  1.65304e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/tensor.py:449 __len__
(call)|        21|    0.0221004|    0.0010524|  0.01%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:177 accumulate
(call)|        21|   0.00075841|  3.61147e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/grad_mode.py:69 __exit__
   408|         0|            0|            0|  0.00%|
   409|         0|            0|            0|  0.00%|        # Only if training I apply backward
   410|        21|  0.000136852|  6.51677e-06|  0.00%|        if model.training:
   411|        20|  0.000403404|  2.01702e-05|  0.00%|            optimizer.zero_grad()
(call)|        20|      0.12627|    0.0063135|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/torch/optim/optimizer.py:159 zero_grad
   412|        20|  0.000725746|  3.62873e-05|  0.00%|            metrics.loss.backward()  # do back_prop and compute all the gradients
(call)|        20|      22.5021|       1.1251|  6.12%|# /opt/anaconda3/lib/python3.7/site-packages/torch/tensor.py:170 backward
   413|        20|  0.000746012|  3.73006e-05|  0.00%|            optimizer.step()  # update the parameters
(call)|        20|      2.09786|     0.104893|  0.57%|# /opt/anaconda3/lib/python3.7/site-packages/torch/optim/lr_scheduler.py:62 wrapper
   414|         0|            0|            0|  0.00%|
   415|         0|            0|            0|  0.00%|            # apply the weight clipper
   416|        20|  0.000153542|  7.67708e-06|  0.00%|            if weight_clipper is not None:
   417|         0|            0|            0|  0.00%|                model.__self__.apply(weight_clipper)
   418|         0|            0|            0|  0.00%|
   419|         0|            0|            0|  0.00%|        # Delete stuff from GPU
   420|         0|            0|            0|  0.00%|        # del imgs
   421|         0|            0|            0|  0.00%|        # del labels
   422|         0|            0|            0|  0.00%|        # del index
   423|         0|            0|            0|  0.00%|        # del metrics
   424|         0|            0|            0|  0.00%|        # torch.cuda.empty_cache()
   425|         0|            0|            0|  0.00%|
   426|         0|            0|            0|  0.00%|    # At the end of the loop compute the average of the metrics
   427|         6|  0.000134945|  2.24908e-05|  0.00%|    with torch.no_grad():
(call)|         6|  8.84533e-05|  1.47422e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/grad_mode.py:65 __enter__
   428|         6|  0.000119686|  1.99477e-05|  0.00%|        metric_one_epoch = metric_accumulator.get_average()
(call)|         6|  0.000990868|  0.000165145|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:188 get_average
   429|         6|  3.05176e-05|  5.08626e-06|  0.00%|        if neptune_experiment is not None:
   430|         6|  3.05176e-05|  5.08626e-06|  0.00%|            log_dict_metrics(metrics=metric_one_epoch,
   431|         6|  2.81334e-05|   4.6889e-06|  0.00%|                             prefix=neptune_prefix,
   432|         6|   4.3869e-05|   7.3115e-06|  0.00%|                             experiment=neptune_experiment,
   433|         6|  0.000166655|  2.77758e-05|  0.00%|                             verbose=False)
(call)|         6|      9.89134|      1.64856|  2.69%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_neptune.py:81 log_dict_metrics
   434|         6|  0.000208855|  3.48091e-05|  0.00%|        return MetricMiniBatch._make(metric_one_epoch.values())
(call)|         6|  0.000175476|   2.9246e-05|  0.00%|# /opt/anaconda3/lib/python3.7/collections/__init__.py:403 _make
(call)|         6|  0.000249863|  4.16438e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/grad_mode.py:69 __exit__
File: <frozen importlib._bootstrap_external>
File duration: 7.07932s (1.93%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         0|            0|            0|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         0|            0|            0|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         0|            0|            0|  0.00%|
     9|         0|            0|            0|  0.00%|
    10|         0|            0|            0|  0.00%|
    11|         0|            0|            0|  0.00%|
    12|         0|            0|            0|  0.00%|
    13|         0|            0|            0|  0.00%|
    14|         0|            0|            0|  0.00%|
    15|         0|            0|            0|  0.00%|
    16|         0|            0|            0|  0.00%|
    17|         0|            0|            0|  0.00%|
    18|         0|            0|            0|  0.00%|
    19|         0|            0|            0|  0.00%|
    20|         0|            0|            0|  0.00%|
    21|         0|            0|            0|  0.00%|
    22|         0|            0|            0|  0.00%|
    23|         0|            0|            0|  0.00%|
    24|         0|            0|            0|  0.00%|
    25|         0|            0|            0|  0.00%|
    26|         0|            0|            0|  0.00%|
    27|         0|            0|            0|  0.00%|
    28|         0|            0|            0|  0.00%|
    29|         0|            0|            0|  0.00%|
    30|         0|            0|            0|  0.00%|
    31|         0|            0|            0|  0.00%|
    32|         0|            0|            0|  0.00%|
    33|         0|            0|            0|  0.00%|
    34|         0|            0|            0|  0.00%|
    35|         0|            0|            0|  0.00%|
    36|         0|            0|            0|  0.00%|
    37|         0|            0|            0|  0.00%|
    38|         0|            0|            0|  0.00%|
    39|         0|            0|            0|  0.00%|
    40|      5075|    0.0129633|  2.55434e-06|  0.00%|
    41|         0|            0|            0|  0.00%|
    42|      5075|    0.0171163|  3.37267e-06|  0.00%|
    43|         0|            0|            0|  0.00%|
    44|         0|            0|            0|  0.00%|
    45|         0|            0|            0|  0.00%|
    46|        33|  7.24792e-05|  2.19634e-06|  0.00%|
    47|         0|            0|            0|  0.00%|
    48|        33|  0.000142097|  4.30598e-06|  0.00%|
    49|         0|            0|            0|  0.00%|
    50|         0|            0|            0|  0.00%|
    51|      8554|    0.0196512|  2.29731e-06|  0.01%|
    52|         0|            0|            0|  0.00%|
    53|      8554|    0.0346344|  4.04891e-06|  0.01%|
    54|         0|            0|            0|  0.00%|
    55|         0|            0|            0|  0.00%|
    56|     31239|    0.0795841|  2.54759e-06|  0.02%|
    57|         0|            0|            0|  0.00%|
    58|    161905|      0.50073|  3.09274e-06|  0.14%|
    59|     99427|     0.541161|   5.4428e-06|  0.15%|
(call)|     31239|     0.621378|  1.98911e-05|  0.17%|# <frozen importlib._bootstrap_external>:58 <listcomp>
    60|         0|            0|            0|  0.00%|
    61|         0|            0|            0|  0.00%|
    62|      5724|    0.0179048|  3.12802e-06|  0.00%|
    63|         0|            0|            0|  0.00%|
    64|      5724|    0.0252497|   4.4112e-06|  0.01%|
    65|      5724|    0.0255692|  4.46702e-06|  0.01%|
    66|      5724|    0.0216756|  3.78679e-06|  0.01%|
    67|         0|            0|            0|  0.00%|
    68|         0|            0|            0|  0.00%|
    69|         0|            0|            0|  0.00%|
    70|         0|            0|            0|  0.00%|
    71|         0|            0|            0|  0.00%|
    72|         0|            0|            0|  0.00%|
    73|         0|            0|            0|  0.00%|
    74|     20489|     0.045661|  2.22856e-06|  0.01%|
    75|         0|            0|            0|  0.00%|
    76|         0|            0|            0|  0.00%|
    77|         0|            0|            0|  0.00%|
    78|         0|            0|            0|  0.00%|
    79|         0|            0|            0|  0.00%|
    80|         0|            0|            0|  0.00%|
    81|     20489|     0.208881|  1.01948e-05|  0.06%|
    82|         0|            0|            0|  0.00%|
    83|         0|            0|            0|  0.00%|
    84|     12548|    0.0294325|   2.3456e-06|  0.01%|
    85|         0|            0|            0|  0.00%|
    86|     12548|    0.0426989|  3.40284e-06|  0.01%|
    87|     12548|     0.138055|  1.10021e-05|  0.04%|
(call)|     12548|     0.145756|  1.16158e-05|  0.04%|# <frozen importlib._bootstrap_external>:74 _path_stat
    88|      7728|    0.0296323|  3.83441e-06|  0.01%|
    89|      7728|    0.0289505|  3.74618e-06|  0.01%|
    90|      4820|    0.0194337|   4.0319e-06|  0.01%|
    91|         0|            0|            0|  0.00%|
    92|         0|            0|            0|  0.00%|
    93|     11470|    0.0280466|  2.44521e-06|  0.01%|
    94|         0|            0|            0|  0.00%|
    95|     11470|     0.112109|  9.77412e-06|  0.03%|
(call)|     11470|     0.398536|   3.4746e-05|  0.11%|# <frozen importlib._bootstrap_external>:84 _path_is_mode_type
    96|         0|            0|            0|  0.00%|
    97|         0|            0|            0|  0.00%|
    98|      1078|   0.00290775|  2.69736e-06|  0.00%|
    99|         0|            0|            0|  0.00%|
   100|      1078|   0.00389218|  3.61056e-06|  0.00%|
   101|         1|   1.3113e-05|   1.3113e-05|  0.00%|
   102|      1078|    0.0113549|  1.05333e-05|  0.00%|
(call)|      1078|    0.0354216|  3.28586e-05|  0.01%|# <frozen importlib._bootstrap_external>:84 _path_is_mode_type
   103|         0|            0|            0|  0.00%|
   104|         0|            0|            0|  0.00%|
   105|        11|  5.36442e-05|  4.87674e-06|  0.00%|
   106|         0|            0|            0|  0.00%|
   107|         0|            0|            0|  0.00%|
   108|         0|            0|            0|  0.00%|
   109|         0|            0|            0|  0.00%|
   110|        11|  6.86646e-05|  6.24223e-06|  0.00%|
   111|        11|  4.93526e-05|   4.4866e-06|  0.00%|
   112|        11|  0.000524044|  4.76404e-05|  0.00%|
   113|        11|  7.31945e-05|  6.65405e-06|  0.00%|
   114|         0|            0|            0|  0.00%|
   115|         0|            0|            0|  0.00%|
   116|        11|  0.000109434|  9.94856e-06|  0.00%|
   117|        11|  0.000421524|  3.83204e-05|  0.00%|
   118|        11|   0.00277686|  0.000252442|  0.00%|
   119|         0|            0|            0|  0.00%|
   120|         0|            0|            0|  0.00%|
   121|         0|            0|            0|  0.00%|
   122|         0|            0|            0|  0.00%|
   123|         0|            0|            0|  0.00%|
   124|         0|            0|            0|  0.00%|
   125|         0|            0|            0|  0.00%|
   126|         0|            0|            0|  0.00%|
   127|         0|            0|            0|  0.00%|
   128|         0|            0|            0|  0.00%|
   129|         0|            0|            0|  0.00%|
   130|         0|            0|            0|  0.00%|
   131|         0|            0|            0|  0.00%|
   132|         0|            0|            0|  0.00%|
   133|         0|            0|            0|  0.00%|
   134|         0|            0|            0|  0.00%|
   135|         0|            0|            0|  0.00%|
   136|         0|            0|            0|  0.00%|
   137|         0|            0|            0|  0.00%|
   138|         0|            0|            0|  0.00%|
   139|         0|            0|            0|  0.00%|
   140|         0|            0|            0|  0.00%|
   141|         0|            0|            0|  0.00%|
   142|         0|            0|            0|  0.00%|
   143|         0|            0|            0|  0.00%|
   144|         0|            0|            0|  0.00%|
   145|         0|            0|            0|  0.00%|
   146|         0|            0|            0|  0.00%|
   147|         0|            0|            0|  0.00%|
   148|         0|            0|            0|  0.00%|
   149|         0|            0|            0|  0.00%|
   150|         0|            0|            0|  0.00%|
   151|         0|            0|            0|  0.00%|
   152|         0|            0|            0|  0.00%|
   153|         0|            0|            0|  0.00%|
   154|         0|            0|            0|  0.00%|
   155|         0|            0|            0|  0.00%|
   156|         0|            0|            0|  0.00%|
   157|         0|            0|            0|  0.00%|
   158|         0|            0|            0|  0.00%|
   159|         0|            0|            0|  0.00%|
   160|         0|            0|            0|  0.00%|
   161|         0|            0|            0|  0.00%|
   162|         0|            0|            0|  0.00%|
   163|         0|            0|            0|  0.00%|
   164|         0|            0|            0|  0.00%|
   165|         0|            0|            0|  0.00%|
   166|         0|            0|            0|  0.00%|
   167|         0|            0|            0|  0.00%|
   168|         0|            0|            0|  0.00%|
   169|         0|            0|            0|  0.00%|
   170|         0|            0|            0|  0.00%|
   171|         0|            0|            0|  0.00%|
   172|         0|            0|            0|  0.00%|
   173|         0|            0|            0|  0.00%|
   174|         0|            0|            0|  0.00%|
   175|         0|            0|            0|  0.00%|
   176|         0|            0|            0|  0.00%|
   177|         0|            0|            0|  0.00%|
   178|         0|            0|            0|  0.00%|
   179|         0|            0|            0|  0.00%|
   180|         0|            0|            0|  0.00%|
   181|         0|            0|            0|  0.00%|
   182|         0|            0|            0|  0.00%|
   183|         0|            0|            0|  0.00%|
   184|         0|            0|            0|  0.00%|
   185|         0|            0|            0|  0.00%|
   186|         0|            0|            0|  0.00%|
   187|         0|            0|            0|  0.00%|
   188|         0|            0|            0|  0.00%|
   189|         0|            0|            0|  0.00%|
   190|         0|            0|            0|  0.00%|
   191|         0|            0|            0|  0.00%|
   192|         0|            0|            0|  0.00%|
   193|         0|            0|            0|  0.00%|
   194|         0|            0|            0|  0.00%|
   195|         0|            0|            0|  0.00%|
   196|         0|            0|            0|  0.00%|
   197|         0|            0|            0|  0.00%|
   198|         0|            0|            0|  0.00%|
   199|         0|            0|            0|  0.00%|
   200|         0|            0|            0|  0.00%|
   201|         0|            0|            0|  0.00%|
   202|         0|            0|            0|  0.00%|
   203|         0|            0|            0|  0.00%|
   204|         0|            0|            0|  0.00%|
   205|         0|            0|            0|  0.00%|
   206|         0|            0|            0|  0.00%|
   207|         0|            0|            0|  0.00%|
   208|         0|            0|            0|  0.00%|
   209|         0|            0|            0|  0.00%|
   210|         0|            0|            0|  0.00%|
   211|         0|            0|            0|  0.00%|
   212|         0|            0|            0|  0.00%|
   213|         0|            0|            0|  0.00%|
   214|         0|            0|            0|  0.00%|
   215|         0|            0|            0|  0.00%|
   216|         0|            0|            0|  0.00%|
   217|         0|            0|            0|  0.00%|
   218|         0|            0|            0|  0.00%|
   219|         0|            0|            0|  0.00%|
   220|         0|            0|            0|  0.00%|
   221|         0|            0|            0|  0.00%|
   222|         0|            0|            0|  0.00%|
   223|         0|            0|            0|  0.00%|
   224|         0|            0|            0|  0.00%|
   225|         0|            0|            0|  0.00%|
   226|         0|            0|            0|  0.00%|
   227|         0|            0|            0|  0.00%|
   228|         0|            0|            0|  0.00%|
   229|         0|            0|            0|  0.00%|
   230|         0|            0|            0|  0.00%|
   231|         0|            0|            0|  0.00%|
   232|         0|            0|            0|  0.00%|
   233|         0|            0|            0|  0.00%|
   234|         0|            0|            0|  0.00%|
   235|         0|            0|            0|  0.00%|
   236|         0|            0|            0|  0.00%|
   237|         0|            0|            0|  0.00%|
   238|         0|            0|            0|  0.00%|
   239|         0|            0|            0|  0.00%|
   240|         0|            0|            0|  0.00%|
   241|         0|            0|            0|  0.00%|
   242|         0|            0|            0|  0.00%|
   243|         0|            0|            0|  0.00%|
   244|         0|            0|            0|  0.00%|
   245|         0|            0|            0|  0.00%|
   246|         0|            0|            0|  0.00%|
   247|         0|            0|            0|  0.00%|
   248|         0|            0|            0|  0.00%|
   249|         0|            0|            0|  0.00%|
   250|         0|            0|            0|  0.00%|
   251|         0|            0|            0|  0.00%|
   252|         0|            0|            0|  0.00%|
   253|         0|            0|            0|  0.00%|
   254|         0|            0|            0|  0.00%|
   255|         0|            0|            0|  0.00%|
   256|         0|            0|            0|  0.00%|
   257|         0|            0|            0|  0.00%|
   258|         0|            0|            0|  0.00%|
   259|         0|            0|            0|  0.00%|
   260|         0|            0|            0|  0.00%|
   261|         0|            0|            0|  0.00%|
   262|         0|            0|            0|  0.00%|
   263|         0|            0|            0|  0.00%|
   264|         0|            0|            0|  0.00%|
   265|         0|            0|            0|  0.00%|
   266|         0|            0|            0|  0.00%|
   267|         0|            0|            0|  0.00%|
   268|         0|            0|            0|  0.00%|
   269|         0|            0|            0|  0.00%|
   270|         0|            0|            0|  0.00%|
   271|      5710|    0.0225549|  3.95007e-06|  0.01%|
   272|         0|            0|            0|  0.00%|
   273|         0|            0|            0|  0.00%|
   274|         0|            0|            0|  0.00%|
   275|         0|            0|            0|  0.00%|
   276|         0|            0|            0|  0.00%|
   277|         0|            0|            0|  0.00%|
   278|         0|            0|            0|  0.00%|
   279|         0|            0|            0|  0.00%|
   280|         0|            0|            0|  0.00%|
   281|         0|            0|            0|  0.00%|
   282|         0|            0|            0|  0.00%|
   283|         0|            0|            0|  0.00%|
   284|         0|            0|            0|  0.00%|
   285|         0|            0|            0|  0.00%|
   286|         0|            0|            0|  0.00%|
   287|         0|            0|            0|  0.00%|
   288|         0|            0|            0|  0.00%|
   289|      5710|    0.0274506|  4.80745e-06|  0.01%|
   290|         0|            0|            0|  0.00%|
   291|         0|            0|            0|  0.00%|
   292|         0|            0|            0|  0.00%|
   293|         0|            0|            0|  0.00%|
   294|         0|            0|            0|  0.00%|
   295|         0|            0|            0|  0.00%|
   296|      5710|    0.0291154|  5.09903e-06|  0.01%|
   297|      5710|    0.0708659|  1.24108e-05|  0.02%|
(call)|      5710|    0.0901387|  1.57861e-05|  0.02%|# <frozen importlib._bootstrap_external>:62 _path_split
   298|      5710|    0.0299754|  5.24963e-06|  0.01%|
   299|      5710|     0.028125|  4.92558e-06|  0.01%|
   300|      5710|     0.024936|  4.36707e-06|  0.01%|
   301|         0|            0|            0|  0.00%|
   302|      5710|    0.0275166|  4.81902e-06|  0.01%|
   303|      5710|    0.0235014|  4.11583e-06|  0.01%|
   304|      5710|    0.0246158|  4.31099e-06|  0.01%|
   305|      5710|    0.0228415|  4.00025e-06|  0.01%|
   306|         0|            0|            0|  0.00%|
   307|         0|            0|            0|  0.00%|
   308|      5710|     0.024215|   4.2408e-06|  0.01%|
   309|      5710|    0.0227392|  3.98234e-06|  0.01%|
   310|         0|            0|            0|  0.00%|
   311|         0|            0|            0|  0.00%|
   312|         0|            0|            0|  0.00%|
   313|      5710|    0.0670393|  1.17407e-05|  0.02%|
(call)|      5710|     0.241032|  4.22123e-05|  0.07%|# <frozen importlib._bootstrap_external>:56 _path_join
   314|         0|            0|            0|  0.00%|
   315|         0|            0|            0|  0.00%|
   316|         0|            0|            0|  0.00%|
   317|         0|            0|            0|  0.00%|
   318|         0|            0|            0|  0.00%|
   319|         0|            0|            0|  0.00%|
   320|         0|            0|            0|  0.00%|
   321|         0|            0|            0|  0.00%|
   322|         0|            0|            0|  0.00%|
   323|         0|            0|            0|  0.00%|
   324|         0|            0|            0|  0.00%|
   325|         0|            0|            0|  0.00%|
   326|         0|            0|            0|  0.00%|
   327|         0|            0|            0|  0.00%|
   328|         0|            0|            0|  0.00%|
   329|         0|            0|            0|  0.00%|
   330|         0|            0|            0|  0.00%|
   331|         0|            0|            0|  0.00%|
   332|         0|            0|            0|  0.00%|
   333|         0|            0|            0|  0.00%|
   334|         0|            0|            0|  0.00%|
   335|         0|            0|            0|  0.00%|
   336|         0|            0|            0|  0.00%|
   337|         0|            0|            0|  0.00%|
   338|         0|            0|            0|  0.00%|
   339|         0|            0|            0|  0.00%|
   340|         0|            0|            0|  0.00%|
   341|         0|            0|            0|  0.00%|
   342|         0|            0|            0|  0.00%|
   343|         0|            0|            0|  0.00%|
   344|         0|            0|            0|  0.00%|
   345|         0|            0|            0|  0.00%|
   346|         0|            0|            0|  0.00%|
   347|         0|            0|            0|  0.00%|
   348|         0|            0|            0|  0.00%|
   349|         0|            0|            0|  0.00%|
   350|         0|            0|            0|  0.00%|
   351|         0|            0|            0|  0.00%|
   352|         0|            0|            0|  0.00%|
   353|         0|            0|            0|  0.00%|
   354|         0|            0|            0|  0.00%|
   355|         0|            0|            0|  0.00%|
   356|         0|            0|            0|  0.00%|
   357|         0|            0|            0|  0.00%|
   358|         0|            0|            0|  0.00%|
   359|         0|            0|            0|  0.00%|
   360|         0|            0|            0|  0.00%|
   361|         0|            0|            0|  0.00%|
   362|         0|            0|            0|  0.00%|
   363|         0|            0|            0|  0.00%|
   364|         0|            0|            0|  0.00%|
   365|         0|            0|            0|  0.00%|
   366|         0|            0|            0|  0.00%|
   367|         0|            0|            0|  0.00%|
   368|         0|            0|            0|  0.00%|
   369|      3070|   0.00702834|  2.28936e-06|  0.00%|
   370|      3070|    0.0162833|    5.304e-06|  0.00%|
   371|      2855|   0.00976849|  3.42154e-06|  0.00%|
   372|      2855|    0.0353067|  1.23666e-05|  0.01%|
(call)|      2855|     0.394171|  0.000138063|  0.11%|# <frozen importlib._bootstrap_external>:271 cache_from_source
   373|         0|            0|            0|  0.00%|
   374|         0|            0|            0|  0.00%|
   375|       215|  0.000897169|  4.17288e-06|  0.00%|
   376|         0|            0|            0|  0.00%|
   377|         0|            0|            0|  0.00%|
   378|       215|  0.000766754|   3.5663e-06|  0.00%|
   379|         0|            0|            0|  0.00%|
   380|         0|            0|            0|  0.00%|
   381|        11|  3.17097e-05|   2.8827e-06|  0.00%|
   382|         0|            0|            0|  0.00%|
   383|        11|  5.38826e-05|  4.89842e-06|  0.00%|
   384|        11|  0.000146627|  1.33298e-05|  0.00%|
(call)|        11|   0.00019908|  1.80981e-05|  0.00%|# <frozen importlib._bootstrap_external>:74 _path_stat
   385|         0|            0|            0|  0.00%|
   386|         0|            0|            0|  0.00%|
   387|         0|            0|            0|  0.00%|
   388|         0|            0|            0|  0.00%|
   389|        11|  6.29425e-05|  5.72205e-06|  0.00%|
   390|        11|  3.76701e-05|  3.42456e-06|  0.00%|
   391|         0|            0|            0|  0.00%|
   392|         0|            0|            0|  0.00%|
   393|         0|            0|            0|  0.00%|
   394|         0|            0|            0|  0.00%|
   395|         0|            0|            0|  0.00%|
   396|         0|            0|            0|  0.00%|
   397|         0|            0|            0|  0.00%|
   398|         0|            0|            0|  0.00%|
   399|         0|            0|            0|  0.00%|
   400|         0|            0|            0|  0.00%|
   401|      2857|    0.0087657|  3.06815e-06|  0.00%|
   402|      2857|    0.0106621|  3.73191e-06|  0.00%|
   403|         0|            0|            0|  0.00%|
   404|      2857|    0.0103281|    3.615e-06|  0.00%|
   405|         0|            0|            0|  0.00%|
   406|         0|            0|            0|  0.00%|
   407|      2857|    0.0311697|  1.09099e-05|  0.01%|
(call)|      2856|    0.0167086|  5.85035e-06|  0.00%|# <frozen importlib._bootstrap_external>:909 get_filename
(call)|         1|   0.00010848|   0.00010848|  0.00%|# <frozen importlib._bootstrap_external>:921 get_resource_reader
   408|         0|            0|            0|  0.00%|
   409|         0|            0|            0|  0.00%|
   410|         0|            0|            0|  0.00%|
   411|         0|            0|            0|  0.00%|
   412|         0|            0|            0|  0.00%|
   413|         0|            0|            0|  0.00%|
   414|         0|            0|            0|  0.00%|
   415|         0|            0|            0|  0.00%|
   416|         0|            0|            0|  0.00%|
   417|         0|            0|            0|  0.00%|
   418|         0|            0|            0|  0.00%|
   419|         0|            0|            0|  0.00%|
   420|         0|            0|            0|  0.00%|
   421|        25|  8.70228e-05|  3.48091e-06|  0.00%|
   422|         0|            0|            0|  0.00%|
   423|         0|            0|            0|  0.00%|
   424|         0|            0|            0|  0.00%|
   425|         0|            0|            0|  0.00%|
   426|         0|            0|            0|  0.00%|
   427|         0|            0|            0|  0.00%|
   428|         0|            0|            0|  0.00%|
   429|         0|            0|            0|  0.00%|
   430|         0|            0|            0|  0.00%|
   431|        25|  0.000308514|  1.23405e-05|  0.00%|
(call)|        25|    0.0130634|  0.000522537|  0.00%|# <frozen importlib._bootstrap_external>:1339 find_loader
   432|        25|  0.000122309|  4.89235e-06|  0.00%|
   433|         0|            0|            0|  0.00%|
   434|         0|            0|            0|  0.00%|
   435|        25|  8.79765e-05|  3.51906e-06|  0.00%|
   436|         0|            0|            0|  0.00%|
   437|         0|            0|            0|  0.00%|
   438|      2855|     0.010231|  3.58354e-06|  0.00%|
   439|         0|            0|            0|  0.00%|
   440|         0|            0|            0|  0.00%|
   441|         0|            0|            0|  0.00%|
   442|         0|            0|            0|  0.00%|
   443|         0|            0|            0|  0.00%|
   444|         0|            0|            0|  0.00%|
   445|         0|            0|            0|  0.00%|
   446|         0|            0|            0|  0.00%|
   447|         0|            0|            0|  0.00%|
   448|         0|            0|            0|  0.00%|
   449|         0|            0|            0|  0.00%|
   450|         0|            0|            0|  0.00%|
   451|         0|            0|            0|  0.00%|
   452|         0|            0|            0|  0.00%|
   453|         0|            0|            0|  0.00%|
   454|      2855|    0.0134408|  4.70783e-06|  0.00%|
   455|      2855|     0.012099|  4.23784e-06|  0.00%|
   456|         0|            0|            0|  0.00%|
   457|         0|            0|            0|  0.00%|
   458|         0|            0|            0|  0.00%|
   459|      2855|    0.0126145|  4.41838e-06|  0.00%|
   460|         0|            0|            0|  0.00%|
   461|         0|            0|            0|  0.00%|
   462|         0|            0|            0|  0.00%|
   463|      2855|    0.0315309|  1.10441e-05|  0.01%|
(call)|      2855|    0.0208235|  7.29369e-06|  0.01%|# <frozen importlib._bootstrap_external>:51 _r_long
   464|         0|            0|            0|  0.00%|
   465|      2855|    0.0123482|  4.32511e-06|  0.00%|
   466|         0|            0|            0|  0.00%|
   467|         0|            0|            0|  0.00%|
   468|      2855|    0.0105822|  3.70655e-06|  0.00%|
   469|         0|            0|            0|  0.00%|
   470|         0|            0|            0|  0.00%|
   471|      2855|    0.0094111|  3.29636e-06|  0.00%|
   472|         0|            0|            0|  0.00%|
   473|         0|            0|            0|  0.00%|
   474|         0|            0|            0|  0.00%|
   475|         0|            0|            0|  0.00%|
   476|         0|            0|            0|  0.00%|
   477|         0|            0|            0|  0.00%|
   478|         0|            0|            0|  0.00%|
   479|         0|            0|            0|  0.00%|
   480|         0|            0|            0|  0.00%|
   481|         0|            0|            0|  0.00%|
   482|         0|            0|            0|  0.00%|
   483|         0|            0|            0|  0.00%|
   484|         0|            0|            0|  0.00%|
   485|         0|            0|            0|  0.00%|
   486|         0|            0|            0|  0.00%|
   487|         0|            0|            0|  0.00%|
   488|         0|            0|            0|  0.00%|
   489|         0|            0|            0|  0.00%|
   490|      2855|    0.0311627|  1.09151e-05|  0.01%|
(call)|      2855|    0.0176005|  6.16481e-06|  0.00%|# <frozen importlib._bootstrap_external>:51 _r_long
   491|        11|   5.4121e-05|  4.92009e-06|  0.00%|
   492|        11|  0.000155687|  1.41534e-05|  0.00%|
(call)|        11|  8.17776e-05|  7.43432e-06|  0.00%|# <frozen importlib._bootstrap>:222 _verbose_message
   493|        11|  9.08375e-05|  8.25795e-06|  0.00%|
   494|      2844|    0.0109949|    3.866e-06|  0.00%|
   495|      2844|    0.0295424|  1.03876e-05|  0.01%|
(call)|      2844|    0.0158615|  5.57718e-06|  0.00%|# <frozen importlib._bootstrap_external>:51 _r_long
   496|         0|            0|            0|  0.00%|
   497|         0|            0|            0|  0.00%|
   498|         0|            0|            0|  0.00%|
   499|         0|            0|            0|  0.00%|
   500|         0|            0|            0|  0.00%|
   501|         0|            0|            0|  0.00%|
   502|         0|            0|            0|  0.00%|
   503|         0|            0|            0|  0.00%|
   504|         0|            0|            0|  0.00%|
   505|         0|            0|            0|  0.00%|
   506|         0|            0|            0|  0.00%|
   507|         0|            0|            0|  0.00%|
   508|         0|            0|            0|  0.00%|
   509|         0|            0|            0|  0.00%|
   510|         0|            0|            0|  0.00%|
   511|         0|            0|            0|  0.00%|
   512|         0|            0|            0|  0.00%|
   513|         0|            0|            0|  0.00%|
   514|         0|            0|            0|  0.00%|
   515|         0|            0|            0|  0.00%|
   516|         0|            0|            0|  0.00%|
   517|         0|            0|            0|  0.00%|
   518|         0|            0|            0|  0.00%|
   519|         0|            0|            0|  0.00%|
   520|         0|            0|            0|  0.00%|
   521|         0|            0|            0|  0.00%|
   522|         0|            0|            0|  0.00%|
   523|      2844|   0.00887537|  3.12073e-06|  0.00%|
   524|         0|            0|            0|  0.00%|
   525|      2844|     0.531684|  0.000186949|  0.14%|
   526|      2844|    0.0206554|   7.2628e-06|  0.01%|
   527|      2844|    0.0343857|  1.20906e-05|  0.01%|
(call)|      2844|    0.0227082|  7.98459e-06|  0.01%|# <frozen importlib._bootstrap>:222 _verbose_message
   528|      2844|    0.0109375|   3.8458e-06|  0.00%|
   529|      2844|    0.0169022|  5.94311e-06|  0.00%|
   530|      2844|    0.0106106|  3.73087e-06|  0.00%|
   531|         0|            0|            0|  0.00%|
   532|         0|            0|            0|  0.00%|
   533|         0|            0|            0|  0.00%|
   534|         0|            0|            0|  0.00%|
   535|         0|            0|            0|  0.00%|
   536|        11|  3.91006e-05|   3.5546e-06|  0.00%|
   537|         0|            0|            0|  0.00%|
   538|        11|  6.12736e-05|  5.57032e-06|  0.00%|
   539|        11|  0.000132561|   1.2051e-05|  0.00%|
(call)|        11|  9.15527e-05|  8.32298e-06|  0.00%|# <frozen importlib._bootstrap_external>:46 _w_long
   540|        11|   0.00010705|  9.73181e-06|  0.00%|
(call)|        11|  6.27041e-05|  5.70037e-06|  0.00%|# <frozen importlib._bootstrap_external>:46 _w_long
   541|        11|  0.000104666|  9.51507e-06|  0.00%|
(call)|        11|  6.03199e-05|  5.48363e-06|  0.00%|# <frozen importlib._bootstrap_external>:46 _w_long
   542|        11|  0.000942945|  8.57223e-05|  0.00%|
   543|        11|  7.12872e-05|  6.48065e-06|  0.00%|
   544|         0|            0|            0|  0.00%|
   545|         0|            0|            0|  0.00%|
   546|         0|            0|            0|  0.00%|
   547|         0|            0|            0|  0.00%|
   548|         0|            0|            0|  0.00%|
   549|         0|            0|            0|  0.00%|
   550|         0|            0|            0|  0.00%|
   551|         0|            0|            0|  0.00%|
   552|         0|            0|            0|  0.00%|
   553|         0|            0|            0|  0.00%|
   554|         0|            0|            0|  0.00%|
   555|         0|            0|            0|  0.00%|
   556|         0|            0|            0|  0.00%|
   557|         0|            0|            0|  0.00%|
   558|         0|            0|            0|  0.00%|
   559|         0|            0|            0|  0.00%|
   560|         0|            0|            0|  0.00%|
   561|         0|            0|            0|  0.00%|
   562|         0|            0|            0|  0.00%|
   563|         0|            0|            0|  0.00%|
   564|         0|            0|            0|  0.00%|
   565|         0|            0|            0|  0.00%|
   566|         0|            0|            0|  0.00%|
   567|         0|            0|            0|  0.00%|
   568|         0|            0|            0|  0.00%|
   569|         0|            0|            0|  0.00%|
   570|         0|            0|            0|  0.00%|
   571|         0|            0|            0|  0.00%|
   572|         0|            0|            0|  0.00%|
   573|         0|            0|            0|  0.00%|
   574|      3743|    0.0132973|  3.55258e-06|  0.00%|
   575|         0|            0|            0|  0.00%|
   576|         0|            0|            0|  0.00%|
   577|         0|            0|            0|  0.00%|
   578|         0|            0|            0|  0.00%|
   579|         0|            0|            0|  0.00%|
   580|         0|            0|            0|  0.00%|
   581|         0|            0|            0|  0.00%|
   582|         0|            0|            0|  0.00%|
   583|         0|            0|            0|  0.00%|
   584|         0|            0|            0|  0.00%|
   585|         0|            0|            0|  0.00%|
   586|      3743|    0.0163913|  4.37918e-06|  0.00%|
   587|         0|            0|            0|  0.00%|
   588|         0|            0|            0|  0.00%|
   589|         0|            0|            0|  0.00%|
   590|         0|            0|            0|  0.00%|
   591|         0|            0|            0|  0.00%|
   592|         0|            0|            0|  0.00%|
   593|         0|            0|            0|  0.00%|
   594|         0|            0|            0|  0.00%|
   595|         0|            0|            0|  0.00%|
   596|         0|            0|            0|  0.00%|
   597|         0|            0|            0|  0.00%|
   598|      3743|    0.0184355|  4.92532e-06|  0.01%|
   599|         0|            0|            0|  0.00%|
   600|         0|            0|            0|  0.00%|
   601|         0|            0|            0|  0.00%|
   602|         0|            0|            0|  0.00%|
   603|         0|            0|            0|  0.00%|
   604|         0|            0|            0|  0.00%|
   605|         0|            0|            0|  0.00%|
   606|      3743|    0.0508001|   1.3572e-05|  0.01%|
(call)|      3743|     0.107234|  2.86491e-05|  0.03%|# <frozen importlib._bootstrap>:369 __init__
   607|      3743|    0.0176771|   4.7227e-06|  0.00%|
   608|         0|            0|            0|  0.00%|
   609|         0|            0|            0|  0.00%|
   610|      3743|    0.0154903|  4.13847e-06|  0.00%|
   611|         0|            0|            0|  0.00%|
   612|         0|            0|            0|  0.00%|
   613|         0|            0|            0|  0.00%|
   614|         0|            0|            0|  0.00%|
   615|         0|            0|            0|  0.00%|
   616|         0|            0|            0|  0.00%|
   617|         0|            0|            0|  0.00%|
   618|         0|            0|            0|  0.00%|
   619|         0|            0|            0|  0.00%|
   620|      3743|    0.0157266|  4.20159e-06|  0.00%|
   621|         0|            0|            0|  0.00%|
   622|         0|            0|            0|  0.00%|
   623|         0|            0|            0|  0.00%|
   624|         0|            0|            0|  0.00%|
   625|         0|            0|            0|  0.00%|
   626|         0|            0|            0|  0.00%|
   627|         0|            0|            0|  0.00%|
   628|         0|            0|            0|  0.00%|
   629|         0|            0|            0|  0.00%|
   630|         0|            0|            0|  0.00%|
   631|      3743|    0.0154977|  4.14044e-06|  0.00%|
   632|      3743|    0.0173047|  4.62321e-06|  0.00%|
   633|         0|            0|            0|  0.00%|
   634|         0|            0|            0|  0.00%|
   635|         0|            0|            0|  0.00%|
   636|         0|            0|            0|  0.00%|
   637|      3743|    0.0156591|  4.18357e-06|  0.00%|
   638|         0|            0|            0|  0.00%|
   639|         0|            0|            0|  0.00%|
   640|         0|            0|            0|  0.00%|
   641|         0|            0|            0|  0.00%|
   642|         0|            0|            0|  0.00%|
   643|         0|            0|            0|  0.00%|
   644|         0|            0|            0|  0.00%|
   645|         0|            0|            0|  0.00%|
   646|         0|            0|            0|  0.00%|
   647|         0|            0|            0|  0.00%|
   648|         0|            0|            0|  0.00%|
   649|         0|            0|            0|  0.00%|
   650|         0|            0|            0|  0.00%|
   651|         0|            0|            0|  0.00%|
   652|         0|            0|            0|  0.00%|
   653|         0|            0|            0|  0.00%|
   654|         0|            0|            0|  0.00%|
   655|         0|            0|            0|  0.00%|
   656|         0|            0|            0|  0.00%|
   657|         0|            0|            0|  0.00%|
   658|         0|            0|            0|  0.00%|
   659|         0|            0|            0|  0.00%|
   660|         0|            0|            0|  0.00%|
   661|         0|            0|            0|  0.00%|
   662|         0|            0|            0|  0.00%|
   663|         0|            0|            0|  0.00%|
   664|         0|            0|            0|  0.00%|
   665|         0|            0|            0|  0.00%|
   666|         0|            0|            0|  0.00%|
   667|         0|            0|            0|  0.00%|
   668|         0|            0|            0|  0.00%|
   669|         0|            0|            0|  0.00%|
   670|         0|            0|            0|  0.00%|
   671|         0|            0|            0|  0.00%|
   672|         0|            0|            0|  0.00%|
   673|         0|            0|            0|  0.00%|
   674|         0|            0|            0|  0.00%|
   675|         0|            0|            0|  0.00%|
   676|         0|            0|            0|  0.00%|
   677|         0|            0|            0|  0.00%|
   678|         0|            0|            0|  0.00%|
   679|         0|            0|            0|  0.00%|
   680|         0|            0|            0|  0.00%|
   681|         0|            0|            0|  0.00%|
   682|         0|            0|            0|  0.00%|
   683|         0|            0|            0|  0.00%|
   684|         0|            0|            0|  0.00%|
   685|         0|            0|            0|  0.00%|
   686|         0|            0|            0|  0.00%|
   687|         0|            0|            0|  0.00%|
   688|         0|            0|            0|  0.00%|
   689|         0|            0|            0|  0.00%|
   690|         0|            0|            0|  0.00%|
   691|         0|            0|            0|  0.00%|
   692|         0|            0|            0|  0.00%|
   693|         0|            0|            0|  0.00%|
   694|         0|            0|            0|  0.00%|
   695|         0|            0|            0|  0.00%|
   696|         0|            0|            0|  0.00%|
   697|         0|            0|            0|  0.00%|
   698|         0|            0|            0|  0.00%|
   699|         0|            0|            0|  0.00%|
   700|         0|            0|            0|  0.00%|
   701|         0|            0|            0|  0.00%|
   702|         0|            0|            0|  0.00%|
   703|         0|            0|            0|  0.00%|
   704|         0|            0|            0|  0.00%|
   705|         0|            0|            0|  0.00%|
   706|         0|            0|            0|  0.00%|
   707|         0|            0|            0|  0.00%|
   708|         0|            0|            0|  0.00%|
   709|         0|            0|            0|  0.00%|
   710|         0|            0|            0|  0.00%|
   711|         1|  6.91414e-06|  6.91414e-06|  0.00%|
   712|         0|            0|            0|  0.00%|
   713|         0|            0|            0|  0.00%|
   714|         1|  2.07424e-05|  2.07424e-05|  0.00%|
(call)|         1|   2.6226e-05|   2.6226e-05|  0.00%|# <frozen importlib._bootstrap_external>:401 _check_name_wrapper
(call)|         1|  1.69277e-05|  1.69277e-05|  0.00%|# <frozen importlib._bootstrap_external>:62 _path_split
   715|         1|  6.91414e-06|  6.91414e-06|  0.00%|
   716|         1|  4.76837e-06|  4.76837e-06|  0.00%|
   717|         1|  4.52995e-06|  4.52995e-06|  0.00%|
   718|         0|            0|            0|  0.00%|
   719|      2855|   0.00678205|   2.3755e-06|  0.00%|
   720|      2855|   0.00997806|  3.49494e-06|  0.00%|
   721|         0|            0|            0|  0.00%|
   722|      2855|    0.0076437|   2.6773e-06|  0.00%|
   723|         0|            0|            0|  0.00%|
   724|      2855|    0.0420446|  1.47267e-05|  0.01%|
(call)|      2855|      2.66873|  0.000934757|  0.73%|# <frozen importlib._bootstrap_external>:793 get_code
   725|      2855|    0.0114393|  4.00677e-06|  0.00%|
   726|         0|            0|            0|  0.00%|
   727|         0|            0|            0|  0.00%|
   728|      2855|    0.0393529|  1.37839e-05|  0.01%|
(call)|      2855|      42.4278|    0.0148609| 11.54%|# <frozen importlib._bootstrap>:211 _call_with_frames_removed
   729|         0|            0|            0|  0.00%|
   730|         0|            0|            0|  0.00%|
   731|         0|            0|            0|  0.00%|
   732|         0|            0|            0|  0.00%|
   733|         0|            0|            0|  0.00%|
   734|         0|            0|            0|  0.00%|
   735|         0|            0|            0|  0.00%|
   736|         0|            0|            0|  0.00%|
   737|         0|            0|            0|  0.00%|
   738|         0|            0|            0|  0.00%|
   739|         0|            0|            0|  0.00%|
   740|         0|            0|            0|  0.00%|
   741|         0|            0|            0|  0.00%|
   742|         0|            0|            0|  0.00%|
   743|         0|            0|            0|  0.00%|
   744|         0|            0|            0|  0.00%|
   745|         0|            0|            0|  0.00%|
   746|         0|            0|            0|  0.00%|
   747|         0|            0|            0|  0.00%|
   748|         0|            0|            0|  0.00%|
   749|         0|            0|            0|  0.00%|
   750|         0|            0|            0|  0.00%|
   751|         0|            0|            0|  0.00%|
   752|         0|            0|            0|  0.00%|
   753|         0|            0|            0|  0.00%|
   754|         0|            0|            0|  0.00%|
   755|         0|            0|            0|  0.00%|
   756|         0|            0|            0|  0.00%|
   757|         0|            0|            0|  0.00%|
   758|         0|            0|            0|  0.00%|
   759|         0|            0|            0|  0.00%|
   760|         0|            0|            0|  0.00%|
   761|         0|            0|            0|  0.00%|
   762|         0|            0|            0|  0.00%|
   763|         0|            0|            0|  0.00%|
   764|         0|            0|            0|  0.00%|
   765|         0|            0|            0|  0.00%|
   766|         0|            0|            0|  0.00%|
   767|         0|            0|            0|  0.00%|
   768|         0|            0|            0|  0.00%|
   769|         0|            0|            0|  0.00%|
   770|         0|            0|            0|  0.00%|
   771|         0|            0|            0|  0.00%|
   772|         0|            0|            0|  0.00%|
   773|         0|            0|            0|  0.00%|
   774|         0|            0|            0|  0.00%|
   775|         0|            0|            0|  0.00%|
   776|         0|            0|            0|  0.00%|
   777|         0|            0|            0|  0.00%|
   778|         0|            0|            0|  0.00%|
   779|         0|            0|            0|  0.00%|
   780|         0|            0|            0|  0.00%|
   781|         0|            0|            0|  0.00%|
   782|         0|            0|            0|  0.00%|
   783|         0|            0|            0|  0.00%|
   784|         0|            0|            0|  0.00%|
   785|        11|  4.07696e-05|  3.70633e-06|  0.00%|
   786|         0|            0|            0|  0.00%|
   787|         0|            0|            0|  0.00%|
   788|         0|            0|            0|  0.00%|
   789|         0|            0|            0|  0.00%|
   790|        11|  4.74453e-05|  4.31321e-06|  0.00%|
   791|        11|  0.000298262|  2.71147e-05|  0.00%|
(call)|        11|    0.0260479|     0.002368|  0.01%|# <frozen importlib._bootstrap>:211 _call_with_frames_removed
   792|         0|            0|            0|  0.00%|
   793|      2855|     0.013526|  4.73764e-06|  0.00%|
   794|         0|            0|            0|  0.00%|
   795|         0|            0|            0|  0.00%|
   796|         0|            0|            0|  0.00%|
   797|         0|            0|            0|  0.00%|
   798|         0|            0|            0|  0.00%|
   799|         0|            0|            0|  0.00%|
   800|      2855|    0.0382049|  1.33818e-05|  0.01%|
(call)|      2855|    0.0775826|  2.71743e-05|  0.02%|# <frozen importlib._bootstrap_external>:401 _check_name_wrapper
   801|      2855|    0.0152299|  5.33448e-06|  0.00%|
   802|      2855|    0.0146189|  5.12045e-06|  0.00%|
   803|      2855|    0.0150995|   5.2888e-06|  0.00%|
   804|      2855|     0.014092|  4.93589e-06|  0.00%|
   805|      2855|    0.0137656|  4.82157e-06|  0.00%|
   806|      2855|    0.0134263|  4.70273e-06|  0.00%|
   807|      2855|    0.0402796|  1.41085e-05|  0.01%|
(call)|      2855|     0.382491|  0.000133972|  0.10%|# <frozen importlib._bootstrap_external>:271 cache_from_source
   808|         0|            0|            0|  0.00%|
   809|         0|            0|            0|  0.00%|
   810|         0|            0|            0|  0.00%|
   811|      2855|    0.0145667|  5.10216e-06|  0.00%|
   812|      2855|     0.037673|  1.31954e-05|  0.01%|
(call)|      2855|    0.0877569|   3.0738e-05|  0.02%|# <frozen importlib._bootstrap_external>:951 path_stats
   813|         0|            0|            0|  0.00%|
   814|         0|            0|            0|  0.00%|
   815|         0|            0|            0|  0.00%|
   816|      2855|    0.0172188|  6.03111e-06|  0.00%|
   817|      2855|    0.0133121|  4.66273e-06|  0.00%|
   818|      2855|    0.0452354|  1.58443e-05|  0.01%|
(call)|      2855|     0.353828|  0.000123933|  0.10%|# <frozen importlib._bootstrap_external>:914 get_data
   819|         0|            0|            0|  0.00%|
   820|         0|            0|            0|  0.00%|
   821|         0|            0|            0|  0.00%|
   822|         0|            0|            0|  0.00%|
   823|      2855|    0.0140815|  4.93222e-06|  0.00%|
   824|      2855|    0.0137579|  4.81889e-06|  0.00%|
   825|         0|            0|            0|  0.00%|
   826|      2855|    0.0129688|  4.54248e-06|  0.00%|
   827|      2855|    0.0365875|  1.28152e-05|  0.01%|
(call)|      2855|      0.12367|   4.3317e-05|  0.03%|# <frozen importlib._bootstrap_external>:438 _classify_pyc
   828|      2855|     0.197966|  6.93401e-05|  0.05%|
   829|      2855|    0.0137994|  4.83343e-06|  0.00%|
   830|      2855|    0.0122905|   4.3049e-06|  0.00%|
   831|         0|            0|            0|  0.00%|
   832|         0|            0|            0|  0.00%|
   833|         0|            0|            0|  0.00%|
   834|         0|            0|            0|  0.00%|
   835|         0|            0|            0|  0.00%|
   836|         0|            0|            0|  0.00%|
   837|         0|            0|            0|  0.00%|
   838|         0|            0|            0|  0.00%|
   839|         0|            0|            0|  0.00%|
   840|         0|            0|            0|  0.00%|
   841|         0|            0|            0|  0.00%|
   842|         0|            0|            0|  0.00%|
   843|      2855|    0.0121844|  4.26773e-06|  0.00%|
   844|      2855|    0.0117478|  4.11483e-06|  0.00%|
   845|      2855|    0.0122283|   4.2831e-06|  0.00%|
   846|      2855|    0.0122018|  4.27383e-06|  0.00%|
   847|      2855|     0.011873|  4.15867e-06|  0.00%|
   848|      2855|    0.0348446|  1.22048e-05|  0.01%|
(call)|      2855|     0.114956|  4.02647e-05|  0.03%|# <frozen importlib._bootstrap_external>:471 _validate_timestamp_pyc
   849|         0|            0|            0|  0.00%|
   850|        11|  5.67436e-05|  5.15851e-06|  0.00%|
   851|        11|  6.77109e-05|  6.15553e-06|  0.00%|
   852|         0|            0|            0|  0.00%|
   853|      2844|    0.0134935|  4.74456e-06|  0.00%|
   854|      2844|    0.0347476|  1.22179e-05|  0.01%|
(call)|      2844|    0.0212948|  7.48763e-06|  0.01%|# <frozen importlib._bootstrap>:222 _verbose_message
   855|      2844|    0.0128441|   4.5162e-06|  0.00%|
   856|      2844|    0.0123947|  4.35818e-06|  0.00%|
   857|      2844|    0.0370944|   1.3043e-05|  0.01%|
(call)|      2844|     0.656759|  0.000230928|  0.18%|# <frozen importlib._bootstrap_external>:523 _compile_bytecode
   858|        11|  5.17368e-05|  4.70335e-06|  0.00%|
   859|        11|  0.000152588|  1.38716e-05|  0.00%|
(call)|        11|  0.000415087|  3.77352e-05|  0.00%|# <frozen importlib._bootstrap_external>:914 get_data
   860|        11|  0.000201464|  1.83149e-05|  0.00%|
(call)|        11|    0.0264344|   0.00240313|  0.01%|# <frozen importlib._bootstrap_external>:785 source_to_code
   861|        11|  0.000194073|   1.7643e-05|  0.00%|
(call)|        11|  0.000114441|  1.04037e-05|  0.00%|# <frozen importlib._bootstrap>:222 _verbose_message
   862|        11|  7.15256e-05|  6.50232e-06|  0.00%|
   863|        11|  4.86374e-05|  4.42158e-06|  0.00%|
   864|        11|  4.62532e-05|  4.20484e-06|  0.00%|
   865|         0|            0|            0|  0.00%|
   866|         0|            0|            0|  0.00%|
   867|         0|            0|            0|  0.00%|
   868|         0|            0|            0|  0.00%|
   869|        11|  4.72069e-05|  4.29153e-06|  0.00%|
   870|        11|  0.000180721|  1.64292e-05|  0.00%|
(call)|        11|   0.00167346|  0.000152133|  0.00%|# <frozen importlib._bootstrap_external>:536 _code_to_timestamp_pyc
   871|        11|  6.41346e-05|  5.83042e-06|  0.00%|
   872|        11|  0.000182152|  1.65593e-05|  0.00%|
(call)|        11|   0.00676274|  0.000614795|  0.00%|# <frozen importlib._bootstrap_external>:956 _cache_bytecode
   873|        11|  0.000148296|  1.34815e-05|  0.00%|
(call)|        11|  7.79629e-05|  7.08753e-06|  0.00%|# <frozen importlib._bootstrap>:222 _verbose_message
   874|         0|            0|            0|  0.00%|
   875|         0|            0|            0|  0.00%|
   876|        11|  4.72069e-05|  4.29153e-06|  0.00%|
   877|         0|            0|            0|  0.00%|
   878|         0|            0|            0|  0.00%|
   879|         0|            0|            0|  0.00%|
   880|         0|            0|            0|  0.00%|
   881|         0|            0|            0|  0.00%|
   882|         0|            0|            0|  0.00%|
   883|         0|            0|            0|  0.00%|
   884|      3527|   0.00869083|  2.46409e-06|  0.00%|
   885|         0|            0|            0|  0.00%|
   886|         0|            0|            0|  0.00%|
   887|      3527|    0.0138364|  3.92299e-06|  0.00%|
   888|      3527|    0.0125151|  3.54836e-06|  0.00%|
   889|         0|            0|            0|  0.00%|
   890|         0|            0|            0|  0.00%|
   891|         0|            0|            0|  0.00%|
   892|         0|            0|            0|  0.00%|
   893|         0|            0|            0|  0.00%|
   894|        18|  4.17233e-05|  2.31796e-06|  0.00%|
   895|        18|  7.58171e-05|  4.21206e-06|  0.00%|
   896|         0|            0|            0|  0.00%|
   897|         0|            0|            0|  0.00%|
   898|         0|            0|            0|  0.00%|
   899|         0|            0|            0|  0.00%|
   900|         0|            0|            0|  0.00%|
   901|         0|            0|            0|  0.00%|
   902|         0|            0|            0|  0.00%|
   903|         0|            0|            0|  0.00%|
   904|         0|            0|            0|  0.00%|
   905|         0|            0|            0|  0.00%|
   906|         0|            0|            0|  0.00%|
   907|         0|            0|            0|  0.00%|
   908|         0|            0|            0|  0.00%|
   909|      2856|   0.00680637|  2.38318e-06|  0.00%|
   910|         0|            0|            0|  0.00%|
   911|         0|            0|            0|  0.00%|
   912|      2856|   0.00990224|  3.46717e-06|  0.00%|
   913|         0|            0|            0|  0.00%|
   914|      2881|    0.0084281|  2.92541e-06|  0.00%|
   915|         0|            0|            0|  0.00%|
   916|      2881|    0.0571289|  1.98295e-05|  0.02%|
   917|      2881|     0.300539|  0.000104318|  0.08%|
   918|         0|            0|            0|  0.00%|
   919|         0|            0|            0|  0.00%|
   920|         0|            0|            0|  0.00%|
   921|         1|  3.33786e-06|  3.33786e-06|  0.00%|
   922|         0|            0|            0|  0.00%|
   923|         1|  1.40667e-05|  1.40667e-05|  0.00%|
(call)|         1|  8.70228e-05|  8.70228e-05|  0.00%|# <frozen importlib._bootstrap_external>:711 is_package
   924|         1|  4.05312e-06|  4.05312e-06|  0.00%|
   925|         0|            0|            0|  0.00%|
   926|         0|            0|            0|  0.00%|
   927|         0|            0|            0|  0.00%|
   928|         0|            0|            0|  0.00%|
   929|         0|            0|            0|  0.00%|
   930|         0|            0|            0|  0.00%|
   931|         1|  4.29153e-06|  4.29153e-06|  0.00%|
   932|         1|  2.95639e-05|  2.95639e-05|  0.00%|
(call)|         1|  0.000175476|  0.000175476|  0.00%|# <frozen importlib._bootstrap_external>:937 is_resource
   933|         0|            0|            0|  0.00%|
   934|         1|  5.45979e-05|  5.45979e-05|  0.00%|
(call)|         1|  1.45435e-05|  1.45435e-05|  0.00%|# <frozen importlib._bootstrap_external>:62 _path_split
(call)|         1|  3.33786e-05|  3.33786e-05|  0.00%|# <frozen importlib._bootstrap_external>:56 _path_join
   935|         1|  6.91414e-06|  6.91414e-06|  0.00%|
   936|         0|            0|            0|  0.00%|
   937|         1|  3.57628e-06|  3.57628e-06|  0.00%|
   938|         1|  4.76837e-06|  4.76837e-06|  0.00%|
   939|         0|            0|            0|  0.00%|
   940|         1|  1.81198e-05|  1.81198e-05|  0.00%|
(call)|         1|  3.40939e-05|  3.40939e-05|  0.00%|# <frozen importlib._bootstrap_external>:62 _path_split
(call)|         1|  3.93391e-05|  3.93391e-05|  0.00%|# <frozen importlib._bootstrap_external>:56 _path_join
   941|         1|  1.12057e-05|  1.12057e-05|  0.00%|
(call)|         1|   6.4373e-05|   6.4373e-05|  0.00%|# <frozen importlib._bootstrap_external>:93 _path_isfile
   942|         0|            0|            0|  0.00%|
   943|         0|            0|            0|  0.00%|
   944|         0|            0|            0|  0.00%|
   945|         0|            0|            0|  0.00%|
   946|         0|            0|            0|  0.00%|
   947|         0|            0|            0|  0.00%|
   948|         0|            0|            0|  0.00%|
   949|         0|            0|            0|  0.00%|
   950|         0|            0|            0|  0.00%|
   951|      2855|   0.00863767|  3.02545e-06|  0.00%|
   952|         0|            0|            0|  0.00%|
   953|      2855|    0.0313835|  1.09925e-05|  0.01%|
(call)|      2855|    0.0359712|  1.25994e-05|  0.01%|# <frozen importlib._bootstrap_external>:74 _path_stat
   954|      2855|    0.0117645|  4.12067e-06|  0.00%|
   955|         0|            0|            0|  0.00%|
   956|        11|  4.52995e-05|  4.11814e-06|  0.00%|
   957|         0|            0|            0|  0.00%|
   958|        11|  0.000154972|  1.40884e-05|  0.00%|
(call)|        11|  0.000531912|  4.83556e-05|  0.00%|# <frozen importlib._bootstrap_external>:381 _calc_mode
   959|        11|    0.0001688|  1.53455e-05|  0.00%|
(call)|        11|   0.00586176|  0.000532887|  0.00%|# <frozen importlib._bootstrap_external>:961 set_data
   960|         0|            0|            0|  0.00%|
   961|        11|  4.48227e-05|  4.07479e-06|  0.00%|
   962|         0|            0|            0|  0.00%|
   963|        11|  0.000136375|  1.23978e-05|  0.00%|
(call)|        11|  0.000195026|  1.77297e-05|  0.00%|# <frozen importlib._bootstrap_external>:62 _path_split
   964|        11|  4.81606e-05|  4.37823e-06|  0.00%|
   965|         0|            0|            0|  0.00%|
   966|        11|  0.000144482|  1.31347e-05|  0.00%|
(call)|        11|  0.000573635|  5.21486e-05|  0.00%|# <frozen importlib._bootstrap_external>:98 _path_isdir
   967|         0|            0|            0|  0.00%|
   968|         0|            0|            0|  0.00%|
   969|         0|            0|            0|  0.00%|
   970|        11|  6.62804e-05|  6.02549e-06|  0.00%|
   971|         0|            0|            0|  0.00%|
   972|         0|            0|            0|  0.00%|
   973|         0|            0|            0|  0.00%|
   974|         0|            0|            0|  0.00%|
   975|         0|            0|            0|  0.00%|
   976|         0|            0|            0|  0.00%|
   977|         0|            0|            0|  0.00%|
   978|         0|            0|            0|  0.00%|
   979|         0|            0|            0|  0.00%|
   980|         0|            0|            0|  0.00%|
   981|         0|            0|            0|  0.00%|
   982|         0|            0|            0|  0.00%|
   983|        11|  4.69685e-05|  4.26986e-06|  0.00%|
   984|        11|  0.000229359|  2.08508e-05|  0.00%|
(call)|        11|   0.00407672|  0.000370611|  0.00%|# <frozen importlib._bootstrap_external>:105 _write_atomic
   985|        11|   0.00018549|  1.68627e-05|  0.00%|
(call)|        11|  0.000114441|  1.04037e-05|  0.00%|# <frozen importlib._bootstrap>:222 _verbose_message
   986|         0|            0|            0|  0.00%|
   987|         0|            0|            0|  0.00%|
   988|         0|            0|            0|  0.00%|
   989|         0|            0|            0|  0.00%|
   990|         0|            0|            0|  0.00%|
   991|         0|            0|            0|  0.00%|
   992|         0|            0|            0|  0.00%|
   993|         0|            0|            0|  0.00%|
   994|         0|            0|            0|  0.00%|
   995|         0|            0|            0|  0.00%|
   996|         0|            0|            0|  0.00%|
   997|         0|            0|            0|  0.00%|
   998|         0|            0|            0|  0.00%|
   999|         0|            0|            0|  0.00%|
  1000|         0|            0|            0|  0.00%|
  1001|         0|            0|            0|  0.00%|
  1002|         0|            0|            0|  0.00%|
  1003|         0|            0|            0|  0.00%|
  1004|         0|            0|            0|  0.00%|
  1005|         0|            0|            0|  0.00%|
  1006|         0|            0|            0|  0.00%|
  1007|         0|            0|            0|  0.00%|
  1008|         0|            0|            0|  0.00%|
  1009|         0|            0|            0|  0.00%|
  1010|         0|            0|            0|  0.00%|
  1011|         0|            0|            0|  0.00%|
  1012|         0|            0|            0|  0.00%|
  1013|         0|            0|            0|  0.00%|
  1014|         0|            0|            0|  0.00%|
  1015|         0|            0|            0|  0.00%|
  1016|         0|            0|            0|  0.00%|
  1017|         0|            0|            0|  0.00%|
  1018|         0|            0|            0|  0.00%|
  1019|         0|            0|            0|  0.00%|
  1020|         0|            0|            0|  0.00%|
  1021|         0|            0|            0|  0.00%|
  1022|         0|            0|            0|  0.00%|
  1023|         0|            0|            0|  0.00%|
  1024|         0|            0|            0|  0.00%|
  1025|         0|            0|            0|  0.00%|
  1026|         0|            0|            0|  0.00%|
  1027|         0|            0|            0|  0.00%|
  1028|         0|            0|            0|  0.00%|
  1029|       216|  0.000695705|  3.22086e-06|  0.00%|
  1030|       216|  0.000930071|  4.30588e-06|  0.00%|
  1031|       216|  0.000785351|  3.63588e-06|  0.00%|
  1032|         0|            0|            0|  0.00%|
  1033|         0|            0|            0|  0.00%|
  1034|         0|            0|            0|  0.00%|
  1035|         0|            0|            0|  0.00%|
  1036|         0|            0|            0|  0.00%|
  1037|         0|            0|            0|  0.00%|
  1038|         0|            0|            0|  0.00%|
  1039|         0|            0|            0|  0.00%|
  1040|       215|  0.000656128|  3.05176e-06|  0.00%|
  1041|         0|            0|            0|  0.00%|
  1042|       215|  0.000866175|  4.02872e-06|  0.00%|
  1043|       215|   0.00339842|  1.58066e-05|  0.00%|
(call)|       215|     0.354988|   0.00165111|  0.10%|# <frozen importlib._bootstrap>:211 _call_with_frames_removed
  1044|       215|    0.0010674|  4.96465e-06|  0.00%|
  1045|       215|    0.0024755|   1.1514e-05|  0.00%|
(call)|       215|   0.00169539|  7.88556e-06|  0.00%|# <frozen importlib._bootstrap>:222 _verbose_message
  1046|       215|  0.000735521|  3.42103e-06|  0.00%|
  1047|         0|            0|            0|  0.00%|
  1048|       215|  0.000612736|  2.84993e-06|  0.00%|
  1049|         0|            0|            0|  0.00%|
  1050|       215|   0.00305796|  1.42231e-05|  0.00%|
(call)|       215|      0.59166|   0.00275191|  0.16%|# <frozen importlib._bootstrap>:211 _call_with_frames_removed
  1051|       215|  0.000865936|  4.02761e-06|  0.00%|
  1052|       215|   0.00230837|  1.07366e-05|  0.00%|
(call)|       215|   0.00148869|  6.92412e-06|  0.00%|# <frozen importlib._bootstrap>:222 _verbose_message
  1053|         0|            0|            0|  0.00%|
  1054|         0|            0|            0|  0.00%|
  1055|         0|            0|            0|  0.00%|
  1056|         0|            0|            0|  0.00%|
  1057|         0|            0|            0|  0.00%|
  1058|         0|            0|            0|  0.00%|
  1059|         0|            0|            0|  0.00%|
  1060|         0|            0|            0|  0.00%|
  1061|         0|            0|            0|  0.00%|
  1062|         0|            0|            0|  0.00%|
  1063|         0|            0|            0|  0.00%|
  1064|         0|            0|            0|  0.00%|
  1065|         0|            0|            0|  0.00%|
  1066|         0|            0|            0|  0.00%|
  1067|         0|            0|            0|  0.00%|
  1068|         0|            0|            0|  0.00%|
  1069|         0|            0|            0|  0.00%|
  1070|         0|            0|            0|  0.00%|
  1071|         0|            0|            0|  0.00%|
  1072|         0|            0|            0|  0.00%|
  1073|         0|            0|            0|  0.00%|
  1074|         0|            0|            0|  0.00%|
  1075|         0|            0|            0|  0.00%|
  1076|         0|            0|            0|  0.00%|
  1077|         0|            0|            0|  0.00%|
  1078|         0|            0|            0|  0.00%|
  1079|         0|            0|            0|  0.00%|
  1080|         0|            0|            0|  0.00%|
  1081|         1|  4.52995e-06|  4.52995e-06|  0.00%|
  1082|         1|  5.72205e-06|  5.72205e-06|  0.00%|
  1083|         1|  5.72205e-06|  5.72205e-06|  0.00%|
  1084|         1|  1.66893e-05|  1.66893e-05|  0.00%|
(call)|         1|  3.95775e-05|  3.95775e-05|  0.00%|# <frozen importlib._bootstrap_external>:1097 _get_parent_path
  1085|         1|  5.24521e-06|  5.24521e-06|  0.00%|
  1086|         0|            0|            0|  0.00%|
  1087|        18|  5.57899e-05|  3.09944e-06|  0.00%|
  1088|         0|            0|            0|  0.00%|
  1089|        18|  8.05855e-05|  4.47697e-06|  0.00%|
  1090|        18|   9.5129e-05|  5.28495e-06|  0.00%|
  1091|         0|            0|            0|  0.00%|
  1092|        18|  6.91414e-05|  3.84119e-06|  0.00%|
  1093|         0|            0|            0|  0.00%|
  1094|         0|            0|            0|  0.00%|
  1095|         0|            0|            0|  0.00%|
  1096|         0|            0|            0|  0.00%|
  1097|        18|  5.76973e-05|  3.20541e-06|  0.00%|
  1098|        18|  0.000251293|  1.39607e-05|  0.00%|
(call)|        18|  0.000300646|  1.67025e-05|  0.00%|# <frozen importlib._bootstrap_external>:1087 _find_parent_path_names
  1099|        18|  8.05855e-05|  4.47697e-06|  0.00%|
  1100|         0|            0|            0|  0.00%|
  1101|        17|  5.72205e-05|  3.36591e-06|  0.00%|
  1102|         0|            0|            0|  0.00%|
  1103|        17|  0.000246048|  1.44734e-05|  0.00%|
(call)|        17|  0.000650644|  3.82732e-05|  0.00%|# <frozen importlib._bootstrap_external>:1097 _get_parent_path
  1104|        17|   7.1764e-05|  4.22141e-06|  0.00%|
  1105|         2|  3.52859e-05|   1.7643e-05|  0.00%|
(call)|         2|   0.00809383|   0.00404692|  0.00%|# <frozen importlib._bootstrap_external>:1240 _get_spec
  1106|         0|            0|            0|  0.00%|
  1107|         0|            0|            0|  0.00%|
  1108|         2|  9.29832e-06|  4.64916e-06|  0.00%|
  1109|         2|  9.29832e-06|  4.64916e-06|  0.00%|
  1110|         2|  1.71661e-05|  8.58307e-06|  0.00%|
  1111|         2|  1.00136e-05|  5.00679e-06|  0.00%|
  1112|        17|  6.17504e-05|  3.63238e-06|  0.00%|
  1113|         0|            0|            0|  0.00%|
  1114|        17|  5.88894e-05|  3.46408e-06|  0.00%|
  1115|        17|  0.000231504|  1.36179e-05|  0.00%|
(call)|        17|   0.00926232|  0.000544843|  0.00%|# <frozen importlib._bootstrap_external>:1101 _recalculate
  1116|         0|            0|            0|  0.00%|
  1117|         0|            0|            0|  0.00%|
  1118|         0|            0|            0|  0.00%|
  1119|         0|            0|            0|  0.00%|
  1120|         0|            0|            0|  0.00%|
  1121|         0|            0|            0|  0.00%|
  1122|         0|            0|            0|  0.00%|
  1123|         0|            0|            0|  0.00%|
  1124|         0|            0|            0|  0.00%|
  1125|         0|            0|            0|  0.00%|
  1126|         0|            0|            0|  0.00%|
  1127|         0|            0|            0|  0.00%|
  1128|         0|            0|            0|  0.00%|
  1129|         0|            0|            0|  0.00%|
  1130|         0|            0|            0|  0.00%|
  1131|         0|            0|            0|  0.00%|
  1132|         0|            0|            0|  0.00%|
  1133|         0|            0|            0|  0.00%|
  1134|         0|            0|            0|  0.00%|
  1135|         0|            0|            0|  0.00%|
  1136|         0|            0|            0|  0.00%|
  1137|         0|            0|            0|  0.00%|
  1138|         0|            0|            0|  0.00%|
  1139|         0|            0|            0|  0.00%|
  1140|         0|            0|            0|  0.00%|
  1141|         0|            0|            0|  0.00%|
  1142|         0|            0|            0|  0.00%|
  1143|         0|            0|            0|  0.00%|
  1144|         0|            0|            0|  0.00%|
  1145|         0|            0|            0|  0.00%|
  1146|         0|            0|            0|  0.00%|
  1147|         0|            0|            0|  0.00%|
  1148|         0|            0|            0|  0.00%|
  1149|         0|            0|            0|  0.00%|
  1150|         0|            0|            0|  0.00%|
  1151|         0|            0|            0|  0.00%|
  1152|         0|            0|            0|  0.00%|
  1153|         0|            0|            0|  0.00%|
  1154|         0|            0|            0|  0.00%|
  1155|         0|            0|            0|  0.00%|
  1156|         0|            0|            0|  0.00%|
  1157|         0|            0|            0|  0.00%|
  1158|         0|            0|            0|  0.00%|
  1159|         1|  1.90735e-05|  1.90735e-05|  0.00%|
  1160|         1|  5.72205e-06|  5.72205e-06|  0.00%|
  1161|         0|            0|            0|  0.00%|
  1162|         0|            0|            0|  0.00%|
  1163|         0|            0|            0|  0.00%|
  1164|         0|            0|            0|  0.00%|
  1165|         0|            0|            0|  0.00%|
  1166|         0|            0|            0|  0.00%|
  1167|         0|            0|            0|  0.00%|
  1168|         0|            0|            0|  0.00%|
  1169|         0|            0|            0|  0.00%|
  1170|         0|            0|            0|  0.00%|
  1171|         0|            0|            0|  0.00%|
  1172|         0|            0|            0|  0.00%|
  1173|         0|            0|            0|  0.00%|
  1174|         0|            0|            0|  0.00%|
  1175|         0|            0|            0|  0.00%|
  1176|         0|            0|            0|  0.00%|
  1177|         0|            0|            0|  0.00%|
  1178|         0|            0|            0|  0.00%|
  1179|         0|            0|            0|  0.00%|
  1180|         0|            0|            0|  0.00%|
  1181|         0|            0|            0|  0.00%|
  1182|         0|            0|            0|  0.00%|
  1183|         0|            0|            0|  0.00%|
  1184|         0|            0|            0|  0.00%|
  1185|         0|            0|            0|  0.00%|
  1186|         0|            0|            0|  0.00%|
  1187|         0|            0|            0|  0.00%|
  1188|         0|            0|            0|  0.00%|
  1189|         0|            0|            0|  0.00%|
  1190|       614|    0.0020411|  3.32427e-06|  0.00%|
  1191|         0|            0|            0|  0.00%|
  1192|         0|            0|            0|  0.00%|
  1193|       614|   0.00275826|  4.49229e-06|  0.00%|
  1194|         0|            0|            0|  0.00%|
  1195|      1230|   0.00487089|  3.96007e-06|  0.00%|
  1196|      1228|   0.00432301|  3.52036e-06|  0.00%|
  1197|      1228|    0.0156822|  1.27705e-05|  0.00%|
(call)|       614|     0.152201|  0.000247885|  0.04%|# <frozen importlib._bootstrap_external>:1445 path_hook_for_FileFinder
  1198|       616|   0.00276828|  4.49396e-06|  0.00%|
  1199|       616|    0.0027287|  4.42971e-06|  0.00%|
  1200|         0|            0|            0|  0.00%|
  1201|         2|  5.96046e-06|  2.98023e-06|  0.00%|
  1202|         0|            0|            0|  0.00%|
  1203|      4121|    0.0120382|  2.92119e-06|  0.00%|
  1204|         0|            0|            0|  0.00%|
  1205|         0|            0|            0|  0.00%|
  1206|         0|            0|            0|  0.00%|
  1207|         0|            0|            0|  0.00%|
  1208|         0|            0|            0|  0.00%|
  1209|         0|            0|            0|  0.00%|
  1210|         0|            0|            0|  0.00%|
  1211|      4121|    0.0160234|  3.88823e-06|  0.00%|
  1212|       180|  0.000591516|   3.2862e-06|  0.00%|
  1213|       180|   0.00167108|  9.28375e-06|  0.00%|
  1214|         0|            0|            0|  0.00%|
  1215|         0|            0|            0|  0.00%|
  1216|         0|            0|            0|  0.00%|
  1217|         0|            0|            0|  0.00%|
  1218|      4121|    0.0149794|  3.63489e-06|  0.00%|
  1219|      4121|    0.0177279|  4.30183e-06|  0.00%|
  1220|       614|   0.00252295|  4.10903e-06|  0.00%|
  1221|       614|   0.00733781|  1.19508e-05|  0.00%|
(call)|       614|      0.18738|  0.000305179|  0.05%|# <frozen importlib._bootstrap_external>:1190 _path_hooks
  1222|       614|   0.00278807|  4.54083e-06|  0.00%|
  1223|      4121|    0.0141373|  3.43054e-06|  0.00%|
  1224|         0|            0|            0|  0.00%|
  1225|         0|            0|            0|  0.00%|
  1226|         0|            0|            0|  0.00%|
  1227|         0|            0|            0|  0.00%|
  1228|         0|            0|            0|  0.00%|
  1229|         0|            0|            0|  0.00%|
  1230|         0|            0|            0|  0.00%|
  1231|         0|            0|            0|  0.00%|
  1232|         0|            0|            0|  0.00%|
  1233|         0|            0|            0|  0.00%|
  1234|         0|            0|            0|  0.00%|
  1235|         0|            0|            0|  0.00%|
  1236|         0|            0|            0|  0.00%|
  1237|         0|            0|            0|  0.00%|
  1238|         0|            0|            0|  0.00%|
  1239|         0|            0|            0|  0.00%|
  1240|      3200|    0.0119684|  3.74012e-06|  0.00%|
  1241|         0|            0|            0|  0.00%|
  1242|         0|            0|            0|  0.00%|
  1243|         0|            0|            0|  0.00%|
  1244|         0|            0|            0|  0.00%|
  1245|      3200|    0.0149167|  4.66146e-06|  0.00%|
  1246|      4250|     0.020669|  4.86329e-06|  0.01%|
(call)|        14|   0.00521064|  0.000372188|  0.00%|# <frozen importlib._bootstrap_external>:1114 __iter__
  1247|      4121|    0.0195389|   4.7413e-06|  0.01%|
  1248|         0|            0|            0|  0.00%|
  1249|      4121|    0.0460238|  1.11681e-05|  0.01%|
(call)|      4121|     0.277197|  6.72646e-05|  0.08%|# <frozen importlib._bootstrap_external>:1203 _path_importer_cache
  1250|      4121|    0.0167701|  4.06943e-06|  0.00%|
  1251|      3911|     0.017714|  4.52928e-06|  0.00%|
  1252|      3911|    0.0538466|   1.3768e-05|  0.01%|
(call)|      3911|      2.45196|   0.00062694|  0.67%|# <frozen importlib._bootstrap_external>:1356 find_spec
  1253|         0|            0|            0|  0.00%|
  1254|         0|            0|            0|  0.00%|
  1255|      3911|    0.0164459|  4.20503e-06|  0.00%|
  1256|       837|   0.00301886|  3.60676e-06|  0.00%|
  1257|      3074|    0.0124309|  4.04389e-06|  0.00%|
  1258|      3071|    0.0118129|  3.84661e-06|  0.00%|
  1259|         3|  1.09673e-05|  3.65575e-06|  0.00%|
  1260|         3|   1.4782e-05|  4.92732e-06|  0.00%|
  1261|         0|            0|            0|  0.00%|
  1262|         0|            0|            0|  0.00%|
  1263|         0|            0|            0|  0.00%|
  1264|         0|            0|            0|  0.00%|
  1265|         0|            0|            0|  0.00%|
  1266|         3|   1.5974e-05|  5.32468e-06|  0.00%|
  1267|         0|            0|            0|  0.00%|
  1268|       129|   0.00155592|  1.20614e-05|  0.00%|
(call)|       129|   0.00365543|  2.83367e-05|  0.00%|# <frozen importlib._bootstrap>:369 __init__
  1269|       129|  0.000622034|  4.82197e-06|  0.00%|
  1270|       129|  0.000558615|  4.33035e-06|  0.00%|
  1271|         0|            0|            0|  0.00%|
  1272|      3198|   0.00938129|  2.93349e-06|  0.00%|
  1273|         0|            0|            0|  0.00%|
  1274|         0|            0|            0|  0.00%|
  1275|         0|            0|            0|  0.00%|
  1276|         0|            0|            0|  0.00%|
  1277|         0|            0|            0|  0.00%|
  1278|      3198|    0.0129318|  4.04372e-06|  0.00%|
  1279|       178|  0.000725269|  4.07455e-06|  0.00%|
  1280|      3198|    0.0378301|  1.18293e-05|  0.01%|
(call)|      3198|      2.97787|  0.000931166|  0.81%|# <frozen importlib._bootstrap_external>:1240 _get_spec
  1281|      3198|    0.0122569|  3.83266e-06|  0.00%|
  1282|         0|            0|            0|  0.00%|
  1283|      3198|    0.0120053|  3.75401e-06|  0.00%|
  1284|       127|  0.000453234|  3.56877e-06|  0.00%|
  1285|       127|  0.000444651|  3.50119e-06|  0.00%|
  1286|         0|            0|            0|  0.00%|
  1287|         0|            0|            0|  0.00%|
  1288|         1|  3.57628e-06|  3.57628e-06|  0.00%|
  1289|         1|  1.83582e-05|  1.83582e-05|  0.00%|
(call)|         1|   7.7486e-05|   7.7486e-05|  0.00%|# <frozen importlib._bootstrap_external>:1081 __init__
  1290|         1|  4.52995e-06|  4.52995e-06|  0.00%|
  1291|         0|            0|            0|  0.00%|
  1292|       126|  0.000491142|  3.89795e-06|  0.00%|
  1293|         0|            0|            0|  0.00%|
  1294|      3071|    0.0113089|  3.68248e-06|  0.00%|
  1295|         0|            0|            0|  0.00%|
  1296|         0|            0|            0|  0.00%|
  1297|         0|            0|            0|  0.00%|
  1298|         0|            0|            0|  0.00%|
  1299|         0|            0|            0|  0.00%|
  1300|         0|            0|            0|  0.00%|
  1301|         0|            0|            0|  0.00%|
  1302|         0|            0|            0|  0.00%|
  1303|         0|            0|            0|  0.00%|
  1304|         0|            0|            0|  0.00%|
  1305|         0|            0|            0|  0.00%|
  1306|         0|            0|            0|  0.00%|
  1307|         0|            0|            0|  0.00%|
  1308|         0|            0|            0|  0.00%|
  1309|         0|            0|            0|  0.00%|
  1310|         0|            0|            0|  0.00%|
  1311|         0|            0|            0|  0.00%|
  1312|         0|            0|            0|  0.00%|
  1313|         0|            0|            0|  0.00%|
  1314|         0|            0|            0|  0.00%|
  1315|         0|            0|            0|  0.00%|
  1316|         0|            0|            0|  0.00%|
  1317|         0|            0|            0|  0.00%|
  1318|         0|            0|            0|  0.00%|
  1319|       615|   0.00280643|  4.56329e-06|  0.00%|
  1320|         0|            0|            0|  0.00%|
  1321|         0|            0|            0|  0.00%|
  1322|         0|            0|            0|  0.00%|
  1323|       615|   0.00298834|  4.85909e-06|  0.00%|
  1324|      2456|    0.0102916|  4.19038e-06|  0.00%|
  1325|     11665|    0.0723951|  6.20618e-06|  0.02%|
(call)|      4912|    0.0299964|  6.10676e-06|  0.01%|# <frozen importlib._bootstrap_external>:1325 <genexpr>
  1326|       615|   0.00242162|  3.93759e-06|  0.00%|
  1327|         0|            0|            0|  0.00%|
  1328|       615|   0.00241899|  3.93333e-06|  0.00%|
  1329|       615|   0.00236201|  3.84067e-06|  0.00%|
  1330|       615|   0.00274229|  4.45901e-06|  0.00%|
  1331|       615|   0.00273657|   4.4497e-06|  0.00%|
  1332|         0|            0|            0|  0.00%|
  1333|         0|            0|            0|  0.00%|
  1334|         0|            0|            0|  0.00%|
  1335|         0|            0|            0|  0.00%|
  1336|         0|            0|            0|  0.00%|
  1337|         0|            0|            0|  0.00%|
  1338|         0|            0|            0|  0.00%|
  1339|        25|  7.08103e-05|  2.83241e-06|  0.00%|
  1340|         0|            0|            0|  0.00%|
  1341|         0|            0|            0|  0.00%|
  1342|         0|            0|            0|  0.00%|
  1343|         0|            0|            0|  0.00%|
  1344|         0|            0|            0|  0.00%|
  1345|         0|            0|            0|  0.00%|
  1346|        25|  0.000358582|  1.43433e-05|  0.00%|
(call)|        25|    0.0124447|  0.000497789|  0.00%|# <frozen importlib._bootstrap_external>:1356 find_spec
  1347|        25|   0.00010705|    4.282e-06|  0.00%|
  1348|        25|  8.22544e-05|  3.29018e-06|  0.00%|
  1349|         0|            0|            0|  0.00%|
  1350|         0|            0|            0|  0.00%|
  1351|      3743|    0.0123451|  3.29818e-06|  0.00%|
  1352|      3743|    0.0427706|  1.14268e-05|  0.01%|
(call)|      3527|    0.0350423|  9.93544e-06|  0.01%|# <frozen importlib._bootstrap_external>:884 __init__
(call)|       216|   0.00241113|  1.11626e-05|  0.00%|# <frozen importlib._bootstrap_external>:1029 __init__
  1353|      3743|    0.0142362|  3.80342e-06|  0.00%|
  1354|      3743|    0.0444162|  1.18665e-05|  0.01%|
(call)|      3743|     0.303513|  8.10882e-05|  0.08%|# <frozen importlib._bootstrap_external>:574 spec_from_file_location
  1355|         0|            0|            0|  0.00%|
  1356|      5075|    0.0218031|  4.29619e-06|  0.01%|
  1357|         0|            0|            0|  0.00%|
  1358|         0|            0|            0|  0.00%|
  1359|         0|            0|            0|  0.00%|
  1360|         0|            0|            0|  0.00%|
  1361|      5075|    0.0265203|  5.22567e-06|  0.01%|
  1362|      5075|    0.0286756|  5.65036e-06|  0.01%|
  1363|      5075|    0.0248914|   4.9047e-06|  0.01%|
  1364|      5075|    0.0718727|  1.41621e-05|  0.02%|
(call)|      5075|    0.0726163|  1.43086e-05|  0.02%|# <frozen importlib._bootstrap_external>:74 _path_stat
  1365|         0|            0|            0|  0.00%|
  1366|         0|            0|            0|  0.00%|
  1367|      5075|    0.0279834|  5.51398e-06|  0.01%|
  1368|       615|   0.00949597|  1.54406e-05|  0.00%|
(call)|       615|     0.124981|  0.000203222|  0.03%|# <frozen importlib._bootstrap_external>:1404 _fill_cache
  1369|       615|   0.00324726|   5.2801e-06|  0.00%|
  1370|         0|            0|            0|  0.00%|
  1371|      5075|    0.0601325|  1.18488e-05|  0.02%|
(call)|      5075|    0.0300796|  5.92702e-06|  0.01%|# <frozen importlib._bootstrap_external>:40 _relax_case
  1372|         0|            0|            0|  0.00%|
  1373|         0|            0|            0|  0.00%|
  1374|         0|            0|            0|  0.00%|
  1375|      5075|    0.0256345|  5.05114e-06|  0.01%|
  1376|      5075|    0.0239379|  4.71684e-06|  0.01%|
  1377|         0|            0|            0|  0.00%|
  1378|      5075|    0.0257397|  5.07186e-06|  0.01%|
  1379|      2274|     0.027643|  1.21561e-05|  0.01%|
(call)|      2274|     0.084564|  3.71873e-05|  0.02%|# <frozen importlib._bootstrap_external>:56 _path_join
  1380|     10000|    0.0471358|  4.71358e-06|  0.01%|
  1381|      9548|    0.0424438|   4.4453e-06|  0.01%|
  1382|      9548|      0.10573|  1.10735e-05|  0.03%|
(call)|      9548|     0.324668|  3.40037e-05|  0.09%|# <frozen importlib._bootstrap_external>:56 _path_join
  1383|      9548|     0.104888|  1.09854e-05|  0.03%|
(call)|      9548|      0.45107|  4.72424e-05|  0.12%|# <frozen importlib._bootstrap_external>:93 _path_isfile
  1384|      1822|    0.0236611|  1.29864e-05|  0.01%|
(call)|      1822|     0.222131|  0.000121916|  0.06%|# <frozen importlib._bootstrap_external>:1351 _get_spec
  1385|         0|            0|            0|  0.00%|
  1386|         0|            0|            0|  0.00%|
  1387|         0|            0|            0|  0.00%|
  1388|       452|   0.00514579|  1.13845e-05|  0.00%|
(call)|       452|    0.0193532|  4.28167e-05|  0.01%|# <frozen importlib._bootstrap_external>:98 _path_isdir
  1389|         0|            0|            0|  0.00%|
  1390|     15037|    0.0668705|  4.44706e-06|  0.02%|
  1391|     13705|       0.1578|  1.15141e-05|  0.04%|
(call)|     13705|     0.471138|  3.43771e-05|  0.13%|# <frozen importlib._bootstrap_external>:56 _path_join
  1392|     13705|     0.156958|  1.14526e-05|  0.04%|
(call)|     13705|    0.0879657|  6.41851e-06|  0.02%|# <frozen importlib._bootstrap>:222 _verbose_message
  1393|     13705|    0.0641637|  4.68177e-06|  0.02%|
  1394|      1921|    0.0215371|  1.12114e-05|  0.01%|
(call)|      1921|    0.0875578|  4.55793e-05|  0.02%|# <frozen importlib._bootstrap_external>:93 _path_isfile
  1395|      1921|   0.00927472|  4.82807e-06|  0.00%|
  1396|      1921|    0.0242262|  1.26112e-05|  0.01%|
(call)|      1921|     0.232604|  0.000121085|  0.06%|# <frozen importlib._bootstrap_external>:1351 _get_spec
  1397|      1332|   0.00568843|  4.27059e-06|  0.00%|
  1398|       444|   0.00501633|   1.1298e-05|  0.00%|
(call)|       444|   0.00264502|  5.95724e-06|  0.00%|# <frozen importlib._bootstrap>:222 _verbose_message
  1399|       444|   0.00554204|  1.24821e-05|  0.00%|
(call)|       444|    0.0124724|   2.8091e-05|  0.00%|# <frozen importlib._bootstrap>:369 __init__
  1400|       444|   0.00199866|  4.50149e-06|  0.00%|
  1401|       444|   0.00177121|  3.98922e-06|  0.00%|
  1402|       888|   0.00378752|  4.26522e-06|  0.00%|
  1403|         0|            0|            0|  0.00%|
  1404|       615|   0.00266409|  4.33185e-06|  0.00%|
  1405|         0|            0|            0|  0.00%|
  1406|       615|   0.00300813|  4.89126e-06|  0.00%|
  1407|       615|   0.00292802|  4.76101e-06|  0.00%|
  1408|       615|     0.103014|  0.000167503|  0.03%|
  1409|         0|            0|            0|  0.00%|
  1410|         0|            0|            0|  0.00%|
  1411|         0|            0|            0|  0.00%|
  1412|         0|            0|            0|  0.00%|
  1413|         0|            0|            0|  0.00%|
  1414|         0|            0|            0|  0.00%|
  1415|       615|   0.00507379|  8.25006e-06|  0.00%|
  1416|       615|   0.00483227|  7.85735e-06|  0.00%|
  1417|         0|            0|            0|  0.00%|
  1418|         0|            0|            0|  0.00%|
  1419|         0|            0|            0|  0.00%|
  1420|         0|            0|            0|  0.00%|
  1421|         0|            0|            0|  0.00%|
  1422|         0|            0|            0|  0.00%|
  1423|         0|            0|            0|  0.00%|
  1424|         0|            0|            0|  0.00%|
  1425|         0|            0|            0|  0.00%|
  1426|         0|            0|            0|  0.00%|
  1427|         0|            0|            0|  0.00%|
  1428|         0|            0|            0|  0.00%|
  1429|         0|            0|            0|  0.00%|
  1430|         0|            0|            0|  0.00%|
  1431|         0|            0|            0|  0.00%|
  1432|       615|   0.00346088|  5.62745e-06|  0.00%|
  1433|         0|            0|            0|  0.00%|
  1434|         0|            0|            0|  0.00%|
  1435|         0|            0|            0|  0.00%|
  1436|         0|            0|            0|  0.00%|
  1437|         0|            0|            0|  0.00%|
  1438|         0|            0|            0|  0.00%|
  1439|         0|            0|            0|  0.00%|
  1440|         0|            0|            0|  0.00%|
  1441|         0|            0|            0|  0.00%|
  1442|         0|            0|            0|  0.00%|
  1443|         0|            0|            0|  0.00%|
  1444|         0|            0|            0|  0.00%|
  1445|       615|   0.00202227|  3.28824e-06|  0.00%|
  1446|         0|            0|            0|  0.00%|
  1447|       615|   0.00697017|  1.13336e-05|  0.00%|
(call)|       615|    0.0336628|  5.47363e-05|  0.01%|# <frozen importlib._bootstrap_external>:98 _path_isdir
  1448|         2|  1.40667e-05|  7.03335e-06|  0.00%|
  1449|       613|   0.00895047|  1.46011e-05|  0.00%|
(call)|       613|     0.100914|  0.000164624|  0.03%|# <frozen importlib._bootstrap_external>:1319 __init__
File: /home/jupyter/REPOS/spacetx-research/src/MODULES/vae_parts.py
File duration: 3.90395s (1.06%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|   4.3869e-05|  2.19345e-05|  0.00%|import torch
     2|         1|  1.14441e-05|  1.14441e-05|  0.00%|import torch.nn.functional as F
     3|         1|  8.44002e-05|  8.44002e-05|  0.00%|from .cropper_uncropper import Uncropper, Cropper
(call)|         1|  4.55379e-05|  4.55379e-05|  0.00%|# <frozen importlib._bootstrap>:416 parent
(call)|         1|   0.00448966|   0.00448966|  0.00%|# <frozen importlib._bootstrap>:978 _find_and_load
(call)|         1|  2.43187e-05|  2.43187e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
     4|         1|  9.53674e-05|  9.53674e-05|  0.00%|from .non_max_suppression import NonMaxSuppression
(call)|         1|  1.43051e-05|  1.43051e-05|  0.00%|# <frozen importlib._bootstrap>:416 parent
(call)|         1|   0.00445962|   0.00445962|  0.00%|# <frozen importlib._bootstrap>:978 _find_and_load
(call)|         1|  1.95503e-05|  1.95503e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
     5|         1|  9.44138e-05|  9.44138e-05|  0.00%|from .unet_model import UNet
(call)|         1|  1.45435e-05|  1.45435e-05|  0.00%|# <frozen importlib._bootstrap>:416 parent
(call)|         1|    0.0133967|    0.0133967|  0.00%|# <frozen importlib._bootstrap>:978 _find_and_load
(call)|         1|  1.83582e-05|  1.83582e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
     6|         1|  5.34058e-05|  5.34058e-05|  0.00%|from .encoders_decoders import EncoderConv, DecoderConv, Decoder1by1Linear, EncoderConvLeaky, DecoderConvLeaky
(call)|         1|   1.4782e-05|   1.4782e-05|  0.00%|# <frozen importlib._bootstrap>:416 parent
(call)|         1|  1.71661e-05|  1.71661e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
     7|         1|  5.22137e-05|  5.22137e-05|  0.00%|from .utilities import compute_average_in_box, compute_ranking
(call)|         1|  1.40667e-05|  1.40667e-05|  0.00%|# <frozen importlib._bootstrap>:416 parent
(call)|         1|   1.7643e-05|   1.7643e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
     8|         1|  5.07832e-05|  5.07832e-05|  0.00%|from .utilities_ml import sample_and_kl_diagonal_normal, sample_and_kl_multivariate_normal
(call)|         1|  1.38283e-05|  1.38283e-05|  0.00%|# <frozen importlib._bootstrap>:416 parent
(call)|         1|  1.71661e-05|  1.71661e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
     9|         1|   6.7234e-05|   6.7234e-05|  0.00%|from .namedtuple import Inference, BB, NMSoutput, UNEToutput, ZZ, DIST
(call)|         1|   2.3365e-05|   2.3365e-05|  0.00%|# <frozen importlib._bootstrap>:416 parent
(call)|         1|  3.24249e-05|  3.24249e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
    10|         0|            0|            0|  0.00%|
    11|         0|            0|            0|  0.00%|
    12|        25|  0.000207663|   8.3065e-06|  0.00%|def squared_exp_kernel(locations: torch.Tensor, length_scale: float, eps: float = 1E-6):
    13|         0|            0|            0|  0.00%|    """ Input:
    14|         0|            0|            0|  0.00%|        locations.shape = (*, n, D)
    15|         0|            0|            0|  0.00%|        Output:
    16|         0|            0|            0|  0.00%|        C.shape = (*, n, n)
    17|         0|            0|            0|  0.00%|        where batched_dimension * might or might not be present
    18|         0|            0|            0|  0.00%|        It is necessary to add small positive shift on the diagonal otherwise Cholesky decomposition fails
    19|         0|            0|            0|  0.00%|    """
    20|        24|   0.00134134|  5.58893e-05|  0.00%|    loc = locations/length_scale  # *, n, D
    21|        24|  0.000776291|  3.23455e-05|  0.00%|    loc1 = loc.unsqueeze(-2)  # *,n,1,D
    22|        24|  0.000367641|  1.53184e-05|  0.00%|    loc2 = loc.unsqueeze(-3)  # *,1,n,D
    23|        24|   0.00393367|  0.000163903|  0.00%|    scaled_d2 = (loc1-loc2).pow(2).sum(dim=-1)  # *,n,n
    24|        24|   0.00321436|  0.000133932|  0.00%|    cov = torch.exp(-0.5 * scaled_d2)  # *,n,n . This covariance is between (0,1)
    25|         0|            0|            0|  0.00%|
    26|         0|            0|            0|  0.00%|    # add STRICTLY POSITIVE shift on main diagonal to prevent matrix from becoming close to singular
    27|        24|   0.00302148|  0.000125895|  0.00%|    shift = eps * torch.eye(loc.shape[-2], dtype=cov.dtype, device=cov.device, requires_grad=False)  # n,n
    28|        24|   0.00243664|  0.000101527|  0.00%|    return (cov + shift).clamp(min=0)
    29|         0|            0|            0|  0.00%|
    30|         0|            0|            0|  0.00%|
    31|       145|  0.000859022|  5.92429e-06|  0.00%|def convert_to_box_list(x: torch.Tensor) -> torch.Tensor:
    32|         0|            0|            0|  0.00%|    """ takes input of shape: (batch, ch, width, height)
    33|         0|            0|            0|  0.00%|        and returns output of shape: (n_list, batch, ch)
    34|         0|            0|            0|  0.00%|        where n_list = width x height
    35|         0|            0|            0|  0.00%|    """
    36|       144|  0.000963449|  6.69062e-06|  0.00%|    assert len(x.shape) == 4
    37|       144|  0.000778913|  5.40912e-06|  0.00%|    batch_size, ch, width, height = x.shape
    38|       144|   0.00379705|  2.63684e-05|  0.00%|    return x.permute(2, 3, 0, 1).view(width*height, batch_size, ch)
    39|         0|            0|            0|  0.00%|
    40|         0|            0|            0|  0.00%|
    41|        24|  0.000273943|  1.14143e-05|  0.00%|def invert_convert_to_box_list(x: torch.Tensor, original_width: int, original_height: int) -> torch.Tensor:
    42|         0|            0|            0|  0.00%|    """ takes input of shape: (width x height, batch, ch)
    43|         0|            0|            0|  0.00%|        and return shape: (batch, ch, width, height)
    44|         0|            0|            0|  0.00%|    """
    45|        23|  0.000165701|  7.20439e-06|  0.00%|    assert len(x.shape) == 3
    46|        23|  0.000239849|  1.04282e-05|  0.00%|    n_list, batch_size, ch = x.shape
    47|        23|  0.000124693|  5.42143e-06|  0.00%|    assert n_list == original_width * original_height
    48|        23|  0.000546932|  2.37797e-05|  0.00%|    return x.permute(1, 2, 0).view(batch_size, ch, original_width, original_height)
    49|         0|            0|            0|  0.00%|
    50|         0|            0|            0|  0.00%|
    51|        25|  0.000216722|   8.6689e-06|  0.00%|def from_weights_to_masks(weight: torch.Tensor, dim: int):
    52|         0|            0|            0|  0.00%|    """ Make sure that when summing over dim=dim the mask sum to zero or one
    53|         0|            0|            0|  0.00%|        mask_j = fg_mask * partitioning_j
    54|         0|            0|            0|  0.00%|        where fg_mask = tanh ( sum_i w_i) and partitioning_j = w_j / (sum_i w_i)
    55|         0|            0|            0|  0.00%|    """
    56|        24|  0.000190496|  7.93735e-06|  0.00%|    assert len(weight.shape) == 5
    57|        24|   0.00154018|  6.41743e-05|  0.00%|    sum_weight = torch.sum(weight, dim=dim, keepdim=True)
    58|        24|   0.00177622|  7.40091e-05|  0.00%|    fg_mask = torch.tanh(sum_weight)
    59|        24|   0.00219941|  9.16421e-05|  0.00%|    partitioning = weight / torch.clamp(sum_weight, min=1E-6)
    60|        24|   0.00119305|  4.97103e-05|  0.00%|    return fg_mask * partitioning
    61|         0|            0|            0|  0.00%|
    62|         0|            0|            0|  0.00%|
    63|         1|  1.26362e-05|  1.26362e-05|  0.00%|def downsample_and_upsample(x: torch.Tensor, low_resolution: tuple, high_resolution: tuple):
    64|         0|            0|            0|  0.00%|    low_res_x = F.adaptive_avg_pool2d(x, output_size=low_resolution)
    65|         0|            0|            0|  0.00%|    # low_res_x = F.adaptive_max_pool2d(x, output_size=low_resolution)
    66|         0|            0|            0|  0.00%|    high_res_x = F.interpolate(low_res_x, size=high_resolution, mode='bilinear', align_corners=True)
    67|         0|            0|            0|  0.00%|    return high_res_x
    68|         0|            0|            0|  0.00%|
    69|         0|            0|            0|  0.00%|
    70|         3|  7.98702e-05|  2.66234e-05|  0.00%|class Inference_and_Generation(torch.nn.Module):
(call)|         1|  0.000108242|  0.000108242|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/vae_parts.py:70 Inference_and_Generation
    71|         0|            0|            0|  0.00%|
    72|         2|  1.45435e-05|  7.27177e-06|  0.00%|    def __init__(self, params):
    73|         1|  1.69277e-05|  1.69277e-05|  0.00%|        super().__init__()
(call)|         1|  0.000485897|  0.000485897|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:71 __init__
    74|         0|            0|            0|  0.00%|
    75|         0|            0|            0|  0.00%|        # variables
    76|         1|   1.5974e-05|   1.5974e-05|  0.00%|        self.size_max: int = params["input_image"]["size_object_max"]
(call)|         1|  5.84126e-05|  5.84126e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    77|         1|   1.4782e-05|   1.4782e-05|  0.00%|        self.size_min: int = params["input_image"]["size_object_min"]
(call)|         1|  4.07696e-05|  4.07696e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    78|         1|  1.85966e-05|  1.85966e-05|  0.00%|        self.cropped_size: int = params["architecture"]["cropped_size"]
(call)|         1|  4.05312e-05|  4.05312e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    79|         1|  2.31266e-05|  2.31266e-05|  0.00%|        self.prior_L_cov = None
(call)|         1|  4.05312e-05|  4.05312e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    80|         0|            0|            0|  0.00%|
    81|         1|  9.82285e-05|  9.82285e-05|  0.00%|        self.length_scale_GP_raw = torch.nn.Parameter(data=torch.tensor(params["input_image"]["length_scale_GP"]),
    82|         1|    4.673e-05|    4.673e-05|  0.00%|                                                      requires_grad=True)
(call)|         1|  5.14984e-05|  5.14984e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/parameter.py:23 __new__
(call)|         1|    0.0002985|    0.0002985|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    83|         0|            0|            0|  0.00%|
    84|         0|            0|            0|  0.00%|        # modules
    85|         1|  3.88622e-05|  3.88622e-05|  0.00%|        self.unet: UNet = UNet(params)
(call)|         1|     0.189587|     0.189587|  0.05%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/unet_model.py:9 __init__
(call)|         1|   6.8903e-05|   6.8903e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    86|         0|            0|            0|  0.00%|
    87|         0|            0|            0|  0.00%|        # Decoders
    88|         1|  7.39098e-06|  7.39098e-06|  0.00%|        self.decoder_zwhere: Decoder1by1Linear = Decoder1by1Linear(dim_z=params["architecture"]["dim_zwhere"],
    89|         1|  4.76837e-06|  4.76837e-06|  0.00%|                                                                   ch_out=4,
    90|         1|  2.90871e-05|  2.90871e-05|  0.00%|                                                                   groups=params["architecture"]["dim_zwhere"])
(call)|         1|   0.00329566|   0.00329566|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/encoders_decoders.py:55 __init__
(call)|         1|  7.05719e-05|  7.05719e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    91|         0|            0|            0|  0.00%|
    92|         1|  6.19888e-06|  6.19888e-06|  0.00%|        self.decoder_logit: Decoder1by1Linear = Decoder1by1Linear(dim_z=params["architecture"]["dim_logit"],
    93|         1|  4.76837e-06|  4.76837e-06|  0.00%|                                                                  ch_out=1,
    94|         1|  2.67029e-05|  2.67029e-05|  0.00%|                                                                  groups=1)
(call)|         1|   0.00308657|   0.00308657|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/encoders_decoders.py:55 __init__
(call)|         1|  7.08103e-05|  7.08103e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    95|         0|            0|            0|  0.00%|
    96|         1|  6.91414e-06|  6.91414e-06|  0.00%|        leaky = False
    97|         1|  5.00679e-06|  5.00679e-06|  0.00%|        if leaky:
    98|         0|            0|            0|  0.00%|            self.decoder_zinstance: DecoderConvLeaky = DecoderConvLeaky(size=params["architecture"]["cropped_size"],
    99|         0|            0|            0|  0.00%|                                                                        dim_z=params["architecture"]["dim_zinstance"],
   100|         0|            0|            0|  0.00%|                                                                        ch_out=params["input_image"]["ch_in"] + 1)
   101|         0|            0|            0|  0.00%|
   102|         0|            0|            0|  0.00%|            # encoder z_mask (takes the unet_features)
   103|         0|            0|            0|  0.00%|            self.encoder_zinstance: EncoderConvLeaky = EncoderConvLeaky(size=params["architecture"]["cropped_size"],
   104|         0|            0|            0|  0.00%|                                                                        ch_in=params["architecture"]["n_ch_output_features"],
   105|         0|            0|            0|  0.00%|                                                                        dim_z=params["architecture"]["dim_zinstance"])
   106|         0|            0|            0|  0.00%|        else:
   107|         1|  1.04904e-05|  1.04904e-05|  0.00%|            self.decoder_zinstance: DecoderConv = DecoderConv(size=params["architecture"]["cropped_size"],
   108|         1|  4.76837e-06|  4.76837e-06|  0.00%|                                                              dim_z=params["architecture"]["dim_zinstance"],
   109|         1|  6.79493e-05|  6.79493e-05|  0.00%|                                                              ch_out=params["input_image"]["ch_in"] + 1)
(call)|         1|    0.0130696|    0.0130696|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/encoders_decoders.py:78 __init__
(call)|         1|  7.62939e-05|  7.62939e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
   110|         0|            0|            0|  0.00%|
   111|         0|            0|            0|  0.00%|            # encoder z_mask (takes the unet_features)
   112|         1|  6.91414e-06|  6.91414e-06|  0.00%|            self.encoder_zinstance: EncoderConv = EncoderConv(size=params["architecture"]["cropped_size"],
   113|         1|  5.00679e-06|  5.00679e-06|  0.00%|                                                              ch_in=params["architecture"]["n_ch_output_features"],
   114|         1|  3.12328e-05|  3.12328e-05|  0.00%|                                                              dim_z=params["architecture"]["dim_zinstance"])
(call)|         1|    0.0151904|    0.0151904|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/encoders_decoders.py:106 __init__
(call)|         1|   7.1764e-05|   7.1764e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
   115|         0|            0|            0|  0.00%|
   116|        25|  0.000615597|  2.46239e-05|  0.00%|    def forward(self, imgs_in: torch.Tensor,
   117|         1|  8.82149e-06|  8.82149e-06|  0.00%|                generate_synthetic_data: bool,
   118|         1|  8.10623e-06|  8.10623e-06|  0.00%|                prob_corr_factor: float,
   119|         1|  8.58307e-06|  8.58307e-06|  0.00%|                overlap_threshold: float,
   120|         1|  8.34465e-06|  8.34465e-06|  0.00%|                n_objects_max: int,
   121|         1|  8.34465e-06|  8.34465e-06|  0.00%|                topk_only: bool,
   122|         1|  9.29832e-06|  9.29832e-06|  0.00%|                noisy_sampling: bool,
   123|         1|  8.34465e-06|  8.34465e-06|  0.00%|                bg_is_zero: bool,
   124|         1|  9.29832e-06|  9.29832e-06|  0.00%|                bg_resolution: tuple) -> Inference:
   125|         0|            0|            0|  0.00%|
   126|         0|            0|            0|  0.00%|        # 0. preparation
   127|        24|  0.000581741|  2.42392e-05|  0.00%|        batch_size, ch_raw_image, width_raw_image, height_raw_image = imgs_in.shape
   128|         0|            0|            0|  0.00%|
   129|         0|            0|            0|  0.00%|        # ---------------------------#
   130|         0|            0|            0|  0.00%|        # 1. UNET
   131|         0|            0|            0|  0.00%|        # ---------------------------#
   132|        24|   0.00140381|   5.8492e-05|  0.00%|        unet_output: UNEToutput = self.unet.forward(imgs_in, verbose=False)
(call)|        24|   0.00114489|  4.77036e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:580 __getattr__
(call)|        24|     0.709407|    0.0295586|  0.19%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/unet_model.py:69 forward
   133|        24|  0.000339985|   1.4166e-05|  0.00%|        if bg_is_zero:
   134|        24|   0.00164056|  6.83566e-05|  0.00%|            big_bg = torch.zeros_like(imgs_in)
   135|         0|            0|            0|  0.00%|        else:
   136|         0|            0|            0|  0.00%|            # I could also sample
   137|         0|            0|            0|  0.00%|            # bg = unet_output.zbg.mu + eps * unet_output.zbg.std
   138|         0|            0|            0|  0.00%|            bg_map = downsample_and_upsample(unet_output.zbg.mu,
   139|         0|            0|            0|  0.00%|                                             low_resolution=bg_resolution,
   140|         0|            0|            0|  0.00%|                                             high_resolution=(imgs_in.shape[-2], imgs_in.shape[-1]))
   141|         0|            0|            0|  0.00%|            big_bg = torch.sigmoid(bg_map)
   142|         0|            0|            0|  0.00%|
   143|         0|            0|            0|  0.00%|        # ---------------------------#
   144|         0|            0|            0|  0.00%|        # 2. ZWHERE to BoundingBoxes
   145|         0|            0|            0|  0.00%|        # ---------------------------#
   146|        24|  0.000504255|  2.10106e-05|  0.00%|        zwhere_map: DIST = sample_and_kl_diagonal_normal(posterior_mu=unet_output.zwhere.mu,
   147|        24|  0.000333309|  1.38879e-05|  0.00%|                                                         posterior_std=unet_output.zwhere.std,
   148|        24|  0.000955343|   3.9806e-05|  0.00%|                                                         prior_mu=torch.zeros_like(unet_output.zwhere.mu),
   149|        24|   0.00119734|  4.98891e-05|  0.00%|                                                         prior_std=torch.ones_like(unet_output.zwhere.std),
   150|        24|  0.000378132|  1.57555e-05|  0.00%|                                                         noisy_sampling=noisy_sampling,
   151|        24|  0.000934362|  3.89318e-05|  0.00%|                                                         sample_from_prior=generate_synthetic_data)
(call)|        24|    0.0255075|   0.00106281|  0.01%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:17 sample_and_kl_diagonal_normal
   152|         0|            0|            0|  0.00%|
   153|        24|   0.00298047|  0.000124186|  0.00%|        tx_map, ty_map, tw_map, th_map = torch.split(torch.sigmoid(self.decoder_zwhere(zwhere_map.sample)), 1, dim=-3)
(call)|        24|   0.00125289|  5.22037e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:580 __getattr__
(call)|        24|   0.00827432|  0.000344763|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:540 __call__
(call)|        24|   0.00212359|  8.84831e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/functional.py:65 split
   154|         0|            0|            0|  0.00%|
   155|         0|            0|            0|  0.00%|        # TODO make this a function and its inverse so that it is easier to add supervised loss
   156|         0|            0|            0|  0.00%|        #  tbb_2_bb(tx,ty,tw,th,raw_img_size,min_box_size,max_box_size) -> bx_map,by_map,bw_map,bh_map
   157|         0|            0|            0|  0.00%|        #  bb_2_tbb(bx,by,bw,bh,raw_img_size,min_box_size,max_box_size) -> tx_map,ty_map,tw_map,th_map
   158|        24|  0.000740051|  3.08355e-05|  0.00%|        with torch.no_grad():
(call)|        24|  0.000518084|  2.15868e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/grad_mode.py:65 __enter__
   159|        24|   0.00069499|  2.89579e-05|  0.00%|            n_width, n_height = tx_map.shape[-2:]
   160|        24|   0.00175452|  7.31051e-05|  0.00%|            ix_array = torch.arange(start=0, end=n_width, dtype=tx_map.dtype, device=tx_map.device)
   161|        24|   0.00101233|  4.21802e-05|  0.00%|            iy_array = torch.arange(start=0, end=n_height, dtype=tx_map.dtype, device=tx_map.device)
   162|        24|   0.00100994|  4.20809e-05|  0.00%|            ix_grid, iy_grid = torch.meshgrid([ix_array, iy_array])
(call)|        24|   0.00456452|  0.000190188|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/functional.py:295 meshgrid
   163|        24|   0.00255942|  0.000106643|  0.00%|            pmap_points = torch.stack((ix_grid, iy_grid), dim=-1)  # n_width, n_height, 2
(call)|        24|   0.00126433|  5.26806e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/grad_mode.py:69 __exit__
   164|         0|            0|            0|  0.00%|
   165|        24|   0.00319648|  0.000133187|  0.00%|        bx_map: torch.Tensor = width_raw_image * (ix_grid + tx_map) / n_width
   166|        24|   0.00258493|  0.000107706|  0.00%|        by_map: torch.Tensor = height_raw_image * (iy_grid + ty_map) / n_height
   167|        24|   0.00223327|  9.30528e-05|  0.00%|        bw_map: torch.Tensor = self.size_min + (self.size_max - self.size_min) * tw_map
   168|        24|   0.00200772|  8.36551e-05|  0.00%|        bh_map: torch.Tensor = self.size_min + (self.size_max - self.size_min) * th_map
   169|        24|   0.00113511|  4.72963e-05|  0.00%|        area_map: torch.Tensor = bw_map * bh_map
   170|         0|            0|            0|  0.00%|
   171|        24|    0.0012188|  5.07832e-05|  0.00%|        bounding_box_all: BB = BB(bx=convert_to_box_list(bx_map).squeeze(-1),
(call)|        24|   0.00136232|  5.67635e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/vae_parts.py:31 convert_to_box_list
   172|        24|    0.0008955|  3.73125e-05|  0.00%|                                  by=convert_to_box_list(by_map).squeeze(-1),
(call)|        24|   0.00087595|  3.64979e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/vae_parts.py:31 convert_to_box_list
   173|        24|  0.000834703|  3.47793e-05|  0.00%|                                  bw=convert_to_box_list(bw_map).squeeze(-1),
(call)|        24|  0.000864267|  3.60111e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/vae_parts.py:31 convert_to_box_list
   174|        24|   0.00117254|  4.88559e-05|  0.00%|                                  bh=convert_to_box_list(bh_map).squeeze(-1))
(call)|        24|  0.000798941|  3.32892e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/vae_parts.py:31 convert_to_box_list
(call)|        24|  0.000379324|  1.58052e-05|  0.00%|# <string>_117:1 __new__
   175|         0|            0|            0|  0.00%|
   176|         0|            0|            0|  0.00%|        # ---------------------------#
   177|         0|            0|            0|  0.00%|        # 3. LOGIT to Probabilities #
   178|         0|            0|            0|  0.00%|        # ---------------------------#
   179|         0|            0|            0|  0.00%|
   180|         0|            0|            0|  0.00%|        # Diagonalize the covariance matrix at each iteration since it depends on the tunable parameter length_scale_GP
   181|        24|  0.000584364|  2.43485e-05|  0.00%|        with torch.no_grad():
(call)|        24|  0.000361204|  1.50502e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/grad_mode.py:65 __enter__
   182|        24|  0.000375509|  1.56462e-05|  0.00%|            scale_factor_x = float(imgs_in.shape[-2]) / unet_output.logit.mu.shape[-2]
   183|        24|  0.000311613|  1.29839e-05|  0.00%|            scale_factor_y = float(imgs_in.shape[-1]) / unet_output.logit.mu.shape[-1]
   184|        24|      3.01773|     0.125739|  0.82%|            scale_factor = torch.tensor([scale_factor_x, scale_factor_y], device=pmap_points.device).view(1, 1, 2)
   185|        24|   0.00466633|   0.00019443|  0.00%|            locations = (pmap_points * scale_factor).view(-1, 2).requires_grad_(False)
(call)|        24|    0.0017848|  7.43667e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/grad_mode.py:69 __exit__
   186|         0|            0|            0|  0.00%|
   187|        24|   0.00268173|  0.000111739|  0.00%|        length_scale_GP = F.softplus(self.length_scale_GP_raw)
(call)|        24|  0.000744581|  3.10242e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:580 __getattr__
   188|        24|  0.000395775|  1.64906e-05|  0.00%|        prior_covariance = squared_exp_kernel(locations=locations,
   189|        24|  0.000284433|  1.18514e-05|  0.00%|                                              length_scale=length_scale_GP,
   190|        24|   0.00109386|  4.55777e-05|  0.00%|                                              eps=1E-3)
(call)|        24|    0.0152857|  0.000636905|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/vae_parts.py:12 squared_exp_kernel
   191|        24|     0.740029|    0.0308345|  0.20%|        prior_L_cov = torch.cholesky(prior_covariance)
   192|         0|            0|            0|  0.00%|
   193|        24|   0.00202775|  8.44896e-05|  0.00%|        posterior_mu = torch.flatten(unet_output.logit.mu, start_dim=1)  # batch_size, nx*ny
   194|        24|   0.00349736|  0.000145723|  0.00%|        posterior_L_cov = torch.diag_embed(torch.flatten(unet_output.logit.std, start_dim=1), dim1=-2, dim2=-1)
   195|         0|            0|            0|  0.00%|
   196|        24|    0.0005548|  2.31167e-05|  0.00%|        logit_map: DIST = sample_and_kl_multivariate_normal(posterior_mu=posterior_mu,
   197|        24|  0.000288486|  1.20203e-05|  0.00%|                                                            posterior_L_cov=posterior_L_cov,
   198|        24|   0.00127172|  5.29885e-05|  0.00%|                                                            prior_mu=torch.zeros_like(posterior_mu, requires_grad=False),
   199|        24|  0.000396013|  1.65006e-05|  0.00%|                                                            prior_L_cov=prior_L_cov,
   200|        24|  0.000258923|  1.07884e-05|  0.00%|                                                            noisy_sampling=noisy_sampling,
   201|        24|   0.00113583|  4.73261e-05|  0.00%|                                                            sample_from_prior=generate_synthetic_data)
(call)|        24|       2.2985|    0.0957707|  0.63%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:55 sample_and_kl_multivariate_normal
   202|         0|            0|            0|  0.00%|
   203|        24|   0.00334454|  0.000139356|  0.00%|        p_map = torch.sigmoid(self.decoder_logit(logit_map.sample.view_as(unet_output.logit.mu)))
(call)|        24|   0.00149632|  6.23465e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:580 __getattr__
(call)|        24|    0.0132828|  0.000553449|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:540 __call__
   204|         0|            0|            0|  0.00%|
   205|         0|            0|            0|  0.00%|        # Correct the probability if necessary
   206|        24|   0.00087595|  3.64979e-05|  0.00%|        with torch.no_grad():
(call)|        24|   0.00057435|  2.39313e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/grad_mode.py:65 __enter__
   207|         0|            0|            0|  0.00%|
   208|         0|            0|            0|  0.00%|            # 1. correction if necessary
   209|        24|  0.000530481|  2.21034e-05|  0.00%|            if (prob_corr_factor > 0) and (prob_corr_factor <= 1.0) and not generate_synthetic_data:
   210|         0|            0|            0|  0.00%|
   211|         0|            0|            0|  0.00%|                # probability correction if necessary
   212|        23|   0.00294256|  0.000127937|  0.00%|                av_intensity: torch.Tensor = compute_average_in_box((imgs_in - big_bg).abs(), bounding_box_all)
(call)|        23|    0.0469656|   0.00204198|  0.01%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities.py:144 compute_average_in_box
   213|         0|            0|            0|  0.00%|                # av_intensity: torch.Tensor = compute_average_in_box((imgs_in - big_bg).pow(2), bounding_box_all)
   214|        23|  0.000341415|  1.48441e-05|  0.00%|                assert len(av_intensity.shape) == 2
   215|        23|  0.000264645|  1.15063e-05|  0.00%|                n_boxes_all, batch_size = av_intensity.shape
   216|        23|  0.000848532|  3.68927e-05|  0.00%|                ranking: torch.Tensor = compute_ranking(av_intensity)  # n_boxes_all, batch. It is in [0,n_box_all-1]
(call)|        23|   0.00786018|  0.000341747|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities.py:130 compute_ranking
   217|        23|   0.00266528|  0.000115882|  0.00%|                tmp: torch.Tensor = ((ranking + 1).float() / (n_boxes_all + 1))
   218|        23|  0.000759602|  3.30262e-05|  0.00%|                tmp_2: torch.Tensor = invert_convert_to_box_list(tmp.unsqueeze(-1),
   219|        23|  0.000328779|  1.42947e-05|  0.00%|                                                                 original_width=p_map.shape[-2],
   220|        23|   0.00073576|  3.19896e-05|  0.00%|                                                                 original_height=p_map.shape[-1])
(call)|        23|   0.00126576|  5.50332e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/vae_parts.py:41 invert_convert_to_box_list
   221|        23|   0.00157475|  6.84676e-05|  0.00%|                p_approx: torch.Tensor = tmp_2.pow(10)
(call)|        23|   0.00124359|  5.40692e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/grad_mode.py:69 __exit__
   222|         0|            0|            0|  0.00%|            else:
   223|         1|  1.00136e-05|  1.00136e-05|  0.00%|                prob_corr_factor = 0
   224|         1|  6.38962e-05|  6.38962e-05|  0.00%|                p_approx: torch.Tensor = torch.zeros_like(p_map)
(call)|         1|  6.34193e-05|  6.34193e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/grad_mode.py:69 __exit__
   225|         0|            0|            0|  0.00%|
   226|        24|   0.00338125|  0.000140886|  0.00%|        p_map_cor: torch.Tensor = (1 - prob_corr_factor) * p_map + prob_corr_factor * p_approx
   227|        24|   0.00120902|  5.03759e-05|  0.00%|        prob_all: torch.Tensor = convert_to_box_list(p_map_cor).squeeze(-1)
(call)|        24|   0.00119829|  4.99288e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/vae_parts.py:31 convert_to_box_list
   228|        24|  0.000365973|  1.52489e-05|  0.00%|        assert bounding_box_all.bx.shape == prob_all.shape  # n_box_all, batch_size
   229|         0|            0|            0|  0.00%|
   230|         0|            0|            0|  0.00%|        # ------------------------------------------------------------------#
   231|         0|            0|            0|  0.00%|        # 4. NMS and TOP-K to select few probabilities and bounding boxes
   232|         0|            0|            0|  0.00%|        # ------------------------------------------------------------------#
   233|        24|  0.000601768|  2.50737e-05|  0.00%|        with torch.no_grad():
(call)|        24|  0.000411749|  1.71562e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/grad_mode.py:65 __enter__
   234|        24|  0.000296116|  1.23382e-05|  0.00%|            nms_output: NMSoutput = NonMaxSuppression.compute_mask_and_index(prob=prob_all,
   235|        24|  0.000242949|  1.01229e-05|  0.00%|                                                                             bounding_box=bounding_box_all,
   236|        24|  0.000241995|  1.00831e-05|  0.00%|                                                                             overlap_threshold=overlap_threshold,
   237|        24|  0.000236511|  9.85463e-06|  0.00%|                                                                             n_objects_max=n_objects_max,
   238|        24|    0.0014894|  6.20584e-05|  0.00%|                                                                             topk_only=topk_only)
(call)|        24|      2.24518|    0.0935492|  0.61%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/non_max_suppression.py:99 compute_mask_and_index
(call)|        24|   0.00117612|   4.9005e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/grad_mode.py:69 __exit__
   239|         0|            0|            0|  0.00%|        # Select the few probability and boxes corresponding to the non-overlapping bbox
   240|        24|    0.0027771|  0.000115712|  0.00%|        prob_few: torch.Tensor = torch.gather((prob_all * nms_output.nms_mask), dim=0, index=nms_output.index_top_k)
   241|         0|            0|            0|  0.00%|
   242|        24|   0.00123715|  5.15481e-05|  0.00%|        bounding_box_few: BB = BB(bx=torch.gather(bounding_box_all.bx, dim=0, index=nms_output.index_top_k),
   243|        24|    0.0011456|  4.77334e-05|  0.00%|                                  by=torch.gather(bounding_box_all.by, dim=0, index=nms_output.index_top_k),
   244|        24|   0.00108695|  4.52896e-05|  0.00%|                                  bw=torch.gather(bounding_box_all.bw, dim=0, index=nms_output.index_top_k),
   245|        24|   0.00154376|  6.43233e-05|  0.00%|                                  bh=torch.gather(bounding_box_all.bh, dim=0, index=nms_output.index_top_k))
(call)|        24|  0.000418186|  1.74244e-05|  0.00%|# <string>_117:1 __new__
   246|         0|            0|            0|  0.00%|
   247|        24|  0.000690222|  2.87592e-05|  0.00%|        zwhere_kl_all = convert_to_box_list(zwhere_map.kl)  # shape (nbox_all, batch_size, ch)
(call)|        24|   0.00128603|  5.35846e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/vae_parts.py:31 convert_to_box_list
   248|        24|  0.000485182|  2.02159e-05|  0.00%|        new_index = nms_output.index_top_k.unsqueeze(-1).expand(-1, -1,
   249|        24|  0.000484228|  2.01762e-05|  0.00%|                                                                zwhere_kl_all.shape[-1])  # (nbox_few, batch_size, ch)
   250|        24|    0.0013175|  5.48959e-05|  0.00%|        zwhere_kl_few = torch.gather(zwhere_kl_all, dim=0, index=new_index)  # shape (nbox_few, batch_size, ch)
   251|         0|            0|            0|  0.00%|
   252|         0|            0|            0|  0.00%|        # ------------------------------------------------------------------#
   253|         0|            0|            0|  0.00%|        # 5. Crop the unet_features according to the selected boxes
   254|         0|            0|            0|  0.00%|        # ------------------------------------------------------------------#
   255|        24|  0.000426054|  1.77523e-05|  0.00%|        n_boxes, batch_size = bounding_box_few.bx.shape
   256|         0|            0|            0|  0.00%|        # print(unet_output.features.shape)
   257|         0|            0|            0|  0.00%|        # print(imgs_in.shape)
   258|         0|            0|            0|  0.00%|        # append the raw image in the channel dimension.
   259|        24|  0.000818253|  3.40939e-05|  0.00%|        unet_features_expanded = unet_output.features.unsqueeze(0).expand(n_boxes, batch_size, -1, -1, -1)
   260|        24|  0.000329733|  1.37389e-05|  0.00%|        cropped_feature_map: torch.Tensor = Cropper.crop(bounding_box=bounding_box_few,
   261|        24|  0.000228643|  9.52681e-06|  0.00%|                                                         big_stuff=unet_features_expanded,
   262|        24|   0.00026083|  1.08679e-05|  0.00%|                                                         width_small=self.cropped_size,
   263|        24|  0.000963926|  4.01636e-05|  0.00%|                                                         height_small=self.cropped_size)
(call)|        24|    0.0367484|   0.00153118|  0.01%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/cropper_uncropper.py:14 crop
   264|         0|            0|            0|  0.00%|
   265|         0|            0|            0|  0.00%|        # ------------------------------------------------------------------#
   266|         0|            0|            0|  0.00%|        # 6. Encode, sample z and decode to big images and big weights
   267|         0|            0|            0|  0.00%|        # ------------------------------------------------------------------#
   268|        24|   0.00137115|  5.71311e-05|  0.00%|        zinstance_posterior: ZZ = self.encoder_zinstance.forward(cropped_feature_map)
(call)|        24|   0.00139189|  5.79953e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:580 __getattr__
(call)|        24|    0.0687535|   0.00286473|  0.02%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/encoders_decoders.py:124 forward
   269|        24|  0.000300407|   1.2517e-05|  0.00%|        zinstance_few: DIST = sample_and_kl_diagonal_normal(posterior_mu=zinstance_posterior.mu,
   270|        24|  0.000240088|  1.00036e-05|  0.00%|                                                            posterior_std=zinstance_posterior.std,
   271|        24|   0.00112033|  4.66804e-05|  0.00%|                                                            prior_mu=torch.zeros_like(zinstance_posterior.mu),
   272|        24|   0.00109482|  4.56174e-05|  0.00%|                                                            prior_std=torch.ones_like(zinstance_posterior.std),
   273|        24|  0.000318527|   1.3272e-05|  0.00%|                                                            noisy_sampling=noisy_sampling,
   274|        24|   0.00083971|  3.49879e-05|  0.00%|                                                            sample_from_prior=generate_synthetic_data)
(call)|        24|     0.020561|  0.000856707|  0.01%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:17 sample_and_kl_diagonal_normal
   275|         0|            0|            0|  0.00%|
   276|        24|   0.00177884|  7.41184e-05|  0.00%|        small_stuff_raw = self.decoder_zinstance.forward(zinstance_few.sample)
(call)|        24|   0.00110817|  4.61737e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:580 __getattr__
(call)|        24|        7.015|     0.292292|  1.91%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/encoders_decoders.py:93 forward
   277|         0|            0|            0|  0.00%|        # Apply softplus to first channel (i.e. mask channel) and sigmoid to all others (i.e. img channels)
   278|        24|   0.00258994|  0.000107914|  0.00%|        small_stuff = torch.cat((F.softplus(small_stuff_raw[..., :1, :, :]),
   279|        24|   0.00517869|  0.000215779|  0.00%|                                 torch.sigmoid(small_stuff_raw[..., 1:, :, :])), dim=-3)
   280|        24|  0.000473738|  1.97391e-05|  0.00%|        big_stuff = Uncropper.uncrop(bounding_box=bounding_box_few,
   281|        24|   0.00025034|  1.04308e-05|  0.00%|                                     small_stuff=small_stuff,
   282|        24|  0.000228405|  9.51687e-06|  0.00%|                                     width_big=width_raw_image,
   283|        24|  0.000869513|  3.62297e-05|  0.00%|                                     height_big=height_raw_image)  # shape: n_box, batch, ch, w, h
(call)|        24|     0.033808|   0.00140867|  0.01%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/cropper_uncropper.py:77 uncrop
   284|        24|  0.000294685|  1.22786e-05|  0.00%|        ch_size = big_stuff.shape[-3]
   285|        24|  0.000665426|  2.77261e-05|  0.00%|        big_weight, big_img = torch.split(big_stuff, split_size_or_sections=(1, ch_size-1), dim=-3)
(call)|        24|     0.002496|     0.000104|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/functional.py:65 split
   286|         0|            0|            0|  0.00%|
   287|         0|            0|            0|  0.00%|        # -----------------------
   288|         0|            0|            0|  0.00%|        # 7. From weight to masks
   289|         0|            0|            0|  0.00%|        # ------------------------
   290|        24|  0.000827551|  3.44813e-05|  0.00%|        big_mask = from_weights_to_masks(weight=big_weight, dim=-5)
(call)|        24|   0.00710177|  0.000295907|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/vae_parts.py:51 from_weights_to_masks
   291|        24|   0.00113869|  4.74453e-05|  0.00%|        big_mask_NON_interacting = torch.tanh(big_weight)
   292|         0|            0|            0|  0.00%|
   293|         0|            0|            0|  0.00%|        # 8. Return the inferred quantities
   294|        24|  0.000330925|  1.37885e-05|  0.00%|        return Inference(length_scale_GP=length_scale_GP,
   295|        24|  0.000213146|  8.88109e-06|  0.00%|                         p_map=p_map_cor,
   296|        24|  0.000197411|  8.22544e-06|  0.00%|                         area_map=area_map,
   297|        24|  0.000188351|  7.84794e-06|  0.00%|                         big_bg=big_bg,
   298|        24|  0.000184536|    7.689e-06|  0.00%|                         big_mask=big_mask,
   299|        24|  0.000187397|  7.80821e-06|  0.00%|                         big_mask_NON_interacting=big_mask_NON_interacting,
   300|        24|  0.000191927|  7.99696e-06|  0.00%|                         big_img=big_img,
   301|         0|            0|            0|  0.00%|                         # the sample of the 3 latent variables
   302|        24|  0.000197411|  8.22544e-06|  0.00%|                         sample_prob=prob_few,
   303|        24|  0.000190258|  7.92742e-06|  0.00%|                         sample_bb=bounding_box_few,
   304|        24|  0.000210047|  8.75195e-06|  0.00%|                         sample_zinstance=zinstance_few.sample,
   305|         0|            0|            0|  0.00%|                         # the kl of the 3 latent variables
   306|        24|  0.000191212|  7.96715e-06|  0.00%|                         kl_logit_map=logit_map.kl,
   307|        24|  0.000203609|  8.48373e-06|  0.00%|                         kl_zwhere_map=zwhere_map.kl,
   308|        24|  0.000182629|  7.60953e-06|  0.00%|                         kl_zwhere=zwhere_kl_few,
   309|        24|  0.000680208|   2.8342e-05|  0.00%|                         kl_zinstance=zinstance_few.kl)
(call)|        24|  0.000379562|  1.58151e-05|  0.00%|# <string>_122:1 __new__
File: /home/jupyter/REPOS/spacetx-research/src/MODULES/vae_model.py
File duration: 2.34333s (0.64%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  0.000151157|  7.55787e-05|  0.00%|from .utilities import *
(call)|         1|  2.98023e-05|  2.98023e-05|  0.00%|# <frozen importlib._bootstrap>:416 parent
(call)|         1|  3.45707e-05|  3.45707e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
     2|         1|  0.000148535|  0.000148535|  0.00%|from .utilities_ml import Moving_Average_Calculator
(call)|         1|  1.88351e-05|  1.88351e-05|  0.00%|# <frozen importlib._bootstrap>:416 parent
(call)|         1|      10.3277|      10.3277|  2.81%|# <frozen importlib._bootstrap>:978 _find_and_load
(call)|         1|  2.67029e-05|  2.67029e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
     3|         1|  0.000110149|  0.000110149|  0.00%|from .utilities_visualization import draw_bounding_boxes, draw_img
(call)|         1|   2.0504e-05|   2.0504e-05|  0.00%|# <frozen importlib._bootstrap>:416 parent
(call)|         1|  2.19345e-05|  2.19345e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
     4|         1|  0.000179529|  0.000179529|  0.00%|from .vae_parts import *
(call)|         1|  1.78814e-05|  1.78814e-05|  0.00%|# <frozen importlib._bootstrap>:416 parent
(call)|         1|     0.030484|     0.030484|  0.01%|# <frozen importlib._bootstrap>:978 _find_and_load
(call)|         1|  2.67029e-05|  2.67029e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
     5|         1|  0.000107527|  0.000107527|  0.00%|from .namedtuple import *
(call)|         1|  2.07424e-05|  2.07424e-05|  0.00%|# <frozen importlib._bootstrap>:416 parent
(call)|         1|  2.31266e-05|  2.31266e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
     6|         1|  5.81741e-05|  5.81741e-05|  0.00%|from typing import Optional
(call)|         1|  5.38826e-05|  5.38826e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
     7|         0|            0|            0|  0.00%|
     8|         0|            0|            0|  0.00%|
     9|         1|  1.07288e-05|  1.07288e-05|  0.00%|def create_ckpt(model: torch.nn.Module,
    10|         0|            0|            0|  0.00%|                optimizer: Optional[torch.optim.Optimizer] = None,
    11|         0|            0|            0|  0.00%|                history_dict: Optional[dict] = None,
    12|         0|            0|            0|  0.00%|                hyperparams_dict: Optional[dict] = None,
    13|         1|   0.00013423|   0.00013423|  0.00%|                epoch: Optional[int] = None) -> dict:\
(call)|         4|   0.00108004|  0.000270009|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
    14|         0|            0|            0|  0.00%|
    15|         1|  1.16825e-05|  1.16825e-05|  0.00%|    all_member_var = model.__dict__
    16|         1|  5.96046e-06|  5.96046e-06|  0.00%|    member_var_to_save = {}
    17|        16|  0.000102043|   6.3777e-06|  0.00%|    for k, v in all_member_var.items():
    18|        15|  8.22544e-05|  5.48363e-06|  0.00%|        if not k.startswith("_") and k != 'training':
    19|         6|  2.69413e-05|  4.49022e-06|  0.00%|            member_var_to_save[k] = v
    20|         0|            0|            0|  0.00%|
    21|         1|  3.57628e-06|  3.57628e-06|  0.00%|    ckpt = {'model_member_var': member_var_to_save,
    22|         1|  2.09808e-05|  2.09808e-05|  0.00%|            'model_state_dict': model.state_dict(),
(call)|         1|    0.0102882|    0.0102882|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:681 state_dict
    23|         1|  7.15256e-06|  7.15256e-06|  0.00%|            'optimizer_state_dict': None if (optimizer is None) else optimizer.state_dict(),
    24|         1|  6.19888e-06|  6.19888e-06|  0.00%|            'history_dict': history_dict,
    25|         1|  5.00679e-06|  5.00679e-06|  0.00%|            'hyperparam_dict': hyperparams_dict,
    26|         1|  5.72205e-06|  5.72205e-06|  0.00%|            'epoch': epoch}
    27|         0|            0|            0|  0.00%|
    28|         1|  4.76837e-06|  4.76837e-06|  0.00%|    return ckpt
    29|         0|            0|            0|  0.00%|
    30|         0|            0|            0|  0.00%|
    31|         1|  2.31266e-05|  2.31266e-05|  0.00%|def ckpt2file(ckpt: dict, path: str):
    32|         0|            0|            0|  0.00%|    torch.save(ckpt, path)
    33|         0|            0|            0|  0.00%|
    34|         0|            0|            0|  0.00%|
    35|         1|  6.84261e-05|  6.84261e-05|  0.00%|def file2ckpt(path: str, device: Optional[str] = None):
(call)|         1|  4.57764e-05|  4.57764e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
    36|         0|            0|            0|  0.00%|    """ wrapper around torch.load """
    37|         0|            0|            0|  0.00%|    if device is None:
    38|         0|            0|            0|  0.00%|        ckpt = torch.load(path)
    39|         0|            0|            0|  0.00%|    elif device == 'cuda':
    40|         0|            0|            0|  0.00%|        ckpt = torch.load(path, map_location="cuda:0")
    41|         0|            0|            0|  0.00%|    elif device == 'cpu':
    42|         0|            0|            0|  0.00%|        ckpt = torch.load(path, map_location=torch.device('cpu'))
    43|         0|            0|            0|  0.00%|    else:
    44|         0|            0|            0|  0.00%|        raise Exception("device is not recognized")
    45|         0|            0|            0|  0.00%|    return ckpt
    46|         0|            0|            0|  0.00%|
    47|         0|            0|            0|  0.00%|
    48|         0|            0|            0|  0.00%|def load_from_ckpt(ckpt,
    49|         0|            0|            0|  0.00%|                   model: Optional[torch.nn.Module] = None,
    50|         0|            0|            0|  0.00%|                   optimizer: Optional[torch.optim.Optimizer] = None,
    51|         1|  8.29697e-05|  8.29697e-05|  0.00%|                   overwrite_member_var: bool = False):
(call)|         2|  0.000781059|   0.00039053|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
    52|         0|            0|            0|  0.00%|
    53|         0|            0|            0|  0.00%|    device = torch.device('cuda') if torch.cuda.is_available() else torch.device('cpu')
    54|         0|            0|            0|  0.00%|
    55|         0|            0|            0|  0.00%|    if model is not None:
    56|         0|            0|            0|  0.00%|
    57|         0|            0|            0|  0.00%|        # load member variables
    58|         0|            0|            0|  0.00%|        if overwrite_member_var:
    59|         0|            0|            0|  0.00%|            for key, value in ckpt['model_member_var'].items():
    60|         0|            0|            0|  0.00%|                setattr(model, key, value)
    61|         0|            0|            0|  0.00%|
    62|         0|            0|            0|  0.00%|        # load the modules
    63|         0|            0|            0|  0.00%|        model.load_state_dict(ckpt['model_state_dict'])
    64|         0|            0|            0|  0.00%|        model.to(device)
    65|         0|            0|            0|  0.00%|
    66|         0|            0|            0|  0.00%|    if optimizer is not None:
    67|         0|            0|            0|  0.00%|        optimizer.load_state_dict(ckpt['optimizer_state_dict'])
    68|         0|            0|            0|  0.00%|
    69|         0|            0|            0|  0.00%|
    70|         2|  3.21865e-05|  1.60933e-05|  0.00%|def instantiate_optimizer(model: torch.nn.Module,
    71|         1|  2.14577e-05|  2.14577e-05|  0.00%|                          dict_params_optimizer: dict) -> torch.optim.Optimizer:
    72|         0|            0|            0|  0.00%|
    73|         0|            0|            0|  0.00%|    # split the parameters between GECO and NOT_GECO
    74|         1|  7.62939e-06|  7.62939e-06|  0.00%|    geco_params, other_params = [], []
    75|        84|   0.00103903|  1.23694e-05|  0.00%|    for name, param in model.named_parameters():
(call)|        84|    0.0241287|  0.000287246|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:887 named_parameters
    76|        83|  0.000370979|  4.46963e-06|  0.00%|        if name.startswith("geco"):
    77|         2|  7.62939e-06|   3.8147e-06|  0.00%|            geco_params.append(param)
    78|         0|            0|            0|  0.00%|        else:
    79|        81|   0.00033164|  4.09432e-06|  0.00%|            other_params.append(param)
    80|         0|            0|            0|  0.00%|
    81|         1|  4.76837e-06|  4.76837e-06|  0.00%|    if dict_params_optimizer["type"] == "adam":
    82|         1|  1.19209e-05|  1.19209e-05|  0.00%|        optimizer = torch.optim.Adam([{'params': geco_params, 'lr': dict_params_optimizer["base_lr_geco"],
    83|         1|  5.96046e-06|  5.96046e-06|  0.00%|                                       'betas': dict_params_optimizer["betas_geco"]},
    84|         1|  5.00679e-06|  5.00679e-06|  0.00%|                                      {'params': other_params, 'lr': dict_params_optimizer["base_lr"],
    85|         1|  4.76837e-06|  4.76837e-06|  0.00%|                                       'betas': dict_params_optimizer["betas"]}],
    86|         1|  5.00679e-06|  5.00679e-06|  0.00%|                                     eps=dict_params_optimizer["eps"],
    87|         1|  2.76566e-05|  2.76566e-05|  0.00%|                                     weight_decay=dict_params_optimizer["weight_decay"])
(call)|         1|   0.00256562|   0.00256562|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/optim/adam.py:30 __init__
    88|         0|            0|            0|  0.00%|
    89|         0|            0|            0|  0.00%|    elif dict_params_optimizer["type"] == "SGD":
    90|         0|            0|            0|  0.00%|        optimizer = torch.optim.SGD([{'params': geco_params, 'lr': dict_params_optimizer["base_lr_geco"]},
    91|         0|            0|            0|  0.00%|                                     {'params': other_params, 'lr': dict_params_optimizer["base_lr"]}],
    92|         0|            0|            0|  0.00%|                                    weight_decay=dict_params_optimizer["weight_decay"])
    93|         0|            0|            0|  0.00%|    else:
    94|         0|            0|            0|  0.00%|        raise Exception
    95|         1|  5.24521e-06|  5.24521e-06|  0.00%|    return optimizer
    96|         0|            0|            0|  0.00%|
    97|         0|            0|            0|  0.00%|
    98|         2|  4.05312e-05|  2.02656e-05|  0.00%|def instantiate_scheduler(optimizer: torch.optim.Optimizer,
    99|         1|  1.97887e-05|  1.97887e-05|  0.00%|                          dict_params_scheduler: dict) -> torch.optim.lr_scheduler:
   100|         1|  8.10623e-06|  8.10623e-06|  0.00%|    if dict_params_scheduler["scheduler_type"] == "step_LR":
   101|         1|  1.07288e-05|  1.07288e-05|  0.00%|        scheduler = torch.optim.lr_scheduler.StepLR(optimizer,
   102|         1|  4.76837e-06|  4.76837e-06|  0.00%|                                                    step_size=dict_params_scheduler["scheduler_step_size"],
   103|         1|  4.76837e-06|  4.76837e-06|  0.00%|                                                    gamma=dict_params_scheduler["scheduler_gamma"],
   104|         1|  3.02792e-05|  3.02792e-05|  0.00%|                                                    last_epoch=-1)
(call)|         1|  0.000775099|  0.000775099|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/optim/lr_scheduler.py:343 __init__
   105|         0|            0|            0|  0.00%|    else:
   106|         0|            0|            0|  0.00%|        raise Exception
   107|         1|  5.24521e-06|  5.24521e-06|  0.00%|    return scheduler
   108|         0|            0|            0|  0.00%|
   109|         0|            0|            0|  0.00%|
   110|         3|   0.00014019|    4.673e-05|  0.00%|class CompositionalVae(torch.nn.Module):
(call)|         1|   0.00103474|   0.00103474|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/vae_model.py:110 CompositionalVae
   111|         0|            0|            0|  0.00%|
   112|         2|  3.86238e-05|  1.93119e-05|  0.00%|    def __init__(self, params: dict) -> None:
   113|         1|   3.3617e-05|   3.3617e-05|  0.00%|        super().__init__()
(call)|         1|  0.000624657|  0.000624657|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:71 __init__
   114|         0|            0|            0|  0.00%|
   115|         0|            0|            0|  0.00%|        # Instantiate all the modules
   116|         1|  3.86238e-05|  3.86238e-05|  0.00%|        self.inference_and_generator = Inference_and_Generation(params)
(call)|         1|     0.226103|     0.226103|  0.06%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/vae_parts.py:72 __init__
(call)|         1|  7.72476e-05|  7.72476e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
   117|         1|  4.41074e-05|  4.41074e-05|  0.00%|        self.ma_calculator = Moving_Average_Calculator(beta=0.999)  # i.e. average over the last 100 mini-batches
(call)|         1|  4.76837e-05|  4.76837e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:138 __init__
(call)|         1|  4.62532e-05|  4.62532e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
   118|         0|            0|            0|  0.00%|
   119|         0|            0|            0|  0.00%|        # Raw image parameters
   120|         1|  1.50204e-05|  1.50204e-05|  0.00%|        self.dict_soft_constraints = params["soft_constraint"]
(call)|         1|  5.98431e-05|  5.98431e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
   121|         1|  1.40667e-05|  1.40667e-05|  0.00%|        self.nms_dict = params["nms"]
(call)|         1|  5.76973e-05|  5.76973e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
   122|         1|  8.29697e-05|  8.29697e-05|  0.00%|        self.sigma_fg = torch.nn.Parameter(data=torch.tensor(params["GECO_loss"]["fg_std"])[..., None, None],
   123|         0|            0|            0|  0.00%|                                           # add singleton for width, height
   124|         1|  3.09944e-05|  3.09944e-05|  0.00%|                                           requires_grad=False)
(call)|         1|   1.4782e-05|   1.4782e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/parameter.py:23 __new__
(call)|         1|  0.000172615|  0.000172615|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
   125|         1|  2.55108e-05|  2.55108e-05|  0.00%|        self.sigma_bg = torch.nn.Parameter(data=torch.tensor(params["GECO_loss"]["bg_std"])[..., None, None],
   126|         0|            0|            0|  0.00%|                                           # add singleton for width, height
   127|         1|  2.86102e-05|  2.86102e-05|  0.00%|                                           requires_grad=False)
(call)|         1|  1.26362e-05|  1.26362e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/parameter.py:23 __new__
(call)|         1|  0.000156403|  0.000156403|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
   128|         0|            0|            0|  0.00%|
   129|         1|   1.4782e-05|   1.4782e-05|  0.00%|        self.geco_dict = params["GECO_loss"]
(call)|         1|  4.43459e-05|  4.43459e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
   130|         1|  1.40667e-05|  1.40667e-05|  0.00%|        self.input_img_dict = params["input_image"]
(call)|         1|  4.19617e-05|  4.19617e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
   131|         0|            0|            0|  0.00%|
   132|         1|  1.50204e-05|  1.50204e-05|  0.00%|        self.geco_sparsity_factor = torch.nn.Parameter(data=torch.tensor(self.geco_dict["factor_sparsity_range"][1]),
   133|         1|  2.64645e-05|  2.64645e-05|  0.00%|                                                       requires_grad=True)
(call)|         1|  1.26362e-05|  1.26362e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/parameter.py:23 __new__
(call)|         1|  0.000172377|  0.000172377|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
   134|         1|  1.43051e-05|  1.43051e-05|  0.00%|        self.geco_balance_factor = torch.nn.Parameter(data=torch.tensor(self.geco_dict["factor_balance_range"][1]),
   135|         1|  3.79086e-05|  3.79086e-05|  0.00%|                                                      requires_grad=True)
(call)|         1|  1.23978e-05|  1.23978e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/parameter.py:23 __new__
(call)|         1|  0.000219345|  0.000219345|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
   136|         0|            0|            0|  0.00%|
   137|         0|            0|            0|  0.00%|        # Put everything on the cude if cuda available
   138|         1|  2.76566e-05|  2.76566e-05|  0.00%|        if torch.cuda.is_available():
(call)|         1|  2.64645e-05|  2.64645e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/cuda/__init__.py:33 is_available
   139|         1|  2.19345e-05|  2.19345e-05|  0.00%|            self.cuda()
(call)|         1|    0.0395186|    0.0395186|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:293 cuda
   140|         0|            0|            0|  0.00%|
   141|        23|  0.000173807|  7.55683e-06|  0.00%|    def compute_regularizations(self,
   142|         0|            0|            0|  0.00%|                                inference: Inference,
   143|         0|            0|            0|  0.00%|                                verbose: bool = False,
   144|         1|  1.62125e-05|  1.62125e-05|  0.00%|                                chosen: int = None) -> RegMiniBatch:
   145|         0|            0|            0|  0.00%|        """ Compute the mean regularization over each image.
   146|         0|            0|            0|  0.00%|            These regularizations are written only in terms of p.detached and big_masks.
   147|         0|            0|            0|  0.00%|            1. fg_pixel_fraction determines the overall foreground budget
   148|         0|            0|            0|  0.00%|            2. overlap make sure that mask do not overlap
   149|         0|            0|            0|  0.00%|        """
   150|         0|            0|            0|  0.00%|
   151|         0|            0|            0|  0.00%|        # 1. Masks should not overlap:
   152|         0|            0|            0|  0.00%|        # A = (x1+x2+x3)^2 = x1^2 + x2^2 + x3^2 + 2 x1*x2 + 2 x1*x3 + 2 x2*x3
   153|         0|            0|            0|  0.00%|        # Therefore sum_{i \ne j} x_i x_j = x1*x2 + x1*x3 + x2*x3 = 0.5 * [(sum xi)^2 - (sum xi^2)]
   154|        23|   0.00191069|  8.30733e-05|  0.00%|        x = inference.sample_prob[..., None, None, None] * inference.big_mask_NON_interacting
   155|        23|   0.00113034|  4.91453e-05|  0.00%|        sum_x = torch.sum(x, dim=-5)  # sum over boxes
   156|        23|   0.00159693|  6.94316e-05|  0.00%|        sum_x_squared = torch.sum(x * x, dim=-5)
   157|        23|   0.00228548|  9.93687e-05|  0.00%|        tmp_value = (sum_x * sum_x - sum_x_squared).clamp(min=0)
   158|        23|   0.00201106|  8.74374e-05|  0.00%|        overlap = 0.5 * torch.sum(tmp_value, dim=(-1, -2, -3))  # sum over ch, w, h
   159|        23|  0.000297308|  1.29264e-05|  0.00%|        cost_overlap = sample_from_constraints_dict(dict_soft_constraints=self.dict_soft_constraints,
   160|        23|  0.000130653|  5.68058e-06|  0.00%|                                                    var_name="overlap",
   161|        23|  0.000115395|  5.01716e-06|  0.00%|                                                    var_value=overlap,
   162|        23|  0.000118256|  5.14155e-06|  0.00%|                                                    verbose=verbose,
   163|        23|  0.000622272|  2.70553e-05|  0.00%|                                                    chosen=chosen)
(call)|        23|   0.00546694|  0.000237693|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities.py:187 sample_from_constraints_dict
   164|         0|            0|            0|  0.00%|
   165|         0|            0|            0|  0.00%|        # Mask should have a min and max volume
   166|        23|   0.00109959|  4.78081e-05|  0.00%|        volume_mask_absolute = torch.sum(inference.big_mask, dim=(-1, -2, -3))  # sum over ch,w,h
   167|        23|  0.000240326|   1.0449e-05|  0.00%|        cost_volume_absolute = sample_from_constraints_dict(dict_soft_constraints=self.dict_soft_constraints,
   168|        23|  0.000126839|  5.51473e-06|  0.00%|                                                            var_name="mask_volume_absolute",
   169|        23|  0.000109434|  4.75801e-06|  0.00%|                                                            var_value=volume_mask_absolute,
   170|        23|  0.000119448|  5.19338e-06|  0.00%|                                                            verbose=verbose,
   171|        23|  0.000521898|  2.26912e-05|  0.00%|                                                            chosen=chosen)
(call)|        23|    0.0150547|  0.000654552|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities.py:187 sample_from_constraints_dict
   172|        23|   0.00254345|  0.000110585|  0.00%|        cost_volume_minibatch = (cost_volume_absolute * inference.sample_prob).sum(dim=-2).mean()  # sum boxes, mean batch_size
   173|        23|  0.000873804|  3.79915e-05|  0.00%|        return RegMiniBatch(reg_overlap=cost_overlap.mean(),
   174|        23|  0.000496149|  2.15717e-05|  0.00%|                            reg_area_obj=cost_volume_minibatch)
(call)|        23|  0.000265121|   1.1527e-05|  0.00%|# <string>_123:1 __new__
   175|         0|            0|            0|  0.00%|
   176|        47|  0.000220537|  4.69228e-06|  0.00%|    @staticmethod
   177|         1|  1.69277e-05|  1.69277e-05|  0.00%|    def NLL_MSE(output: torch.tensor, target: torch.tensor, sigma: torch.tensor) -> torch.Tensor:
   178|        46|   0.00476575|  0.000103603|  0.00%|        return ((output - target) / sigma).pow(2)
   179|         0|            0|            0|  0.00%|
   180|        23|   0.00031352|  1.36313e-05|  0.00%|    def compute_metrics(self,
   181|         1|  1.57356e-05|  1.57356e-05|  0.00%|                        imgs_in: torch.Tensor,
   182|         1|  1.57356e-05|  1.57356e-05|  0.00%|                        inference: Inference,
   183|         1|  1.62125e-05|  1.62125e-05|  0.00%|                        regularizations: RegMiniBatch) -> MetricMiniBatch:
   184|         0|            0|            0|  0.00%|
   185|         0|            0|            0|  0.00%|        # Preparation
   186|        23|  0.000315428|  1.37143e-05|  0.00%|        batch_size, ch, w, h = imgs_in.shape
   187|        23|  0.000231266|   1.0055e-05|  0.00%|        n_boxes = inference.big_mask.shape[-5]
   188|        23|    0.0010798|  4.69477e-05|  0.00%|        p_times_area_map = inference.p_map * inference.area_map
   189|        23|   0.00171328|  7.44903e-05|  0.00%|        mixing_k = inference.big_mask * inference.sample_prob[..., None, None, None]
   190|        23|   0.00113845|  4.94978e-05|  0.00%|        mixing_fg = torch.sum(mixing_k, dim=-5)  # sum over boxes
   191|        23|    0.0015409|  6.69956e-05|  0.00%|        mixing_bg = torch.ones_like(mixing_fg) - mixing_fg
   192|        23|   0.00153017|  6.65291e-05|  0.00%|        fg_fraction = torch.mean(mixing_fg)  # mean over batch_size
   193|        23|  0.000352144|  1.53106e-05|  0.00%|        assert len(mixing_fg.shape) == 4  # batch, ch=1, w, h
   194|         0|            0|            0|  0.00%|
   195|         0|            0|            0|  0.00%|        # 0. Get the regularization
   196|         0|            0|            0|  0.00%|
   197|         0|            0|            0|  0.00%|        # 1. Observation model
   198|         0|            0|            0|  0.00%|        # if the observation_std is fixed then normalization 1.0/sqrt(2*pi*sigma^2) is irrelevant.
   199|         0|            0|            0|  0.00%|        # We are better off using MeanSquareError metric
   200|        23|   0.00112319|  4.88343e-05|  0.00%|        mse_k = CompositionalVae.NLL_MSE(output=inference.big_img, target=imgs_in, sigma=self.sigma_fg)
(call)|        23|  0.000594854|  2.58632e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:580 __getattr__
(call)|        23|   0.00294852|  0.000128197|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/vae_model.py:176 NLL_MSE
   201|        23|  0.000241518|  1.05008e-05|  0.00%|        mse_bg = CompositionalVae.NLL_MSE(output=inference.big_bg, target=imgs_in,
   202|        23|  0.000858307|  3.73177e-05|  0.00%|                                          sigma=self.sigma_bg)  # batch_size, ch, w, h
(call)|        23|  0.000496626|  2.15924e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:580 __getattr__
(call)|        23|   0.00202179|  8.79039e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/vae_model.py:176 NLL_MSE
   203|        23|   0.00376773|  0.000163814|  0.00%|        mse_av = (torch.sum(mixing_k * mse_k, dim=-5) + mixing_bg * mse_bg).mean()  # mean over batch_size, ch, w, h
   204|         0|            0|            0|  0.00%|
   205|         0|            0|            0|  0.00%|        # 2. Sparsity should encourage:
   206|         0|            0|            0|  0.00%|        # 1. small probabilities
   207|         0|            0|            0|  0.00%|        # 2. tight bounding boxes
   208|         0|            0|            0|  0.00%|        # 3. tight masks
   209|         0|            0|            0|  0.00%|        # Old solution: sparsity = p * area_box -> leads to square masks b/c they have no cost and lead to lower kl_mask
   210|         0|            0|            0|  0.00%|        # Medium solution: sparsity = \sum_{i,j} (p * area_box) + \sum_k (p_chosen * area_mask_chosen)
   211|         0|            0|            0|  0.00%|        #                        = fg_fraction_box + fg_fraction_box
   212|         0|            0|            0|  0.00%|        #                        -> lead to many small object b/c there is no cost
   213|         0|            0|            0|  0.00%|        # New solution = add term sum p so that many objects are penalized
   214|         0|            0|            0|  0.00%|        # TODO: sparsity_box for all boxes or only the selected ones?
   215|        23|   0.00226855|  9.86327e-05|  0.00%|        sparsity_mask = torch.sum(mixing_fg) / torch.numel(mixing_fg)  # divide by # total pixel
   216|        23|    0.0018239|  7.93001e-05|  0.00%|        sparsity_box = torch.sum(p_times_area_map) / torch.numel(mixing_fg)  # divide by # total pixel
   217|        23|   0.00176477|  7.67293e-05|  0.00%|        sparsity_prob = torch.sum(inference.p_map) / (batch_size * n_boxes)  # quickly converge to order 1
   218|        23|   0.00140119|  6.09211e-05|  0.00%|        sparsity_av = sparsity_mask + sparsity_box + sparsity_prob
   219|         0|            0|            0|  0.00%|
   220|         0|            0|            0|  0.00%|        # 3. compute KL
   221|         0|            0|            0|  0.00%|
   222|         0|            0|            0|  0.00%|        # TODO: sum or mean
   223|         0|            0|            0|  0.00%|        # TODO: kl_zwhere for all or just the selected boxes
   224|        23|   0.00138044|  6.00193e-05|  0.00%|        kl_zinstance = torch.mean(inference.kl_zinstance)  # choose latent dim z so that this number is order 1.
   225|        23|   0.00197506|  8.58722e-05|  0.00%|        kl_zwhere = torch.sum(inference.kl_zwhere_map) / (batch_size * n_boxes * 4)  # order 1
   226|        23|   0.00170135|   7.3972e-05|  0.00%|        kl_logit = torch.sum(inference.kl_logit_map) / batch_size  # will normalize by running average -> order 1
   227|         0|            0|            0|  0.00%|
   228|         0|            0|            0|  0.00%|        # 5. compute the moving averages
   229|        23|  0.000722408|  3.14091e-05|  0.00%|        with torch.no_grad():
(call)|        23|  0.000538826|  2.34272e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/grad_mode.py:65 __enter__
   230|        23|      2.20886|    0.0960376|  0.60%|            input_dict = {"kl_logit": kl_logit.item()}
   231|         0|            0|            0|  0.00%|            # Only if in training mode I accumulate the moving average
   232|        23|   0.00103784|  4.51233e-05|  0.00%|            if self.training:
   233|        20|  0.000890017|  4.45008e-05|  0.00%|                ma_dict = self.ma_calculator.accumulate(input_dict)
(call)|        20|   0.00140309|  7.01547e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:146 accumulate
(call)|        20|   0.00112438|  5.62191e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/grad_mode.py:69 __exit__
   234|         0|            0|            0|  0.00%|            else:
   235|         3|  6.62804e-05|  2.20935e-05|  0.00%|                ma_dict = input_dict
(call)|         3|  0.000129223|  4.30743e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/grad_mode.py:69 __exit__
   236|        23|    0.0248928|    0.0010823|  0.01%|        kl_av = kl_zinstance + kl_zwhere + kl_logit / (1E-3 + ma_dict["kl_logit"])
   237|         0|            0|            0|  0.00%|
   238|         0|            0|            0|  0.00%|        # 6. Note that I clamp in_place
   239|        23|  0.000679493|  2.95432e-05|  0.00%|        with torch.no_grad():
(call)|        23|   0.00036335|  1.57978e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/grad_mode.py:65 __enter__
   240|        23|  0.000782251|  3.40109e-05|  0.00%|            f_balance = self.geco_balance_factor.data.clamp_(min=min(self.geco_dict["factor_balance_range"]),
(call)|        23|   0.00067997|  2.95639e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:580 __getattr__
   241|        23|   0.00195193|  8.48666e-05|  0.00%|                                                             max=max(self.geco_dict["factor_balance_range"]))
   242|        23|  0.000736952|  3.20414e-05|  0.00%|            f_sparsity = self.geco_sparsity_factor.data.clamp_(min=min(self.geco_dict["factor_sparsity_range"]),
(call)|        23|   0.00052166|  2.26809e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:580 __getattr__
   243|        23|  0.000701189|  3.04865e-05|  0.00%|                                                               max=max(self.geco_dict["factor_sparsity_range"]))
   244|        23|   0.00227642|  9.89748e-05|  0.00%|            one_minus_f_balance = torch.ones_like(f_balance) - f_balance
(call)|        23|  0.000878334|  3.81884e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/grad_mode.py:69 __exit__
   245|         0|            0|            0|  0.00%|
   246|         0|            0|            0|  0.00%|        # 6. Loss_VAE
   247|         0|            0|            0|  0.00%|        # TODO:
   248|         0|            0|            0|  0.00%|        # 1. try: loss_vae = f_balance * (nll_av + reg_av) + (1.0-f_balance) * (kl_av + f_sparsity * sparsity_av)
   249|         0|            0|            0|  0.00%|        # 2. move reg_av to the other size, i.e. proportional to 1-f_balance
   250|        23|  0.000578165|  2.51376e-05|  0.00%|        reg_av = regularizations.total()
(call)|        23|   0.00195193|  8.48666e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/namedtuple.py:277 total
   251|         0|            0|            0|  0.00%|        loss_vae = f_sparsity * sparsity_av + \
   252|        23|   0.00266814|  0.000116006|  0.00%|                   f_balance * (mse_av + reg_av) + \
   253|        23|   0.00141358|  6.14602e-05|  0.00%|                   one_minus_f_balance * kl_av
   254|         0|            0|            0|  0.00%|
   255|         0|            0|            0|  0.00%|        # GECO BUSINESS
   256|        23|  0.000272512|  1.18484e-05|  0.00%|        if self.geco_dict["is_active"]:
   257|        23|  0.000521898|  2.26912e-05|  0.00%|            with torch.no_grad():
(call)|        23|  0.000304461|  1.32374e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/grad_mode.py:65 __enter__
   258|         0|            0|            0|  0.00%|                # If fg_fraction_av > max(target) -> tmp1 > 0 -> delta_1 < 0 -> too much fg -> increase sparsity
   259|         0|            0|            0|  0.00%|                # If fg_fraction_av < min(target) -> tmp2 > 0 -> delta_1 > 0 -> too little fg -> decrease sparsity
   260|        23|   0.00193357|  8.40685e-05|  0.00%|                tmp1 = (fg_fraction - max(self.geco_dict["target_fg_fraction"])).clamp(min=0)
   261|        23|   0.00138545|   6.0237e-05|  0.00%|                tmp2 = (min(self.geco_dict["target_fg_fraction"]) - fg_fraction).clamp(min=0)
(call)|        23|   0.00133371|  5.79875e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/tensor.py:402 __rsub__
   262|        23|   0.00117564|  5.11149e-05|  0.00%|                delta_1 = (tmp2 - tmp1).requires_grad_(False).to(loss_vae.device)
   263|         0|            0|            0|  0.00%|
   264|         0|            0|            0|  0.00%|                # If nll_av > max(target) -> tmp3 > 0 -> delta_2 < 0 -> bad reconstruction -> increase f_balance
   265|         0|            0|            0|  0.00%|                # If nll_av < min(target) -> tmp4 > 0 -> delta_2 > 0 -> too good reconstruction -> decrease f_balance
   266|        23|   0.00165486|  7.19506e-05|  0.00%|                tmp3 = (mse_av - max(self.geco_dict["target_mse"])).clamp(min=0)
   267|        23|   0.00121641|  5.28875e-05|  0.00%|                tmp4 = (min(self.geco_dict["target_mse"]) - mse_av).clamp(min=0)
(call)|        23|  0.000977993|  4.25214e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/tensor.py:402 __rsub__
   268|        23|   0.00120139|  5.22344e-05|  0.00%|                delta_2 = (tmp4 - tmp3).requires_grad_(False).to(loss_vae.device)
(call)|        23|   0.00092864|  4.03757e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/grad_mode.py:69 __exit__
   269|         0|            0|            0|  0.00%|
   270|        23|   0.00137949|  5.99778e-05|  0.00%|            loss_1 = self.geco_sparsity_factor * delta_1
(call)|        23|  0.000482559|  2.09808e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:580 __getattr__
   271|        23|   0.00129414|  5.62668e-05|  0.00%|            loss_2 = self.geco_balance_factor * delta_2
(call)|        23|  0.000469446|  2.04107e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:580 __getattr__
   272|        23|   0.00260353|  0.000113197|  0.00%|            loss_av = loss_vae + loss_1 + loss_2 - (loss_1 + loss_2).detach()
   273|         0|            0|            0|  0.00%|        else:
   274|         0|            0|            0|  0.00%|            delta_1 = torch.tensor(0.0, dtype=loss_vae.dtype, device=loss_vae.device)
   275|         0|            0|            0|  0.00%|            delta_2 = torch.tensor(0.0, dtype=loss_vae.dtype, device=loss_vae.device)
   276|         0|            0|            0|  0.00%|            loss_av = loss_vae
   277|         0|            0|            0|  0.00%|
   278|         0|            0|            0|  0.00%|        # add everything you want as long as there is one loss
   279|        23|  0.000288725|  1.25533e-05|  0.00%|        return MetricMiniBatch(loss=loss_av,
   280|        23|   0.00130653|  5.68058e-05|  0.00%|                               mse_tot=mse_av.detach().item(),
   281|        23|  0.000890493|  3.87171e-05|  0.00%|                               reg_tot=reg_av.detach().item(),
   282|        23|  0.000803471|  3.49335e-05|  0.00%|                               kl_tot=kl_av.detach().item(),
   283|        23|  0.000760794|   3.3078e-05|  0.00%|                               sparsity_tot=sparsity_av.detach().item(),
   284|         0|            0|            0|  0.00%|
   285|        23|  0.000711918|   3.0953e-05|  0.00%|                               kl_instance=kl_zinstance.detach().item(),
   286|        23|  0.000710964|  3.09115e-05|  0.00%|                               kl_where=kl_zwhere.detach().item(),
   287|        23|  0.000669479|  2.91078e-05|  0.00%|                               kl_logit=kl_logit.detach().item(),
   288|        23|  0.000697374|  3.03206e-05|  0.00%|                               sparsity_mask=sparsity_mask.detach().item(),
   289|        23|  0.000673294|  2.92737e-05|  0.00%|                               sparsity_box=sparsity_box.detach().item(),
   290|        23|   0.00067997|  2.95639e-05|  0.00%|                               sparsity_prob=sparsity_prob.detach().item(),
   291|        23|   0.00077796|  3.38243e-05|  0.00%|                               reg_overlap=regularizations.reg_overlap.detach().item(),
   292|        23|  0.000745058|  3.23938e-05|  0.00%|                               reg_area_obj=regularizations.reg_area_obj.detach().item(),
   293|         0|            0|            0|  0.00%|
   294|        23|  0.000696898|  3.02999e-05|  0.00%|                               fg_fraction=fg_fraction.detach().item(),
   295|        23|  0.000802517|   3.4892e-05|  0.00%|                               geco_sparsity=f_sparsity.detach().item(),
   296|        23|  0.000709057|  3.08286e-05|  0.00%|                               geco_balance=f_balance.detach().item(),
   297|        23|  0.000694036|  3.01755e-05|  0.00%|                               delta_1=delta_1.detach().item(),
   298|        23|  0.000700712|  3.04657e-05|  0.00%|                               delta_2=delta_2.detach().item(),
   299|        23|   0.00134182|    5.834e-05|  0.00%|                               length_GP=inference.length_scale_GP.detach().item())
(call)|        23|   0.00047946|  2.08461e-05|  0.00%|# <string>_124:1 __new__
   300|         0|            0|            0|  0.00%|
   301|         1|  1.66893e-05|  1.66893e-05|  0.00%|    @staticmethod
   302|         0|            0|            0|  0.00%|    def compute_sparse_similarity_matrix(mixing_k: torch.tensor,
   303|         0|            0|            0|  0.00%|                                         batch_of_index: torch.tensor,
   304|         0|            0|            0|  0.00%|                                         max_index: int,
   305|         0|            0|            0|  0.00%|                                         radius_nn: int,
   306|         1|  2.43187e-05|  2.43187e-05|  0.00%|                                         min_threshold: float = 0.01) -> torch.sparse.FloatTensor:
   307|         0|            0|            0|  0.00%|        """ Compute the similarity between two pixels by computing the product of mixing_k
   308|         0|            0|            0|  0.00%|            describing the probability that each pixel belong to a given foreground instance
   309|         0|            0|            0|  0.00%|            If the similarity is less than min_threshold the value is not recorded (i.e. effectively zero)
   310|         0|            0|            0|  0.00%|            to save memory.
   311|         0|            0|            0|  0.00%|
   312|         0|            0|            0|  0.00%|            INPUT: mixing_k of shape --> n_boxes, batch_shape, 1, w, h
   313|         0|            0|            0|  0.00%|            OUTPUT: sparse tensor fo size (max_index, max_index)
   314|         0|            0|            0|  0.00%|        """
   315|         0|            0|            0|  0.00%|        with torch.no_grad():
   316|         0|            0|            0|  0.00%|            # start_time = time.time()
   317|         0|            0|            0|  0.00%|            n_boxes, batch_shape, ch_in, w, h = mixing_k.shape
   318|         0|            0|            0|  0.00%|            assert ch_in == 1
   319|         0|            0|            0|  0.00%|            assert (batch_shape, 1, w, h) == batch_of_index.shape
   320|         0|            0|            0|  0.00%|
   321|         0|            0|            0|  0.00%|            # Pad width and height with zero before rolling to avoid spurious connections due to PBC
   322|         0|            0|            0|  0.00%|            pad = radius_nn + 1
   323|         0|            0|            0|  0.00%|            pad_mixing_k = F.pad(mixing_k, pad=[pad, pad, pad, pad], mode="constant", value=0.0)
   324|         0|            0|            0|  0.00%|            pad_index = F.pad(batch_of_index, pad=[pad, pad, pad, pad], mode="constant", value=-1)
   325|         0|            0|            0|  0.00%|            row = batch_of_index[:, 0]  # shape: batch, w, h
   326|         0|            0|            0|  0.00%|            row_ge_0 = (row >= 0)
   327|         0|            0|            0|  0.00%|
   328|         0|            0|            0|  0.00%|            sparse_similarity = torch.sparse.FloatTensor(max_index, max_index).to(mixing_k.device)
   329|         0|            0|            0|  0.00%|            for pad_mixing_k_shifted, pad_index_shifted in roller_2d(a=pad_mixing_k,
   330|         0|            0|            0|  0.00%|                                                                     b=pad_index,
   331|         0|            0|            0|  0.00%|                                                                     radius=radius_nn):
   332|         0|            0|            0|  0.00%|                v = (pad_mixing_k * pad_mixing_k_shifted).sum(dim=-5)[:, 0, pad:(pad + w),
   333|         0|            0|            0|  0.00%|                    pad:(pad + h)]  # shape: batch, w, h
   334|         0|            0|            0|  0.00%|                col = pad_index_shifted[:, 0, pad:(pad + w), pad:(pad + h)]  # shape: batch, w, h
   335|         0|            0|            0|  0.00%|
   336|         0|            0|            0|  0.00%|                mask = (v > min_threshold) * (col >= 0) * row_ge_0
   337|         0|            0|            0|  0.00%|
   338|         0|            0|            0|  0.00%|                index_tensor = torch.stack((row[mask], col[mask]), dim=0)
   339|         0|            0|            0|  0.00%|                tmp_similarity = torch.sparse.FloatTensor(index_tensor, v[mask],
   340|         0|            0|            0|  0.00%|                                                          torch.Size([max_index, max_index]))
   341|         0|            0|            0|  0.00%|                sparse_similarity.add_(tmp_similarity)
   342|         0|            0|            0|  0.00%|                sparse_similarity = sparse_similarity.coalesce()
   343|         0|            0|            0|  0.00%|
   344|         0|            0|            0|  0.00%|            # print("similarity time", time.time()-start_time)
   345|         0|            0|            0|  0.00%|            return sparse_similarity
   346|         0|            0|            0|  0.00%|
   347|         1|  1.71661e-05|  1.71661e-05|  0.00%|    def segment(self, batch_imgs: torch.tensor,
   348|         0|            0|            0|  0.00%|                n_objects_max: Optional[int] = None,
   349|         0|            0|            0|  0.00%|                prob_corr_factor: Optional[float] = None,
   350|         0|            0|            0|  0.00%|                overlap_threshold: Optional[float] = None,
   351|         0|            0|            0|  0.00%|                noisy_sampling: bool = True,
   352|         0|            0|            0|  0.00%|                draw_boxes: bool = False,
   353|         0|            0|            0|  0.00%|                batch_of_index: Optional[torch.tensor] = None,
   354|         0|            0|            0|  0.00%|                max_index: Optional[int] = None,
   355|         1|  0.000116587|  0.000116587|  0.00%|                radius_nn: int = 5) -> Segmentation:
(call)|         5|  0.000147343|  2.94685e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
   356|         0|            0|            0|  0.00%|        """ Segment the batch of images """
   357|         0|            0|            0|  0.00%|
   358|         0|            0|            0|  0.00%|        # start_time = time.time()
   359|         1|  1.12057e-05|  1.12057e-05|  0.00%|        n_objects_max = self.input_img_dict["n_objects_max"] if n_objects_max is None else n_objects_max
   360|         1|  8.82149e-06|  8.82149e-06|  0.00%|        prob_corr_factor = getattr(self, "prob_corr_factor", 0.0) if prob_corr_factor is None else prob_corr_factor
   361|         1|  8.10623e-06|  8.10623e-06|  0.00%|        overlap_threshold = self.nms_dict["overlap_threshold"] if overlap_threshold is None else overlap_threshold
   362|         0|            0|            0|  0.00%|
   363|         1|  2.47955e-05|  2.47955e-05|  0.00%|        with torch.no_grad():
(call)|         1|  3.05176e-05|  3.05176e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/grad_mode.py:65 __enter__
   364|         1|  2.26498e-05|  2.26498e-05|  0.00%|            inference: Inference = self.inference_and_generator(imgs_in=batch_imgs,
(call)|         1|  5.60284e-05|  5.60284e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:580 __getattr__
   365|         1|  7.39098e-06|  7.39098e-06|  0.00%|                                                                generate_synthetic_data=False,
   366|         1|  2.16961e-05|  2.16961e-05|  0.00%|                                                                prob_corr_factor=prob_corr_factor,
   367|         1|  9.05991e-06|  9.05991e-06|  0.00%|                                                                overlap_threshold=overlap_threshold,
   368|         1|  6.91414e-06|  6.91414e-06|  0.00%|                                                                n_objects_max=n_objects_max,
   369|         1|  6.67572e-06|  6.67572e-06|  0.00%|                                                                topk_only=False,
   370|         1|  6.91414e-06|  6.91414e-06|  0.00%|                                                                noisy_sampling=noisy_sampling,
   371|         1|  6.91414e-06|  6.91414e-06|  0.00%|                                                                bg_is_zero=True,
   372|         1|  5.72205e-05|  5.72205e-05|  0.00%|                                                                bg_resolution=(1, 1))
(call)|         1|     0.102387|     0.102387|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:540 __call__
   373|         0|            0|            0|  0.00%|
   374|         1|   6.7234e-05|   6.7234e-05|  0.00%|            mixing_k = inference.big_mask * inference.sample_prob[..., None, None, None]
   375|         0|            0|            0|  0.00%|
   376|         0|            0|            0|  0.00%|            # Now compute fg_prob, integer_segmentation_mask, similarity
   377|         1|  5.00679e-05|  5.00679e-05|  0.00%|            most_likely_mixing, index = torch.max(mixing_k, dim=-5, keepdim=True)  # 1, batch_size, 1, w, h
   378|         1|  0.000114918|  0.000114918|  0.00%|            integer_mask = ((most_likely_mixing > 0.5) * (index + 1)).squeeze(-5).to(
(call)|         1|  5.98431e-05|  5.98431e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/tensor.py:25 wrapped
   379|         1|  5.50747e-05|  5.50747e-05|  0.00%|                dtype=torch.int32)  # bg = 0 fg = 1,2,3,...
   380|         0|            0|            0|  0.00%|
   381|         1|  4.72069e-05|  4.72069e-05|  0.00%|            fg_prob = torch.sum(mixing_k, dim=-5)  # sum over instances
   382|         0|            0|            0|  0.00%|
   383|         0|            0|            0|  0.00%|            bounding_boxes = draw_bounding_boxes(prob=inference.sample_prob,
   384|         0|            0|            0|  0.00%|                                                 bounding_box=inference.sample_bb,
   385|         0|            0|            0|  0.00%|                                                 width=integer_mask.shape[-2],
   386|         1|  1.19209e-05|  1.19209e-05|  0.00%|                                                 height=integer_mask.shape[-1]) if draw_boxes else None
   387|         0|            0|            0|  0.00%|
   388|         0|            0|            0|  0.00%|            # print("inference time", time.time()-start_time)
   389|         0|            0|            0|  0.00%|
   390|         1|  6.91414e-06|  6.91414e-06|  0.00%|            if batch_of_index is None:
   391|         1|  6.67572e-06|  6.67572e-06|  0.00%|                return Segmentation(raw_image=batch_imgs,
   392|         1|  6.91414e-06|  6.91414e-06|  0.00%|                                    fg_prob=fg_prob,
   393|         1|  6.67572e-06|  6.67572e-06|  0.00%|                                    integer_mask=integer_mask,
   394|         1|  6.19888e-06|  6.19888e-06|  0.00%|                                    bounding_boxes=bounding_boxes,
   395|         1|  3.79086e-05|  3.79086e-05|  0.00%|                                    similarity=None)
(call)|         1|  2.52724e-05|  2.52724e-05|  0.00%|# <string>_120:1 __new__
(call)|         1|   3.8147e-05|   3.8147e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/grad_mode.py:69 __exit__
   396|         0|            0|            0|  0.00%|
   397|         0|            0|            0|  0.00%|            else:
   398|         0|            0|            0|  0.00%|                max_index = torch.max(batch_of_index) if max_index is None else max_index
   399|         0|            0|            0|  0.00%|                similarity_matrix = CompositionalVae.compute_sparse_similarity_matrix(mixing_k=mixing_k,
   400|         0|            0|            0|  0.00%|                                                                                      batch_of_index=batch_of_index,
   401|         0|            0|            0|  0.00%|                                                                                      max_index=max_index,
   402|         0|            0|            0|  0.00%|                                                                                      radius_nn=radius_nn,
   403|         0|            0|            0|  0.00%|                                                                                      min_threshold=0.1)
   404|         0|            0|            0|  0.00%|                return Segmentation(raw_image=batch_imgs,
   405|         0|            0|            0|  0.00%|                                    fg_prob=fg_prob,
   406|         0|            0|            0|  0.00%|                                    integer_mask=integer_mask,
   407|         0|            0|            0|  0.00%|                                    bounding_boxes=bounding_boxes,
   408|         0|            0|            0|  0.00%|                                    similarity=SparseSimilarity(sparse_matrix=similarity_matrix,
   409|         0|            0|            0|  0.00%|                                                                index_matrix=None))
   410|         0|            0|            0|  0.00%|
   411|         0|            0|            0|  0.00%|    def segment_with_tiling(self,
   412|         0|            0|            0|  0.00%|                            single_img: torch.Tensor,
   413|         0|            0|            0|  0.00%|                            roi_mask: Optional[torch.Tensor],
   414|         0|            0|            0|  0.00%|                            crop_size: Optional[tuple] = None,
   415|         0|            0|            0|  0.00%|                            stride: Optional[tuple] = None,
   416|         0|            0|            0|  0.00%|                            n_objects_max_per_patch: Optional[int] = None,
   417|         0|            0|            0|  0.00%|                            prob_corr_factor: Optional[float] = None,
   418|         0|            0|            0|  0.00%|                            overlap_threshold: Optional[float] = None,
   419|         0|            0|            0|  0.00%|                            radius_nn: int = 5,
   420|         1|  0.000141382|  0.000141382|  0.00%|                            batch_size: int = 32) -> Segmentation:
(call)|         6|  0.000162363|  2.70605e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
   421|         0|            0|            0|  0.00%|        """ Uses a sliding window approach to collect a co_objectiveness information
   422|         0|            0|            0|  0.00%|            about the pixels of a large image.
   423|         0|            0|            0|  0.00%|
   424|         0|            0|            0|  0.00%|            On CPU, pad the image with zeros (this lead to duplication of the data).
   425|         0|            0|            0|  0.00%|            Select the slices and then copy to GPU
   426|         0|            0|            0|  0.00%|        """
   427|         0|            0|            0|  0.00%|        assert len(single_img.shape) == 3
   428|         0|            0|            0|  0.00%|        assert roi_mask is None or len(roi_mask.shape) == 3
   429|         0|            0|            0|  0.00%|
   430|         0|            0|            0|  0.00%|        crop_size = (self.input_img_dict["size_raw_image"],
   431|         0|            0|            0|  0.00%|                     self.input_img_dict["size_raw_image"]) if crop_size is None else crop_size
   432|         0|            0|            0|  0.00%|        stride = (int(crop_size[0] // 4), int(crop_size[1] // 4)) if stride is None else stride
   433|         0|            0|            0|  0.00%|        n_objects_max_per_patch = self.input_img_dict["n_objects_max"] if n_objects_max_per_patch is None \
   434|         0|            0|            0|  0.00%|            else n_objects_max_per_patch
   435|         0|            0|            0|  0.00%|        prob_corr_factor = getattr(self, "prob_corr_factor", 0.0) if prob_corr_factor is None else prob_corr_factor
   436|         0|            0|            0|  0.00%|        overlap_threshold = self.nms_dict["overlap_threshold"] if overlap_threshold is None else overlap_threshold
   437|         0|            0|            0|  0.00%|
   438|         0|            0|            0|  0.00%|        assert crop_size[0] % stride[0] == 0, "crop and stride size are NOT compatible"
   439|         0|            0|            0|  0.00%|        assert crop_size[1] % stride[1] == 0, "crop and stride size are NOT compatible"
   440|         0|            0|            0|  0.00%|        assert len(single_img.shape) == 3  # ch, w, h
   441|         0|            0|            0|  0.00%|
   442|         0|            0|            0|  0.00%|        with torch.no_grad():
   443|         0|            0|            0|  0.00%|
   444|         0|            0|            0|  0.00%|            w_img, h_img = single_img.shape[-2:]
   445|         0|            0|            0|  0.00%|            n_prediction = (crop_size[0] // stride[0]) * (crop_size[1] // stride[1])
   446|         0|            0|            0|  0.00%|            print(f'Each pixel will be segmented {n_prediction} times')
   447|         0|            0|            0|  0.00%|
   448|         0|            0|            0|  0.00%|            pad_w = crop_size[0] - stride[0]
   449|         0|            0|            0|  0.00%|            pad_h = crop_size[1] - stride[1]
   450|         0|            0|            0|  0.00%|            pad_list = [pad_w, crop_size[0], pad_h, crop_size[1]]
   451|         0|            0|            0|  0.00%|
   452|         0|            0|            0|  0.00%|            # This is duplicating the single_img on the CPU
   453|         0|            0|            0|  0.00%|            # Note: unsqueeze, pad, suqeeze
   454|         0|            0|            0|  0.00%|            try:
   455|         0|            0|            0|  0.00%|                img_padded = F.pad(single_img.cpu().unsqueeze(0),
   456|         0|            0|            0|  0.00%|                                   pad=pad_list, mode='reflect')  # 1, ch_in, w_pad, h_pad
   457|         0|            0|            0|  0.00%|            except RuntimeError:
   458|         0|            0|            0|  0.00%|                img_padded = F.pad(single_img.cpu().unsqueeze(0),
   459|         0|            0|            0|  0.00%|                                   pad=pad_list, mode='constant', value=0)  # 1, ch_in, w_pad, h_pad
   460|         0|            0|            0|  0.00%|            w_paddded, h_padded = img_padded.shape[-2:]
   461|         0|            0|            0|  0.00%|
   462|         0|            0|            0|  0.00%|            # This is creating the index matrix on the cpu
   463|         0|            0|            0|  0.00%|            max_index = w_img * h_img
   464|         0|            0|            0|  0.00%|            index_matrix_padded = F.pad(torch.arange(max_index,
   465|         0|            0|            0|  0.00%|                                                     dtype=torch.long,
   466|         0|            0|            0|  0.00%|                                                     device=torch.device('cpu')).view(1, 1, w_img, h_img),
   467|         0|            0|            0|  0.00%|                                        pad=pad_list, mode='constant', value=-1)  # 1, 1, w_pad, h_pad
   468|         0|            0|            0|  0.00%|
   469|         0|            0|            0|  0.00%|            assert index_matrix_padded.shape[-2:] == img_padded.shape[-2:]
   470|         0|            0|            0|  0.00%|            assert index_matrix_padded.shape[0] == img_padded.shape[0]
   471|         0|            0|            0|  0.00%|            assert len(index_matrix_padded.shape) == len(img_padded.shape)
   472|         0|            0|            0|  0.00%|
   473|         0|            0|            0|  0.00%|            # Build a list with the locations of the corner of the images
   474|         0|            0|            0|  0.00%|            location_of_corner = []
   475|         0|            0|            0|  0.00%|            for i in range(0, w_img + pad_w, stride[0]):
   476|         0|            0|            0|  0.00%|                for j in range(0, h_img + pad_h, stride[1]):
   477|         0|            0|            0|  0.00%|                    location_of_corner.append([i, j])
   478|         0|            0|            0|  0.00%|
   479|         0|            0|            0|  0.00%|            ij_tmp = torch.tensor(location_of_corner, device=torch.device('cpu'), dtype=torch.long)  # shape: N, 2
   480|         0|            0|            0|  0.00%|            x1 = ij_tmp[..., 0]
   481|         0|            0|            0|  0.00%|            y1 = ij_tmp[..., 1]
   482|         0|            0|            0|  0.00%|            del ij_tmp
   483|         0|            0|            0|  0.00%|
   484|         0|            0|            0|  0.00%|            if roi_mask is not None:
   485|         0|            0|            0|  0.00%|                assert roi_mask.shape[-2:] == single_img.shape[-2:]
   486|         0|            0|            0|  0.00%|                cum_roi_mask = F.pad(torch.cumsum(torch.cumsum(roi_mask, dim=-1), dim=-2),
   487|         0|            0|            0|  0.00%|                                     pad=pad_list, mode='constant', value=0)
   488|         0|            0|            0|  0.00%|                assert cum_roi_mask.shape[-2:] == img_padded.shape[-2:]
   489|         0|            0|            0|  0.00%|
   490|         0|            0|            0|  0.00%|                # Exclude stuff if outside the roi_mask
   491|         0|            0|            0|  0.00%|                integral = cum_roi_mask[0, x1 + crop_size[0] - 1, y1 + crop_size[1] - 1] - \
   492|         0|            0|            0|  0.00%|                           cum_roi_mask[0, x1 - 1, y1 + crop_size[1] - 1] * (x1 > 0) - \
   493|         0|            0|            0|  0.00%|                           cum_roi_mask[0, x1 + crop_size[0] - 1, y1 - 1] * (y1 > 0) + \
   494|         0|            0|            0|  0.00%|                           cum_roi_mask[0, x1 - 1, y1 - 1] * (x1 > 0) * (y1 > 0)
   495|         0|            0|            0|  0.00%|                fraction = integral.float() / (crop_size[0] * crop_size[1])
   496|         0|            0|            0|  0.00%|                mask = fraction > 0.01  # if there is more than 1% ROI the patch will be processed.
   497|         0|            0|            0|  0.00%|                x1 = x1[mask]
   498|         0|            0|            0|  0.00%|                y1 = y1[mask]
   499|         0|            0|            0|  0.00%|                del cum_roi_mask
   500|         0|            0|            0|  0.00%|                del mask
   501|         0|            0|            0|  0.00%|
   502|         0|            0|            0|  0.00%|            print(f'I am going to process {x1.shape[0]} patches')
   503|         0|            0|            0|  0.00%|            if not (x1.shape[0] >= 1):
   504|         0|            0|            0|  0.00%|                raise Exception("No patches will be analyzed. Something went wrong!")
   505|         0|            0|            0|  0.00%|
   506|         0|            0|            0|  0.00%|            # split the list in chunks of batch_size
   507|         0|            0|            0|  0.00%|            index = torch.arange(0, x1.shape[0], dtype=torch.long, device=torch.device('cpu'))
   508|         0|            0|            0|  0.00%|            n_list_of_list = [index[n:n + batch_size] for n in range(0, index.shape[0], batch_size)]
   509|         0|            0|            0|  0.00%|            n_instances_tot = 0
   510|         0|            0|            0|  0.00%|            need_initialization = True
   511|         0|            0|            0|  0.00%|            for n_batches, n_list in enumerate(n_list_of_list):
   512|         0|            0|            0|  0.00%|
   513|         0|            0|            0|  0.00%|                batch_imgs = torch.cat([img_padded[...,
   514|         0|            0|            0|  0.00%|                                          x1[n]:x1[n] + crop_size[0],
   515|         0|            0|            0|  0.00%|                                          y1[n]:y1[n] + crop_size[1]] for n in n_list], dim=-4)
   516|         0|            0|            0|  0.00%|
   517|         0|            0|            0|  0.00%|                batch_index = torch.cat([index_matrix_padded[...,
   518|         0|            0|            0|  0.00%|                                           x1[n]:x1[n] + crop_size[0],
   519|         0|            0|            0|  0.00%|                                           y1[n]:y1[n] + crop_size[1]] for n in n_list], dim=-4)
   520|         0|            0|            0|  0.00%|
   521|         0|            0|            0|  0.00%|                # print progress
   522|         0|            0|            0|  0.00%|                if (n_batches % 10 == 0) or (n_batches == len(n_list_of_list) - 1):
   523|         0|            0|            0|  0.00%|                    print(f'{n_batches} out of {len(n_list_of_list) - 1} -> batch_of_imgs.shape = {batch_imgs.shape}')
   524|         0|            0|            0|  0.00%|
   525|         0|            0|            0|  0.00%|                segmentation = self.segment(batch_imgs=batch_imgs.to(self.sigma_fg.device),
   526|         0|            0|            0|  0.00%|                                            n_objects_max=n_objects_max_per_patch,
   527|         0|            0|            0|  0.00%|                                            prob_corr_factor=prob_corr_factor,
   528|         0|            0|            0|  0.00%|                                            overlap_threshold=overlap_threshold,
   529|         0|            0|            0|  0.00%|                                            noisy_sampling=True,
   530|         0|            0|            0|  0.00%|                                            draw_boxes=False,
   531|         0|            0|            0|  0.00%|                                            batch_of_index=batch_index.to(self.sigma_fg.device),
   532|         0|            0|            0|  0.00%|                                            max_index=max_index,
   533|         0|            0|            0|  0.00%|                                            radius_nn=radius_nn)
   534|         0|            0|            0|  0.00%|                # print("segmentation time", time.time()-start_time)
   535|         0|            0|            0|  0.00%|
   536|         0|            0|            0|  0.00%|                # Initialize only the fist time
   537|         0|            0|            0|  0.00%|                if need_initialization:
   538|         0|            0|            0|  0.00%|                    # Probability and integer mask are dense tensor
   539|         0|            0|            0|  0.00%|                    big_fg_prob = torch.zeros((w_paddded, h_padded),
   540|         0|            0|            0|  0.00%|                                              device=torch.device('cpu'),
   541|         0|            0|            0|  0.00%|                                              dtype=segmentation.fg_prob.dtype)
   542|         0|            0|            0|  0.00%|                    big_integer_mask = torch.zeros((w_paddded, h_padded),
   543|         0|            0|            0|  0.00%|                                                   device=torch.device('cpu'),
   544|         0|            0|            0|  0.00%|                                                   dtype=segmentation.integer_mask.dtype)
   545|         0|            0|            0|  0.00%|                    # Similarity is a sparse tensor
   546|         0|            0|            0|  0.00%|                    sparse_similarity_matrix = torch.sparse.FloatTensor(max_index, max_index).cpu()
   547|         0|            0|            0|  0.00%|                    need_initialization = False
   548|         0|            0|            0|  0.00%|
   549|         0|            0|            0|  0.00%|                # Unpack the data from batch
   550|         0|            0|            0|  0.00%|                sparse_similarity_matrix.add_(segmentation.similarity.sparse_matrix.cpu())
   551|         0|            0|            0|  0.00%|                sparse_similarity_matrix = sparse_similarity_matrix.coalesce()
   552|         0|            0|            0|  0.00%|                fg_prob = segmentation.fg_prob.cpu()
   553|         0|            0|            0|  0.00%|                integer_mask = segmentation.integer_mask.cpu()
   554|         0|            0|            0|  0.00%|
   555|         0|            0|            0|  0.00%|                for k, n in enumerate(n_list):
   556|         0|            0|            0|  0.00%|                    big_fg_prob[x1[n]:x1[n] + crop_size[0], y1[n]:y1[n] + crop_size[1]] += fg_prob[k, 0]
   557|         0|            0|            0|  0.00%|
   558|         0|            0|            0|  0.00%|                    # Find a set of not-overlapping tiles to obtain a sample segmentation (without graph clustering)
   559|         0|            0|            0|  0.00%|                    if ((x1[n] - pad_w) % crop_size[0] == 0) and ((y1[n] - pad_h) % crop_size[1] == 0):
   560|         0|            0|            0|  0.00%|                        n_instances = torch.max(integer_mask[k])
   561|         0|            0|            0|  0.00%|                        shifted_integer_mask = (integer_mask[k] > 0) * \
   562|         0|            0|            0|  0.00%|                                               (integer_mask[k] + n_instances_tot)
   563|         0|            0|            0|  0.00%|                        n_instances_tot += n_instances
   564|         0|            0|            0|  0.00%|                        big_integer_mask[x1[n]:x1[n] +
   565|         0|            0|            0|  0.00%|                                               crop_size[0], y1[n]:y1[n] + crop_size[1]] = shifted_integer_mask[0]
   566|         0|            0|            0|  0.00%|
   567|         0|            0|            0|  0.00%|            # End of loop over batches
   568|         0|            0|            0|  0.00%|            sparse_similarity_matrix.div_(n_prediction)
   569|         0|            0|            0|  0.00%|            big_fg_prob.div_(n_prediction)
   570|         0|            0|            0|  0.00%|
   571|         0|            0|            0|  0.00%|            return Segmentation(raw_image=single_img[None],
   572|         0|            0|            0|  0.00%|                                fg_prob=big_fg_prob[None, None, pad_w:pad_w + w_img, pad_h:pad_h + h_img],
   573|         0|            0|            0|  0.00%|                                integer_mask=big_integer_mask[None, None, pad_w:pad_w + w_img, pad_h:pad_h + h_img],
   574|         0|            0|            0|  0.00%|                                bounding_boxes=None,
   575|         0|            0|            0|  0.00%|                                similarity=SparseSimilarity(sparse_matrix=sparse_similarity_matrix,
   576|         0|            0|            0|  0.00%|                                                            index_matrix=index_matrix_padded[0, 0, pad_w:pad_w + w_img,
   577|         0|            0|            0|  0.00%|                                                                         pad_h:pad_h + h_img]))
   578|         0|            0|            0|  0.00%|
   579|         0|            0|            0|  0.00%|    # this is the generic function which has all the options unspecified
   580|        23|  0.000208616|  9.07027e-06|  0.00%|    def process_batch_imgs(self,
   581|         1|  1.69277e-05|  1.69277e-05|  0.00%|                           imgs_in: torch.tensor,
   582|         1|  1.54972e-05|  1.54972e-05|  0.00%|                           generate_synthetic_data: bool,
   583|         1|  1.57356e-05|  1.57356e-05|  0.00%|                           topk_only: bool,
   584|         1|  1.54972e-05|  1.54972e-05|  0.00%|                           draw_image: bool,
   585|         1|  1.54972e-05|  1.54972e-05|  0.00%|                           draw_bg: bool,
   586|         1|  3.14713e-05|  3.14713e-05|  0.00%|                           draw_boxes: bool,
   587|         1|   1.5974e-05|   1.5974e-05|  0.00%|                           verbose: bool,
   588|         1|  1.62125e-05|  1.62125e-05|  0.00%|                           noisy_sampling: bool,
   589|         1|  1.64509e-05|  1.64509e-05|  0.00%|                           prob_corr_factor: float,
   590|         1|   1.5974e-05|   1.5974e-05|  0.00%|                           overlap_threshold: float,
   591|         1|  3.09944e-05|  3.09944e-05|  0.00%|                           n_objects_max: int,
   592|         1|  1.54972e-05|  1.54972e-05|  0.00%|                           bg_is_zero: bool,
   593|         1|  1.66893e-05|  1.66893e-05|  0.00%|                           bg_resolution: tuple):
   594|         0|            0|            0|  0.00%|        """ It needs to return: metric (with a .loss member) and whatever else """
   595|         0|            0|            0|  0.00%|
   596|         0|            0|            0|  0.00%|        # Checks
   597|        23|  0.000322819|  1.40356e-05|  0.00%|        assert len(imgs_in.shape) == 4
   598|        23|  0.000195742|  8.51051e-06|  0.00%|        assert self.input_img_dict["ch_in"] == imgs_in.shape[-3]
   599|         0|            0|            0|  0.00%|        # End of Checks #
   600|         0|            0|            0|  0.00%|
   601|        23|  0.000706196|  3.07042e-05|  0.00%|        inference: Inference = self.inference_and_generator(imgs_in=imgs_in,
(call)|        23|   0.00151086|  6.56895e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:580 __getattr__
   602|        23|  0.000128984|  5.60802e-06|  0.00%|                                                            generate_synthetic_data=generate_synthetic_data,
   603|        23|  0.000136614|  5.93973e-06|  0.00%|                                                            prob_corr_factor=prob_corr_factor,
   604|        23|  0.000160217|  6.96597e-06|  0.00%|                                                            overlap_threshold=overlap_threshold,
   605|        23|  0.000146151|  6.35437e-06|  0.00%|                                                            n_objects_max=n_objects_max,
   606|        23|  0.000121117|  5.26594e-06|  0.00%|                                                            topk_only=topk_only,
   607|        23|  0.000147104|  6.39584e-06|  0.00%|                                                            noisy_sampling=noisy_sampling,
   608|        23|  0.000166416|  7.23549e-06|  0.00%|                                                            bg_is_zero=bg_is_zero,
   609|        23|   0.00087285|    3.795e-05|  0.00%|                                                            bg_resolution=bg_resolution)
(call)|        23|      16.3601|     0.711308|  4.45%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:540 __call__
   610|         0|            0|            0|  0.00%|
   611|        23|  0.000223398|  9.71297e-06|  0.00%|        regularizations: RegMiniBatch = self.compute_regularizations(inference=inference,
   612|        23|  0.000668526|  2.90663e-05|  0.00%|                                                                     verbose=verbose)
(call)|        23|    0.0373099|   0.00162217|  0.01%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/vae_model.py:141 compute_regularizations
   613|         0|            0|            0|  0.00%|
   614|        23|  0.000174999|  7.60866e-06|  0.00%|        metrics: MetricMiniBatch = self.compute_metrics(imgs_in=imgs_in,
   615|        23|   0.00013423|  5.83607e-06|  0.00%|                                                        inference=inference,
   616|        23|     0.001652|  7.18262e-05|  0.00%|                                                        regularizations=regularizations)
(call)|        23|      2.32271|     0.100987|  0.63%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/vae_model.py:180 compute_metrics
   617|         0|            0|            0|  0.00%|
   618|        23|  0.000475883|  2.06906e-05|  0.00%|        with torch.no_grad():
(call)|        23|  0.000328541|  1.42844e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/grad_mode.py:65 __enter__
   619|        23|  0.000118256|  5.14155e-06|  0.00%|            if draw_image:
   620|         2|  1.12057e-05|  5.60284e-06|  0.00%|                imgs_rec = draw_img(prob=inference.sample_prob,
   621|         2|   1.7643e-05|  8.82149e-06|  0.00%|                                    bounding_box=inference.sample_bb,
   622|         2|  1.16825e-05|  5.84126e-06|  0.00%|                                    big_mask=inference.big_mask,
   623|         2|  1.12057e-05|  5.60284e-06|  0.00%|                                    big_img=inference.big_img,
   624|         2|  1.14441e-05|  5.72205e-06|  0.00%|                                    big_bg=inference.big_bg,
   625|         2|  1.09673e-05|  5.48363e-06|  0.00%|                                    draw_bg=draw_bg,
   626|         2|  0.000117064|  5.85318e-05|  0.00%|                                    draw_boxes=draw_boxes)
(call)|         2|     0.304258|     0.152129|  0.08%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_visualization.py:75 draw_img
(call)|         2|  0.000106812|  5.34058e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/grad_mode.py:69 __exit__
   627|         0|            0|            0|  0.00%|            else:
   628|        21|   0.00124145|  5.91165e-05|  0.00%|                imgs_rec = torch.zeros_like(imgs_in)
(call)|        21|   0.00079298|   3.7761e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/grad_mode.py:69 __exit__
   629|         0|            0|            0|  0.00%|
   630|        23|  0.000400543|  1.74149e-05|  0.00%|        return Output(metrics=metrics, inference=inference, imgs=imgs_rec)
(call)|        23|  0.000211239|   9.1843e-06|  0.00%|# <string>_125:1 __new__
   631|         0|            0|            0|  0.00%|
   632|        22|  0.000291586|  1.32539e-05|  0.00%|    def forward(self,
   633|         0|            0|            0|  0.00%|                imgs_in: torch.tensor,
   634|         0|            0|            0|  0.00%|                draw_image: bool = False,
   635|         0|            0|            0|  0.00%|                draw_bg: bool = False,
   636|         0|            0|            0|  0.00%|                draw_boxes: bool = False,
   637|         1|  1.74046e-05|  1.74046e-05|  0.00%|                verbose: bool = False):
   638|         0|            0|            0|  0.00%|
   639|        22|  0.000223398|  1.01545e-05|  0.00%|        return self.process_batch_imgs(imgs_in=imgs_in,
   640|        22|  0.000122786|  5.58116e-06|  0.00%|                                       generate_synthetic_data=False,
   641|        22|  9.65595e-05|  4.38907e-06|  0.00%|                                       topk_only=False,
   642|        22|  9.34601e-05|  4.24819e-06|  0.00%|                                       draw_image=draw_image,
   643|        22|  9.46522e-05|  4.30237e-06|  0.00%|                                       draw_bg=draw_bg,
   644|        22|  0.000101566|  4.61665e-06|  0.00%|                                       draw_boxes=draw_boxes,
   645|        22|  9.20296e-05|  4.18316e-06|  0.00%|                                       verbose=verbose,
   646|        22|  0.000112057|  5.09349e-06|  0.00%|                                       noisy_sampling=True,  # True if self.training else False,
   647|        22|  0.000160217|   7.2826e-06|  0.00%|                                       prob_corr_factor=getattr(self, "prob_corr_factor", 0.0),
   648|        22|  0.000166655|  7.57521e-06|  0.00%|                                       overlap_threshold=self.nms_dict.get("overlap_threshold", 0.3),
   649|        22|  0.000119448|  5.42944e-06|  0.00%|                                       n_objects_max=self.input_img_dict["n_objects_max"],
   650|        22|  9.84669e-05|  4.47577e-06|  0.00%|                                       bg_is_zero=self.input_img_dict.get("bg_is_zero", True),
   651|        22|  9.41753e-05|   4.2807e-06|  0.00%|                                       bg_resolution=self.input_img_dict.get("background_resolution_before_upsampling",
   652|        22|  0.000808239|  3.67381e-05|  0.00%|                                                                             (2, 2)))
(call)|        22|      18.7315|     0.851433|  5.09%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/vae_model.py:580 process_batch_imgs
   653|         0|            0|            0|  0.00%|
   654|         1|  1.12057e-05|  1.12057e-05|  0.00%|    def generate(self,
   655|         0|            0|            0|  0.00%|                 imgs_in: torch.tensor,
   656|         0|            0|            0|  0.00%|                 draw_bg: bool = False,
   657|         0|            0|            0|  0.00%|                 draw_boxes: bool = False,
   658|         1|  1.66893e-05|  1.66893e-05|  0.00%|                 verbose: bool = False):
   659|         0|            0|            0|  0.00%|
   660|         1|  2.45571e-05|  2.45571e-05|  0.00%|        with torch.no_grad():
(call)|         1|  2.71797e-05|  2.71797e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/grad_mode.py:65 __enter__
   661|         1|   0.00100517|   0.00100517|  0.00%|            return self.process_batch_imgs(imgs_in=torch.zeros_like(imgs_in),
   662|         1|  1.85966e-05|  1.85966e-05|  0.00%|                                           generate_synthetic_data=True,
   663|         1|  5.72205e-06|  5.72205e-06|  0.00%|                                           topk_only=False,
   664|         1|  4.76837e-06|  4.76837e-06|  0.00%|                                           draw_image=True,
   665|         1|  5.24521e-06|  5.24521e-06|  0.00%|                                           draw_bg=draw_bg,
   666|         1|  4.76837e-06|  4.76837e-06|  0.00%|                                           draw_boxes=draw_boxes,
   667|         1|  5.96046e-06|  5.96046e-06|  0.00%|                                           verbose=verbose,
   668|         1|  4.76837e-06|  4.76837e-06|  0.00%|                                           noisy_sampling=True,
   669|         1|  5.24521e-06|  5.24521e-06|  0.00%|                                           prob_corr_factor=0.0,
   670|         1|  7.15256e-06|  7.15256e-06|  0.00%|                                           overlap_threshold=self.nms_dict.get("overlap_threshold", 0.3),
   671|         1|  6.67572e-06|  6.67572e-06|  0.00%|                                           n_objects_max=self.input_img_dict["n_objects_max"],
   672|         1|  4.76837e-06|  4.76837e-06|  0.00%|                                           bg_is_zero=True,
   673|         1|  4.72069e-05|  4.72069e-05|  0.00%|                                           bg_resolution=(2, 2))
(call)|         1|     0.304365|     0.304365|  0.08%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/vae_model.py:580 process_batch_imgs
(call)|         1|  3.17097e-05|  3.17097e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/grad_mode.py:69 __exit__
File: /home/jupyter/REPOS/spacetx-research/src/MODULES/non_max_suppression.py
File duration: 2.19078s (0.60%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  4.36306e-05|  2.18153e-05|  0.00%|import torch
     2|         1|  3.52859e-05|  3.52859e-05|  0.00%|from .namedtuple import BB, NMSoutput
(call)|         1|  1.43051e-05|  1.43051e-05|  0.00%|# <frozen importlib._bootstrap>:416 parent
(call)|         1|  1.88351e-05|  1.88351e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         3|  5.79357e-05|  1.93119e-05|  0.00%|class NonMaxSuppression(object):
(call)|         1|  0.000220537|  0.000220537|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/non_max_suppression.py:5 NonMaxSuppression
     6|         0|            0|            0|  0.00%|    """ Use Intersection_over_Union criteria to put most of the entries to zero while leaving few detection unchanged.
     7|         0|            0|            0|  0.00%|        INPUT  has shape: BATCH x N_BOXES x ....
     8|         0|            0|            0|  0.00%|        OUTPUT has shape: BATCH x K_MAX   x ....
     9|         0|            0|            0|  0.00%|
    10|         0|            0|            0|  0.00%|        The non_max_suppression algorithm is as follows:
    11|         0|            0|            0|  0.00%|        1. Discard all voxels with p<p_threshold
    12|         0|            0|            0|  0.00%|        2. While there are any remaining voxels:
    13|         0|            0|            0|  0.00%|            - Pick the voxel with largest p and output it as a prediction
    14|         0|            0|            0|  0.00%|            - Discard any voxels which has a IoU> IoU_threshold with the box just exported.
    15|         1|  4.52995e-06|  4.52995e-06|  0.00%|    """
    16|         0|            0|            0|  0.00%|
    17|         1|   6.7234e-05|   6.7234e-05|  0.00%|    def __init__(self):
    18|         0|            0|            0|  0.00%|        super().__init__()
    19|         0|            0|            0|  0.00%|
    20|        25|   0.00015974|  6.38962e-06|  0.00%|    @staticmethod
    21|         1|  7.15256e-06|  7.15256e-06|  0.00%|    def perform_nms_selection(mask_overlap: torch.Tensor,
    22|         1|   6.4373e-06|   6.4373e-06|  0.00%|                              score: torch.Tensor,
    23|         1|  6.19888e-06|  6.19888e-06|  0.00%|                              possible: torch.Tensor,
    24|         1|  7.39098e-06|  7.39098e-06|  0.00%|                              n_objects_max: int) -> torch.Tensor:
    25|         0|            0|            0|  0.00%|        """ Input:
    26|         0|            0|            0|  0.00%|            mask_overlap: n x n x batch
    27|         0|            0|            0|  0.00%|            score: n x batch
    28|         0|            0|            0|  0.00%|            possible: n x batch
    29|         0|            0|            0|  0.00%|            n_objects_max: integer
    30|         0|            0|            0|  0.00%|            Output: n x batch
    31|         0|            0|            0|  0.00%|
    32|         0|            0|            0|  0.00%|            It assumes score >= 0.0
    33|         0|            0|            0|  0.00%|        """
    34|         0|            0|            0|  0.00%|
    35|         0|            0|            0|  0.00%|        # check input formats
    36|        24|     0.000211|  8.79169e-06|  0.00%|        assert len(mask_overlap.shape) == 3
    37|        24|   0.00024271|  1.01129e-05|  0.00%|        n_boxes, n_boxes, batch_size = mask_overlap.shape
    38|        24|  0.000162363|  6.76513e-06|  0.00%|        assert score.shape == (n_boxes, batch_size)
    39|        24|  0.000135899|  5.66244e-06|  0.00%|        assert possible.shape == (n_boxes, batch_size)
    40|         0|            0|            0|  0.00%|
    41|         0|            0|            0|  0.00%|        # reshape
    42|        24|  0.000383615|   1.5984e-05|  0.00%|        score: torch.Tensor = score.unsqueeze(0)                                                     # 1 x n_box x batch
    43|        24|  0.000233412|  9.72549e-06|  0.00%|        possible: torch.Tensor = possible.unsqueeze(0)                                               # 1 x n_box x batch
    44|        24|  0.000140905|  5.87106e-06|  0.00%|        idx: torch.Tensor = torch.arange(start=0, end=n_boxes, step=1,
    45|        24|   0.00134277|  5.59489e-05|  0.00%|                                         device=score.device).view(n_boxes, 1, 1).long()             # n_box x 1 x 1
    46|        24|   0.00130153|  5.42303e-05|  0.00%|        selected: torch.Tensor = torch.zeros((n_boxes, 1, batch_size), device=score.device).float()  # n_box x 1 x batch
    47|         0|            0|            0|  0.00%|
    48|         0|            0|            0|  0.00%|        # Loop
    49|        24|  0.000220776|  9.19898e-06|  0.00%|        counter = 0
    50|       178|      1.96151|    0.0110197|  0.53%|        while counter <= n_objects_max and (possible > 0).any():  # you never need more than n_objects_max proposals
(call)|       178|    0.0140715|  7.90532e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/tensor.py:25 wrapped
    51|         0|            0|            0|  0.00%|            # could add another condition. That possible == 0
    52|       154|     0.047122|  0.000305987|  0.01%|            score_mask: torch.Tensor = mask_overlap*(score*possible)                       # n_box x n_box x batch
    53|       154|    0.0233507|  0.000151628|  0.01%|            index = torch.max(score_mask, keepdim=True, dim=-2)[1]           # n_box x 1 x batch
    54|       154|    0.0731466|  0.000474978|  0.02%|            selected += possible.permute(1, 0, 2)*(idx == index).float()     # n_box x 1 x batch
(call)|       154|    0.0234168|  0.000152057|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torch/tensor.py:25 wrapped
    55|       154|     0.021167|  0.000137448|  0.01%|            blocks = torch.sum(mask_overlap*selected, keepdim=True, dim=-3)  # 1 x n_box x batch
    56|       154|    0.0224869|  0.000146019|  0.01%|            possible *= (blocks == 0).float()                                # 1 x n_box x batch
(call)|       154|     0.013768|  8.94023e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/tensor.py:25 wrapped
    57|       154|   0.00132322|  8.59236e-06|  0.00%|            counter += 1
    58|         0|            0|            0|  0.00%|
    59|         0|            0|            0|  0.00%|        # return
    60|        24|  0.000593185|  2.47161e-05|  0.00%|        return selected.squeeze(-2)  # shape: n_box x batch
    61|         0|            0|            0|  0.00%|
    62|       121|  0.000462294|  3.82061e-06|  0.00%|    @staticmethod
    63|         1|  7.39098e-06|  7.39098e-06|  0.00%|    def unroll_and_compare(x: torch.Tensor, label: str) -> torch.Tensor:
    64|         0|            0|            0|  0.00%|        """ Given a vector of size: batch x n_boxes
    65|         0|            0|            0|  0.00%|        it creates a matrix of size: batch x n_boxes x n_boxes
    66|         0|            0|            0|  0.00%|        obtained by comparing all vecotr entries with all other vector entries
    67|         0|            0|            0|  0.00%|        The comparison is either: MIN,MAX """
    68|       120|  0.000703573|  5.86311e-06|  0.00%|        assert len(x.shape) == 2
    69|       120|  0.000560284|  4.66903e-06|  0.00%|        n_box, batch_size = x.shape
    70|       120|   0.00144267|  1.20223e-05|  0.00%|        tmp_a = x.view(1, n_box, batch_size)
    71|       120|   0.00106454|  8.87116e-06|  0.00%|        tmp_b = x.view(n_box, 1, batch_size)
    72|       120|  0.000506401|  4.22001e-06|  0.00%|        if label == "MAX":
    73|        48|    0.0023315|  4.85728e-05|  0.00%|            return torch.max(tmp_a, tmp_b)
    74|        72|  0.000252247|  3.50343e-06|  0.00%|        elif label == "MIN":
    75|        72|   0.00336742|  4.67698e-05|  0.00%|            return torch.min(tmp_a, tmp_b)
    76|         0|            0|            0|  0.00%|        else:
    77|         0|            0|            0|  0.00%|            raise Exception("label is unknown. It is ", label)
    78|         0|            0|            0|  0.00%|
    79|        25|  0.000154734|  6.18935e-06|  0.00%|    @staticmethod
    80|         1|  2.21729e-05|  2.21729e-05|  0.00%|    def compute_box_intersection_over_min_area(bounding_box: BB) -> torch.Tensor:
    81|         0|            0|            0|  0.00%|        """ compute the matrix of shape: batch x n_boxes x n_boxes with the Intersection Over Unions """
    82|         0|            0|            0|  0.00%|
    83|         0|            0|            0|  0.00%|        # compute x1,x3,y1,y3
    84|        24|     0.001719|  7.16249e-05|  0.00%|        x1: torch.Tensor = bounding_box.bx - 0.5 * bounding_box.bw
    85|        24|   0.00139642|  5.81841e-05|  0.00%|        x3: torch.Tensor = bounding_box.bx + 0.5 * bounding_box.bw
    86|        24|   0.00130391|  5.43296e-05|  0.00%|        y1: torch.Tensor = bounding_box.by - 0.5 * bounding_box.bh
    87|        24|   0.00131631|  5.48462e-05|  0.00%|        y3: torch.Tensor = bounding_box.by + 0.5 * bounding_box.bh
    88|        24|  0.000793219|  3.30508e-05|  0.00%|        area: torch.Tensor = bounding_box.bw * bounding_box.bh
    89|         0|            0|            0|  0.00%|
    90|        24|   0.00072217|  3.00904e-05|  0.00%|        min_area: torch.Tensor = NonMaxSuppression.unroll_and_compare(area, "MIN")  # min of area between box1 and box2
(call)|        24|   0.00249124|  0.000103801|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/non_max_suppression.py:62 unroll_and_compare
    91|        24|  0.000527143|  2.19643e-05|  0.00%|        xi1: torch.Tensor = NonMaxSuppression.unroll_and_compare(x1, "MAX")  # max of x1 between box1 and box2
(call)|        24|   0.00219893|  9.16223e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/non_max_suppression.py:62 unroll_and_compare
    92|        24|  0.000500441|  2.08517e-05|  0.00%|        yi1: torch.Tensor = NonMaxSuppression.unroll_and_compare(y1, "MAX")  # max of y1 between box1 and box2
(call)|        24|   0.00200534|  8.35558e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/non_max_suppression.py:62 unroll_and_compare
    93|        24|  0.000468254|  1.95106e-05|  0.00%|        xi3: torch.Tensor = NonMaxSuppression.unroll_and_compare(x3, "MIN")  # min of x3 between box1 and box2
(call)|        24|   0.00207257|  8.63572e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/non_max_suppression.py:62 unroll_and_compare
    94|        24|  0.000488281|  2.03451e-05|  0.00%|        yi3: torch.Tensor = NonMaxSuppression.unroll_and_compare(y3, "MIN")  # min of y3 between box1 and box2
(call)|        24|   0.00191617|  7.98404e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/non_max_suppression.py:62 unroll_and_compare
    95|         0|            0|            0|  0.00%|
    96|        24|   0.00409842|  0.000170767|  0.00%|        intersection_area: torch.Tensor = torch.clamp(xi3 - xi1, min=0) * torch.clamp(yi3 - yi1, min=0)
    97|        24|   0.00084734|  3.53058e-05|  0.00%|        return intersection_area / min_area
    98|         0|            0|            0|  0.00%|
    99|        25|  0.000232458|  9.29832e-06|  0.00%|    @staticmethod
   100|         1|  2.14577e-05|  2.14577e-05|  0.00%|    def compute_mask_and_index(prob: torch.Tensor,
   101|         1|  6.67572e-06|  6.67572e-06|  0.00%|                               bounding_box: BB,
   102|         1|   6.4373e-06|   6.4373e-06|  0.00%|                               overlap_threshold: float,
   103|         1|   6.4373e-06|   6.4373e-06|  0.00%|                               n_objects_max: int,
   104|         1|  7.62939e-06|  7.62939e-06|  0.00%|                               topk_only: bool) -> NMSoutput:
   105|         0|            0|            0|  0.00%|
   106|         0|            0|            0|  0.00%|        # compute the indices to do nms + topk filter based on noisy probabilities
   107|        24|  0.000233889|  9.74536e-06|  0.00%|        assert len(prob.shape) == 2
   108|        24|  0.000162601|  6.77506e-06|  0.00%|        n_boxes, batch_size = prob.shape
   109|         0|            0|            0|  0.00%|
   110|         0|            0|            0|  0.00%|        # this is O(N^2) algorithm
   111|        24|    0.0008533|  3.55542e-05|  0.00%|        overlap_measure = NonMaxSuppression.compute_box_intersection_over_min_area(bounding_box=bounding_box)
(call)|        24|    0.0250134|   0.00104223|  0.01%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/non_max_suppression.py:79 compute_box_intersection_over_min_area
   112|        24|   0.00152683|   6.3618e-05|  0.00%|        binarized_overlap = (overlap_measure > overlap_threshold).float()
(call)|        24|   0.00180578|  7.52409e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/tensor.py:25 wrapped
   113|        24|  0.000316858|  1.32024e-05|  0.00%|        assert binarized_overlap.shape == (n_boxes, n_boxes, batch_size)
   114|         0|            0|            0|  0.00%|
   115|        24|  0.000126123|  5.25514e-06|  0.00%|        if topk_only:
   116|         0|            0|            0|  0.00%|            # If nms_mask = 1 then this is equivalent to do topk only
   117|         0|            0|            0|  0.00%|            chosen_nms_mask = torch.ones_like(prob)
   118|         0|            0|            0|  0.00%|        else:
   119|        24|   0.00124693|  5.19554e-05|  0.00%|            possible = (prob > 0.0).float()
(call)|        24|   0.00135684|   5.6535e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/tensor.py:25 wrapped
   120|        24|  0.000236273|   9.8447e-06|  0.00%|            chosen_nms_mask: torch.Tensor = NonMaxSuppression.perform_nms_selection(mask_overlap=binarized_overlap,
   121|        24|  0.000138521|  5.77172e-06|  0.00%|                                                                                    score=prob,
   122|        24|  0.000140429|  5.85119e-06|  0.00%|                                                                                    possible=possible,
   123|        24|  0.000954151|  3.97563e-05|  0.00%|                                                                                    n_objects_max=n_objects_max)
(call)|        24|      2.20649|    0.0919369|  0.60%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/non_max_suppression.py:20 perform_nms_selection
   124|         0|            0|            0|  0.00%|
   125|        24|  0.000251532|  1.04805e-05|  0.00%|            assert chosen_nms_mask.shape == (n_boxes, batch_size)
   126|         0|            0|            0|  0.00%|
   127|         0|            0|            0|  0.00%|        # select the indices of the top boxes according to the masked prob.
   128|         0|            0|            0|  0.00%|        # Note that masked_prob are zero and do not receive gradients for the boxes which underwent NMS
   129|        24|  0.000935555|  3.89814e-05|  0.00%|        masked_prob = chosen_nms_mask * prob
   130|        24|  0.000288248|  1.20103e-05|  0.00%|        k = min(n_objects_max, n_boxes)
   131|        24|   0.00189137|  7.88073e-05|  0.00%|        indices_top_k: torch.Tensor = torch.topk(masked_prob, k=k, dim=-2, largest=True, sorted=True)[1]
   132|         0|            0|            0|  0.00%|
   133|        24|  0.000226736|  9.44734e-06|  0.00%|        return NMSoutput(nms_mask=chosen_nms_mask,
   134|        24|  0.000440598|  1.83582e-05|  0.00%|                         index_top_k=indices_top_k)
(call)|        24|  0.000324011|  1.35005e-05|  0.00%|# <string>_118:1 __new__
File: test_speed_GP.py
File duration: 1.68455s (0.46%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|#!/usr/bin/env python
     2|         0|            0|            0|  0.00%|# coding: utf-8
     3|         0|            0|            0|  0.00%|
     4|         2|  6.46114e-05|  3.23057e-05|  0.00%|import neptune
(call)|         1|      20.9098|      20.9098|  5.69%|# <frozen importlib._bootstrap>:978 _find_and_load
     5|         1|  5.57899e-05|  5.57899e-05|  0.00%|from MODULES.utilities_neptune import log_object_as_artifact, log_model_summary, log_last_ckpt, log_img_only, log_dict_metrics
(call)|         1|      5.48318|      5.48318|  1.49%|# <frozen importlib._bootstrap>:978 _find_and_load
(call)|         1|  2.02656e-05|  2.02656e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
     6|         1|  8.51154e-05|  8.51154e-05|  0.00%|from MODULES.vae_model import *
(call)|         1|      10.3735|      10.3735|  2.82%|# <frozen importlib._bootstrap>:978 _find_and_load
(call)|         1|  1.81198e-05|  1.81198e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
     7|         1|  5.14984e-05|  5.14984e-05|  0.00%|from MODULES.utilities_visualization import show_batch, plot_tiling, plot_all_from_dictionary, plot_label_contours
(call)|         1|  1.52588e-05|  1.52588e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
     8|         1|  2.55108e-05|  2.55108e-05|  0.00%|from MODULES.utilities_visualization import plot_reconstruction_and_inference, plot_segmentation
(call)|         1|  3.02792e-05|  3.02792e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
     9|         1|  2.59876e-05|  2.59876e-05|  0.00%|from MODULES.utilities_ml import ConditionalRandomCrop, SpecialDataSet, process_one_epoch
(call)|         1|  1.50204e-05|  1.50204e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
    10|         1|  6.79493e-05|  6.79493e-05|  0.00%|from MODULES.graph_clustering import GraphSegmentation
(call)|         1|     0.617168|     0.617168|  0.17%|# <frozen importlib._bootstrap>:978 _find_and_load
(call)|         1|   3.3617e-05|   3.3617e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
    11|         0|            0|            0|  0.00%|
    12|         0|            0|            0|  0.00%|# Check versions
    13|         1|  2.86102e-05|  2.86102e-05|  0.00%|from platform import python_version
(call)|         1|  1.50204e-05|  1.50204e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
    14|         1|  9.25064e-05|  9.25064e-05|  0.00%|print("python_version() ---> ", python_version())
(call)|         1|  9.03606e-05|  9.03606e-05|  0.00%|# /opt/anaconda3/lib/python3.7/platform.py:1267 python_version
    15|         1|  2.98023e-05|  2.98023e-05|  0.00%|print("torch.__version__ --> ", torch.__version__)
    16|         0|            0|            0|  0.00%|
    17|         0|            0|            0|  0.00%|
    18|         1|  3.69549e-05|  3.69549e-05|  0.00%|params = load_json_as_dict("./ML_parameters.json")
(call)|         1|  0.000473499|  0.000473499|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities.py:63 load_json_as_dict
    19|         0|            0|            0|  0.00%|
    20|         1|  5.53131e-05|  5.53131e-05|  0.00%|neptune.set_project(params["neptune_project"])
(call)|         1|      7.68799|      7.68799|  2.09%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/__init__.py:163 set_project
    21|         0|            0|            0|  0.00%|exp: neptune.experiments.Experiment = \
    22|         1|   3.0756e-05|   3.0756e-05|  0.00%|    neptune.create_experiment(params=flatten_dict(params),
(call)|         1|   0.00273442|   0.00273442|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities.py:43 flatten_dict
    23|         1|  9.53674e-06|  9.53674e-06|  0.00%|                              upload_source_files=["./main.py", "./MODULES/vae_model.py", "./MODULES/encoders_decoders.py"],
    24|         1|  7.86781e-06|  7.86781e-06|  0.00%|                              upload_stdout=True,
    25|         1|  6.84261e-05|  6.84261e-05|  0.00%|                              upload_stderr=True)
(call)|         1|      6.08551|      6.08551|  1.66%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/__init__.py:202 create_experiment
    26|         0|            0|            0|  0.00%|
    27|         0|            0|            0|  0.00%|# Get the training and test data
    28|         1|  5.10216e-05|  5.10216e-05|  0.00%|preprocessed = load_obj("./data_train.pt")
(call)|         1|     0.184456|     0.184456|  0.05%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities.py:58 load_obj
    29|         1|    0.0123241|    0.0123241|  0.00%|img_torch = preprocessed.img.float()
    30|         1|  0.000169516|  0.000169516|  0.00%|roi_mask_torch = preprocessed.roi_mask.bool()
    31|         1|  4.02927e-05|  4.02927e-05|  0.00%|assert len(img_torch.shape) == len(roi_mask_torch.shape) == 4
    32|         0|            0|            0|  0.00%|# print("GPU GB after opening data ->",torch.cuda.memory_allocated()/1E9)
    33|         0|            0|            0|  0.00%|
    34|         1|  1.40667e-05|  1.40667e-05|  0.00%|BATCH_SIZE = params["simulation"]["batch_size"]
    35|         1|  1.14441e-05|  1.14441e-05|  0.00%|SIZE_CROPS = params["input_image"]["size_raw_image"]
    36|         1|  2.24113e-05|  2.24113e-05|  0.00%|N_TEST = params["simulation"]["N_test"]
    37|         1|   4.8399e-05|   4.8399e-05|  0.00%|N_TRAIN = params["simulation"]["N_train"]
    38|         1|   1.0252e-05|   1.0252e-05|  0.00%|conditional_crop_test = ConditionalRandomCrop(desired_w=SIZE_CROPS, desired_h=SIZE_CROPS,
    39|         1|  5.76973e-05|  5.76973e-05|  0.00%|                                              min_roi_fraction=0.9, n_crops_per_image=N_TEST)
(call)|         1|  7.41482e-05|  7.41482e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:199 __init__
    40|         0|            0|            0|  0.00%|
    41|         1|  9.53674e-06|  9.53674e-06|  0.00%|conditional_crop_train = ConditionalRandomCrop(desired_w=SIZE_CROPS, desired_h=SIZE_CROPS,
    42|         1|  3.24249e-05|  3.24249e-05|  0.00%|                                               min_roi_fraction=0.9, n_crops_per_image=N_TRAIN)
(call)|         1|  2.95639e-05|  2.95639e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:199 __init__
    43|         0|            0|            0|  0.00%|
    44|         1|  9.77516e-06|  9.77516e-06|  0.00%|test_data = conditional_crop_test.crop(img=img_torch,
    45|         1|  3.86238e-05|  3.86238e-05|  0.00%|                                       roi_mask=roi_mask_torch)
(call)|         1|    0.0245166|    0.0245166|  0.01%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:276 crop
    46|         0|            0|            0|  0.00%|# print("GPU GB after defining test data ->",torch.cuda.memory_allocated()/1E9)
    47|         0|            0|            0|  0.00%|
    48|         0|            0|            0|  0.00%|
    49|         1|   1.0252e-05|   1.0252e-05|  0.00%|test_loader = SpecialDataSet(img=test_data,
    50|         1|  8.82149e-06|  8.82149e-06|  0.00%|                             store_in_cuda=False,
    51|         1|  8.58307e-06|  8.58307e-06|  0.00%|                             shuffle=False,
    52|         1|  8.10623e-06|  8.10623e-06|  0.00%|                             drop_last=False,
    53|         1|  4.29153e-05|  4.29153e-05|  0.00%|                             batch_size=BATCH_SIZE)
(call)|         1|  0.000438929|  0.000438929|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:288 __init__
    54|         1|  5.31673e-05|  5.31673e-05|  0.00%|test_batch_example_fig = test_loader.check_batch()
(call)|         1|      1.30317|      1.30317|  0.35%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:372 check_batch
    55|         1|  4.33922e-05|  4.33922e-05|  0.00%|log_img_only(name="test_batch_example", fig=test_batch_example_fig, experiment=exp)
(call)|         1|      1.24245|      1.24245|  0.34%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_neptune.py:8 log_img_only
    56|         0|            0|            0|  0.00%|
    57|         1|  1.04904e-05|  1.04904e-05|  0.00%|train_loader = SpecialDataSet(img=img_torch,
    58|         1|  8.82149e-06|  8.82149e-06|  0.00%|                              roi_mask=roi_mask_torch,
    59|         1|  8.34465e-06|  8.34465e-06|  0.00%|                              data_augmentation=conditional_crop_train,
    60|         1|  8.58307e-06|  8.58307e-06|  0.00%|                              store_in_cuda=False,
    61|         1|  7.86781e-06|  7.86781e-06|  0.00%|                              shuffle=True,
    62|         1|  8.10623e-06|  8.10623e-06|  0.00%|                              drop_last=True,
    63|         1|  0.000125885|  0.000125885|  0.00%|                              batch_size=BATCH_SIZE)
(call)|         1|     0.286466|     0.286466|  0.08%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:288 __init__
    64|         1|  6.98566e-05|  6.98566e-05|  0.00%|train_batch_example_fig = train_loader.check_batch()
(call)|         1|      1.27934|      1.27934|  0.35%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:372 check_batch
    65|         1|  6.29425e-05|  6.29425e-05|  0.00%|log_img_only(name="train_batch_example", fig=train_batch_example_fig, experiment=exp)
(call)|         1|      1.26605|      1.26605|  0.34%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_neptune.py:8 log_img_only
    66|         0|            0|            0|  0.00%|# print("GPU GB after train_loader ->",torch.cuda.memory_allocated()/1E9)
    67|         0|            0|            0|  0.00%|
    68|         0|            0|            0|  0.00%|# Make a batch of reference images by cropping the train_data at consecutive locations
    69|         1|  1.40667e-05|  1.40667e-05|  0.00%|reference_imgs_list = []
    70|         1|  1.04904e-05|  1.04904e-05|  0.00%|crop_size = params["input_image"]["size_raw_image"]
    71|         3|  2.07424e-05|  6.91414e-06|  0.00%|for ni in range(2):
    72|         2|  1.40667e-05|  7.03335e-06|  0.00%|    i = 1000 + ni * crop_size
    73|        10|  6.77109e-05|  6.77109e-06|  0.00%|    for nj in range(4):
    74|         8|  6.22272e-05|  7.77841e-06|  0.00%|        j = 2100 + nj * crop_size
    75|         8|  0.000164747|  2.05934e-05|  0.00%|        reference_imgs_list.append(img_torch[..., i:i+crop_size, j:j+crop_size])
    76|         1|  0.000226974|  0.000226974|  0.00%|reference_imgs = torch.cat(reference_imgs_list, dim=-4)
    77|         1|  4.72069e-05|  4.72069e-05|  0.00%|if torch.cuda.is_available():
(call)|         1|    0.0226848|    0.0226848|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torch/cuda/__init__.py:33 is_available
    78|         1|        1.663|        1.663|  0.45%|    reference_imgs = reference_imgs.cuda()
(call)|         1|   0.00144172|   0.00144172|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/cuda/__init__.py:124 _lazy_init
    79|         1|  7.31945e-05|  7.31945e-05|  0.00%|_ = show_batch(reference_imgs,
    80|         1|  1.14441e-05|  1.14441e-05|  0.00%|               n_padding=4,
    81|         1|  9.77516e-06|  9.77516e-06|  0.00%|               figsize=(12, 12),
    82|         1|  9.53674e-06|  9.53674e-06|  0.00%|               title="reference imgs",
    83|         1|  7.62939e-05|  7.62939e-05|  0.00%|               neptune_name="reference_imgs")
(call)|         1|      2.21938|      2.21938|  0.60%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_visualization.py:166 show_batch
    84|         0|            0|            0|  0.00%|
    85|         0|            0|            0|  0.00%|# Instantiate model, optimizer and checks
    86|         1|  7.00951e-05|  7.00951e-05|  0.00%|vae = CompositionalVae(params)
(call)|         1|     0.267935|     0.267935|  0.07%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/vae_model.py:112 __init__
    87|         1|  4.55379e-05|  4.55379e-05|  0.00%|log_model_summary(vae)
(call)|         1|     0.322665|     0.322665|  0.09%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_neptune.py:33 log_model_summary
    88|         1|  3.79086e-05|  3.79086e-05|  0.00%|optimizer = instantiate_optimizer(model=vae, dict_params_optimizer=params["optimizer"])
(call)|         1|    0.0285325|    0.0285325|  0.01%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/vae_model.py:70 instantiate_optimizer
    89|         0|            0|            0|  0.00%|# print("GPU GB after model and optimizer ->",torch.cuda.memory_allocated()/1E9)
    90|         0|            0|            0|  0.00%|
    91|         1|  8.58307e-05|  8.58307e-05|  0.00%|imgs_out = vae.inference_and_generator.unet.show_grid(reference_imgs)
(call)|         2|  9.32217e-05|  4.66108e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:580 __getattr__
(call)|         1|   0.00394106|   0.00394106|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/unet_model.py:108 show_grid
    92|         1|  8.86917e-05|  8.86917e-05|  0.00%|unet_grid_fig = show_batch(imgs_out[:, 0], normalize_range=(0.0, 1.0), neptune_name="unet_grid")
(call)|         1|      2.45366|      2.45366|  0.67%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_visualization.py:166 show_batch
    93|         0|            0|            0|  0.00%|
    94|         0|            0|            0|  0.00%|# Check the constraint dictionary
    95|         1|  5.45979e-05|  5.45979e-05|  0.00%|print("simulation type = "+str(params["simulation"]["type"]))
(call)|         2|   0.00151396|  0.000756979|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/streams/stdstream_uploader.py:30 write
    96|         0|            0|            0|  0.00%|
    97|         1|  1.28746e-05|  1.28746e-05|  0.00%|if params["simulation"]["type"] == "scratch":
    98|         0|            0|            0|  0.00%|
    99|         1|  9.29832e-06|  9.29832e-06|  0.00%|    epoch_restart = -1
   100|         1|  8.58307e-06|  8.58307e-06|  0.00%|    history_dict = {}
   101|         1|  8.58307e-06|  8.58307e-06|  0.00%|    min_test_loss = 99999999
   102|         0|            0|            0|  0.00%|
   103|         0|            0|            0|  0.00%|elif params["simulation"]["type"] == "resume":
   104|         0|            0|            0|  0.00%|
   105|         0|            0|            0|  0.00%|    ckpt = file2ckpt(path="ckpt.pt", device=None)
   106|         0|            0|            0|  0.00%|    # ckpt = file2ckpt(path="ckpt.pt", device='cpu')
   107|         0|            0|            0|  0.00%|
   108|         0|            0|            0|  0.00%|    load_from_ckpt(ckpt=ckpt,
   109|         0|            0|            0|  0.00%|                   model=vae,
   110|         0|            0|            0|  0.00%|                   optimizer=optimizer,
   111|         0|            0|            0|  0.00%|                   overwrite_member_var=True)
   112|         0|            0|            0|  0.00%|
   113|         0|            0|            0|  0.00%|    epoch_restart = ckpt.epoch
   114|         0|            0|            0|  0.00%|    history_dict = ckpt.history_dict
   115|         0|            0|            0|  0.00%|    min_test_loss = min(history_dict["test_loss"])
   116|         0|            0|            0|  0.00%|
   117|         0|            0|            0|  0.00%|elif params["simulation"]["type"] == "pretrained":
   118|         0|            0|            0|  0.00%|
   119|         0|            0|            0|  0.00%|    ckpt = file2ckpt(path="ckpt.pt", device=None)
   120|         0|            0|            0|  0.00%|
   121|         0|            0|            0|  0.00%|    load_from_ckpt(ckpt=ckpt,
   122|         0|            0|            0|  0.00%|                   model=vae,
   123|         0|            0|            0|  0.00%|                   optimizer=None,
   124|         0|            0|            0|  0.00%|                   overwrite_member_var=False)
   125|         0|            0|            0|  0.00%|
   126|         0|            0|            0|  0.00%|    epoch_restart = -1
   127|         0|            0|            0|  0.00%|    history_dict = {}
   128|         0|            0|            0|  0.00%|    min_test_loss = 99999999
   129|         0|            0|            0|  0.00%|
   130|         0|            0|            0|  0.00%|else:
   131|         0|            0|            0|  0.00%|    raise Exception("simulation type is NOT recognized")
   132|         0|            0|            0|  0.00%|
   133|         0|            0|            0|  0.00%|# instantiate the scheduler if necessary
   134|         1|  9.05991e-06|  9.05991e-06|  0.00%|if params["optimizer"]["scheduler_is_active"]:
   135|         1|  3.05176e-05|  3.05176e-05|  0.00%|    scheduler = instantiate_scheduler(optimizer=optimizer, dict_params_scheduler=params["optimizer"])
(call)|         1|  0.000860214|  0.000860214|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/vae_model.py:98 instantiate_scheduler
   136|         0|            0|            0|  0.00%|
   137|         0|            0|            0|  0.00%|
   138|         1|  1.40667e-05|  1.40667e-05|  0.00%|TEST_FREQUENCY = params["simulation"]["TEST_FREQUENCY"]
   139|         1|  9.53674e-06|  9.53674e-06|  0.00%|CHECKPOINT_FREQUENCY = params["simulation"]["CHECKPOINT_FREQUENCY"]
   140|         1|  8.82149e-06|  8.82149e-06|  0.00%|NUM_EPOCHS = params["simulation"]["MAX_EPOCHS"]
   141|         1|  2.76566e-05|  2.76566e-05|  0.00%|torch.cuda.empty_cache()
(call)|         1|  6.36578e-05|  6.36578e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/cuda/memory.py:74 empty_cache
   142|         6|  7.12872e-05|  1.18812e-05|  0.00%|for delta_epoch in range(1, NUM_EPOCHS+1):
   143|         5|  5.34058e-05|  1.06812e-05|  0.00%|    epoch = delta_epoch+epoch_restart
   144|         0|            0|            0|  0.00%|
   145|         5|  4.86374e-05|  9.72748e-06|  0.00%|    vae.prob_corr_factor = linear_interpolation(epoch,
   146|         5|  3.50475e-05|  7.00951e-06|  0.00%|                                                values=params["shortcut_prob_corr_factor"]["values"],
   147|         5|  0.000252962|  5.05924e-05|  0.00%|                                                times=params["shortcut_prob_corr_factor"]["times"])
(call)|         5|   0.00389075|  0.000778151|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities.py:11 linear_interpolation
(call)|         5|  0.000351191|  7.02381e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
   148|         5|   0.00014019|   2.8038e-05|  0.00%|    exp.log_metric("prob_corr_factor", vae.prob_corr_factor)
(call)|         5|     0.271663|    0.0543325|  0.07%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/experiments.py:302 log_metric
   149|         0|            0|            0|  0.00%|
   150|         5|  0.000197172|  3.94344e-05|  0.00%|    with torch.autograd.set_detect_anomaly(False):
(call)|         5|  0.000106812|  2.13623e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/anomaly_mode.py:97 __init__
(call)|         5|  4.79221e-05|  9.58443e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/anomaly_mode.py:101 __enter__
   151|         5|   0.00011754|  2.35081e-05|  0.00%|        with torch.enable_grad():
(call)|         5|  8.60691e-05|  1.72138e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/grad_mode.py:105 __enter__
   152|         5|  0.000145674|  2.91348e-05|  0.00%|            vae.train()
(call)|         5|     0.123482|    0.0246965|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:1055 train
   153|         5|  4.31538e-05|  8.63075e-06|  0.00%|            train_metrics = process_one_epoch(model=vae,
   154|         5|  3.57628e-05|  7.15256e-06|  0.00%|                                              dataloader=train_loader,
   155|         5|  3.19481e-05|  6.38962e-06|  0.00%|                                              optimizer=optimizer,
   156|         5|  3.09944e-05|  6.19888e-06|  0.00%|                                              verbose=(epoch == 0),
   157|         5|  3.17097e-05|  6.34193e-06|  0.00%|                                              weight_clipper=None,
   158|         5|  4.55379e-05|  9.10759e-06|  0.00%|                                              neptune_experiment=exp,
   159|         5|   0.00223494|  0.000446987|  0.00%|                                              neptune_prefix="train_")
(call)|         5|      53.2611|      10.6522| 14.49%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:385 process_one_epoch
   160|         5|  0.000440359|  8.80718e-05|  0.00%|            print("Train " + train_metrics.pretty_print(epoch))
(call)|         5|  0.000420809|  8.41618e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/namedtuple.py:311 pretty_print
(call)|        10|   0.00929427|  0.000929427|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/streams/stdstream_uploader.py:30 write
   161|         0|            0|            0|  0.00%|
   162|         5|  4.95911e-05|  9.91821e-06|  0.00%|            if params["optimizer"]["scheduler_is_active"]:
   163|         5|   0.00013876|  2.77519e-05|  0.00%|                scheduler.step()
(call)|         5|   0.00150728|  0.000301456|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/optim/lr_scheduler.py:106 step
   164|         0|            0|            0|  0.00%|
   165|         5|  0.000119686|  2.39372e-05|  0.00%|            with torch.no_grad():
(call)|         5|  8.91685e-05|  1.78337e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/grad_mode.py:65 __enter__
   166|         0|            0|            0|  0.00%|
   167|         5|  3.40939e-05|  6.81877e-06|  0.00%|                history_dict = append_to_dict(source=train_metrics,
   168|         5|  3.48091e-05|  6.96182e-06|  0.00%|                                              destination=history_dict,
   169|         5|  3.17097e-05|  6.34193e-06|  0.00%|                                              prefix_exclude="wrong_examples",
   170|         5|  0.000129223|  2.58446e-05|  0.00%|                                              prefix_to_add="train_")
(call)|         5|   0.00650167|   0.00130033|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities.py:92 append_to_dict
   171|         0|            0|            0|  0.00%|
   172|         5|  0.000202179|  4.04358e-05|  0.00%|                if (epoch % TEST_FREQUENCY) == 0:
(call)|         4|   0.00014019|  3.50475e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/grad_mode.py:69 __exit__
(call)|         4|  0.000125885|  3.14713e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/grad_mode.py:109 __exit__
(call)|         4|  7.00951e-05|  1.75238e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/anomaly_mode.py:104 __exit__
   173|         0|            0|            0|  0.00%|
   174|         1|   3.8147e-05|   3.8147e-05|  0.00%|                    vae.eval()
(call)|         1|     0.019769|     0.019769|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:1075 eval
   175|         1|  9.29832e-06|  9.29832e-06|  0.00%|                    test_metrics = process_one_epoch(model=vae,
   176|         1|  8.58307e-06|  8.58307e-06|  0.00%|                                                     dataloader=test_loader,
   177|         1|  8.10623e-06|  8.10623e-06|  0.00%|                                                     optimizer=optimizer,
   178|         1|  8.10623e-06|  8.10623e-06|  0.00%|                                                     verbose=(epoch == 0),
   179|         1|  8.10623e-06|  8.10623e-06|  0.00%|                                                     weight_clipper=None,
   180|         1|  8.34465e-06|  8.34465e-06|  0.00%|                                                     neptune_experiment=exp,
   181|         1|  9.34601e-05|  9.34601e-05|  0.00%|                                                     neptune_prefix="test_")
(call)|         1|      5.06771|      5.06771|  1.38%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_ml.py:385 process_one_epoch
   182|         1|  8.05855e-05|  8.05855e-05|  0.00%|                    print("Test  "+test_metrics.pretty_print(epoch))
(call)|         1|  9.03606e-05|  9.03606e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/namedtuple.py:311 pretty_print
(call)|         2|   0.00153232|  0.000766158|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/streams/stdstream_uploader.py:30 write
   183|         1|  2.52724e-05|  2.52724e-05|  0.00%|                    history_dict = append_to_dict(source=test_metrics,
   184|         1|  9.77516e-06|  9.77516e-06|  0.00%|                                                  destination=history_dict,
   185|         1|  8.10623e-06|  8.10623e-06|  0.00%|                                                  prefix_exclude="wrong_examples",
   186|         1|  3.21865e-05|  3.21865e-05|  0.00%|                                                  prefix_to_add="test_")
(call)|         1|   0.00126338|   0.00126338|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities.py:92 append_to_dict
   187|         0|            0|            0|  0.00%|
   188|         1|    5.126e-05|    5.126e-05|  0.00%|                    output: Output = vae.forward(reference_imgs, draw_image=True, draw_boxes=True, verbose=False)
(call)|         1|     0.241299|     0.241299|  0.07%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/vae_model.py:632 forward
   189|         1|  4.55379e-05|  4.55379e-05|  0.00%|                    plot_reconstruction_and_inference(output, epoch=epoch, prefix="rec_")
(call)|         1|      6.27156|      6.27156|  1.71%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_visualization.py:515 plot_reconstruction_and_inference
   190|         1|  0.000234127|  0.000234127|  0.00%|                    reference_n_cells = (output.inference.sample_prob > 0.5).sum().item()
(call)|         1|    0.0010519|    0.0010519|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/tensor.py:25 wrapped
   191|         1|   2.0504e-05|   2.0504e-05|  0.00%|                    tmp_dict = {"reference_n_cells" : reference_n_cells}
   192|         1|  4.05312e-05|  4.05312e-05|  0.00%|                    log_dict_metrics(tmp_dict)
(call)|         1|     0.233674|     0.233674|  0.06%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_neptune.py:81 log_dict_metrics
   193|         1|  1.07288e-05|  1.07288e-05|  0.00%|                    history_dict = append_to_dict(source=tmp_dict,
   194|         1|  2.88486e-05|  2.88486e-05|  0.00%|                                                  destination=history_dict)
(call)|         1|  0.000124454|  0.000124454|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities.py:92 append_to_dict
   195|         0|            0|            0|  0.00%|
   196|         1|  8.36849e-05|  8.36849e-05|  0.00%|                    segmentation: Segmentation = vae.segment(batch_imgs=reference_imgs)
(call)|         1|      0.10323|      0.10323|  0.03%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/vae_model.py:347 segment
   197|         1|  4.88758e-05|  4.88758e-05|  0.00%|                    plot_segmentation(segmentation, epoch=epoch, prefix="seg_")
(call)|         1|       4.3858|       4.3858|  1.19%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_visualization.py:544 plot_segmentation
   198|         0|            0|            0|  0.00%|
   199|         1|  5.74589e-05|  5.74589e-05|  0.00%|                    generated: Output = vae.generate(imgs_in=reference_imgs, draw_boxes=True)
(call)|         1|     0.305586|     0.305586|  0.08%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/vae_model.py:654 generate
   200|         1|  4.43459e-05|  4.43459e-05|  0.00%|                    plot_reconstruction_and_inference(generated, epoch=epoch, prefix="gen_")
(call)|         1|      6.42181|      6.42181|  1.75%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_visualization.py:515 plot_reconstruction_and_inference
   201|         0|            0|            0|  0.00%|
   202|         1|  1.66893e-05|  1.66893e-05|  0.00%|                    test_loss = test_metrics.loss
   203|         1|  1.14441e-05|  1.14441e-05|  0.00%|                    min_test_loss = min(min_test_loss, test_loss)
   204|         0|            0|            0|  0.00%|
   205|         1|  8.58307e-06|  8.58307e-06|  0.00%|                    if (test_loss == min_test_loss) or (epoch % CHECKPOINT_FREQUENCY == 0):
   206|         1|  8.82149e-06|  8.82149e-06|  0.00%|                        ckpt = create_ckpt(model=vae,
   207|         1|  8.10623e-06|  8.10623e-06|  0.00%|                                           optimizer=None,
   208|         1|  2.40803e-05|  2.40803e-05|  0.00%|                                           epoch=epoch,
   209|         1|  8.82149e-06|  8.82149e-06|  0.00%|                                           hyperparams_dict=params,
   210|         1|  3.24249e-05|  3.24249e-05|  0.00%|                                           history_dict=history_dict)
(call)|         1|    0.0105813|    0.0105813|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/vae_model.py:9 create_ckpt
   211|         1|  4.62532e-05|  4.62532e-05|  0.00%|                        log_object_as_artifact(name="last_ckpt", obj=ckpt)  # log file into neptune
(call)|         1|      23.3908|      23.3908|  6.36%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_neptune.py:50 log_object_as_artifact
   212|         1|  1.04904e-05|  1.04904e-05|  0.00%|                        plot_all_from_dictionary(history_dict,
   213|         1|  9.29832e-06|  9.29832e-06|  0.00%|                                                 params,
   214|         1|  8.34465e-06|  8.34465e-06|  0.00%|                                                 test_frequency=TEST_FREQUENCY,
   215|         1|  8.34465e-06|  8.34465e-06|  0.00%|                                                 train_or_test="test",
   216|         1|  4.72069e-05|  4.72069e-05|  0.00%|                                                 verbose=True)
(call)|         1|       107.11|       107.11| 29.13%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_visualization.py:494 plot_all_from_dictionary
   217|         1|  1.28746e-05|  1.28746e-05|  0.00%|                        plot_all_from_dictionary(history_dict,
   218|         1|  1.57356e-05|  1.57356e-05|  0.00%|                                                 params,
   219|         1|  1.50204e-05|  1.50204e-05|  0.00%|                                                 test_frequency=TEST_FREQUENCY,
   220|         1|  1.52588e-05|  1.52588e-05|  0.00%|                                                 train_or_test="train",
   221|         1|   9.9659e-05|   9.9659e-05|  0.00%|                                                 verbose=True)
(call)|         1|      95.9716|      95.9716| 26.10%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_visualization.py:494 plot_all_from_dictionary
(call)|         1|  0.000109196|  0.000109196|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/grad_mode.py:69 __exit__
(call)|         1|  3.98159e-05|  3.98159e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/grad_mode.py:109 __exit__
(call)|         1|  2.07424e-05|  2.07424e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/anomaly_mode.py:104 __exit__
   222|         0|            0|            0|  0.00%|
   223|         0|            0|            0|  0.00%|##### # Check segmentation WITH and WITHOUT tiling
   224|         0|            0|            0|  0.00%|####img_to_segment = train_loader.img[0, :, 1000:1300, 2100:2400]
   225|         0|            0|            0|  0.00%|####roi_mask_to_segment = train_loader.roi_mask[0, :, 1000:1300, 2100:2400]
   226|         0|            0|            0|  0.00%|####
   227|         0|            0|            0|  0.00%|##### check simple segmentation
   228|         0|            0|            0|  0.00%|####crop_size = params["input_image"]["size_raw_image"]
   229|         0|            0|            0|  0.00%|####small_img_to_segment = img_to_segment[None, ..., :crop_size, :crop_size]
   230|         0|            0|            0|  0.00%|####if torch.cuda.is_available():
   231|         0|            0|            0|  0.00%|####    small_img_to_segment = small_img_to_segment.cuda()
   232|         0|            0|            0|  0.00%|####segmentation: Segmentation = vae.segment(batch_imgs=small_img_to_segment)
   233|         0|            0|            0|  0.00%|####plot_segmentation(segmentation, epoch="", prefix="seg_", postfix="_tiling")
   234|         0|            0|            0|  0.00%|####
   235|         0|            0|            0|  0.00%|##### tiling segmentation
   236|         0|            0|            0|  0.00%|####tiling: Segmentation = vae.segment_with_tiling(single_img=img_to_segment,
   237|         0|            0|            0|  0.00%|####                                               roi_mask=roi_mask_to_segment,
   238|         0|            0|            0|  0.00%|####                                               crop_size=None,
   239|         0|            0|            0|  0.00%|####                                               stride=(40, 40),
   240|         0|            0|            0|  0.00%|####                                               n_objects_max_per_patch=None,
   241|         0|            0|            0|  0.00%|####                                               prob_corr_factor=None,
   242|         0|            0|            0|  0.00%|####                                               overlap_threshold=None,
   243|         0|            0|            0|  0.00%|####                                               radius_nn=10,
   244|         0|            0|            0|  0.00%|####                                               batch_size=64)
   245|         0|            0|            0|  0.00%|####log_object_as_artifact(name="tiling", obj=tiling, verbose=True)
   246|         0|            0|            0|  0.00%|####tiling_fig = plot_tiling(tiling, neptune_name="tiling_before_graph")
   247|         0|            0|            0|  0.00%|####
   248|         0|            0|            0|  0.00%|##### perform graph analysis
   249|         0|            0|            0|  0.00%|####g = GraphSegmentation(tiling, min_fg_prob=0.1, min_edge_weight=0.01, normalize_graph_edges=True)
   250|         0|            0|            0|  0.00%|####partition = g.find_partition_leiden(resolution=1.0,
   251|         0|            0|            0|  0.00%|####                                    window=None,
   252|         0|            0|            0|  0.00%|####                                    min_size=30,
   253|         0|            0|            0|  0.00%|####                                    cpm_or_modularity="modularity",
   254|         0|            0|            0|  0.00%|####                                    each_cc_separately=False,
   255|         0|            0|            0|  0.00%|####                                    n_iterations=10,
   256|         0|            0|            0|  0.00%|####                                    initial_membership=None)
   257|         0|            0|            0|  0.00%|####g.plot_partition(partition, neptune_name="tiling_after_graph")
   258|         0|            0|            0|  0.00%|####
   259|         0|            0|            0|  0.00%|####label = g.partition_2_label(partition)
   260|         0|            0|            0|  0.00%|####try:
   261|         0|            0|            0|  0.00%|####    label_after_QC = g.QC_on_label(label, min_area=30)
   262|         0|            0|            0|  0.00%|####except:
   263|         0|            0|            0|  0.00%|####    label_after_QC = label
   264|         0|            0|            0|  0.00%|####
   265|         0|            0|            0|  0.00%|####plot_label_contours(label=tiling.integer_mask[0, 0],
   266|         0|            0|            0|  0.00%|####                    image=tiling.raw_image[0, 0],
   267|         0|            0|            0|  0.00%|####                    contour_thickness=2,
   268|         0|            0|            0|  0.00%|####                    neptune_name="tiling_contours_based_on_sample")
   269|         0|            0|            0|  0.00%|####
   270|         0|            0|            0|  0.00%|####plot_label_contours(label=label_after_QC,
   271|         0|            0|            0|  0.00%|####                    image=tiling.raw_image[0, 0],
   272|         0|            0|            0|  0.00%|####                    contour_thickness=2,
   273|         0|            0|            0|  0.00%|####                    neptune_name="tiling_contours_based_on_graph")
   274|         0|            0|            0|  0.00%|####
   275|         1|  4.45843e-05|  4.45843e-05|  0.00%|exp.stop()
(call)|         1|     0.692054|     0.692054|  0.19%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/experiments.py:1048 stop
File: <__array_function__ internals>_7
File duration: 0.668303s (0.18%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|     14419|    0.0438883|  3.04378e-06|  0.01%|
(call)|         1|  1.12057e-05|  1.12057e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000130177|  0.000130177|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|     14417|     0.166452|  1.15455e-05|  0.05%|
(call)|     14417|     0.097924|  6.79226e-06|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/multiarray.py:706 dot
     5|     14417|    0.0541666|  3.75713e-06|  0.01%|
     6|     14417|     0.403796|  2.80083e-05|  0.11%|
File: <__array_function__ internals>_46
File duration: 0.307957s (0.08%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|      9892|    0.0291381|  2.94562e-06|  0.01%|
(call)|         1|  1.04904e-05|  1.04904e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000100374|  0.000100374|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|      9890|     0.115813|  1.17102e-05|  0.03%|
(call)|      9890|    0.0662184|  6.69549e-06|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/fromnumeric.py:2245 _any_dispatcher
     5|      9890|    0.0366199|  3.70272e-06|  0.01%|
     6|      9890|     0.126386|  1.27792e-05|  0.03%|
(call)|      9890|     0.879826|  8.89611e-05|  0.24%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/fromnumeric.py:2249 any
File: /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_visualization.py
File duration: 0.258108s (0.07%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  6.27041e-05|   3.1352e-05|  0.00%|import PIL.Image
     2|         1|  7.29561e-05|  7.29561e-05|  0.00%|import PIL.ImageDraw
(call)|         1|   0.00786638|   0.00786638|  0.00%|# <frozen importlib._bootstrap>:978 _find_and_load
     3|         1|  5.48363e-05|  5.48363e-05|  0.00%|import torch
     4|         1|  3.60012e-05|  3.60012e-05|  0.00%|import numpy
     5|         1|  5.24521e-05|  5.24521e-05|  0.00%|from typing import Tuple, Optional, Union
(call)|         1|  4.95911e-05|  4.95911e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
     6|         1|  0.000151873|  0.000151873|  0.00%|from torchvision import utils
(call)|         1|      4.42995|      4.42995|  1.20%|# <frozen importlib._bootstrap>:978 _find_and_load
(call)|         1|  4.55379e-05|  4.55379e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
     7|         1|  5.60284e-05|  5.60284e-05|  0.00%|from matplotlib import pyplot as plt
(call)|         1|  4.24385e-05|  4.24385e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
     8|         1|  2.40803e-05|  2.40803e-05|  0.00%|import skimage.color
     9|         1|  0.000119209|  0.000119209|  0.00%|import skimage.morphology
(call)|         1|       5.8632|       5.8632|  1.59%|# <frozen importlib._bootstrap>:978 _find_and_load
    10|         1|  2.21729e-05|  2.21729e-05|  0.00%|import neptune
    11|         0|            0|            0|  0.00%|
    12|         1|  8.08239e-05|  8.08239e-05|  0.00%|from .namedtuple import BB, Output, Segmentation
(call)|         1|  2.57492e-05|  2.57492e-05|  0.00%|# <frozen importlib._bootstrap>:416 parent
(call)|         1|  2.26498e-05|  2.26498e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
    13|         1|  7.93934e-05|  7.93934e-05|  0.00%|from .utilities_neptune import log_img_and_chart, log_img_only
(call)|         1|  1.74046e-05|  1.74046e-05|  0.00%|# <frozen importlib._bootstrap>:416 parent
(call)|         1|   2.0504e-05|   2.0504e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
    14|         0|            0|            0|  0.00%|
    15|         0|            0|            0|  0.00%|
    16|         0|            0|            0|  0.00%|def contours_from_labels(labels: numpy.ndarray,
    17|         1|  1.97887e-05|  1.97887e-05|  0.00%|                         contour_thickness: int = 1) -> numpy.ndarray:
    18|         0|            0|            0|  0.00%|    assert len(labels.shape) == 2
    19|         0|            0|            0|  0.00%|    assert contour_thickness >= 1
    20|         0|            0|            0|  0.00%|    contours = (skimage.morphology.dilation(labels) != labels)
    21|         0|            0|            0|  0.00%|
    22|         0|            0|            0|  0.00%|    for i in range(1, contour_thickness):
    23|         0|            0|            0|  0.00%|        contours = skimage.morphology.binary_dilation(contours)
    24|         0|            0|            0|  0.00%|    return contours
    25|         0|            0|            0|  0.00%|
    26|         0|            0|            0|  0.00%|
    27|         1|  1.90735e-05|  1.90735e-05|  0.00%|def add_red_contours(image: numpy.ndarray, contours: numpy.ndarray) -> numpy.ndarray:
    28|         0|            0|            0|  0.00%|    assert contours.dtype == bool
    29|         0|            0|            0|  0.00%|    if (len(image.shape) == 3) and (image.shape[-1] == 3):
    30|         0|            0|            0|  0.00%|        image_with_contours = image
    31|         0|            0|            0|  0.00%|    elif len(image.shape) == 2:
    32|         0|            0|            0|  0.00%|        image_with_contours = skimage.color.gray2rgb(image)
    33|         0|            0|            0|  0.00%|    else:
    34|         0|            0|            0|  0.00%|        raise Exception
    35|         0|            0|            0|  0.00%|    image_with_contours[contours, 0] = 1
    36|         0|            0|            0|  0.00%|    image_with_contours[contours, 1:] = 0
    37|         0|            0|            0|  0.00%|    return image_with_contours
    38|         0|            0|            0|  0.00%|
    39|         0|            0|            0|  0.00%|
    40|         0|            0|            0|  0.00%|def plot_label_contours(label: Union[torch.Tensor, numpy.ndarray],
    41|         0|            0|            0|  0.00%|                        image: Union[torch.Tensor, numpy.ndarray],
    42|         0|            0|            0|  0.00%|                        contour_thickness: int = 2,
    43|         0|            0|            0|  0.00%|                        figsize: tuple = (24, 24),
    44|         0|            0|            0|  0.00%|                        experiment: Optional[neptune.experiments.Experiment] = None,
    45|         1|  0.000122786|  0.000122786|  0.00%|                        neptune_name: Optional[str] = None):
(call)|         4|  0.000809193|  0.000202298|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
    46|         0|            0|            0|  0.00%|
    47|         0|            0|            0|  0.00%|    assert len(label.shape) == 2
    48|         0|            0|            0|  0.00%|    if torch.is_tensor(label):
    49|         0|            0|            0|  0.00%|        label = label.cpu().numpy()
    50|         0|            0|            0|  0.00%|
    51|         0|            0|            0|  0.00%|    if torch.is_tensor(image):
    52|         0|            0|            0|  0.00%|        if len(image.shape) == 3:
    53|         0|            0|            0|  0.00%|            image = image.permute(1, 2, 0).cpu().numpy()
    54|         0|            0|            0|  0.00%|        else:
    55|         0|            0|            0|  0.00%|            image = image.cpu().numpy()
    56|         0|            0|            0|  0.00%|    if len(image.shape) == 3 and (image.shape[-1] != 3):
    57|         0|            0|            0|  0.00%|        image = image[..., 0]
    58|         0|            0|            0|  0.00%|
    59|         0|            0|            0|  0.00%|    assert image.shape[:2] == label.shape[:2]
    60|         0|            0|            0|  0.00%|
    61|         0|            0|            0|  0.00%|    contours = contours_from_labels(label, contour_thickness)
    62|         0|            0|            0|  0.00%|    fig, ax = plt.subplots(ncols=3, figsize=figsize)
    63|         0|            0|            0|  0.00%|    ax[0].imshow(image)
    64|         0|            0|            0|  0.00%|    ax[1].imshow(add_red_contours(image, contours))
    65|         0|            0|            0|  0.00%|    ax[2].imshow(label, cmap='gray')
    66|         0|            0|            0|  0.00%|
    67|         0|            0|            0|  0.00%|    fig.tight_layout()
    68|         0|            0|            0|  0.00%|    if neptune_name is not None:
    69|         0|            0|            0|  0.00%|        #log_img_and_chart(name=neptune_name, fig=fig, experiment=experiment)
    70|         0|            0|            0|  0.00%|        log_img_only(name=neptune_name, fig=fig, experiment=experiment)
    71|         0|            0|            0|  0.00%|    plt.close(fig)
    72|         0|            0|            0|  0.00%|    return fig
    73|         0|            0|            0|  0.00%|
    74|         0|            0|            0|  0.00%|
    75|         3|  3.33786e-05|  1.11262e-05|  0.00%|def draw_img(prob: torch.tensor,
    76|         1|  1.74046e-05|  1.74046e-05|  0.00%|             bounding_box: BB,
    77|         1|  3.67165e-05|  3.67165e-05|  0.00%|             big_mask: torch.tensor,
    78|         1|   1.7643e-05|   1.7643e-05|  0.00%|             big_img: torch.tensor,
    79|         1|  1.71661e-05|  1.71661e-05|  0.00%|             big_bg: torch.tensor,
    80|         1|  1.74046e-05|  1.74046e-05|  0.00%|             draw_bg: bool,
    81|         1|  1.78814e-05|  1.78814e-05|  0.00%|             draw_boxes: bool) -> torch.tensor:
    82|         2|  2.71797e-05|  1.35899e-05|  0.00%|    assert len(prob.shape) == 2  # boxes, batch
    83|         2|  1.62125e-05|  8.10623e-06|  0.00%|    assert len(big_mask.shape) == len(big_img.shape) == 5  # boxes, batch, ch, w, h
    84|         0|            0|            0|  0.00%|
    85|         2|  0.000214577|  0.000107288|  0.00%|    rec_imgs_no_bb = (prob[..., None, None, None] * big_mask * big_img).sum(dim=-5)  # sum over boxes
    86|         2|  0.000134945|  6.74725e-05|  0.00%|    fg_mask = (prob[..., None, None, None] * big_mask).sum(dim=-5)  # sum over boxes
    87|         2|   7.9155e-05|  3.95775e-05|  0.00%|    background = (1 - fg_mask) * big_bg if draw_bg else torch.zeros_like(big_bg)
    88|         0|            0|            0|  0.00%|
    89|         2|   2.6226e-05|   1.3113e-05|  0.00%|    width, height = rec_imgs_no_bb.shape[-2:]
    90|         0|            0|            0|  0.00%|
    91|         0|            0|            0|  0.00%|    bounding_boxes = draw_bounding_boxes(prob=prob,
    92|         0|            0|            0|  0.00%|                                         bounding_box=bounding_box,
    93|         0|            0|            0|  0.00%|                                         width=width,
    94|         2|  0.000155449|  7.77245e-05|  0.00%|                                         height=height) if draw_boxes else torch.zeros_like(rec_imgs_no_bb)
(call)|         2|     0.302809|     0.151404|  0.08%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_visualization.py:100 draw_bounding_boxes
(call)|         2|   6.4373e-05|  3.21865e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/PIL/Image.py:629 __del__
    95|         2|  0.000181198|  9.05991e-05|  0.00%|    mask_no_bb = (torch.sum(bounding_boxes, dim=-3, keepdim=True) == 0)
(call)|         2|  0.000147581|  7.37906e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/tensor.py:25 wrapped
    96|         0|            0|            0|  0.00%|
    97|         2|  0.000388384|  0.000194192|  0.00%|    return mask_no_bb * (rec_imgs_no_bb + background) + ~mask_no_bb * bounding_boxes
    98|         0|            0|            0|  0.00%|
    99|         0|            0|            0|  0.00%|
   100|         3|  6.86646e-05|  2.28882e-05|  0.00%|def draw_bounding_boxes(prob: Optional[torch.Tensor], bounding_box: BB, width: int, height: int) -> torch.Tensor:
(call)|         1|  3.05176e-05|  3.05176e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
   101|         0|            0|            0|  0.00%|    # set all prob to one if they are not passed as input
   102|         2|  1.45435e-05|  7.27177e-06|  0.00%|    if prob is None:
   103|         0|            0|            0|  0.00%|        prob = torch.ones_like(bounding_box.bx)
   104|         0|            0|            0|  0.00%|
   105|         0|            0|            0|  0.00%|    # checks
   106|         2|   1.5974e-05|  7.98702e-06|  0.00%|    assert prob.shape == bounding_box.bx.shape
   107|         2|   1.4782e-05|  7.39098e-06|  0.00%|    assert len(bounding_box.bx.shape) == 2
   108|         2|  1.35899e-05|  6.79493e-06|  0.00%|    n_boxes, batch_size = bounding_box.bx.shape
   109|         0|            0|            0|  0.00%|
   110|         0|            0|            0|  0.00%|    # prepare the storage
   111|         2|  0.000445604|  0.000222802|  0.00%|    batch_bb_np = numpy.zeros((batch_size, width, height, 3))  # numpy storage for bounding box images
   112|         0|            0|            0|  0.00%|
   113|         0|            0|            0|  0.00%|    # compute the coordinates of the bounding boxes and the probability of each box
   114|         2|   0.00013876|  6.93798e-05|  0.00%|    x1 = bounding_box.bx - 0.5 * bounding_box.bw
   115|         2|   0.00014019|  7.00951e-05|  0.00%|    x3 = bounding_box.bx + 0.5 * bounding_box.bw
   116|         2|  0.000100613|  5.03063e-05|  0.00%|    y1 = bounding_box.by - 0.5 * bounding_box.bh
   117|         2|  9.70364e-05|  4.85182e-05|  0.00%|    y3 = bounding_box.by + 0.5 * bounding_box.bh
   118|         2|  2.52724e-05|  1.26362e-05|  0.00%|    assert x1.shape == x3.shape == y1.shape == y3.shape  # n_boxes, batch_size
   119|         2|  0.000203848|  0.000101924|  0.00%|    x1y1x3y3 = torch.stack((x1, y1, x3, y3), dim=-1)
   120|         0|            0|            0|  0.00%|
   121|         0|            0|            0|  0.00%|    # draw the bounding boxes
   122|        18|  0.000278234|  1.54575e-05|  0.00%|    for batch in range(batch_size):
   123|         0|            0|            0|  0.00%|
   124|         0|            0|            0|  0.00%|        # Draw on PIL
   125|        16|  0.000478029|  2.98768e-05|  0.00%|        img = PIL.Image.new('RGB', (width, height), color=0)
(call)|        16|   0.00381994|  0.000238746|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/PIL/Image.py:2469 new
(call)|        16|  0.000401258|  2.50787e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/PIL/Image.py:629 __del__
   126|        16|  0.000257969|  1.61231e-05|  0.00%|        draw = PIL.ImageDraw.Draw(img)
(call)|        16|   0.00227928|  0.000142455|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/PIL/ImageDraw.py:454 Draw
   127|       416|   0.00265622|  6.38515e-06|  0.00%|        for box in range(n_boxes):
   128|       400|    0.0305505|  7.63762e-05|  0.01%|            if prob[box, batch] > 0.5:
(call)|       400|    0.0263925|  6.59811e-05|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torch/tensor.py:25 wrapped
   129|         0|            0|            0|  0.00%|            # if prob[box, batch] > -1:
   130|       200|    0.0161586|  8.07929e-05|  0.00%|                draw.rectangle(x1y1x3y3[box, batch, :].cpu().numpy(), outline='red', fill=None)
(call)|       200|    0.0528226|  0.000264113|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/PIL/ImageDraw.py:245 rectangle
   131|        16|     0.163679|      0.01023|  0.04%|        batch_bb_np[batch, ...] = numpy.array(img.getdata(), numpy.uint8).reshape((width, height, 3))
(call)|        16|  0.000733614|  4.58509e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/PIL/Image.py:1286 getdata
   132|         0|            0|            0|  0.00%|
   133|         0|            0|            0|  0.00%|    # Transform np to torch, rescale from [0,255] to (0,1)
   134|         2|  0.000682116|  0.000341058|  0.00%|    batch_bb_torch = torch.from_numpy(batch_bb_np).permute(0, 3, 2, 1).float() / 255  # permute(0,3,2,1) is CORRECT
   135|         2|  0.000387192|  0.000193596|  0.00%|    return batch_bb_torch.to(bounding_box.bx.device)
   136|         0|            0|            0|  0.00%|
   137|         0|            0|            0|  0.00%|
   138|         0|            0|            0|  0.00%|def plot_grid(img,
   139|         0|            0|            0|  0.00%|              figsize: Optional[Tuple[float, float]] = None,
   140|         0|            0|            0|  0.00%|              experiment: Optional[neptune.experiments.Experiment] = None,
   141|         1|  0.000134706|  0.000134706|  0.00%|              neptune_name: Optional[str] = None):
(call)|         1|  0.000646353|  0.000646353|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:746 __getitem__
(call)|         3|   0.00112319|  0.000374397|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
   142|         0|            0|            0|  0.00%|
   143|         0|            0|            0|  0.00%|    assert len(img.shape) == 3
   144|         0|            0|            0|  0.00%|    n_max = img.shape[-3]
   145|         0|            0|            0|  0.00%|
   146|         0|            0|            0|  0.00%|    row_max = n_max // 4
   147|         0|            0|            0|  0.00%|    if row_max <= 1:
   148|         0|            0|            0|  0.00%|        fig, axes = plt.subplots(ncols=n_max, figsize=figsize)
   149|         0|            0|            0|  0.00%|        for n in range(n_max):
   150|         0|            0|            0|  0.00%|            axes[n].imshow(img[n])
   151|         0|            0|            0|  0.00%|    else:
   152|         0|            0|            0|  0.00%|        fig, axes = plt.subplots(ncols=4, nrows=row_max, figsize=figsize)
   153|         0|            0|            0|  0.00%|        for n in range(4 * row_max):
   154|         0|            0|            0|  0.00%|            row = n // 4
   155|         0|            0|            0|  0.00%|            col = n % 4
   156|         0|            0|            0|  0.00%|            axes[row, col].imshow(img[n])
   157|         0|            0|            0|  0.00%|
   158|         0|            0|            0|  0.00%|    fig.tight_layout()
   159|         0|            0|            0|  0.00%|    if neptune_name is not None:
   160|         0|            0|            0|  0.00%|        #log_img_and_chart(name=neptune_name, fig=fig, experiment=experiment)
   161|         0|            0|            0|  0.00%|        log_img_only(name=neptune_name, fig=fig, experiment=experiment)
   162|         0|            0|            0|  0.00%|    plt.close(fig)
   163|         0|            0|            0|  0.00%|    return fig
   164|         0|            0|            0|  0.00%|
   165|         0|            0|            0|  0.00%|
   166|        12|  9.44138e-05|  7.86781e-06|  0.00%|def show_batch(images: torch.Tensor,
   167|         0|            0|            0|  0.00%|               n_col: int = 4,
   168|         0|            0|            0|  0.00%|               n_padding: int = 10,
   169|         0|            0|            0|  0.00%|               title: Optional[str] = None,
   170|         0|            0|            0|  0.00%|               pad_value: int = 1,
   171|         0|            0|            0|  0.00%|               normalize_range: Optional[tuple] = None,
   172|         0|            0|            0|  0.00%|               figsize: Optional[Tuple[float, float]] = None,
   173|         0|            0|            0|  0.00%|               experiment: Optional[neptune.experiments.Experiment] = None,
   174|         1|  0.000218868|  0.000218868|  0.00%|               neptune_name: Optional[str] = None):
(call)|         5|    0.0009377|   0.00018754|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
(call)|         1|  6.62804e-05|  6.62804e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:746 __getitem__
   175|         0|            0|            0|  0.00%|
   176|         0|            0|            0|  0.00%|    """Visualize a torch tensor of shape: (batch x ch x width x height) """
   177|        12|  0.000140429|  1.17024e-05|  0.00%|    assert len(images.shape) == 4  # batch, ch, width, height
   178|        12|  0.000143051|  1.19209e-05|  0.00%|    if images.device != "cpu":
   179|        12|    0.0251102|   0.00209252|  0.01%|        images = images.cpu()
   180|        12|  0.000133753|  1.11461e-05|  0.00%|    if normalize_range is None:
   181|        11|  0.000362158|  3.29234e-05|  0.00%|        grid = utils.make_grid(images, n_col, n_padding, normalize=False, pad_value=pad_value)
(call)|        11|    0.0149672|   0.00136065|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/utils.py:6 make_grid
   182|         0|            0|            0|  0.00%|    else:
   183|         1|   6.4373e-06|   6.4373e-06|  0.00%|        grid = utils.make_grid(images, n_col, n_padding, normalize=True, range=normalize_range,
   184|         1|  4.24385e-05|  4.24385e-05|  0.00%|                               scale_each=False, pad_value=pad_value)
(call)|         1|   0.00171494|   0.00171494|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torchvision/utils.py:6 make_grid
   185|         0|            0|            0|  0.00%|
   186|        12|  0.000357866|  2.98222e-05|  0.00%|    fig = plt.figure(figsize=figsize)
(call)|        12|     0.101545|   0.00846209|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/pyplot.py:427 figure
   187|        12|   0.00110817|  9.23475e-05|  0.00%|    plt.imshow(grid.detach().permute(1, 2, 0).squeeze(-1).numpy())
(call)|        12|      4.70615|      0.39218|  1.28%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/pyplot.py:2638 imshow
   188|        12|  9.65595e-05|  8.04663e-06|  0.00%|    if isinstance(title, str):
   189|         9|  0.000162363|  1.80403e-05|  0.00%|        plt.title(title)
(call)|         9|    0.0474989|   0.00527766|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/pyplot.py:3029 title
   190|        12|  0.000347376|   2.8948e-05|  0.00%|    fig.tight_layout()
(call)|        12|      10.6171|      0.88476|  2.89%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/cbook/deprecation.py:347 wrapper
   191|         0|            0|            0|  0.00%|
   192|        12|  7.43866e-05|  6.19888e-06|  0.00%|    if neptune_name is not None:
   193|         0|            0|            0|  0.00%|        #log_img_and_chart(name=neptune_name, fig=fig, experiment=experiment)
   194|        10|   0.00027132|   2.7132e-05|  0.00%|        log_img_only(name=neptune_name, fig=fig, experiment=experiment)
(call)|        10|      8.75284|     0.875284|  2.38%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_neptune.py:8 log_img_only
   195|         0|            0|            0|  0.00%|
   196|        12|   0.00026989|  2.24908e-05|  0.00%|    plt.close(fig)
(call)|        12|    0.0129001|   0.00107501|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/pyplot.py:658 close
   197|        12|  6.41346e-05|  5.34455e-06|  0.00%|    return fig
   198|         0|            0|            0|  0.00%|
   199|         0|            0|            0|  0.00%|
   200|         0|            0|            0|  0.00%|def plot_tiling(tiling,
   201|         0|            0|            0|  0.00%|                figsize: tuple = (12, 12),
   202|         0|            0|            0|  0.00%|                experiment: Optional[neptune.experiments.Experiment] = None,
   203|         1|  6.74725e-05|  6.74725e-05|  0.00%|                neptune_name: Optional[str] = None):
(call)|         2|  5.57899e-05|   2.7895e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
   204|         0|            0|            0|  0.00%|
   205|         0|            0|            0|  0.00%|    fig, axes = plt.subplots(ncols=2, nrows=2, figsize=figsize)
   206|         0|            0|            0|  0.00%|    axes[0, 0].imshow(skimage.color.label2rgb(tiling.integer_mask[0, 0].cpu().numpy(),
   207|         0|            0|            0|  0.00%|                                              numpy.zeros_like(tiling.integer_mask[0, 0].cpu().numpy()),
   208|         0|            0|            0|  0.00%|                                              alpha=1.0,
   209|         0|            0|            0|  0.00%|                                              bg_label=0))
   210|         0|            0|            0|  0.00%|    axes[0, 1].imshow(skimage.color.label2rgb(tiling.integer_mask[0, 0].cpu().numpy(),
   211|         0|            0|            0|  0.00%|                                              tiling.raw_image[0, 0].cpu().numpy(),
   212|         0|            0|            0|  0.00%|                                              alpha=0.25,
   213|         0|            0|            0|  0.00%|                                              bg_label=0))
   214|         0|            0|            0|  0.00%|    axes[1, 0].imshow(tiling.fg_prob[0, 0].cpu().numpy(), cmap='gray')
   215|         0|            0|            0|  0.00%|    axes[1, 1].imshow(tiling.raw_image[0].cpu().permute(1, 2, 0).squeeze(-1).numpy(), cmap='gray')
   216|         0|            0|            0|  0.00%|
   217|         0|            0|            0|  0.00%|    axes[0, 0].set_title("sample integer mask")
   218|         0|            0|            0|  0.00%|    axes[0, 1].set_title("sample integer mask")
   219|         0|            0|            0|  0.00%|    axes[1, 0].set_title("fg prob")
   220|         0|            0|            0|  0.00%|    axes[1, 1].set_title("raw image")
   221|         0|            0|            0|  0.00%|    fig.tight_layout()
   222|         0|            0|            0|  0.00%|    if neptune_name is not None:
   223|         0|            0|            0|  0.00%|        #log_img_and_chart(name=neptune_name, fig=fig, experiment=experiment)
   224|         0|            0|            0|  0.00%|        log_img_only(name=neptune_name, fig=fig, experiment=experiment)
   225|         0|            0|            0|  0.00%|    plt.close(fig)
   226|         0|            0|            0|  0.00%|    return fig
   227|         0|            0|            0|  0.00%|
   228|         0|            0|            0|  0.00%|
   229|         2|  1.88351e-05|  9.41753e-06|  0.00%|def plot_loss(history_dict: dict,
   230|         0|            0|            0|  0.00%|              test_frequency: int = 5,
   231|         0|            0|            0|  0.00%|              experiment: Optional[neptune.experiments.Experiment] = None,
   232|         1|  6.77109e-05|  6.77109e-05|  0.00%|              neptune_name: Optional[str] = None):
(call)|         2|   6.1512e-05|   3.0756e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
   233|         0|            0|            0|  0.00%|
   234|         2|  5.07832e-05|  2.53916e-05|  0.00%|    x = numpy.arange(0, len(history_dict["test_loss"])*test_frequency, test_frequency)
   235|         2|  2.02656e-05|  1.01328e-05|  0.00%|    train_loss = history_dict["train_loss"]
   236|         2|  2.67029e-05|  1.33514e-05|  0.00%|    test_loss = history_dict["test_loss"]
   237|         0|            0|            0|  0.00%|
   238|         2|  6.69956e-05|  3.34978e-05|  0.00%|    fig, ax = plt.subplots()
(call)|         2|     0.791999|        0.396|  0.22%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/pyplot.py:1044 subplots
   239|         2|  5.93662e-05|  2.96831e-05|  0.00%|    ax.plot(train_loss, '-', label="train loss")
(call)|         2|    0.0274451|    0.0137225|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:1414 plot
   240|         2|  3.83854e-05|  1.91927e-05|  0.00%|    ax.plot(x, test_loss, '.--', label="test loss")
(call)|         2|    0.0397034|    0.0198517|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:1414 plot
   241|         0|            0|            0|  0.00%|
   242|         2|  4.69685e-05|  2.34842e-05|  0.00%|    ax.set_xlabel('epoch')
(call)|         2|   0.00132585|  0.000662923|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:224 set_xlabel
   243|         2|  3.67165e-05|  1.83582e-05|  0.00%|    ax.set_ylabel('LOSS = - ELBO')
(call)|         2|   0.00119615|  0.000598073|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:257 set_ylabel
   244|         2|  4.12464e-05|  2.06232e-05|  0.00%|    ax.set_title('Training procedure')
(call)|         2|    0.0101316|    0.0050658|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:148 set_title
   245|         2|    4.673e-05|   2.3365e-05|  0.00%|    ax.grid()
(call)|         2|    0.0553029|    0.0276514|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_base.py:2727 grid
   246|         2|  6.19888e-05|  3.09944e-05|  0.00%|    ax.legend()
(call)|         2|     0.109305|    0.0546525|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:300 legend
   247|         2|  6.38962e-05|  3.19481e-05|  0.00%|    fig.tight_layout()
(call)|         2|      1.77557|     0.887785|  0.48%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/cbook/deprecation.py:347 wrapper
   248|         2|  1.71661e-05|  8.58307e-06|  0.00%|    if neptune_name is not None:
   249|         2|  5.26905e-05|  2.63453e-05|  0.00%|        log_img_and_chart(name=neptune_name, fig=fig, experiment=experiment)
(call)|         2|       38.736|       19.368| 10.54%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_neptune.py:20 log_img_and_chart
   250|         2|  5.62668e-05|  2.81334e-05|  0.00%|    plt.close()
(call)|         2|  0.000128984|  6.44922e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/pyplot.py:658 close
   251|         2|  9.05991e-06|  4.52995e-06|  0.00%|    return fig
   252|         0|            0|            0|  0.00%|
   253|         0|            0|            0|  0.00%|
   254|         2|  1.21593e-05|  6.07967e-06|  0.00%|def plot_kl(history_dict: dict,
   255|         0|            0|            0|  0.00%|            train_or_test: str = "test",
   256|         0|            0|            0|  0.00%|            experiment: Optional[neptune.experiments.Experiment] = None,
   257|         1|  6.69956e-05|  6.69956e-05|  0.00%|            neptune_name: Optional[str] = None):
(call)|         2|  5.55515e-05|  2.77758e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
   258|         0|            0|            0|  0.00%|
   259|         2|  1.07288e-05|  5.36442e-06|  0.00%|    if train_or_test == "test":
   260|         1|  6.91414e-06|  6.91414e-06|  0.00%|        kl_instance = history_dict["test_kl_instance"]
   261|         1|  6.67572e-06|  6.67572e-06|  0.00%|        kl_where = history_dict["test_kl_where"]
   262|         1|  5.96046e-06|  5.96046e-06|  0.00%|        kl_logit = history_dict["test_kl_logit"]
   263|         1|  4.29153e-06|  4.29153e-06|  0.00%|    elif train_or_test == "train":
   264|         1|  1.04904e-05|  1.04904e-05|  0.00%|        kl_instance = history_dict["train_kl_instance"]
   265|         1|  6.19888e-06|  6.19888e-06|  0.00%|        kl_where = history_dict["train_kl_where"]
   266|         1|  4.76837e-06|  4.76837e-06|  0.00%|        kl_logit = history_dict["train_kl_logit"]
   267|         0|            0|            0|  0.00%|    else:
   268|         0|            0|            0|  0.00%|        raise Exception
   269|         0|            0|            0|  0.00%|
   270|         2|  6.00815e-05|  3.00407e-05|  0.00%|    fig, ax = plt.subplots()
(call)|         2|     0.715871|     0.357936|  0.19%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/pyplot.py:1044 subplots
   271|         2|  5.67436e-05|  2.83718e-05|  0.00%|    ax.plot(kl_instance, '-', label="kl_instance")
(call)|         2|    0.0278411|    0.0139205|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:1414 plot
   272|         2|  5.38826e-05|  2.69413e-05|  0.00%|    ax.plot(kl_where, '.-', label="kl_where")
(call)|         2|    0.0248168|    0.0124084|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:1414 plot
   273|         2|  5.62668e-05|  2.81334e-05|  0.00%|    ax.plot(kl_logit, '.--', label="kl_logit")
(call)|         2|    0.0242326|    0.0121163|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:1414 plot
   274|         2|  4.02927e-05|  2.01464e-05|  0.00%|    ax.set_xlabel('epoch')
(call)|         2|   0.00134206|  0.000671029|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:224 set_xlabel
   275|         2|  5.10216e-05|  2.55108e-05|  0.00%|    ax.set_ylabel('kl')
(call)|         2|    0.0011909|   0.00059545|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:257 set_ylabel
   276|         2|  5.88894e-05|  2.94447e-05|  0.00%|    ax.grid()
(call)|         2|     0.054817|    0.0274085|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_base.py:2727 grid
   277|         2|  5.93662e-05|  2.96831e-05|  0.00%|    ax.legend()
(call)|         2|     0.141591|    0.0707957|  0.04%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:300 legend
   278|         2|  7.27177e-05|  3.63588e-05|  0.00%|    fig.tight_layout()
(call)|         2|      1.85638|     0.928192|  0.50%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/cbook/deprecation.py:347 wrapper
   279|         2|  1.90735e-05|  9.53674e-06|  0.00%|    if neptune_name is not None:
   280|         2|  5.76973e-05|  2.88486e-05|  0.00%|        log_img_and_chart(name=neptune_name, fig=fig, experiment=experiment)
(call)|         2|      29.2494|      14.6247|  7.96%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_neptune.py:20 log_img_and_chart
   281|         2|  4.64916e-05|  2.32458e-05|  0.00%|    plt.close()
(call)|         2|  0.000108719|  5.43594e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/pyplot.py:658 close
   282|         2|  1.00136e-05|  5.00679e-06|  0.00%|    return fig
   283|         0|            0|            0|  0.00%|
   284|         0|            0|            0|  0.00%|
   285|         2|  9.53674e-06|  4.76837e-06|  0.00%|def plot_sparsity(history_dict: dict,
   286|         0|            0|            0|  0.00%|                  train_or_test: str = "test",
   287|         0|            0|            0|  0.00%|                  experiment: Optional[neptune.experiments.Experiment] = None,
   288|         1|  6.55651e-05|  6.55651e-05|  0.00%|                  neptune_name: Optional[str] = None):
(call)|         2|  5.48363e-05|  2.74181e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
   289|         0|            0|            0|  0.00%|
   290|         2|   1.0252e-05|    5.126e-06|  0.00%|    if train_or_test == "test":
   291|         1|   6.4373e-06|   6.4373e-06|  0.00%|        sparsity_mask = history_dict["test_sparsity_mask"]
   292|         1|  5.24521e-06|  5.24521e-06|  0.00%|        sparsity_box = history_dict["test_sparsity_box"]
   293|         1|  5.72205e-06|  5.72205e-06|  0.00%|        sparsity_prob = history_dict["test_sparsity_prob"]
   294|         1|  4.76837e-06|  4.76837e-06|  0.00%|    elif train_or_test == "train":
   295|         1|  1.07288e-05|  1.07288e-05|  0.00%|        sparsity_mask = history_dict["train_sparsity_mask"]
   296|         1|  6.19888e-06|  6.19888e-06|  0.00%|        sparsity_box = history_dict["train_sparsity_box"]
   297|         1|  4.76837e-06|  4.76837e-06|  0.00%|        sparsity_prob = history_dict["train_sparsity_prob"]
   298|         0|            0|            0|  0.00%|    else:
   299|         0|            0|            0|  0.00%|        raise Exception
   300|         0|            0|            0|  0.00%|
   301|         2|  5.81741e-05|  2.90871e-05|  0.00%|    fig, ax = plt.subplots()
(call)|         2|     0.769785|     0.384893|  0.21%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/pyplot.py:1044 subplots
   302|         2|  7.03335e-05|  3.51667e-05|  0.00%|    ax.plot(sparsity_mask, '-', label="sparsity_mask")
(call)|         2|    0.0269752|    0.0134876|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:1414 plot
   303|         2|  4.36306e-05|  2.18153e-05|  0.00%|    ax.plot(sparsity_box, '.-', label="sparsity_box")
(call)|         2|    0.0244708|    0.0122354|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:1414 plot
   304|         2|  4.41074e-05|  2.20537e-05|  0.00%|    ax.plot(sparsity_prob, '.--', label="sparsity_prob")
(call)|         2|    0.0241249|    0.0120624|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:1414 plot
   305|         2|   4.1008e-05|   2.0504e-05|  0.00%|    ax.set_xlabel('epoch')
(call)|         2|   0.00121832|  0.000609159|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:224 set_xlabel
   306|         2|  3.55244e-05|  1.77622e-05|  0.00%|    ax.set_ylabel('sparsity')
(call)|         2|   0.00119472|  0.000597358|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:257 set_ylabel
   307|         2|    4.673e-05|   2.3365e-05|  0.00%|    ax.grid()
(call)|         2|    0.0551338|    0.0275669|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_base.py:2727 grid
   308|         2|  5.50747e-05|  2.75373e-05|  0.00%|    ax.legend()
(call)|         2|     0.151615|    0.0758077|  0.04%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:300 legend
   309|         2|  7.20024e-05|  3.60012e-05|  0.00%|    fig.tight_layout()
(call)|         2|      1.73259|     0.866293|  0.47%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/cbook/deprecation.py:347 wrapper
   310|         2|  1.85966e-05|  9.29832e-06|  0.00%|    if neptune_name is not None:
   311|         2|  5.60284e-05|  2.80142e-05|  0.00%|        log_img_and_chart(name=neptune_name, fig=fig, experiment=experiment)
(call)|         2|      29.3773|      14.6887|  7.99%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_neptune.py:20 log_img_and_chart
   312|         2|  7.31945e-05|  3.65973e-05|  0.00%|    plt.close()
(call)|         2|  0.000111818|  5.59092e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/pyplot.py:658 close
   313|         2|  1.07288e-05|  5.36442e-06|  0.00%|    return fig
   314|         0|            0|            0|  0.00%|
   315|         0|            0|            0|  0.00%|
   316|         2|  1.33514e-05|  6.67572e-06|  0.00%|def plot_loss_term(history_dict: dict,
   317|         0|            0|            0|  0.00%|                   train_or_test: str = "test",
   318|         0|            0|            0|  0.00%|                   experiment: Optional[neptune.experiments.Experiment] = None,
   319|         1|  6.91414e-05|  6.91414e-05|  0.00%|                   neptune_name: Optional[str] = None):
(call)|         2|  5.55515e-05|  2.77758e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
   320|         0|            0|            0|  0.00%|
   321|         2|  1.19209e-05|  5.96046e-06|  0.00%|    if train_or_test == "test":
   322|         1|  2.64645e-05|  2.64645e-05|  0.00%|        loss = numpy.array(history_dict["test_loss"])
   323|         1|  2.67029e-05|  2.67029e-05|  0.00%|        mse = numpy.array(history_dict["test_mse_tot"])
   324|         1|   1.0252e-05|   1.0252e-05|  0.00%|        reg = numpy.array(history_dict["test_reg_tot"])
   325|         1|  9.05991e-06|  9.05991e-06|  0.00%|        kl = numpy.array(history_dict["test_kl_tot"])
   326|         1|  9.05991e-06|  9.05991e-06|  0.00%|        sparsity = numpy.array(history_dict["test_sparsity_tot"])
   327|         1|  8.58307e-06|  8.58307e-06|  0.00%|        geco_sparsity = numpy.array(history_dict["test_geco_sparsity"])
   328|         1|  9.05991e-06|  9.05991e-06|  0.00%|        geco_balance = numpy.array(history_dict["test_geco_balance"])
   329|         1|  1.09673e-05|  1.09673e-05|  0.00%|    elif train_or_test == "train":
   330|         1|  2.95639e-05|  2.95639e-05|  0.00%|        loss = numpy.array(history_dict["train_loss"])
   331|         1|  1.00136e-05|  1.00136e-05|  0.00%|        mse = numpy.array(history_dict["train_mse_tot"])
   332|         1|  8.58307e-06|  8.58307e-06|  0.00%|        reg = numpy.array(history_dict["train_reg_tot"])
   333|         1|  8.10623e-06|  8.10623e-06|  0.00%|        kl = numpy.array(history_dict["train_kl_tot"])
   334|         1|  8.34465e-06|  8.34465e-06|  0.00%|        sparsity = numpy.array(history_dict["train_sparsity_tot"])
   335|         1|  8.34465e-06|  8.34465e-06|  0.00%|        geco_sparsity = numpy.array(history_dict["train_geco_sparsity"])
   336|         1|  8.10623e-06|  8.10623e-06|  0.00%|        geco_balance = numpy.array(history_dict["train_geco_balance"])
   337|         0|            0|            0|  0.00%|    else:
   338|         0|            0|            0|  0.00%|        raise Exception
   339|         0|            0|            0|  0.00%|
   340|         2|  7.72476e-05|  3.86238e-05|  0.00%|    fig, ax = plt.subplots()
(call)|         2|      0.70789|     0.353945|  0.19%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/pyplot.py:1044 subplots
   341|         2|  5.91278e-05|  2.95639e-05|  0.00%|    ax.plot(loss, '-', label="loss")
(call)|         2|    0.0256636|    0.0128318|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:1414 plot
   342|         2|   5.6982e-05|   2.8491e-05|  0.00%|    ax.plot(geco_balance * mse, '.-', label="scaled mse")
(call)|         2|    0.0246489|    0.0123245|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:1414 plot
   343|         2|   5.4121e-05|  2.70605e-05|  0.00%|    ax.plot(geco_balance * reg, '.--', label="scaled reg")
(call)|         2|    0.0251081|     0.012554|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:1414 plot
   344|         2|  6.91414e-05|  3.45707e-05|  0.00%|    ax.plot((1-geco_balance) * kl, '.--', label="scaled kl")
(call)|         2|    0.0243838|    0.0121919|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:1414 plot
   345|         2|   5.4121e-05|  2.70605e-05|  0.00%|    ax.plot(geco_sparsity * sparsity, '.--', label="scaled sparsity")
(call)|         2|    0.0249934|    0.0124967|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:1414 plot
   346|         0|            0|            0|  0.00%|
   347|         2|  4.07696e-05|  2.03848e-05|  0.00%|    ax.set_xlabel('epoch')
(call)|         2|   0.00135255|  0.000676274|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:224 set_xlabel
   348|         2|  3.69549e-05|  1.84774e-05|  0.00%|    ax.set_ylabel('loss term')
(call)|         2|   0.00111866|   0.00055933|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:257 set_ylabel
   349|         2|  5.22137e-05|  2.61068e-05|  0.00%|    ax.grid()
(call)|         2|    0.0558019|    0.0279009|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_base.py:2727 grid
   350|         2|  6.24657e-05|  3.12328e-05|  0.00%|    ax.legend()
(call)|         2|     0.215712|     0.107856|  0.06%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:300 legend
   351|         2|  7.60555e-05|  3.80278e-05|  0.00%|    fig.tight_layout()
(call)|         2|      1.74062|     0.870308|  0.47%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/cbook/deprecation.py:347 wrapper
   352|         2|  1.71661e-05|  8.58307e-06|  0.00%|    if neptune_name is not None:
   353|         2|  5.91278e-05|  2.95639e-05|  0.00%|        log_img_and_chart(name=neptune_name, fig=fig, experiment=experiment)
(call)|         2|      31.7668|      15.8834|  8.64%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_neptune.py:20 log_img_and_chart
   354|         2|  4.81606e-05|  2.40803e-05|  0.00%|    plt.close()
(call)|         2|  0.000112295|  5.61476e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/pyplot.py:658 close
   355|         2|  2.59876e-05|  1.29938e-05|  0.00%|    return fig
   356|         0|            0|            0|  0.00%|
   357|         0|            0|            0|  0.00%|
   358|         2|  3.26633e-05|  1.63317e-05|  0.00%|def plot_trajectory(history_dict: dict,
   359|         0|            0|            0|  0.00%|                    train_or_test: str = "test",
   360|         0|            0|            0|  0.00%|                    experiment: Optional[neptune.experiments.Experiment] = None,
   361|         1|  6.69956e-05|  6.69956e-05|  0.00%|                    neptune_name: Optional[str] = None):
(call)|         2|  5.79357e-05|  2.89679e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
   362|         0|            0|            0|  0.00%|
   363|         2|  1.40667e-05|  7.03335e-06|  0.00%|    if train_or_test == "test":
   364|         1|  7.39098e-06|  7.39098e-06|  0.00%|        mse = history_dict["test_mse_tot"]
   365|         1|  7.62939e-06|  7.62939e-06|  0.00%|        kl = history_dict["test_kl_tot"]
   366|         1|  7.15256e-06|  7.15256e-06|  0.00%|        sparsity = history_dict["test_sparsity_tot"]
   367|         1|   6.4373e-06|   6.4373e-06|  0.00%|    elif train_or_test == "train":
   368|         1|  1.14441e-05|  1.14441e-05|  0.00%|        mse = history_dict["train_mse_tot"]
   369|         1|  7.62939e-06|  7.62939e-06|  0.00%|        kl = history_dict["train_kl_tot"]
   370|         1|  6.91414e-06|  6.91414e-06|  0.00%|        sparsity = history_dict["train_sparsity_tot"]
   371|         0|            0|            0|  0.00%|    else:
   372|         0|            0|            0|  0.00%|        raise Exception
   373|         0|            0|            0|  0.00%|
   374|         2|   1.3113e-05|  6.55651e-06|  0.00%|    fontsize = 20
   375|         2|  1.28746e-05|   6.4373e-06|  0.00%|    labelsize = 20
   376|         2|  0.000111341|  5.56707e-05|  0.00%|    colors = numpy.arange(0.0, len(mse), 1.0)/len(mse)
   377|         0|            0|            0|  0.00%|
   378|         2|  6.86646e-05|  3.43323e-05|  0.00%|    fig = plt.figure(figsize=(20, 10))
(call)|         2|    0.0179346|   0.00896728|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/pyplot.py:427 figure
   379|         2|  6.10352e-05|  3.05176e-05|  0.00%|    ax1 = fig.add_subplot(221)
(call)|         2|     0.690927|     0.345464|  0.19%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/figure.py:1259 add_subplot
   380|         2|  6.36578e-05|  3.18289e-05|  0.00%|    ax2 = fig.add_subplot(222)
(call)|         2|     0.825796|     0.412898|  0.22%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/figure.py:1259 add_subplot
   381|         2|  7.98702e-05|  3.99351e-05|  0.00%|    ax3 = fig.add_subplot(223)
(call)|         2|     0.793232|     0.396616|  0.22%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/figure.py:1259 add_subplot
   382|         2|  6.67572e-05|  3.33786e-05|  0.00%|    ax4 = fig.add_subplot(224, projection='3d')
(call)|         2|     0.779974|     0.389987|  0.21%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/figure.py:1259 add_subplot
   383|         0|            0|            0|  0.00%|
   384|         2|  4.91142e-05|  2.45571e-05|  0.00%|    ax1.set_xlabel('MSE', fontsize=fontsize)
(call)|         2|   0.00173378|   0.00086689|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:224 set_xlabel
   385|         2|  4.02927e-05|  2.01464e-05|  0.00%|    ax1.set_ylabel('KL', fontsize=fontsize)
(call)|         2|   0.00156999|  0.000784993|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:257 set_ylabel
   386|         2|  4.62532e-05|  2.31266e-05|  0.00%|    ax1.tick_params(axis='both', which='major', labelsize=labelsize)
(call)|         2|    0.0587232|    0.0293616|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_base.py:2884 tick_params
   387|         2|   7.1764e-05|   3.5882e-05|  0.00%|    ax1.scatter(mse, kl, c=colors)
(call)|         2|    0.0605135|    0.0302567|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/__init__.py:1562 inner
   388|         2|  5.14984e-05|  2.57492e-05|  0.00%|    ax1.plot(mse, kl, '--')
(call)|         2|     0.035831|    0.0179155|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:1414 plot
   389|         2|  5.03063e-05|  2.51532e-05|  0.00%|    ax1.grid()
(call)|         2|    0.0553873|    0.0276936|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_base.py:2727 grid
   390|         0|            0|            0|  0.00%|
   391|         2|   4.3869e-05|  2.19345e-05|  0.00%|    ax2.set_xlabel('SPARSITY', fontsize=fontsize)
(call)|         2|   0.00157404|   0.00078702|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:224 set_xlabel
   392|         2|   4.1008e-05|   2.0504e-05|  0.00%|    ax2.set_ylabel('MSE', fontsize=fontsize)
(call)|         2|   0.00147581|  0.000737906|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:257 set_ylabel
   393|         2|  5.43594e-05|  2.71797e-05|  0.00%|    ax2.tick_params(axis='both', which='major', labelsize=labelsize)
(call)|         2|     0.057817|    0.0289085|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_base.py:2884 tick_params
   394|         2|  8.32081e-05|   4.1604e-05|  0.00%|    ax2.scatter(sparsity, mse, c=colors)
(call)|         2|    0.0583959|    0.0291979|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/__init__.py:1562 inner
   395|         2|  6.53267e-05|  3.26633e-05|  0.00%|    ax2.plot(sparsity, mse, '--')
(call)|         2|    0.0253983|    0.0126991|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:1414 plot
   396|         2|  5.48363e-05|  2.74181e-05|  0.00%|    ax2.grid()
(call)|         2|     0.055856|     0.027928|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_base.py:2727 grid
   397|         0|            0|            0|  0.00%|
   398|         2|  4.69685e-05|  2.34842e-05|  0.00%|    ax3.set_xlabel('SPARSITY', fontsize=fontsize)
(call)|         2|   0.00172162|   0.00086081|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:224 set_xlabel
   399|         2|  5.76973e-05|  2.88486e-05|  0.00%|    ax3.set_ylabel('KL', fontsize=fontsize)
(call)|         2|   0.00160003|  0.000800014|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:257 set_ylabel
   400|         2|  5.62668e-05|  2.81334e-05|  0.00%|    ax3.tick_params(axis='both', which='major', labelsize=labelsize)
(call)|         2|    0.0588014|    0.0294007|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_base.py:2884 tick_params
   401|         2|  8.08239e-05|  4.04119e-05|  0.00%|    ax3.scatter(sparsity, kl, c=colors)
(call)|         2|    0.0622461|     0.031123|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/__init__.py:1562 inner
   402|         2|   6.8903e-05|  3.44515e-05|  0.00%|    ax3.plot(sparsity, kl, '--')
(call)|         2|     0.027009|    0.0135045|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:1414 plot
   403|         2|  5.93662e-05|  2.96831e-05|  0.00%|    ax3.grid()
(call)|         2|    0.0594108|    0.0297054|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_base.py:2727 grid
   404|         0|            0|            0|  0.00%|
   405|         2|  0.000138521|  6.92606e-05|  0.00%|    ax4.scatter(kl, sparsity, mse, c=colors)
(call)|         2|     0.199203|    0.0996015|  0.05%|# /opt/anaconda3/lib/python3.7/site-packages/mpl_toolkits/mplot3d/axes3d.py:2186 scatter
   406|         2|   7.7486e-05|   3.8743e-05|  0.00%|    ax4.plot(kl, sparsity, mse, '--')
(call)|         2|    0.0667441|     0.033372|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/mpl_toolkits/mplot3d/axes3d.py:1389 plot
   407|         2|  4.48227e-05|  2.24113e-05|  0.00%|    ax4.set_xlabel('KL', fontsize=fontsize)
(call)|         2|   0.00304675|   0.00152338|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:224 set_xlabel
   408|         2|  4.02927e-05|  2.01464e-05|  0.00%|    ax4.set_ylabel('SPARSITY', fontsize=fontsize)
(call)|         2|    0.0027554|    0.0013777|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:257 set_ylabel
   409|         2|  4.76837e-05|  2.38419e-05|  0.00%|    ax4.set_zlabel('MSE', fontsize=fontsize)
(call)|         2|    0.0147946|   0.00739729|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/mpl_toolkits/mplot3d/axes3d.py:1204 set_zlabel
   410|         0|            0|            0|  0.00%|
   411|         2|  6.79493e-05|  3.39746e-05|  0.00%|    fig.tight_layout()  # otherwise the right y-label is slightly clipped
(call)|         2|      4.20037|      2.10019|  1.14%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/cbook/deprecation.py:347 wrapper
   412|         2|  1.78814e-05|   8.9407e-06|  0.00%|    if neptune_name is not None:
   413|         2|  9.60827e-05|  4.80413e-05|  0.00%|        log_img_and_chart(name=neptune_name, fig=fig, experiment=experiment)
(call)|         2|      41.3281|       20.664| 11.24%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_neptune.py:20 log_img_and_chart
   414|         2|  5.14984e-05|  2.57492e-05|  0.00%|    plt.close()
(call)|         2|  0.000114679|  5.73397e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/pyplot.py:658 close
   415|         2|  1.14441e-05|  5.72205e-06|  0.00%|    return fig
   416|         0|            0|            0|  0.00%|
   417|         0|            0|            0|  0.00%|
   418|         2|  1.93119e-05|  9.65595e-06|  0.00%|def plot_geco_parameters(history_dict: dict,
   419|         0|            0|            0|  0.00%|                         params: dict,
   420|         0|            0|            0|  0.00%|                         train_or_test: str = "test",
   421|         0|            0|            0|  0.00%|                         experiment: Optional[neptune.experiments.Experiment] = None,
   422|         1|   8.4877e-05|   8.4877e-05|  0.00%|                         neptune_name: Optional[str] = None):
(call)|         2|  5.48363e-05|  2.74181e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
   423|         0|            0|            0|  0.00%|
   424|         2|  1.40667e-05|  7.03335e-06|  0.00%|    if train_or_test == "train":
   425|         1|  7.86781e-06|  7.86781e-06|  0.00%|        fg_fraction = history_dict["train_fg_fraction"]
   426|         1|  1.16825e-05|  1.16825e-05|  0.00%|        geco_sparsity = history_dict["train_geco_sparsity"]
   427|         1|  7.15256e-06|  7.15256e-06|  0.00%|        mse_av = history_dict["train_mse_tot"]
   428|         1|   6.4373e-06|   6.4373e-06|  0.00%|        geco_balance = history_dict["train_geco_balance"]
   429|         1|  7.86781e-06|  7.86781e-06|  0.00%|    elif train_or_test == "test":
   430|         1|  8.82149e-06|  8.82149e-06|  0.00%|        fg_fraction = history_dict["test_fg_fraction"]
   431|         1|  8.10623e-06|  8.10623e-06|  0.00%|        geco_sparsity = history_dict["test_geco_sparsity"]
   432|         1|  7.62939e-06|  7.62939e-06|  0.00%|        mse_av = history_dict["test_mse_tot"]
   433|         1|  7.62939e-06|  7.62939e-06|  0.00%|        geco_balance = history_dict["test_geco_balance"]
   434|         0|            0|            0|  0.00%|    else:
   435|         0|            0|            0|  0.00%|        raise Exception
   436|         0|            0|            0|  0.00%|
   437|         2|  1.38283e-05|  6.91414e-06|  0.00%|    fontsize = 20
   438|         2|  1.50204e-05|  7.51019e-06|  0.00%|    labelsize = 20
   439|         2|  5.22137e-05|  2.61068e-05|  0.00%|    fig = plt.figure(figsize=(20, 20))
(call)|         2|    0.0184705|   0.00923526|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/pyplot.py:427 figure
   440|         2|  7.24792e-05|  3.62396e-05|  0.00%|    ax1 = fig.add_subplot(211)
(call)|         2|     0.688059|      0.34403|  0.19%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/figure.py:1259 add_subplot
   441|         2|  7.48634e-05|  3.74317e-05|  0.00%|    ax2 = fig.add_subplot(212)
(call)|         2|     0.719602|     0.359801|  0.20%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/figure.py:1259 add_subplot
   442|         0|            0|            0|  0.00%|
   443|         2|  3.40939e-05|  1.70469e-05|  0.00%|    color = 'tab:red'
   444|         2|  6.29425e-05|  3.14713e-05|  0.00%|    ax1.set_xlabel('epochs', fontsize=fontsize)
(call)|         2|   0.00174904|  0.000874519|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:224 set_xlabel
   445|         2|  4.31538e-05|  2.15769e-05|  0.00%|    ax1.set_ylabel('fg_fraction', fontsize=fontsize, color=color)
(call)|         2|   0.00162435|  0.000812173|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:257 set_ylabel
   446|         2|  7.84397e-05|  3.92199e-05|  0.00%|    ax1.tick_params(axis='both', which='major', labelsize=labelsize)
(call)|         2|    0.0795043|    0.0397521|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_base.py:2884 tick_params
   447|         2|  7.70092e-05|  3.85046e-05|  0.00%|    ax1.plot(fg_fraction, '.--', color=color, label="n_object")
(call)|         2|     0.027096|     0.013548|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:1414 plot
   448|         2|  2.28882e-05|  1.14441e-05|  0.00%|    ymin = min(params["GECO_loss"]['target_fg_fraction'])
   449|         2|  1.33514e-05|  6.67572e-06|  0.00%|    ymax = max(params["GECO_loss"]['target_fg_fraction'])
   450|         2|  8.72612e-05|  4.36306e-05|  0.00%|    ax1.plot(ymin * numpy.ones(len(fg_fraction)), '-', color='black', label="y_min")
(call)|         2|  0.000154734|  7.73668e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/numeric.py:144 ones
(call)|         2|    0.0229082|    0.0114541|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:1414 plot
   451|         2|  9.29832e-05|  4.64916e-05|  0.00%|    ax1.plot(ymax * numpy.ones(len(fg_fraction)), '-', color='black', label="y_max")
(call)|         2|  0.000133514|  6.67572e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/numeric.py:144 ones
(call)|         2|    0.0223475|    0.0111737|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:1414 plot
   452|         2|  4.50611e-05|  2.25306e-05|  0.00%|    ax1.tick_params(axis='y', labelcolor=color)
(call)|         2|    0.0272856|    0.0136428|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_base.py:2884 tick_params
   453|         2|  4.91142e-05|  2.45571e-05|  0.00%|    ax1.grid()
(call)|         2|    0.0534661|     0.026733|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_base.py:2727 grid
   454|         0|            0|            0|  0.00%|
   455|         2|  7.53403e-05|  3.76701e-05|  0.00%|    ax1b = ax1.twinx()  # instantiate a second axes that shares the same x-axis
(call)|         2|     0.870064|     0.435032|  0.24%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_base.py:4382 twinx
   456|         2|  1.40667e-05|  7.03335e-06|  0.00%|    color = 'tab:green'
   457|         2|  6.19888e-05|  3.09944e-05|  0.00%|    ax1b.set_xlabel('epochs', fontsize=fontsize)
(call)|         2|   0.00163054|  0.000815272|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:224 set_xlabel
   458|         2|  4.31538e-05|  2.15769e-05|  0.00%|    ax1b.set_ylabel('geco_sparsity', color=color, fontsize=fontsize)
(call)|         2|    0.0017252|  0.000862598|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:257 set_ylabel
   459|         2|  5.53131e-05|  2.76566e-05|  0.00%|    ax1b.tick_params(axis='both', which='major', labelsize=labelsize)
(call)|         2|     0.056216|     0.028108|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_base.py:2884 tick_params
   460|         2|  9.10759e-05|  4.55379e-05|  0.00%|    plt.plot(geco_sparsity, '-', label="geco_sparsity", color=color)
(call)|         2|     0.026706|     0.013353|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/pyplot.py:2759 plot
   461|         2|  4.74453e-05|  2.37226e-05|  0.00%|    ax1b.tick_params(axis='y', labelcolor=color)
(call)|         2|    0.0276637|    0.0138319|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_base.py:2884 tick_params
   462|         2|   5.6982e-05|   2.8491e-05|  0.00%|    ax1b.grid()
(call)|         2|    0.0687861|    0.0343931|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_base.py:2727 grid
   463|         0|            0|            0|  0.00%|
   464|         0|            0|            0|  0.00%|    # ----------------
   465|         2|  3.21865e-05|  1.60933e-05|  0.00%|    color = 'tab:red'
   466|         2|   4.1008e-05|   2.0504e-05|  0.00%|    ax2.set_xlabel('epochs', fontsize=fontsize)
(call)|         2|   0.00155759|  0.000778794|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:224 set_xlabel
   467|         2|  4.17233e-05|  2.08616e-05|  0.00%|    ax2.set_ylabel('mse av', fontsize=fontsize, color=color)
(call)|         2|   0.00156188|   0.00078094|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:257 set_ylabel
   468|         2|  5.53131e-05|  2.76566e-05|  0.00%|    ax2.tick_params(axis='both', which='major', labelsize=labelsize)
(call)|         2|    0.0557837|    0.0278919|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_base.py:2884 tick_params
   469|         2|  5.96046e-05|  2.98023e-05|  0.00%|    ax2.plot(mse_av, '.--', color=color, label="mse av")
(call)|         2|    0.0266435|    0.0133218|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:1414 plot
   470|         0|            0|            0|  0.00%|
   471|         2|  2.26498e-05|  1.13249e-05|  0.00%|    ymin = min(params["GECO_loss"]["target_mse"])
   472|         2|  1.33514e-05|  6.67572e-06|  0.00%|    ymax = max(params["GECO_loss"]["target_mse"])
   473|         2|  8.55923e-05|  4.27961e-05|  0.00%|    ax2.plot(ymin * numpy.ones(len(mse_av)), '-', color='black', label="y_min")
(call)|         2|  0.000190258|   9.5129e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/numeric.py:144 ones
(call)|         2|    0.0237036|    0.0118518|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:1414 plot
   474|         2|  7.96318e-05|  3.98159e-05|  0.00%|    ax2.plot(ymax * numpy.ones(len(mse_av)), '-', color='black', label="y_max")
(call)|         2|  0.000127554|   6.3777e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/numeric.py:144 ones
(call)|         2|    0.0232522|    0.0116261|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:1414 plot
   475|         2|  4.33922e-05|  2.16961e-05|  0.00%|    ax2.tick_params(axis='y', labelcolor=color)
(call)|         2|    0.0282941|     0.014147|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_base.py:2884 tick_params
   476|         0|            0|            0|  0.00%|
   477|         2|  4.74453e-05|  2.37226e-05|  0.00%|    ax2.grid()
(call)|         2|    0.0584037|    0.0292019|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_base.py:2727 grid
   478|         2|   8.4877e-05|  4.24385e-05|  0.00%|    ax2b = ax2.twinx()  # instantiate a second axes that shares the same x-axis
(call)|         2|     0.988159|      0.49408|  0.27%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_base.py:4382 twinx
   479|         2|  3.43323e-05|  1.71661e-05|  0.00%|    color = 'tab:green'
   480|         2|  5.79357e-05|  2.89679e-05|  0.00%|    ax2b.set_xlabel('epochs', fontsize=fontsize)
(call)|         2|   0.00156403|  0.000782013|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:224 set_xlabel
   481|         2|   5.8651e-05|  2.93255e-05|  0.00%|    ax2b.set_ylabel('geco_balance', fontsize=fontsize, color=color)
(call)|         2|   0.00170517|  0.000852585|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py:257 set_ylabel
   482|         2|  5.50747e-05|  2.75373e-05|  0.00%|    plt.plot(geco_balance, '-', label="geco_balance", color=color)
(call)|         2|    0.0262675|    0.0131338|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/pyplot.py:2759 plot
   483|         2|  6.79493e-05|  3.39746e-05|  0.00%|    ax2b.tick_params(axis='both', which='major', labelsize=labelsize)
(call)|         2|    0.0565817|    0.0282909|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_base.py:2884 tick_params
   484|         2|  0.000108242|   5.4121e-05|  0.00%|    ax2b.tick_params(axis='y', labelcolor=color)
(call)|         2|    0.0287316|    0.0143658|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_base.py:2884 tick_params
   485|         2|   6.8903e-05|  3.44515e-05|  0.00%|    ax2b.grid()
(call)|         2|    0.0779419|    0.0389709|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_base.py:2727 grid
   486|         0|            0|            0|  0.00%|
   487|         2|  8.22544e-05|  4.11272e-05|  0.00%|    fig.tight_layout()  # otherwise the right y-label is slightly clipped
(call)|         2|      4.87171|      2.43586|  1.33%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/cbook/deprecation.py:347 wrapper
   488|         2|  2.00272e-05|  1.00136e-05|  0.00%|    if neptune_name is not None:
   489|         2|  9.72748e-05|  4.86374e-05|  0.00%|        log_img_only(name=neptune_name, fig=fig, experiment=experiment)
(call)|         2|      4.10482|      2.05241|  1.12%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_neptune.py:8 log_img_only
   490|         2|  5.93662e-05|  2.96831e-05|  0.00%|    plt.close()
(call)|         2|    0.0016458|  0.000822902|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/pyplot.py:658 close
   491|         2|   1.3113e-05|  6.55651e-06|  0.00%|    return fig
   492|         0|            0|            0|  0.00%|
   493|         0|            0|            0|  0.00%|
   494|         2|  1.62125e-05|  8.10623e-06|  0.00%|def plot_all_from_dictionary(history_dict: dict,
   495|         0|            0|            0|  0.00%|                             params: dict,
   496|         0|            0|            0|  0.00%|                             test_frequency: int = 5,
   497|         0|            0|            0|  0.00%|                             train_or_test: str = "test",
   498|         0|            0|            0|  0.00%|                             experiment: Optional[neptune.experiments.Experiment] = None,
   499|         1|  4.62532e-05|  4.62532e-05|  0.00%|                             verbose: bool = False):
(call)|         1|  2.74181e-05|  2.74181e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
   500|         2|  1.28746e-05|   6.4373e-06|  0.00%|    if verbose:
   501|         2|  6.48499e-05|  3.24249e-05|  0.00%|        print("in plot_all_from_dictionary ->"+train_or_test)
(call)|         4|   0.00318718|  0.000796795|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/streams/stdstream_uploader.py:30 write
   502|         0|            0|            0|  0.00%|
   503|         2|  5.67436e-05|  2.83718e-05|  0.00%|    plot_loss(history_dict, test_frequency=test_frequency, experiment=experiment, neptune_name="loss_history_"+train_or_test)
(call)|         2|      41.5489|      20.7744| 11.30%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_visualization.py:229 plot_loss
   504|         2|  4.86374e-05|  2.43187e-05|  0.00%|    plot_kl(history_dict, train_or_test=train_or_test, experiment=experiment, neptune_name="kl_history_"+train_or_test)
(call)|         2|      32.0983|      16.0491|  8.73%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_visualization.py:254 plot_kl
   505|         2|  5.17368e-05|  2.58684e-05|  0.00%|    plot_sparsity(history_dict, train_or_test=train_or_test, experiment=experiment, neptune_name="sparsity_history_"+train_or_test)
(call)|         2|      32.1652|      16.0826|  8.75%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_visualization.py:285 plot_sparsity
   506|         2|   8.2016e-05|   4.1008e-05|  0.00%|    plot_loss_term(history_dict, train_or_test=train_or_test, experiment=experiment, neptune_name="loss_terms_"+train_or_test)
(call)|         2|      34.6152|      17.3076|  9.41%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_visualization.py:316 plot_loss_term
   507|         2|  5.45979e-05|  2.72989e-05|  0.00%|    plot_trajectory(history_dict, train_or_test=train_or_test, experiment=experiment, neptune_name="trajectory_"+train_or_test)
(call)|         2|      49.5502|      24.7751| 13.48%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_visualization.py:358 plot_trajectory
   508|         2|  1.19209e-05|  5.96046e-06|  0.00%|    plot_geco_parameters(history_dict, params, train_or_test=train_or_test, experiment=experiment,
   509|         2|  6.03199e-05|    3.016e-05|  0.00%|            neptune_name="geco_params_trajectory_"+train_or_test)
(call)|         2|      13.0966|      6.54828|  3.56%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_visualization.py:418 plot_geco_parameters
   510|         0|            0|            0|  0.00%|
   511|         2|  1.04904e-05|  5.24521e-06|  0.00%|    if verbose:
   512|         2|  6.41346e-05|  3.20673e-05|  0.00%|        print("leaving plot_all_from_dictionary ->"+train_or_test)
(call)|         4|   0.00342488|  0.000856221|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/internal/streams/stdstream_uploader.py:30 write
   513|         0|            0|            0|  0.00%|
   514|         0|            0|            0|  0.00%|
   515|         2|  1.88351e-05|  9.41753e-06|  0.00%|def plot_reconstruction_and_inference(output: Output,
   516|         0|            0|            0|  0.00%|                                      epoch: int,
   517|         0|            0|            0|  0.00%|                                      prefix: str = "",
   518|         0|            0|            0|  0.00%|                                      postfix: str = "",
   519|         1|  1.93119e-05|  1.93119e-05|  0.00%|                                      verbose: bool = False):
   520|         2|  1.21593e-05|  6.07967e-06|  0.00%|    if verbose:
   521|         0|            0|            0|  0.00%|        print("in plot_reconstruction_and_inference")
   522|         0|            0|            0|  0.00%|
   523|         2|  4.12464e-05|  2.06232e-05|  0.00%|    _ = show_batch(output.imgs[:8],
   524|         2|  1.28746e-05|   6.4373e-06|  0.00%|                   n_col=4,
   525|         2|  1.04904e-05|  5.24521e-06|  0.00%|                   n_padding=4,
   526|         2|  2.55108e-05|  1.27554e-05|  0.00%|                   title='imgs, epoch= {0:6d}'.format(epoch),
   527|         2|  9.39369e-05|  4.69685e-05|  0.00%|                   neptune_name=prefix+"imgs"+postfix)
(call)|         2|      4.14866|      2.07433|  1.13%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_visualization.py:166 show_batch
   528|         2|  0.000198364|  9.91821e-05|  0.00%|    _ = show_batch(output.inference.p_map[:8],
   529|         2|  1.81198e-05|  9.05991e-06|  0.00%|                   n_col=4,
   530|         2|  1.00136e-05|  5.00679e-06|  0.00%|                   n_padding=4,
   531|         2|   2.6226e-05|   1.3113e-05|  0.00%|                   title='p_map, epoch= {0:6d}'.format(epoch),
   532|         2|  1.00136e-05|  5.00679e-06|  0.00%|                   normalize_range=None,
   533|         2|  8.03471e-05|  4.01735e-05|  0.00%|                   neptune_name=prefix+"p_map"+postfix)
(call)|         2|      3.85869|      1.92934|  1.05%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_visualization.py:166 show_batch
   534|         2|  0.000146627|  7.33137e-05|  0.00%|    _ = show_batch(output.inference.big_bg[:8],
   535|         2|   1.4782e-05|  7.39098e-06|  0.00%|                   n_col=4,
   536|         2|  9.05991e-06|  4.52995e-06|  0.00%|                   n_padding=4,
   537|         2|  2.52724e-05|  1.26362e-05|  0.00%|                   title='background, epoch= {0:6d}'.format(epoch),
   538|         2|  8.58307e-05|  4.29153e-05|  0.00%|                   neptune_name=prefix+"bg"+postfix)
(call)|         2|      4.68516|      2.34258|  1.27%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_visualization.py:166 show_batch
   539|         0|            0|            0|  0.00%|
   540|         2|  1.74046e-05|  8.70228e-06|  0.00%|    if verbose:
   541|         0|            0|            0|  0.00%|        print("leaving plot_reconstruction_and_inference")
   542|         0|            0|            0|  0.00%|
   543|         0|            0|            0|  0.00%|
   544|         1|  1.09673e-05|  1.09673e-05|  0.00%|def plot_segmentation(segmentation: Segmentation,
   545|         0|            0|            0|  0.00%|                      epoch: Union[int, str] = "",
   546|         0|            0|            0|  0.00%|                      prefix: str = "",
   547|         0|            0|            0|  0.00%|                      postfix: str = "",
   548|         1|  5.48363e-05|  5.48363e-05|  0.00%|                      verbose: bool = False):
(call)|         1|  0.000756264|  0.000756264|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
   549|         1|  7.39098e-06|  7.39098e-06|  0.00%|    if verbose:
   550|         0|            0|            0|  0.00%|        print("in plot_segmentation")
   551|         0|            0|            0|  0.00%|
   552|         1|  6.19888e-06|  6.19888e-06|  0.00%|    if isinstance(epoch, int):
   553|         1|   1.4782e-05|   1.4782e-05|  0.00%|        title_postfix = 'epoch= {0:6d}'.format(epoch)
   554|         0|            0|            0|  0.00%|    elif isinstance(epoch, str):
   555|         0|            0|            0|  0.00%|        title_postfix = epoch
   556|         0|            0|            0|  0.00%|    else:
   557|         0|            0|            0|  0.00%|        raise Exception
   558|         0|            0|            0|  0.00%|
   559|         1|  7.15256e-06|  7.15256e-06|  0.00%|    _ = show_batch(segmentation.integer_mask,
   560|         1|  4.76837e-06|  4.76837e-06|  0.00%|                   n_padding=4,
   561|         1|  5.72205e-06|  5.72205e-06|  0.00%|                   figsize=(12, 12),
   562|         1|  5.96046e-06|  5.96046e-06|  0.00%|                   title='integer_mask, '+title_postfix,
   563|         1|  3.71933e-05|  3.71933e-05|  0.00%|                   neptune_name=prefix+"integer_mask"+postfix)
(call)|         1|      2.19913|      2.19913|  0.60%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_visualization.py:166 show_batch
   564|         1|  1.21593e-05|  1.21593e-05|  0.00%|    _ = show_batch(segmentation.fg_prob,
   565|         1|  6.19888e-06|  6.19888e-06|  0.00%|                   n_padding=4,
   566|         1|  5.00679e-06|  5.00679e-06|  0.00%|                   figsize=(12, 12),
   567|         1|  5.00679e-06|  5.00679e-06|  0.00%|                   title='fg_prob, '+title_postfix,
   568|         1|   3.6478e-05|   3.6478e-05|  0.00%|                   neptune_name=prefix+"fg_prob"+postfix)
(call)|         1|       2.1865|       2.1865|  0.59%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_visualization.py:166 show_batch
   569|         0|            0|            0|  0.00%|
   570|         1|  1.07288e-05|  1.07288e-05|  0.00%|    if verbose:
   571|         0|            0|            0|  0.00%|        print("leaving plot_segmentation")
   572|         0|            0|            0|  0.00%|
File: <__array_function__ internals>_51
File duration: 0.224459s (0.06%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|      7482|    0.0221429|  2.95949e-06|  0.01%|
(call)|         1|  1.04904e-05|  1.04904e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.01086e-05|  8.01086e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|      7480|    0.0841568|  1.12509e-05|  0.02%|
(call)|      7480|    0.0493851|  6.60228e-06|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/fromnumeric.py:2709 _amin_dispatcher
     5|      7480|      0.02652|  3.54546e-06|  0.01%|
     6|      7480|    0.0916395|  1.22513e-05|  0.02%|
(call)|      7480|     0.627151|  8.38437e-05|  0.17%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/fromnumeric.py:2714 amin
File: <__array_function__ internals>_50
File duration: 0.223434s (0.06%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|      7632|    0.0219722|  2.87895e-06|  0.01%|
(call)|         1|  9.29832e-06|  9.29832e-06|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.67844e-05|  8.67844e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|      7630|     0.082732|   1.0843e-05|  0.02%|
(call)|      7630|    0.0491557|  6.44243e-06|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/fromnumeric.py:2584 _amax_dispatcher
     5|      7630|    0.0267169|  3.50157e-06|  0.01%|
     6|      7630|    0.0920134|  1.20594e-05|  0.03%|
(call)|      7630|     0.619917|  8.12473e-05|  0.17%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/fromnumeric.py:2589 amax
File: <__array_function__ internals>_0
File duration: 0.150655s (0.04%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|      4848|    0.0141728|  2.92343e-06|  0.00%|
(call)|         1|  1.09673e-05|  1.09673e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.75132e-05|  9.75132e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|      4846|    0.0575938|  1.18848e-05|  0.02%|
(call)|      4846|    0.0515416|  1.06359e-05|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/multiarray.py:143 concatenate
     5|      4846|    0.0177617|  3.66523e-06|  0.00%|
     6|      4846|    0.0611265|  1.26138e-05|  0.02%|
(call)|        16|   0.00213742|  0.000133589|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/ma/core.py:2975 __array_finalize__
File: /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities.py
File duration: 0.127472s (0.03%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  4.12464e-05|  2.06232e-05|  0.00%|import json
     2|         1|  9.29832e-06|  9.29832e-06|  0.00%|import torch
     3|         1|  1.26362e-05|  1.26362e-05|  0.00%|import numpy
     4|         1|  5.03063e-05|  5.03063e-05|  0.00%|import dill
(call)|         1|     0.112375|     0.112375|  0.03%|# <frozen importlib._bootstrap>:978 _find_and_load
     5|         1|  4.52995e-05|  4.52995e-05|  0.00%|from typing import Union, Optional, NamedTuple
(call)|         1|  2.02656e-05|  2.02656e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
     6|         1|  2.67029e-05|  2.67029e-05|  0.00%|from collections import OrderedDict
(call)|         1|  3.26633e-05|  3.26633e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
     7|         0|            0|            0|  0.00%|
     8|         1|  8.67844e-05|  8.67844e-05|  0.00%|from .namedtuple import BB
(call)|         1|  1.66893e-05|  1.66893e-05|  0.00%|# <frozen importlib._bootstrap>:416 parent
(call)|         1|      1.32957|      1.32957|  0.36%|# <frozen importlib._bootstrap>:978 _find_and_load
(call)|         1|  1.97887e-05|  1.97887e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
     9|         0|            0|            0|  0.00%|
    10|         0|            0|            0|  0.00%|
    11|         6|  8.96454e-05|  1.49409e-05|  0.00%|def linear_interpolation(t: Union[numpy.array, float], values: tuple, times: tuple) -> Union[numpy.array, float]:
(call)|         2|  0.000697374|  0.000348687|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
    12|         0|            0|            0|  0.00%|    """ Makes an interpolation between (t_in,v_in) and (t_fin,v_fin)
    13|         0|            0|            0|  0.00%|        For time t>t_fin and t<t_in the value of v is clamped to either v_in or v_fin
    14|         0|            0|            0|  0.00%|        Usage:
    15|         0|            0|            0|  0.00%|        epoch = numpy.arange(0,100,1)
    16|         0|            0|            0|  0.00%|        v = linear_interpolation(epoch, values=[0.0,0.5], times=[20,40])
    17|         0|            0|            0|  0.00%|        plt.plot(epoch,v)
    18|         0|            0|            0|  0.00%|    """
    19|         5|  3.76701e-05|  7.53403e-06|  0.00%|    v_in, v_fin = values  # initial and final values
    20|         5|  3.00407e-05|  6.00815e-06|  0.00%|    t_in, t_fin = times   # initial and final times
    21|         0|            0|            0|  0.00%|
    22|         5|   2.5034e-05|  5.00679e-06|  0.00%|    if t_fin >= t_in:
    23|         5|  4.88758e-05|  9.77516e-06|  0.00%|        den = max(t_fin-t_in, 1E-8)
    24|         5|  2.52724e-05|  5.05447e-06|  0.00%|        m = (v_fin-v_in)/den
    25|         5|   4.1008e-05|   8.2016e-06|  0.00%|        v = v_in + m*(t-t_in)
    26|         0|            0|            0|  0.00%|    else:
    27|         0|            0|            0|  0.00%|        raise Exception("t_fin should be greater than t_in")
    28|         0|            0|            0|  0.00%|
    29|         5|  3.17097e-05|  6.34193e-06|  0.00%|    v_min = min(v_in, v_fin)
    30|         5|  2.43187e-05|  4.86374e-06|  0.00%|    v_max = max(v_in, v_fin)
    31|         5|  0.000105143|  2.10285e-05|  0.00%|    return numpy.clip(v, v_min, v_max)
(call)|         5|   0.00348186|  0.000696373|  0.00%|# <__array_function__ internals>_44:2 clip
    32|         0|            0|            0|  0.00%|
    33|         0|            0|            0|  0.00%|
    34|         1|  1.21593e-05|  1.21593e-05|  0.00%|def flatten_list(ll):
    35|         0|            0|            0|  0.00%|    if not ll:  # equivalent to if ll == []
    36|         0|            0|            0|  0.00%|        return ll
    37|         0|            0|            0|  0.00%|    elif isinstance(ll[0], list):
    38|         0|            0|            0|  0.00%|        return flatten_list(ll[0]) + flatten_list(ll[1:])
    39|         0|            0|            0|  0.00%|    else:
    40|         0|            0|            0|  0.00%|        return ll[:1] + flatten_list(ll[1:])
    41|         0|            0|            0|  0.00%|
    42|         0|            0|            0|  0.00%|
    43|        83|  0.000212193|  2.55654e-06|  0.00%|def flatten_dict(dd, separator='_', prefix=''):
    44|       105|  0.000388384|  3.69889e-06|  0.00%|    return {prefix + separator + k if prefix else k: v
    45|        81|  0.000280619|  3.46443e-06|  0.00%|            for kk, vv in dd.items()
    46|       232|   0.00145745|  6.28212e-06|  0.00%|            for k, v in flatten_dict(vv, separator, kk).items()
(call)|        81|   0.00224376|  2.77007e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities.py:43 flatten_dict
    47|        82|  0.000406027|  4.95155e-06|  0.00%|            } if isinstance(dd, dict) else {prefix: dd}
(call)|        12|    0.0027051|  0.000225425|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities.py:44 <dictcomp>
    48|         0|            0|            0|  0.00%|
    49|         0|            0|            0|  0.00%|
    50|         2|  1.45435e-05|  7.27177e-06|  0.00%|def save_obj(obj, path):
    51|         1|   0.00425363|   0.00425363|  0.00%|    with open(path, 'wb') as f:
    52|         1|  1.54972e-05|  1.54972e-05|  0.00%|        torch.save(obj, f,
    53|         1|  5.48363e-06|  5.48363e-06|  0.00%|                   pickle_module=dill,
    54|         1|  4.29153e-06|  4.29153e-06|  0.00%|                   pickle_protocol=2,
    55|         1|    0.0416412|    0.0416412|  0.01%|                   _use_new_zipfile_serialization=True)
(call)|         1|     0.851745|     0.851745|  0.23%|# /opt/anaconda3/lib/python3.7/site-packages/torch/serialization.py:335 save
    56|         0|            0|            0|  0.00%|
    57|         0|            0|            0|  0.00%|
    58|         2|  2.07424e-05|  1.03712e-05|  0.00%|def load_obj(path):
    59|         1|   0.00101161|   0.00101161|  0.00%|    with open(path, 'rb') as f:
    60|         1|  7.79629e-05|  7.79629e-05|  0.00%|        return torch.load(f, pickle_module=dill)
(call)|         1|     0.183358|     0.183358|  0.05%|# /opt/anaconda3/lib/python3.7/site-packages/torch/serialization.py:499 load
    61|         0|            0|            0|  0.00%|
    62|         0|            0|            0|  0.00%|
    63|         2|  4.22001e-05|     2.11e-05|  0.00%|def load_json_as_dict(path):
    64|         1|  4.50611e-05|  4.50611e-05|  0.00%|    with open(path, 'rb') as f:
    65|         1|  5.29289e-05|  5.29289e-05|  0.00%|        return json.load(f)
(call)|         1|  0.000361681|  0.000361681|  0.00%|# /opt/anaconda3/lib/python3.7/json/__init__.py:274 load
    66|         0|            0|            0|  0.00%|
    67|         0|            0|            0|  0.00%|
    68|         1|  9.05991e-06|  9.05991e-06|  0.00%|def save_dict_as_json(my_dict, path):
    69|         0|            0|            0|  0.00%|    with open(path, 'w') as f:
    70|         0|            0|            0|  0.00%|        return json.dump(my_dict, f)
    71|         0|            0|            0|  0.00%|
    72|         0|            0|            0|  0.00%|
    73|         1|   2.5034e-05|   2.5034e-05|  0.00%|def roller_2d(a: torch.tensor, b: Optional[torch.tensor] = None, radius: int = 2):
(call)|         1|  3.19481e-05|  3.19481e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
    74|         0|            0|            0|  0.00%|    """ Performs rolling of the last two spatial dimensions.
    75|         0|            0|            0|  0.00%|        For each point consider half a square. Each pair of points will appear once.
    76|         0|            0|            0|  0.00%|        Number of channels: [(2r+1)**2 - 1]/2
    77|         0|            0|            0|  0.00%|        For example for a radius = 2 the full square is 5x5. The number of pairs is: 12
    78|         0|            0|            0|  0.00%|    """
    79|         0|            0|            0|  0.00%|    dxdy_list = []
    80|         0|            0|            0|  0.00%|    for dx in range(0, radius + 1):
    81|         0|            0|            0|  0.00%|        for dy in range(-radius, radius + 1):
    82|         0|            0|            0|  0.00%|            if dx == 0 and dy <= 0:
    83|         0|            0|            0|  0.00%|                continue
    84|         0|            0|            0|  0.00%|            dxdy_list.append((dx, dy))
    85|         0|            0|            0|  0.00%|
    86|         0|            0|            0|  0.00%|    for dxdy in dxdy_list:
    87|         0|            0|            0|  0.00%|        a_tmp = torch.roll(torch.roll(a, dxdy[0], dims=-2), dxdy[1], dims=-1)
    88|         0|            0|            0|  0.00%|        b_tmp = None if b is None else torch.roll(torch.roll(b, dxdy[0], dims=-2), dxdy[1], dims=-1)
    89|         0|            0|            0|  0.00%|        yield a_tmp, b_tmp
    90|         0|            0|            0|  0.00%|
    91|         0|            0|            0|  0.00%|
    92|         7|  6.31809e-05|  9.02585e-06|  0.00%|def append_to_dict(source: Union[tuple, dict],
    93|         0|            0|            0|  0.00%|                   destination: dict,
    94|         0|            0|            0|  0.00%|                   prefix_include: str = None,
    95|         0|            0|            0|  0.00%|                   prefix_exclude: str = None,
    96|         1|  2.88486e-05|  2.88486e-05|  0.00%|                   prefix_to_add: str = None):
(call)|         1|  0.000588894|  0.000588894|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
    97|         0|            0|            0|  0.00%|    """ Use typing.
    98|         0|            0|            0|  0.00%|        For now: prefix_include is str or tuple of str
    99|         0|            0|            0|  0.00%|        For now: prefix_exclude is str or tuple of str
   100|         0|            0|            0|  0.00%|        For now: prefix_to_add is str """
   101|         0|            0|            0|  0.00%|
   102|       122|  0.000440121|  3.60755e-06|  0.00%|    def _get_x_y(_key, _value):
   103|       115|  0.000489235|  4.25422e-06|  0.00%|        if (prefix_include is None or _key.startswith(prefix_include)) and (prefix_exclude is None or
   104|       114|  0.000534296|  4.68681e-06|  0.00%|                                                                            not _key.startswith(prefix_exclude)):
   105|       115|  0.000525236|  4.56727e-06|  0.00%|            x = _key if prefix_to_add is None else prefix_to_add + _key
   106|       115|  0.000431776|  3.75457e-06|  0.00%|            try:
   107|       115|  0.000603199|  5.24521e-06|  0.00%|                y = _value.item()
   108|       115|   0.00045228|  3.93287e-06|  0.00%|            except AttributeError:
   109|       115|  0.000448942|  3.90385e-06|  0.00%|                y = _value
   110|       115|  0.000418425|  3.63847e-06|  0.00%|            return x, y
   111|         0|            0|            0|  0.00%|        else:
   112|         0|            0|            0|  0.00%|            return None, None
   113|         0|            0|            0|  0.00%|
   114|         7|  3.83854e-05|  5.48363e-06|  0.00%|    try:
   115|         8|  7.48634e-05|  9.35793e-06|  0.00%|        for key, value in source.items():
   116|         1|  3.31402e-05|  3.31402e-05|  0.00%|            x, y = _get_x_y(key, value)
(call)|         1|  4.02927e-05|  4.02927e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities.py:102 _get_x_y
   117|         1|  5.96046e-06|  5.96046e-06|  0.00%|            if x is not None:
   118|         1|  7.15256e-06|  7.15256e-06|  0.00%|                destination[x] = destination.get(x, []) + [y]
   119|         0|            0|            0|  0.00%|
   120|         6|  5.19753e-05|  8.66254e-06|  0.00%|    except AttributeError:
   121|       120|  0.000453234|  3.77695e-06|  0.00%|        for key in source._fields:
   122|       114|   0.00055337|  4.85412e-06|  0.00%|            value = getattr(source, key)
   123|       114|   0.00128412|  1.12642e-05|  0.00%|            x, y = _get_x_y(key, value)
(call)|       114|    0.0042491|  3.72728e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities.py:102 _get_x_y
   124|       114|  0.000418901|  3.67457e-06|  0.00%|            if x is not None:
   125|       114|   0.00053668|  4.70772e-06|  0.00%|                destination[x] = destination.get(x, []) + [y]
   126|         0|            0|            0|  0.00%|
   127|         7|   2.5034e-05|  3.57628e-06|  0.00%|    return destination
   128|         0|            0|            0|  0.00%|
   129|         0|            0|            0|  0.00%|
   130|        24|  0.000187874|  7.82808e-06|  0.00%|def compute_ranking(x: torch.Tensor) -> torch.Tensor:
   131|         0|            0|            0|  0.00%|    """ Given a vector of shape: n, batch_size
   132|         0|            0|            0|  0.00%|        For each batch dimension it ranks the n elements"""
   133|        23|  0.000163794|  7.12146e-06|  0.00%|    assert len(x.shape) == 2
   134|        23|  0.000131607|  5.72205e-06|  0.00%|    n, batch_size = x.shape
   135|        23|   0.00213146|  9.26723e-05|  0.00%|    _, order = torch.sort(x, dim=-2, descending=False)
   136|         0|            0|            0|  0.00%|
   137|         0|            0|            0|  0.00%|    # this is the fast way which uses indexing on the left
   138|        23|   0.00116801|  5.07832e-05|  0.00%|    rank = torch.zeros_like(order)
   139|        23|   0.00132775|  5.77284e-05|  0.00%|    batch_index = torch.arange(batch_size, dtype=order.dtype, device=order.device).view(1, -1).expand(n, batch_size)
   140|        23|   0.00252867|  0.000109942|  0.00%|    rank[order, batch_index] = torch.arange(n, dtype=order.dtype, device=order.device).view(-1, 1).expand(n, batch_size)
   141|        23|  0.000231504|  1.00654e-05|  0.00%|    return rank
   142|         0|            0|            0|  0.00%|
   143|         0|            0|            0|  0.00%|
   144|        24|   0.00035882|  1.49508e-05|  0.00%|def compute_average_in_box(imgs: torch.Tensor, bounding_box: BB) -> torch.Tensor:
   145|         0|            0|            0|  0.00%|    """ Input batch of images: batch_size x ch x w x h
   146|         0|            0|            0|  0.00%|        z_where collections of [bx,by,bw,bh]
   147|         0|            0|            0|  0.00%|        bx.shape = batch x n_box
   148|         0|            0|            0|  0.00%|        similarly for by,bw,bh
   149|         0|            0|            0|  0.00%|        Output:
   150|         0|            0|            0|  0.00%|        av_intensity = n_box x batch_size
   151|         0|            0|            0|  0.00%|    """
   152|         0|            0|            0|  0.00%|    # cumulative sum in width and height, standard sum in channels
   153|        23|   0.00269914|  0.000117354|  0.00%|    cum_sum = torch.cumsum(torch.cumsum(imgs.sum(dim=-3), dim=-1), dim=-2)
   154|        23|  0.000344753|  1.49893e-05|  0.00%|    assert len(cum_sum.shape) == 3
   155|        23|  0.000192642|  8.37575e-06|  0.00%|    batch_size, w, h = cum_sum.shape
   156|         0|            0|            0|  0.00%|
   157|         0|            0|            0|  0.00%|    # compute the x1,y1,x3,y3
   158|        23|   0.00377297|  0.000164042|  0.00%|    x1 = (bounding_box.bx - 0.5 * bounding_box.bw).long().clamp(min=0, max=w)
   159|        23|   0.00281024|  0.000122184|  0.00%|    x3 = (bounding_box.bx + 0.5 * bounding_box.bw).long().clamp(min=0, max=w)
   160|        23|   0.00263333|  0.000114493|  0.00%|    y1 = (bounding_box.by - 0.5 * bounding_box.bh).long().clamp(min=0, max=h)
   161|        23|   0.00286579|    0.0001246|  0.00%|    y3 = (bounding_box.by + 0.5 * bounding_box.bh).long().clamp(min=0, max=h)
   162|        23|   0.00038743|  1.68448e-05|  0.00%|    assert x1.shape == x3.shape == y1.shape == y3.shape  # n_boxes, batch_size
   163|         0|            0|            0|  0.00%|
   164|         0|            0|            0|  0.00%|    # compute the area
   165|         0|            0|            0|  0.00%|    # Note that this way penalizes boxes that go out-of-bound
   166|         0|            0|            0|  0.00%|    # This is in contrast to area = (x3-x1)*(y3-y1) which does NOT penalize boxes out of bound
   167|        23|   0.00079751|  3.46744e-05|  0.00%|    area = bounding_box.bw * bounding_box.bh
   168|        23|  0.000281811|  1.22526e-05|  0.00%|    assert area.shape == x1.shape == x3.shape == y1.shape == y3.shape
   169|        23|  0.000166416|  7.23549e-06|  0.00%|    n_boxes, batch_size = area.shape
   170|         0|            0|            0|  0.00%|
   171|         0|            0|            0|  0.00%|    # compute the total intensity in each box
   172|        23|  0.000185728|  8.07513e-06|  0.00%|    b_index = torch.arange(start=0, end=batch_size, step=1, device=x1.device,
   173|        23|   0.00161457|  7.01987e-05|  0.00%|                           dtype=x1.dtype).view(1, -1).expand(n_boxes, -1)
   174|        23|  0.000243425|  1.05837e-05|  0.00%|    assert b_index.shape == x1.shape
   175|         0|            0|            0|  0.00%|
   176|        23|   0.00160789|  6.99085e-05|  0.00%|    x1_ge_1 = (x1 >= 1).float()
(call)|        23|   0.00181699|  7.89995e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/tensor.py:25 wrapped
   177|        23|   0.00123167|  5.35509e-05|  0.00%|    x3_ge_1 = (x3 >= 1).float()
(call)|        23|   0.00113726|  4.94459e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/tensor.py:25 wrapped
   178|        23|   0.00126028|  5.47948e-05|  0.00%|    y1_ge_1 = (y1 >= 1).float()
(call)|        23|   0.00112128|  4.87514e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/tensor.py:25 wrapped
   179|        23|   0.00139475|  6.06412e-05|  0.00%|    y3_ge_1 = (y3 >= 1).float()
(call)|        23|   0.00100684|  4.37757e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/tensor.py:25 wrapped
   180|         0|            0|            0|  0.00%|    tot_intensity = cum_sum[b_index, x3-1, y3-1] * x3_ge_1 * y3_ge_1 + \
   181|         0|            0|            0|  0.00%|                    cum_sum[b_index, x1-1, y1-1] * x1_ge_1 * y1_ge_1 - \
   182|        23|    0.0120239|  0.000522779|  0.00%|                    cum_sum[b_index, x1-1, y3-1] * x1_ge_1 * y3_ge_1 - \
   183|        23|   0.00396276|  0.000172294|  0.00%|                    cum_sum[b_index, x3-1, y1-1] * x3_ge_1 * y1_ge_1
   184|        23|   0.00105691|  4.59526e-05|  0.00%|    return tot_intensity / area
   185|         0|            0|            0|  0.00%|
   186|         0|            0|            0|  0.00%|
   187|        46|  0.000349998|  7.60866e-06|  0.00%|def sample_from_constraints_dict(dict_soft_constraints: dict,
   188|         0|            0|            0|  0.00%|                                 var_name: str,
   189|         0|            0|            0|  0.00%|                                 var_value: torch.Tensor,
   190|         0|            0|            0|  0.00%|                                 verbose: bool = False,
   191|         1|  2.40803e-05|  2.40803e-05|  0.00%|                                 chosen: Optional[int] = None) -> torch.Tensor:
(call)|         1|  2.31266e-05|  2.31266e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
   192|         0|            0|            0|  0.00%|
   193|        46|   0.00189137|  4.11168e-05|  0.00%|    cost = torch.zeros_like(var_value)
   194|        46|  0.000491619|  1.06874e-05|  0.00%|    var_constraint_params = dict_soft_constraints[var_name]
   195|         0|            0|            0|  0.00%|
   196|        46|  0.000262499|   5.7065e-06|  0.00%|    if 'lower_bound_value' in var_constraint_params:
   197|        23|  0.000129223|  5.61839e-06|  0.00%|        left = var_constraint_params['lower_bound_value']
   198|        23|   0.00017333|   7.5361e-06|  0.00%|        width_low = var_constraint_params['lower_bound_width']
   199|        23|  0.000145197|  6.31291e-06|  0.00%|        exponent_low = var_constraint_params['lower_bound_exponent']
   200|        23|  0.000158548|  6.89341e-06|  0.00%|        strength_low = var_constraint_params['lower_bound_strength']
   201|        23|   0.00241351|  0.000104935|  0.00%|        activity_low = torch.clamp(left + width_low - var_value, min=0.) / width_low
(call)|        23|   0.00146222|  6.35748e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/tensor.py:402 __rsub__
   202|        23|   0.00259781|  0.000112948|  0.00%|        cost += strength_low * activity_low.pow(exponent_low)
   203|         0|            0|            0|  0.00%|
   204|        46|  0.000407457|  8.85777e-06|  0.00%|    if 'upper_bound_value' in var_constraint_params:
   205|        23|  0.000113964|  4.95496e-06|  0.00%|        right = var_constraint_params['upper_bound_value']
   206|        23|  0.000150919|  6.56169e-06|  0.00%|        width_up = var_constraint_params['upper_bound_width']
   207|        23|  0.000137568|   5.9812e-06|  0.00%|        exponent_up = var_constraint_params['upper_bound_exponent']
   208|        23|  0.000115156|  5.00679e-06|  0.00%|        strength_up = var_constraint_params['upper_bound_strength']
   209|        23|    0.0030756|  0.000133722|  0.00%|        activity_up = torch.clamp(var_value - right + width_up, min=0.) / width_up
   210|        23|   0.00222087|  9.65595e-05|  0.00%|        cost += strength_up * activity_up.pow(exponent_up)
   211|         0|            0|            0|  0.00%|
   212|        46|  0.000407934|  8.86813e-06|  0.00%|    if 'strength' in var_constraint_params:
   213|        23|  0.000154972|  6.73792e-06|  0.00%|        strength = var_constraint_params['strength']
   214|        23|  0.000124216|   5.4007e-06|  0.00%|        exponent = var_constraint_params['exponent']
   215|        23|   0.00291467|  0.000126725|  0.00%|        cost += strength * var_value.pow(exponent)
   216|         0|            0|            0|  0.00%|
   217|        46|  0.000396729|  8.62453e-06|  0.00%|    if verbose:
   218|         0|            0|            0|  0.00%|        if chosen is None:
   219|         0|            0|            0|  0.00%|            print("constraint name ->", var_name)
   220|         0|            0|            0|  0.00%|            print("input value ->", var_value)
   221|         0|            0|            0|  0.00%|            print("cost ->", cost)
   222|         0|            0|            0|  0.00%|        else:
   223|         0|            0|            0|  0.00%|            print("constraint name ->", var_name)
   224|         0|            0|            0|  0.00%|            print("input value ->", var_value[..., chosen])
   225|         0|            0|            0|  0.00%|            print("cost ->", cost[..., chosen])
   226|         0|            0|            0|  0.00%|
   227|        46|  0.000226259|  4.91868e-06|  0.00%|    return cost
File: <string>_86
File duration: 0.103328s (0.03%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|     28400|     0.103328|   3.6383e-06|  0.03%|
File: <__array_function__ internals>_257
File duration: 0.0998132s (0.03%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|      2943|    0.0102253|  3.47445e-06|  0.00%|
(call)|         1|  1.00136e-05|  1.00136e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  7.89165e-05|  7.89165e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|      2941|    0.0362225|  1.23164e-05|  0.01%|
(call)|      2941|    0.0781794|  2.65826e-05|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/shape_base.py:608 _column_stack_dispatcher
     5|      2941|    0.0108933|  3.70396e-06|  0.00%|
     6|      2941|    0.0424721|  1.44414e-05|  0.01%|
(call)|      2941|     0.356374|  0.000121174|  0.10%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/shape_base.py:612 column_stack
File: <__array_function__ internals>_234
File duration: 0.086803s (0.02%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|      2605|   0.00880384|  3.37959e-06|  0.00%|
(call)|         1|  1.04904e-05|  1.04904e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  7.93934e-05|  7.93934e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|      2603|    0.0320873|  1.23271e-05|  0.01%|
(call)|      2603|    0.0170088|   6.5343e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/stride_tricks.py:200 _broadcast_arrays_dispatcher
     5|      2603|    0.0102727|   3.9465e-06|  0.00%|
     6|      2603|     0.035639|  1.36915e-05|  0.01%|
(call)|      2603|      0.45593|  0.000175156|  0.12%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/stride_tricks.py:204 broadcast_arrays
File: <string>_27
File duration: 0.0787673s (0.02%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|     19154|    0.0787673|  4.11232e-06|  0.02%|
File: <__array_function__ internals>_61
File duration: 0.0661747s (0.02%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|      2142|   0.00688934|  3.21631e-06|  0.00%|
(call)|         1|  9.77516e-06|  9.77516e-06|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000112534|  0.000112534|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|      2140|    0.0253956|  1.18671e-05|  0.01%|
(call)|      2140|    0.0144427|  6.74892e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/fromnumeric.py:3164 _around_dispatcher
     5|      2140|   0.00835419|  3.90383e-06|  0.00%|
     6|      2140|    0.0255356|  1.19325e-05|  0.01%|
(call)|      2140|     0.201789|   9.4294e-05|  0.05%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/fromnumeric.py:3628 round_
File: <__array_function__ internals>_57
File duration: 0.0628729s (0.02%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|      2142|   0.00581479|  2.71465e-06|  0.00%|
(call)|         1|  1.07288e-05|  1.07288e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.91685e-05|  8.91685e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|      2140|    0.0236144|  1.10348e-05|  0.01%|
(call)|      2140|    0.0129101|  6.03277e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/fromnumeric.py:3164 _around_dispatcher
     5|      2140|   0.00814915|  3.80801e-06|  0.00%|
     6|      2140|    0.0252945|  1.18199e-05|  0.01%|
(call)|      2140|    0.0948896|   4.4341e-05|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/fromnumeric.py:3168 around
File: <__array_function__ internals>_47
File duration: 0.0565159s (0.02%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|      1748|   0.00582623|  3.33309e-06|  0.00%|
(call)|         1|  9.77516e-06|  9.77516e-06|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.56059e-05|  9.56059e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|      1746|    0.0212951|  1.21965e-05|  0.01%|
(call)|      1746|    0.0120728|  6.91455e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/fromnumeric.py:2333 _all_dispatcher
     5|      1746|   0.00683427|  3.91424e-06|  0.00%|
     6|      1746|    0.0225604|  1.29212e-05|  0.01%|
(call)|      1746|     0.125701|  7.19935e-05|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/fromnumeric.py:2337 all
File: /home/jupyter/REPOS/spacetx-research/src/MODULES/cropper_uncropper.py
File duration: 0.04972s (0.01%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  3.12328e-05|  1.56164e-05|  0.00%|import torch
     2|         1|  7.15256e-06|  7.15256e-06|  0.00%|import torch.nn.functional as F
     3|         0|            0|            0|  0.00%|
     4|         1|  5.45979e-05|  5.45979e-05|  0.00%|from .namedtuple import BB
(call)|         1|  1.57356e-05|  1.57356e-05|  0.00%|# <frozen importlib._bootstrap>:416 parent
(call)|         1|  2.95639e-05|  2.95639e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
     5|         0|            0|            0|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         3|  5.53131e-05|  1.84377e-05|  0.00%|class Cropper(object):
(call)|         1|  6.58035e-05|  6.58035e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/cropper_uncropper.py:7 Cropper
     8|         0|            0|            0|  0.00%|    """ Use STN to crop out a patch of the original images according to z_where.
     9|         1|  2.02656e-05|  2.02656e-05|  0.00%|        It uses REFLECTION padding """
    10|         0|            0|            0|  0.00%|
    11|         1|  6.19888e-06|  6.19888e-06|  0.00%|    def __init__(self):
    12|         0|            0|            0|  0.00%|        super().__init__()
    13|         0|            0|            0|  0.00%|
    14|        25|  0.000212431|  8.49724e-06|  0.00%|    @staticmethod
    15|         1|  7.15256e-06|  7.15256e-06|  0.00%|    def crop(bounding_box: BB, big_stuff: torch.Tensor, width_small: int, height_small: int) -> torch.Tensor:
    16|         0|            0|            0|  0.00%|
    17|         0|            0|            0|  0.00%|        # Prepare the shapes
    18|        24|  0.000294685|  1.22786e-05|  0.00%|        independent_dim: list = list(big_stuff.shape[:-3])  # this extract n_boxes, batch
    19|        24|  0.000216484|  9.02017e-06|  0.00%|        large_dependent_dim: list = list(big_stuff.shape[-3:])  # ch, width, height
    20|        24|  0.000152111|  6.33796e-06|  0.00%|        ch, width_raw, height_raw = big_stuff.shape[-3:]
    21|        24|  0.000137329|  5.72205e-06|  0.00%|        small_dependent_dim: list = [ch, width_small, height_small]
    22|        24|  0.000200748|  8.36452e-06|  0.00%|        assert independent_dim == list(bounding_box.bx.shape)
    23|         0|            0|            0|  0.00%|
    24|         0|            0|            0|  0.00%|        # Compute the affine matrix
    25|        24|  0.000141382|  5.89093e-06|  0.00%|        affine: torch.Tensor = Cropper.compute_affine_cropper(bounding_box=bounding_box,
    26|        24|  0.000112772|  4.69883e-06|  0.00%|                                                              width_raw=width_raw,
    27|        24|  0.000905037|  3.77099e-05|  0.00%|                                                              height_raw=height_raw)
(call)|        24|    0.0133169|   0.00055487|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/cropper_uncropper.py:43 compute_affine_cropper
    28|         0|            0|            0|  0.00%|
    29|         0|            0|            0|  0.00%|        # The cropped and uncropped imgs have:
    30|         0|            0|            0|  0.00%|        # a. same independent dimension (boxes, batch)
    31|         0|            0|            0|  0.00%|        # b. same channels
    32|         0|            0|            0|  0.00%|        # c. different width and height
    33|         0|            0|            0|  0.00%|        #  Note that I replicate the uncropped image n_boxes times
    34|        24|   0.00560141|  0.000233392|  0.00%|        big_stuff = big_stuff.reshape([-1] + large_dependent_dim)
    35|        24|  0.000302315|  1.25964e-05|  0.00%|        cropped_images: torch.Tensor = torch.zeros(independent_dim + small_dependent_dim,
    36|        24|  0.000231028|  9.62615e-06|  0.00%|                                                   dtype=big_stuff.dtype,
    37|        24|   0.00191665|  7.98603e-05|  0.00%|                                                   device=big_stuff.device).view([-1] + small_dependent_dim)
    38|         0|            0|            0|  0.00%|
    39|        24|  0.000867367|  3.61403e-05|  0.00%|        grid = F.affine_grid(affine, list(cropped_images.shape), align_corners=True)
(call)|        24|   0.00639963|  0.000266651|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/functional.py:3235 affine_grid
    40|        24|  0.000667095|  2.77956e-05|  0.00%|        cropped_images = F.grid_sample(big_stuff, grid, mode='bilinear', padding_mode='reflection', align_corners=True)
(call)|        24|   0.00461149|  0.000192146|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/functional.py:3120 grid_sample
    41|        24|    0.0004673|  1.94709e-05|  0.00%|        return cropped_images.view(independent_dim + small_dependent_dim)
    42|         0|            0|            0|  0.00%|
    43|        25|  0.000148296|  5.93185e-06|  0.00%|    @staticmethod
    44|         1|  7.15256e-06|  7.15256e-06|  0.00%|    def compute_affine_cropper(bounding_box: BB, width_raw: int, height_raw: int) -> torch.Tensor:
    45|         0|            0|            0|  0.00%|        """ Source is UNCROPPED (large) image
    46|         0|            0|            0|  0.00%|            Target is CROPPED (small) image.
    47|         0|            0|            0|  0.00%|
    48|         0|            0|            0|  0.00%|            The equations are:
    49|         0|            0|            0|  0.00%|            | x_s |   | sx  0   kx | | x_t |   | sx  0  | | x_t |   | kx |
    50|         0|            0|            0|  0.00%|            |     | = |            | | y_t | = | 0   sy | | y_t | + | ky |
    51|         0|            0|            0|  0.00%|            | y_s |   | 0   sy  ky | | 1   |
    52|         0|            0|            0|  0.00%|            We can evaluate the expression above at:
    53|         0|            0|            0|  0.00%|            a. target (0,0) <==> source (-1+2*bx_dimfull/WIDTH,-1+2*by_dimfull/HEIGHT)
    54|         0|            0|            0|  0.00%|            b. target (1,1) <==> source (-1+2*(bx_dimfull+0.5*bw_dimfull)/WIDTH,-1+2*(by_dimfull+0.5*bh_dimfull)/HEIGHT)
    55|         0|            0|            0|  0.00%|
    56|         0|            0|            0|  0.00%|            This leads to:
    57|         0|            0|            0|  0.00%|            a. kx = -1+2*bx_dimfull/WIDTH
    58|         0|            0|            0|  0.00%|            b. ky = -1+2*by_dimfull/HEIGHT
    59|         0|            0|            0|  0.00%|            c. sx = bw_dimfull/WIDTH
    60|         0|            0|            0|  0.00%|            d. sy = bh_dimfull/HEIGHT
    61|         0|            0|            0|  0.00%|        """
    62|        24|   0.00359297|  0.000149707|  0.00%|        kx = (-1.0 + 2 * bounding_box.bx / width_raw).view(-1, 1)
    63|        24|   0.00258517|  0.000107716|  0.00%|        ky = (-1.0 + 2 * bounding_box.by / height_raw).view(-1, 1)
    64|        24|    0.0012579|  5.24124e-05|  0.00%|        sx = (bounding_box.bw / width_raw).view(-1, 1)
    65|        24|    0.0011704|  4.87665e-05|  0.00%|        sy = (bounding_box.bh / height_raw).view(-1, 1)
    66|        24|   0.00118351|  4.93129e-05|  0.00%|        zero = torch.zeros_like(kx)
    67|         0|            0|            0|  0.00%|
    68|        24|   0.00338435|  0.000141015|  0.00%|        return torch.cat((sy, zero, ky, zero, sx, kx), dim=-1).view(-1, 2, 3)
    69|         0|            0|            0|  0.00%|
    70|         0|            0|            0|  0.00%|
    71|         3|  6.48499e-05|  2.16166e-05|  0.00%|class Uncropper(object):
(call)|         1|  4.76837e-05|  4.76837e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/cropper_uncropper.py:71 Uncropper
    72|         1|  4.29153e-06|  4.29153e-06|  0.00%|    """ Use STN to uncrop the original images according to z_where. """
    73|         0|            0|            0|  0.00%|
    74|         1|  5.24521e-06|  5.24521e-06|  0.00%|    def __init__(self):
    75|         0|            0|            0|  0.00%|        super().__init__()
    76|         0|            0|            0|  0.00%|
    77|        25|  0.000301361|  1.20544e-05|  0.00%|    @staticmethod
    78|         1|   6.4373e-06|   6.4373e-06|  0.00%|    def uncrop(bounding_box: BB, small_stuff: torch.Tensor, width_big: int, height_big: int) -> torch.Tensor:
    79|         0|            0|            0|  0.00%|
    80|         0|            0|            0|  0.00%|        # Check and prepare the sizes
    81|        24|  0.000266552|  1.11063e-05|  0.00%|        ch: int = small_stuff.shape[-3]  # this is the channels
    82|        24|  0.000300407|   1.2517e-05|  0.00%|        independent_dim: list = list(small_stuff.shape[:-3])  # this includes: boxes, batch
    83|        24|  0.000197172|  8.21551e-06|  0.00%|        small_dependent_dim: list = list(small_stuff.shape[-3:])  # this includes: ch, small_width, small_height
    84|        24|  0.000128508|  5.35448e-06|  0.00%|        large_dependent_dim: list = [ch, width_big, height_big]  # these are the dependent dimensions
    85|        24|  0.000216007|   9.0003e-06|  0.00%|        assert independent_dim == list(bounding_box.bx.shape)
    86|         0|            0|            0|  0.00%|
    87|         0|            0|            0|  0.00%|        # Compute the affine matrix. Note that z_where has only independent dimensions
    88|        24|  0.000146866|  6.11941e-06|  0.00%|        affine_matrix: torch.Tensor = Uncropper.compute_affine_uncropper(bounding_box=bounding_box,
    89|        24|  0.000123024|    5.126e-06|  0.00%|                                                                         width_raw=width_big,
    90|        24|   0.00113797|  4.74155e-05|  0.00%|                                                                         height_raw=height_big).view(independent_dim+[2, 3])
(call)|        24|    0.0165844|  0.000691017|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/cropper_uncropper.py:104 compute_affine_uncropper
    91|         0|            0|            0|  0.00%|
    92|         0|            0|            0|  0.00%|        # The cropped and uncropped imgs have:
    93|         0|            0|            0|  0.00%|        # a. same independent dimension (enumeration, boxes, batch)
    94|         0|            0|            0|  0.00%|        # b. same channels
    95|         0|            0|            0|  0.00%|        # c. different width and height
    96|        24|  0.000213146|  8.88109e-06|  0.00%|        uncropped_stuff: torch.Tensor = torch.zeros(independent_dim + large_dependent_dim,
    97|        24|  0.000201702|  8.40425e-06|  0.00%|                                                    dtype=small_stuff.dtype,
    98|        24|   0.00120854|   5.0356e-05|  0.00%|                                                    device=small_stuff.device).view([-1] + large_dependent_dim)
    99|        24|   0.00106788|  4.44949e-05|  0.00%|        grid = F.affine_grid(affine_matrix.view(-1, 2, 3), list(uncropped_stuff.shape), align_corners=True)
(call)|        24|   0.00603843|  0.000251601|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/functional.py:3235 affine_grid
   100|        24|    0.0004282|  1.78417e-05|  0.00%|        uncropped_stuff = F.grid_sample(small_stuff.view([-1] + small_dependent_dim), grid,
   101|        24|  0.000702381|  2.92659e-05|  0.00%|                                        mode='bilinear', padding_mode='zeros', align_corners=True)
(call)|        24|   0.00408626|  0.000170261|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/functional.py:3120 grid_sample
   102|        24|  0.000464916|  1.93715e-05|  0.00%|        return uncropped_stuff.view(independent_dim + large_dependent_dim)
   103|         0|            0|            0|  0.00%|
   104|        25|  0.000162363|  6.49452e-06|  0.00%|    @staticmethod
   105|         1|  6.67572e-06|  6.67572e-06|  0.00%|    def compute_affine_uncropper(bounding_box: BB, width_raw: int, height_raw: int) -> torch.Tensor:
   106|         0|            0|            0|  0.00%|        """ Source is CROPPED (small) image
   107|         0|            0|            0|  0.00%|            Target is UNCROPPED (large) image.
   108|         0|            0|            0|  0.00%|
   109|         0|            0|            0|  0.00%|            The equations are:
   110|         0|            0|            0|  0.00%|            | x_s |   | sx  0   kx | | x_t |   | sx  0  | | x_t |   | kx |
   111|         0|            0|            0|  0.00%|            |     | = |            | | y_t | = | 0   sy | | y_t | + | ky |
   112|         0|            0|            0|  0.00%|            | y_s |   | 0   sy  ky | | 1   |
   113|         0|            0|            0|  0.00%|            We can evaluate the expression above at:
   114|         0|            0|            0|  0.00%|            a. source (0,0) <==> target (-1+2*bx_dimfull/WIDTH,-1+2*by_dimfull/HEIGHT)
   115|         0|            0|            0|  0.00%|            b. source (1,1) <==> target (-1+2*(bx_dimfull+0.5*bw_dimfull)/WIDTH,-1+2*(by_dimfull+0.5*bh_dimfull)/HEIGHT)
   116|         0|            0|            0|  0.00%|
   117|         0|            0|            0|  0.00%|            This leads to:
   118|         0|            0|            0|  0.00%|            a. kx = (WIDTH-2*bx_dimfull)/bw_dimfull
   119|         0|            0|            0|  0.00%|            b. ky = (WIDTH-2*bx_dimfull)/bh_dimfull
   120|         0|            0|            0|  0.00%|            c. sx = WIDTH/bw_dimfull
   121|         0|            0|            0|  0.00%|            d. sy = HEIGHT/bh_dimfull
   122|         0|            0|            0|  0.00%|        """
   123|        24|   0.00279212|  0.000116338|  0.00%|        width_raw_tensor = width_raw * torch.ones_like(bounding_box.bx)
   124|        24|    0.0014956|  6.23167e-05|  0.00%|        height_raw_tensor = height_raw * torch.ones_like(bounding_box.bx)
   125|        24|   0.00298119|  0.000124216|  0.00%|        kx = ((width_raw_tensor - 2.0 * bounding_box.bx) / bounding_box.bw).view(-1, 1)
   126|        24|   0.00241661|  0.000100692|  0.00%|        ky = ((height_raw_tensor - 2.0 * bounding_box.by) / bounding_box.bh).view(-1, 1)
   127|        24|   0.00119638|  4.98494e-05|  0.00%|        sx = (width_raw_tensor / bounding_box.bw).view(-1, 1)
   128|        24|   0.00102282|  4.26173e-05|  0.00%|        sy = (height_raw_tensor / bounding_box.bh).view(-1, 1)
   129|        24|   0.00102687|  4.27862e-05|  0.00%|        zero = torch.zeros_like(kx)
   130|         0|            0|            0|  0.00%|
   131|        24|   0.00349617|  0.000145674|  0.00%|        return torch.cat((sy, zero, ky, zero, sx, kx), dim=-1).view(-1, 2, 3)
File: <__array_function__ internals>_55
File duration: 0.0470738s (0.01%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|      1610|   0.00443578|  2.75514e-06|  0.00%|
(call)|         1|  9.77516e-06|  9.77516e-06|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.29832e-05|  9.29832e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|      1608|    0.0183303|  1.13995e-05|  0.00%|
(call)|      1608|     0.010165|   6.3215e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/fromnumeric.py:3071 _ndim_dispatcher
     5|      1608|   0.00574946|  3.57554e-06|  0.00%|
     6|      1608|    0.0185583|  1.15412e-05|  0.01%|
(call)|      1608|    0.0560319|  3.48457e-05|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/fromnumeric.py:3075 ndim
File: /home/jupyter/REPOS/spacetx-research/src/MODULES/encoders_decoders.py
File duration: 0.0382028s (0.01%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  4.36306e-05|  2.18153e-05|  0.00%|import torch
     2|         1|  9.77516e-06|  9.77516e-06|  0.00%|import torch.nn as nn
     3|         1|  1.38283e-05|  1.38283e-05|  0.00%|import torch.nn.functional as F
     4|         1|  4.55379e-05|  4.55379e-05|  0.00%|from typing import Optional
(call)|         1|  2.43187e-05|  2.43187e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
     5|         0|            0|            0|  0.00%|
     6|         1|  5.48363e-05|  5.48363e-05|  0.00%|from .namedtuple import ZZ
(call)|         1|  2.02656e-05|  2.02656e-05|  0.00%|# <frozen importlib._bootstrap>:416 parent
(call)|         1|  1.71661e-05|  1.71661e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
     7|         0|            0|            0|  0.00%|
     8|         1|  1.21593e-05|  1.21593e-05|  0.00%|EPS_STD = 1E-3  # standard_deviation = F.softplus(x) + EPS_STD >= EPS_STD
     9|         0|            0|            0|  0.00%|
    10|         0|            0|            0|  0.00%|
    11|         3|  6.77109e-05|  2.25703e-05|  0.00%|class MLP_1by1(nn.Module):
(call)|         1|  3.29018e-05|  3.29018e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/encoders_decoders.py:11 MLP_1by1
    12|         1|   3.8147e-06|   3.8147e-06|  0.00%|    """ Use 1x1 convolution, if ch_hidden <= 0 there is NO hidden layer """
    13|         5|   3.8147e-05|  7.62939e-06|  0.00%|    def __init__(self, ch_in: int, ch_out: int, ch_hidden: int):
    14|         4|  5.22137e-05|  1.30534e-05|  0.00%|        super().__init__()
(call)|         4|   0.00196433|  0.000491083|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:71 __init__
    15|         4|  1.81198e-05|  4.52995e-06|  0.00%|        if ch_hidden <= 0:
    16|         2|  5.10216e-05|  2.55108e-05|  0.00%|            self.mlp_1by1 = nn.Conv2d(ch_in, ch_out, kernel_size=1, stride=1, padding=0, bias=True)
(call)|         2|   0.00492096|   0.00246048|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/conv.py:329 __init__
(call)|         2|   0.00015378|    7.689e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    17|         0|            0|            0|  0.00%|        else:
    18|         2|  7.86781e-06|  3.93391e-06|  0.00%|            self.mlp_1by1 = nn.Sequential(
    19|         2|  3.71933e-05|  1.85966e-05|  0.00%|                nn.Conv2d(ch_in, ch_hidden, kernel_size=1, stride=1, padding=0, bias=True),
(call)|         2|    0.0052526|    0.0026263|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/conv.py:329 __init__
    20|         2|   3.0756e-05|   1.5378e-05|  0.00%|                nn.ReLU(inplace=True),
(call)|         2|   0.00117803|  0.000589013|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/activation.py:89 __init__
    21|         2|  7.29561e-05|   3.6478e-05|  0.00%|                nn.Conv2d(ch_hidden, ch_out, kernel_size=1, stride=1, padding=0, bias=True)
(call)|         2|   0.00507951|   0.00253975|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/conv.py:329 __init__
(call)|         2|   0.00160408|   0.00080204|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/container.py:47 __init__
(call)|         2|  0.000149965|  7.49826e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    22|         0|            0|            0|  0.00%|            )
    23|         0|            0|            0|  0.00%|
    24|        97|  0.000300169|  3.09453e-06|  0.00%|    def forward(self, x: torch.Tensor) -> torch.Tensor:
    25|        96|   0.00229001|  2.38543e-05|  0.00%|        return self.mlp_1by1(x)
(call)|        96|   0.00392056|  4.08391e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:580 __getattr__
(call)|        96|    0.0549884|  0.000572796|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:540 __call__
    26|         0|            0|            0|  0.00%|
    27|         0|            0|            0|  0.00%|
    28|         3|  8.24928e-05|  2.74976e-05|  0.00%|class PredictBackground(nn.Module):
(call)|         1|  7.65324e-05|  7.65324e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/encoders_decoders.py:28 PredictBackground
    29|         1|  4.05312e-06|  4.05312e-06|  0.00%|    """ Predict the bg_mu in (0,1) by applying sigmoid"""
    30|         2|  2.12193e-05|  1.06096e-05|  0.00%|    def __init__(self, ch_in: int, ch_out: int, ch_hidden: Optional[int] = None):
(call)|         1|  3.12328e-05|  3.12328e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
    31|         1|  1.38283e-05|  1.38283e-05|  0.00%|        super().__init__()
(call)|         1|  0.000535727|  0.000535727|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:71 __init__
    32|         1|  1.50204e-05|  1.50204e-05|  0.00%|        self.ch_out = ch_out
(call)|         1|  5.19753e-05|  5.19753e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    33|         1|  5.00679e-06|  5.00679e-06|  0.00%|        ch_hidden = (ch_in + ch_out) // 2 if ch_hidden is None else ch_hidden
    34|         1|  3.33786e-05|  3.33786e-05|  0.00%|        self.predict = MLP_1by1(ch_in=ch_in, ch_out=2*ch_out, ch_hidden=ch_hidden)
(call)|         1|    0.0030725|    0.0030725|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/encoders_decoders.py:13 __init__
(call)|         1|  6.79493e-05|  6.79493e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    35|         0|            0|            0|  0.00%|
    36|        25|  0.000128031|  5.12123e-06|  0.00%|    def forward(self, x: torch.Tensor) -> ZZ:
    37|        24|   0.00100517|  4.18822e-05|  0.00%|        mu, std = torch.split(self.predict(x), self.ch_out, dim=-3)
(call)|        24|   0.00102115|  4.25478e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:580 __getattr__
(call)|        24|     0.011199|  0.000466625|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:540 __call__
(call)|        24|   0.00240326|  0.000100136|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/functional.py:65 split
    38|        24|   0.00318885|  0.000132869|  0.00%|        return ZZ(mu=mu, std=F.softplus(std) + EPS_STD)
(call)|        24|  0.000417948|  1.74145e-05|  0.00%|# <string>_116:1 __new__
    39|         0|            0|            0|  0.00%|
    40|         0|            0|            0|  0.00%|
    41|         3|  9.41753e-05|  3.13918e-05|  0.00%|class Encoder1by1(nn.Module):
(call)|         1|  9.17912e-05|  9.17912e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/encoders_decoders.py:41 Encoder1by1
    42|         3|  3.71933e-05|  1.23978e-05|  0.00%|    def __init__(self, ch_in: int, dim_z: int, ch_hidden: Optional[int] = None):
(call)|         1|  3.91006e-05|  3.91006e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
    43|         2|  2.64645e-05|  1.32322e-05|  0.00%|        super().__init__()
(call)|         2|   0.00102592|  0.000512958|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:71 __init__
    44|         2|  2.55108e-05|  1.27554e-05|  0.00%|        self.dim_z = dim_z
(call)|         2|  9.13143e-05|  4.56572e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    45|         2|  9.77516e-06|  4.88758e-06|  0.00%|        ch_hidden = (ch_in + self.dim_z) // 2 if ch_hidden is None else ch_hidden
    46|         2|  4.98295e-05|  2.49147e-05|  0.00%|        self.predict = MLP_1by1(ch_in=ch_in, ch_out=2*self.dim_z, ch_hidden=ch_hidden)
(call)|         2|    0.0144358|   0.00721788|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/encoders_decoders.py:13 __init__
(call)|         2|  0.000209808|  0.000104904|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    47|         0|            0|            0|  0.00%|
    48|        49|  0.000211954|  4.32559e-06|  0.00%|    def forward(self, x: torch.Tensor) -> ZZ:
    49|        48|   0.00172567|  3.59515e-05|  0.00%|        mu, std = torch.split(self.predict(x), self.dim_z, dim=-3)
(call)|        48|   0.00215602|  4.49171e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:580 __getattr__
(call)|        48|    0.0451646|  0.000940929|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:540 __call__
(call)|        48|   0.00358748|  7.47393e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/functional.py:65 split
    50|         0|            0|            0|  0.00%|        # Apply non-linearity and return
    51|        48|   0.00525355|  0.000109449|  0.00%|        return ZZ(mu=mu, std=F.softplus(std) + EPS_STD)
(call)|        48|  0.000751257|  1.56512e-05|  0.00%|# <string>_116:1 __new__
    52|         0|            0|            0|  0.00%|
    53|         0|            0|            0|  0.00%|
    54|         3|  8.17776e-05|  2.72592e-05|  0.00%|class Decoder1by1Linear(nn.Module):
(call)|         1|  3.21865e-05|  3.21865e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/encoders_decoders.py:54 Decoder1by1Linear
    55|         3|  1.28746e-05|  4.29153e-06|  0.00%|    def __init__(self, dim_z: int, ch_out: int, groups: int):
    56|         2|   2.6226e-05|   1.3113e-05|  0.00%|        super().__init__()
(call)|         2|   0.00105906|  0.000529528|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:71 __init__
    57|         0|            0|            0|  0.00%|        # if groups=1 all inputs convolved to produce all outputs
    58|         0|            0|            0|  0.00%|        # if groups=in_channels each channel is convolved with its set of filters
    59|         2|  1.00136e-05|  5.00679e-06|  0.00%|        self.predict = nn.Conv2d(dim_z,
    60|         2|  1.04904e-05|  5.24521e-06|  0.00%|                                 ch_out,
    61|         2|  1.00136e-05|  5.00679e-06|  0.00%|                                 kernel_size=1,
    62|         2|  6.91414e-06|  3.45707e-06|  0.00%|                                 stride=1,
    63|         2|  6.91414e-06|  3.45707e-06|  0.00%|                                 padding=0,
    64|         2|  7.15256e-06|  3.57628e-06|  0.00%|                                 bias=True,
    65|         2|  4.98295e-05|  2.49147e-05|  0.00%|                                 groups=groups)
(call)|         2|   0.00500154|   0.00250077|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/conv.py:329 __init__
(call)|         2|  0.000185728|   9.2864e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    66|         0|            0|            0|  0.00%|
    67|        49|  0.000193357|  3.94607e-06|  0.00%|    def forward(self, x: torch.Tensor) -> torch.Tensor:
    68|        48|   0.00130844|  2.72592e-05|  0.00%|        return self.predict(x)
(call)|        48|   0.00205159|  4.27415e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:580 __getattr__
(call)|        48|    0.0149989|  0.000312477|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:540 __call__
    69|         0|            0|            0|  0.00%|
    70|         0|            0|            0|  0.00%|
    71|         3|  6.22272e-05|  2.07424e-05|  0.00%|class DecoderConv(nn.Module):
(call)|         1|  3.33786e-05|  3.33786e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/encoders_decoders.py:71 DecoderConv
    72|         0|            0|            0|  0.00%|    """ Decode z -> x
    73|         0|            0|            0|  0.00%|        INPUT:  z of shape: ..., dim_z
    74|         0|            0|            0|  0.00%|        OUTPUT: image of shape: ..., ch_out, width, height
    75|         0|            0|            0|  0.00%|        where ... are all the independent dimensions, i.e. box, batch_size, enumeration_dim etc.
    76|         1|   3.8147e-06|   3.8147e-06|  0.00%|    """
    77|         0|            0|            0|  0.00%|
    78|         2|  1.28746e-05|   6.4373e-06|  0.00%|    def __init__(self, size: int, dim_z: int, ch_out: int):
    79|         1|  1.54972e-05|  1.54972e-05|  0.00%|        super().__init__()
(call)|         1|  0.000501394|  0.000501394|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:71 __init__
    80|         1|  1.40667e-05|  1.40667e-05|  0.00%|        self.width = size
(call)|         1|  4.26769e-05|  4.26769e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    81|         1|  5.00679e-06|  5.00679e-06|  0.00%|        assert self.width == 28
    82|         1|  1.28746e-05|  1.28746e-05|  0.00%|        self.dim_z: int = dim_z
(call)|         1|  7.77245e-05|  7.77245e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    83|         1|   1.3113e-05|   1.3113e-05|  0.00%|        self.ch_out: int = ch_out
(call)|         1|  4.64916e-05|  4.64916e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    84|         1|  2.69413e-05|  2.69413e-05|  0.00%|        self.upsample = nn.Linear(self.dim_z, 64 * 7 * 7)
(call)|         1|    0.0017252|    0.0017252|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/linear.py:68 __init__
(call)|         1|  7.31945e-05|  7.31945e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    85|         1|  5.24521e-06|  5.24521e-06|  0.00%|        self.decoder = nn.Sequential(
    86|         1|  1.71661e-05|  1.71661e-05|  0.00%|            torch.nn.ConvTranspose2d(64, 32, 4, 2, 1),  # B,  64,  14,  14
(call)|         1|   0.00290561|   0.00290561|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/conv.py:769 __init__
    87|         1|  1.69277e-05|  1.69277e-05|  0.00%|            torch.nn.ReLU(inplace=True),
(call)|         1|  0.000625134|  0.000625134|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/activation.py:89 __init__
    88|         1|  1.85966e-05|  1.85966e-05|  0.00%|            torch.nn.ConvTranspose2d(32, 32, 4, 2, 1, 1),  # B,  32, 28, 28
(call)|         1|   0.00270772|   0.00270772|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/conv.py:769 __init__
    89|         1|  1.74046e-05|  1.74046e-05|  0.00%|            torch.nn.ReLU(inplace=True),
(call)|         1|  0.000571012|  0.000571012|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/activation.py:89 __init__
    90|         1|  3.98159e-05|  3.98159e-05|  0.00%|            torch.nn.ConvTranspose2d(32, self.ch_out, 4, 1, 2)  # B, ch, 28, 28
(call)|         1|   0.00245404|   0.00245404|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/conv.py:769 __init__
(call)|         1|   0.00105953|   0.00105953|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/container.py:47 __init__
(call)|         1|  7.10487e-05|  7.10487e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    91|         0|            0|            0|  0.00%|        )
    92|         0|            0|            0|  0.00%|
    93|        25|  0.000191212|  7.64847e-06|  0.00%|    def forward(self, z: torch.Tensor) -> torch.Tensor:
    94|        24|  0.000235319|  9.80496e-06|  0.00%|        independent_dim = list(z.shape[:-1])
    95|        24|   0.00133204|  5.55019e-05|  0.00%|        x1 = self.upsample(z.view(-1, self.dim_z)).view(-1, 64, 7, 7)
(call)|        24|   0.00103879|  4.32829e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:580 __getattr__
(call)|        24|   0.00873494|  0.000363956|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:540 __call__
    96|        24|     0.011724|    0.0004885|  0.00%|        return self.decoder(x1).view(independent_dim + [self.ch_out, self.width, self.width])
(call)|        24|   0.00102472|  4.26968e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:580 __getattr__
(call)|        24|      6.99072|      0.29128|  1.90%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:540 __call__
    97|         0|            0|            0|  0.00%|
    98|         0|            0|            0|  0.00%|
    99|         3|  6.07967e-05|  2.02656e-05|  0.00%|class EncoderConv(nn.Module):
(call)|         1|  3.19481e-05|  3.19481e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/encoders_decoders.py:99 EncoderConv
   100|         0|            0|            0|  0.00%|    """ Encode x -> z_mu, z_std
   101|         0|            0|            0|  0.00%|        INPUT  x of shape: ..., ch_raw_image, width, height
   102|         0|            0|            0|  0.00%|        OUTPUT z_mu, z_std of shape: ..., latent_dim
   103|         0|            0|            0|  0.00%|        where ... are all the independent dimensions, i.e. box, batch_size, enumeration_dim etc.
   104|         1|   3.8147e-06|   3.8147e-06|  0.00%|    """
   105|         0|            0|            0|  0.00%|
   106|         2|  2.59876e-05|  1.29938e-05|  0.00%|    def __init__(self, size: int, ch_in: int, dim_z: int):
   107|         1|   3.0756e-05|   3.0756e-05|  0.00%|        super().__init__()
(call)|         1|   0.00055337|   0.00055337|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:71 __init__
   108|         1|  1.43051e-05|  1.43051e-05|  0.00%|        self.ch_in: int = ch_in
(call)|         1|  4.62532e-05|  4.62532e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
   109|         1|  1.45435e-05|  1.45435e-05|  0.00%|        self.width: int = size
(call)|         1|  4.74453e-05|  4.74453e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
   110|         1|  5.00679e-06|  5.00679e-06|  0.00%|        assert self.width == 28
   111|         1|  1.33514e-05|  1.33514e-05|  0.00%|        self.dim_z = dim_z
(call)|         1|  4.22001e-05|  4.22001e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
   112|         0|            0|            0|  0.00%|
   113|         0|            0|            0|  0.00%|        #TODO FROM HERE DO 56x56 ENCODER
   114|         1|  5.48363e-06|  5.48363e-06|  0.00%|        self.conv = nn.Sequential(
   115|         1|  1.81198e-05|  1.81198e-05|  0.00%|            torch.nn.Conv2d(self.ch_in, 32, 4, 1, 2),  # B, 32, 28, 28
(call)|         1|   0.00273871|   0.00273871|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/conv.py:329 __init__
   116|         1|  1.78814e-05|  1.78814e-05|  0.00%|            torch.nn.ReLU(inplace=True),
(call)|         1|  0.000603676|  0.000603676|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/activation.py:89 __init__
   117|         1|  1.93119e-05|  1.93119e-05|  0.00%|            torch.nn.Conv2d(32, 32, 4, 2, 1),  # B, 32, 14, 14
(call)|         1|   0.00269508|   0.00269508|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/conv.py:329 __init__
   118|         1|  1.81198e-05|  1.81198e-05|  0.00%|            torch.nn.ReLU(inplace=True),
(call)|         1|   0.00059247|   0.00059247|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/activation.py:89 __init__
   119|         1|  3.91006e-05|  3.91006e-05|  0.00%|            torch.nn.Conv2d(32, 64, 4, 2, 1),  # B, 64,  7, 7
(call)|         1|   0.00287223|   0.00287223|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/conv.py:329 __init__
(call)|         1|   0.00103712|   0.00103712|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/container.py:47 __init__
(call)|         1|  7.51019e-05|  7.51019e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
   120|         0|            0|            0|  0.00%|        )
   121|         1|  2.76566e-05|  2.76566e-05|  0.00%|        self.compute_mu = nn.Linear(64 * 7 * 7, self.dim_z)
(call)|         1|   0.00175214|   0.00175214|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/linear.py:68 __init__
(call)|         1|  7.70092e-05|  7.70092e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
   122|         1|  4.22001e-05|  4.22001e-05|  0.00%|        self.compute_std = nn.Linear(64 * 7 * 7, self.dim_z)
(call)|         1|   0.00169611|   0.00169611|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/linear.py:68 __init__
(call)|         1|  7.51019e-05|  7.51019e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
   123|         0|            0|            0|  0.00%|
   124|        25|  0.000162363|  6.49452e-06|  0.00%|    def forward(self, x: torch.Tensor) -> ZZ:  # this is right
   125|         0|            0|            0|  0.00%|
   126|        24|  0.000263214|  1.09673e-05|  0.00%|        independent_dim = list(x.shape[:-3])  # this might includes: enumeration, n_boxes, batch_size
   127|        24|  0.000182629|  7.60953e-06|  0.00%|        dependent_dim = list(x.shape[-3:])  # this includes: ch, width, height
   128|         0|            0|            0|  0.00%|        # assert dependent_dim == [self.ch_raw_image, self.width, self.width]
   129|        24|  0.000415802|  1.73251e-05|  0.00%|        x1 = x.view([-1] + dependent_dim)  # flatten the independent dimensions
   130|        24|   0.00117064|  4.87765e-05|  0.00%|        x2 = self.conv(x1).view(-1, 64 * 7 * 7)  # flatten the dependent dimension
(call)|        24|   0.00106406|  4.43359e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:580 __getattr__
(call)|        24|    0.0398138|   0.00165891|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:540 __call__
   131|        24|   0.00112176|    4.674e-05|  0.00%|        mu = self.compute_mu(x2).view(independent_dim + [self.dim_z])
(call)|        24|   0.00107837|   4.4932e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:580 __getattr__
(call)|        24|    0.0100749|  0.000419786|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:540 __call__
   132|        24|    0.0021863|  9.10958e-05|  0.00%|        std = F.softplus(self.compute_std(x2)).view(independent_dim + [self.dim_z])
(call)|        24|   0.00108123|  4.50512e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:580 __getattr__
(call)|        24|   0.00816345|  0.000340144|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:540 __call__
   133|        24|   0.00162506|  6.77109e-05|  0.00%|        return ZZ(mu=mu, std=std + EPS_STD)
(call)|        24|  0.000355482|  1.48118e-05|  0.00%|# <string>_116:1 __new__
   134|         0|            0|            0|  0.00%|
   135|         0|            0|            0|  0.00%|
   136|         3|   5.8651e-05|  1.95503e-05|  0.00%|class DecoderConvLeaky(nn.Module):
(call)|         1|  3.19481e-05|  3.19481e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/encoders_decoders.py:136 DecoderConvLeaky
   137|         0|            0|            0|  0.00%|    """ Decode z -> x
   138|         0|            0|            0|  0.00%|        INPUT:  z of shape: ..., dim_z
   139|         0|            0|            0|  0.00%|        OUTPUT: image of shape: ..., ch_out, width, height
   140|         0|            0|            0|  0.00%|        where ... are all the independent dimensions, i.e. box, batch_size, enumeration_dim etc.
   141|         1|   3.8147e-06|   3.8147e-06|  0.00%|    """
   142|         1|  5.24521e-06|  5.24521e-06|  0.00%|    def __init__(self, size: int, dim_z: int, ch_out: int):
   143|         0|            0|            0|  0.00%|        super().__init__()
   144|         0|            0|            0|  0.00%|        self.width = size
   145|         0|            0|            0|  0.00%|        self.dim_z: int = dim_z
   146|         0|            0|            0|  0.00%|        self.ch_out: int = ch_out
   147|         0|            0|            0|  0.00%|        assert self.width == 64
   148|         0|            0|            0|  0.00%|
   149|         0|            0|            0|  0.00%|        # Preparation
   150|         0|            0|            0|  0.00%|        modules = []
   151|         0|            0|            0|  0.00%|        hidden_dims = [32, 64, 128, 256, 512]
   152|         0|            0|            0|  0.00%|
   153|         0|            0|            0|  0.00%|        self.decoder_input = nn.Linear(dim_z, hidden_dims[-1] * 4)
   154|         0|            0|            0|  0.00%|
   155|         0|            0|            0|  0.00%|        hidden_dims.reverse()
   156|         0|            0|            0|  0.00%|
   157|         0|            0|            0|  0.00%|        for i in range(len(hidden_dims) - 1):
   158|         0|            0|            0|  0.00%|            modules.append(
   159|         0|            0|            0|  0.00%|                nn.Sequential(
   160|         0|            0|            0|  0.00%|                    nn.ConvTranspose2d(hidden_dims[i],
   161|         0|            0|            0|  0.00%|                                       hidden_dims[i + 1],
   162|         0|            0|            0|  0.00%|                                       kernel_size=3,
   163|         0|            0|            0|  0.00%|                                       stride=2,
   164|         0|            0|            0|  0.00%|                                       padding=1,
   165|         0|            0|            0|  0.00%|                                       output_padding=1),
   166|         0|            0|            0|  0.00%|                    nn.BatchNorm2d(hidden_dims[i + 1]),
   167|         0|            0|            0|  0.00%|                    nn.LeakyReLU(inplace=True))
   168|         0|            0|            0|  0.00%|            )
   169|         0|            0|            0|  0.00%|        self.decoder = nn.Sequential(*modules)
   170|         0|            0|            0|  0.00%|        self.final_layer = nn.Sequential(
   171|         0|            0|            0|  0.00%|                            nn.ConvTranspose2d(hidden_dims[-1],
   172|         0|            0|            0|  0.00%|                                               hidden_dims[-1],
   173|         0|            0|            0|  0.00%|                                               kernel_size=3,
   174|         0|            0|            0|  0.00%|                                               stride=2,
   175|         0|            0|            0|  0.00%|                                               padding=1,
   176|         0|            0|            0|  0.00%|                                               output_padding=1),
   177|         0|            0|            0|  0.00%|                            nn.BatchNorm2d(hidden_dims[-1]),
   178|         0|            0|            0|  0.00%|                            nn.LeakyReLU(inplace=True),
   179|         0|            0|            0|  0.00%|                            nn.Conv2d(hidden_dims[-1], out_channels=ch_out, kernel_size=3, padding=1))
   180|         0|            0|            0|  0.00%|
   181|         1|  5.96046e-06|  5.96046e-06|  0.00%|    def forward(self, z: torch.Tensor) -> torch.Tensor:
   182|         0|            0|            0|  0.00%|        independent_dim = list(z.shape[:-1])
   183|         0|            0|            0|  0.00%|        x1 = self.decoder_input(z.view(-1, self.dim_z)).view(-1, 512, 2, 2)
   184|         0|            0|            0|  0.00%|        x2 = self.decoder(x1)
   185|         0|            0|            0|  0.00%|        return self.final_layer(x2).view(independent_dim + [self.ch_out, self.width, self.width])
   186|         0|            0|            0|  0.00%|
   187|         0|            0|            0|  0.00%|
   188|         3|  6.00815e-05|  2.00272e-05|  0.00%|class EncoderConvLeaky(nn.Module):
(call)|         1|  3.29018e-05|  3.29018e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/encoders_decoders.py:188 EncoderConvLeaky
   189|         0|            0|            0|  0.00%|    """ Encode x -> z_mu, z_std
   190|         0|            0|            0|  0.00%|        INPUT  x of shape: ..., ch_raw_image, width, height
   191|         0|            0|            0|  0.00%|        OUTPUT z_mu, z_std of shape: ..., latent_dim
   192|         0|            0|            0|  0.00%|        where ... are all the independent dimensions, i.e. box, batch_size, enumeration_dim etc.
   193|         1|   3.8147e-06|   3.8147e-06|  0.00%|    """
   194|         0|            0|            0|  0.00%|
   195|         1|  5.72205e-06|  5.72205e-06|  0.00%|    def __init__(self, size: int, ch_in: int, dim_z: int):
   196|         0|            0|            0|  0.00%|        super().__init__()
   197|         0|            0|            0|  0.00%|        self.ch_in: int = ch_in
   198|         0|            0|            0|  0.00%|        self.width: int = size
   199|         0|            0|            0|  0.00%|        self.dim_z = dim_z
   200|         0|            0|            0|  0.00%|        assert self.width == 64
   201|         0|            0|            0|  0.00%|
   202|         0|            0|            0|  0.00%|        # Preparation
   203|         0|            0|            0|  0.00%|        modules = []
   204|         0|            0|            0|  0.00%|        hidden_dims = [32, 64, 128, 256, 512]
   205|         0|            0|            0|  0.00%|        in_channels = self.ch_in
   206|         0|            0|            0|  0.00%|
   207|         0|            0|            0|  0.00%|        # Build Encoder
   208|         0|            0|            0|  0.00%|        for h_dim in hidden_dims:
   209|         0|            0|            0|  0.00%|            modules.append(
   210|         0|            0|            0|  0.00%|                nn.Sequential(
   211|         0|            0|            0|  0.00%|                    nn.Conv2d(in_channels, out_channels=h_dim, kernel_size=3, stride=2, padding=1),
   212|         0|            0|            0|  0.00%|                    nn.BatchNorm2d(h_dim),
   213|         0|            0|            0|  0.00%|                    nn.LeakyReLU(inplace=True))
   214|         0|            0|            0|  0.00%|            )
   215|         0|            0|            0|  0.00%|            in_channels = h_dim
   216|         0|            0|            0|  0.00%|
   217|         0|            0|            0|  0.00%|        self.conv = nn.Sequential(*modules)
   218|         0|            0|            0|  0.00%|        x = torch.zeros(1, self.ch_in, self.width, self.width)
   219|         0|            0|            0|  0.00%|        ch_flatten = self.conv(x).flatten(start_dim=1).shape[-1]
   220|         0|            0|            0|  0.00%|        self.compute_mu = nn.Linear(ch_flatten, self.dim_z)
   221|         0|            0|            0|  0.00%|        self.compute_std = nn.Linear(ch_flatten, self.dim_z)
   222|         0|            0|            0|  0.00%|
   223|         1|  6.19888e-06|  6.19888e-06|  0.00%|    def forward(self, x: torch.Tensor) -> ZZ:  # this is right
   224|         0|            0|            0|  0.00%|
   225|         0|            0|            0|  0.00%|        independent_dim = list(x.shape[:-3])  # this might includes: enumeration, n_boxes, batch_size
   226|         0|            0|            0|  0.00%|        dependent_dim = list(x.shape[-3:])  # this includes: ch, width, height
   227|         0|            0|            0|  0.00%|        # assert dependent_dim == [self.ch_raw_image, self.width, self.width]
   228|         0|            0|            0|  0.00%|        x1 = x.view([-1] + dependent_dim)  # flatten the independent dimensions
   229|         0|            0|            0|  0.00%|        x2 = self.conv(x1).flatten(start_dim=1)  # flatten the dependent dimension
   230|         0|            0|            0|  0.00%|        mu = self.compute_mu(x2).view(independent_dim + [self.dim_z])
   231|         0|            0|            0|  0.00%|        std = F.softplus(self.compute_std(x2)).view(independent_dim + [self.dim_z])
   232|         0|            0|            0|  0.00%|        return ZZ(mu=mu, std=std + EPS_STD)
File: <string>_339
File duration: 0.0377333s (0.01%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|      7934|    0.0377333|   4.7559e-06|  0.01%|
File: /home/jupyter/REPOS/spacetx-research/src/MODULES/unet_parts.py
File duration: 0.0358086s (0.01%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.83718e-05|  1.41859e-05|  0.00%|import torch
     2|         1|  7.39098e-06|  7.39098e-06|  0.00%|import torch.nn as nn
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         3|  5.48363e-05|  1.82788e-05|  0.00%|class DoubleConvolutionBlock(nn.Module):
(call)|         1|  3.67165e-05|  3.67165e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/unet_parts.py:5 DoubleConvolutionBlock
     6|         0|            0|            0|  0.00%|    """ [ conv(f=3,p=1,s=1) => BN => ReLU ] x 2
     7|         0|            0|            0|  0.00%|        NOT: [ BN => conv(f=3,p=1,s=1) => ReLU ] x 2
     8|         0|            0|            0|  0.00%|        The spatial extension of the input is unchanged (because f=3, p=1, s=1).
     9|         0|            0|            0|  0.00%|        The convolutional layers have NO bias since they are followed by BATCH NORM
    10|         0|            0|            0|  0.00%|        The number of channels is passed as a parameter: ch_in -> ch_out -> ch_out
    11|         1|  3.57628e-06|  3.57628e-06|  0.00%|    """
    12|         0|            0|            0|  0.00%|    # Is this the way to define class constants?
    13|         1|  4.52995e-06|  4.52995e-06|  0.00%|    PADDING = 1
    14|         1|  5.24521e-06|  5.24521e-06|  0.00%|    FILTER_SIZE = 3
    15|         0|            0|            0|  0.00%|
    16|        10|  4.02927e-05|  4.02927e-06|  0.00%|    def __init__(self, ch_in: int, ch_out: int):
    17|         9|  0.000119925|  1.33249e-05|  0.00%|        super().__init__()
(call)|         9|   0.00470495|  0.000522772|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:71 __init__
    18|         9|  3.83854e-05|  4.26504e-06|  0.00%|        self.double_conv = nn.Sequential(
    19|         9|  0.000188828|  2.09808e-05|  0.00%|            nn.Conv2d(ch_in, ch_out, self.FILTER_SIZE, bias=True, padding=self.PADDING),
(call)|         9|    0.0517046|   0.00574496|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/conv.py:329 __init__
    20|         9|  0.000121355|  1.34839e-05|  0.00%|            nn.ReLU(inplace=True),
(call)|         9|    0.0052774|  0.000586377|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/activation.py:89 __init__
    21|         9|  0.000160217|  1.78019e-05|  0.00%|            nn.Conv2d(ch_out, ch_out, self.FILTER_SIZE, bias=True, padding=self.PADDING),
(call)|         9|    0.0591662|   0.00657402|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/conv.py:329 __init__
    22|         9|  0.000319004|  3.54449e-05|  0.00%|            nn.ReLU(inplace=True)
(call)|         9|   0.00547481|  0.000608312|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/activation.py:89 __init__
(call)|         9|   0.00846696|  0.000940773|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/container.py:47 __init__
(call)|         9|  0.000698328|   7.7592e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    23|         0|            0|            0|  0.00%|        )
    24|         0|            0|            0|  0.00%|
    25|         0|            0|            0|  0.00%|#        self.double_conv = nn.Sequential(
    26|         0|            0|            0|  0.00%|#            nn.ReplicationPad2d(self.PADDING),  # reflection padding
    27|         0|            0|            0|  0.00%|#            nn.Conv2d(ch_in, ch_out, self.FILTER_SIZE, bias=False),
    28|         0|            0|            0|  0.00%|#            nn.BatchNorm2d(ch_out, affine=True, track_running_stats=True),
    29|         0|            0|            0|  0.00%|#            nn.ReLU(inplace=True),
    30|         0|            0|            0|  0.00%|#            nn.ReplicationPad2d(self.PADDING),  # reflection padding
    31|         0|            0|            0|  0.00%|#            nn.Conv2d(ch_out, ch_out, self.FILTER_SIZE, bias=False),
    32|         0|            0|            0|  0.00%|#            nn.BatchNorm2d(ch_out, affine=True, track_running_stats=True),
    33|         0|            0|            0|  0.00%|#            nn.ReLU(inplace=True)
    34|         0|            0|            0|  0.00%|#        )
    35|         0|            0|            0|  0.00%|
    36|       217|  0.000716209|   3.3005e-06|  0.00%|    def forward(self, x, verbose=False):
    37|       216|   0.00496316|  2.29776e-05|  0.00%|        y = self.double_conv(x)
(call)|       216|   0.00901556|  4.17387e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:580 __getattr__
(call)|       216|     0.475804|   0.00220279|  0.13%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:540 __call__
    38|       216|   0.00084424|  3.90852e-06|  0.00%|        if verbose:
    39|         0|            0|            0|  0.00%|            print("input -> output", x.shape, y.shape)
    40|       216|  0.000801802|  3.71204e-06|  0.00%|        return y
    41|         0|            0|            0|  0.00%|
    42|         0|            0|            0|  0.00%|
    43|         3|  4.33922e-05|  1.44641e-05|  0.00%|class DownBlock(nn.Module):
(call)|         1|  2.67029e-05|  2.67029e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/unet_parts.py:43 DownBlock
    44|         0|            0|            0|  0.00%|    """ Performs:  max_pool(2x2) + double_convolutions
    45|         0|            0|            0|  0.00%|        Note that at initialization you need to specify: ch_in, ch_out
    46|         1|   3.8147e-06|   3.8147e-06|  0.00%|    """
    47|         0|            0|            0|  0.00%|
    48|         5|  1.81198e-05|  3.62396e-06|  0.00%|    def __init__(self, ch_in: int, ch_out: int):
    49|         4|  5.10216e-05|  1.27554e-05|  0.00%|        super().__init__()
(call)|         4|   0.00205088|  0.000512719|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:71 __init__
    50|         4|  0.000123978|  3.09944e-05|  0.00%|        self.max_pool_layer = nn.MaxPool2d(2, 2)
(call)|         4|   0.00341272|  0.000853181|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/pooling.py:15 __init__
(call)|         4|  0.000301361|  7.53403e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    51|         4|  0.000104427|  2.61068e-05|  0.00%|        self.double_conv = DoubleConvolutionBlock(ch_in, ch_out)
(call)|         4|    0.0729747|    0.0182437|  0.02%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/unet_parts.py:16 __init__
(call)|         4|  0.000289917|  7.24792e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    52|         0|            0|            0|  0.00%|
    53|        97|  0.000315666|  3.25429e-06|  0.00%|    def forward(self, x0, verbose=False):
    54|         0|            0|            0|  0.00%|
    55|        96|   0.00232244|   2.4192e-05|  0.00%|        x1 = self.max_pool_layer.forward(x0)
(call)|        96|   0.00420904|  4.38442e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:580 __getattr__
(call)|        96|     0.017081|  0.000177927|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/pooling.py:138 forward
    56|        96|   0.00212574|  2.21431e-05|  0.00%|        x2 = self.double_conv.forward(x1)
(call)|        96|   0.00406456|  4.23392e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:580 __getattr__
(call)|        96|     0.129594|   0.00134994|  0.04%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/unet_parts.py:36 forward
    57|         0|            0|            0|  0.00%|
    58|        96|  0.000434637|  4.52747e-06|  0.00%|        if verbose:
    59|         0|            0|            0|  0.00%|            print("input -> output", x0.shape, x2.shape)
    60|         0|            0|            0|  0.00%|
    61|        96|  0.000382423|  3.98358e-06|  0.00%|        return x2
    62|         0|            0|            0|  0.00%|
    63|         0|            0|            0|  0.00%|
    64|         3|  4.00543e-05|  1.33514e-05|  0.00%|class UpBlock(nn.Module):
(call)|         1|  2.57492e-05|  2.57492e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/unet_parts.py:64 UpBlock
    65|         0|            0|            0|  0.00%|    """ Performs: up_conv(f=2,s=2) + concatenation + double_convolutions
    66|         0|            0|            0|  0.00%|        During upconv the channels go from ch_in to ch_in/2
    67|         0|            0|            0|  0.00%|        Since I am concatenating with something which has ch_in/2
    68|         0|            0|            0|  0.00%|        During the double_convolution the channels go from ch_in,ch_out
    69|         0|            0|            0|  0.00%|        Therefore during initialization only ch_in,ch_out of the double convolution need to be specified.
    70|         0|            0|            0|  0.00%|        The forward function takes two tensors: x_from_contracting_path , x_to_upconv
    71|         1|   3.8147e-06|   3.8147e-06|  0.00%|    """
    72|         5|  1.97887e-05|  3.95775e-06|  0.00%|    def __init__(self, ch_in: int, ch_out: int):
    73|         4|  4.93526e-05|  1.23382e-05|  0.00%|        super().__init__()
(call)|         4|   0.00213528|  0.000533819|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:71 __init__
    74|         4|  5.00679e-05|   1.2517e-05|  0.00%|        self.ch_in = ch_in
(call)|         4|  0.000255823|  6.39558e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    75|         4|  0.000109196|  2.72989e-05|  0.00%|        self.up_conv_layer = nn.ConvTranspose2d(ch_in, int(ch_in/2), kernel_size=2, stride=2, padding=0)
(call)|         4|    0.0154579|   0.00386447|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/conv.py:769 __init__
(call)|         4|  0.000363111|  9.07779e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    76|         4|  8.46386e-05|  2.11596e-05|  0.00%|        self.double_conv = DoubleConvolutionBlock(ch_in, ch_out)
(call)|         4|    0.0532649|    0.0133162|  0.01%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/unet_parts.py:16 __init__
(call)|         4|   0.00030756|    7.689e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    77|         0|            0|            0|  0.00%|
    78|        97|  0.000370979|  3.82453e-06|  0.00%|    def forward(self, x_from_compressing_path, x_to_upconv, verbose=False):
    79|        96|   0.00336218|  3.50227e-05|  0.00%|        x = self.up_conv_layer.forward(x_to_upconv)
(call)|        96|   0.00429201|  4.47085e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:580 __getattr__
(call)|        96|    0.0298073|  0.000310493|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/conv.py:781 forward
    80|        96|    0.0133326|  0.000138881|  0.00%|        x1 = torch.cat((x_from_compressing_path, x), dim=-3)  # concatenate along the channel dimension
    81|         0|            0|            0|  0.00%|
    82|        96|   0.00108552|  1.13075e-05|  0.00%|        if verbose:
    83|         0|            0|            0|  0.00%|            print("x_from_compressing_path", x_from_compressing_path.shape)
    84|         0|            0|            0|  0.00%|            print("x_to_upconv", x_to_upconv.shape)
    85|         0|            0|            0|  0.00%|            print("after_upconv", x.shape)
    86|         0|            0|            0|  0.00%|            print("after concat", x1.shape)
    87|         0|            0|            0|  0.00%|            print("ch_in", self.ch_in)
    88|         0|            0|            0|  0.00%|
    89|        96|   0.00253487|  2.64049e-05|  0.00%|        x2 = self.double_conv.forward(x1)
(call)|        96|    0.0043385|  4.51927e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:580 __getattr__
(call)|        96|     0.139345|   0.00145151|  0.04%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/unet_parts.py:36 forward
    90|         0|            0|            0|  0.00%|
    91|        96|  0.000422478|  4.40081e-06|  0.00%|        return x2
File: <__array_function__ internals>_44
File duration: 0.0281689s (0.01%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|       791|   0.00314522|  3.97626e-06|  0.00%|
(call)|         1|  1.26362e-05|  1.26362e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.58443e-05|  9.58443e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|       789|    0.0109844|   1.3922e-05|  0.00%|
(call)|       789|   0.00627184|   7.9491e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/fromnumeric.py:2029 _clip_dispatcher
     5|       789|   0.00316668|  4.01353e-06|  0.00%|
     6|       789|    0.0108726|  1.37802e-05|  0.00%|
(call)|       789|     0.411818|  0.000521949|  0.11%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/fromnumeric.py:2033 clip
File: <__array_function__ internals>_41
File duration: 0.0267067s (0.01%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|       778|   0.00323844|  4.16252e-06|  0.00%|
(call)|         1|  1.00136e-05|  1.00136e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.24928e-05|  8.24928e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|       776|    0.0105045|  1.35367e-05|  0.00%|
(call)|       776|    0.0055356|  7.13351e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/fromnumeric.py:1812 _nonzero_dispatcher
     5|       776|   0.00313425|  4.03898e-06|  0.00%|
     6|       776|   0.00982952|  1.26669e-05|  0.00%|
(call)|       776|    0.0287416|  3.70381e-05|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/fromnumeric.py:1816 nonzero
File: <__array_function__ internals>_66
File duration: 0.0250647s (0.01%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|       656|   0.00184393|  2.81087e-06|  0.00%|
(call)|         1|  2.59876e-05|  2.59876e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.91821e-05|  9.91821e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|       654|    0.0128317|  1.96203e-05|  0.00%|
(call)|       654|   0.00396347|  6.06035e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/shape_base.py:20 _atleast_1d_dispatcher
     5|       654|   0.00235486|   3.6007e-06|  0.00%|
     6|       654|   0.00803423|  1.22848e-05|  0.00%|
(call)|       654|    0.0721834|  0.000110372|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/shape_base.py:24 atleast_1d
File: <__array_function__ internals>_49
File duration: 0.023941s (0.01%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|       650|   0.00254536|  3.91593e-06|  0.00%|
(call)|         1|  1.00136e-05|  1.00136e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.84533e-05|  8.84533e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|       648|    0.0089817|  1.38607e-05|  0.00%|
(call)|       648|   0.00496864|  7.66766e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/fromnumeric.py:2486 _ptp_dispatcher
     5|       648|   0.00281811|  4.34893e-06|  0.00%|
     6|       648|   0.00959587|  1.48084e-05|  0.00%|
(call)|       648|    0.0540688|  8.34395e-05|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/fromnumeric.py:2490 ptp
File: <__array_function__ internals>_48
File duration: 0.0217776s (0.01%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|       672|   0.00235558|  3.50532e-06|  0.00%|
(call)|         1|   1.0252e-05|   1.0252e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.70364e-05|  9.70364e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|       670|   0.00831652|  1.24127e-05|  0.00%|
(call)|       670|   0.00502372|  7.49809e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/fromnumeric.py:2414 _cumsum_dispatcher
     5|       670|   0.00245667|  3.66666e-06|  0.00%|
     6|       670|   0.00864887|  1.29088e-05|  0.00%|
(call)|       670|    0.0712225|  0.000106302|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/fromnumeric.py:2418 cumsum
File: <__array_function__ internals>_231
File duration: 0.0212374s (0.01%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|       738|   0.00235009|  3.18441e-06|  0.00%|
(call)|         1|   1.0252e-05|   1.0252e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000125885|  0.000125885|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|       736|    0.0079658|  1.08231e-05|  0.00%|
(call)|       736|   0.00465822|  6.32911e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/function_base.py:4612 _append_dispatcher
     5|       736|   0.00274873|  3.73468e-06|  0.00%|
     6|       736|   0.00817275|  1.11043e-05|  0.00%|
(call)|       736|     0.106649|  0.000144903|  0.03%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/function_base.py:4616 append
File: /home/jupyter/REPOS/spacetx-research/src/MODULES/unet_model.py
File duration: 0.0210409s (0.01%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.74181e-05|  1.37091e-05|  0.00%|import torch
     2|         1|  5.88894e-05|  5.88894e-05|  0.00%|from .unet_parts import DownBlock, DoubleConvolutionBlock, UpBlock
(call)|         1|  1.33514e-05|  1.33514e-05|  0.00%|# <frozen importlib._bootstrap>:416 parent
(call)|         1|   0.00286674|   0.00286674|  0.00%|# <frozen importlib._bootstrap>:978 _find_and_load
(call)|         1|  2.02656e-05|  2.02656e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
     3|         1|  5.00679e-05|  5.00679e-05|  0.00%|from .encoders_decoders import Encoder1by1, MLP_1by1, PredictBackground
(call)|         1|  1.16825e-05|  1.16825e-05|  0.00%|# <frozen importlib._bootstrap>:416 parent
(call)|         1|   0.00610566|   0.00610566|  0.00%|# <frozen importlib._bootstrap>:978 _find_and_load
(call)|         1|  1.62125e-05|  1.62125e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
     4|         1|  2.12193e-05|  2.12193e-05|  0.00%|from collections import deque
(call)|         1|  3.40939e-05|  3.40939e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
     5|         1|  3.14713e-05|  3.14713e-05|  0.00%|from .namedtuple import UNEToutput
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# <frozen importlib._bootstrap>:416 parent
(call)|         1|  1.35899e-05|  1.35899e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         3|  5.26905e-05|  1.75635e-05|  0.00%|class UNet(torch.nn.Module):
(call)|         1|  3.43323e-05|  3.43323e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/unet_model.py:8 UNet
     9|         2|  1.28746e-05|   6.4373e-06|  0.00%|    def __init__(self, params: dict):
    10|         1|  2.00272e-05|  2.00272e-05|  0.00%|        super().__init__()
(call)|         1|  0.000626564|  0.000626564|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:71 __init__
    11|         0|            0|            0|  0.00%|
    12|         0|            0|            0|  0.00%|        # Parameters UNet
    13|         1|  1.74046e-05|  1.74046e-05|  0.00%|        self.n_max_pool = params["architecture"]["n_max_pool"]
(call)|         1|  4.64916e-05|  4.64916e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    14|         1|   1.7643e-05|   1.7643e-05|  0.00%|        self.level_zwhere_and_logit_output = params["architecture"]["level_zwhere_and_logit_output"]
(call)|         1|  4.50611e-05|  4.50611e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    15|         1|  1.52588e-05|  1.52588e-05|  0.00%|        self.level_background_output = params["architecture"]["level_background_output"]
(call)|         1|  4.31538e-05|  4.31538e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    16|         1|  1.54972e-05|  1.54972e-05|  0.00%|        self.n_ch_output_features = params["architecture"]["n_ch_output_features"]
(call)|         1|  4.33922e-05|  4.33922e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    17|         1|  1.54972e-05|  1.54972e-05|  0.00%|        self.ch_after_first_two_conv = params["architecture"]["n_ch_after_first_two_conv"]
(call)|         1|  4.24385e-05|  4.24385e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    18|         1|  1.54972e-05|  1.54972e-05|  0.00%|        self.dim_zwhere = params["architecture"]["dim_zwhere"]
(call)|         1|  4.29153e-05|  4.29153e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    19|         1|   1.5974e-05|   1.5974e-05|  0.00%|        self.dim_logit = params["architecture"]["dim_logit"]
(call)|         1|  4.86374e-05|  4.86374e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    20|         1|  1.50204e-05|  1.50204e-05|  0.00%|        self.ch_raw_image = params["input_image"]["ch_in"]
(call)|         1|  4.26769e-05|  4.26769e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    21|         0|            0|            0|  0.00%|
    22|         0|            0|            0|  0.00%|        # Initializations
    23|         1|  5.72205e-06|  5.72205e-06|  0.00%|        ch = self.ch_after_first_two_conv
    24|         1|  5.48363e-06|  5.48363e-06|  0.00%|        j = 1
    25|         1|  1.50204e-05|  1.50204e-05|  0.00%|        self.j_list = [j]
(call)|         1|  4.33922e-05|  4.33922e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    26|         1|  1.50204e-05|  1.50204e-05|  0.00%|        self.ch_list = [ch]
(call)|         1|  4.22001e-05|  4.22001e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    27|         0|            0|            0|  0.00%|
    28|         0|            0|            0|  0.00%|        # Down path to center
    29|         1|  6.58035e-05|  6.58035e-05|  0.00%|        self.down_path = torch.nn.ModuleList([DoubleConvolutionBlock(self.ch_raw_image, self.ch_list[-1])])
(call)|         1|    0.0102358|    0.0102358|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/unet_parts.py:16 __init__
(call)|         1|   0.00078702|   0.00078702|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/container.py:128 __init__
(call)|         1|   7.4625e-05|   7.4625e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    30|         5|  2.55108e-05|  5.10216e-06|  0.00%|        for i in range(0, self.n_max_pool):
    31|         4|  1.74046e-05|  4.35114e-06|  0.00%|            j = j * 2
    32|         4|  1.54972e-05|   3.8743e-06|  0.00%|            ch = ch * 2
    33|         4|  1.90735e-05|  4.76837e-06|  0.00%|            self.ch_list.append(ch)
    34|         4|  1.64509e-05|  4.11272e-06|  0.00%|            self.j_list.append(j)
    35|         4|  0.000136375|  3.40939e-05|  0.00%|            self.down_path.append(DownBlock(self.ch_list[-2], self.ch_list[-1]))
(call)|         4|  0.000159025|  3.97563e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:580 __getattr__
(call)|         4|    0.0793219|    0.0198305|  0.02%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/unet_parts.py:48 __init__
(call)|         4|  0.000432491|  0.000108123|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/container.py:191 append
    36|         0|            0|            0|  0.00%|
    37|         0|            0|            0|  0.00%|        # Up path
    38|         1|  2.76566e-05|  2.76566e-05|  0.00%|        self.up_path = torch.nn.ModuleList()
(call)|         1|  0.000512838|  0.000512838|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/container.py:128 __init__
(call)|         1|  7.43866e-05|  7.43866e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    39|         5|  4.48227e-05|  8.96454e-06|  0.00%|        for i in range(0, self.n_max_pool):
    40|         4|  2.00272e-05|  5.00679e-06|  0.00%|            j = int(j // 2)
    41|         4|  1.69277e-05|  4.23193e-06|  0.00%|            ch = int(ch // 2)
    42|         4|  1.97887e-05|  4.94719e-06|  0.00%|            self.ch_list.append(ch)
    43|         4|   1.7643e-05|  4.41074e-06|  0.00%|            self.j_list.append(j)
    44|         4|  0.000128984|  3.22461e-05|  0.00%|            self.up_path.append(UpBlock(self.ch_list[-2], self.ch_list[-1]))
(call)|         4|   0.00016737|  4.18425e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:580 __getattr__
(call)|         4|    0.0720921|     0.018023|  0.02%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/unet_parts.py:72 __init__
(call)|         4|   0.00044322|  0.000110805|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/container.py:191 append
    45|         0|            0|            0|  0.00%|
    46|         0|            0|            0|  0.00%|        # Prediction maps
    47|         1|  4.76837e-06|  4.76837e-06|  0.00%|        self.pred_features = MLP_1by1(ch_in=self.ch_list[-1],
    48|         1|  7.15256e-06|  7.15256e-06|  0.00%|                                      ch_out=self.n_ch_output_features,
    49|         1|    4.673e-05|    4.673e-05|  0.00%|                                      ch_hidden=-1)  # this means there is NO hidden layer
(call)|         1|   0.00309753|   0.00309753|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/encoders_decoders.py:13 __init__
(call)|         1|  7.29561e-05|  7.29561e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    50|         0|            0|            0|  0.00%|
    51|         0|            0|            0|  0.00%|        # self.ch_in_zwhere = min(20, self.ch_list[-self.level_zwhere_and_logit_output - 1])
    52|         1|  1.54972e-05|  1.54972e-05|  0.00%|        self.ch_in_zwhere = self.ch_list[-self.level_zwhere_and_logit_output - 1]
(call)|         1|  5.81741e-05|  5.81741e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    53|         1|  5.48363e-06|  5.48363e-06|  0.00%|        self.encode_zwhere = Encoder1by1(ch_in=self.ch_in_zwhere,
    54|         1|  5.24521e-06|  5.24521e-06|  0.00%|                                         dim_z=self.dim_zwhere,
    55|         1|  3.05176e-05|  3.05176e-05|  0.00%|                                         ch_hidden=None)  # this means there is ONE hidden layer of automatic size
(call)|         1|   0.00806713|   0.00806713|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/encoders_decoders.py:42 __init__
(call)|         1|  7.39098e-05|  7.39098e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    56|         0|            0|            0|  0.00%|
    57|         0|            0|            0|  0.00%|        # self.ch_in_logit = min(20, self.ch_list[-self.level_zwhere_and_logit_output - 1])
    58|         1|  1.85966e-05|  1.85966e-05|  0.00%|        self.ch_in_logit = self.ch_list[-self.level_zwhere_and_logit_output - 1]
(call)|         1|  4.52995e-05|  4.52995e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    59|         1|  5.72205e-06|  5.72205e-06|  0.00%|        self.encode_logit = Encoder1by1(ch_in=self.ch_in_logit,
    60|         1|  5.72205e-06|  5.72205e-06|  0.00%|                                        dim_z=self.dim_logit,
    61|         1|  2.69413e-05|  2.69413e-05|  0.00%|                                        ch_hidden=None)  # this means there is ONE hidden layer of automatic size
(call)|         1|   0.00781536|   0.00781536|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/encoders_decoders.py:42 __init__
(call)|         1|  7.08103e-05|  7.08103e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    62|         0|            0|            0|  0.00%|
    63|         0|            0|            0|  0.00%|        # I don't need all the channels to predict the background. Few channels are enough
    64|         1|  1.95503e-05|  1.95503e-05|  0.00%|        self.ch_in_bg = min(5, self.ch_list[-self.level_background_output - 1])
(call)|         1|  4.62532e-05|  4.62532e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    65|         1|  5.96046e-06|  5.96046e-06|  0.00%|        self.pred_background = PredictBackground(ch_in=self.ch_in_bg,
    66|         1|  5.24521e-06|  5.24521e-06|  0.00%|                                                 ch_out=self.ch_raw_image,
    67|         1|  3.21865e-05|  3.21865e-05|  0.00%|                                                 ch_hidden=-1)  # this means there is NO hidden layer
(call)|         1|   0.00379992|   0.00379992|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/encoders_decoders.py:30 __init__
(call)|         1|  6.86646e-05|  6.86646e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:596 __setattr__
    68|         0|            0|            0|  0.00%|
    69|        25|  0.000189781|  7.59125e-06|  0.00%|    def forward(self, x: torch.Tensor, verbose: bool):
    70|         0|            0|            0|  0.00%|        # input_w, input_h = x.shape[-2:]
    71|        24|   0.00022912|  9.54668e-06|  0.00%|        if verbose:
    72|         0|            0|            0|  0.00%|            print("INPUT ---> shape ", x.shape)
    73|         0|            0|            0|  0.00%|
    74|         0|            0|            0|  0.00%|        # Down path and save the tensor which will need to be concatenated
    75|        24|  0.000200272|  8.34465e-06|  0.00%|        to_be_concatenated = deque()
    76|       144|   0.00143313|  9.95232e-06|  0.00%|        for i, down in enumerate(self.down_path):
(call)|        24|   0.00105953|  4.41472e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:580 __getattr__
(call)|        24|  0.000296354|  1.23481e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/container.py:167 __iter__
    77|       120|    0.0019474|  1.62284e-05|  0.00%|            x = down(x, verbose)
(call)|       120|     0.389723|   0.00324769|  0.11%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:540 __call__
    78|       120|  0.000677109|  5.64257e-06|  0.00%|            if verbose:
    79|         0|            0|            0|  0.00%|                print("down   ", i, " shape ", x.shape)
    80|       120|  0.000668764|  5.57303e-06|  0.00%|            if i < self.n_max_pool:
    81|        96|  0.000561953|  5.85367e-06|  0.00%|                to_be_concatenated.append(x)
    82|        96|  0.000439882|  4.58211e-06|  0.00%|                if verbose:
    83|         0|            0|            0|  0.00%|                    print("appended")
    84|         0|            0|            0|  0.00%|
    85|         0|            0|            0|  0.00%|        # During up path I need to concatenate with the tensor obtained during the down path
    86|         0|            0|            0|  0.00%|        # If distance is < self.n_prediction_maps I need to export a prediction map
    87|        24|  0.000116825|  4.86771e-06|  0.00%|        zwhere, logit, zbg = None, None, None
    88|       120|   0.00112438|  9.36985e-06|  0.00%|        for i, up in enumerate(self.up_path):
(call)|        24|   0.00105929|  4.41372e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:580 __getattr__
(call)|        24|  0.000188351|  7.84794e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/container.py:167 __iter__
    89|        96|  0.000474215|  4.93973e-06|  0.00%|            dist_to_end_of_net = self.n_max_pool - i
    90|        96|  0.000472069|  4.91738e-06|  0.00%|            if dist_to_end_of_net == self.level_zwhere_and_logit_output:
    91|        24|   0.00128007|  5.33362e-05|  0.00%|                zwhere = self.encode_zwhere(x[..., :self.ch_in_zwhere, :, :])
(call)|        24|   0.00107837|   4.4932e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:580 __getattr__
(call)|        24|    0.0307674|   0.00128198|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:540 __call__
    92|        24|   0.00134277|  5.59489e-05|  0.00%|                logit = self.encode_logit(x[..., :self.ch_in_logit, :, :])
(call)|        24|    0.0011127|  4.63625e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:580 __getattr__
(call)|        24|    0.0307729|   0.00128221|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:540 __call__
    93|        96|  0.000468254|  4.87765e-06|  0.00%|            if dist_to_end_of_net == self.level_background_output:
    94|        24|   0.00163555|   6.8148e-05|  0.00%|                zbg = self.pred_background(x[..., :self.ch_in_bg, :, :])  # only few channels needed for predicting bg
(call)|        24|   0.00100255|  4.17729e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:580 __getattr__
(call)|        24|    0.0208378|  0.000868241|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:540 __call__
    95|         0|            0|            0|  0.00%|
    96|        96|   0.00168872|  1.75908e-05|  0.00%|            x = up(to_be_concatenated.pop(), x, verbose)
(call)|        96|     0.203899|   0.00212395|  0.06%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:540 __call__
    97|        96|  0.000460148|  4.79321e-06|  0.00%|            if verbose:
    98|         0|            0|            0|  0.00%|                print("up     ", i, " shape ", x.shape)
    99|         0|            0|            0|  0.00%|
   100|         0|            0|            0|  0.00%|        # always add a pred_map to the rightmost layer (which had distance 0 from the end of the net)
   101|        24|   0.00064683|  2.69512e-05|  0.00%|        features = self.pred_features(x)
(call)|        24|   0.00102592|  4.27465e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:580 __getattr__
(call)|        24|   0.00948262|  0.000395109|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:540 __call__
   102|         0|            0|            0|  0.00%|
   103|        24|  0.000143051|  5.96046e-06|  0.00%|        return UNEToutput(zwhere=zwhere,
   104|        24|  0.000109196|  4.54982e-06|  0.00%|                          logit=logit,
   105|        24|  0.000111103|  4.62929e-06|  0.00%|                          zbg=zbg,
   106|        24|  0.000407457|  1.69774e-05|  0.00%|                          features=features)
(call)|        24|  0.000280142|  1.16726e-05|  0.00%|# <string>_121:1 __new__
   107|         0|            0|            0|  0.00%|
   108|         2|   1.7643e-05|  8.82149e-06|  0.00%|    def show_grid(self, ref_image):
   109|         0|            0|            0|  0.00%|        """ overimpose a grid the size of the corresponding resolution of each unet layer """
   110|         0|            0|            0|  0.00%|
   111|         1|   2.5034e-05|   2.5034e-05|  0.00%|        assert len(ref_image.shape) == 4
   112|         1|  1.26362e-05|  1.26362e-05|  0.00%|        batch, ch, w_raw, h_raw = ref_image.shape
   113|         0|            0|            0|  0.00%|
   114|         1|  1.62125e-05|  1.62125e-05|  0.00%|        nj = len(self.j_list)
   115|         1|  0.000380039|  0.000380039|  0.00%|        check_board = ref_image.new_zeros((nj, 1, 1, w_raw, h_raw))  # for each batch and channel the same check_board
   116|         1|   0.00011301|   0.00011301|  0.00%|        counter_w = torch.arange(w_raw)
   117|         1|   2.5034e-05|   2.5034e-05|  0.00%|        counter_h = torch.arange(h_raw)
   118|         0|            0|            0|  0.00%|
   119|        10|  0.000111103|  1.11103e-05|  0.00%|        for k in range(nj):
   120|         9|  4.57764e-05|  5.08626e-06|  0.00%|            j = self.j_list[k]
   121|         9|  0.000422478|   4.6942e-05|  0.00%|            index_w = 1 + ((counter_w // j) % 2)  # either 1 or 2
(call)|         9|  0.000568151|  6.31279e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/tensor.py:25 wrapped
   122|         9|  0.000283241|  3.14713e-05|  0.00%|            dx = index_w.float().view(w_raw, 1)
   123|         9|  0.000323772|  3.59747e-05|  0.00%|            index_h = 1 + ((counter_h // j) % 2)  # either 1 or 2
(call)|         9|  0.000417948|  4.64386e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/tensor.py:25 wrapped
   124|         9|  0.000181913|  2.02126e-05|  0.00%|            dy = index_h.float().view(1, h_raw)
   125|         9|  0.000909567|  0.000101063|  0.00%|            check_board[k, 0, 0, :, :] = 0.25 * (dy * dx)  # dx*dy=1,2,4 multiply by 0.25 to have (0,1)
   126|         0|            0|            0|  0.00%|
   127|         1|   6.4373e-06|   6.4373e-06|  0.00%|        assert check_board.shape == (nj, 1, 1, w_raw, h_raw)
   128|         0|            0|            0|  0.00%|
   129|         0|            0|            0|  0.00%|        # I need to sum:
   130|         0|            0|            0|  0.00%|        # check_board of shape: --> levels, 1,      1, w_raw, h_raw
   131|         0|            0|            0|  0.00%|        # ref_image of shape ----->         batch, ch, w_raw, h_raw
   132|         1|  8.79765e-05|  8.79765e-05|  0.00%|        return ref_image + check_board
   133|         0|            0|            0|  0.00%|
File: <__array_function__ internals>_211
File duration: 0.0207434s (0.01%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|       614|   0.00176835|  2.88005e-06|  0.00%|
(call)|         1|  1.04904e-05|  1.04904e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.17776e-05|  8.17776e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|       612|   0.00731969|  1.19603e-05|  0.00%|
(call)|       612|      0.00404|  6.60131e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/function_base.py:1148 _diff_dispatcher
     5|       612|   0.00235462|  3.84742e-06|  0.00%|
     6|       612|   0.00930071|  1.51972e-05|  0.00%|
(call)|       612|    0.0860388|  0.000140586|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/function_base.py:1152 diff
File: <__array_function__ internals>_40
File duration: 0.0202751s (0.01%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|       744|   0.00194788|  2.61812e-06|  0.00%|
(call)|         1|  1.00136e-05|  1.00136e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.27312e-05|  8.27312e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|       742|   0.00760365|  1.02475e-05|  0.00%|
(call)|       742|   0.00445366|  6.00224e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/fromnumeric.py:1701 _ravel_dispatcher
     5|       742|   0.00266433|  3.59074e-06|  0.00%|
     6|       742|   0.00805926|  1.08615e-05|  0.00%|
(call)|       742|    0.0179906|  2.42461e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/fromnumeric.py:1705 ravel
File: <__array_function__ internals>_70
File duration: 0.0191379s (0.01%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|       566|   0.00185323|  3.27425e-06|  0.00%|
(call)|         1|  9.77516e-06|  9.77516e-06|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.22544e-05|  8.22544e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|       564|   0.00639462|   1.1338e-05|  0.00%|
(call)|       564|    0.0136466|  2.41961e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/shape_base.py:219 _vhstack_dispatcher
     5|       564|   0.00205016|  3.63504e-06|  0.00%|
     6|       564|   0.00883985|  1.56735e-05|  0.00%|
(call)|       564|      0.13094|  0.000232163|  0.04%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/shape_base.py:286 hstack
File: <__array_function__ internals>_69
File duration: 0.0183096s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|       502|   0.00190377|  3.79238e-06|  0.00%|
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000105381|  0.000105381|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|       500|   0.00691485|  1.38297e-05|  0.00%|
(call)|       500|    0.0140772|  2.81544e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/shape_base.py:219 _vhstack_dispatcher
     5|       500|   0.00207543|  4.15087e-06|  0.00%|
     6|       500|   0.00741553|  1.48311e-05|  0.00%|
(call)|       500|     0.142669|  0.000285338|  0.04%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/shape_base.py:223 vstack
File: <__array_function__ internals>_67
File duration: 0.0166657s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|       502|   0.00158811|  3.16356e-06|  0.00%|
(call)|         1|  9.77516e-06|  9.77516e-06|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.41753e-05|  9.41753e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|       500|   0.00642538|  1.28508e-05|  0.00%|
(call)|       500|    0.0033555|  6.71101e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/shape_base.py:78 _atleast_2d_dispatcher
     5|       500|   0.00199318|  3.98636e-06|  0.00%|
     6|       500|   0.00665903|  1.33181e-05|  0.00%|
(call)|       500|    0.0791953|  0.000158391|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/shape_base.py:82 atleast_2d
File: <__array_function__ internals>_4
File duration: 0.0124068s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|       534|   0.00175428|  3.28518e-06|  0.00%|
(call)|         1|  1.07288e-05|  1.07288e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.60827e-05|  9.60827e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|       532|   0.00575924|  1.08256e-05|  0.00%|
(call)|       532|   0.00331616|  6.23339e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/multiarray.py:468 can_cast
     5|       532|   0.00180793|  3.39836e-06|  0.00%|
     6|       532|   0.00308537|  5.79958e-06|  0.00%|
File: <string>_5
File duration: 0.0123558s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|      3168|    0.0123558|  3.90019e-06|  0.00%|
File: <__array_function__ internals>_74
File duration: 0.0120056s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|       370|   0.00114107|  3.08398e-06|  0.00%|
(call)|         1|  1.09673e-05|  1.09673e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.01222e-05|  9.01222e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|       368|   0.00465751|  1.26563e-05|  0.00%|
(call)|       368|   0.00260448|   7.0774e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/numeric.py:197 _ones_like_dispatcher
     5|       368|   0.00134158|   3.6456e-06|  0.00%|
     6|       368|   0.00486541|  1.32212e-05|  0.00%|
(call)|       368|     0.039397|  0.000107057|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/numeric.py:201 ones_like
File: <__array_function__ internals>
File duration: 0.011961s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|       398|   0.00120139|  3.01857e-06|  0.00%|
(call)|         1|  1.28746e-05|  1.28746e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000110149|  0.000110149|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|       396|   0.00491381|  1.24086e-05|  0.00%|
(call)|       396|   0.00275421|  6.95508e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/multiarray.py:75 empty_like
     5|       396|   0.00140071|  3.53714e-06|  0.00%|
     6|       396|   0.00444508|  1.12249e-05|  0.00%|
(call)|         4|   0.00159097|  0.000397742|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/ma/core.py:2975 __array_finalize__
File: <__array_function__ internals>_12
File duration: 0.0111966s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|       426|   0.00125837|  2.95393e-06|  0.00%|
(call)|         1|  1.12057e-05|  1.12057e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000124931|  0.000124931|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|       424|   0.00502157|  1.18433e-05|  0.00%|
(call)|       424|   0.00296783|  6.99961e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/multiarray.py:1043 copyto
     5|       424|   0.00154757|  3.64994e-06|  0.00%|
     6|       424|   0.00336909|  7.94597e-06|  0.00%|
File: /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities_neptune.py
File duration: 0.00833106s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.45571e-05|  1.22786e-05|  0.00%|import neptune
     2|         1|  2.90871e-05|  2.90871e-05|  0.00%|import torch.nn
(call)|         1|      1.94669|      1.94669|  0.53%|# <frozen importlib._bootstrap>:978 _find_and_load
     3|         1|  3.57628e-05|  3.57628e-05|  0.00%|import matplotlib.figure
(call)|         1|      1.65605|      1.65605|  0.45%|# <frozen importlib._bootstrap>:978 _find_and_load
     4|         1|  2.81334e-05|  2.81334e-05|  0.00%|from typing import Optional
(call)|         1|  2.16961e-05|  2.16961e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
     5|         1|  6.67572e-05|  6.67572e-05|  0.00%|from .utilities import save_obj
(call)|         1|  1.69277e-05|  1.69277e-05|  0.00%|# <frozen importlib._bootstrap>:416 parent
(call)|         1|      1.45002|      1.45002|  0.39%|# <frozen importlib._bootstrap>:978 _find_and_load
(call)|         1|  1.64509e-05|  1.64509e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
     6|         1|  4.93526e-05|  4.93526e-05|  0.00%|from neptunecontrib.api import log_chart
(call)|         1|     0.418421|     0.418421|  0.11%|# <frozen importlib._bootstrap>:978 _find_and_load
(call)|         1|  3.48091e-05|  3.48091e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
     7|         0|            0|            0|  0.00%|
     8|        14|  9.53674e-05|  6.81196e-06|  0.00%|def log_img_only(name: str,
     9|         0|            0|            0|  0.00%|                 fig: matplotlib.figure.Figure,
    10|         0|            0|            0|  0.00%|                 experiment:  Optional[neptune.experiments.Experiment] = None,
    11|         1|   3.0756e-05|   3.0756e-05|  0.00%|                 verbose: bool = False):
(call)|         1|   0.00100183|   0.00100183|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
    12|        14|  8.58307e-05|  6.13076e-06|  0.00%|    if verbose:
    13|         0|            0|            0|  0.00%|        print("inside log_img_only -> "+name)
    14|        14|  5.96046e-05|  4.25747e-06|  0.00%|    _exp = experiment if experiment else neptune
    15|        14|  0.000353098|  2.52213e-05|  0.00%|    _exp.log_image(name, fig)
(call)|         2|      2.50838|      1.25419|  0.68%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/experiments.py:438 log_image
(call)|        12|      12.8571|      1.07143|  3.50%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/__init__.py:340 log_image
    16|        14|  7.72476e-05|  5.51769e-06|  0.00%|    if verbose:
    17|         0|            0|            0|  0.00%|        print("leaving log_img_only -> "+name)
    18|         0|            0|            0|  0.00%|
    19|         0|            0|            0|  0.00%|
    20|        10|  5.53131e-05|  5.53131e-06|  0.00%|def log_img_and_chart(name: str,
    21|         0|            0|            0|  0.00%|                      fig: matplotlib.figure.Figure,
    22|         0|            0|            0|  0.00%|                      experiment:  Optional[neptune.experiments.Experiment] = None,
    23|         1|  4.12464e-05|  4.12464e-05|  0.00%|                      verbose: bool = False):
(call)|         1|   2.3365e-05|   2.3365e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
    24|        10|  7.84397e-05|  7.84397e-06|  0.00%|    if verbose:
    25|         0|            0|            0|  0.00%|        print("inside log_img_and_chart -> "+name)
    26|        10|  4.62532e-05|  4.62532e-06|  0.00%|    _exp = experiment if experiment else neptune
    27|        10|  0.000262737|  2.62737e-05|  0.00%|    log_chart(name, fig, _exp)
(call)|        10|      158.256|      15.8256| 43.04%|# /opt/anaconda3/lib/python3.7/site-packages/neptunecontrib/api/chart.py:24 log_chart
    28|        10|  0.000252485|  2.52485e-05|  0.00%|    _exp.log_image(name, fig)
(call)|        10|      12.2007|      1.22007|  3.32%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/__init__.py:340 log_image
    29|        10|  8.24928e-05|  8.24928e-06|  0.00%|    if verbose:
    30|         0|            0|            0|  0.00%|        print("leaving log_img_and_chart -> "+name)
    31|         0|            0|            0|  0.00%|
    32|         0|            0|            0|  0.00%|
    33|         1|   1.0252e-05|   1.0252e-05|  0.00%|def log_model_summary(model: torch.nn.Module,
    34|         0|            0|            0|  0.00%|                      experiment: Optional[neptune.experiments.Experiment] = None,
    35|         1|   2.3365e-05|   2.3365e-05|  0.00%|                      verbose: bool = False):
(call)|         1|    5.126e-05|    5.126e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
    36|         1|  7.15256e-06|  7.15256e-06|  0.00%|    if verbose:
    37|         0|            0|            0|  0.00%|        print("inside log_model_summary")
    38|         0|            0|            0|  0.00%|
    39|         1|  5.24521e-06|  5.24521e-06|  0.00%|    _exp = experiment if experiment else neptune
    40|         0|            0|            0|  0.00%|
    41|       160|  0.000731945|  4.57466e-06|  0.00%|    for x in model.__str__().split('\n'):
(call)|         1|    0.0208435|    0.0208435|  0.01%|# /opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py:1133 __repr__
    42|         0|            0|            0|  0.00%|        # replace leading spaces with '-' character
    43|       159|  0.000735998|  4.62892e-06|  0.00%|        n = len(x) - len(x.lstrip(' '))
    44|       159|   0.00196552|  1.23618e-05|  0.00%|        _exp.log_text("model summary", '-' * n + x)
(call)|       159|     0.298361|   0.00187648|  0.08%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/__init__.py:324 log_text
    45|         0|            0|            0|  0.00%|
    46|         1|  4.05312e-06|  4.05312e-06|  0.00%|    if verbose:
    47|         0|            0|            0|  0.00%|        print("leaving log_model_summary")
    48|         0|            0|            0|  0.00%|
    49|         0|            0|            0|  0.00%|
    50|         1|  9.29832e-06|  9.29832e-06|  0.00%|def log_object_as_artifact(name: str,
    51|         0|            0|            0|  0.00%|                           obj: object,
    52|         0|            0|            0|  0.00%|                           experiment: Optional[neptune.experiments.Experiment] = None,
    53|         1|  1.85966e-05|  1.85966e-05|  0.00%|                           verbose: bool = False):
(call)|         1|  2.09808e-05|  2.09808e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
    54|         1|   6.4373e-06|   6.4373e-06|  0.00%|    if verbose:
    55|         0|            0|            0|  0.00%|        print("inside log_object_as_artifact")
    56|         0|            0|            0|  0.00%|
    57|         1|  5.96046e-06|  5.96046e-06|  0.00%|    path = name+".pt"
    58|         1|  0.000102997|  0.000102997|  0.00%|    save_obj(obj=obj, path=path)
(call)|         1|      0.89767|      0.89767|  0.24%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/utilities.py:50 save_obj
    59|         1|  1.09673e-05|  1.09673e-05|  0.00%|    _exp = experiment if experiment else neptune
    60|         1|  2.98023e-05|  2.98023e-05|  0.00%|    _exp.log_artifact(path)
(call)|         1|       22.493|       22.493|  6.12%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/__init__.py:364 log_artifact
    61|         0|            0|            0|  0.00%|
    62|         1|  5.96046e-06|  5.96046e-06|  0.00%|    if verbose:
    63|         0|            0|            0|  0.00%|        print("leaving log_object_as_artifact")
    64|         0|            0|            0|  0.00%|
    65|         0|            0|            0|  0.00%|
    66|         0|            0|            0|  0.00%|def log_matplotlib_as_png(name: str,
    67|         0|            0|            0|  0.00%|                          fig: matplotlib.figure.Figure,
    68|         0|            0|            0|  0.00%|                          experiment: Optional[neptune.experiments.Experiment] = None,
    69|         1|  1.83582e-05|  1.83582e-05|  0.00%|                          verbose: bool = False):
(call)|         1|  4.00543e-05|  4.00543e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
    70|         0|            0|            0|  0.00%|    if verbose:
    71|         0|            0|            0|  0.00%|        print("log_matplotlib_as_png")
    72|         0|            0|            0|  0.00%|
    73|         0|            0|            0|  0.00%|    _exp = experiment if experiment else neptune
    74|         0|            0|            0|  0.00%|    fig.savefig(name+".png")  # save to local file
    75|         0|            0|            0|  0.00%|    _exp.log_image(name, name+".png")  # log file to neptune
    76|         0|            0|            0|  0.00%|
    77|         0|            0|            0|  0.00%|    if verbose:
    78|         0|            0|            0|  0.00%|        print("leaving log_matplotlib_as_png")
    79|         0|            0|            0|  0.00%|
    80|         0|            0|            0|  0.00%|
    81|         7|  3.83854e-05|  5.48363e-06|  0.00%|def log_dict_metrics(metrics: dict,
    82|         0|            0|            0|  0.00%|                     prefix: str = "",
    83|         0|            0|            0|  0.00%|                     experiment: Optional[neptune.experiments.Experiment] = None,
    84|         1|  2.16961e-05|  2.16961e-05|  0.00%|                     verbose: bool = False):
(call)|         1|  3.69549e-05|  3.69549e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
    85|         7|  5.98431e-05|  8.54901e-06|  0.00%|    if verbose:
    86|         0|            0|            0|  0.00%|        print("inside log_dict_metrics")
    87|         0|            0|            0|  0.00%|
    88|         7|  3.69549e-05|  5.27927e-06|  0.00%|    _exp = experiment if experiment else neptune
    89|         0|            0|            0|  0.00%|
    90|       122|  0.000654221|  5.36246e-06|  0.00%|    for key, value in metrics.items():
    91|       115|   0.00202608|  1.76181e-05|  0.00%|        _exp.log_metric(prefix + key, value)
(call)|       114|      9.88857|    0.0867419|  2.69%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/experiments.py:302 log_metric
(call)|         1|     0.233598|     0.233598|  0.06%|# /opt/anaconda3/lib/python3.7/site-packages/neptune/__init__.py:308 log_metric
    92|         0|            0|            0|  0.00%|
    93|         7|  2.93255e-05|  4.18936e-06|  0.00%|    if verbose:
    94|         0|            0|            0|  0.00%|        print("leaving log_dict_metrics")
    95|         0|            0|            0|  0.00%|
    96|         0|            0|            0|  0.00%|
    97|         0|            0|            0|  0.00%|def log_last_ckpt(name: str,
    98|         0|            0|            0|  0.00%|                  ckpt: dict,
    99|         0|            0|            0|  0.00%|                  experiment: Optional[neptune.experiments.Experiment] = None,
   100|         0|            0|            0|  0.00%|                  verbose: bool = False,
   101|         1|  1.81198e-05|  1.81198e-05|  0.00%|                  delete_previous_ckpt: bool = True):
(call)|         1|   2.0504e-05|   2.0504e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
   102|         0|            0|            0|  0.00%|
   103|         0|            0|            0|  0.00%|    if verbose:
   104|         0|            0|            0|  0.00%|        print("inside log_last_ckpt")
   105|         0|            0|            0|  0.00%|
   106|         0|            0|            0|  0.00%|    _exp = experiment if experiment else neptune
   107|         0|            0|            0|  0.00%|    path = name+".pt"
   108|         0|            0|            0|  0.00%|    #if delete_previous_ckpt:
   109|         0|            0|            0|  0.00%|    #    _exp.delete_artifacts(path)
   110|         0|            0|            0|  0.00%|    save_obj(obj=ckpt, path=path)
   111|         0|            0|            0|  0.00%|    print("logging artifact")
   112|         0|            0|            0|  0.00%|    _exp.log_artifact(path)
   113|         0|            0|            0|  0.00%|
   114|         0|            0|            0|  0.00%|    if verbose:
   115|         0|            0|            0|  0.00%|        print("leaving log_last_ckpt")
File: <string>
File duration: 0.00638318s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|      1414|   0.00638318|  4.51427e-06|  0.00%|
File: <string>_10
File duration: 0.00513959s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|      1382|   0.00513959|  3.71895e-06|  0.00%|
File: /home/jupyter/REPOS/spacetx-research/src/MODULES/namedtuple.py
File duration: 0.00476909s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|   4.3869e-05|  2.19345e-05|  0.00%|import torch
     2|         1|  9.53674e-06|  9.53674e-06|  0.00%|import numpy
     3|         1|  3.76701e-05|  3.76701e-05|  0.00%|from typing import NamedTuple, Optional, Union
(call)|         1|  2.57492e-05|  2.57492e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
     4|         1|  6.58035e-05|  6.58035e-05|  0.00%|import skimage.color
(call)|         1|     0.613385|     0.613385|  0.17%|# <frozen importlib._bootstrap>:978 _find_and_load
     5|         1|  7.77245e-05|  7.77245e-05|  0.00%|import matplotlib.pyplot as plt
(call)|         1|     0.678602|     0.678602|  0.18%|# <frozen importlib._bootstrap>:978 _find_and_load
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|#  ----------------------------------------------------------------  #
     8|         0|            0|            0|  0.00%|#  ------- Stuff Related to PreProcessing -------------------------  #
     9|         0|            0|            0|  0.00%|#  ----------------------------------------------------------------  #
    10|         0|            0|            0|  0.00%|
    11|         0|            0|            0|  0.00%|
    12|         3|  9.03606e-05|  3.01202e-05|  0.00%|class ImageBbox(NamedTuple):
(call)|         1|  3.76701e-05|  3.76701e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/namedtuple.py:12 ImageBbox
(call)|         1|   0.00153065|   0.00153065|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:1363 __new__
    13|         0|            0|            0|  0.00%|    """ Follows Scikit Image convention. Pixels belonging to the bounding box are in the half-open interval:
    14|         1|  3.33786e-06|  3.33786e-06|  0.00%|        [min_row;max_row) and [min_col;max_col). """
    15|         1|  4.05312e-06|  4.05312e-06|  0.00%|    min_row: int
    16|         1|  4.05312e-06|  4.05312e-06|  0.00%|    min_col: int
    17|         1|   3.8147e-06|   3.8147e-06|  0.00%|    max_row: int
    18|         1|  4.05312e-06|  4.05312e-06|  0.00%|    max_col: int
    19|         0|            0|            0|  0.00%|
    20|         0|            0|            0|  0.00%|
    21|         3|  0.000119925|  3.99748e-05|  0.00%|class PreProcess(NamedTuple):
(call)|         1|  7.39098e-05|  7.39098e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/namedtuple.py:21 PreProcess
(call)|         1|   0.00146747|   0.00146747|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:1363 __new__
    22|         1|  7.15256e-06|  7.15256e-06|  0.00%|    img: torch.Tensor
    23|         1|  4.29153e-06|  4.29153e-06|  0.00%|    roi_mask: torch.Tensor
    24|         1|   3.8147e-06|   3.8147e-06|  0.00%|    bbox_original: ImageBbox
    25|         1|   3.8147e-06|   3.8147e-06|  0.00%|    bbox_crop: ImageBbox
    26|         0|            0|            0|  0.00%|
    27|         0|            0|            0|  0.00%|#  --------------------------------------------------------------------------------------  #
    28|         0|            0|            0|  0.00%|#  ------- Stuff Related to PostProcessing (i.e. Graph Clustering Based on Modularity) --  #
    29|         0|            0|            0|  0.00%|#  --------------------------------------------------------------------------------------  #
    30|         0|            0|            0|  0.00%|
    31|         0|            0|            0|  0.00%|
    32|         3|  8.72612e-05|  2.90871e-05|  0.00%|class Suggestion(NamedTuple):
(call)|         1|   8.7738e-05|   8.7738e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/namedtuple.py:32 Suggestion
(call)|         1|   0.00241184|   0.00241184|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:1363 __new__
    33|         1|  4.52995e-06|  4.52995e-06|  0.00%|    best_resolution: float
    34|         1|  5.48363e-06|  5.48363e-06|  0.00%|    best_index: int
    35|         1|  6.91414e-06|  6.91414e-06|  0.00%|    sweep_resolution: numpy.ndarray
    36|         1|  5.72205e-06|  5.72205e-06|  0.00%|    sweep_mi: numpy.ndarray
    37|         1|  5.24521e-06|  5.24521e-06|  0.00%|    sweep_iou: numpy.ndarray
    38|         1|  6.19888e-06|  6.19888e-06|  0.00%|    sweep_delta_n: numpy.ndarray
    39|         1|  5.48363e-06|  5.48363e-06|  0.00%|    sweep_seg_mask: numpy.ndarray
    40|         1|  5.24521e-06|  5.24521e-06|  0.00%|    sweep_n_cells: numpy.ndarray
    41|         1|  5.48363e-06|  5.48363e-06|  0.00%|    sweep_sizes: list
    42|         0|            0|            0|  0.00%|
    43|         1|  5.96046e-06|  5.96046e-06|  0.00%|    def show_index(self, index: int, figsize: tuple = (20, 20), fontsize: int = 20):
    44|         0|            0|            0|  0.00%|        figure, ax = plt.subplots(figsize=figsize)
    45|         0|            0|            0|  0.00%|        ax.imshow(skimage.color.label2rgb(label=self.sweep_seg_mask[index], bg_label=0))
    46|         0|            0|            0|  0.00%|        ax.set_title('resolution = {0:.3f}, \
    47|         0|            0|            0|  0.00%|                      iou = {1:.3f}, \
    48|         0|            0|            0|  0.00%|                      delta_n = {2:3d}, \
    49|         0|            0|            0|  0.00%|                      n_cells = {3:3d}'.format(self.sweep_resolution[index],
    50|         0|            0|            0|  0.00%|                                               self.sweep_iou[index],
    51|         0|            0|            0|  0.00%|                                               self.sweep_delta_n[index],
    52|         0|            0|            0|  0.00%|                                               self.sweep_n_cells[index]),
    53|         0|            0|            0|  0.00%|                     fontsize=fontsize)
    54|         0|            0|            0|  0.00%|
    55|         1|  5.48363e-06|  5.48363e-06|  0.00%|    def show_best(self, figsize: tuple = (20, 20), fontsize: int = 20):
    56|         0|            0|            0|  0.00%|        return self.show_index(self.best_index, figsize, fontsize)
    57|         0|            0|            0|  0.00%|
    58|         1|  5.96046e-06|  5.96046e-06|  0.00%|    def show_graph(self, figsize: tuple = (20, 20), fontsize: int = 20):
    59|         0|            0|            0|  0.00%|        figure, ax = plt.subplots(figsize=figsize)
    60|         0|            0|            0|  0.00%|        ax.set_title('Resolution sweep', fontsize=fontsize)
    61|         0|            0|            0|  0.00%|        ax.set_xlabel("resolution", fontsize=fontsize)
    62|         0|            0|            0|  0.00%|        ax.tick_params(axis='x', labelsize=fontsize)
    63|         0|            0|            0|  0.00%|
    64|         0|            0|            0|  0.00%|        color = 'tab:red'
    65|         0|            0|            0|  0.00%|        _ = ax.plot(self.sweep_resolution, self.sweep_n_cells, '.--', label="n_cell", color=color)
    66|         0|            0|            0|  0.00%|        ax.set_ylabel('n_cell', color=color, fontsize=fontsize)
    67|         0|            0|            0|  0.00%|        ax.tick_params(axis='y', labelcolor=color, labelsize=fontsize)
    68|         0|            0|            0|  0.00%|        ax.legend(loc='upper left', fontsize=fontsize)
    69|         0|            0|            0|  0.00%|        ax.grid()
    70|         0|            0|            0|  0.00%|
    71|         0|            0|            0|  0.00%|        ax_2 = ax.twinx()  # instantiate a second axes that shares the same x-axis
    72|         0|            0|            0|  0.00%|        color = 'tab:green'
    73|         0|            0|            0|  0.00%|        _ = ax_2.plot(self.sweep_resolution, self.sweep_iou, '-', label="iou", color=color)
    74|         0|            0|            0|  0.00%|        ax_2.set_ylabel('Intersection Over Union', color=color, fontsize=fontsize)
    75|         0|            0|            0|  0.00%|        ax_2.tick_params(axis='y', labelcolor=color, labelsize=fontsize)
    76|         0|            0|            0|  0.00%|        ax_2.legend(loc='upper right', fontsize=fontsize)
    77|         0|            0|            0|  0.00%|
    78|         0|            0|            0|  0.00%|
    79|         3|  0.000107765|  3.59217e-05|  0.00%|class ConcordancePartition(NamedTuple):
(call)|         1|  3.95775e-05|  3.95775e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/namedtuple.py:79 ConcordancePartition
(call)|         1|   0.00145769|   0.00145769|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:1363 __new__
    80|         1|  4.52995e-06|  4.52995e-06|  0.00%|    joint_distribution: torch.tensor
    81|         1|  4.05312e-06|  4.05312e-06|  0.00%|    mutual_information: float
    82|         1|   3.8147e-06|   3.8147e-06|  0.00%|    delta_n: int
    83|         1|   3.8147e-06|   3.8147e-06|  0.00%|    iou: float
    84|         1|  4.29153e-06|  4.29153e-06|  0.00%|    n_reversible_mapping: int
    85|         0|            0|            0|  0.00%|
    86|         0|            0|            0|  0.00%|
    87|         3|  8.74996e-05|  2.91665e-05|  0.00%|class Partition(NamedTuple):
(call)|         1|  0.000139475|  0.000139475|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/namedtuple.py:87 Partition
(call)|         1|   0.00110006|   0.00110006|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:1363 __new__
    88|         1|  4.76837e-06|  4.76837e-06|  0.00%|    sizes: torch.tensor  # both for bg and fg. It is simply obtained by numpy.bincount(membership)
    89|         1|  5.96046e-06|  5.96046e-06|  0.00%|    membership: torch.tensor  # bg=0, fg=1,2,3,.....
    90|         0|            0|            0|  0.00%|
    91|         1|  5.72205e-06|  5.72205e-06|  0.00%|    def compactify(self):
    92|         0|            0|            0|  0.00%|        """ if there are gaps in the SIZES, then shift both membership and sizes accordingly"""
    93|         0|            0|            0|  0.00%|        if (self.sizes[1:] > 0).all():
    94|         0|            0|            0|  0.00%|            return self
    95|         0|            0|            0|  0.00%|        else:
    96|         0|            0|            0|  0.00%|            my_filter = self.sizes > 0
    97|         0|            0|            0|  0.00%|            my_filter[0] = True
    98|         0|            0|            0|  0.00%|            count = torch.cumsum(my_filter, dim=-1)
    99|         0|            0|            0|  0.00%|            old_2_new = ((count - count[0]) * my_filter).to(self.membership.dtype)
   100|         0|            0|            0|  0.00%|            return Partition(sizes=self.sizes[my_filter], membership=old_2_new[self.membership])
   101|         0|            0|            0|  0.00%|
   102|         1|  5.96046e-06|  5.96046e-06|  0.00%|    def filter_by_vertex(self, keep_vertex: torch.tensor):
   103|         0|            0|            0|  0.00%|        assert self.membership.shape == keep_vertex.shape
   104|         0|            0|            0|  0.00%|        assert keep_vertex.dtype == torch.bool
   105|         0|            0|            0|  0.00%|
   106|         0|            0|            0|  0.00%|        if keep_vertex.all():
   107|         0|            0|            0|  0.00%|            return self
   108|         0|            0|            0|  0.00%|        else:
   109|         0|            0|            0|  0.00%|            new_membership = self.membership * keep_vertex  # put all bad vertices in the background cluster
   110|         0|            0|            0|  0.00%|            return Partition(sizes=torch.bincount(new_membership),
   111|         0|            0|            0|  0.00%|                             membership=new_membership).compactify()
   112|         0|            0|            0|  0.00%|
   113|         0|            0|            0|  0.00%|    def filter_by_size(self,
   114|         0|            0|            0|  0.00%|                       min_size: Optional[int] = None,
   115|         1|  3.38554e-05|  3.38554e-05|  0.00%|                       max_size: Optional[int] = None):
(call)|         2|  5.62668e-05|  2.81334e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
   116|         0|            0|            0|  0.00%|        """ If a cluster is too small or too large, its label is set to zero (i.e. background value).
   117|         0|            0|            0|  0.00%|            The other labels are adjusted so that there are no gaps in the labels number.
   118|         0|            0|            0|  0.00%|            Min_size and Max_size are integers specifying the number of pixels.
   119|         0|            0|            0|  0.00%|        """
   120|         0|            0|            0|  0.00%|        if (min_size is None) and (max_size is None):
   121|         0|            0|            0|  0.00%|            return self
   122|         0|            0|            0|  0.00%|        elif (min_size is not None) and (max_size is not None):
   123|         0|            0|            0|  0.00%|            assert max_size > min_size > 0, "Condition max_size > min_size > 0 failed."
   124|         0|            0|            0|  0.00%|            my_filter = (self.sizes > min_size) * (self.sizes < max_size)
   125|         0|            0|            0|  0.00%|        elif min_size is not None:
   126|         0|            0|            0|  0.00%|            assert min_size > 0, "Condition min_size > 0 failed."
   127|         0|            0|            0|  0.00%|            my_filter = (self.sizes > min_size)
   128|         0|            0|            0|  0.00%|        elif max_size is not None:
   129|         0|            0|            0|  0.00%|            assert max_size > 0, "Condition max_size > 0 failed."
   130|         0|            0|            0|  0.00%|            my_filter = (self.sizes < max_size)
   131|         0|            0|            0|  0.00%|        else:
   132|         0|            0|            0|  0.00%|            raise Exception("you should never be here!!")
   133|         0|            0|            0|  0.00%|
   134|         0|            0|            0|  0.00%|        my_filter[0] = True  # always keep the bg
   135|         0|            0|            0|  0.00%|        if my_filter.all():
   136|         0|            0|            0|  0.00%|            return self
   137|         0|            0|            0|  0.00%|        else:
   138|         0|            0|            0|  0.00%|            return Partition(sizes=self.sizes * my_filter,
   139|         0|            0|            0|  0.00%|                             membership=self.membership).compactify()
   140|         0|            0|            0|  0.00%|
   141|         1|   6.4373e-06|   6.4373e-06|  0.00%|    def concordance_with_partition(self, other_partition) -> ConcordancePartition:
   142|         0|            0|            0|  0.00%|        """ Compute measure of concordance between two partitions:
   143|         0|            0|            0|  0.00%|            joint_distribution
   144|         0|            0|            0|  0.00%|            mutual_information
   145|         0|            0|            0|  0.00%|            delta_n
   146|         0|            0|            0|  0.00%|            iou
   147|         0|            0|            0|  0.00%|
   148|         0|            0|            0|  0.00%|            We use the peaks of the join distribution to extract the mapping between membership labels.
   149|         0|            0|            0|  0.00%|        """
   150|         0|            0|            0|  0.00%|
   151|         0|            0|            0|  0.00%|        assert self.membership.shape == other_partition.membership.shape
   152|         0|            0|            0|  0.00%|
   153|         0|            0|            0|  0.00%|        # Use z = x + y * nx
   154|         0|            0|            0|  0.00%|        # whose reciprocal is:
   155|         0|            0|            0|  0.00%|        # x = z % nx
   156|         0|            0|            0|  0.00%|        # y = z // nx
   157|         0|            0|            0|  0.00%|
   158|         0|            0|            0|  0.00%|        nx = self.sizes.shape[0]
   159|         0|            0|            0|  0.00%|        ny = other_partition.sizes.shape[0]
   160|         0|            0|            0|  0.00%|        z = self.membership + other_partition.membership * nx  # if z = x + y * nx
   161|         0|            0|            0|  0.00%|        count_z = torch.bincount(z).float()
   162|         0|            0|            0|  0.00%|        z_to_x = torch.arange(count_z.shape[0]) % nx  # then x = z % nx
   163|         0|            0|            0|  0.00%|        z_to_y = torch.arange(count_z.shape[0]) // nx  # and y = z // nx
   164|         0|            0|            0|  0.00%|
   165|         0|            0|            0|  0.00%|        pxy = torch.zeros((nx, ny), dtype=torch.float, device=self.membership.device)
   166|         0|            0|            0|  0.00%|        pxy[z_to_x, z_to_y] = count_z
   167|         0|            0|            0|  0.00%|        pxy /= torch.sum(pxy)
   168|         0|            0|            0|  0.00%|        px = torch.sum(pxy, dim=-1)
   169|         0|            0|            0|  0.00%|        py = torch.sum(pxy, dim=-2)
   170|         0|            0|            0|  0.00%|
   171|         0|            0|            0|  0.00%|        # Compute the mutual information
   172|         0|            0|            0|  0.00%|        term_xy = pxy * torch.log(pxy)
   173|         0|            0|            0|  0.00%|        term_x = px * torch.log(px)
   174|         0|            0|            0|  0.00%|        term_y = py * torch.log(py)
   175|         0|            0|            0|  0.00%|        mutual_information = term_xy[pxy > 0].sum() - term_x[px > 0].sum() - term_y[py > 0].sum()
   176|         0|            0|            0|  0.00%|
   177|         0|            0|            0|  0.00%|        # Extract the most likely mappings
   178|         0|            0|            0|  0.00%|        to_other = torch.max(pxy, dim=-1)[1]
   179|         0|            0|            0|  0.00%|        from_other = torch.max(pxy, dim=-2)[1]
   180|         0|            0|            0|  0.00%|
   181|         0|            0|            0|  0.00%|        # Find one-to-one correspondence among instance IDs
   182|         0|            0|            0|  0.00%|        original_instance_id = torch.arange(nx, device=self.membership.device, dtype=torch.long)
   183|         0|            0|            0|  0.00%|        is_id_one_to_one = (from_other[to_other[original_instance_id]] == original_instance_id)
   184|         0|            0|            0|  0.00%|        n_reversible_mapping = is_id_one_to_one.sum().item()
   185|         0|            0|            0|  0.00%|
   186|         0|            0|            0|  0.00%|        # Define a mapping that changes all bad (i.e. not unique or background) instance IDs to -1
   187|         0|            0|            0|  0.00%|        original_to_good_id = original_instance_id
   188|         0|            0|            0|  0.00%|        original_to_good_id[~is_id_one_to_one] = -1
   189|         0|            0|            0|  0.00%|        original_to_good_id[0] = -1  # Exclude the background
   190|         0|            0|            0|  0.00%|        filter_fg_pixels_with_reversible_id = (original_to_good_id[self.membership] > 0)
   191|         0|            0|            0|  0.00%|
   192|         0|            0|            0|  0.00%|        # Even if the ID is reversible the pixel might have the wrong one.
   193|         0|            0|            0|  0.00%|        pixel_with_same_id = (to_other[self.membership] == other_partition.membership)
   194|         0|            0|            0|  0.00%|        intersection = torch.sum(pixel_with_same_id[filter_fg_pixels_with_reversible_id])
   195|         0|            0|            0|  0.00%|        union = torch.sum(self.sizes[1:]) + torch.sum(other_partition.sizes[1:]) - intersection  # exclude background
   196|         0|            0|            0|  0.00%|        iou = intersection.float()/union
   197|         0|            0|            0|  0.00%|
   198|         0|            0|            0|  0.00%|        return ConcordancePartition(joint_distribution=pxy,
   199|         0|            0|            0|  0.00%|                                    mutual_information=mutual_information.item(),
   200|         0|            0|            0|  0.00%|                                    delta_n=ny - nx,
   201|         0|            0|            0|  0.00%|                                    iou=iou.item(),
   202|         0|            0|            0|  0.00%|                                    n_reversible_mapping=n_reversible_mapping)
   203|         0|            0|            0|  0.00%|
   204|         0|            0|            0|  0.00%|
   205|         0|            0|            0|  0.00%|#  ----------------------------------------------------------------  #
   206|         0|            0|            0|  0.00%|#  ------- Stuff Related to Processing (i.e. CompositionalVAE) ----  #
   207|         0|            0|            0|  0.00%|#  ----------------------------------------------------------------  #
   208|         0|            0|            0|  0.00%|
   209|         0|            0|            0|  0.00%|
   210|         3|  8.41618e-05|  2.80539e-05|  0.00%|class DIST(NamedTuple):
(call)|         1|  2.90871e-05|  2.90871e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/namedtuple.py:210 DIST
(call)|         1|   0.00100064|   0.00100064|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:1363 __new__
   211|         1|  4.05312e-06|  4.05312e-06|  0.00%|    sample: torch.Tensor
   212|         1|  4.29153e-06|  4.29153e-06|  0.00%|    kl: torch.Tensor
   213|         0|            0|            0|  0.00%|
   214|         0|            0|            0|  0.00%|
   215|         3|  7.93934e-05|  2.64645e-05|  0.00%|class ZZ(NamedTuple):
(call)|         1|  4.86374e-05|  4.86374e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/namedtuple.py:215 ZZ
(call)|         1|  0.000965357|  0.000965357|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:1363 __new__
   216|         1|  3.57628e-06|  3.57628e-06|  0.00%|    mu: torch.Tensor
   217|         1|  2.81334e-05|  2.81334e-05|  0.00%|    std: torch.Tensor
   218|         0|            0|            0|  0.00%|
   219|         0|            0|            0|  0.00%|
   220|         3|  7.51019e-05|   2.5034e-05|  0.00%|class BB(NamedTuple):
(call)|         1|  3.09944e-05|  3.09944e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/namedtuple.py:220 BB
(call)|         1|   0.00126028|   0.00126028|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:1363 __new__
   221|         1|  3.57628e-06|  3.57628e-06|  0.00%|    bx: torch.Tensor  # shape: n_box, batch_size
   222|         1|   3.8147e-06|   3.8147e-06|  0.00%|    by: torch.Tensor
   223|         1|  3.57628e-06|  3.57628e-06|  0.00%|    bw: torch.Tensor
   224|         1|  3.57628e-06|  3.57628e-06|  0.00%|    bh: torch.Tensor
   225|         0|            0|            0|  0.00%|
   226|         0|            0|            0|  0.00%|
   227|         3|  0.000106335|  3.54449e-05|  0.00%|class NMSoutput(NamedTuple):
(call)|         1|  2.40803e-05|  2.40803e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/namedtuple.py:227 NMSoutput
(call)|         1|   0.00108671|   0.00108671|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:1363 __new__
   228|         1|  3.57628e-06|  3.57628e-06|  0.00%|    nms_mask: torch.Tensor
   229|         1|   3.8147e-06|   3.8147e-06|  0.00%|    index_top_k: torch.Tensor
   230|         0|            0|            0|  0.00%|
   231|         0|            0|            0|  0.00%|
   232|         3|  9.32217e-05|  3.10739e-05|  0.00%|class SparseSimilarity(NamedTuple):
(call)|         1|   0.00101256|   0.00101256|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/namedtuple.py:232 SparseSimilarity
(call)|         1|   0.00106597|   0.00106597|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:1363 __new__
   233|         1|  2.26498e-05|  2.26498e-05|  0.00%|    sparse_matrix: torch.sparse.FloatTensor
   234|         1|  1.19209e-05|  1.19209e-05|  0.00%|    index_matrix: Optional[torch.tensor]
(call)|         1|  0.000962019|  0.000962019|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
   235|         0|            0|            0|  0.00%|
   236|         0|            0|            0|  0.00%|
   237|         3|  8.72612e-05|  2.90871e-05|  0.00%|class Segmentation(NamedTuple):
(call)|         1|   0.00103998|   0.00103998|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/namedtuple.py:237 Segmentation
(call)|         1|   0.00234628|   0.00234628|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:1363 __new__
   238|         1|  3.09944e-06|  3.09944e-06|  0.00%|    """ Where * is the batch dimension which might be NOT present """
   239|         1|  4.29153e-06|  4.29153e-06|  0.00%|    raw_image: torch.Tensor  # *,ch,w,h
   240|         1|   3.8147e-06|   3.8147e-06|  0.00%|    fg_prob: torch.Tensor  # *,1,w,h
   241|         1|  3.57628e-06|  3.57628e-06|  0.00%|    integer_mask: torch.Tensor  # *,1,w,h
   242|         1|  1.16825e-05|  1.16825e-05|  0.00%|    bounding_boxes: Optional[torch.Tensor]  # *,3,w,h
(call)|         1|  2.31266e-05|  2.31266e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
   243|         1|   1.3113e-05|   1.3113e-05|  0.00%|    similarity: Optional[SparseSimilarity] = None
(call)|         1|  0.000960827|  0.000960827|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
   244|         0|            0|            0|  0.00%|
   245|         0|            0|            0|  0.00%|
   246|         3|  9.67979e-05|   3.2266e-05|  0.00%|class UNEToutput(NamedTuple):
(call)|         1|  3.62396e-05|  3.62396e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/namedtuple.py:246 UNEToutput
(call)|         1|   0.00163126|   0.00163126|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:1363 __new__
   247|         1|  4.05312e-06|  4.05312e-06|  0.00%|    zwhere: ZZ
   248|         1|  4.29153e-06|  4.29153e-06|  0.00%|    logit: ZZ
   249|         1|  4.29153e-06|  4.29153e-06|  0.00%|    zbg: ZZ
   250|         1|  4.52995e-06|  4.52995e-06|  0.00%|    features: torch.Tensor
   251|         0|            0|            0|  0.00%|
   252|         0|            0|            0|  0.00%|
   253|         3|  0.000129461|  4.31538e-05|  0.00%|class Inference(NamedTuple):
(call)|         1|  9.87053e-05|  9.87053e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/namedtuple.py:253 Inference
(call)|         1|   0.00318122|   0.00318122|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:1363 __new__
   254|         1|  4.29153e-06|  4.29153e-06|  0.00%|    length_scale_GP: torch.Tensor
   255|         1|  4.29153e-06|  4.29153e-06|  0.00%|    p_map: torch.Tensor
   256|         1|   3.8147e-06|   3.8147e-06|  0.00%|    area_map: torch.Tensor
   257|         1|  1.23978e-05|  1.23978e-05|  0.00%|    big_bg: torch.Tensor
   258|         1|  5.48363e-06|  5.48363e-06|  0.00%|    big_img: torch.Tensor
   259|         1|  4.52995e-06|  4.52995e-06|  0.00%|    big_mask: torch.Tensor
   260|         1|  4.29153e-06|  4.29153e-06|  0.00%|    big_mask_NON_interacting: torch.Tensor  # Use exclusively to compute overlap penalty
   261|         0|            0|            0|  0.00%|    # the samples of the 3 latent variables
   262|         1|  7.15256e-06|  7.15256e-06|  0.00%|    sample_prob: torch.Tensor  # shape -> boxes_few, batch_size
   263|         1|  6.91414e-06|  6.91414e-06|  0.00%|    sample_bb: BB              # each bx,by,bw,bh has shape -> boxes_few, batch_size
   264|         1|  4.29153e-06|  4.29153e-06|  0.00%|    sample_zinstance: torch.Tensor  # boxes_few, batch_size, latent_dim
   265|         0|            0|            0|  0.00%|    # kl of the 3 latent variables
   266|         1|  4.76837e-06|  4.76837e-06|  0.00%|    kl_logit_map: torch.Tensor  # batch_size, 1, w, h
   267|         1|  4.05312e-06|  4.05312e-06|  0.00%|    kl_zwhere_map: torch.Tensor  # batch_size, 4, w, h
   268|         1|  4.29153e-06|  4.29153e-06|  0.00%|    kl_zwhere: torch.Tensor   # boxes_few, batch_size, latent_dim
   269|         1|  4.05312e-06|  4.05312e-06|  0.00%|    kl_zinstance: torch.Tensor  # boxes_few, batch_size, latent_dim
   270|         0|            0|            0|  0.00%|
   271|         0|            0|            0|  0.00%|
   272|         3|  8.58307e-05|  2.86102e-05|  0.00%|class RegMiniBatch(NamedTuple):
(call)|         1|  3.21865e-05|  3.21865e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/namedtuple.py:272 RegMiniBatch
(call)|         1|   0.00119567|   0.00119567|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:1363 __new__
   273|         0|            0|            0|  0.00%|    # All entries should be scalars obtained by averaging over minibatch
   274|         1|  4.52995e-06|  4.52995e-06|  0.00%|    reg_overlap: torch.Tensor
   275|         1|  4.52995e-06|  4.52995e-06|  0.00%|    reg_area_obj: torch.Tensor
   276|         0|            0|            0|  0.00%|
   277|        24|   0.00011158|  4.64916e-06|  0.00%|    def total(self):
   278|        23|  0.000167847|  7.29768e-06|  0.00%|        tot = None
   279|        69|  0.000365973|  5.30395e-06|  0.00%|        for x in self:
   280|        46|  0.000181675|  3.94946e-06|  0.00%|            if tot is None:
   281|        23|  8.67844e-05|  3.77323e-06|  0.00%|                tot = x
   282|         0|            0|            0|  0.00%|            else:
   283|        23|  0.000951529|  4.13708e-05|  0.00%|                tot += x
   284|        23|  9.08375e-05|  3.94946e-06|  0.00%|        return tot
   285|         0|            0|            0|  0.00%|
   286|         0|            0|            0|  0.00%|
   287|         3|  9.34601e-05|  3.11534e-05|  0.00%|class MetricMiniBatch(NamedTuple):
(call)|         1|  0.000820875|  0.000820875|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/namedtuple.py:287 MetricMiniBatch
(call)|         1|   0.00395298|   0.00395298|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:1363 __new__
   288|         0|            0|            0|  0.00%|    # All entries should be scalars obtained by averaging over minibatch
   289|         1|  1.57356e-05|  1.57356e-05|  0.00%|    loss: Union[torch.Tensor, float] # this is the only tensor b/c I need to take gradients
(call)|         1|  0.000680685|  0.000680685|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
   290|         1|  6.67572e-06|  6.67572e-06|  0.00%|    mse_tot: float
   291|         1|  5.00679e-06|  5.00679e-06|  0.00%|    reg_tot: float
   292|         1|  4.76837e-06|  4.76837e-06|  0.00%|    kl_tot: float
   293|         1|  4.76837e-06|  4.76837e-06|  0.00%|    sparsity_tot: float
   294|         0|            0|            0|  0.00%|
   295|         1|  5.24521e-06|  5.24521e-06|  0.00%|    kl_instance: float
   296|         1|  4.52995e-06|  4.52995e-06|  0.00%|    kl_where: float
   297|         1|  4.76837e-06|  4.76837e-06|  0.00%|    kl_logit: float
   298|         1|  4.76837e-06|  4.76837e-06|  0.00%|    sparsity_mask: float
   299|         1|  4.76837e-06|  4.76837e-06|  0.00%|    sparsity_box: float
   300|         1|  1.21593e-05|  1.21593e-05|  0.00%|    sparsity_prob: float
   301|         1|  4.76837e-06|  4.76837e-06|  0.00%|    reg_overlap: float
   302|         1|  4.52995e-06|  4.52995e-06|  0.00%|    reg_area_obj: float
   303|         0|            0|            0|  0.00%|
   304|         1|  4.76837e-06|  4.76837e-06|  0.00%|    fg_fraction: float
   305|         1|  4.52995e-06|  4.52995e-06|  0.00%|    geco_sparsity: float
   306|         1|  4.52995e-06|  4.52995e-06|  0.00%|    geco_balance: float
   307|         1|  4.76837e-06|  4.76837e-06|  0.00%|    delta_1: float
   308|         1|  4.76837e-06|  4.76837e-06|  0.00%|    delta_2: float
   309|         1|  4.76837e-06|  4.76837e-06|  0.00%|    length_GP: float
   310|         0|            0|            0|  0.00%|
   311|         7|  5.67436e-05|  8.10623e-06|  0.00%|    def pretty_print(self, epoch: int=0) -> str:
   312|         0|            0|            0|  0.00%|        s = "[epoch {0:4d}] loss={1:.3f}, mse={2:.3f}, \
   313|         0|            0|            0|  0.00%|        reg={3:.3f}, kl_tot={4:.3f}, sparsity={5:.3f}, \
   314|         6|  4.76837e-05|  7.94729e-06|  0.00%|        fg_fraction={6:.3f}, geco_sp={7:.3f}, geco_bal={8:.3f}".format(epoch,
   315|         6|  3.40939e-05|  5.68231e-06|  0.00%|                                                                       self.loss,
   316|         6|  2.88486e-05|  4.80811e-06|  0.00%|                                                                       self.mse_tot,
   317|         6|  2.52724e-05|  4.21206e-06|  0.00%|                                                                       self.reg_tot,
   318|         6|   2.5034e-05|  4.17233e-06|  0.00%|                                                                       self.kl_tot,
   319|         6|  4.45843e-05|  7.43071e-06|  0.00%|                                                                       self.sparsity_tot,
   320|         6|  2.88486e-05|  4.80811e-06|  0.00%|                                                                       self.fg_fraction,
   321|         6|  2.74181e-05|  4.56969e-06|  0.00%|                                                                       self.geco_sparsity,
   322|         6|   0.00015521|  2.58684e-05|  0.00%|                                                                       self.geco_balance)
   323|         6|  4.74453e-05|  7.90755e-06|  0.00%|        return s
   324|         0|            0|            0|  0.00%|
   325|         0|            0|            0|  0.00%|
   326|         3|  8.34465e-05|  2.78155e-05|  0.00%|class Output(NamedTuple):
(call)|         1|  3.17097e-05|  3.17097e-05|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/namedtuple.py:326 Output
(call)|         1|   0.00122809|   0.00122809|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:1363 __new__
   327|         1|   3.8147e-06|   3.8147e-06|  0.00%|    metrics: MetricMiniBatch
   328|         1|  4.29153e-06|  4.29153e-06|  0.00%|    inference: Inference
   329|         1|  4.76837e-06|  4.76837e-06|  0.00%|    imgs: torch.Tensor
File: <__array_function__ internals>_11
File duration: 0.00466371s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|       106|  0.000422716|  3.98789e-06|  0.00%|
(call)|         1|  1.04904e-05|  1.04904e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.58443e-05|  9.58443e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|       104|    0.0014832|  1.42616e-05|  0.00%|
(call)|       104|   0.00133467|  1.28333e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/multiarray.py:990 unravel_index
     5|       104|  0.000412941|  3.97059e-06|  0.00%|
     6|       104|   0.00234485|  2.25466e-05|  0.00%|
File: <string>_1
File duration: 0.00460863s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|       708|   0.00460863|  6.50937e-06|  0.00%|
File: <string>_15
File duration: 0.00460529s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|      1146|   0.00460529|  4.01858e-06|  0.00%|
File: <__array_function__ internals>_88
File duration: 0.00382495s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|       110|  0.000375509|  3.41372e-06|  0.00%|
(call)|         1|   1.0252e-05|   1.0252e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.27448e-05|  9.27448e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|       108|    0.0013051|  1.20843e-05|  0.00%|
(call)|       108|  0.000769615|  7.12607e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/numeric.py:2193 _isclose_dispatcher
     5|       108|  0.000449657|  4.16349e-06|  0.00%|
     6|       108|   0.00169468|  1.56915e-05|  0.00%|
(call)|       108|    0.0792525|  0.000733819|  0.02%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/numeric.py:2197 isclose
File: <__array_function__ internals>_6
File duration: 0.00351024s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|       140|  0.000445127|  3.17948e-06|  0.00%|
(call)|         1|   2.0504e-05|   2.0504e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.67979e-05|  9.67979e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|       138|   0.00165701|  1.20073e-05|  0.00%|
(call)|       138|  0.000934124|  6.76901e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/multiarray.py:634 result_type
     5|       138|  0.000477076|  3.45707e-06|  0.00%|
     6|       138|  0.000931025|  6.74655e-06|  0.00%|
File: <string>_77
File duration: 0.00332427s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|       850|   0.00332427|  3.91091e-06|  0.00%|
File: <string>_78
File duration: 0.00292683s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|       668|   0.00292683|  4.38148e-06|  0.00%|
File: <string>_94
File duration: 0.00290823s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|       712|   0.00290823|  4.08459e-06|  0.00%|
File: <string>_42
File duration: 0.00279403s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|       666|   0.00279403|  4.19524e-06|  0.00%|
File: <string>_76
File duration: 0.00230265s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|       436|   0.00230265|   5.2813e-06|  0.00%|
File: <__array_function__ internals>_184
File duration: 0.00174236s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|        42|  0.000212908|  5.06923e-06|  0.00%|
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000104666|  0.000104666|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|        40|  0.000657558|   1.6439e-05|  0.00%|
(call)|        40|  0.000349522|  8.73804e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/linalg/linalg.py:473 _unary_dispatcher
     5|        40|  0.000167131|  4.17829e-06|  0.00%|
     6|        40|  0.000704765|  1.76191e-05|  0.00%|
(call)|        40|    0.0138917|  0.000347292|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/linalg/linalg.py:477 inv
File: <__array_function__ internals>_85
File duration: 0.00165439s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|        50|  0.000219822|  4.39644e-06|  0.00%|
(call)|         1|   1.0252e-05|   1.0252e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000122547|  0.000122547|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|        48|   0.00060463|  1.25964e-05|  0.00%|
(call)|        48|  0.000304699|  6.34789e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/numeric.py:1367 _moveaxis_dispatcher
     5|        48|  0.000160694|  3.34779e-06|  0.00%|
     6|        48|  0.000669241|  1.39425e-05|  0.00%|
(call)|        48|   0.00908399|   0.00018925|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/numeric.py:1371 moveaxis
File: <__array_function__ internals>_31
File duration: 0.00159478s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|        46|  0.000217676|  4.73209e-06|  0.00%|
(call)|         1|  9.77516e-06|  9.77516e-06|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.08239e-05|  8.08239e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|        44|   0.00061655|  1.40125e-05|  0.00%|
(call)|        44|  0.000376463|  8.55598e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/fromnumeric.py:835 _sort_dispatcher
     5|        44|  0.000158548|  3.60337e-06|  0.00%|
     6|        44|  0.000602007|   1.3682e-05|  0.00%|
(call)|        44|   0.00191951|  4.36252e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/fromnumeric.py:839 sort
File: <string>_116
File duration: 0.00154352s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|       194|   0.00154352|   7.9563e-06|  0.00%|
File: <__array_function__ internals>_42
File duration: 0.00137258s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|        40|  0.000183821|  4.59552e-06|  0.00%|
(call)|         1|  1.00136e-05|  1.00136e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.58307e-05|  8.58307e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|        38|  0.000514746|  1.35459e-05|  0.00%|
(call)|        38|  0.000275135|   7.2404e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/fromnumeric.py:1911 _shape_dispatcher
     5|        38|  0.000159025|  4.18487e-06|  0.00%|
     6|        38|  0.000514984|  1.35522e-05|  0.00%|
(call)|        38|   0.00103712|  2.72927e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/fromnumeric.py:1915 shape
File: <__array_function__ internals>_68
File duration: 0.00134516s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|        42|  0.000154257|  3.67278e-06|  0.00%|
(call)|         1|   2.5034e-05|   2.5034e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.05855e-05|  8.05855e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|        40|  0.000521898|  1.30475e-05|  0.00%|
(call)|        40|  0.000285387|  7.13468e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/shape_base.py:136 _atleast_3d_dispatcher
     5|        40|   0.00015831|  3.95775e-06|  0.00%|
     6|        40|  0.000510693|  1.27673e-05|  0.00%|
(call)|        40|   0.00291204|  7.28011e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/shape_base.py:140 atleast_3d
File: <__array_function__ internals>_5
File duration: 0.00133204s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|        50|  0.000174761|  3.49522e-06|  0.00%|
(call)|         1|  1.04904e-05|  1.04904e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.58443e-05|  9.58443e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|        48|  0.000552416|  1.15087e-05|  0.00%|
(call)|        48|  0.000321388|  6.69559e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/multiarray.py:583 min_scalar_type
     5|        48|   0.00019598|  4.08292e-06|  0.00%|
     6|        48|  0.000408888|   8.5185e-06|  0.00%|
File: <string>_41
File duration: 0.00127292s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|       320|   0.00127292|  3.97786e-06|  0.00%|
File: <string>_67
File duration: 0.0012629s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|       216|    0.0012629|  5.84677e-06|  0.00%|
File: /home/jupyter/REPOS/spacetx-research/src/MODULES/graph_clustering.py
File duration: 0.00125813s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  5.26905e-05|  2.63453e-05|  0.00%|import torch
     2|         1|  1.04904e-05|  1.04904e-05|  0.00%|import numpy
     3|         1|  4.62532e-05|  4.62532e-05|  0.00%|import skimage.segmentation
(call)|         1|    0.0475247|    0.0475247|  0.01%|# <frozen importlib._bootstrap>:978 _find_and_load
     4|         1|  1.52588e-05|  1.52588e-05|  0.00%|import skimage.color
     5|         1|  7.86781e-05|  7.86781e-05|  0.00%|import leidenalg as la
(call)|         1|      0.56317|      0.56317|  0.15%|# <frozen importlib._bootstrap>:978 _find_and_load
     6|         1|  1.64509e-05|  1.64509e-05|  0.00%|import igraph as ig
     7|         1|  4.14848e-05|  4.14848e-05|  0.00%|from MODULES.namedtuple import Segmentation, Partition, SparseSimilarity, Suggestion, ConcordancePartition
(call)|         1|  4.07696e-05|  4.07696e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
     8|         1|  3.83854e-05|  3.83854e-05|  0.00%|from typing import Optional, List
(call)|         1|  1.78814e-05|  1.78814e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
     9|         1|   3.8147e-05|   3.8147e-05|  0.00%|from matplotlib import pyplot as plt
(call)|         1|    5.126e-05|    5.126e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
    10|         1|  3.55244e-05|  3.55244e-05|  0.00%|import neptune
    11|         1|  5.29289e-05|  5.29289e-05|  0.00%|from MODULES.utilities_neptune import log_img_and_chart
(call)|         1|  3.31402e-05|  3.31402e-05|  0.00%|# <frozen importlib._bootstrap>:1009 _handle_fromlist
    12|         0|            0|            0|  0.00%|
    13|         0|            0|            0|  0.00%|
    14|         0|            0|            0|  0.00%|# I HAVE LEARNED:
    15|         0|            0|            0|  0.00%|# 1. If I use a lot of negihbours then all methods are roughly equivalent b/c graph becomes ALL-TO-ALL
    16|         0|            0|            0|  0.00%|# 2. Radius=10 means each pixel has 121 neighbours
    17|         0|            0|            0|  0.00%|# 3. CPM does not suffer from the resolution limit which means that it tends to shave off small part from a cell.
    18|         0|            0|            0|  0.00%|# 4. For now I prefer to use a graph with normalized edges,
    19|         0|            0|            0|  0.00%|# modularity and single gigantic cluster (i.e. each_cc_component=False)
    20|         0|            0|            0|  0.00%|
    21|         1|  4.12464e-05|  4.12464e-05|  0.00%|with torch.no_grad():
(call)|         1|   5.6982e-05|   5.6982e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/grad_mode.py:65 __enter__
    22|         3|  0.000130892|  4.36306e-05|  0.00%|    class GraphSegmentation(object):
(call)|         1|   0.00277877|   0.00277877|  0.00%|# /home/jupyter/REPOS/spacetx-research/src/MODULES/graph_clustering.py:22 GraphSegmentation
(call)|         1|  7.20024e-05|  7.20024e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/autograd/grad_mode.py:69 __exit__
    23|         0|            0|            0|  0.00%|        """ Produce a consensus segmentation mask by finding communities on a graph.
    24|         0|            0|            0|  0.00%|            Each node is a foreground pixel and each edge is the similarity between spatially nearby pixels.
    25|         0|            0|            0|  0.00%|            The similarity measures if the pixels belong to the same object.
    26|         0|            0|            0|  0.00%|
    27|         0|            0|            0|  0.00%|            Typical usage:
    28|         0|            0|            0|  0.00%|            g = GraphSegmentation(tiling)
    29|         0|            0|            0|  0.00%|
    30|         0|            0|            0|  0.00%|            disconnected_components = g.graph.clusters(mode="STRONG")
    31|         0|            0|            0|  0.00%|            community1=g.partition_2_community(disconnected_components)
    32|         0|            0|            0|  0.00%|            g.plot_community(community1, figsize=(20,20))
    33|         0|            0|            0|  0.00%|
    34|         0|            0|            0|  0.00%|
    35|         0|            0|            0|  0.00%|            partition = g.find_partition(resolution = 0.03)
    36|         0|            0|            0|  0.00%|            community2 = g.partition_2_community(partition, size_threshold=10)
    37|         0|            0|            0|  0.00%|            g.plot_community(community2, figsize=(20,20))
    38|         1|  7.62939e-06|  7.62939e-06|  0.00%|        """
    39|         0|            0|            0|  0.00%|
    40|         0|            0|            0|  0.00%|        def __init__(self, segmentation: Segmentation,
    41|         0|            0|            0|  0.00%|                     min_fg_prob: float = 0.1,
    42|         0|            0|            0|  0.00%|                     min_edge_weight: Optional[float] = 0.01,
    43|         1|  5.26905e-05|  5.26905e-05|  0.00%|                     normalize_graph_edges: bool = False) -> None:
(call)|         1|  4.57764e-05|  4.57764e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
    44|         0|            0|            0|  0.00%|            super().__init__()
    45|         0|            0|            0|  0.00%|
    46|         0|            0|            0|  0.00%|            if torch.cuda.is_available():
    47|         0|            0|            0|  0.00%|                self.device = torch.device("cuda:0")
    48|         0|            0|            0|  0.00%|            else:
    49|         0|            0|            0|  0.00%|                self.device = torch.device("cpu")
    50|         0|            0|            0|  0.00%|
    51|         0|            0|            0|  0.00%|            self.raw_image = segmentation.raw_image[0].to(self.device)
    52|         0|            0|            0|  0.00%|            self.example_integer_mask = segmentation.integer_mask[0, 0].to(self.device)  # set batch=0, ch=0
    53|         0|            0|            0|  0.00%|
    54|         0|            0|            0|  0.00%|            # it should be able to handle both DenseSimilarity and SparseSimilarity
    55|         0|            0|            0|  0.00%|            b, c, ni, nj = segmentation.integer_mask.shape
    56|         0|            0|            0|  0.00%|            assert b == c == 1
    57|         0|            0|            0|  0.00%|            assert (1, 1, ni, nj) == segmentation.fg_prob.shape
    58|         0|            0|            0|  0.00%|
    59|         0|            0|            0|  0.00%|            self.index_matrix = None
    60|         0|            0|            0|  0.00%|            self.n_fg_pixel = None
    61|         0|            0|            0|  0.00%|            self.i_coordinate_fg_pixel = None
    62|         0|            0|            0|  0.00%|            self.j_coordinate_fg_pixel = None
    63|         0|            0|            0|  0.00%|            self.graph = self.similarity_2_graph(similarity=segmentation.similarity,
    64|         0|            0|            0|  0.00%|                                                 fg_prob=segmentation.fg_prob,
    65|         0|            0|            0|  0.00%|                                                 min_fg_prob=min_fg_prob,
    66|         0|            0|            0|  0.00%|                                                 min_edge_weight=min_edge_weight,
    67|         0|            0|            0|  0.00%|                                                 normalize_graph_edges=normalize_graph_edges)
    68|         0|            0|            0|  0.00%|
    69|         0|            0|            0|  0.00%|            # Connected Component partition
    70|         0|            0|            0|  0.00%|            self._partition_connected_components = None
    71|         0|            0|            0|  0.00%|            self._partition_sample_segmask = None
    72|         0|            0|            0|  0.00%|
    73|         0|            0|            0|  0.00%|            # TODO: Compute median density of connected components so that resolution parameter is about 1
    74|         0|            0|            0|  0.00%|            # self.reference_density = AUCH
    75|         0|            0|            0|  0.00%|
    76|         1|  1.38283e-05|  1.38283e-05|  0.00%|        @property
    77|         0|            0|            0|  0.00%|        def partition_connected_components(self):
    78|         0|            0|            0|  0.00%|            if self._partition_connected_components is None:
    79|         0|            0|            0|  0.00%|                mask = (self.index_matrix >= 0).cpu()
    80|         0|            0|            0|  0.00%|                labels = skimage.measure.label(mask, connectivity=2, background=0, return_num=False)
    81|         0|            0|            0|  0.00%|                membership_from_cc = torch.tensor(labels,
    82|         0|            0|            0|  0.00%|                                                  dtype=torch.long,
    83|         0|            0|            0|  0.00%|                                                  device=self.device)[self.i_coordinate_fg_pixel,
    84|         0|            0|            0|  0.00%|                                                                      self.j_coordinate_fg_pixel]
    85|         0|            0|            0|  0.00%|                self._partition_connected_components = Partition(membership=membership_from_cc,
    86|         0|            0|            0|  0.00%|                                                                 sizes=torch.bincount(membership_from_cc))
    87|         0|            0|            0|  0.00%|            return self._partition_connected_components
    88|         0|            0|            0|  0.00%|
    89|         1|  1.33514e-05|  1.33514e-05|  0.00%|        @property
    90|         0|            0|            0|  0.00%|        def partition_sample_segmask(self):
    91|         0|            0|            0|  0.00%|            if self._partition_sample_segmask is None:
    92|         0|            0|            0|  0.00%|                membership_from_example_segmask = self.example_integer_mask[self.i_coordinate_fg_pixel,
    93|         0|            0|            0|  0.00%|                                                                            self.j_coordinate_fg_pixel].long()
    94|         0|            0|            0|  0.00%|                self._partition_sample_segmask = Partition(membership=membership_from_example_segmask,
    95|         0|            0|            0|  0.00%|                                                           sizes=torch.bincount(membership_from_example_segmask))
    96|         0|            0|            0|  0.00%|            return self._partition_sample_segmask
    97|         0|            0|            0|  0.00%|
    98|         1|  1.26362e-05|  1.26362e-05|  0.00%|        def similarity_2_graph(self, similarity: SparseSimilarity,
    99|         1|   1.3113e-05|   1.3113e-05|  0.00%|                               fg_prob: torch.tensor,
   100|         1|  1.23978e-05|  1.23978e-05|  0.00%|                               min_fg_prob: float,
   101|         1|  2.71797e-05|  2.71797e-05|  0.00%|                               min_edge_weight: float,
   102|         1|  1.38283e-05|  1.38283e-05|  0.00%|                               normalize_graph_edges: bool) -> ig.Graph:
   103|         0|            0|            0|  0.00%|            """ Create the graph from the sparse similarity matrix """
   104|         0|            0|            0|  0.00%|            if not normalize_graph_edges:
   105|         0|            0|            0|  0.00%|                print("WARNING! You are going to create a graph without normalizing the edges by the sqrt of the node degree. \
   106|         0|            0|            0|  0.00%|                       Are you sure you know what you are doing?!")
   107|         0|            0|            0|  0.00%|
   108|         0|            0|            0|  0.00%|            # Move operation on GPU is available. Only at the end move back to cpu
   109|         0|            0|            0|  0.00%|            if torch.cuda.is_available():
   110|         0|            0|            0|  0.00%|                fg_prob = fg_prob.cuda()
   111|         0|            0|            0|  0.00%|                sparse_matrix = similarity.sparse_matrix.cuda()
   112|         0|            0|            0|  0.00%|                similarity_index_matrix = similarity.index_matrix.cuda()
   113|         0|            0|            0|  0.00%|            else:
   114|         0|            0|            0|  0.00%|                sparse_matrix = similarity.sparse_matrix.cpu()
   115|         0|            0|            0|  0.00%|                similarity_index_matrix = similarity.index_matrix.cpu()
   116|         0|            0|            0|  0.00%|
   117|         0|            0|            0|  0.00%|            # Map the location with small fg_prob to index = -1
   118|         0|            0|            0|  0.00%|            vertex_mask = fg_prob[0, 0] > min_fg_prob
   119|         0|            0|            0|  0.00%|            n_max = torch.max(similarity.index_matrix).item()
   120|         0|            0|            0|  0.00%|            transform_index = -1 * torch.ones(n_max + 1, dtype=torch.long, device=similarity_index_matrix.device)
   121|         0|            0|            0|  0.00%|            transform_index[similarity_index_matrix[vertex_mask]] = similarity_index_matrix[vertex_mask]
   122|         0|            0|            0|  0.00%|
   123|         0|            0|            0|  0.00%|            # Do the remapping (old to medium)
   124|         0|            0|            0|  0.00%|            v_tmp = sparse_matrix._values()
   125|         0|            0|            0|  0.00%|            ij_tmp = transform_index[sparse_matrix._indices()]
   126|         0|            0|            0|  0.00%|
   127|         0|            0|            0|  0.00%|            # Do the filtering
   128|         0|            0|            0|  0.00%|            my_filter = (v_tmp > min_edge_weight) * (ij_tmp[0, :] >= 0) * (ij_tmp[1, :] >= 0)
   129|         0|            0|            0|  0.00%|            v = v_tmp[my_filter]
   130|         0|            0|            0|  0.00%|            ij = ij_tmp[:, my_filter]
   131|         0|            0|            0|  0.00%|
   132|         0|            0|            0|  0.00%|            # Shift the labels so that there are no gaps (medium to new)
   133|         0|            0|            0|  0.00%|            ij_present = (torch.bincount(ij.view(-1)) > 0)
   134|         0|            0|            0|  0.00%|            self.n_fg_pixel = ij_present.sum().item()
   135|         0|            0|            0|  0.00%|            medium_2_new = (torch.cumsum(ij_present, dim=-1) * ij_present) - 1
   136|         0|            0|            0|  0.00%|            ij_new = medium_2_new[ij]
   137|         0|            0|            0|  0.00%|
   138|         0|            0|            0|  0.00%|            # Make a transformation of the index_matrix (old to new)
   139|         0|            0|            0|  0.00%|            transform_index.fill_(-1)
   140|         0|            0|            0|  0.00%|            transform_index[sparse_matrix._indices()[:, my_filter]] = ij_new
   141|         0|            0|            0|  0.00%|            self.index_matrix = transform_index[similarity_index_matrix]
   142|         0|            0|            0|  0.00%|            ni, nj = self.index_matrix.shape[-2:]
   143|         0|            0|            0|  0.00%|
   144|         0|            0|            0|  0.00%|            i_matrix, j_matrix = torch.meshgrid([torch.arange(ni, dtype=torch.long, device=self.index_matrix.device),
   145|         0|            0|            0|  0.00%|                                                 torch.arange(nj, dtype=torch.long, device=self.index_matrix.device)])
   146|         0|            0|            0|  0.00%|            self.i_coordinate_fg_pixel = i_matrix[self.index_matrix >= 0]
   147|         0|            0|            0|  0.00%|            self.j_coordinate_fg_pixel = j_matrix[self.index_matrix >= 0]
   148|         0|            0|            0|  0.00%|
   149|         0|            0|            0|  0.00%|            # Check
   150|         0|            0|            0|  0.00%|            tmp = -1 * torch.ones_like(self.index_matrix)
   151|         0|            0|            0|  0.00%|            tmp[self.i_coordinate_fg_pixel,
   152|         0|            0|            0|  0.00%|                self.j_coordinate_fg_pixel] = torch.arange(self.n_fg_pixel,
   153|         0|            0|            0|  0.00%|                                                           dtype=torch.long,
   154|         0|            0|            0|  0.00%|                                                           device=self.device)
   155|         0|            0|            0|  0.00%|            assert (tmp == self.index_matrix).all()
   156|         0|            0|            0|  0.00%|
   157|         0|            0|            0|  0.00%|            # Normalize the edges if necessary
   158|         0|            0|            0|  0.00%|            if normalize_graph_edges:
   159|         0|            0|            0|  0.00%|                # Before normalization v ~ 1.
   160|         0|            0|            0|  0.00%|                # After normalization v ~ 1/#neighbors so that sum_i v_ij ~ 1
   161|         0|            0|            0|  0.00%|                m = torch.sparse.FloatTensor(ij_new, v, torch.Size([self.n_fg_pixel, self.n_fg_pixel]))
   162|         0|            0|            0|  0.00%|                m_tmp = (torch.sparse.sum(m, dim=-1) + torch.sparse.sum(m, dim=-2)).coalesce()
   163|         0|            0|            0|  0.00%|                sqrt_sum_edges_at_vertex = torch.sqrt(m_tmp._values())
   164|         0|            0|            0|  0.00%|                v.div_(sqrt_sum_edges_at_vertex[ij_new[0]]*sqrt_sum_edges_at_vertex[ij_new[1]])
   165|         0|            0|            0|  0.00%|
   166|         0|            0|            0|  0.00%|            print("Building the graph with python-igraph")
   167|         0|            0|            0|  0.00%|            return ig.Graph(vertex_attrs={"label": numpy.arange(self.n_fg_pixel, dtype=numpy.int64)},
   168|         0|            0|            0|  0.00%|                            edges=ij_new.permute(1, 0).cpu().numpy(),
   169|         0|            0|            0|  0.00%|                            edge_attrs={"weight": v.cpu().numpy()},
   170|         0|            0|            0|  0.00%|                            graph_attrs={"total_edge_weight": v.sum().item(),
   171|         0|            0|            0|  0.00%|                                         "total_nodes": self.n_fg_pixel},
   172|         0|            0|            0|  0.00%|                            directed=False)
   173|         0|            0|            0|  0.00%|
   174|         1|  1.52588e-05|  1.52588e-05|  0.00%|        def partition_2_label(self, partition: Partition):
   175|         0|            0|            0|  0.00%|            label = torch.zeros_like(self.index_matrix,
   176|         0|            0|            0|  0.00%|                                     dtype=partition.membership.dtype,
   177|         0|            0|            0|  0.00%|                                     device=partition.membership.device)
   178|         0|            0|            0|  0.00%|            label[self.i_coordinate_fg_pixel, self.j_coordinate_fg_pixel] = partition.membership
   179|         0|            0|            0|  0.00%|            return label
   180|         0|            0|            0|  0.00%|
   181|         1|  1.35899e-05|  1.35899e-05|  0.00%|        def is_vertex_in_window(self, window: tuple):
   182|         0|            0|            0|  0.00%|            """ Same convention as scikit image:
   183|         0|            0|            0|  0.00%|                window = (min_row, min_col, max_row, max_col)
   184|         0|            0|            0|  0.00%|                Return boolean array describing whether the vertex is in the spatial windows
   185|         0|            0|            0|  0.00%|            """
   186|         0|            0|            0|  0.00%|            row_filter = (self.i_coordinate_fg_pixel >= window[0]) * (self.i_coordinate_fg_pixel < window[2])
   187|         0|            0|            0|  0.00%|            col_filter = (self.j_coordinate_fg_pixel >= window[1]) * (self.j_coordinate_fg_pixel < window[3])
   188|         0|            0|            0|  0.00%|            vertex_in_window = row_filter * col_filter
   189|         0|            0|            0|  0.00%|            if (~vertex_in_window).all():
   190|         0|            0|            0|  0.00%|                raise Exception("All vertices are outside the chosen window. \
   191|         0|            0|            0|  0.00%|                                 This is wrong. Doulbe check your window specifications")
   192|         0|            0|            0|  0.00%|            return vertex_in_window
   193|         0|            0|            0|  0.00%|
   194|         0|            0|            0|  0.00%|        def subgraphs_by_partition_and_window(self,
   195|         0|            0|            0|  0.00%|                                              partition: Optional[Partition],
   196|         0|            0|            0|  0.00%|                                              window: Optional[tuple],
   197|         1|  9.91821e-05|  9.91821e-05|  0.00%|                                              include_bg: bool = False) -> List[ig.Graph]:
(call)|         3|    0.0016377|  0.000545899|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
   198|         0|            0|            0|  0.00%|            """ same covention as scikit image: window = (min_row, min_col, max_row, max_col) """
   199|         0|            0|            0|  0.00%|
   200|         0|            0|            0|  0.00%|            if (partition is None) and (window is None):
   201|         0|            0|            0|  0.00%|                # nothing to do
   202|         0|            0|            0|  0.00%|                for i in range(1):
   203|         0|            0|            0|  0.00%|                    yield self.graph
   204|         0|            0|            0|  0.00%|
   205|         0|            0|            0|  0.00%|            elif (partition is None) and (window is not None):
   206|         0|            0|            0|  0.00%|                # return a single graph by window
   207|         0|            0|            0|  0.00%|                mask_vertex_in_window = self.is_vertex_in_window(window)  # torch.bool
   208|         0|            0|            0|  0.00%|                vertex_label = torch.tensor(self.graph.vs["label"], dtype=torch.long, device=self.device)
   209|         0|            0|            0|  0.00%|                for i in range(1):
   210|         0|            0|            0|  0.00%|                    yield self.graph.subgraph(vertices=vertex_label[mask_vertex_in_window])
   211|         0|            0|            0|  0.00%|
   212|         0|            0|            0|  0.00%|            elif partition is not None:
   213|         0|            0|            0|  0.00%|                # return many graphs
   214|         0|            0|            0|  0.00%|
   215|         0|            0|            0|  0.00%|                if window is None:
   216|         0|            0|            0|  0.00%|                    vertex_in_window = torch.ones_like(partition.membership).bool()
   217|         0|            0|            0|  0.00%|                else:
   218|         0|            0|            0|  0.00%|                    vertex_in_window = self.is_vertex_in_window(window)
   219|         0|            0|            0|  0.00%|
   220|         0|            0|            0|  0.00%|                vertex_label = torch.tensor(self.graph.vs["label"], dtype=torch.long, device=self.device)
   221|         0|            0|            0|  0.00%|                n_start = 0 if include_bg else 1
   222|         0|            0|            0|  0.00%|                for n in range(n_start, len(partition.sizes)):
   223|         0|            0|            0|  0.00%|                    vertex_mask = (partition.membership == n) * vertex_in_window
   224|         0|            0|            0|  0.00%|                    yield self.graph.subgraph(vertices=vertex_label[vertex_mask])
   225|         0|            0|            0|  0.00%|
   226|         0|            0|            0|  0.00%|        def suggest_resolution_parameter(self,
   227|         0|            0|            0|  0.00%|                                         window: Optional[tuple] = None,
   228|         0|            0|            0|  0.00%|                                         min_size: Optional[float] = 20,
   229|         0|            0|            0|  0.00%|                                         max_size: Optional[float] = None,
   230|         0|            0|            0|  0.00%|                                         cpm_or_modularity: str = "cpm",
   231|         0|            0|            0|  0.00%|                                         each_cc_separately: bool = False,
   232|         1|  0.000124216|  0.000124216|  0.00%|                                         sweep_range: Optional[numpy.ndarray] = None) -> Suggestion:
(call)|         4|  0.000124454|  3.11136e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
   233|         0|            0|            0|  0.00%|            """ This function select the resolution parameter which gives the hightest
   234|         0|            0|            0|  0.00%|                Intersection Over Union with the target partition.
   235|         0|            0|            0|  0.00%|                By default the target partition is self.partition_sample_segmask.
   236|         0|            0|            0|  0.00%|
   237|         0|            0|            0|  0.00%|                To speed up the calculation the optimal resolution parameter is computed based
   238|         0|            0|            0|  0.00%|                on a windows of the original image. If window is None the entire image is used. This might be very slow.
   239|         0|            0|            0|  0.00%|
   240|         0|            0|            0|  0.00%|                Only CPM is scale invariant.
   241|         0|            0|            0|  0.00%|                If using modularity the same resolution paerameter will give different results depending on the size of the analyzed window.
   242|         0|            0|            0|  0.00%|
   243|         0|            0|            0|  0.00%|                The suggested resolution parameter is NOT necessarily optimal.
   244|         0|            0|            0|  0.00%|                Try smaller values to undersegment and larger value to oversegment.
   245|         0|            0|            0|  0.00%|
   246|         0|            0|            0|  0.00%|                window = (min_row, min_col, max_row, max_col)
   247|         0|            0|            0|  0.00%|            """
   248|         0|            0|            0|  0.00%|
   249|         0|            0|            0|  0.00%|            # filter by window
   250|         0|            0|            0|  0.00%|            if window is None:
   251|         0|            0|            0|  0.00%|                window = [0, 0, self.raw_image.shape[-2], self.raw_image.shape[-1]]
   252|         0|            0|            0|  0.00%|                other_partition = self.partition_sample_segmask
   253|         0|            0|            0|  0.00%|            else:
   254|         0|            0|            0|  0.00%|                window = (max(0, window[0]),
   255|         0|            0|            0|  0.00%|                          max(0, window[1]),
   256|         0|            0|            0|  0.00%|                          min(self.raw_image.shape[-2], window[2]),
   257|         0|            0|            0|  0.00%|                          min(self.raw_image.shape[-1], window[3]))
   258|         0|            0|            0|  0.00%|                vertex_in_window = self.is_vertex_in_window(window)
   259|         0|            0|            0|  0.00%|                # NEXT LINE IS A BIT SLOW
   260|         0|            0|            0|  0.00%|                other_partition = self.partition_sample_segmask.filter_by_vertex(keep_vertex=vertex_in_window)
   261|         0|            0|            0|  0.00%|
   262|         0|            0|            0|  0.00%|            resolutions = numpy.arange(0.5, 10, 0.5) if sweep_range is None else sweep_range
   263|         0|            0|            0|  0.00%|            iou = numpy.zeros(resolutions.shape[0], dtype=float)
   264|         0|            0|            0|  0.00%|            mi = numpy.zeros_like(iou)
   265|         0|            0|            0|  0.00%|            label = numpy.zeros((resolutions.shape[0], window[2]-window[0], window[3]-window[1]), dtype=numpy.int)
   266|         0|            0|            0|  0.00%|            delta_n_cells = numpy.zeros(resolutions.shape[0], dtype=numpy.int)
   267|         0|            0|            0|  0.00%|            n_cells = numpy.zeros_like(delta_n_cells)
   268|         0|            0|            0|  0.00%|            sizes_list = list()
   269|         0|            0|            0|  0.00%|
   270|         0|            0|            0|  0.00%|            for n, res in enumerate(resolutions):
   271|         0|            0|            0|  0.00%|                if (n % 10 == 0) or (n == resolutions.shape[0]-1) :
   272|         0|            0|            0|  0.00%|                    print("resolution sweep, {0:3d} out of {1:3d}".format(n, resolutions.shape[0]-1))
   273|         0|            0|            0|  0.00%|
   274|         0|            0|            0|  0.00%|                p_tmp = self.find_partition_leiden(resolution=res,
   275|         0|            0|            0|  0.00%|                                                   window=window,
   276|         0|            0|            0|  0.00%|                                                   min_size=min_size,
   277|         0|            0|            0|  0.00%|                                                   max_size=max_size,
   278|         0|            0|            0|  0.00%|                                                   cpm_or_modularity=cpm_or_modularity,
   279|         0|            0|            0|  0.00%|                                                   each_cc_separately=each_cc_separately)
   280|         0|            0|            0|  0.00%|
   281|         0|            0|            0|  0.00%|                #TODO: the following lines are very slow for a large graph
   282|         0|            0|            0|  0.00%|                n_cells[n] = len(p_tmp.sizes)-1
   283|         0|            0|            0|  0.00%|                label[n] = self.partition_2_label(p_tmp)[window[0]:window[2], window[1]:window[3]].cpu().numpy()
   284|         0|            0|            0|  0.00%|                sizes_list.append(p_tmp.sizes.cpu().numpy())
   285|         0|            0|            0|  0.00%|
   286|         0|            0|            0|  0.00%|                # Conpute concordance
   287|         0|            0|            0|  0.00%|                c_tmp: ConcordancePartition = p_tmp.concordance_with_partition(other_partition=other_partition)
   288|         0|            0|            0|  0.00%|                delta_n_cells[n] = c_tmp.delta_n
   289|         0|            0|            0|  0.00%|                iou[n] = c_tmp.iou
   290|         0|            0|            0|  0.00%|                mi[n] = c_tmp.mutual_information
   291|         0|            0|            0|  0.00%|
   292|         0|            0|            0|  0.00%|            i_max = numpy.argmax(iou)
   293|         0|            0|            0|  0.00%|            return Suggestion(best_resolution=resolutions[i_max],
   294|         0|            0|            0|  0.00%|                              best_index=i_max.item(),
   295|         0|            0|            0|  0.00%|                              sweep_resolution=resolutions,
   296|         0|            0|            0|  0.00%|                              sweep_mi=mi,
   297|         0|            0|            0|  0.00%|                              sweep_iou=iou,
   298|         0|            0|            0|  0.00%|                              sweep_delta_n=delta_n_cells,
   299|         0|            0|            0|  0.00%|                              sweep_seg_mask=label,
   300|         0|            0|            0|  0.00%|                              sweep_sizes=sizes_list,
   301|         0|            0|            0|  0.00%|                              sweep_n_cells=n_cells)
   302|         0|            0|            0|  0.00%|
   303|         0|            0|            0|  0.00%|        # TODO use built-in leiden algorithm instead of leidenalg?
   304|         0|            0|            0|  0.00%|        def find_partition_leiden(self,
   305|         0|            0|            0|  0.00%|                                  resolution: float,
   306|         0|            0|            0|  0.00%|                                  window: Optional[tuple] = None,
   307|         0|            0|            0|  0.00%|                                  min_size: Optional[float] = 20,
   308|         0|            0|            0|  0.00%|                                  max_size: Optional[float] = None,
   309|         0|            0|            0|  0.00%|                                  cpm_or_modularity: str = "cpm",
   310|         0|            0|            0|  0.00%|                                  each_cc_separately: bool = False,
   311|         0|            0|            0|  0.00%|                                  n_iterations: int = 2,
   312|         1|   0.00010252|   0.00010252|  0.00%|                                  initial_membership: Optional[numpy.ndarray] = None) -> Partition:
(call)|         4|  0.000157356|  3.93391e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
   313|         0|            0|            0|  0.00%|            """ Find a partition of the graph by greedy maximization of CPM or Modularity metric.
   314|         0|            0|            0|  0.00%|                The graph can have both normalized and un-normalized weight.
   315|         0|            0|            0|  0.00%|                The strong recommendation is to use CPM with normalized edge weight.
   316|         0|            0|            0|  0.00%|
   317|         0|            0|            0|  0.00%|                The metric can be both cpm or modularity
   318|         0|            0|            0|  0.00%|                The results are all similar (provided the resolution parameter is tuned correctly).
   319|         0|            0|            0|  0.00%|
   320|         0|            0|            0|  0.00%|                If you want to use the suggest_resolution_parameter function with full automatic you should use either:
   321|         0|            0|            0|  0.00%|                1. CPM with normalized edge weight
   322|         0|            0|            0|  0.00%|                2. MODULARITY with UN Normalized edge_weight
   323|         0|            0|            0|  0.00%|
   324|         0|            0|            0|  0.00%|                You can also pass a sweep_range.
   325|         0|            0|            0|  0.00%|
   326|         0|            0|            0|  0.00%|                The resolution parameter can be increased (to obtain smaller communities) or
   327|         0|            0|            0|  0.00%|                decreased (to obtain larger communities).
   328|         0|            0|            0|  0.00%|
   329|         0|            0|            0|  0.00%|                To speed up the calculation the graph partitioning can be done separately for each connected components.
   330|         0|            0|            0|  0.00%|                This is absolutely ok for CPM metric while a bit questionable for Modularity metric.
   331|         0|            0|            0|  0.00%|                It is not likely to make much difference either way.
   332|         0|            0|            0|  0.00%|
   333|         0|            0|            0|  0.00%|                window has the same convention as scikit image, i.e. window = (min_row, min_col, max_row, max_col)
   334|         0|            0|            0|  0.00%|            """
   335|         0|            0|            0|  0.00%|
   336|         0|            0|            0|  0.00%|            if cpm_or_modularity == "cpm":
   337|         0|            0|            0|  0.00%|                partition_type = la.CPMVertexPartition
   338|         0|            0|            0|  0.00%|
   339|         0|            0|            0|  0.00%|                #TODO: Rescale the resolution by some (robust) properties of the full graph so that the right resolution parameter is about 1
   340|         0|            0|            0|  0.00%|                raise NotImplementedError
   341|         0|            0|            0|  0.00%|                n = self.graph["total_nodes"]
   342|         0|            0|            0|  0.00%|                overall_graph_density = self.graph["total_edge_weight"] * 2.0 / (n * (n - 1))
   343|         0|            0|            0|  0.00%|                resolution = overall_graph_density * resolution
   344|         0|            0|            0|  0.00%|
   345|         0|            0|            0|  0.00%|            elif cpm_or_modularity == "modularity":
   346|         0|            0|            0|  0.00%|                partition_type = la.RBConfigurationVertexPartition
   347|         0|            0|            0|  0.00%|            else:
   348|         0|            0|            0|  0.00%|                raise Exception("Warning!! Argument not recognized. \
   349|         0|            0|            0|  0.00%|                                           CPM_or_modularity can only be 'CPM' or 'modularity'")
   350|         0|            0|            0|  0.00%|
   351|         0|            0|            0|  0.00%|            # Subset graph by connected components and windows if necessary
   352|         0|            0|            0|  0.00%|            max_label = 0
   353|         0|            0|            0|  0.00%|            membership = torch.zeros(self.n_fg_pixel, dtype=torch.long, device=self.device)
   354|         0|            0|            0|  0.00%|            partition_for_subgraphs = self.partition_connected_components if each_cc_separately else None
   355|         0|            0|            0|  0.00%|
   356|         0|            0|            0|  0.00%|            for n, g in enumerate(self.subgraphs_by_partition_and_window(window=window,
   357|         0|            0|            0|  0.00%|                                                                         partition=partition_for_subgraphs)):
   358|         0|            0|            0|  0.00%|
   359|         0|            0|            0|  0.00%|                # With this rescaling the value of the resolution parameter optimized
   360|         0|            0|            0|  0.00%|                # for a small window can be used to segment a large window
   361|         0|            0|            0|  0.00%|                if cpm_or_modularity == "modularity":
   362|         0|            0|            0|  0.00%|                    tmp = numpy.sum(g.es["weight"]) / g["total_edge_weight"]
   363|         0|            0|            0|  0.00%|                    resolution = resolution * tmp
   364|         0|            0|            0|  0.00%|
   365|         0|            0|            0|  0.00%|                if g.vcount() > 0:
   366|         0|            0|            0|  0.00%|                    # Only if the graph has node I tried to find the partition
   367|         0|            0|            0|  0.00%|
   368|         0|            0|            0|  0.00%|                    print("find partition internal")
   369|         0|            0|            0|  0.00%|                    p = la.find_partition(graph=g,
   370|         0|            0|            0|  0.00%|                                          partition_type=partition_type,
   371|         0|            0|            0|  0.00%|                                          initial_membership=initial_membership,
   372|         0|            0|            0|  0.00%|                                          weights=g.es['weight'],
   373|         0|            0|            0|  0.00%|                                          n_iterations=n_iterations,
   374|         0|            0|            0|  0.00%|                                          resolution_parameter=resolution)
   375|         0|            0|            0|  0.00%|
   376|         0|            0|            0|  0.00%|                    labels = torch.tensor(p.membership, device=self.device, dtype=torch.long) + 1
   377|         0|            0|            0|  0.00%|                    shifted_labels = labels + max_label
   378|         0|            0|            0|  0.00%|                    max_label += torch.max(labels)
   379|         0|            0|            0|  0.00%|                    membership[g.vs['label']] = shifted_labels
   380|         0|            0|            0|  0.00%|
   381|         0|            0|            0|  0.00%|            # TODO: filter_by_size is slow
   382|         0|            0|            0|  0.00%|            return Partition(sizes=torch.bincount(membership),
   383|         0|            0|            0|  0.00%|                             membership=membership).filter_by_size(min_size=min_size, max_size=max_size)
   384|         0|            0|            0|  0.00%|
   385|         1|  1.43051e-05|  1.43051e-05|  0.00%|        def QC_on_label(self, old_label, min_area):
   386|         0|            0|            0|  0.00%|            """ This function filter the labels by some criteria. For example by min size"""
   387|         0|            0|            0|  0.00%|            labels = skimage.measure.label(old_label.cpu(), background=0, return_num=False, connectivity=2)
   388|         0|            0|            0|  0.00%|            mydict = skimage.measure.regionprops_table(labels, properties=['label', 'area'])
   389|         0|            0|            0|  0.00%|            my_filter = mydict["area"] > min_area
   390|         0|            0|            0|  0.00%|
   391|         0|            0|            0|  0.00%|            bad_labels = mydict["label"][~my_filter]
   392|         0|            0|            0|  0.00%|            old2new = numpy.arange(mydict["label"][-1]+1)
   393|         0|            0|            0|  0.00%|            old2new[bad_labels] = 0
   394|         0|            0|            0|  0.00%|            new_labels = old2new[labels].astype(numpy.int32)
   395|         0|            0|            0|  0.00%|            return new_labels
   396|         0|            0|            0|  0.00%|
   397|         0|            0|            0|  0.00%|        def plot_partition(self, partition: Optional[Partition] = None,
   398|         0|            0|            0|  0.00%|                           figsize: Optional[tuple] = (12, 12),
   399|         0|            0|            0|  0.00%|                           window: Optional[tuple] = None,
   400|         0|            0|            0|  0.00%|                           experiment: Optional[neptune.experiments.Experiment] = None,
   401|         1|  0.000109196|  0.000109196|  0.00%|                           neptune_name: Optional[str] = None,
(call)|         5|   0.00012064|   2.4128e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
   402|         1|   1.4782e-05|   1.4782e-05|  0.00%|                           **kargs) -> torch.tensor:
   403|         0|            0|            0|  0.00%|            """
   404|         0|            0|            0|  0.00%|                If partition is None it prints the connected components
   405|         0|            0|            0|  0.00%|                window has the same convention as scikit image, i.e. window = (min_row, min_col, max_row, max_col)
   406|         0|            0|            0|  0.00%|                kargs can include:
   407|         0|            0|            0|  0.00%|                density=True, bins=50, range=(10,100), ...
   408|         0|            0|            0|  0.00%|            """
   409|         0|            0|            0|  0.00%|
   410|         0|            0|            0|  0.00%|            if partition is None:
   411|         0|            0|            0|  0.00%|                partition = self.partition_connected_components
   412|         0|            0|            0|  0.00%|
   413|         0|            0|            0|  0.00%|            if window is None:
   414|         0|            0|            0|  0.00%|                w = [0, 0, self.raw_image.shape[-2], self.raw_image.shape[-1]]
   415|         0|            0|            0|  0.00%|                sizes_fg = partition.sizes[1:]  # no background
   416|         0|            0|            0|  0.00%|            else:
   417|         0|            0|            0|  0.00%|                sizes = torch.bincount(self.is_vertex_in_window(window=window) * partition.membership)
   418|         0|            0|            0|  0.00%|                sizes_fg = sizes[1:]  # no background
   419|         0|            0|            0|  0.00%|                sizes_fg = sizes_fg[sizes_fg > 0]  # since I am filtering the vertex some sizes might become zero
   420|         0|            0|            0|  0.00%|                w = window
   421|         0|            0|            0|  0.00%|
   422|         0|            0|            0|  0.00%|            label = self.partition_2_label(partition)[w[0]:w[2], w[1]:w[3]].cpu().long().numpy()  # shape: w, h
   423|         0|            0|            0|  0.00%|            image = self.raw_image[:, w[0]:w[2], w[1]:w[3]].permute(1, 2, 0).cpu().float().numpy()  # shape: w, h, ch
   424|         0|            0|            0|  0.00%|            if len(image.shape) == 3 and (image.shape[-1] != 3):
   425|         0|            0|            0|  0.00%|                image = image[..., 0]
   426|         0|            0|            0|  0.00%|
   427|         0|            0|            0|  0.00%|            fig, axes = plt.subplots(ncols=2, nrows=2, figsize=figsize)
   428|         0|            0|            0|  0.00%|            axes[0, 0].imshow(skimage.color.label2rgb(label=label,
   429|         0|            0|            0|  0.00%|                                                      bg_label=0))
   430|         0|            0|            0|  0.00%|            axes[0, 1].imshow(skimage.color.label2rgb(label=label,
   431|         0|            0|            0|  0.00%|                                                      image=image,
   432|         0|            0|            0|  0.00%|                                                      alpha=0.25,
   433|         0|            0|            0|  0.00%|                                                      bg_label=0))
   434|         0|            0|            0|  0.00%|            axes[1, 0].imshow(image)
   435|         0|            0|            0|  0.00%|            axes[1, 1].hist(sizes_fg.cpu(), **kargs)
   436|         0|            0|            0|  0.00%|
   437|         0|            0|            0|  0.00%|            title_partition = 'Partition, #cells -> '+str(sizes_fg.shape[0])
   438|         0|            0|            0|  0.00%|            axes[0, 0].set_title(title_partition)
   439|         0|            0|            0|  0.00%|            axes[0, 1].set_title(title_partition)
   440|         0|            0|            0|  0.00%|            axes[1, 0].set_title("raw image")
   441|         0|            0|            0|  0.00%|            axes[1, 1].set_title("size distribution")
   442|         0|            0|            0|  0.00%|
   443|         0|            0|            0|  0.00%|            fig.tight_layout()
   444|         0|            0|            0|  0.00%|            if neptune_name is not None:
   445|         0|            0|            0|  0.00%|                log_img_and_chart(name=neptune_name, fig=fig, experiment=experiment)
   446|         0|            0|            0|  0.00%|            plt.close(fig)
   447|         0|            0|            0|  0.00%|            return fig
   448|         0|            0|            0|  0.00%|
   449|         0|            0|            0|  0.00%|
File: <__array_function__ internals>_143
File duration: 0.00108075s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|        32|  0.000145912|  4.55976e-06|  0.00%|
(call)|         1|  1.12057e-05|  1.12057e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000136852|  0.000136852|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|        30|  0.000347853|  1.15951e-05|  0.00%|
(call)|        30|  0.000234365|  7.81218e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/function_base.py:18 _linspace_dispatcher
     5|        30|  0.000123024|   4.1008e-06|  0.00%|
     6|        30|  0.000463963|  1.54654e-05|  0.00%|
(call)|        30|    0.0123289|  0.000410962|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/function_base.py:23 linspace
File: <__array_function__ internals>_75
File duration: 0.00102735s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|        30|  0.000131845|  4.39485e-06|  0.00%|
(call)|         1|  1.09673e-05|  1.09673e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.82149e-05|  8.82149e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|        28|  0.000407934|  1.45691e-05|  0.00%|
(call)|        28|  0.000219107|  7.82524e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/numeric.py:319 _full_like_dispatcher
     5|        28|  0.000102997|  3.67846e-06|  0.00%|
     6|        28|  0.000384569|  1.37346e-05|  0.00%|
(call)|        28|   0.00336266|  0.000120095|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/numeric.py:323 full_like
File: <string>_115
File duration: 0.000988245s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|       146|  0.000988245|   6.7688e-06|  0.00%|
File: <string>_4
File duration: 0.000949144s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|       260|  0.000949144|  3.65056e-06|  0.00%|
File: <__array_function__ internals>_265
File duration: 0.00093317s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|        22|  0.000137806|  6.26391e-06|  0.00%|
(call)|         1|  1.04904e-05|  1.04904e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.39233e-05|  8.39233e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|        20|  0.000347376|  1.73688e-05|  0.00%|
(call)|        20|  0.000181198|  9.05991e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/shape_base.py:1167 _tile_dispatcher
     5|        20|  7.86781e-05|  3.93391e-06|  0.00%|
     6|        20|   0.00036931|  1.84655e-05|  0.00%|
(call)|        20|   0.00300574|  0.000150287|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/shape_base.py:1171 tile
File: <__array_function__ internals>_86
File duration: 0.000825644s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|        18|  0.000212431|  1.18017e-05|  0.00%|
(call)|         1|   1.0252e-05|   1.0252e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.55923e-05|  8.55923e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|        16|  0.000251293|  1.57058e-05|  0.00%|
(call)|        16|  0.000125408|  7.83801e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/numeric.py:1448 _cross_dispatcher
     5|        16|  5.88894e-05|  3.68059e-06|  0.00%|
     6|        16|   0.00030303|  1.89394e-05|  0.00%|
(call)|        16|    0.0163922|   0.00102451|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/numeric.py:1452 cross
File: <__array_function__ internals>_2
File duration: 0.000822067s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|        26|   0.00015378|  5.91461e-06|  0.00%|
(call)|         1|  1.04904e-05|  1.04904e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000138998|  0.000138998|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|        24|  0.000351429|  1.46429e-05|  0.00%|
(call)|        24|  0.000178099|  7.42078e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/multiarray.py:311 where
     5|        24|  9.13143e-05|  3.80476e-06|  0.00%|
     6|        24|  0.000225544|  9.39767e-06|  0.00%|
File: <string>_117
File duration: 0.000817537s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|        98|  0.000817537|  8.34222e-06|  0.00%|
File: <string>_79
File duration: 0.000705004s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|       210|  0.000705004|  3.35716e-06|  0.00%|
File: <__array_function__ internals>_285
File duration: 0.000641584s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  0.000641584|  0.000320792|  0.00%|
(call)|         1|   1.0252e-05|   1.0252e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|   0.00010848|   0.00010848|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_71
File duration: 0.000532389s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|        14|   8.2016e-05|  5.85829e-06|  0.00%|
(call)|         1|  1.09673e-05|  1.09673e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000117779|  0.000117779|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|        12|  0.000177622|  1.48018e-05|  0.00%|
(call)|        12|  0.000478983|  3.99152e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/shape_base.py:349 _stack_dispatcher
     5|        12|  4.60148e-05|  3.83457e-06|  0.00%|
     6|        12|  0.000226736|  1.88947e-05|  0.00%|
(call)|        12|   0.00295711|  0.000246425|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/shape_base.py:358 stack
File: <__array_function__ internals>_199
File duration: 0.000512362s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|        14|  7.84397e-05|  5.60284e-06|  0.00%|
(call)|         1|  1.12057e-05|  1.12057e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.67979e-05|  9.67979e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|        12|  0.000184059|  1.53383e-05|  0.00%|
(call)|        12|   8.4877e-05|  7.07308e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/linalg/linalg.py:2359 _norm_dispatcher
     5|        12|  4.24385e-05|  3.53654e-06|  0.00%|
     6|        12|  0.000207424|  1.72853e-05|  0.00%|
(call)|        12|   0.00200605|  0.000167171|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/linalg/linalg.py:2363 norm
File: <string>_124
File duration: 0.000504494s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|        48|  0.000504494|  1.05103e-05|  0.00%|
File: <__array_function__ internals>_10
File duration: 0.000497103s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|        10|  6.07967e-05|  6.07967e-06|  0.00%|
(call)|         1|   1.0252e-05|   1.0252e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.44138e-05|  9.44138e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|         8|  0.000157595|  1.96993e-05|  0.00%|
(call)|         8|  0.000101089|  1.26362e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/multiarray.py:929 ravel_multi_index
     5|         8|  4.79221e-05|  5.99027e-06|  0.00%|
     6|         8|  0.000230789|  2.88486e-05|  0.00%|
File: <string>_159
File duration: 0.000491381s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|        46|  0.000491381|  1.06822e-05|  0.00%|
File: <string>_19
File duration: 0.000439644s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|       108|  0.000439644|  4.07078e-06|  0.00%|
File: <__array_function__ internals>_23
File duration: 0.000423908s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|        14|   6.7234e-05|  4.80243e-06|  0.00%|
(call)|         1|  9.77516e-06|  9.77516e-06|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.65459e-05|  8.65459e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|        12|  0.000184298|  1.53581e-05|  0.00%|
(call)|        12|  7.67708e-05|  6.39757e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/fromnumeric.py:194 _reshape_dispatcher
     5|        12|  4.24385e-05|  3.53654e-06|  0.00%|
     6|        12|  0.000129938|  1.08282e-05|  0.00%|
(call)|        12|  0.000700951|  5.84126e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/fromnumeric.py:199 reshape
File: <string>_122
File duration: 0.000404596s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|        50|  0.000404596|  8.09193e-06|  0.00%|
File: <__array_function__ internals>_233
File duration: 0.00039649s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|        12|  7.34329e-05|  6.11941e-06|  0.00%|
(call)|         1|  1.26362e-05|  1.26362e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.48906e-05|  9.48906e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|        10|  0.000146866|  1.46866e-05|  0.00%|
(call)|        10|  9.63211e-05|  9.63211e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/stride_tricks.py:137 _broadcast_to_dispatcher
     5|        10|  3.76701e-05|  3.76701e-06|  0.00%|
     6|        10|  0.000138521|  1.38521e-05|  0.00%|
(call)|        10|    0.0019877|   0.00019877|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/stride_tricks.py:141 broadcast_to
File: <__array_function__ internals>_76
File duration: 0.000375271s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|        10|  7.60555e-05|  7.60555e-06|  0.00%|
(call)|         1|  1.12057e-05|  1.12057e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|   9.2268e-05|   9.2268e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|         8|  0.000122786|  1.53482e-05|  0.00%|
(call)|         8|   6.7234e-05|  8.40425e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/numeric.py:387 _count_nonzero_dispatcher
     5|         8|  3.26633e-05|  4.08292e-06|  0.00%|
     6|         8|  0.000143766|  1.79708e-05|  0.00%|
(call)|         8|  0.000153542|  1.91927e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/numeric.py:391 count_nonzero
File: <string>_118
File duration: 0.000346899s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|        50|  0.000346899|  6.93798e-06|  0.00%|
File: <string>_147
File duration: 0.000337124s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|        72|  0.000337124|  4.68228e-06|  0.00%|
File: <string>_121
File duration: 0.000302315s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|        50|  0.000302315|   6.0463e-06|  0.00%|
File: <string>_123
File duration: 0.000286579s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|        48|  0.000286579|   5.9704e-06|  0.00%|
File: <string>_125
File duration: 0.000233412s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|        48|  0.000233412|  4.86275e-06|  0.00%|
File: <string>_3
File duration: 0.000208139s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|        20|  0.000208139|   1.0407e-05|  0.00%|
File: <string>_137
File duration: 0.000164509s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  0.000164509|  8.22544e-05|  0.00%|
(call)|         9|  0.000101805|  1.13116e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/jit/annotations.py:48 __getitem__
(call)|         3|  0.000107765|  3.59217e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
(call)|         1|   0.00130057|   0.00130057|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:746 __getitem__
File: <__array_function__ internals>_209
File duration: 0.000163555s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         3|  4.07696e-05|  1.35899e-05|  0.00%|
(call)|         1|  1.04904e-05|  1.04904e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.27312e-05|  8.27312e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|         1|   8.9407e-05|   8.9407e-05|  0.00%|
(call)|         1|   1.0252e-05|   1.0252e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/function_base.py:710 _copy_dispatcher
     5|         1|  7.39098e-06|  7.39098e-06|  0.00%|
     6|         1|  2.59876e-05|  2.59876e-05|  0.00%|
(call)|         1|  1.66893e-05|  1.66893e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/function_base.py:714 copy
File: <string>_139
File duration: 0.000153303s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  0.000153303|  7.66516e-05|  0.00%|
(call)|        10|  0.000107288|  1.07288e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/jit/annotations.py:48 __getitem__
(call)|         4|  0.000125885|  3.14713e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
(call)|         1|   0.00122619|   0.00122619|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:746 __getitem__
File: <__array_function__ internals>_216
File duration: 0.000149727s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         6|  4.24385e-05|  7.07308e-06|  0.00%|
(call)|         1|  1.04904e-05|  1.04904e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|   8.2016e-05|   8.2016e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|         4|  4.62532e-05|  1.15633e-05|  0.00%|
(call)|         4|  2.57492e-05|   6.4373e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/function_base.py:1585 _trim_zeros
     5|         4|  1.28746e-05|  3.21865e-06|  0.00%|
     6|         4|  4.81606e-05|  1.20401e-05|  0.00%|
(call)|         4|  0.000166416|   4.1604e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/function_base.py:1589 trim_zeros
File: <__array_function__ internals>_276
File duration: 0.000144243s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  0.000144243|  7.21216e-05|  0.00%|
(call)|         1|  1.07288e-05|  1.07288e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000156641|  0.000156641|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_141
File duration: 0.000138044s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  0.000138044|  6.90222e-05|  0.00%|
(call)|        12|  0.000118494|   9.8745e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/jit/annotations.py:48 __getitem__
(call)|         6|  0.000306845|  5.11408e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
File: <string>_135
File duration: 0.000130177s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  0.000130177|  6.50883e-05|  0.00%|
(call)|        11|  0.000109196|  9.92688e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/jit/annotations.py:48 __getitem__
(call)|         5|   0.00108814|  0.000217628|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
(call)|         1|   0.00115848|   0.00115848|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:746 __getitem__
File: <attrs generated init jsonschema._types.TypeChecker>
File duration: 0.000129223s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         6|  4.74453e-05|  7.90755e-06|  0.00%|def __init__(self, type_checkers=attr_dict['_type_checkers'].default):
     2|         4|  1.64509e-05|  4.11272e-06|  0.00%|    _inst_dict = self.__dict__
     3|         4|  6.53267e-05|  1.63317e-05|  0.00%|    _inst_dict['_type_checkers'] = __attr_converter__type_checkers(type_checkers)
(call)|         4|   0.00170159|  0.000425398|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/pyrsistent/_pmap.py:437 pmap
File: <string>_145
File duration: 0.000124216s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  0.000124216|   6.2108e-05|  0.00%|
(call)|        11|  0.000108242|  9.84018e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/jit/annotations.py:48 __getitem__
(call)|         5|  0.000160456|  3.20911e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
File: <string>_131
File duration: 0.000112057s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  0.000112057|  5.60284e-05|  0.00%|
(call)|        11|  0.000169039|  1.53672e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/jit/annotations.py:48 __getitem__
(call)|         5|  0.000133514|  2.67029e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
File: <string>_143
File duration: 0.000109673s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  0.000109673|  5.48363e-05|  0.00%|
(call)|        10|  0.000123739|  1.23739e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/jit/annotations.py:48 __getitem__
(call)|         4|  0.000101805|  2.54512e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
File: <string>_133
File duration: 0.000108957s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  0.000108957|  5.44786e-05|  0.00%|
(call)|        10|  9.77516e-05|  9.77516e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/jit/annotations.py:48 __getitem__
(call)|         4|  0.000130415|  3.26037e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
(call)|         1|   0.00146174|   0.00146174|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:746 __getitem__
File: <__array_function__ internals>_173
File duration: 0.000104427s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  0.000104427|  5.22137e-05|  0.00%|
(call)|         1|  1.23978e-05|  1.23978e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.34601e-05|  9.34601e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_204
File duration: 0.000104189s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         3|  4.22001e-05|  1.40667e-05|  0.00%|
(call)|         1|  1.09673e-05|  1.09673e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.74996e-05|  8.74996e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|         1|  4.00543e-05|  4.00543e-05|  0.00%|
(call)|         1|  2.36034e-05|  2.36034e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/function_base.py:55 _rot90_dispatcher
     5|         1|  4.29153e-06|  4.29153e-06|  0.00%|
     6|         1|   1.7643e-05|   1.7643e-05|  0.00%|
(call)|         1|  0.000705719|  0.000705719|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/function_base.py:59 rot90
File: <string>_25
File duration: 0.000103235s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  4.57764e-05|  2.28882e-05|  0.00%|
     2|         1|   2.0504e-05|   2.0504e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         1|  3.21865e-05|  3.21865e-05|  0.00%|
(call)|         1|  4.81606e-05|  4.81606e-05|  0.00%|# /opt/anaconda3/lib/python3.7/abc.py:130 register
     5|         1|  4.76837e-06|  4.76837e-06|  0.00%|
File: <__array_function__ internals>_172
File duration: 0.000100851s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         3|  6.10352e-05|  2.03451e-05|  0.00%|
(call)|         1|  2.71797e-05|  2.71797e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000156164|  0.000156164|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|         1|  2.24113e-05|  2.24113e-05|  0.00%|
(call)|         1|  8.34465e-06|  8.34465e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/twodim_base.py:42 _flip_dispatcher
     5|         1|  4.05312e-06|  4.05312e-06|  0.00%|
     6|         1|  1.33514e-05|  1.33514e-05|  0.00%|
(call)|         1|  3.86238e-05|  3.86238e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/twodim_base.py:97 flipud
File: <string>_189
File duration: 0.000100613s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  9.17912e-05|  4.58956e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.29153e-06|  4.29153e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.52995e-06|  4.52995e-06|  0.00%|
File: <string>_205
File duration: 0.000100374s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  7.58171e-05|  3.79086e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  1.97887e-05|  1.97887e-05|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.76837e-06|  4.76837e-06|  0.00%|
File: <string>_337
File duration: 9.89437e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.45571e-05|  1.22786e-05|  0.00%|
     2|         1|  4.05312e-06|  4.05312e-06|  0.00%|
     3|         1|  4.76837e-06|  4.76837e-06|  0.00%|
     4|         2|  9.29832e-06|  4.64916e-06|  0.00%|
     5|         1|  4.76837e-06|  4.76837e-06|  0.00%|
     6|         1|  4.76837e-06|  4.76837e-06|  0.00%|
     7|         1|  4.76837e-06|  4.76837e-06|  0.00%|
     8|         1|  3.55244e-05|  3.55244e-05|  0.00%|
(call)|         1|  1.93119e-05|  1.93119e-05|  0.00%|# <string>_337:4 cy_wrap
     9|         1|   6.4373e-06|   6.4373e-06|  0.00%|
File: 
File duration: 8.98838e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         4|  6.31809e-05|  1.57952e-05|  0.00%|
(call)|         1|  3.45707e-05|  3.45707e-05|  0.00%|# :1 _AttributesAttributes
     2|         1|  3.57628e-06|  3.57628e-06|  0.00%|
     3|         1|  1.23978e-05|  1.23978e-05|  0.00%|
     4|         1|  5.48363e-06|  5.48363e-06|  0.00%|
     5|         1|  5.24521e-06|  5.24521e-06|  0.00%|
File: <string>_9
File duration: 8.60691e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  8.60691e-05|  4.30346e-05|  0.00%|
File: <__array_function__ internals>_100
File duration: 8.55923e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  8.55923e-05|  4.27961e-05|  0.00%|
(call)|         1|  1.19209e-05|  1.19209e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.67979e-05|  9.67979e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_205
File duration: 8.46386e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         3|   3.6478e-05|  1.21593e-05|  0.00%|
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.82149e-05|  8.82149e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|         1|   3.0756e-05|   3.0756e-05|  0.00%|
(call)|         1|  2.26498e-05|  2.26498e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/function_base.py:146 _flip_dispatcher
     5|         1|  4.29153e-06|  4.29153e-06|  0.00%|
     6|         1|   1.3113e-05|   1.3113e-05|  0.00%|
(call)|         1|  0.000312805|  0.000312805|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/lib/function_base.py:150 flip
File: _9
File duration: 8.08239e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         4|  6.55651e-05|  1.63913e-05|  0.00%|
(call)|         1|  2.16961e-05|  2.16961e-05|  0.00%|# _9:1 _DeepMappingAttributes
     2|         1|   2.6226e-06|   2.6226e-06|  0.00%|
     3|         1|  4.76837e-06|  4.76837e-06|  0.00%|
     4|         1|   3.8147e-06|   3.8147e-06|  0.00%|
     5|         1|  4.05312e-06|  4.05312e-06|  0.00%|
File: _12
File duration: 8.01086e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         4|  7.08103e-05|  1.77026e-05|  0.00%|
(call)|         1|  1.64509e-05|  1.64509e-05|  0.00%|# _12:1 TypeCheckerAttributes
     2|         1|  3.09944e-06|  3.09944e-06|  0.00%|
     3|         1|  6.19888e-06|  6.19888e-06|  0.00%|
File: <string>_155
File duration: 7.93934e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|r"""
     2|         1|  9.29832e-06|  9.29832e-06|  0.00%|
     3|         0|            0|            0|  0.00%|Nonlinear solvers
     4|         1|  7.00951e-05|  7.00951e-05|  0.00%|-----------------
     5|         0|            0|            0|  0.00%|
     6|         0|            0|            0|  0.00%|.. currentmodule:: scipy.optimize
     7|         0|            0|            0|  0.00%|
     8|         0|            0|            0|  0.00%|This is a collection of general-purpose nonlinear multidimensional
     9|         0|            0|            0|  0.00%|solvers. These solvers find *x* for which *F(x) = 0*. Both *x*
    10|         0|            0|            0|  0.00%|and *F* can be multidimensional.
    11|         0|            0|            0|  0.00%|
    12|         0|            0|            0|  0.00%|Routines
    13|         0|            0|            0|  0.00%|~~~~~~~~
    14|         0|            0|            0|  0.00%|
    15|         0|            0|            0|  0.00%|Large-scale nonlinear solvers:
    16|         0|            0|            0|  0.00%|
    17|         0|            0|            0|  0.00%|.. autosummary::
    18|         0|            0|            0|  0.00%|
    19|         0|            0|            0|  0.00%|   newton_krylov
    20|         0|            0|            0|  0.00%|   anderson
    21|         0|            0|            0|  0.00%|
    22|         0|            0|            0|  0.00%|General nonlinear solvers:
    23|         0|            0|            0|  0.00%|
    24|         0|            0|            0|  0.00%|.. autosummary::
    25|         0|            0|            0|  0.00%|
    26|         0|            0|            0|  0.00%|   broyden1
    27|         0|            0|            0|  0.00%|   broyden2
    28|         0|            0|            0|  0.00%|
    29|         0|            0|            0|  0.00%|Simple iterations:
    30|         0|            0|            0|  0.00%|
    31|         0|            0|            0|  0.00%|.. autosummary::
    32|         0|            0|            0|  0.00%|
    33|         0|            0|            0|  0.00%|   excitingmixing
    34|         0|            0|            0|  0.00%|   linearmixing
    35|         0|            0|            0|  0.00%|   diagbroyden
    36|         0|            0|            0|  0.00%|
    37|         0|            0|            0|  0.00%|
    38|         0|            0|            0|  0.00%|Examples
    39|         0|            0|            0|  0.00%|~~~~~~~~
    40|         0|            0|            0|  0.00%|
    41|         0|            0|            0|  0.00%|**Small problem**
    42|         0|            0|            0|  0.00%|
    43|         0|            0|            0|  0.00%|>>> def F(x):
    44|         0|            0|            0|  0.00%|...    return np.cos(x) + x[::-1] - [1, 2, 3, 4]
    45|         0|            0|            0|  0.00%|>>> import scipy.optimize
    46|         0|            0|            0|  0.00%|>>> x = scipy.optimize.broyden1(F, [1,1,1,1], f_tol=1e-14)
    47|         0|            0|            0|  0.00%|>>> x
    48|         0|            0|            0|  0.00%|array([ 4.04674914,  3.91158389,  2.71791677,  1.61756251])
    49|         0|            0|            0|  0.00%|>>> np.cos(x) + x[::-1]
    50|         0|            0|            0|  0.00%|array([ 1.,  2.,  3.,  4.])
    51|         0|            0|            0|  0.00%|
    52|         0|            0|            0|  0.00%|
    53|         0|            0|            0|  0.00%|**Large problem**
    54|         0|            0|            0|  0.00%|
    55|         0|            0|            0|  0.00%|Suppose that we needed to solve the following integrodifferential
    56|         0|            0|            0|  0.00%|equation on the square :math:`[0,1]\times[0,1]`:
    57|         0|            0|            0|  0.00%|
    58|         0|            0|            0|  0.00%|.. math::
    59|         0|            0|            0|  0.00%|
    60|         0|            0|            0|  0.00%|   \nabla^2 P = 10 \left(\int_0^1\int_0^1\cosh(P)\,dx\,dy\right)^2
    61|         0|            0|            0|  0.00%|
    62|         0|            0|            0|  0.00%|with :math:`P(x,1) = 1` and :math:`P=0` elsewhere on the boundary of
    63|         0|            0|            0|  0.00%|the square.
    64|         0|            0|            0|  0.00%|
    65|         0|            0|            0|  0.00%|The solution can be found using the `newton_krylov` solver:
    66|         0|            0|            0|  0.00%|
    67|         0|            0|            0|  0.00%|.. plot::
    68|         0|            0|            0|  0.00%|
    69|         0|            0|            0|  0.00%|   import numpy as np
    70|         0|            0|            0|  0.00%|   from scipy.optimize import newton_krylov
    71|         0|            0|            0|  0.00%|   from numpy import cosh, zeros_like, mgrid, zeros
    72|         0|            0|            0|  0.00%|
    73|         0|            0|            0|  0.00%|   # parameters
    74|         0|            0|            0|  0.00%|   nx, ny = 75, 75
    75|         0|            0|            0|  0.00%|   hx, hy = 1./(nx-1), 1./(ny-1)
    76|         0|            0|            0|  0.00%|
    77|         0|            0|            0|  0.00%|   P_left, P_right = 0, 0
    78|         0|            0|            0|  0.00%|   P_top, P_bottom = 1, 0
    79|         0|            0|            0|  0.00%|
    80|         0|            0|            0|  0.00%|   def residual(P):
    81|         0|            0|            0|  0.00%|       d2x = zeros_like(P)
    82|         0|            0|            0|  0.00%|       d2y = zeros_like(P)
    83|         0|            0|            0|  0.00%|
    84|         0|            0|            0|  0.00%|       d2x[1:-1] = (P[2:]   - 2*P[1:-1] + P[:-2]) / hx/hx
    85|         0|            0|            0|  0.00%|       d2x[0]    = (P[1]    - 2*P[0]    + P_left)/hx/hx
    86|         0|            0|            0|  0.00%|       d2x[-1]   = (P_right - 2*P[-1]   + P[-2])/hx/hx
    87|         0|            0|            0|  0.00%|
    88|         0|            0|            0|  0.00%|       d2y[:,1:-1] = (P[:,2:] - 2*P[:,1:-1] + P[:,:-2])/hy/hy
    89|         0|            0|            0|  0.00%|       d2y[:,0]    = (P[:,1]  - 2*P[:,0]    + P_bottom)/hy/hy
    90|         0|            0|            0|  0.00%|       d2y[:,-1]   = (P_top   - 2*P[:,-1]   + P[:,-2])/hy/hy
    91|         0|            0|            0|  0.00%|
    92|         0|            0|            0|  0.00%|       return d2x + d2y - 10*cosh(P).mean()**2
    93|         0|            0|            0|  0.00%|
    94|         0|            0|            0|  0.00%|   # solve
    95|         0|            0|            0|  0.00%|   guess = zeros((nx, ny), float)
    96|         0|            0|            0|  0.00%|   sol = newton_krylov(residual, guess, method='lgmres', verbose=1)
    97|         0|            0|            0|  0.00%|   print('Residual: %g' % abs(residual(sol)).max())
    98|         0|            0|            0|  0.00%|
    99|         0|            0|            0|  0.00%|   # visualize
   100|         0|            0|            0|  0.00%|   import matplotlib.pyplot as plt
   101|         0|            0|            0|  0.00%|   x, y = mgrid[0:1:(nx*1j), 0:1:(ny*1j)]
   102|         0|            0|            0|  0.00%|   plt.pcolormesh(x, y, sol, shading='gouraud')
   103|         0|            0|            0|  0.00%|   plt.colorbar()
   104|         0|            0|            0|  0.00%|   plt.show()
   105|         0|            0|            0|  0.00%|
   106|         0|            0|            0|  0.00%|"""
   107|         0|            0|            0|  0.00%|# Copyright (C) 2009, Pauli Virtanen <pav@iki.fi>
   108|         0|            0|            0|  0.00%|# Distributed under the same license as SciPy.
   109|         0|            0|            0|  0.00%|
   110|         0|            0|            0|  0.00%|import sys
   111|         0|            0|            0|  0.00%|import numpy as np
   112|         0|            0|            0|  0.00%|from scipy.linalg import norm, solve, inv, qr, svd, LinAlgError
   113|         0|            0|            0|  0.00%|from numpy import asarray, dot, vdot
   114|         0|            0|            0|  0.00%|import scipy.sparse.linalg
   115|         0|            0|            0|  0.00%|import scipy.sparse
   116|         0|            0|            0|  0.00%|from scipy.linalg import get_blas_funcs
   117|         0|            0|            0|  0.00%|import inspect
   118|         0|            0|            0|  0.00%|from scipy._lib._util import getfullargspec_no_self as _getfullargspec
   119|         0|            0|            0|  0.00%|from .linesearch import scalar_search_wolfe1, scalar_search_armijo
   120|         0|            0|            0|  0.00%|
   121|         0|            0|            0|  0.00%|
   122|         0|            0|            0|  0.00%|__all__ = [
   123|         0|            0|            0|  0.00%|    'broyden1', 'broyden2', 'anderson', 'linearmixing',
   124|         0|            0|            0|  0.00%|    'diagbroyden', 'excitingmixing', 'newton_krylov']
   125|         0|            0|            0|  0.00%|
   126|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   127|         0|            0|            0|  0.00%|# Utility functions
   128|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   129|         0|            0|            0|  0.00%|
   130|         0|            0|            0|  0.00%|
   131|         0|            0|            0|  0.00%|class NoConvergence(Exception):
   132|         0|            0|            0|  0.00%|    pass
   133|         0|            0|            0|  0.00%|
   134|         0|            0|            0|  0.00%|
   135|         0|            0|            0|  0.00%|def maxnorm(x):
   136|         0|            0|            0|  0.00%|    return np.absolute(x).max()
   137|         0|            0|            0|  0.00%|
   138|         0|            0|            0|  0.00%|
   139|         0|            0|            0|  0.00%|def _as_inexact(x):
   140|         0|            0|            0|  0.00%|    """Return `x` as an array, of either floats or complex floats"""
   141|         0|            0|            0|  0.00%|    x = asarray(x)
   142|         0|            0|            0|  0.00%|    if not np.issubdtype(x.dtype, np.inexact):
   143|         0|            0|            0|  0.00%|        return asarray(x, dtype=np.float_)
   144|         0|            0|            0|  0.00%|    return x
   145|         0|            0|            0|  0.00%|
   146|         0|            0|            0|  0.00%|
   147|         0|            0|            0|  0.00%|def _array_like(x, x0):
   148|         0|            0|            0|  0.00%|    """Return ndarray `x` as same array subclass and shape as `x0`"""
   149|         0|            0|            0|  0.00%|    x = np.reshape(x, np.shape(x0))
   150|         0|            0|            0|  0.00%|    wrap = getattr(x0, '__array_wrap__', x.__array_wrap__)
   151|         0|            0|            0|  0.00%|    return wrap(x)
   152|         0|            0|            0|  0.00%|
   153|         0|            0|            0|  0.00%|
   154|         0|            0|            0|  0.00%|def _safe_norm(v):
   155|         0|            0|            0|  0.00%|    if not np.isfinite(v).all():
   156|         0|            0|            0|  0.00%|        return np.array(np.inf)
   157|         0|            0|            0|  0.00%|    return norm(v)
   158|         0|            0|            0|  0.00%|
   159|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   160|         0|            0|            0|  0.00%|# Generic nonlinear solver machinery
   161|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   162|         0|            0|            0|  0.00%|
   163|         0|            0|            0|  0.00%|
   164|         0|            0|            0|  0.00%|_doc_parts = dict(
   165|         0|            0|            0|  0.00%|    params_basic="""
   166|         0|            0|            0|  0.00%|    F : function(x) -> f
   167|         0|            0|            0|  0.00%|        Function whose root to find; should take and return an array-like
   168|         0|            0|            0|  0.00%|        object.
   169|         0|            0|            0|  0.00%|    xin : array_like
   170|         0|            0|            0|  0.00%|        Initial guess for the solution
   171|         0|            0|            0|  0.00%|    """.strip(),
   172|         0|            0|            0|  0.00%|    params_extra="""
   173|         0|            0|            0|  0.00%|    iter : int, optional
   174|         0|            0|            0|  0.00%|        Number of iterations to make. If omitted (default), make as many
   175|         0|            0|            0|  0.00%|        as required to meet tolerances.
   176|         0|            0|            0|  0.00%|    verbose : bool, optional
   177|         0|            0|            0|  0.00%|        Print status to stdout on every iteration.
   178|         0|            0|            0|  0.00%|    maxiter : int, optional
   179|         0|            0|            0|  0.00%|        Maximum number of iterations to make. If more are needed to
   180|         0|            0|            0|  0.00%|        meet convergence, `NoConvergence` is raised.
   181|         0|            0|            0|  0.00%|    f_tol : float, optional
   182|         0|            0|            0|  0.00%|        Absolute tolerance (in max-norm) for the residual.
   183|         0|            0|            0|  0.00%|        If omitted, default is 6e-6.
   184|         0|            0|            0|  0.00%|    f_rtol : float, optional
   185|         0|            0|            0|  0.00%|        Relative tolerance for the residual. If omitted, not used.
   186|         0|            0|            0|  0.00%|    x_tol : float, optional
   187|         0|            0|            0|  0.00%|        Absolute minimum step size, as determined from the Jacobian
   188|         0|            0|            0|  0.00%|        approximation. If the step size is smaller than this, optimization
   189|         0|            0|            0|  0.00%|        is terminated as successful. If omitted, not used.
   190|         0|            0|            0|  0.00%|    x_rtol : float, optional
   191|         0|            0|            0|  0.00%|        Relative minimum step size. If omitted, not used.
   192|         0|            0|            0|  0.00%|    tol_norm : function(vector) -> scalar, optional
   193|         0|            0|            0|  0.00%|        Norm to use in convergence check. Default is the maximum norm.
   194|         0|            0|            0|  0.00%|    line_search : {None, 'armijo' (default), 'wolfe'}, optional
   195|         0|            0|            0|  0.00%|        Which type of a line search to use to determine the step size in the
   196|         0|            0|            0|  0.00%|        direction given by the Jacobian approximation. Defaults to 'armijo'.
   197|         0|            0|            0|  0.00%|    callback : function, optional
   198|         0|            0|            0|  0.00%|        Optional callback function. It is called on every iteration as
   199|         0|            0|            0|  0.00%|        ``callback(x, f)`` where `x` is the current solution and `f`
   200|         0|            0|            0|  0.00%|        the corresponding residual.
   201|         0|            0|            0|  0.00%|
   202|         0|            0|            0|  0.00%|    Returns
   203|         0|            0|            0|  0.00%|    -------
   204|         0|            0|            0|  0.00%|    sol : ndarray
   205|         0|            0|            0|  0.00%|        An array (of similar array type as `x0`) containing the final solution.
   206|         0|            0|            0|  0.00%|
   207|         0|            0|            0|  0.00%|    Raises
   208|         0|            0|            0|  0.00%|    ------
   209|         0|            0|            0|  0.00%|    NoConvergence
   210|         0|            0|            0|  0.00%|        When a solution was not found.
   211|         0|            0|            0|  0.00%|
   212|         0|            0|            0|  0.00%|    """.strip()
   213|         0|            0|            0|  0.00%|)
   214|         0|            0|            0|  0.00%|
   215|         0|            0|            0|  0.00%|
   216|         0|            0|            0|  0.00%|def _set_doc(obj):
   217|         0|            0|            0|  0.00%|    if obj.__doc__:
   218|         0|            0|            0|  0.00%|        obj.__doc__ = obj.__doc__ % _doc_parts
   219|         0|            0|            0|  0.00%|
   220|         0|            0|            0|  0.00%|
   221|         0|            0|            0|  0.00%|def nonlin_solve(F, x0, jacobian='krylov', iter=None, verbose=False,
   222|         0|            0|            0|  0.00%|                 maxiter=None, f_tol=None, f_rtol=None, x_tol=None, x_rtol=None,
   223|         0|            0|            0|  0.00%|                 tol_norm=None, line_search='armijo', callback=None,
   224|         0|            0|            0|  0.00%|                 full_output=False, raise_exception=True):
   225|         0|            0|            0|  0.00%|    """
   226|         0|            0|            0|  0.00%|    Find a root of a function, in a way suitable for large-scale problems.
   227|         0|            0|            0|  0.00%|
   228|         0|            0|            0|  0.00%|    Parameters
   229|         0|            0|            0|  0.00%|    ----------
   230|         0|            0|            0|  0.00%|    %(params_basic)s
   231|         0|            0|            0|  0.00%|    jacobian : Jacobian
   232|         0|            0|            0|  0.00%|        A Jacobian approximation: `Jacobian` object or something that
   233|         0|            0|            0|  0.00%|        `asjacobian` can transform to one. Alternatively, a string specifying
   234|         0|            0|            0|  0.00%|        which of the builtin Jacobian approximations to use:
   235|         0|            0|            0|  0.00%|
   236|         0|            0|            0|  0.00%|            krylov, broyden1, broyden2, anderson
   237|         0|            0|            0|  0.00%|            diagbroyden, linearmixing, excitingmixing
   238|         0|            0|            0|  0.00%|
   239|         0|            0|            0|  0.00%|    %(params_extra)s
   240|         0|            0|            0|  0.00%|    full_output : bool
   241|         0|            0|            0|  0.00%|        If true, returns a dictionary `info` containing convergence
   242|         0|            0|            0|  0.00%|        information.
   243|         0|            0|            0|  0.00%|    raise_exception : bool
   244|         0|            0|            0|  0.00%|        If True, a `NoConvergence` exception is raise if no solution is found.
   245|         0|            0|            0|  0.00%|
   246|         0|            0|            0|  0.00%|    See Also
   247|         0|            0|            0|  0.00%|    --------
   248|         0|            0|            0|  0.00%|    asjacobian, Jacobian
   249|         0|            0|            0|  0.00%|
   250|         0|            0|            0|  0.00%|    Notes
   251|         0|            0|            0|  0.00%|    -----
   252|         0|            0|            0|  0.00%|    This algorithm implements the inexact Newton method, with
   253|         0|            0|            0|  0.00%|    backtracking or full line searches. Several Jacobian
   254|         0|            0|            0|  0.00%|    approximations are available, including Krylov and Quasi-Newton
   255|         0|            0|            0|  0.00%|    methods.
   256|         0|            0|            0|  0.00%|
   257|         0|            0|            0|  0.00%|    References
   258|         0|            0|            0|  0.00%|    ----------
   259|         0|            0|            0|  0.00%|    .. [KIM] C. T. Kelley, \"Iterative Methods for Linear and Nonlinear
   260|         0|            0|            0|  0.00%|       Equations\". Society for Industrial and Applied Mathematics. (1995)
   261|         0|            0|            0|  0.00%|       https://archive.siam.org/books/kelley/fr16/
   262|         0|            0|            0|  0.00%|
   263|         0|            0|            0|  0.00%|    """
   264|         0|            0|            0|  0.00%|    # Can't use default parameters because it's being explicitly passed as None
   265|         0|            0|            0|  0.00%|    # from the calling function, so we need to set it here.
   266|         0|            0|            0|  0.00%|    tol_norm = maxnorm if tol_norm is None else tol_norm
   267|         0|            0|            0|  0.00%|    condition = TerminationCondition(f_tol=f_tol, f_rtol=f_rtol,
   268|         0|            0|            0|  0.00%|                                     x_tol=x_tol, x_rtol=x_rtol,
   269|         0|            0|            0|  0.00%|                                     iter=iter, norm=tol_norm)
   270|         0|            0|            0|  0.00%|
   271|         0|            0|            0|  0.00%|    x0 = _as_inexact(x0)
   272|         0|            0|            0|  0.00%|    func = lambda z: _as_inexact(F(_array_like(z, x0))).flatten()
   273|         0|            0|            0|  0.00%|    x = x0.flatten()
   274|         0|            0|            0|  0.00%|
   275|         0|            0|            0|  0.00%|    dx = np.inf
   276|         0|            0|            0|  0.00%|    Fx = func(x)
   277|         0|            0|            0|  0.00%|    Fx_norm = norm(Fx)
   278|         0|            0|            0|  0.00%|
   279|         0|            0|            0|  0.00%|    jacobian = asjacobian(jacobian)
   280|         0|            0|            0|  0.00%|    jacobian.setup(x.copy(), Fx, func)
   281|         0|            0|            0|  0.00%|
   282|         0|            0|            0|  0.00%|    if maxiter is None:
   283|         0|            0|            0|  0.00%|        if iter is not None:
   284|         0|            0|            0|  0.00%|            maxiter = iter + 1
   285|         0|            0|            0|  0.00%|        else:
   286|         0|            0|            0|  0.00%|            maxiter = 100*(x.size+1)
   287|         0|            0|            0|  0.00%|
   288|         0|            0|            0|  0.00%|    if line_search is True:
   289|         0|            0|            0|  0.00%|        line_search = 'armijo'
   290|         0|            0|            0|  0.00%|    elif line_search is False:
   291|         0|            0|            0|  0.00%|        line_search = None
   292|         0|            0|            0|  0.00%|
   293|         0|            0|            0|  0.00%|    if line_search not in (None, 'armijo', 'wolfe'):
   294|         0|            0|            0|  0.00%|        raise ValueError("Invalid line search")
   295|         0|            0|            0|  0.00%|
   296|         0|            0|            0|  0.00%|    # Solver tolerance selection
   297|         0|            0|            0|  0.00%|    gamma = 0.9
   298|         0|            0|            0|  0.00%|    eta_max = 0.9999
   299|         0|            0|            0|  0.00%|    eta_treshold = 0.1
   300|         0|            0|            0|  0.00%|    eta = 1e-3
   301|         0|            0|            0|  0.00%|
   302|         0|            0|            0|  0.00%|    for n in range(maxiter):
   303|         0|            0|            0|  0.00%|        status = condition.check(Fx, x, dx)
   304|         0|            0|            0|  0.00%|        if status:
   305|         0|            0|            0|  0.00%|            break
   306|         0|            0|            0|  0.00%|
   307|         0|            0|            0|  0.00%|        # The tolerance, as computed for scipy.sparse.linalg.* routines
   308|         0|            0|            0|  0.00%|        tol = min(eta, eta*Fx_norm)
   309|         0|            0|            0|  0.00%|        dx = -jacobian.solve(Fx, tol=tol)
   310|         0|            0|            0|  0.00%|
   311|         0|            0|            0|  0.00%|        if norm(dx) == 0:
   312|         0|            0|            0|  0.00%|            raise ValueError("Jacobian inversion yielded zero vector. "
   313|         0|            0|            0|  0.00%|                             "This indicates a bug in the Jacobian "
   314|         0|            0|            0|  0.00%|                             "approximation.")
   315|         0|            0|            0|  0.00%|
   316|         0|            0|            0|  0.00%|        # Line search, or Newton step
   317|         0|            0|            0|  0.00%|        if line_search:
   318|         0|            0|            0|  0.00%|            s, x, Fx, Fx_norm_new = _nonlin_line_search(func, x, Fx, dx,
   319|         0|            0|            0|  0.00%|                                                        line_search)
   320|         0|            0|            0|  0.00%|        else:
   321|         0|            0|            0|  0.00%|            s = 1.0
   322|         0|            0|            0|  0.00%|            x = x + dx
   323|         0|            0|            0|  0.00%|            Fx = func(x)
   324|         0|            0|            0|  0.00%|            Fx_norm_new = norm(Fx)
   325|         0|            0|            0|  0.00%|
   326|         0|            0|            0|  0.00%|        jacobian.update(x.copy(), Fx)
   327|         0|            0|            0|  0.00%|
   328|         0|            0|            0|  0.00%|        if callback:
   329|         0|            0|            0|  0.00%|            callback(x, Fx)
   330|         0|            0|            0|  0.00%|
   331|         0|            0|            0|  0.00%|        # Adjust forcing parameters for inexact methods
   332|         0|            0|            0|  0.00%|        eta_A = gamma * Fx_norm_new**2 / Fx_norm**2
   333|         0|            0|            0|  0.00%|        if gamma * eta**2 < eta_treshold:
   334|         0|            0|            0|  0.00%|            eta = min(eta_max, eta_A)
   335|         0|            0|            0|  0.00%|        else:
   336|         0|            0|            0|  0.00%|            eta = min(eta_max, max(eta_A, gamma*eta**2))
   337|         0|            0|            0|  0.00%|
   338|         0|            0|            0|  0.00%|        Fx_norm = Fx_norm_new
   339|         0|            0|            0|  0.00%|
   340|         0|            0|            0|  0.00%|        # Print status
   341|         0|            0|            0|  0.00%|        if verbose:
   342|         0|            0|            0|  0.00%|            sys.stdout.write("%d:  |F(x)| = %g; step %g\n" % (
   343|         0|            0|            0|  0.00%|                n, tol_norm(Fx), s))
   344|         0|            0|            0|  0.00%|            sys.stdout.flush()
   345|         0|            0|            0|  0.00%|    else:
   346|         0|            0|            0|  0.00%|        if raise_exception:
   347|         0|            0|            0|  0.00%|            raise NoConvergence(_array_like(x, x0))
   348|         0|            0|            0|  0.00%|        else:
   349|         0|            0|            0|  0.00%|            status = 2
   350|         0|            0|            0|  0.00%|
   351|         0|            0|            0|  0.00%|    if full_output:
   352|         0|            0|            0|  0.00%|        info = {'nit': condition.iteration,
   353|         0|            0|            0|  0.00%|                'fun': Fx,
   354|         0|            0|            0|  0.00%|                'status': status,
   355|         0|            0|            0|  0.00%|                'success': status == 1,
   356|         0|            0|            0|  0.00%|                'message': {1: 'A solution was found at the specified '
   357|         0|            0|            0|  0.00%|                               'tolerance.',
   358|         0|            0|            0|  0.00%|                            2: 'The maximum number of iterations allowed '
   359|         0|            0|            0|  0.00%|                               'has been reached.'
   360|         0|            0|            0|  0.00%|                            }[status]
   361|         0|            0|            0|  0.00%|                }
   362|         0|            0|            0|  0.00%|        return _array_like(x, x0), info
   363|         0|            0|            0|  0.00%|    else:
   364|         0|            0|            0|  0.00%|        return _array_like(x, x0)
   365|         0|            0|            0|  0.00%|
   366|         0|            0|            0|  0.00%|
   367|         0|            0|            0|  0.00%|_set_doc(nonlin_solve)
   368|         0|            0|            0|  0.00%|
   369|         0|            0|            0|  0.00%|
   370|         0|            0|            0|  0.00%|def _nonlin_line_search(func, x, Fx, dx, search_type='armijo', rdiff=1e-8,
   371|         0|            0|            0|  0.00%|                        smin=1e-2):
   372|         0|            0|            0|  0.00%|    tmp_s = [0]
   373|         0|            0|            0|  0.00%|    tmp_Fx = [Fx]
   374|         0|            0|            0|  0.00%|    tmp_phi = [norm(Fx)**2]
   375|         0|            0|            0|  0.00%|    s_norm = norm(x) / norm(dx)
   376|         0|            0|            0|  0.00%|
   377|         0|            0|            0|  0.00%|    def phi(s, store=True):
   378|         0|            0|            0|  0.00%|        if s == tmp_s[0]:
   379|         0|            0|            0|  0.00%|            return tmp_phi[0]
   380|         0|            0|            0|  0.00%|        xt = x + s*dx
   381|         0|            0|            0|  0.00%|        v = func(xt)
   382|         0|            0|            0|  0.00%|        p = _safe_norm(v)**2
   383|         0|            0|            0|  0.00%|        if store:
   384|         0|            0|            0|  0.00%|            tmp_s[0] = s
   385|         0|            0|            0|  0.00%|            tmp_phi[0] = p
   386|         0|            0|            0|  0.00%|            tmp_Fx[0] = v
   387|         0|            0|            0|  0.00%|        return p
   388|         0|            0|            0|  0.00%|
   389|         0|            0|            0|  0.00%|    def derphi(s):
   390|         0|            0|            0|  0.00%|        ds = (abs(s) + s_norm + 1) * rdiff
   391|         0|            0|            0|  0.00%|        return (phi(s+ds, store=False) - phi(s)) / ds
   392|         0|            0|            0|  0.00%|
   393|         0|            0|            0|  0.00%|    if search_type == 'wolfe':
   394|         0|            0|            0|  0.00%|        s, phi1, phi0 = scalar_search_wolfe1(phi, derphi, tmp_phi[0],
   395|         0|            0|            0|  0.00%|                                             xtol=1e-2, amin=smin)
   396|         0|            0|            0|  0.00%|    elif search_type == 'armijo':
   397|         0|            0|            0|  0.00%|        s, phi1 = scalar_search_armijo(phi, tmp_phi[0], -tmp_phi[0],
   398|         0|            0|            0|  0.00%|                                       amin=smin)
   399|         0|            0|            0|  0.00%|
   400|         0|            0|            0|  0.00%|    if s is None:
   401|         0|            0|            0|  0.00%|        # XXX: No suitable step length found. Take the full Newton step,
   402|         0|            0|            0|  0.00%|        #      and hope for the best.
   403|         0|            0|            0|  0.00%|        s = 1.0
   404|         0|            0|            0|  0.00%|
   405|         0|            0|            0|  0.00%|    x = x + s*dx
   406|         0|            0|            0|  0.00%|    if s == tmp_s[0]:
   407|         0|            0|            0|  0.00%|        Fx = tmp_Fx[0]
   408|         0|            0|            0|  0.00%|    else:
   409|         0|            0|            0|  0.00%|        Fx = func(x)
   410|         0|            0|            0|  0.00%|    Fx_norm = norm(Fx)
   411|         0|            0|            0|  0.00%|
   412|         0|            0|            0|  0.00%|    return s, x, Fx, Fx_norm
   413|         0|            0|            0|  0.00%|
   414|         0|            0|            0|  0.00%|
   415|         0|            0|            0|  0.00%|class TerminationCondition(object):
   416|         0|            0|            0|  0.00%|    """
   417|         0|            0|            0|  0.00%|    Termination condition for an iteration. It is terminated if
   418|         0|            0|            0|  0.00%|
   419|         0|            0|            0|  0.00%|    - |F| < f_rtol*|F_0|, AND
   420|         0|            0|            0|  0.00%|    - |F| < f_tol
   421|         0|            0|            0|  0.00%|
   422|         0|            0|            0|  0.00%|    AND
   423|         0|            0|            0|  0.00%|
   424|         0|            0|            0|  0.00%|    - |dx| < x_rtol*|x|, AND
   425|         0|            0|            0|  0.00%|    - |dx| < x_tol
   426|         0|            0|            0|  0.00%|
   427|         0|            0|            0|  0.00%|    """
   428|         0|            0|            0|  0.00%|    def __init__(self, f_tol=None, f_rtol=None, x_tol=None, x_rtol=None,
   429|         0|            0|            0|  0.00%|                 iter=None, norm=maxnorm):
   430|         0|            0|            0|  0.00%|
   431|         0|            0|            0|  0.00%|        if f_tol is None:
   432|         0|            0|            0|  0.00%|            f_tol = np.finfo(np.float_).eps ** (1./3)
   433|         0|            0|            0|  0.00%|        if f_rtol is None:
   434|         0|            0|            0|  0.00%|            f_rtol = np.inf
   435|         0|            0|            0|  0.00%|        if x_tol is None:
   436|         0|            0|            0|  0.00%|            x_tol = np.inf
   437|         0|            0|            0|  0.00%|        if x_rtol is None:
   438|         0|            0|            0|  0.00%|            x_rtol = np.inf
   439|         0|            0|            0|  0.00%|
   440|         0|            0|            0|  0.00%|        self.x_tol = x_tol
   441|         0|            0|            0|  0.00%|        self.x_rtol = x_rtol
   442|         0|            0|            0|  0.00%|        self.f_tol = f_tol
   443|         0|            0|            0|  0.00%|        self.f_rtol = f_rtol
   444|         0|            0|            0|  0.00%|
   445|         0|            0|            0|  0.00%|        self.norm = norm
   446|         0|            0|            0|  0.00%|
   447|         0|            0|            0|  0.00%|        self.iter = iter
   448|         0|            0|            0|  0.00%|
   449|         0|            0|            0|  0.00%|        self.f0_norm = None
   450|         0|            0|            0|  0.00%|        self.iteration = 0
   451|         0|            0|            0|  0.00%|
   452|         0|            0|            0|  0.00%|    def check(self, f, x, dx):
   453|         0|            0|            0|  0.00%|        self.iteration += 1
   454|         0|            0|            0|  0.00%|        f_norm = self.norm(f)
   455|         0|            0|            0|  0.00%|        x_norm = self.norm(x)
   456|         0|            0|            0|  0.00%|        dx_norm = self.norm(dx)
   457|         0|            0|            0|  0.00%|
   458|         0|            0|            0|  0.00%|        if self.f0_norm is None:
   459|         0|            0|            0|  0.00%|            self.f0_norm = f_norm
   460|         0|            0|            0|  0.00%|
   461|         0|            0|            0|  0.00%|        if f_norm == 0:
   462|         0|            0|            0|  0.00%|            return 1
   463|         0|            0|            0|  0.00%|
   464|         0|            0|            0|  0.00%|        if self.iter is not None:
   465|         0|            0|            0|  0.00%|            # backwards compatibility with SciPy 0.6.0
   466|         0|            0|            0|  0.00%|            return 2 * (self.iteration > self.iter)
   467|         0|            0|            0|  0.00%|
   468|         0|            0|            0|  0.00%|        # NB: condition must succeed for rtol=inf even if norm == 0
   469|         0|            0|            0|  0.00%|        return int((f_norm <= self.f_tol
   470|         0|            0|            0|  0.00%|                    and f_norm/self.f_rtol <= self.f0_norm)
   471|         0|            0|            0|  0.00%|                   and (dx_norm <= self.x_tol
   472|         0|            0|            0|  0.00%|                        and dx_norm/self.x_rtol <= x_norm))
   473|         0|            0|            0|  0.00%|
   474|         0|            0|            0|  0.00%|
   475|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   476|         0|            0|            0|  0.00%|# Generic Jacobian approximation
   477|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   478|         0|            0|            0|  0.00%|
   479|         0|            0|            0|  0.00%|class Jacobian(object):
   480|         0|            0|            0|  0.00%|    """
   481|         0|            0|            0|  0.00%|    Common interface for Jacobians or Jacobian approximations.
   482|         0|            0|            0|  0.00%|
   483|         0|            0|            0|  0.00%|    The optional methods come useful when implementing trust region
   484|         0|            0|            0|  0.00%|    etc., algorithms that often require evaluating transposes of the
   485|         0|            0|            0|  0.00%|    Jacobian.
   486|         0|            0|            0|  0.00%|
   487|         0|            0|            0|  0.00%|    Methods
   488|         0|            0|            0|  0.00%|    -------
   489|         0|            0|            0|  0.00%|    solve
   490|         0|            0|            0|  0.00%|        Returns J^-1 * v
   491|         0|            0|            0|  0.00%|    update
   492|         0|            0|            0|  0.00%|        Updates Jacobian to point `x` (where the function has residual `Fx`)
   493|         0|            0|            0|  0.00%|
   494|         0|            0|            0|  0.00%|    matvec : optional
   495|         0|            0|            0|  0.00%|        Returns J * v
   496|         0|            0|            0|  0.00%|    rmatvec : optional
   497|         0|            0|            0|  0.00%|        Returns A^H * v
   498|         0|            0|            0|  0.00%|    rsolve : optional
   499|         0|            0|            0|  0.00%|        Returns A^-H * v
   500|         0|            0|            0|  0.00%|    matmat : optional
   501|         0|            0|            0|  0.00%|        Returns A * V, where V is a dense matrix with dimensions (N,K).
   502|         0|            0|            0|  0.00%|    todense : optional
   503|         0|            0|            0|  0.00%|        Form the dense Jacobian matrix. Necessary for dense trust region
   504|         0|            0|            0|  0.00%|        algorithms, and useful for testing.
   505|         0|            0|            0|  0.00%|
   506|         0|            0|            0|  0.00%|    Attributes
   507|         0|            0|            0|  0.00%|    ----------
   508|         0|            0|            0|  0.00%|    shape
   509|         0|            0|            0|  0.00%|        Matrix dimensions (M, N)
   510|         0|            0|            0|  0.00%|    dtype
   511|         0|            0|            0|  0.00%|        Data type of the matrix.
   512|         0|            0|            0|  0.00%|    func : callable, optional
   513|         0|            0|            0|  0.00%|        Function the Jacobian corresponds to
   514|         0|            0|            0|  0.00%|
   515|         0|            0|            0|  0.00%|    """
   516|         0|            0|            0|  0.00%|
   517|         0|            0|            0|  0.00%|    def __init__(self, **kw):
   518|         0|            0|            0|  0.00%|        names = ["solve", "update", "matvec", "rmatvec", "rsolve",
   519|         0|            0|            0|  0.00%|                 "matmat", "todense", "shape", "dtype"]
   520|         0|            0|            0|  0.00%|        for name, value in kw.items():
   521|         0|            0|            0|  0.00%|            if name not in names:
   522|         0|            0|            0|  0.00%|                raise ValueError("Unknown keyword argument %s" % name)
   523|         0|            0|            0|  0.00%|            if value is not None:
   524|         0|            0|            0|  0.00%|                setattr(self, name, kw[name])
   525|         0|            0|            0|  0.00%|
   526|         0|            0|            0|  0.00%|        if hasattr(self, 'todense'):
   527|         0|            0|            0|  0.00%|            self.__array__ = lambda: self.todense()
   528|         0|            0|            0|  0.00%|
   529|         0|            0|            0|  0.00%|    def aspreconditioner(self):
   530|         0|            0|            0|  0.00%|        return InverseJacobian(self)
   531|         0|            0|            0|  0.00%|
   532|         0|            0|            0|  0.00%|    def solve(self, v, tol=0):
   533|         0|            0|            0|  0.00%|        raise NotImplementedError
   534|         0|            0|            0|  0.00%|
   535|         0|            0|            0|  0.00%|    def update(self, x, F):
   536|         0|            0|            0|  0.00%|        pass
   537|         0|            0|            0|  0.00%|
   538|         0|            0|            0|  0.00%|    def setup(self, x, F, func):
   539|         0|            0|            0|  0.00%|        self.func = func
   540|         0|            0|            0|  0.00%|        self.shape = (F.size, x.size)
   541|         0|            0|            0|  0.00%|        self.dtype = F.dtype
   542|         0|            0|            0|  0.00%|        if self.__class__.setup is Jacobian.setup:
   543|         0|            0|            0|  0.00%|            # Call on the first point unless overridden
   544|         0|            0|            0|  0.00%|            self.update(x, F)
   545|         0|            0|            0|  0.00%|
   546|         0|            0|            0|  0.00%|
   547|         0|            0|            0|  0.00%|class InverseJacobian(object):
   548|         0|            0|            0|  0.00%|    def __init__(self, jacobian):
   549|         0|            0|            0|  0.00%|        self.jacobian = jacobian
   550|         0|            0|            0|  0.00%|        self.matvec = jacobian.solve
   551|         0|            0|            0|  0.00%|        self.update = jacobian.update
   552|         0|            0|            0|  0.00%|        if hasattr(jacobian, 'setup'):
   553|         0|            0|            0|  0.00%|            self.setup = jacobian.setup
   554|         0|            0|            0|  0.00%|        if hasattr(jacobian, 'rsolve'):
   555|         0|            0|            0|  0.00%|            self.rmatvec = jacobian.rsolve
   556|         0|            0|            0|  0.00%|
   557|         0|            0|            0|  0.00%|    @property
   558|         0|            0|            0|  0.00%|    def shape(self):
   559|         0|            0|            0|  0.00%|        return self.jacobian.shape
   560|         0|            0|            0|  0.00%|
   561|         0|            0|            0|  0.00%|    @property
   562|         0|            0|            0|  0.00%|    def dtype(self):
   563|         0|            0|            0|  0.00%|        return self.jacobian.dtype
   564|         0|            0|            0|  0.00%|
   565|         0|            0|            0|  0.00%|
   566|         0|            0|            0|  0.00%|def asjacobian(J):
   567|         0|            0|            0|  0.00%|    """
   568|         0|            0|            0|  0.00%|    Convert given object to one suitable for use as a Jacobian.
   569|         0|            0|            0|  0.00%|    """
   570|         0|            0|            0|  0.00%|    spsolve = scipy.sparse.linalg.spsolve
   571|         0|            0|            0|  0.00%|    if isinstance(J, Jacobian):
   572|         0|            0|            0|  0.00%|        return J
   573|         0|            0|            0|  0.00%|    elif inspect.isclass(J) and issubclass(J, Jacobian):
   574|         0|            0|            0|  0.00%|        return J()
   575|         0|            0|            0|  0.00%|    elif isinstance(J, np.ndarray):
   576|         0|            0|            0|  0.00%|        if J.ndim > 2:
   577|         0|            0|            0|  0.00%|            raise ValueError('array must have rank <= 2')
   578|         0|            0|            0|  0.00%|        J = np.atleast_2d(np.asarray(J))
   579|         0|            0|            0|  0.00%|        if J.shape[0] != J.shape[1]:
   580|         0|            0|            0|  0.00%|            raise ValueError('array must be square')
   581|         0|            0|            0|  0.00%|
   582|         0|            0|            0|  0.00%|        return Jacobian(matvec=lambda v: dot(J, v),
   583|         0|            0|            0|  0.00%|                        rmatvec=lambda v: dot(J.conj().T, v),
   584|         0|            0|            0|  0.00%|                        solve=lambda v: solve(J, v),
   585|         0|            0|            0|  0.00%|                        rsolve=lambda v: solve(J.conj().T, v),
   586|         0|            0|            0|  0.00%|                        dtype=J.dtype, shape=J.shape)
   587|         0|            0|            0|  0.00%|    elif scipy.sparse.isspmatrix(J):
   588|         0|            0|            0|  0.00%|        if J.shape[0] != J.shape[1]:
   589|         0|            0|            0|  0.00%|            raise ValueError('matrix must be square')
   590|         0|            0|            0|  0.00%|        return Jacobian(matvec=lambda v: J*v,
   591|         0|            0|            0|  0.00%|                        rmatvec=lambda v: J.conj().T * v,
   592|         0|            0|            0|  0.00%|                        solve=lambda v: spsolve(J, v),
   593|         0|            0|            0|  0.00%|                        rsolve=lambda v: spsolve(J.conj().T, v),
   594|         0|            0|            0|  0.00%|                        dtype=J.dtype, shape=J.shape)
   595|         0|            0|            0|  0.00%|    elif hasattr(J, 'shape') and hasattr(J, 'dtype') and hasattr(J, 'solve'):
   596|         0|            0|            0|  0.00%|        return Jacobian(matvec=getattr(J, 'matvec'),
   597|         0|            0|            0|  0.00%|                        rmatvec=getattr(J, 'rmatvec'),
   598|         0|            0|            0|  0.00%|                        solve=J.solve,
   599|         0|            0|            0|  0.00%|                        rsolve=getattr(J, 'rsolve'),
   600|         0|            0|            0|  0.00%|                        update=getattr(J, 'update'),
   601|         0|            0|            0|  0.00%|                        setup=getattr(J, 'setup'),
   602|         0|            0|            0|  0.00%|                        dtype=J.dtype,
   603|         0|            0|            0|  0.00%|                        shape=J.shape)
   604|         0|            0|            0|  0.00%|    elif callable(J):
   605|         0|            0|            0|  0.00%|        # Assume it's a function J(x) that returns the Jacobian
   606|         0|            0|            0|  0.00%|        class Jac(Jacobian):
   607|         0|            0|            0|  0.00%|            def update(self, x, F):
   608|         0|            0|            0|  0.00%|                self.x = x
   609|         0|            0|            0|  0.00%|
   610|         0|            0|            0|  0.00%|            def solve(self, v, tol=0):
   611|         0|            0|            0|  0.00%|                m = J(self.x)
   612|         0|            0|            0|  0.00%|                if isinstance(m, np.ndarray):
   613|         0|            0|            0|  0.00%|                    return solve(m, v)
   614|         0|            0|            0|  0.00%|                elif scipy.sparse.isspmatrix(m):
   615|         0|            0|            0|  0.00%|                    return spsolve(m, v)
   616|         0|            0|            0|  0.00%|                else:
   617|         0|            0|            0|  0.00%|                    raise ValueError("Unknown matrix type")
   618|         0|            0|            0|  0.00%|
   619|         0|            0|            0|  0.00%|            def matvec(self, v):
   620|         0|            0|            0|  0.00%|                m = J(self.x)
   621|         0|            0|            0|  0.00%|                if isinstance(m, np.ndarray):
   622|         0|            0|            0|  0.00%|                    return dot(m, v)
   623|         0|            0|            0|  0.00%|                elif scipy.sparse.isspmatrix(m):
   624|         0|            0|            0|  0.00%|                    return m*v
   625|         0|            0|            0|  0.00%|                else:
   626|         0|            0|            0|  0.00%|                    raise ValueError("Unknown matrix type")
   627|         0|            0|            0|  0.00%|
   628|         0|            0|            0|  0.00%|            def rsolve(self, v, tol=0):
   629|         0|            0|            0|  0.00%|                m = J(self.x)
   630|         0|            0|            0|  0.00%|                if isinstance(m, np.ndarray):
   631|         0|            0|            0|  0.00%|                    return solve(m.conj().T, v)
   632|         0|            0|            0|  0.00%|                elif scipy.sparse.isspmatrix(m):
   633|         0|            0|            0|  0.00%|                    return spsolve(m.conj().T, v)
   634|         0|            0|            0|  0.00%|                else:
   635|         0|            0|            0|  0.00%|                    raise ValueError("Unknown matrix type")
   636|         0|            0|            0|  0.00%|
   637|         0|            0|            0|  0.00%|            def rmatvec(self, v):
   638|         0|            0|            0|  0.00%|                m = J(self.x)
   639|         0|            0|            0|  0.00%|                if isinstance(m, np.ndarray):
   640|         0|            0|            0|  0.00%|                    return dot(m.conj().T, v)
   641|         0|            0|            0|  0.00%|                elif scipy.sparse.isspmatrix(m):
   642|         0|            0|            0|  0.00%|                    return m.conj().T * v
   643|         0|            0|            0|  0.00%|                else:
   644|         0|            0|            0|  0.00%|                    raise ValueError("Unknown matrix type")
   645|         0|            0|            0|  0.00%|        return Jac()
   646|         0|            0|            0|  0.00%|    elif isinstance(J, str):
   647|         0|            0|            0|  0.00%|        return dict(broyden1=BroydenFirst,
   648|         0|            0|            0|  0.00%|                    broyden2=BroydenSecond,
   649|         0|            0|            0|  0.00%|                    anderson=Anderson,
   650|         0|            0|            0|  0.00%|                    diagbroyden=DiagBroyden,
   651|         0|            0|            0|  0.00%|                    linearmixing=LinearMixing,
   652|         0|            0|            0|  0.00%|                    excitingmixing=ExcitingMixing,
   653|         0|            0|            0|  0.00%|                    krylov=KrylovJacobian)[J]()
   654|         0|            0|            0|  0.00%|    else:
   655|         0|            0|            0|  0.00%|        raise TypeError('Cannot convert object to a Jacobian')
   656|         0|            0|            0|  0.00%|
   657|         0|            0|            0|  0.00%|
   658|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   659|         0|            0|            0|  0.00%|# Broyden
   660|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   661|         0|            0|            0|  0.00%|
   662|         0|            0|            0|  0.00%|class GenericBroyden(Jacobian):
   663|         0|            0|            0|  0.00%|    def setup(self, x0, f0, func):
   664|         0|            0|            0|  0.00%|        Jacobian.setup(self, x0, f0, func)
   665|         0|            0|            0|  0.00%|        self.last_f = f0
   666|         0|            0|            0|  0.00%|        self.last_x = x0
   667|         0|            0|            0|  0.00%|
   668|         0|            0|            0|  0.00%|        if hasattr(self, 'alpha') and self.alpha is None:
   669|         0|            0|            0|  0.00%|            # Autoscale the initial Jacobian parameter
   670|         0|            0|            0|  0.00%|            # unless we have already guessed the solution.
   671|         0|            0|            0|  0.00%|            normf0 = norm(f0)
   672|         0|            0|            0|  0.00%|            if normf0:
   673|         0|            0|            0|  0.00%|                self.alpha = 0.5*max(norm(x0), 1) / normf0
   674|         0|            0|            0|  0.00%|            else:
   675|         0|            0|            0|  0.00%|                self.alpha = 1.0
   676|         0|            0|            0|  0.00%|
   677|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
   678|         0|            0|            0|  0.00%|        raise NotImplementedError
   679|         0|            0|            0|  0.00%|
   680|         0|            0|            0|  0.00%|    def update(self, x, f):
   681|         0|            0|            0|  0.00%|        df = f - self.last_f
   682|         0|            0|            0|  0.00%|        dx = x - self.last_x
   683|         0|            0|            0|  0.00%|        self._update(x, f, dx, df, norm(dx), norm(df))
   684|         0|            0|            0|  0.00%|        self.last_f = f
   685|         0|            0|            0|  0.00%|        self.last_x = x
   686|         0|            0|            0|  0.00%|
   687|         0|            0|            0|  0.00%|
   688|         0|            0|            0|  0.00%|class LowRankMatrix(object):
   689|         0|            0|            0|  0.00%|    r"""
   690|         0|            0|            0|  0.00%|    A matrix represented as
   691|         0|            0|            0|  0.00%|
   692|         0|            0|            0|  0.00%|    .. math:: \alpha I + \sum_{n=0}^{n=M} c_n d_n^\dagger
   693|         0|            0|            0|  0.00%|
   694|         0|            0|            0|  0.00%|    However, if the rank of the matrix reaches the dimension of the vectors,
   695|         0|            0|            0|  0.00%|    full matrix representation will be used thereon.
   696|         0|            0|            0|  0.00%|
   697|         0|            0|            0|  0.00%|    """
   698|         0|            0|            0|  0.00%|
   699|         0|            0|            0|  0.00%|    def __init__(self, alpha, n, dtype):
   700|         0|            0|            0|  0.00%|        self.alpha = alpha
   701|         0|            0|            0|  0.00%|        self.cs = []
   702|         0|            0|            0|  0.00%|        self.ds = []
   703|         0|            0|            0|  0.00%|        self.n = n
   704|         0|            0|            0|  0.00%|        self.dtype = dtype
   705|         0|            0|            0|  0.00%|        self.collapsed = None
   706|         0|            0|            0|  0.00%|
   707|         0|            0|            0|  0.00%|    @staticmethod
   708|         0|            0|            0|  0.00%|    def _matvec(v, alpha, cs, ds):
   709|         0|            0|            0|  0.00%|        axpy, scal, dotc = get_blas_funcs(['axpy', 'scal', 'dotc'],
   710|         0|            0|            0|  0.00%|                                          cs[:1] + [v])
   711|         0|            0|            0|  0.00%|        w = alpha * v
   712|         0|            0|            0|  0.00%|        for c, d in zip(cs, ds):
   713|         0|            0|            0|  0.00%|            a = dotc(d, v)
   714|         0|            0|            0|  0.00%|            w = axpy(c, w, w.size, a)
   715|         0|            0|            0|  0.00%|        return w
   716|         0|            0|            0|  0.00%|
   717|         0|            0|            0|  0.00%|    @staticmethod
   718|         0|            0|            0|  0.00%|    def _solve(v, alpha, cs, ds):
   719|         0|            0|            0|  0.00%|        """Evaluate w = M^-1 v"""
   720|         0|            0|            0|  0.00%|        if len(cs) == 0:
   721|         0|            0|            0|  0.00%|            return v/alpha
   722|         0|            0|            0|  0.00%|
   723|         0|            0|            0|  0.00%|        # (B + C D^H)^-1 = B^-1 - B^-1 C (I + D^H B^-1 C)^-1 D^H B^-1
   724|         0|            0|            0|  0.00%|
   725|         0|            0|            0|  0.00%|        axpy, dotc = get_blas_funcs(['axpy', 'dotc'], cs[:1] + [v])
   726|         0|            0|            0|  0.00%|
   727|         0|            0|            0|  0.00%|        c0 = cs[0]
   728|         0|            0|            0|  0.00%|        A = alpha * np.identity(len(cs), dtype=c0.dtype)
   729|         0|            0|            0|  0.00%|        for i, d in enumerate(ds):
   730|         0|            0|            0|  0.00%|            for j, c in enumerate(cs):
   731|         0|            0|            0|  0.00%|                A[i,j] += dotc(d, c)
   732|         0|            0|            0|  0.00%|
   733|         0|            0|            0|  0.00%|        q = np.zeros(len(cs), dtype=c0.dtype)
   734|         0|            0|            0|  0.00%|        for j, d in enumerate(ds):
   735|         0|            0|            0|  0.00%|            q[j] = dotc(d, v)
   736|         0|            0|            0|  0.00%|        q /= alpha
   737|         0|            0|            0|  0.00%|        q = solve(A, q)
   738|         0|            0|            0|  0.00%|
   739|         0|            0|            0|  0.00%|        w = v/alpha
   740|         0|            0|            0|  0.00%|        for c, qc in zip(cs, q):
   741|         0|            0|            0|  0.00%|            w = axpy(c, w, w.size, -qc)
   742|         0|            0|            0|  0.00%|
   743|         0|            0|            0|  0.00%|        return w
   744|         0|            0|            0|  0.00%|
   745|         0|            0|            0|  0.00%|    def matvec(self, v):
   746|         0|            0|            0|  0.00%|        """Evaluate w = M v"""
   747|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   748|         0|            0|            0|  0.00%|            return np.dot(self.collapsed, v)
   749|         0|            0|            0|  0.00%|        return LowRankMatrix._matvec(v, self.alpha, self.cs, self.ds)
   750|         0|            0|            0|  0.00%|
   751|         0|            0|            0|  0.00%|    def rmatvec(self, v):
   752|         0|            0|            0|  0.00%|        """Evaluate w = M^H v"""
   753|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   754|         0|            0|            0|  0.00%|            return np.dot(self.collapsed.T.conj(), v)
   755|         0|            0|            0|  0.00%|        return LowRankMatrix._matvec(v, np.conj(self.alpha), self.ds, self.cs)
   756|         0|            0|            0|  0.00%|
   757|         0|            0|            0|  0.00%|    def solve(self, v, tol=0):
   758|         0|            0|            0|  0.00%|        """Evaluate w = M^-1 v"""
   759|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   760|         0|            0|            0|  0.00%|            return solve(self.collapsed, v)
   761|         0|            0|            0|  0.00%|        return LowRankMatrix._solve(v, self.alpha, self.cs, self.ds)
   762|         0|            0|            0|  0.00%|
   763|         0|            0|            0|  0.00%|    def rsolve(self, v, tol=0):
   764|         0|            0|            0|  0.00%|        """Evaluate w = M^-H v"""
   765|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   766|         0|            0|            0|  0.00%|            return solve(self.collapsed.T.conj(), v)
   767|         0|            0|            0|  0.00%|        return LowRankMatrix._solve(v, np.conj(self.alpha), self.ds, self.cs)
   768|         0|            0|            0|  0.00%|
   769|         0|            0|            0|  0.00%|    def append(self, c, d):
   770|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   771|         0|            0|            0|  0.00%|            self.collapsed += c[:,None] * d[None,:].conj()
   772|         0|            0|            0|  0.00%|            return
   773|         0|            0|            0|  0.00%|
   774|         0|            0|            0|  0.00%|        self.cs.append(c)
   775|         0|            0|            0|  0.00%|        self.ds.append(d)
   776|         0|            0|            0|  0.00%|
   777|         0|            0|            0|  0.00%|        if len(self.cs) > c.size:
   778|         0|            0|            0|  0.00%|            self.collapse()
   779|         0|            0|            0|  0.00%|
   780|         0|            0|            0|  0.00%|    def __array__(self):
   781|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   782|         0|            0|            0|  0.00%|            return self.collapsed
   783|         0|            0|            0|  0.00%|
   784|         0|            0|            0|  0.00%|        Gm = self.alpha*np.identity(self.n, dtype=self.dtype)
   785|         0|            0|            0|  0.00%|        for c, d in zip(self.cs, self.ds):
   786|         0|            0|            0|  0.00%|            Gm += c[:,None]*d[None,:].conj()
   787|         0|            0|            0|  0.00%|        return Gm
   788|         0|            0|            0|  0.00%|
   789|         0|            0|            0|  0.00%|    def collapse(self):
   790|         0|            0|            0|  0.00%|        """Collapse the low-rank matrix to a full-rank one."""
   791|         0|            0|            0|  0.00%|        self.collapsed = np.array(self)
   792|         0|            0|            0|  0.00%|        self.cs = None
   793|         0|            0|            0|  0.00%|        self.ds = None
   794|         0|            0|            0|  0.00%|        self.alpha = None
   795|         0|            0|            0|  0.00%|
   796|         0|            0|            0|  0.00%|    def restart_reduce(self, rank):
   797|         0|            0|            0|  0.00%|        """
   798|         0|            0|            0|  0.00%|        Reduce the rank of the matrix by dropping all vectors.
   799|         0|            0|            0|  0.00%|        """
   800|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   801|         0|            0|            0|  0.00%|            return
   802|         0|            0|            0|  0.00%|        assert rank > 0
   803|         0|            0|            0|  0.00%|        if len(self.cs) > rank:
   804|         0|            0|            0|  0.00%|            del self.cs[:]
   805|         0|            0|            0|  0.00%|            del self.ds[:]
   806|         0|            0|            0|  0.00%|
   807|         0|            0|            0|  0.00%|    def simple_reduce(self, rank):
   808|         0|            0|            0|  0.00%|        """
   809|         0|            0|            0|  0.00%|        Reduce the rank of the matrix by dropping oldest vectors.
   810|         0|            0|            0|  0.00%|        """
   811|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   812|         0|            0|            0|  0.00%|            return
   813|         0|            0|            0|  0.00%|        assert rank > 0
   814|         0|            0|            0|  0.00%|        while len(self.cs) > rank:
   815|         0|            0|            0|  0.00%|            del self.cs[0]
   816|         0|            0|            0|  0.00%|            del self.ds[0]
   817|         0|            0|            0|  0.00%|
   818|         0|            0|            0|  0.00%|    def svd_reduce(self, max_rank, to_retain=None):
   819|         0|            0|            0|  0.00%|        """
   820|         0|            0|            0|  0.00%|        Reduce the rank of the matrix by retaining some SVD components.
   821|         0|            0|            0|  0.00%|
   822|         0|            0|            0|  0.00%|        This corresponds to the \"Broyden Rank Reduction Inverse\"
   823|         0|            0|            0|  0.00%|        algorithm described in [1]_.
   824|         0|            0|            0|  0.00%|
   825|         0|            0|            0|  0.00%|        Note that the SVD decomposition can be done by solving only a
   826|         0|            0|            0|  0.00%|        problem whose size is the effective rank of this matrix, which
   827|         0|            0|            0|  0.00%|        is viable even for large problems.
   828|         0|            0|            0|  0.00%|
   829|         0|            0|            0|  0.00%|        Parameters
   830|         0|            0|            0|  0.00%|        ----------
   831|         0|            0|            0|  0.00%|        max_rank : int
   832|         0|            0|            0|  0.00%|            Maximum rank of this matrix after reduction.
   833|         0|            0|            0|  0.00%|        to_retain : int, optional
   834|         0|            0|            0|  0.00%|            Number of SVD components to retain when reduction is done
   835|         0|            0|            0|  0.00%|            (ie. rank > max_rank). Default is ``max_rank - 2``.
   836|         0|            0|            0|  0.00%|
   837|         0|            0|            0|  0.00%|        References
   838|         0|            0|            0|  0.00%|        ----------
   839|         0|            0|            0|  0.00%|        .. [1] B.A. van der Rotten, PhD thesis,
   840|         0|            0|            0|  0.00%|           \"A limited memory Broyden method to solve high-dimensional
   841|         0|            0|            0|  0.00%|           systems of nonlinear equations\". Mathematisch Instituut,
   842|         0|            0|            0|  0.00%|           Universiteit Leiden, The Netherlands (2003).
   843|         0|            0|            0|  0.00%|
   844|         0|            0|            0|  0.00%|           https://web.archive.org/web/20161022015821/http://www.math.leidenuniv.nl/scripties/Rotten.pdf
   845|         0|            0|            0|  0.00%|
   846|         0|            0|            0|  0.00%|        """
   847|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   848|         0|            0|            0|  0.00%|            return
   849|         0|            0|            0|  0.00%|
   850|         0|            0|            0|  0.00%|        p = max_rank
   851|         0|            0|            0|  0.00%|        if to_retain is not None:
   852|         0|            0|            0|  0.00%|            q = to_retain
   853|         0|            0|            0|  0.00%|        else:
   854|         0|            0|            0|  0.00%|            q = p - 2
   855|         0|            0|            0|  0.00%|
   856|         0|            0|            0|  0.00%|        if self.cs:
   857|         0|            0|            0|  0.00%|            p = min(p, len(self.cs[0]))
   858|         0|            0|            0|  0.00%|        q = max(0, min(q, p-1))
   859|         0|            0|            0|  0.00%|
   860|         0|            0|            0|  0.00%|        m = len(self.cs)
   861|         0|            0|            0|  0.00%|        if m < p:
   862|         0|            0|            0|  0.00%|            # nothing to do
   863|         0|            0|            0|  0.00%|            return
   864|         0|            0|            0|  0.00%|
   865|         0|            0|            0|  0.00%|        C = np.array(self.cs).T
   866|         0|            0|            0|  0.00%|        D = np.array(self.ds).T
   867|         0|            0|            0|  0.00%|
   868|         0|            0|            0|  0.00%|        D, R = qr(D, mode='economic')
   869|         0|            0|            0|  0.00%|        C = dot(C, R.T.conj())
   870|         0|            0|            0|  0.00%|
   871|         0|            0|            0|  0.00%|        U, S, WH = svd(C, full_matrices=False, compute_uv=True)
   872|         0|            0|            0|  0.00%|
   873|         0|            0|            0|  0.00%|        C = dot(C, inv(WH))
   874|         0|            0|            0|  0.00%|        D = dot(D, WH.T.conj())
   875|         0|            0|            0|  0.00%|
   876|         0|            0|            0|  0.00%|        for k in range(q):
   877|         0|            0|            0|  0.00%|            self.cs[k] = C[:,k].copy()
   878|         0|            0|            0|  0.00%|            self.ds[k] = D[:,k].copy()
   879|         0|            0|            0|  0.00%|
   880|         0|            0|            0|  0.00%|        del self.cs[q:]
   881|         0|            0|            0|  0.00%|        del self.ds[q:]
   882|         0|            0|            0|  0.00%|
   883|         0|            0|            0|  0.00%|
   884|         0|            0|            0|  0.00%|_doc_parts['broyden_params'] = """
   885|         0|            0|            0|  0.00%|    alpha : float, optional
   886|         0|            0|            0|  0.00%|        Initial guess for the Jacobian is ``(-1/alpha)``.
   887|         0|            0|            0|  0.00%|    reduction_method : str or tuple, optional
   888|         0|            0|            0|  0.00%|        Method used in ensuring that the rank of the Broyden matrix
   889|         0|            0|            0|  0.00%|        stays low. Can either be a string giving the name of the method,
   890|         0|            0|            0|  0.00%|        or a tuple of the form ``(method, param1, param2, ...)``
   891|         0|            0|            0|  0.00%|        that gives the name of the method and values for additional parameters.
   892|         0|            0|            0|  0.00%|
   893|         0|            0|            0|  0.00%|        Methods available:
   894|         0|            0|            0|  0.00%|
   895|         0|            0|            0|  0.00%|            - ``restart``: drop all matrix columns. Has no extra parameters.
   896|         0|            0|            0|  0.00%|            - ``simple``: drop oldest matrix column. Has no extra parameters.
   897|         0|            0|            0|  0.00%|            - ``svd``: keep only the most significant SVD components.
   898|         0|            0|            0|  0.00%|              Takes an extra parameter, ``to_retain``, which determines the
   899|         0|            0|            0|  0.00%|              number of SVD components to retain when rank reduction is done.
   900|         0|            0|            0|  0.00%|              Default is ``max_rank - 2``.
   901|         0|            0|            0|  0.00%|
   902|         0|            0|            0|  0.00%|    max_rank : int, optional
   903|         0|            0|            0|  0.00%|        Maximum rank for the Broyden matrix.
   904|         0|            0|            0|  0.00%|        Default is infinity (i.e., no rank reduction).
   905|         0|            0|            0|  0.00%|    """.strip()
   906|         0|            0|            0|  0.00%|
   907|         0|            0|            0|  0.00%|
   908|         0|            0|            0|  0.00%|class BroydenFirst(GenericBroyden):
   909|         0|            0|            0|  0.00%|    r"""
   910|         0|            0|            0|  0.00%|    Find a root of a function, using Broyden's first Jacobian approximation.
   911|         0|            0|            0|  0.00%|
   912|         0|            0|            0|  0.00%|    This method is also known as \"Broyden's good method\".
   913|         0|            0|            0|  0.00%|
   914|         0|            0|            0|  0.00%|    Parameters
   915|         0|            0|            0|  0.00%|    ----------
   916|         0|            0|            0|  0.00%|    %(params_basic)s
   917|         0|            0|            0|  0.00%|    %(broyden_params)s
   918|         0|            0|            0|  0.00%|    %(params_extra)s
   919|         0|            0|            0|  0.00%|
   920|         0|            0|            0|  0.00%|    See Also
   921|         0|            0|            0|  0.00%|    --------
   922|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
   923|         0|            0|            0|  0.00%|           functions. See ``method=='broyden1'`` in particular.
   924|         0|            0|            0|  0.00%|
   925|         0|            0|            0|  0.00%|    Notes
   926|         0|            0|            0|  0.00%|    -----
   927|         0|            0|            0|  0.00%|    This algorithm implements the inverse Jacobian Quasi-Newton update
   928|         0|            0|            0|  0.00%|
   929|         0|            0|            0|  0.00%|    .. math:: H_+ = H + (dx - H df) dx^\dagger H / ( dx^\dagger H df)
   930|         0|            0|            0|  0.00%|
   931|         0|            0|            0|  0.00%|    which corresponds to Broyden's first Jacobian update
   932|         0|            0|            0|  0.00%|
   933|         0|            0|            0|  0.00%|    .. math:: J_+ = J + (df - J dx) dx^\dagger / dx^\dagger dx
   934|         0|            0|            0|  0.00%|
   935|         0|            0|            0|  0.00%|
   936|         0|            0|            0|  0.00%|    References
   937|         0|            0|            0|  0.00%|    ----------
   938|         0|            0|            0|  0.00%|    .. [1] B.A. van der Rotten, PhD thesis,
   939|         0|            0|            0|  0.00%|       \"A limited memory Broyden method to solve high-dimensional
   940|         0|            0|            0|  0.00%|       systems of nonlinear equations\". Mathematisch Instituut,
   941|         0|            0|            0|  0.00%|       Universiteit Leiden, The Netherlands (2003).
   942|         0|            0|            0|  0.00%|
   943|         0|            0|            0|  0.00%|       https://web.archive.org/web/20161022015821/http://www.math.leidenuniv.nl/scripties/Rotten.pdf
   944|         0|            0|            0|  0.00%|
   945|         0|            0|            0|  0.00%|    """
   946|         0|            0|            0|  0.00%|
   947|         0|            0|            0|  0.00%|    def __init__(self, alpha=None, reduction_method='restart', max_rank=None):
   948|         0|            0|            0|  0.00%|        GenericBroyden.__init__(self)
   949|         0|            0|            0|  0.00%|        self.alpha = alpha
   950|         0|            0|            0|  0.00%|        self.Gm = None
   951|         0|            0|            0|  0.00%|
   952|         0|            0|            0|  0.00%|        if max_rank is None:
   953|         0|            0|            0|  0.00%|            max_rank = np.inf
   954|         0|            0|            0|  0.00%|        self.max_rank = max_rank
   955|         0|            0|            0|  0.00%|
   956|         0|            0|            0|  0.00%|        if isinstance(reduction_method, str):
   957|         0|            0|            0|  0.00%|            reduce_params = ()
   958|         0|            0|            0|  0.00%|        else:
   959|         0|            0|            0|  0.00%|            reduce_params = reduction_method[1:]
   960|         0|            0|            0|  0.00%|            reduction_method = reduction_method[0]
   961|         0|            0|            0|  0.00%|        reduce_params = (max_rank - 1,) + reduce_params
   962|         0|            0|            0|  0.00%|
   963|         0|            0|            0|  0.00%|        if reduction_method == 'svd':
   964|         0|            0|            0|  0.00%|            self._reduce = lambda: self.Gm.svd_reduce(*reduce_params)
   965|         0|            0|            0|  0.00%|        elif reduction_method == 'simple':
   966|         0|            0|            0|  0.00%|            self._reduce = lambda: self.Gm.simple_reduce(*reduce_params)
   967|         0|            0|            0|  0.00%|        elif reduction_method == 'restart':
   968|         0|            0|            0|  0.00%|            self._reduce = lambda: self.Gm.restart_reduce(*reduce_params)
   969|         0|            0|            0|  0.00%|        else:
   970|         0|            0|            0|  0.00%|            raise ValueError("Unknown rank reduction method '%s'" %
   971|         0|            0|            0|  0.00%|                             reduction_method)
   972|         0|            0|            0|  0.00%|
   973|         0|            0|            0|  0.00%|    def setup(self, x, F, func):
   974|         0|            0|            0|  0.00%|        GenericBroyden.setup(self, x, F, func)
   975|         0|            0|            0|  0.00%|        self.Gm = LowRankMatrix(-self.alpha, self.shape[0], self.dtype)
   976|         0|            0|            0|  0.00%|
   977|         0|            0|            0|  0.00%|    def todense(self):
   978|         0|            0|            0|  0.00%|        return inv(self.Gm)
   979|         0|            0|            0|  0.00%|
   980|         0|            0|            0|  0.00%|    def solve(self, f, tol=0):
   981|         0|            0|            0|  0.00%|        r = self.Gm.matvec(f)
   982|         0|            0|            0|  0.00%|        if not np.isfinite(r).all():
   983|         0|            0|            0|  0.00%|            # singular; reset the Jacobian approximation
   984|         0|            0|            0|  0.00%|            self.setup(self.last_x, self.last_f, self.func)
   985|         0|            0|            0|  0.00%|        return self.Gm.matvec(f)
   986|         0|            0|            0|  0.00%|
   987|         0|            0|            0|  0.00%|    def matvec(self, f):
   988|         0|            0|            0|  0.00%|        return self.Gm.solve(f)
   989|         0|            0|            0|  0.00%|
   990|         0|            0|            0|  0.00%|    def rsolve(self, f, tol=0):
   991|         0|            0|            0|  0.00%|        return self.Gm.rmatvec(f)
   992|         0|            0|            0|  0.00%|
   993|         0|            0|            0|  0.00%|    def rmatvec(self, f):
   994|         0|            0|            0|  0.00%|        return self.Gm.rsolve(f)
   995|         0|            0|            0|  0.00%|
   996|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
   997|         0|            0|            0|  0.00%|        self._reduce()  # reduce first to preserve secant condition
   998|         0|            0|            0|  0.00%|
   999|         0|            0|            0|  0.00%|        v = self.Gm.rmatvec(dx)
  1000|         0|            0|            0|  0.00%|        c = dx - self.Gm.matvec(df)
  1001|         0|            0|            0|  0.00%|        d = v / vdot(df, v)
  1002|         0|            0|            0|  0.00%|
  1003|         0|            0|            0|  0.00%|        self.Gm.append(c, d)
  1004|         0|            0|            0|  0.00%|
  1005|         0|            0|            0|  0.00%|
  1006|         0|            0|            0|  0.00%|class BroydenSecond(BroydenFirst):
  1007|         0|            0|            0|  0.00%|    """
  1008|         0|            0|            0|  0.00%|    Find a root of a function, using Broyden\'s second Jacobian approximation.
  1009|         0|            0|            0|  0.00%|
  1010|         0|            0|            0|  0.00%|    This method is also known as \"Broyden's bad method\".
  1011|         0|            0|            0|  0.00%|
  1012|         0|            0|            0|  0.00%|    Parameters
  1013|         0|            0|            0|  0.00%|    ----------
  1014|         0|            0|            0|  0.00%|    %(params_basic)s
  1015|         0|            0|            0|  0.00%|    %(broyden_params)s
  1016|         0|            0|            0|  0.00%|    %(params_extra)s
  1017|         0|            0|            0|  0.00%|
  1018|         0|            0|            0|  0.00%|    See Also
  1019|         0|            0|            0|  0.00%|    --------
  1020|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1021|         0|            0|            0|  0.00%|           functions. See ``method=='broyden2'`` in particular.
  1022|         0|            0|            0|  0.00%|
  1023|         0|            0|            0|  0.00%|    Notes
  1024|         0|            0|            0|  0.00%|    -----
  1025|         0|            0|            0|  0.00%|    This algorithm implements the inverse Jacobian Quasi-Newton update
  1026|         0|            0|            0|  0.00%|
  1027|         0|            0|            0|  0.00%|    .. math:: H_+ = H + (dx - H df) df^\\dagger / ( df^\\dagger df)
  1028|         0|            0|            0|  0.00%|
  1029|         0|            0|            0|  0.00%|    corresponding to Broyden's second method.
  1030|         0|            0|            0|  0.00%|
  1031|         0|            0|            0|  0.00%|    References
  1032|         0|            0|            0|  0.00%|    ----------
  1033|         0|            0|            0|  0.00%|    .. [1] B.A. van der Rotten, PhD thesis,
  1034|         0|            0|            0|  0.00%|       \"A limited memory Broyden method to solve high-dimensional
  1035|         0|            0|            0|  0.00%|       systems of nonlinear equations\". Mathematisch Instituut,
  1036|         0|            0|            0|  0.00%|       Universiteit Leiden, The Netherlands (2003).
  1037|         0|            0|            0|  0.00%|
  1038|         0|            0|            0|  0.00%|       https://web.archive.org/web/20161022015821/http://www.math.leidenuniv.nl/scripties/Rotten.pdf
  1039|         0|            0|            0|  0.00%|
  1040|         0|            0|            0|  0.00%|    """
  1041|         0|            0|            0|  0.00%|
  1042|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
  1043|         0|            0|            0|  0.00%|        self._reduce()  # reduce first to preserve secant condition
  1044|         0|            0|            0|  0.00%|
  1045|         0|            0|            0|  0.00%|        v = df
  1046|         0|            0|            0|  0.00%|        c = dx - self.Gm.matvec(df)
  1047|         0|            0|            0|  0.00%|        d = v / df_norm**2
  1048|         0|            0|            0|  0.00%|        self.Gm.append(c, d)
  1049|         0|            0|            0|  0.00%|
  1050|         0|            0|            0|  0.00%|
  1051|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1052|         0|            0|            0|  0.00%|# Broyden-like (restricted memory)
  1053|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1054|         0|            0|            0|  0.00%|
  1055|         0|            0|            0|  0.00%|class Anderson(GenericBroyden):
  1056|         0|            0|            0|  0.00%|    """
  1057|         0|            0|            0|  0.00%|    Find a root of a function, using (extended) Anderson mixing.
  1058|         0|            0|            0|  0.00%|
  1059|         0|            0|            0|  0.00%|    The Jacobian is formed by for a 'best' solution in the space
  1060|         0|            0|            0|  0.00%|    spanned by last `M` vectors. As a result, only a MxM matrix
  1061|         0|            0|            0|  0.00%|    inversions and MxN multiplications are required. [Ey]_
  1062|         0|            0|            0|  0.00%|
  1063|         0|            0|            0|  0.00%|    Parameters
  1064|         0|            0|            0|  0.00%|    ----------
  1065|         0|            0|            0|  0.00%|    %(params_basic)s
  1066|         0|            0|            0|  0.00%|    alpha : float, optional
  1067|         0|            0|            0|  0.00%|        Initial guess for the Jacobian is (-1/alpha).
  1068|         0|            0|            0|  0.00%|    M : float, optional
  1069|         0|            0|            0|  0.00%|        Number of previous vectors to retain. Defaults to 5.
  1070|         0|            0|            0|  0.00%|    w0 : float, optional
  1071|         0|            0|            0|  0.00%|        Regularization parameter for numerical stability.
  1072|         0|            0|            0|  0.00%|        Compared to unity, good values of the order of 0.01.
  1073|         0|            0|            0|  0.00%|    %(params_extra)s
  1074|         0|            0|            0|  0.00%|
  1075|         0|            0|            0|  0.00%|    See Also
  1076|         0|            0|            0|  0.00%|    --------
  1077|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1078|         0|            0|            0|  0.00%|           functions. See ``method=='anderson'`` in particular.
  1079|         0|            0|            0|  0.00%|
  1080|         0|            0|            0|  0.00%|    References
  1081|         0|            0|            0|  0.00%|    ----------
  1082|         0|            0|            0|  0.00%|    .. [Ey] V. Eyert, J. Comp. Phys., 124, 271 (1996).
  1083|         0|            0|            0|  0.00%|
  1084|         0|            0|            0|  0.00%|    """
  1085|         0|            0|            0|  0.00%|
  1086|         0|            0|            0|  0.00%|    # Note:
  1087|         0|            0|            0|  0.00%|    #
  1088|         0|            0|            0|  0.00%|    # Anderson method maintains a rank M approximation of the inverse Jacobian,
  1089|         0|            0|            0|  0.00%|    #
  1090|         0|            0|            0|  0.00%|    #     J^-1 v ~ -v*alpha + (dX + alpha dF) A^-1 dF^H v
  1091|         0|            0|            0|  0.00%|    #     A      = W + dF^H dF
  1092|         0|            0|            0|  0.00%|    #     W      = w0^2 diag(dF^H dF)
  1093|         0|            0|            0|  0.00%|    #
  1094|         0|            0|            0|  0.00%|    # so that for w0 = 0 the secant condition applies for last M iterates, i.e.,
  1095|         0|            0|            0|  0.00%|    #
  1096|         0|            0|            0|  0.00%|    #     J^-1 df_j = dx_j
  1097|         0|            0|            0|  0.00%|    #
  1098|         0|            0|            0|  0.00%|    # for all j = 0 ... M-1.
  1099|         0|            0|            0|  0.00%|    #
  1100|         0|            0|            0|  0.00%|    # Moreover, (from Sherman-Morrison-Woodbury formula)
  1101|         0|            0|            0|  0.00%|    #
  1102|         0|            0|            0|  0.00%|    #    J v ~ [ b I - b^2 C (I + b dF^H A^-1 C)^-1 dF^H ] v
  1103|         0|            0|            0|  0.00%|    #    C   = (dX + alpha dF) A^-1
  1104|         0|            0|            0|  0.00%|    #    b   = -1/alpha
  1105|         0|            0|            0|  0.00%|    #
  1106|         0|            0|            0|  0.00%|    # and after simplification
  1107|         0|            0|            0|  0.00%|    #
  1108|         0|            0|            0|  0.00%|    #    J v ~ -v/alpha + (dX/alpha + dF) (dF^H dX - alpha W)^-1 dF^H v
  1109|         0|            0|            0|  0.00%|    #
  1110|         0|            0|            0|  0.00%|
  1111|         0|            0|            0|  0.00%|    def __init__(self, alpha=None, w0=0.01, M=5):
  1112|         0|            0|            0|  0.00%|        GenericBroyden.__init__(self)
  1113|         0|            0|            0|  0.00%|        self.alpha = alpha
  1114|         0|            0|            0|  0.00%|        self.M = M
  1115|         0|            0|            0|  0.00%|        self.dx = []
  1116|         0|            0|            0|  0.00%|        self.df = []
  1117|         0|            0|            0|  0.00%|        self.gamma = None
  1118|         0|            0|            0|  0.00%|        self.w0 = w0
  1119|         0|            0|            0|  0.00%|
  1120|         0|            0|            0|  0.00%|    def solve(self, f, tol=0):
  1121|         0|            0|            0|  0.00%|        dx = -self.alpha*f
  1122|         0|            0|            0|  0.00%|
  1123|         0|            0|            0|  0.00%|        n = len(self.dx)
  1124|         0|            0|            0|  0.00%|        if n == 0:
  1125|         0|            0|            0|  0.00%|            return dx
  1126|         0|            0|            0|  0.00%|
  1127|         0|            0|            0|  0.00%|        df_f = np.empty(n, dtype=f.dtype)
  1128|         0|            0|            0|  0.00%|        for k in range(n):
  1129|         0|            0|            0|  0.00%|            df_f[k] = vdot(self.df[k], f)
  1130|         0|            0|            0|  0.00%|
  1131|         0|            0|            0|  0.00%|        try:
  1132|         0|            0|            0|  0.00%|            gamma = solve(self.a, df_f)
  1133|         0|            0|            0|  0.00%|        except LinAlgError:
  1134|         0|            0|            0|  0.00%|            # singular; reset the Jacobian approximation
  1135|         0|            0|            0|  0.00%|            del self.dx[:]
  1136|         0|            0|            0|  0.00%|            del self.df[:]
  1137|         0|            0|            0|  0.00%|            return dx
  1138|         0|            0|            0|  0.00%|
  1139|         0|            0|            0|  0.00%|        for m in range(n):
  1140|         0|            0|            0|  0.00%|            dx += gamma[m]*(self.dx[m] + self.alpha*self.df[m])
  1141|         0|            0|            0|  0.00%|        return dx
  1142|         0|            0|            0|  0.00%|
  1143|         0|            0|            0|  0.00%|    def matvec(self, f):
  1144|         0|            0|            0|  0.00%|        dx = -f/self.alpha
  1145|         0|            0|            0|  0.00%|
  1146|         0|            0|            0|  0.00%|        n = len(self.dx)
  1147|         0|            0|            0|  0.00%|        if n == 0:
  1148|         0|            0|            0|  0.00%|            return dx
  1149|         0|            0|            0|  0.00%|
  1150|         0|            0|            0|  0.00%|        df_f = np.empty(n, dtype=f.dtype)
  1151|         0|            0|            0|  0.00%|        for k in range(n):
  1152|         0|            0|            0|  0.00%|            df_f[k] = vdot(self.df[k], f)
  1153|         0|            0|            0|  0.00%|
  1154|         0|            0|            0|  0.00%|        b = np.empty((n, n), dtype=f.dtype)
  1155|         0|            0|            0|  0.00%|        for i in range(n):
  1156|         0|            0|            0|  0.00%|            for j in range(n):
  1157|         0|            0|            0|  0.00%|                b[i,j] = vdot(self.df[i], self.dx[j])
  1158|         0|            0|            0|  0.00%|                if i == j and self.w0 != 0:
  1159|         0|            0|            0|  0.00%|                    b[i,j] -= vdot(self.df[i], self.df[i])*self.w0**2*self.alpha
  1160|         0|            0|            0|  0.00%|        gamma = solve(b, df_f)
  1161|         0|            0|            0|  0.00%|
  1162|         0|            0|            0|  0.00%|        for m in range(n):
  1163|         0|            0|            0|  0.00%|            dx += gamma[m]*(self.df[m] + self.dx[m]/self.alpha)
  1164|         0|            0|            0|  0.00%|        return dx
  1165|         0|            0|            0|  0.00%|
  1166|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
  1167|         0|            0|            0|  0.00%|        if self.M == 0:
  1168|         0|            0|            0|  0.00%|            return
  1169|         0|            0|            0|  0.00%|
  1170|         0|            0|            0|  0.00%|        self.dx.append(dx)
  1171|         0|            0|            0|  0.00%|        self.df.append(df)
  1172|         0|            0|            0|  0.00%|
  1173|         0|            0|            0|  0.00%|        while len(self.dx) > self.M:
  1174|         0|            0|            0|  0.00%|            self.dx.pop(0)
  1175|         0|            0|            0|  0.00%|            self.df.pop(0)
  1176|         0|            0|            0|  0.00%|
  1177|         0|            0|            0|  0.00%|        n = len(self.dx)
  1178|         0|            0|            0|  0.00%|        a = np.zeros((n, n), dtype=f.dtype)
  1179|         0|            0|            0|  0.00%|
  1180|         0|            0|            0|  0.00%|        for i in range(n):
  1181|         0|            0|            0|  0.00%|            for j in range(i, n):
  1182|         0|            0|            0|  0.00%|                if i == j:
  1183|         0|            0|            0|  0.00%|                    wd = self.w0**2
  1184|         0|            0|            0|  0.00%|                else:
  1185|         0|            0|            0|  0.00%|                    wd = 0
  1186|         0|            0|            0|  0.00%|                a[i,j] = (1+wd)*vdot(self.df[i], self.df[j])
  1187|         0|            0|            0|  0.00%|
  1188|         0|            0|            0|  0.00%|        a += np.triu(a, 1).T.conj()
  1189|         0|            0|            0|  0.00%|        self.a = a
  1190|         0|            0|            0|  0.00%|
  1191|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1192|         0|            0|            0|  0.00%|# Simple iterations
  1193|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1194|         0|            0|            0|  0.00%|
  1195|         0|            0|            0|  0.00%|
  1196|         0|            0|            0|  0.00%|class DiagBroyden(GenericBroyden):
  1197|         0|            0|            0|  0.00%|    """
  1198|         0|            0|            0|  0.00%|    Find a root of a function, using diagonal Broyden Jacobian approximation.
  1199|         0|            0|            0|  0.00%|
  1200|         0|            0|            0|  0.00%|    The Jacobian approximation is derived from previous iterations, by
  1201|         0|            0|            0|  0.00%|    retaining only the diagonal of Broyden matrices.
  1202|         0|            0|            0|  0.00%|
  1203|         0|            0|            0|  0.00%|    .. warning::
  1204|         0|            0|            0|  0.00%|
  1205|         0|            0|            0|  0.00%|       This algorithm may be useful for specific problems, but whether
  1206|         0|            0|            0|  0.00%|       it will work may depend strongly on the problem.
  1207|         0|            0|            0|  0.00%|
  1208|         0|            0|            0|  0.00%|    Parameters
  1209|         0|            0|            0|  0.00%|    ----------
  1210|         0|            0|            0|  0.00%|    %(params_basic)s
  1211|         0|            0|            0|  0.00%|    alpha : float, optional
  1212|         0|            0|            0|  0.00%|        Initial guess for the Jacobian is (-1/alpha).
  1213|         0|            0|            0|  0.00%|    %(params_extra)s
  1214|         0|            0|            0|  0.00%|
  1215|         0|            0|            0|  0.00%|    See Also
  1216|         0|            0|            0|  0.00%|    --------
  1217|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1218|         0|            0|            0|  0.00%|           functions. See ``method=='diagbroyden'`` in particular.
  1219|         0|            0|            0|  0.00%|    """
  1220|         0|            0|            0|  0.00%|
  1221|         0|            0|            0|  0.00%|    def __init__(self, alpha=None):
  1222|         0|            0|            0|  0.00%|        GenericBroyden.__init__(self)
  1223|         0|            0|            0|  0.00%|        self.alpha = alpha
  1224|         0|            0|            0|  0.00%|
  1225|         0|            0|            0|  0.00%|    def setup(self, x, F, func):
  1226|         0|            0|            0|  0.00%|        GenericBroyden.setup(self, x, F, func)
  1227|         0|            0|            0|  0.00%|        self.d = np.full((self.shape[0],), 1 / self.alpha, dtype=self.dtype)
  1228|         0|            0|            0|  0.00%|
  1229|         0|            0|            0|  0.00%|    def solve(self, f, tol=0):
  1230|         0|            0|            0|  0.00%|        return -f / self.d
  1231|         0|            0|            0|  0.00%|
  1232|         0|            0|            0|  0.00%|    def matvec(self, f):
  1233|         0|            0|            0|  0.00%|        return -f * self.d
  1234|         0|            0|            0|  0.00%|
  1235|         0|            0|            0|  0.00%|    def rsolve(self, f, tol=0):
  1236|         0|            0|            0|  0.00%|        return -f / self.d.conj()
  1237|         0|            0|            0|  0.00%|
  1238|         0|            0|            0|  0.00%|    def rmatvec(self, f):
  1239|         0|            0|            0|  0.00%|        return -f * self.d.conj()
  1240|         0|            0|            0|  0.00%|
  1241|         0|            0|            0|  0.00%|    def todense(self):
  1242|         0|            0|            0|  0.00%|        return np.diag(-self.d)
  1243|         0|            0|            0|  0.00%|
  1244|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
  1245|         0|            0|            0|  0.00%|        self.d -= (df + self.d*dx)*dx/dx_norm**2
  1246|         0|            0|            0|  0.00%|
  1247|         0|            0|            0|  0.00%|
  1248|         0|            0|            0|  0.00%|class LinearMixing(GenericBroyden):
  1249|         0|            0|            0|  0.00%|    """
  1250|         0|            0|            0|  0.00%|    Find a root of a function, using a scalar Jacobian approximation.
  1251|         0|            0|            0|  0.00%|
  1252|         0|            0|            0|  0.00%|    .. warning::
  1253|         0|            0|            0|  0.00%|
  1254|         0|            0|            0|  0.00%|       This algorithm may be useful for specific problems, but whether
  1255|         0|            0|            0|  0.00%|       it will work may depend strongly on the problem.
  1256|         0|            0|            0|  0.00%|
  1257|         0|            0|            0|  0.00%|    Parameters
  1258|         0|            0|            0|  0.00%|    ----------
  1259|         0|            0|            0|  0.00%|    %(params_basic)s
  1260|         0|            0|            0|  0.00%|    alpha : float, optional
  1261|         0|            0|            0|  0.00%|        The Jacobian approximation is (-1/alpha).
  1262|         0|            0|            0|  0.00%|    %(params_extra)s
  1263|         0|            0|            0|  0.00%|
  1264|         0|            0|            0|  0.00%|    See Also
  1265|         0|            0|            0|  0.00%|    --------
  1266|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1267|         0|            0|            0|  0.00%|           functions. See ``method=='linearmixing'`` in particular.
  1268|         0|            0|            0|  0.00%|
  1269|         0|            0|            0|  0.00%|    """
  1270|         0|            0|            0|  0.00%|
  1271|         0|            0|            0|  0.00%|    def __init__(self, alpha=None):
  1272|         0|            0|            0|  0.00%|        GenericBroyden.__init__(self)
  1273|         0|            0|            0|  0.00%|        self.alpha = alpha
  1274|         0|            0|            0|  0.00%|
  1275|         0|            0|            0|  0.00%|    def solve(self, f, tol=0):
  1276|         0|            0|            0|  0.00%|        return -f*self.alpha
  1277|         0|            0|            0|  0.00%|
  1278|         0|            0|            0|  0.00%|    def matvec(self, f):
  1279|         0|            0|            0|  0.00%|        return -f/self.alpha
  1280|         0|            0|            0|  0.00%|
  1281|         0|            0|            0|  0.00%|    def rsolve(self, f, tol=0):
  1282|         0|            0|            0|  0.00%|        return -f*np.conj(self.alpha)
  1283|         0|            0|            0|  0.00%|
  1284|         0|            0|            0|  0.00%|    def rmatvec(self, f):
  1285|         0|            0|            0|  0.00%|        return -f/np.conj(self.alpha)
  1286|         0|            0|            0|  0.00%|
  1287|         0|            0|            0|  0.00%|    def todense(self):
  1288|         0|            0|            0|  0.00%|        return np.diag(np.full(self.shape[0], -1/self.alpha))
  1289|         0|            0|            0|  0.00%|
  1290|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
  1291|         0|            0|            0|  0.00%|        pass
  1292|         0|            0|            0|  0.00%|
  1293|         0|            0|            0|  0.00%|
  1294|         0|            0|            0|  0.00%|class ExcitingMixing(GenericBroyden):
  1295|         0|            0|            0|  0.00%|    """
  1296|         0|            0|            0|  0.00%|    Find a root of a function, using a tuned diagonal Jacobian approximation.
  1297|         0|            0|            0|  0.00%|
  1298|         0|            0|            0|  0.00%|    The Jacobian matrix is diagonal and is tuned on each iteration.
  1299|         0|            0|            0|  0.00%|
  1300|         0|            0|            0|  0.00%|    .. warning::
  1301|         0|            0|            0|  0.00%|
  1302|         0|            0|            0|  0.00%|       This algorithm may be useful for specific problems, but whether
  1303|         0|            0|            0|  0.00%|       it will work may depend strongly on the problem.
  1304|         0|            0|            0|  0.00%|
  1305|         0|            0|            0|  0.00%|    See Also
  1306|         0|            0|            0|  0.00%|    --------
  1307|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1308|         0|            0|            0|  0.00%|           functions. See ``method=='excitingmixing'`` in particular.
  1309|         0|            0|            0|  0.00%|
  1310|         0|            0|            0|  0.00%|    Parameters
  1311|         0|            0|            0|  0.00%|    ----------
  1312|         0|            0|            0|  0.00%|    %(params_basic)s
  1313|         0|            0|            0|  0.00%|    alpha : float, optional
  1314|         0|            0|            0|  0.00%|        Initial Jacobian approximation is (-1/alpha).
  1315|         0|            0|            0|  0.00%|    alphamax : float, optional
  1316|         0|            0|            0|  0.00%|        The entries of the diagonal Jacobian are kept in the range
  1317|         0|            0|            0|  0.00%|        ``[alpha, alphamax]``.
  1318|         0|            0|            0|  0.00%|    %(params_extra)s
  1319|         0|            0|            0|  0.00%|    """
  1320|         0|            0|            0|  0.00%|
  1321|         0|            0|            0|  0.00%|    def __init__(self, alpha=None, alphamax=1.0):
  1322|         0|            0|            0|  0.00%|        GenericBroyden.__init__(self)
  1323|         0|            0|            0|  0.00%|        self.alpha = alpha
  1324|         0|            0|            0|  0.00%|        self.alphamax = alphamax
  1325|         0|            0|            0|  0.00%|        self.beta = None
  1326|         0|            0|            0|  0.00%|
  1327|         0|            0|            0|  0.00%|    def setup(self, x, F, func):
  1328|         0|            0|            0|  0.00%|        GenericBroyden.setup(self, x, F, func)
  1329|         0|            0|            0|  0.00%|        self.beta = np.full((self.shape[0],), self.alpha, dtype=self.dtype)
  1330|         0|            0|            0|  0.00%|
  1331|         0|            0|            0|  0.00%|    def solve(self, f, tol=0):
  1332|         0|            0|            0|  0.00%|        return -f*self.beta
  1333|         0|            0|            0|  0.00%|
  1334|         0|            0|            0|  0.00%|    def matvec(self, f):
  1335|         0|            0|            0|  0.00%|        return -f/self.beta
  1336|         0|            0|            0|  0.00%|
  1337|         0|            0|            0|  0.00%|    def rsolve(self, f, tol=0):
  1338|         0|            0|            0|  0.00%|        return -f*self.beta.conj()
  1339|         0|            0|            0|  0.00%|
  1340|         0|            0|            0|  0.00%|    def rmatvec(self, f):
  1341|         0|            0|            0|  0.00%|        return -f/self.beta.conj()
  1342|         0|            0|            0|  0.00%|
  1343|         0|            0|            0|  0.00%|    def todense(self):
  1344|         0|            0|            0|  0.00%|        return np.diag(-1/self.beta)
  1345|         0|            0|            0|  0.00%|
  1346|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
  1347|         0|            0|            0|  0.00%|        incr = f*self.last_f > 0
  1348|         0|            0|            0|  0.00%|        self.beta[incr] += self.alpha
  1349|         0|            0|            0|  0.00%|        self.beta[~incr] = self.alpha
  1350|         0|            0|            0|  0.00%|        np.clip(self.beta, 0, self.alphamax, out=self.beta)
  1351|         0|            0|            0|  0.00%|
  1352|         0|            0|            0|  0.00%|
  1353|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1354|         0|            0|            0|  0.00%|# Iterative/Krylov approximated Jacobians
  1355|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1356|         0|            0|            0|  0.00%|
  1357|         0|            0|            0|  0.00%|class KrylovJacobian(Jacobian):
  1358|         0|            0|            0|  0.00%|    r"""
  1359|         0|            0|            0|  0.00%|    Find a root of a function, using Krylov approximation for inverse Jacobian.
  1360|         0|            0|            0|  0.00%|
  1361|         0|            0|            0|  0.00%|    This method is suitable for solving large-scale problems.
  1362|         0|            0|            0|  0.00%|
  1363|         0|            0|            0|  0.00%|    Parameters
  1364|         0|            0|            0|  0.00%|    ----------
  1365|         0|            0|            0|  0.00%|    %(params_basic)s
  1366|         0|            0|            0|  0.00%|    rdiff : float, optional
  1367|         0|            0|            0|  0.00%|        Relative step size to use in numerical differentiation.
  1368|         0|            0|            0|  0.00%|    method : {'lgmres', 'gmres', 'bicgstab', 'cgs', 'minres'} or function
  1369|         0|            0|            0|  0.00%|        Krylov method to use to approximate the Jacobian.
  1370|         0|            0|            0|  0.00%|        Can be a string, or a function implementing the same interface as
  1371|         0|            0|            0|  0.00%|        the iterative solvers in `scipy.sparse.linalg`.
  1372|         0|            0|            0|  0.00%|
  1373|         0|            0|            0|  0.00%|        The default is `scipy.sparse.linalg.lgmres`.
  1374|         0|            0|            0|  0.00%|    inner_maxiter : int, optional
  1375|         0|            0|            0|  0.00%|        Parameter to pass to the "inner" Krylov solver: maximum number of
  1376|         0|            0|            0|  0.00%|        iterations. Iteration will stop after maxiter steps even if the
  1377|         0|            0|            0|  0.00%|        specified tolerance has not been achieved.
  1378|         0|            0|            0|  0.00%|    inner_M : LinearOperator or InverseJacobian
  1379|         0|            0|            0|  0.00%|        Preconditioner for the inner Krylov iteration.
  1380|         0|            0|            0|  0.00%|        Note that you can use also inverse Jacobians as (adaptive)
  1381|         0|            0|            0|  0.00%|        preconditioners. For example,
  1382|         0|            0|            0|  0.00%|
  1383|         0|            0|            0|  0.00%|        >>> from scipy.optimize.nonlin import BroydenFirst, KrylovJacobian
  1384|         0|            0|            0|  0.00%|        >>> from scipy.optimize.nonlin import InverseJacobian
  1385|         0|            0|            0|  0.00%|        >>> jac = BroydenFirst()
  1386|         0|            0|            0|  0.00%|        >>> kjac = KrylovJacobian(inner_M=InverseJacobian(jac))
  1387|         0|            0|            0|  0.00%|
  1388|         0|            0|            0|  0.00%|        If the preconditioner has a method named 'update', it will be called
  1389|         0|            0|            0|  0.00%|        as ``update(x, f)`` after each nonlinear step, with ``x`` giving
  1390|         0|            0|            0|  0.00%|        the current point, and ``f`` the current function value.
  1391|         0|            0|            0|  0.00%|    outer_k : int, optional
  1392|         0|            0|            0|  0.00%|        Size of the subspace kept across LGMRES nonlinear iterations.
  1393|         0|            0|            0|  0.00%|        See `scipy.sparse.linalg.lgmres` for details.
  1394|         0|            0|            0|  0.00%|    inner_kwargs : kwargs
  1395|         0|            0|            0|  0.00%|        Keyword parameters for the "inner" Krylov solver
  1396|         0|            0|            0|  0.00%|        (defined with `method`). Parameter names must start with
  1397|         0|            0|            0|  0.00%|        the `inner_` prefix which will be stripped before passing on
  1398|         0|            0|            0|  0.00%|        the inner method. See, e.g., `scipy.sparse.linalg.gmres` for details.
  1399|         0|            0|            0|  0.00%|    %(params_extra)s
  1400|         0|            0|            0|  0.00%|
  1401|         0|            0|            0|  0.00%|    See Also
  1402|         0|            0|            0|  0.00%|    --------
  1403|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1404|         0|            0|            0|  0.00%|           functions. See ``method=='krylov'`` in particular.
  1405|         0|            0|            0|  0.00%|    scipy.sparse.linalg.gmres
  1406|         0|            0|            0|  0.00%|    scipy.sparse.linalg.lgmres
  1407|         0|            0|            0|  0.00%|
  1408|         0|            0|            0|  0.00%|    Notes
  1409|         0|            0|            0|  0.00%|    -----
  1410|         0|            0|            0|  0.00%|    This function implements a Newton-Krylov solver. The basic idea is
  1411|         0|            0|            0|  0.00%|    to compute the inverse of the Jacobian with an iterative Krylov
  1412|         0|            0|            0|  0.00%|    method. These methods require only evaluating the Jacobian-vector
  1413|         0|            0|            0|  0.00%|    products, which are conveniently approximated by a finite difference:
  1414|         0|            0|            0|  0.00%|
  1415|         0|            0|            0|  0.00%|    .. math:: J v \approx (f(x + \omega*v/|v|) - f(x)) / \omega
  1416|         0|            0|            0|  0.00%|
  1417|         0|            0|            0|  0.00%|    Due to the use of iterative matrix inverses, these methods can
  1418|         0|            0|            0|  0.00%|    deal with large nonlinear problems.
  1419|         0|            0|            0|  0.00%|
  1420|         0|            0|            0|  0.00%|    SciPy's `scipy.sparse.linalg` module offers a selection of Krylov
  1421|         0|            0|            0|  0.00%|    solvers to choose from. The default here is `lgmres`, which is a
  1422|         0|            0|            0|  0.00%|    variant of restarted GMRES iteration that reuses some of the
  1423|         0|            0|            0|  0.00%|    information obtained in the previous Newton steps to invert
  1424|         0|            0|            0|  0.00%|    Jacobians in subsequent steps.
  1425|         0|            0|            0|  0.00%|
  1426|         0|            0|            0|  0.00%|    For a review on Newton-Krylov methods, see for example [1]_,
  1427|         0|            0|            0|  0.00%|    and for the LGMRES sparse inverse method, see [2]_.
  1428|         0|            0|            0|  0.00%|
  1429|         0|            0|            0|  0.00%|    References
  1430|         0|            0|            0|  0.00%|    ----------
  1431|         0|            0|            0|  0.00%|    .. [1] D.A. Knoll and D.E. Keyes, J. Comp. Phys. 193, 357 (2004).
  1432|         0|            0|            0|  0.00%|           :doi:`10.1016/j.jcp.2003.08.010`
  1433|         0|            0|            0|  0.00%|    .. [2] A.H. Baker and E.R. Jessup and T. Manteuffel,
  1434|         0|            0|            0|  0.00%|           SIAM J. Matrix Anal. Appl. 26, 962 (2005).
  1435|         0|            0|            0|  0.00%|           :doi:`10.1137/S0895479803422014`
  1436|         0|            0|            0|  0.00%|
  1437|         0|            0|            0|  0.00%|    """
  1438|         0|            0|            0|  0.00%|
  1439|         0|            0|            0|  0.00%|    def __init__(self, rdiff=None, method='lgmres', inner_maxiter=20,
  1440|         0|            0|            0|  0.00%|                 inner_M=None, outer_k=10, **kw):
  1441|         0|            0|            0|  0.00%|        self.preconditioner = inner_M
  1442|         0|            0|            0|  0.00%|        self.rdiff = rdiff
  1443|         0|            0|            0|  0.00%|        self.method = dict(
  1444|         0|            0|            0|  0.00%|            bicgstab=scipy.sparse.linalg.bicgstab,
  1445|         0|            0|            0|  0.00%|            gmres=scipy.sparse.linalg.gmres,
  1446|         0|            0|            0|  0.00%|            lgmres=scipy.sparse.linalg.lgmres,
  1447|         0|            0|            0|  0.00%|            cgs=scipy.sparse.linalg.cgs,
  1448|         0|            0|            0|  0.00%|            minres=scipy.sparse.linalg.minres,
  1449|         0|            0|            0|  0.00%|            ).get(method, method)
  1450|         0|            0|            0|  0.00%|
  1451|         0|            0|            0|  0.00%|        self.method_kw = dict(maxiter=inner_maxiter, M=self.preconditioner)
  1452|         0|            0|            0|  0.00%|
  1453|         0|            0|            0|  0.00%|        if self.method is scipy.sparse.linalg.gmres:
  1454|         0|            0|            0|  0.00%|            # Replace GMRES's outer iteration with Newton steps
  1455|         0|            0|            0|  0.00%|            self.method_kw['restrt'] = inner_maxiter
  1456|         0|            0|            0|  0.00%|            self.method_kw['maxiter'] = 1
  1457|         0|            0|            0|  0.00%|            self.method_kw.setdefault('atol', 0)
  1458|         0|            0|            0|  0.00%|        elif self.method is scipy.sparse.linalg.gcrotmk:
  1459|         0|            0|            0|  0.00%|            self.method_kw.setdefault('atol', 0)
  1460|         0|            0|            0|  0.00%|        elif self.method is scipy.sparse.linalg.lgmres:
  1461|         0|            0|            0|  0.00%|            self.method_kw['outer_k'] = outer_k
  1462|         0|            0|            0|  0.00%|            # Replace LGMRES's outer iteration with Newton steps
  1463|         0|            0|            0|  0.00%|            self.method_kw['maxiter'] = 1
  1464|         0|            0|            0|  0.00%|            # Carry LGMRES's `outer_v` vectors across nonlinear iterations
  1465|         0|            0|            0|  0.00%|            self.method_kw.setdefault('outer_v', [])
  1466|         0|            0|            0|  0.00%|            self.method_kw.setdefault('prepend_outer_v', True)
  1467|         0|            0|            0|  0.00%|            # But don't carry the corresponding Jacobian*v products, in case
  1468|         0|            0|            0|  0.00%|            # the Jacobian changes a lot in the nonlinear step
  1469|         0|            0|            0|  0.00%|            #
  1470|         0|            0|            0|  0.00%|            # XXX: some trust-region inspired ideas might be more efficient...
  1471|         0|            0|            0|  0.00%|            #      See e.g., Brown & Saad. But needs to be implemented separately
  1472|         0|            0|            0|  0.00%|            #      since it's not an inexact Newton method.
  1473|         0|            0|            0|  0.00%|            self.method_kw.setdefault('store_outer_Av', False)
  1474|         0|            0|            0|  0.00%|            self.method_kw.setdefault('atol', 0)
  1475|         0|            0|            0|  0.00%|
  1476|         0|            0|            0|  0.00%|        for key, value in kw.items():
  1477|         0|            0|            0|  0.00%|            if not key.startswith('inner_'):
  1478|         0|            0|            0|  0.00%|                raise ValueError("Unknown parameter %s" % key)
  1479|         0|            0|            0|  0.00%|            self.method_kw[key[6:]] = value
  1480|         0|            0|            0|  0.00%|
  1481|         0|            0|            0|  0.00%|    def _update_diff_step(self):
  1482|         0|            0|            0|  0.00%|        mx = abs(self.x0).max()
  1483|         0|            0|            0|  0.00%|        mf = abs(self.f0).max()
  1484|         0|            0|            0|  0.00%|        self.omega = self.rdiff * max(1, mx) / max(1, mf)
  1485|         0|            0|            0|  0.00%|
  1486|         0|            0|            0|  0.00%|    def matvec(self, v):
  1487|         0|            0|            0|  0.00%|        nv = norm(v)
  1488|         0|            0|            0|  0.00%|        if nv == 0:
  1489|         0|            0|            0|  0.00%|            return 0*v
  1490|         0|            0|            0|  0.00%|        sc = self.omega / nv
  1491|         0|            0|            0|  0.00%|        r = (self.func(self.x0 + sc*v) - self.f0) / sc
  1492|         0|            0|            0|  0.00%|        if not np.all(np.isfinite(r)) and np.all(np.isfinite(v)):
  1493|         0|            0|            0|  0.00%|            raise ValueError('Function returned non-finite results')
  1494|         0|            0|            0|  0.00%|        return r
  1495|         0|            0|            0|  0.00%|
  1496|         0|            0|            0|  0.00%|    def solve(self, rhs, tol=0):
  1497|         0|            0|            0|  0.00%|        if 'tol' in self.method_kw:
  1498|         0|            0|            0|  0.00%|            sol, info = self.method(self.op, rhs, **self.method_kw)
  1499|         0|            0|            0|  0.00%|        else:
  1500|         0|            0|            0|  0.00%|            sol, info = self.method(self.op, rhs, tol=tol, **self.method_kw)
  1501|         0|            0|            0|  0.00%|        return sol
  1502|         0|            0|            0|  0.00%|
  1503|         0|            0|            0|  0.00%|    def update(self, x, f):
  1504|         0|            0|            0|  0.00%|        self.x0 = x
  1505|         0|            0|            0|  0.00%|        self.f0 = f
  1506|         0|            0|            0|  0.00%|        self._update_diff_step()
  1507|         0|            0|            0|  0.00%|
  1508|         0|            0|            0|  0.00%|        # Update also the preconditioner, if possible
  1509|         0|            0|            0|  0.00%|        if self.preconditioner is not None:
  1510|         0|            0|            0|  0.00%|            if hasattr(self.preconditioner, 'update'):
  1511|         0|            0|            0|  0.00%|                self.preconditioner.update(x, f)
  1512|         0|            0|            0|  0.00%|
  1513|         0|            0|            0|  0.00%|    def setup(self, x, f, func):
  1514|         0|            0|            0|  0.00%|        Jacobian.setup(self, x, f, func)
  1515|         0|            0|            0|  0.00%|        self.x0 = x
  1516|         0|            0|            0|  0.00%|        self.f0 = f
  1517|         0|            0|            0|  0.00%|        self.op = scipy.sparse.linalg.aslinearoperator(self)
  1518|         0|            0|            0|  0.00%|
  1519|         0|            0|            0|  0.00%|        if self.rdiff is None:
  1520|         0|            0|            0|  0.00%|            self.rdiff = np.finfo(x.dtype).eps ** (1./2)
  1521|         0|            0|            0|  0.00%|
  1522|         0|            0|            0|  0.00%|        self._update_diff_step()
  1523|         0|            0|            0|  0.00%|
  1524|         0|            0|            0|  0.00%|        # Setup also the preconditioner, if possible
  1525|         0|            0|            0|  0.00%|        if self.preconditioner is not None:
  1526|         0|            0|            0|  0.00%|            if hasattr(self.preconditioner, 'setup'):
  1527|         0|            0|            0|  0.00%|                self.preconditioner.setup(x, f, func)
  1528|         0|            0|            0|  0.00%|
  1529|         0|            0|            0|  0.00%|
  1530|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1531|         0|            0|            0|  0.00%|# Wrapper functions
  1532|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1533|         0|            0|            0|  0.00%|
  1534|         0|            0|            0|  0.00%|def _nonlin_wrapper(name, jac):
  1535|         0|            0|            0|  0.00%|    """
  1536|         0|            0|            0|  0.00%|    Construct a solver wrapper with given name and Jacobian approx.
  1537|         0|            0|            0|  0.00%|
  1538|         0|            0|            0|  0.00%|    It inspects the keyword arguments of ``jac.__init__``, and allows to
  1539|         0|            0|            0|  0.00%|    use the same arguments in the wrapper function, in addition to the
  1540|         0|            0|            0|  0.00%|    keyword arguments of `nonlin_solve`
  1541|         0|            0|            0|  0.00%|
  1542|         0|            0|            0|  0.00%|    """
  1543|         0|            0|            0|  0.00%|    signature = _getfullargspec(jac.__init__)
  1544|         0|            0|            0|  0.00%|    args, varargs, varkw, defaults, kwonlyargs, kwdefaults, _ = signature
  1545|         0|            0|            0|  0.00%|    kwargs = list(zip(args[-len(defaults):], defaults))
  1546|         0|            0|            0|  0.00%|    kw_str = ", ".join(["%s=%r" % (k, v) for k, v in kwargs])
  1547|         0|            0|            0|  0.00%|    if kw_str:
  1548|         0|            0|            0|  0.00%|        kw_str = ", " + kw_str
  1549|         0|            0|            0|  0.00%|    kwkw_str = ", ".join(["%s=%s" % (k, k) for k, v in kwargs])
  1550|         0|            0|            0|  0.00%|    if kwkw_str:
  1551|         0|            0|            0|  0.00%|        kwkw_str = kwkw_str + ", "
  1552|         0|            0|            0|  0.00%|    if kwonlyargs:
  1553|         0|            0|            0|  0.00%|        raise ValueError('Unexpected signature %s' % signature)
  1554|         0|            0|            0|  0.00%|
  1555|         0|            0|            0|  0.00%|    # Construct the wrapper function so that its keyword arguments
  1556|         0|            0|            0|  0.00%|    # are visible in pydoc.help etc.
  1557|         0|            0|            0|  0.00%|    wrapper = """
  1558|         0|            0|            0|  0.00%|def %(name)s(F, xin, iter=None %(kw)s, verbose=False, maxiter=None,
  1559|         0|            0|            0|  0.00%|             f_tol=None, f_rtol=None, x_tol=None, x_rtol=None,
  1560|         0|            0|            0|  0.00%|             tol_norm=None, line_search='armijo', callback=None, **kw):
  1561|         0|            0|            0|  0.00%|    jac = %(jac)s(%(kwkw)s **kw)
  1562|         0|            0|            0|  0.00%|    return nonlin_solve(F, xin, jac, iter, verbose, maxiter,
  1563|         0|            0|            0|  0.00%|                        f_tol, f_rtol, x_tol, x_rtol, tol_norm, line_search,
  1564|         0|            0|            0|  0.00%|                        callback)
  1565|         0|            0|            0|  0.00%|"""
  1566|         0|            0|            0|  0.00%|
  1567|         0|            0|            0|  0.00%|    wrapper = wrapper % dict(name=name, kw=kw_str, jac=jac.__name__,
  1568|         0|            0|            0|  0.00%|                             kwkw=kwkw_str)
  1569|         0|            0|            0|  0.00%|    ns = {}
  1570|         0|            0|            0|  0.00%|    ns.update(globals())
  1571|         0|            0|            0|  0.00%|    exec(wrapper, ns)
  1572|         0|            0|            0|  0.00%|    func = ns[name]
  1573|         0|            0|            0|  0.00%|    func.__doc__ = jac.__doc__
  1574|         0|            0|            0|  0.00%|    _set_doc(func)
  1575|         0|            0|            0|  0.00%|    return func
  1576|         0|            0|            0|  0.00%|
  1577|         0|            0|            0|  0.00%|
  1578|         0|            0|            0|  0.00%|broyden1 = _nonlin_wrapper('broyden1', BroydenFirst)
  1579|         0|            0|            0|  0.00%|broyden2 = _nonlin_wrapper('broyden2', BroydenSecond)
  1580|         0|            0|            0|  0.00%|anderson = _nonlin_wrapper('anderson', Anderson)
  1581|         0|            0|            0|  0.00%|linearmixing = _nonlin_wrapper('linearmixing', LinearMixing)
  1582|         0|            0|            0|  0.00%|diagbroyden = _nonlin_wrapper('diagbroyden', DiagBroyden)
  1583|         0|            0|            0|  0.00%|excitingmixing = _nonlin_wrapper('excitingmixing', ExcitingMixing)
  1584|         0|            0|            0|  0.00%|newton_krylov = _nonlin_wrapper('newton_krylov', KrylovJacobian)
File: <string>_23
File duration: 7.9155e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.52724e-05|  1.26362e-05|  0.00%|
     2|         1|  4.52995e-06|  4.52995e-06|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         1|  4.48227e-05|  4.48227e-05|  0.00%|
(call)|         1|  3.76701e-05|  3.76701e-05|  0.00%|# /opt/anaconda3/lib/python3.7/abc.py:130 register
     5|         1|  4.52995e-06|  4.52995e-06|  0.00%|
File: <__array_function__ internals>_33
File duration: 7.79629e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  7.79629e-05|  3.89814e-05|  0.00%|
(call)|         1|   2.6226e-05|   2.6226e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|   8.9407e-05|   8.9407e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_212
File duration: 7.7486e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|   7.7486e-05|   3.8743e-05|  0.00%|
(call)|         1|   1.0252e-05|   1.0252e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000133276|  0.000133276|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: _8
File duration: 7.65324e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         4|  6.48499e-05|  1.62125e-05|  0.00%|
(call)|         1|  1.83582e-05|  1.83582e-05|  0.00%|# _8:1 _DeepIterableAttributes
     2|         1|  2.86102e-06|  2.86102e-06|  0.00%|
     3|         1|  4.52995e-06|  4.52995e-06|  0.00%|
     4|         1|  4.29153e-06|  4.29153e-06|  0.00%|
File: _11
File duration: 7.58171e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         4|  6.69956e-05|  1.67489e-05|  0.00%|
(call)|         1|  1.54972e-05|  1.54972e-05|  0.00%|# _11:1 RefResolutionErrorAttributes
     2|         1|  3.33786e-06|  3.33786e-06|  0.00%|
     3|         1|  5.48363e-06|  5.48363e-06|  0.00%|
File: <string>_264
File duration: 7.48634e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  6.58035e-05|  3.29018e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.52995e-06|  4.52995e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.52995e-06|  4.52995e-06|  0.00%|
File: <string>_225
File duration: 7.29561e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  6.36578e-05|  3.18289e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.76837e-06|  4.76837e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.52995e-06|  4.52995e-06|  0.00%|
File: <__array_function__ internals>_249
File duration: 7.29561e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  7.29561e-05|   3.6478e-05|  0.00%|
(call)|         1|   1.0252e-05|   1.0252e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.13007e-05|  8.13007e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_90
File duration: 7.27177e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|        14|  7.27177e-05|  5.19412e-06|  0.00%|
File: <__array_function__ internals>_117
File duration: 7.15256e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  7.15256e-05|  3.57628e-05|  0.00%|
(call)|         1|  1.12057e-05|  1.12057e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000104427|  0.000104427|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_248
File duration: 7.03335e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  6.22272e-05|  3.11136e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|   3.8147e-06|   3.8147e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.29153e-06|  4.29153e-06|  0.00%|
File: _0
File duration: 6.98566e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         4|  5.88894e-05|  1.47223e-05|  0.00%|
(call)|         1|  1.71661e-05|  1.71661e-05|  0.00%|# _0:1 FactoryAttributes
     2|         1|  2.86102e-06|  2.86102e-06|  0.00%|
     3|         1|  4.29153e-06|  4.29153e-06|  0.00%|
     4|         1|   3.8147e-06|   3.8147e-06|  0.00%|
File: <__array_function__ internals>_28
File duration: 6.93798e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         3|  3.57628e-05|  1.19209e-05|  0.00%|
(call)|         1|  9.77516e-06|  9.77516e-06|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  7.89165e-05|  7.89165e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
     3|         0|            0|            0|  0.00%|
     4|         1|  1.81198e-05|  1.81198e-05|  0.00%|
(call)|         1|  2.38419e-05|  2.38419e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/fromnumeric.py:597 _transpose_dispatcher
     5|         1|  3.33786e-06|  3.33786e-06|  0.00%|
     6|         1|  1.21593e-05|  1.21593e-05|  0.00%|
(call)|         1|  4.26769e-05|  4.26769e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/numpy/core/fromnumeric.py:601 transpose
File: <string>_16
File duration: 6.91414e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  5.10216e-05|  2.55108e-05|  0.00%|
     2|         1|  3.57628e-06|  3.57628e-06|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         1|  1.07288e-05|  1.07288e-05|  0.00%|
(call)|         1|  0.000144958|  0.000144958|  0.00%|# /opt/anaconda3/lib/python3.7/abc.py:130 register
     5|         1|   3.8147e-06|   3.8147e-06|  0.00%|
File: _10
File duration: 6.86646e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         4|  4.95911e-05|  1.23978e-05|  0.00%|
(call)|         1|  2.57492e-05|  2.57492e-05|  0.00%|# _10:1 VersionInfoAttributes
     2|         1|   2.6226e-06|   2.6226e-06|  0.00%|
     3|         1|  4.76837e-06|  4.76837e-06|  0.00%|
     4|         1|   3.8147e-06|   3.8147e-06|  0.00%|
     5|         1|  4.05312e-06|  4.05312e-06|  0.00%|
     6|         1|   3.8147e-06|   3.8147e-06|  0.00%|
File: _3
File duration: 6.84261e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         4|  5.22137e-05|  1.30534e-05|  0.00%|
(call)|         1|  2.28882e-05|  2.28882e-05|  0.00%|# _3:1 _MatchesReValidatorAttributes
     2|         1|  2.86102e-06|  2.86102e-06|  0.00%|
     3|         1|  5.00679e-06|  5.00679e-06|  0.00%|
     4|         1|  4.29153e-06|  4.29153e-06|  0.00%|
     5|         1|  4.05312e-06|  4.05312e-06|  0.00%|
File: <string>_49
File duration: 6.79493e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  6.79493e-05|  3.39746e-05|  0.00%|
File: <__array_function__ internals>_294
File duration: 6.74725e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  6.74725e-05|  3.37362e-05|  0.00%|
(call)|         1|  1.38283e-05|  1.38283e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000105619|  0.000105619|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_98
File duration: 6.48499e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  6.48499e-05|  3.24249e-05|  0.00%|
(call)|         1|  1.09673e-05|  1.09673e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|   9.2268e-05|   9.2268e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <decorator-gen-7>
File duration: 6.41346e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         5|  3.17097e-05|  6.34193e-06|  0.00%|
     2|         3|  3.24249e-05|  1.08083e-05|  0.00%|
(call)|         3|    0.0048604|   0.00162013|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/scipy/_lib/decorator.py:223 decorate
File: <string>_170
File duration: 6.38962e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  5.53131e-05|  2.76566e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.05312e-06|  4.05312e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.52995e-06|  4.52995e-06|  0.00%|
File: <string>_8
File duration: 6.38962e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  6.38962e-05|  3.19481e-05|  0.00%|
File: <__array_function__ internals>_301
File duration: 6.36578e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  6.36578e-05|  3.18289e-05|  0.00%|
(call)|         1|  1.07288e-05|  1.07288e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.65459e-05|  8.65459e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_13
File duration: 6.34193e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         6|  6.34193e-05|  1.05699e-05|  0.00%|
File: <__array_function__ internals>_250
File duration: 6.34193e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  6.34193e-05|  3.17097e-05|  0.00%|
(call)|         1|  1.04904e-05|  1.04904e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.63211e-05|  9.63211e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_16
File duration: 6.31809e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  6.31809e-05|  3.15905e-05|  0.00%|
(call)|         1|   2.5034e-05|   2.5034e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000216961|  0.000216961|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_256
File duration: 6.31809e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  6.31809e-05|  3.15905e-05|  0.00%|
(call)|         1|  1.04904e-05|  1.04904e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.36985e-05|  9.36985e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_38
File duration: 6.17504e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.43187e-05|  1.21593e-05|  0.00%|
     2|         1|  4.52995e-06|  4.52995e-06|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         1|  2.86102e-05|  2.86102e-05|  0.00%|
(call)|         1|  3.02792e-05|  3.02792e-05|  0.00%|# /opt/anaconda3/lib/python3.7/abc.py:130 register
     5|         1|  4.29153e-06|  4.29153e-06|  0.00%|
File: <__array_function__ internals>_238
File duration: 6.1512e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|   6.1512e-05|   3.0756e-05|  0.00%|
(call)|         1|   1.0252e-05|   1.0252e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000109434|  0.000109434|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: _4
File duration: 6.07967e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         4|  5.29289e-05|  1.32322e-05|  0.00%|
(call)|         1|   1.4782e-05|   1.4782e-05|  0.00%|# _4:1 _ProvidesValidatorAttributes
     2|         1|  3.09944e-06|  3.09944e-06|  0.00%|
     3|         1|  4.76837e-06|  4.76837e-06|  0.00%|
File: _5
File duration: 5.88894e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         4|  5.07832e-05|  1.26958e-05|  0.00%|
(call)|         1|  1.50204e-05|  1.50204e-05|  0.00%|# _5:1 _OptionalValidatorAttributes
     2|         1|  2.86102e-06|  2.86102e-06|  0.00%|
     3|         1|  5.24521e-06|  5.24521e-06|  0.00%|
File: _2
File duration: 5.84126e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         4|  5.05447e-05|  1.26362e-05|  0.00%|
(call)|         1|   1.4782e-05|   1.4782e-05|  0.00%|# _2:1 _InstanceOfValidatorAttributes
     2|         1|   2.6226e-06|   2.6226e-06|  0.00%|
     3|         1|  5.24521e-06|  5.24521e-06|  0.00%|
File: <__array_function__ internals>_113
File duration: 5.84126e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  5.84126e-05|  2.92063e-05|  0.00%|
(call)|         1|  2.24113e-05|  2.24113e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000198364|  0.000198364|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_336
File duration: 5.79357e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  3.00407e-05|  1.50204e-05|  0.00%|
     2|         1|  5.00679e-06|  5.00679e-06|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         1|  1.85966e-05|  1.85966e-05|  0.00%|
(call)|         1|  4.02927e-05|  4.02927e-05|  0.00%|# /opt/anaconda3/lib/python3.7/abc.py:130 register
     5|         1|  4.29153e-06|  4.29153e-06|  0.00%|
File: <__array_function__ internals>_37
File duration: 5.74589e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  5.74589e-05|  2.87294e-05|  0.00%|
(call)|         1|  9.77516e-06|  9.77516e-06|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000112295|  0.000112295|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: _6
File duration: 5.67436e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         4|  4.91142e-05|  1.22786e-05|  0.00%|
(call)|         1|  1.40667e-05|  1.40667e-05|  0.00%|# _6:1 _InValidatorAttributes
     2|         1|   2.6226e-06|   2.6226e-06|  0.00%|
     3|         1|  5.00679e-06|  5.00679e-06|  0.00%|
File: <__array_function__ internals>_114
File duration: 5.62668e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  5.62668e-05|  2.81334e-05|  0.00%|
(call)|         1|  3.79086e-05|  3.79086e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000191927|  0.000191927|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_181
File duration: 5.60284e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  4.72069e-05|  2.36034e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.05312e-06|  4.05312e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.76837e-06|  4.76837e-06|  0.00%|
File: <string>_218
File duration: 5.57899e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.17097e-05|  1.58548e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  1.95503e-05|  1.95503e-05|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.52995e-06|  4.52995e-06|  0.00%|
File: <__array_function__ internals>_93
File duration: 5.53131e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  5.53131e-05|  2.76566e-05|  0.00%|
(call)|         1|  4.57764e-05|  4.57764e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000135422|  0.000135422|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_170
File duration: 5.45979e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  5.45979e-05|  2.72989e-05|  0.00%|
(call)|         1|  1.04904e-05|  1.04904e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.41618e-05|  8.41618e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: _1
File duration: 5.43594e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         4|  4.72069e-05|  1.18017e-05|  0.00%|
(call)|         1|  1.33514e-05|  1.33514e-05|  0.00%|# _1:1 _AndValidatorAttributes
     2|         1|   2.6226e-06|   2.6226e-06|  0.00%|
     3|         1|  4.52995e-06|  4.52995e-06|  0.00%|
File: <string>_110
File duration: 5.4121e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         6|   5.4121e-05|  9.02017e-06|  0.00%|
File: <string>_178
File duration: 5.4121e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  4.48227e-05|  2.24113e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.29153e-06|  4.29153e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.00679e-06|  5.00679e-06|  0.00%|
File: <string>_165
File duration: 5.36442e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.98023e-05|  1.49012e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.29153e-06|  4.29153e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  1.95503e-05|  1.95503e-05|  0.00%|
File: <__array_function__ internals>_181
File duration: 5.24521e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  5.24521e-05|   2.6226e-05|  0.00%|
(call)|         1|  1.23978e-05|  1.23978e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000119686|  0.000119686|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: _7
File duration: 5.22137e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         4|  4.60148e-05|  1.15037e-05|  0.00%|
(call)|         1|  1.26362e-05|  1.26362e-05|  0.00%|# _7:1 _IsCallableValidatorAttributes
     2|         1|  2.86102e-06|  2.86102e-06|  0.00%|
     3|         1|  3.33786e-06|  3.33786e-06|  0.00%|
File: <string>_332
File duration: 5.22137e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  5.22137e-05|  2.61068e-05|  0.00%|
File: <string>_134
File duration: 5.22137e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  5.22137e-05|  2.61068e-05|  0.00%|
(call)|         2|   3.6478e-05|   1.8239e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/jit/annotations.py:48 __getitem__
(call)|         1|   4.3869e-05|   4.3869e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
File: <string>_325
File duration: 5.19753e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  5.19753e-05|  2.59876e-05|  0.00%|
File: <__array_function__ internals>_302
File duration: 5.14984e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  5.14984e-05|  2.57492e-05|  0.00%|
(call)|         1|  1.16825e-05|  1.16825e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000110149|  0.000110149|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_217
File duration: 5.126e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  4.19617e-05|  2.09808e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.29153e-06|  4.29153e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.00679e-06|  5.00679e-06|  0.00%|
File: <__array_function__ internals>_167
File duration: 5.126e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|    5.126e-05|    2.563e-05|  0.00%|
(call)|         1|  1.07288e-05|  1.07288e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.41618e-05|  8.41618e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_171
File duration: 5.10216e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  4.29153e-05|  2.14577e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|   3.8147e-06|   3.8147e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.29153e-06|  4.29153e-06|  0.00%|
File: <__array_function__ internals>_297
File duration: 5.10216e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  5.10216e-05|  2.55108e-05|  0.00%|
(call)|         1|  1.19209e-05|  1.19209e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000109911|  0.000109911|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_153
File duration: 5.10216e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|r"""
     2|         1|  8.82149e-06|  8.82149e-06|  0.00%|
     3|         0|            0|            0|  0.00%|Nonlinear solvers
     4|         1|  4.22001e-05|  4.22001e-05|  0.00%|-----------------
     5|         0|            0|            0|  0.00%|
     6|         0|            0|            0|  0.00%|.. currentmodule:: scipy.optimize
     7|         0|            0|            0|  0.00%|
     8|         0|            0|            0|  0.00%|This is a collection of general-purpose nonlinear multidimensional
     9|         0|            0|            0|  0.00%|solvers. These solvers find *x* for which *F(x) = 0*. Both *x*
    10|         0|            0|            0|  0.00%|and *F* can be multidimensional.
    11|         0|            0|            0|  0.00%|
    12|         0|            0|            0|  0.00%|Routines
    13|         0|            0|            0|  0.00%|~~~~~~~~
    14|         0|            0|            0|  0.00%|
    15|         0|            0|            0|  0.00%|Large-scale nonlinear solvers:
    16|         0|            0|            0|  0.00%|
    17|         0|            0|            0|  0.00%|.. autosummary::
    18|         0|            0|            0|  0.00%|
    19|         0|            0|            0|  0.00%|   newton_krylov
    20|         0|            0|            0|  0.00%|   anderson
    21|         0|            0|            0|  0.00%|
    22|         0|            0|            0|  0.00%|General nonlinear solvers:
    23|         0|            0|            0|  0.00%|
    24|         0|            0|            0|  0.00%|.. autosummary::
    25|         0|            0|            0|  0.00%|
    26|         0|            0|            0|  0.00%|   broyden1
    27|         0|            0|            0|  0.00%|   broyden2
    28|         0|            0|            0|  0.00%|
    29|         0|            0|            0|  0.00%|Simple iterations:
    30|         0|            0|            0|  0.00%|
    31|         0|            0|            0|  0.00%|.. autosummary::
    32|         0|            0|            0|  0.00%|
    33|         0|            0|            0|  0.00%|   excitingmixing
    34|         0|            0|            0|  0.00%|   linearmixing
    35|         0|            0|            0|  0.00%|   diagbroyden
    36|         0|            0|            0|  0.00%|
    37|         0|            0|            0|  0.00%|
    38|         0|            0|            0|  0.00%|Examples
    39|         0|            0|            0|  0.00%|~~~~~~~~
    40|         0|            0|            0|  0.00%|
    41|         0|            0|            0|  0.00%|**Small problem**
    42|         0|            0|            0|  0.00%|
    43|         0|            0|            0|  0.00%|>>> def F(x):
    44|         0|            0|            0|  0.00%|...    return np.cos(x) + x[::-1] - [1, 2, 3, 4]
    45|         0|            0|            0|  0.00%|>>> import scipy.optimize
    46|         0|            0|            0|  0.00%|>>> x = scipy.optimize.broyden1(F, [1,1,1,1], f_tol=1e-14)
    47|         0|            0|            0|  0.00%|>>> x
    48|         0|            0|            0|  0.00%|array([ 4.04674914,  3.91158389,  2.71791677,  1.61756251])
    49|         0|            0|            0|  0.00%|>>> np.cos(x) + x[::-1]
    50|         0|            0|            0|  0.00%|array([ 1.,  2.,  3.,  4.])
    51|         0|            0|            0|  0.00%|
    52|         0|            0|            0|  0.00%|
    53|         0|            0|            0|  0.00%|**Large problem**
    54|         0|            0|            0|  0.00%|
    55|         0|            0|            0|  0.00%|Suppose that we needed to solve the following integrodifferential
    56|         0|            0|            0|  0.00%|equation on the square :math:`[0,1]\times[0,1]`:
    57|         0|            0|            0|  0.00%|
    58|         0|            0|            0|  0.00%|.. math::
    59|         0|            0|            0|  0.00%|
    60|         0|            0|            0|  0.00%|   \nabla^2 P = 10 \left(\int_0^1\int_0^1\cosh(P)\,dx\,dy\right)^2
    61|         0|            0|            0|  0.00%|
    62|         0|            0|            0|  0.00%|with :math:`P(x,1) = 1` and :math:`P=0` elsewhere on the boundary of
    63|         0|            0|            0|  0.00%|the square.
    64|         0|            0|            0|  0.00%|
    65|         0|            0|            0|  0.00%|The solution can be found using the `newton_krylov` solver:
    66|         0|            0|            0|  0.00%|
    67|         0|            0|            0|  0.00%|.. plot::
    68|         0|            0|            0|  0.00%|
    69|         0|            0|            0|  0.00%|   import numpy as np
    70|         0|            0|            0|  0.00%|   from scipy.optimize import newton_krylov
    71|         0|            0|            0|  0.00%|   from numpy import cosh, zeros_like, mgrid, zeros
    72|         0|            0|            0|  0.00%|
    73|         0|            0|            0|  0.00%|   # parameters
    74|         0|            0|            0|  0.00%|   nx, ny = 75, 75
    75|         0|            0|            0|  0.00%|   hx, hy = 1./(nx-1), 1./(ny-1)
    76|         0|            0|            0|  0.00%|
    77|         0|            0|            0|  0.00%|   P_left, P_right = 0, 0
    78|         0|            0|            0|  0.00%|   P_top, P_bottom = 1, 0
    79|         0|            0|            0|  0.00%|
    80|         0|            0|            0|  0.00%|   def residual(P):
    81|         0|            0|            0|  0.00%|       d2x = zeros_like(P)
    82|         0|            0|            0|  0.00%|       d2y = zeros_like(P)
    83|         0|            0|            0|  0.00%|
    84|         0|            0|            0|  0.00%|       d2x[1:-1] = (P[2:]   - 2*P[1:-1] + P[:-2]) / hx/hx
    85|         0|            0|            0|  0.00%|       d2x[0]    = (P[1]    - 2*P[0]    + P_left)/hx/hx
    86|         0|            0|            0|  0.00%|       d2x[-1]   = (P_right - 2*P[-1]   + P[-2])/hx/hx
    87|         0|            0|            0|  0.00%|
    88|         0|            0|            0|  0.00%|       d2y[:,1:-1] = (P[:,2:] - 2*P[:,1:-1] + P[:,:-2])/hy/hy
    89|         0|            0|            0|  0.00%|       d2y[:,0]    = (P[:,1]  - 2*P[:,0]    + P_bottom)/hy/hy
    90|         0|            0|            0|  0.00%|       d2y[:,-1]   = (P_top   - 2*P[:,-1]   + P[:,-2])/hy/hy
    91|         0|            0|            0|  0.00%|
    92|         0|            0|            0|  0.00%|       return d2x + d2y - 10*cosh(P).mean()**2
    93|         0|            0|            0|  0.00%|
    94|         0|            0|            0|  0.00%|   # solve
    95|         0|            0|            0|  0.00%|   guess = zeros((nx, ny), float)
    96|         0|            0|            0|  0.00%|   sol = newton_krylov(residual, guess, method='lgmres', verbose=1)
    97|         0|            0|            0|  0.00%|   print('Residual: %g' % abs(residual(sol)).max())
    98|         0|            0|            0|  0.00%|
    99|         0|            0|            0|  0.00%|   # visualize
   100|         0|            0|            0|  0.00%|   import matplotlib.pyplot as plt
   101|         0|            0|            0|  0.00%|   x, y = mgrid[0:1:(nx*1j), 0:1:(ny*1j)]
   102|         0|            0|            0|  0.00%|   plt.pcolormesh(x, y, sol, shading='gouraud')
   103|         0|            0|            0|  0.00%|   plt.colorbar()
   104|         0|            0|            0|  0.00%|   plt.show()
   105|         0|            0|            0|  0.00%|
   106|         0|            0|            0|  0.00%|"""
   107|         0|            0|            0|  0.00%|# Copyright (C) 2009, Pauli Virtanen <pav@iki.fi>
   108|         0|            0|            0|  0.00%|# Distributed under the same license as SciPy.
   109|         0|            0|            0|  0.00%|
   110|         0|            0|            0|  0.00%|import sys
   111|         0|            0|            0|  0.00%|import numpy as np
   112|         0|            0|            0|  0.00%|from scipy.linalg import norm, solve, inv, qr, svd, LinAlgError
   113|         0|            0|            0|  0.00%|from numpy import asarray, dot, vdot
   114|         0|            0|            0|  0.00%|import scipy.sparse.linalg
   115|         0|            0|            0|  0.00%|import scipy.sparse
   116|         0|            0|            0|  0.00%|from scipy.linalg import get_blas_funcs
   117|         0|            0|            0|  0.00%|import inspect
   118|         0|            0|            0|  0.00%|from scipy._lib._util import getfullargspec_no_self as _getfullargspec
   119|         0|            0|            0|  0.00%|from .linesearch import scalar_search_wolfe1, scalar_search_armijo
   120|         0|            0|            0|  0.00%|
   121|         0|            0|            0|  0.00%|
   122|         0|            0|            0|  0.00%|__all__ = [
   123|         0|            0|            0|  0.00%|    'broyden1', 'broyden2', 'anderson', 'linearmixing',
   124|         0|            0|            0|  0.00%|    'diagbroyden', 'excitingmixing', 'newton_krylov']
   125|         0|            0|            0|  0.00%|
   126|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   127|         0|            0|            0|  0.00%|# Utility functions
   128|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   129|         0|            0|            0|  0.00%|
   130|         0|            0|            0|  0.00%|
   131|         0|            0|            0|  0.00%|class NoConvergence(Exception):
   132|         0|            0|            0|  0.00%|    pass
   133|         0|            0|            0|  0.00%|
   134|         0|            0|            0|  0.00%|
   135|         0|            0|            0|  0.00%|def maxnorm(x):
   136|         0|            0|            0|  0.00%|    return np.absolute(x).max()
   137|         0|            0|            0|  0.00%|
   138|         0|            0|            0|  0.00%|
   139|         0|            0|            0|  0.00%|def _as_inexact(x):
   140|         0|            0|            0|  0.00%|    """Return `x` as an array, of either floats or complex floats"""
   141|         0|            0|            0|  0.00%|    x = asarray(x)
   142|         0|            0|            0|  0.00%|    if not np.issubdtype(x.dtype, np.inexact):
   143|         0|            0|            0|  0.00%|        return asarray(x, dtype=np.float_)
   144|         0|            0|            0|  0.00%|    return x
   145|         0|            0|            0|  0.00%|
   146|         0|            0|            0|  0.00%|
   147|         0|            0|            0|  0.00%|def _array_like(x, x0):
   148|         0|            0|            0|  0.00%|    """Return ndarray `x` as same array subclass and shape as `x0`"""
   149|         0|            0|            0|  0.00%|    x = np.reshape(x, np.shape(x0))
   150|         0|            0|            0|  0.00%|    wrap = getattr(x0, '__array_wrap__', x.__array_wrap__)
   151|         0|            0|            0|  0.00%|    return wrap(x)
   152|         0|            0|            0|  0.00%|
   153|         0|            0|            0|  0.00%|
   154|         0|            0|            0|  0.00%|def _safe_norm(v):
   155|         0|            0|            0|  0.00%|    if not np.isfinite(v).all():
   156|         0|            0|            0|  0.00%|        return np.array(np.inf)
   157|         0|            0|            0|  0.00%|    return norm(v)
   158|         0|            0|            0|  0.00%|
   159|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   160|         0|            0|            0|  0.00%|# Generic nonlinear solver machinery
   161|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   162|         0|            0|            0|  0.00%|
   163|         0|            0|            0|  0.00%|
   164|         0|            0|            0|  0.00%|_doc_parts = dict(
   165|         0|            0|            0|  0.00%|    params_basic="""
   166|         0|            0|            0|  0.00%|    F : function(x) -> f
   167|         0|            0|            0|  0.00%|        Function whose root to find; should take and return an array-like
   168|         0|            0|            0|  0.00%|        object.
   169|         0|            0|            0|  0.00%|    xin : array_like
   170|         0|            0|            0|  0.00%|        Initial guess for the solution
   171|         0|            0|            0|  0.00%|    """.strip(),
   172|         0|            0|            0|  0.00%|    params_extra="""
   173|         0|            0|            0|  0.00%|    iter : int, optional
   174|         0|            0|            0|  0.00%|        Number of iterations to make. If omitted (default), make as many
   175|         0|            0|            0|  0.00%|        as required to meet tolerances.
   176|         0|            0|            0|  0.00%|    verbose : bool, optional
   177|         0|            0|            0|  0.00%|        Print status to stdout on every iteration.
   178|         0|            0|            0|  0.00%|    maxiter : int, optional
   179|         0|            0|            0|  0.00%|        Maximum number of iterations to make. If more are needed to
   180|         0|            0|            0|  0.00%|        meet convergence, `NoConvergence` is raised.
   181|         0|            0|            0|  0.00%|    f_tol : float, optional
   182|         0|            0|            0|  0.00%|        Absolute tolerance (in max-norm) for the residual.
   183|         0|            0|            0|  0.00%|        If omitted, default is 6e-6.
   184|         0|            0|            0|  0.00%|    f_rtol : float, optional
   185|         0|            0|            0|  0.00%|        Relative tolerance for the residual. If omitted, not used.
   186|         0|            0|            0|  0.00%|    x_tol : float, optional
   187|         0|            0|            0|  0.00%|        Absolute minimum step size, as determined from the Jacobian
   188|         0|            0|            0|  0.00%|        approximation. If the step size is smaller than this, optimization
   189|         0|            0|            0|  0.00%|        is terminated as successful. If omitted, not used.
   190|         0|            0|            0|  0.00%|    x_rtol : float, optional
   191|         0|            0|            0|  0.00%|        Relative minimum step size. If omitted, not used.
   192|         0|            0|            0|  0.00%|    tol_norm : function(vector) -> scalar, optional
   193|         0|            0|            0|  0.00%|        Norm to use in convergence check. Default is the maximum norm.
   194|         0|            0|            0|  0.00%|    line_search : {None, 'armijo' (default), 'wolfe'}, optional
   195|         0|            0|            0|  0.00%|        Which type of a line search to use to determine the step size in the
   196|         0|            0|            0|  0.00%|        direction given by the Jacobian approximation. Defaults to 'armijo'.
   197|         0|            0|            0|  0.00%|    callback : function, optional
   198|         0|            0|            0|  0.00%|        Optional callback function. It is called on every iteration as
   199|         0|            0|            0|  0.00%|        ``callback(x, f)`` where `x` is the current solution and `f`
   200|         0|            0|            0|  0.00%|        the corresponding residual.
   201|         0|            0|            0|  0.00%|
   202|         0|            0|            0|  0.00%|    Returns
   203|         0|            0|            0|  0.00%|    -------
   204|         0|            0|            0|  0.00%|    sol : ndarray
   205|         0|            0|            0|  0.00%|        An array (of similar array type as `x0`) containing the final solution.
   206|         0|            0|            0|  0.00%|
   207|         0|            0|            0|  0.00%|    Raises
   208|         0|            0|            0|  0.00%|    ------
   209|         0|            0|            0|  0.00%|    NoConvergence
   210|         0|            0|            0|  0.00%|        When a solution was not found.
   211|         0|            0|            0|  0.00%|
   212|         0|            0|            0|  0.00%|    """.strip()
   213|         0|            0|            0|  0.00%|)
   214|         0|            0|            0|  0.00%|
   215|         0|            0|            0|  0.00%|
   216|         0|            0|            0|  0.00%|def _set_doc(obj):
   217|         0|            0|            0|  0.00%|    if obj.__doc__:
   218|         0|            0|            0|  0.00%|        obj.__doc__ = obj.__doc__ % _doc_parts
   219|         0|            0|            0|  0.00%|
   220|         0|            0|            0|  0.00%|
   221|         0|            0|            0|  0.00%|def nonlin_solve(F, x0, jacobian='krylov', iter=None, verbose=False,
   222|         0|            0|            0|  0.00%|                 maxiter=None, f_tol=None, f_rtol=None, x_tol=None, x_rtol=None,
   223|         0|            0|            0|  0.00%|                 tol_norm=None, line_search='armijo', callback=None,
   224|         0|            0|            0|  0.00%|                 full_output=False, raise_exception=True):
   225|         0|            0|            0|  0.00%|    """
   226|         0|            0|            0|  0.00%|    Find a root of a function, in a way suitable for large-scale problems.
   227|         0|            0|            0|  0.00%|
   228|         0|            0|            0|  0.00%|    Parameters
   229|         0|            0|            0|  0.00%|    ----------
   230|         0|            0|            0|  0.00%|    %(params_basic)s
   231|         0|            0|            0|  0.00%|    jacobian : Jacobian
   232|         0|            0|            0|  0.00%|        A Jacobian approximation: `Jacobian` object or something that
   233|         0|            0|            0|  0.00%|        `asjacobian` can transform to one. Alternatively, a string specifying
   234|         0|            0|            0|  0.00%|        which of the builtin Jacobian approximations to use:
   235|         0|            0|            0|  0.00%|
   236|         0|            0|            0|  0.00%|            krylov, broyden1, broyden2, anderson
   237|         0|            0|            0|  0.00%|            diagbroyden, linearmixing, excitingmixing
   238|         0|            0|            0|  0.00%|
   239|         0|            0|            0|  0.00%|    %(params_extra)s
   240|         0|            0|            0|  0.00%|    full_output : bool
   241|         0|            0|            0|  0.00%|        If true, returns a dictionary `info` containing convergence
   242|         0|            0|            0|  0.00%|        information.
   243|         0|            0|            0|  0.00%|    raise_exception : bool
   244|         0|            0|            0|  0.00%|        If True, a `NoConvergence` exception is raise if no solution is found.
   245|         0|            0|            0|  0.00%|
   246|         0|            0|            0|  0.00%|    See Also
   247|         0|            0|            0|  0.00%|    --------
   248|         0|            0|            0|  0.00%|    asjacobian, Jacobian
   249|         0|            0|            0|  0.00%|
   250|         0|            0|            0|  0.00%|    Notes
   251|         0|            0|            0|  0.00%|    -----
   252|         0|            0|            0|  0.00%|    This algorithm implements the inexact Newton method, with
   253|         0|            0|            0|  0.00%|    backtracking or full line searches. Several Jacobian
   254|         0|            0|            0|  0.00%|    approximations are available, including Krylov and Quasi-Newton
   255|         0|            0|            0|  0.00%|    methods.
   256|         0|            0|            0|  0.00%|
   257|         0|            0|            0|  0.00%|    References
   258|         0|            0|            0|  0.00%|    ----------
   259|         0|            0|            0|  0.00%|    .. [KIM] C. T. Kelley, \"Iterative Methods for Linear and Nonlinear
   260|         0|            0|            0|  0.00%|       Equations\". Society for Industrial and Applied Mathematics. (1995)
   261|         0|            0|            0|  0.00%|       https://archive.siam.org/books/kelley/fr16/
   262|         0|            0|            0|  0.00%|
   263|         0|            0|            0|  0.00%|    """
   264|         0|            0|            0|  0.00%|    # Can't use default parameters because it's being explicitly passed as None
   265|         0|            0|            0|  0.00%|    # from the calling function, so we need to set it here.
   266|         0|            0|            0|  0.00%|    tol_norm = maxnorm if tol_norm is None else tol_norm
   267|         0|            0|            0|  0.00%|    condition = TerminationCondition(f_tol=f_tol, f_rtol=f_rtol,
   268|         0|            0|            0|  0.00%|                                     x_tol=x_tol, x_rtol=x_rtol,
   269|         0|            0|            0|  0.00%|                                     iter=iter, norm=tol_norm)
   270|         0|            0|            0|  0.00%|
   271|         0|            0|            0|  0.00%|    x0 = _as_inexact(x0)
   272|         0|            0|            0|  0.00%|    func = lambda z: _as_inexact(F(_array_like(z, x0))).flatten()
   273|         0|            0|            0|  0.00%|    x = x0.flatten()
   274|         0|            0|            0|  0.00%|
   275|         0|            0|            0|  0.00%|    dx = np.inf
   276|         0|            0|            0|  0.00%|    Fx = func(x)
   277|         0|            0|            0|  0.00%|    Fx_norm = norm(Fx)
   278|         0|            0|            0|  0.00%|
   279|         0|            0|            0|  0.00%|    jacobian = asjacobian(jacobian)
   280|         0|            0|            0|  0.00%|    jacobian.setup(x.copy(), Fx, func)
   281|         0|            0|            0|  0.00%|
   282|         0|            0|            0|  0.00%|    if maxiter is None:
   283|         0|            0|            0|  0.00%|        if iter is not None:
   284|         0|            0|            0|  0.00%|            maxiter = iter + 1
   285|         0|            0|            0|  0.00%|        else:
   286|         0|            0|            0|  0.00%|            maxiter = 100*(x.size+1)
   287|         0|            0|            0|  0.00%|
   288|         0|            0|            0|  0.00%|    if line_search is True:
   289|         0|            0|            0|  0.00%|        line_search = 'armijo'
   290|         0|            0|            0|  0.00%|    elif line_search is False:
   291|         0|            0|            0|  0.00%|        line_search = None
   292|         0|            0|            0|  0.00%|
   293|         0|            0|            0|  0.00%|    if line_search not in (None, 'armijo', 'wolfe'):
   294|         0|            0|            0|  0.00%|        raise ValueError("Invalid line search")
   295|         0|            0|            0|  0.00%|
   296|         0|            0|            0|  0.00%|    # Solver tolerance selection
   297|         0|            0|            0|  0.00%|    gamma = 0.9
   298|         0|            0|            0|  0.00%|    eta_max = 0.9999
   299|         0|            0|            0|  0.00%|    eta_treshold = 0.1
   300|         0|            0|            0|  0.00%|    eta = 1e-3
   301|         0|            0|            0|  0.00%|
   302|         0|            0|            0|  0.00%|    for n in range(maxiter):
   303|         0|            0|            0|  0.00%|        status = condition.check(Fx, x, dx)
   304|         0|            0|            0|  0.00%|        if status:
   305|         0|            0|            0|  0.00%|            break
   306|         0|            0|            0|  0.00%|
   307|         0|            0|            0|  0.00%|        # The tolerance, as computed for scipy.sparse.linalg.* routines
   308|         0|            0|            0|  0.00%|        tol = min(eta, eta*Fx_norm)
   309|         0|            0|            0|  0.00%|        dx = -jacobian.solve(Fx, tol=tol)
   310|         0|            0|            0|  0.00%|
   311|         0|            0|            0|  0.00%|        if norm(dx) == 0:
   312|         0|            0|            0|  0.00%|            raise ValueError("Jacobian inversion yielded zero vector. "
   313|         0|            0|            0|  0.00%|                             "This indicates a bug in the Jacobian "
   314|         0|            0|            0|  0.00%|                             "approximation.")
   315|         0|            0|            0|  0.00%|
   316|         0|            0|            0|  0.00%|        # Line search, or Newton step
   317|         0|            0|            0|  0.00%|        if line_search:
   318|         0|            0|            0|  0.00%|            s, x, Fx, Fx_norm_new = _nonlin_line_search(func, x, Fx, dx,
   319|         0|            0|            0|  0.00%|                                                        line_search)
   320|         0|            0|            0|  0.00%|        else:
   321|         0|            0|            0|  0.00%|            s = 1.0
   322|         0|            0|            0|  0.00%|            x = x + dx
   323|         0|            0|            0|  0.00%|            Fx = func(x)
   324|         0|            0|            0|  0.00%|            Fx_norm_new = norm(Fx)
   325|         0|            0|            0|  0.00%|
   326|         0|            0|            0|  0.00%|        jacobian.update(x.copy(), Fx)
   327|         0|            0|            0|  0.00%|
   328|         0|            0|            0|  0.00%|        if callback:
   329|         0|            0|            0|  0.00%|            callback(x, Fx)
   330|         0|            0|            0|  0.00%|
   331|         0|            0|            0|  0.00%|        # Adjust forcing parameters for inexact methods
   332|         0|            0|            0|  0.00%|        eta_A = gamma * Fx_norm_new**2 / Fx_norm**2
   333|         0|            0|            0|  0.00%|        if gamma * eta**2 < eta_treshold:
   334|         0|            0|            0|  0.00%|            eta = min(eta_max, eta_A)
   335|         0|            0|            0|  0.00%|        else:
   336|         0|            0|            0|  0.00%|            eta = min(eta_max, max(eta_A, gamma*eta**2))
   337|         0|            0|            0|  0.00%|
   338|         0|            0|            0|  0.00%|        Fx_norm = Fx_norm_new
   339|         0|            0|            0|  0.00%|
   340|         0|            0|            0|  0.00%|        # Print status
   341|         0|            0|            0|  0.00%|        if verbose:
   342|         0|            0|            0|  0.00%|            sys.stdout.write("%d:  |F(x)| = %g; step %g\n" % (
   343|         0|            0|            0|  0.00%|                n, tol_norm(Fx), s))
   344|         0|            0|            0|  0.00%|            sys.stdout.flush()
   345|         0|            0|            0|  0.00%|    else:
   346|         0|            0|            0|  0.00%|        if raise_exception:
   347|         0|            0|            0|  0.00%|            raise NoConvergence(_array_like(x, x0))
   348|         0|            0|            0|  0.00%|        else:
   349|         0|            0|            0|  0.00%|            status = 2
   350|         0|            0|            0|  0.00%|
   351|         0|            0|            0|  0.00%|    if full_output:
   352|         0|            0|            0|  0.00%|        info = {'nit': condition.iteration,
   353|         0|            0|            0|  0.00%|                'fun': Fx,
   354|         0|            0|            0|  0.00%|                'status': status,
   355|         0|            0|            0|  0.00%|                'success': status == 1,
   356|         0|            0|            0|  0.00%|                'message': {1: 'A solution was found at the specified '
   357|         0|            0|            0|  0.00%|                               'tolerance.',
   358|         0|            0|            0|  0.00%|                            2: 'The maximum number of iterations allowed '
   359|         0|            0|            0|  0.00%|                               'has been reached.'
   360|         0|            0|            0|  0.00%|                            }[status]
   361|         0|            0|            0|  0.00%|                }
   362|         0|            0|            0|  0.00%|        return _array_like(x, x0), info
   363|         0|            0|            0|  0.00%|    else:
   364|         0|            0|            0|  0.00%|        return _array_like(x, x0)
   365|         0|            0|            0|  0.00%|
   366|         0|            0|            0|  0.00%|
   367|         0|            0|            0|  0.00%|_set_doc(nonlin_solve)
   368|         0|            0|            0|  0.00%|
   369|         0|            0|            0|  0.00%|
   370|         0|            0|            0|  0.00%|def _nonlin_line_search(func, x, Fx, dx, search_type='armijo', rdiff=1e-8,
   371|         0|            0|            0|  0.00%|                        smin=1e-2):
   372|         0|            0|            0|  0.00%|    tmp_s = [0]
   373|         0|            0|            0|  0.00%|    tmp_Fx = [Fx]
   374|         0|            0|            0|  0.00%|    tmp_phi = [norm(Fx)**2]
   375|         0|            0|            0|  0.00%|    s_norm = norm(x) / norm(dx)
   376|         0|            0|            0|  0.00%|
   377|         0|            0|            0|  0.00%|    def phi(s, store=True):
   378|         0|            0|            0|  0.00%|        if s == tmp_s[0]:
   379|         0|            0|            0|  0.00%|            return tmp_phi[0]
   380|         0|            0|            0|  0.00%|        xt = x + s*dx
   381|         0|            0|            0|  0.00%|        v = func(xt)
   382|         0|            0|            0|  0.00%|        p = _safe_norm(v)**2
   383|         0|            0|            0|  0.00%|        if store:
   384|         0|            0|            0|  0.00%|            tmp_s[0] = s
   385|         0|            0|            0|  0.00%|            tmp_phi[0] = p
   386|         0|            0|            0|  0.00%|            tmp_Fx[0] = v
   387|         0|            0|            0|  0.00%|        return p
   388|         0|            0|            0|  0.00%|
   389|         0|            0|            0|  0.00%|    def derphi(s):
   390|         0|            0|            0|  0.00%|        ds = (abs(s) + s_norm + 1) * rdiff
   391|         0|            0|            0|  0.00%|        return (phi(s+ds, store=False) - phi(s)) / ds
   392|         0|            0|            0|  0.00%|
   393|         0|            0|            0|  0.00%|    if search_type == 'wolfe':
   394|         0|            0|            0|  0.00%|        s, phi1, phi0 = scalar_search_wolfe1(phi, derphi, tmp_phi[0],
   395|         0|            0|            0|  0.00%|                                             xtol=1e-2, amin=smin)
   396|         0|            0|            0|  0.00%|    elif search_type == 'armijo':
   397|         0|            0|            0|  0.00%|        s, phi1 = scalar_search_armijo(phi, tmp_phi[0], -tmp_phi[0],
   398|         0|            0|            0|  0.00%|                                       amin=smin)
   399|         0|            0|            0|  0.00%|
   400|         0|            0|            0|  0.00%|    if s is None:
   401|         0|            0|            0|  0.00%|        # XXX: No suitable step length found. Take the full Newton step,
   402|         0|            0|            0|  0.00%|        #      and hope for the best.
   403|         0|            0|            0|  0.00%|        s = 1.0
   404|         0|            0|            0|  0.00%|
   405|         0|            0|            0|  0.00%|    x = x + s*dx
   406|         0|            0|            0|  0.00%|    if s == tmp_s[0]:
   407|         0|            0|            0|  0.00%|        Fx = tmp_Fx[0]
   408|         0|            0|            0|  0.00%|    else:
   409|         0|            0|            0|  0.00%|        Fx = func(x)
   410|         0|            0|            0|  0.00%|    Fx_norm = norm(Fx)
   411|         0|            0|            0|  0.00%|
   412|         0|            0|            0|  0.00%|    return s, x, Fx, Fx_norm
   413|         0|            0|            0|  0.00%|
   414|         0|            0|            0|  0.00%|
   415|         0|            0|            0|  0.00%|class TerminationCondition(object):
   416|         0|            0|            0|  0.00%|    """
   417|         0|            0|            0|  0.00%|    Termination condition for an iteration. It is terminated if
   418|         0|            0|            0|  0.00%|
   419|         0|            0|            0|  0.00%|    - |F| < f_rtol*|F_0|, AND
   420|         0|            0|            0|  0.00%|    - |F| < f_tol
   421|         0|            0|            0|  0.00%|
   422|         0|            0|            0|  0.00%|    AND
   423|         0|            0|            0|  0.00%|
   424|         0|            0|            0|  0.00%|    - |dx| < x_rtol*|x|, AND
   425|         0|            0|            0|  0.00%|    - |dx| < x_tol
   426|         0|            0|            0|  0.00%|
   427|         0|            0|            0|  0.00%|    """
   428|         0|            0|            0|  0.00%|    def __init__(self, f_tol=None, f_rtol=None, x_tol=None, x_rtol=None,
   429|         0|            0|            0|  0.00%|                 iter=None, norm=maxnorm):
   430|         0|            0|            0|  0.00%|
   431|         0|            0|            0|  0.00%|        if f_tol is None:
   432|         0|            0|            0|  0.00%|            f_tol = np.finfo(np.float_).eps ** (1./3)
   433|         0|            0|            0|  0.00%|        if f_rtol is None:
   434|         0|            0|            0|  0.00%|            f_rtol = np.inf
   435|         0|            0|            0|  0.00%|        if x_tol is None:
   436|         0|            0|            0|  0.00%|            x_tol = np.inf
   437|         0|            0|            0|  0.00%|        if x_rtol is None:
   438|         0|            0|            0|  0.00%|            x_rtol = np.inf
   439|         0|            0|            0|  0.00%|
   440|         0|            0|            0|  0.00%|        self.x_tol = x_tol
   441|         0|            0|            0|  0.00%|        self.x_rtol = x_rtol
   442|         0|            0|            0|  0.00%|        self.f_tol = f_tol
   443|         0|            0|            0|  0.00%|        self.f_rtol = f_rtol
   444|         0|            0|            0|  0.00%|
   445|         0|            0|            0|  0.00%|        self.norm = norm
   446|         0|            0|            0|  0.00%|
   447|         0|            0|            0|  0.00%|        self.iter = iter
   448|         0|            0|            0|  0.00%|
   449|         0|            0|            0|  0.00%|        self.f0_norm = None
   450|         0|            0|            0|  0.00%|        self.iteration = 0
   451|         0|            0|            0|  0.00%|
   452|         0|            0|            0|  0.00%|    def check(self, f, x, dx):
   453|         0|            0|            0|  0.00%|        self.iteration += 1
   454|         0|            0|            0|  0.00%|        f_norm = self.norm(f)
   455|         0|            0|            0|  0.00%|        x_norm = self.norm(x)
   456|         0|            0|            0|  0.00%|        dx_norm = self.norm(dx)
   457|         0|            0|            0|  0.00%|
   458|         0|            0|            0|  0.00%|        if self.f0_norm is None:
   459|         0|            0|            0|  0.00%|            self.f0_norm = f_norm
   460|         0|            0|            0|  0.00%|
   461|         0|            0|            0|  0.00%|        if f_norm == 0:
   462|         0|            0|            0|  0.00%|            return 1
   463|         0|            0|            0|  0.00%|
   464|         0|            0|            0|  0.00%|        if self.iter is not None:
   465|         0|            0|            0|  0.00%|            # backwards compatibility with SciPy 0.6.0
   466|         0|            0|            0|  0.00%|            return 2 * (self.iteration > self.iter)
   467|         0|            0|            0|  0.00%|
   468|         0|            0|            0|  0.00%|        # NB: condition must succeed for rtol=inf even if norm == 0
   469|         0|            0|            0|  0.00%|        return int((f_norm <= self.f_tol
   470|         0|            0|            0|  0.00%|                    and f_norm/self.f_rtol <= self.f0_norm)
   471|         0|            0|            0|  0.00%|                   and (dx_norm <= self.x_tol
   472|         0|            0|            0|  0.00%|                        and dx_norm/self.x_rtol <= x_norm))
   473|         0|            0|            0|  0.00%|
   474|         0|            0|            0|  0.00%|
   475|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   476|         0|            0|            0|  0.00%|# Generic Jacobian approximation
   477|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   478|         0|            0|            0|  0.00%|
   479|         0|            0|            0|  0.00%|class Jacobian(object):
   480|         0|            0|            0|  0.00%|    """
   481|         0|            0|            0|  0.00%|    Common interface for Jacobians or Jacobian approximations.
   482|         0|            0|            0|  0.00%|
   483|         0|            0|            0|  0.00%|    The optional methods come useful when implementing trust region
   484|         0|            0|            0|  0.00%|    etc., algorithms that often require evaluating transposes of the
   485|         0|            0|            0|  0.00%|    Jacobian.
   486|         0|            0|            0|  0.00%|
   487|         0|            0|            0|  0.00%|    Methods
   488|         0|            0|            0|  0.00%|    -------
   489|         0|            0|            0|  0.00%|    solve
   490|         0|            0|            0|  0.00%|        Returns J^-1 * v
   491|         0|            0|            0|  0.00%|    update
   492|         0|            0|            0|  0.00%|        Updates Jacobian to point `x` (where the function has residual `Fx`)
   493|         0|            0|            0|  0.00%|
   494|         0|            0|            0|  0.00%|    matvec : optional
   495|         0|            0|            0|  0.00%|        Returns J * v
   496|         0|            0|            0|  0.00%|    rmatvec : optional
   497|         0|            0|            0|  0.00%|        Returns A^H * v
   498|         0|            0|            0|  0.00%|    rsolve : optional
   499|         0|            0|            0|  0.00%|        Returns A^-H * v
   500|         0|            0|            0|  0.00%|    matmat : optional
   501|         0|            0|            0|  0.00%|        Returns A * V, where V is a dense matrix with dimensions (N,K).
   502|         0|            0|            0|  0.00%|    todense : optional
   503|         0|            0|            0|  0.00%|        Form the dense Jacobian matrix. Necessary for dense trust region
   504|         0|            0|            0|  0.00%|        algorithms, and useful for testing.
   505|         0|            0|            0|  0.00%|
   506|         0|            0|            0|  0.00%|    Attributes
   507|         0|            0|            0|  0.00%|    ----------
   508|         0|            0|            0|  0.00%|    shape
   509|         0|            0|            0|  0.00%|        Matrix dimensions (M, N)
   510|         0|            0|            0|  0.00%|    dtype
   511|         0|            0|            0|  0.00%|        Data type of the matrix.
   512|         0|            0|            0|  0.00%|    func : callable, optional
   513|         0|            0|            0|  0.00%|        Function the Jacobian corresponds to
   514|         0|            0|            0|  0.00%|
   515|         0|            0|            0|  0.00%|    """
   516|         0|            0|            0|  0.00%|
   517|         0|            0|            0|  0.00%|    def __init__(self, **kw):
   518|         0|            0|            0|  0.00%|        names = ["solve", "update", "matvec", "rmatvec", "rsolve",
   519|         0|            0|            0|  0.00%|                 "matmat", "todense", "shape", "dtype"]
   520|         0|            0|            0|  0.00%|        for name, value in kw.items():
   521|         0|            0|            0|  0.00%|            if name not in names:
   522|         0|            0|            0|  0.00%|                raise ValueError("Unknown keyword argument %s" % name)
   523|         0|            0|            0|  0.00%|            if value is not None:
   524|         0|            0|            0|  0.00%|                setattr(self, name, kw[name])
   525|         0|            0|            0|  0.00%|
   526|         0|            0|            0|  0.00%|        if hasattr(self, 'todense'):
   527|         0|            0|            0|  0.00%|            self.__array__ = lambda: self.todense()
   528|         0|            0|            0|  0.00%|
   529|         0|            0|            0|  0.00%|    def aspreconditioner(self):
   530|         0|            0|            0|  0.00%|        return InverseJacobian(self)
   531|         0|            0|            0|  0.00%|
   532|         0|            0|            0|  0.00%|    def solve(self, v, tol=0):
   533|         0|            0|            0|  0.00%|        raise NotImplementedError
   534|         0|            0|            0|  0.00%|
   535|         0|            0|            0|  0.00%|    def update(self, x, F):
   536|         0|            0|            0|  0.00%|        pass
   537|         0|            0|            0|  0.00%|
   538|         0|            0|            0|  0.00%|    def setup(self, x, F, func):
   539|         0|            0|            0|  0.00%|        self.func = func
   540|         0|            0|            0|  0.00%|        self.shape = (F.size, x.size)
   541|         0|            0|            0|  0.00%|        self.dtype = F.dtype
   542|         0|            0|            0|  0.00%|        if self.__class__.setup is Jacobian.setup:
   543|         0|            0|            0|  0.00%|            # Call on the first point unless overridden
   544|         0|            0|            0|  0.00%|            self.update(x, F)
   545|         0|            0|            0|  0.00%|
   546|         0|            0|            0|  0.00%|
   547|         0|            0|            0|  0.00%|class InverseJacobian(object):
   548|         0|            0|            0|  0.00%|    def __init__(self, jacobian):
   549|         0|            0|            0|  0.00%|        self.jacobian = jacobian
   550|         0|            0|            0|  0.00%|        self.matvec = jacobian.solve
   551|         0|            0|            0|  0.00%|        self.update = jacobian.update
   552|         0|            0|            0|  0.00%|        if hasattr(jacobian, 'setup'):
   553|         0|            0|            0|  0.00%|            self.setup = jacobian.setup
   554|         0|            0|            0|  0.00%|        if hasattr(jacobian, 'rsolve'):
   555|         0|            0|            0|  0.00%|            self.rmatvec = jacobian.rsolve
   556|         0|            0|            0|  0.00%|
   557|         0|            0|            0|  0.00%|    @property
   558|         0|            0|            0|  0.00%|    def shape(self):
   559|         0|            0|            0|  0.00%|        return self.jacobian.shape
   560|         0|            0|            0|  0.00%|
   561|         0|            0|            0|  0.00%|    @property
   562|         0|            0|            0|  0.00%|    def dtype(self):
   563|         0|            0|            0|  0.00%|        return self.jacobian.dtype
   564|         0|            0|            0|  0.00%|
   565|         0|            0|            0|  0.00%|
   566|         0|            0|            0|  0.00%|def asjacobian(J):
   567|         0|            0|            0|  0.00%|    """
   568|         0|            0|            0|  0.00%|    Convert given object to one suitable for use as a Jacobian.
   569|         0|            0|            0|  0.00%|    """
   570|         0|            0|            0|  0.00%|    spsolve = scipy.sparse.linalg.spsolve
   571|         0|            0|            0|  0.00%|    if isinstance(J, Jacobian):
   572|         0|            0|            0|  0.00%|        return J
   573|         0|            0|            0|  0.00%|    elif inspect.isclass(J) and issubclass(J, Jacobian):
   574|         0|            0|            0|  0.00%|        return J()
   575|         0|            0|            0|  0.00%|    elif isinstance(J, np.ndarray):
   576|         0|            0|            0|  0.00%|        if J.ndim > 2:
   577|         0|            0|            0|  0.00%|            raise ValueError('array must have rank <= 2')
   578|         0|            0|            0|  0.00%|        J = np.atleast_2d(np.asarray(J))
   579|         0|            0|            0|  0.00%|        if J.shape[0] != J.shape[1]:
   580|         0|            0|            0|  0.00%|            raise ValueError('array must be square')
   581|         0|            0|            0|  0.00%|
   582|         0|            0|            0|  0.00%|        return Jacobian(matvec=lambda v: dot(J, v),
   583|         0|            0|            0|  0.00%|                        rmatvec=lambda v: dot(J.conj().T, v),
   584|         0|            0|            0|  0.00%|                        solve=lambda v: solve(J, v),
   585|         0|            0|            0|  0.00%|                        rsolve=lambda v: solve(J.conj().T, v),
   586|         0|            0|            0|  0.00%|                        dtype=J.dtype, shape=J.shape)
   587|         0|            0|            0|  0.00%|    elif scipy.sparse.isspmatrix(J):
   588|         0|            0|            0|  0.00%|        if J.shape[0] != J.shape[1]:
   589|         0|            0|            0|  0.00%|            raise ValueError('matrix must be square')
   590|         0|            0|            0|  0.00%|        return Jacobian(matvec=lambda v: J*v,
   591|         0|            0|            0|  0.00%|                        rmatvec=lambda v: J.conj().T * v,
   592|         0|            0|            0|  0.00%|                        solve=lambda v: spsolve(J, v),
   593|         0|            0|            0|  0.00%|                        rsolve=lambda v: spsolve(J.conj().T, v),
   594|         0|            0|            0|  0.00%|                        dtype=J.dtype, shape=J.shape)
   595|         0|            0|            0|  0.00%|    elif hasattr(J, 'shape') and hasattr(J, 'dtype') and hasattr(J, 'solve'):
   596|         0|            0|            0|  0.00%|        return Jacobian(matvec=getattr(J, 'matvec'),
   597|         0|            0|            0|  0.00%|                        rmatvec=getattr(J, 'rmatvec'),
   598|         0|            0|            0|  0.00%|                        solve=J.solve,
   599|         0|            0|            0|  0.00%|                        rsolve=getattr(J, 'rsolve'),
   600|         0|            0|            0|  0.00%|                        update=getattr(J, 'update'),
   601|         0|            0|            0|  0.00%|                        setup=getattr(J, 'setup'),
   602|         0|            0|            0|  0.00%|                        dtype=J.dtype,
   603|         0|            0|            0|  0.00%|                        shape=J.shape)
   604|         0|            0|            0|  0.00%|    elif callable(J):
   605|         0|            0|            0|  0.00%|        # Assume it's a function J(x) that returns the Jacobian
   606|         0|            0|            0|  0.00%|        class Jac(Jacobian):
   607|         0|            0|            0|  0.00%|            def update(self, x, F):
   608|         0|            0|            0|  0.00%|                self.x = x
   609|         0|            0|            0|  0.00%|
   610|         0|            0|            0|  0.00%|            def solve(self, v, tol=0):
   611|         0|            0|            0|  0.00%|                m = J(self.x)
   612|         0|            0|            0|  0.00%|                if isinstance(m, np.ndarray):
   613|         0|            0|            0|  0.00%|                    return solve(m, v)
   614|         0|            0|            0|  0.00%|                elif scipy.sparse.isspmatrix(m):
   615|         0|            0|            0|  0.00%|                    return spsolve(m, v)
   616|         0|            0|            0|  0.00%|                else:
   617|         0|            0|            0|  0.00%|                    raise ValueError("Unknown matrix type")
   618|         0|            0|            0|  0.00%|
   619|         0|            0|            0|  0.00%|            def matvec(self, v):
   620|         0|            0|            0|  0.00%|                m = J(self.x)
   621|         0|            0|            0|  0.00%|                if isinstance(m, np.ndarray):
   622|         0|            0|            0|  0.00%|                    return dot(m, v)
   623|         0|            0|            0|  0.00%|                elif scipy.sparse.isspmatrix(m):
   624|         0|            0|            0|  0.00%|                    return m*v
   625|         0|            0|            0|  0.00%|                else:
   626|         0|            0|            0|  0.00%|                    raise ValueError("Unknown matrix type")
   627|         0|            0|            0|  0.00%|
   628|         0|            0|            0|  0.00%|            def rsolve(self, v, tol=0):
   629|         0|            0|            0|  0.00%|                m = J(self.x)
   630|         0|            0|            0|  0.00%|                if isinstance(m, np.ndarray):
   631|         0|            0|            0|  0.00%|                    return solve(m.conj().T, v)
   632|         0|            0|            0|  0.00%|                elif scipy.sparse.isspmatrix(m):
   633|         0|            0|            0|  0.00%|                    return spsolve(m.conj().T, v)
   634|         0|            0|            0|  0.00%|                else:
   635|         0|            0|            0|  0.00%|                    raise ValueError("Unknown matrix type")
   636|         0|            0|            0|  0.00%|
   637|         0|            0|            0|  0.00%|            def rmatvec(self, v):
   638|         0|            0|            0|  0.00%|                m = J(self.x)
   639|         0|            0|            0|  0.00%|                if isinstance(m, np.ndarray):
   640|         0|            0|            0|  0.00%|                    return dot(m.conj().T, v)
   641|         0|            0|            0|  0.00%|                elif scipy.sparse.isspmatrix(m):
   642|         0|            0|            0|  0.00%|                    return m.conj().T * v
   643|         0|            0|            0|  0.00%|                else:
   644|         0|            0|            0|  0.00%|                    raise ValueError("Unknown matrix type")
   645|         0|            0|            0|  0.00%|        return Jac()
   646|         0|            0|            0|  0.00%|    elif isinstance(J, str):
   647|         0|            0|            0|  0.00%|        return dict(broyden1=BroydenFirst,
   648|         0|            0|            0|  0.00%|                    broyden2=BroydenSecond,
   649|         0|            0|            0|  0.00%|                    anderson=Anderson,
   650|         0|            0|            0|  0.00%|                    diagbroyden=DiagBroyden,
   651|         0|            0|            0|  0.00%|                    linearmixing=LinearMixing,
   652|         0|            0|            0|  0.00%|                    excitingmixing=ExcitingMixing,
   653|         0|            0|            0|  0.00%|                    krylov=KrylovJacobian)[J]()
   654|         0|            0|            0|  0.00%|    else:
   655|         0|            0|            0|  0.00%|        raise TypeError('Cannot convert object to a Jacobian')
   656|         0|            0|            0|  0.00%|
   657|         0|            0|            0|  0.00%|
   658|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   659|         0|            0|            0|  0.00%|# Broyden
   660|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   661|         0|            0|            0|  0.00%|
   662|         0|            0|            0|  0.00%|class GenericBroyden(Jacobian):
   663|         0|            0|            0|  0.00%|    def setup(self, x0, f0, func):
   664|         0|            0|            0|  0.00%|        Jacobian.setup(self, x0, f0, func)
   665|         0|            0|            0|  0.00%|        self.last_f = f0
   666|         0|            0|            0|  0.00%|        self.last_x = x0
   667|         0|            0|            0|  0.00%|
   668|         0|            0|            0|  0.00%|        if hasattr(self, 'alpha') and self.alpha is None:
   669|         0|            0|            0|  0.00%|            # Autoscale the initial Jacobian parameter
   670|         0|            0|            0|  0.00%|            # unless we have already guessed the solution.
   671|         0|            0|            0|  0.00%|            normf0 = norm(f0)
   672|         0|            0|            0|  0.00%|            if normf0:
   673|         0|            0|            0|  0.00%|                self.alpha = 0.5*max(norm(x0), 1) / normf0
   674|         0|            0|            0|  0.00%|            else:
   675|         0|            0|            0|  0.00%|                self.alpha = 1.0
   676|         0|            0|            0|  0.00%|
   677|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
   678|         0|            0|            0|  0.00%|        raise NotImplementedError
   679|         0|            0|            0|  0.00%|
   680|         0|            0|            0|  0.00%|    def update(self, x, f):
   681|         0|            0|            0|  0.00%|        df = f - self.last_f
   682|         0|            0|            0|  0.00%|        dx = x - self.last_x
   683|         0|            0|            0|  0.00%|        self._update(x, f, dx, df, norm(dx), norm(df))
   684|         0|            0|            0|  0.00%|        self.last_f = f
   685|         0|            0|            0|  0.00%|        self.last_x = x
   686|         0|            0|            0|  0.00%|
   687|         0|            0|            0|  0.00%|
   688|         0|            0|            0|  0.00%|class LowRankMatrix(object):
   689|         0|            0|            0|  0.00%|    r"""
   690|         0|            0|            0|  0.00%|    A matrix represented as
   691|         0|            0|            0|  0.00%|
   692|         0|            0|            0|  0.00%|    .. math:: \alpha I + \sum_{n=0}^{n=M} c_n d_n^\dagger
   693|         0|            0|            0|  0.00%|
   694|         0|            0|            0|  0.00%|    However, if the rank of the matrix reaches the dimension of the vectors,
   695|         0|            0|            0|  0.00%|    full matrix representation will be used thereon.
   696|         0|            0|            0|  0.00%|
   697|         0|            0|            0|  0.00%|    """
   698|         0|            0|            0|  0.00%|
   699|         0|            0|            0|  0.00%|    def __init__(self, alpha, n, dtype):
   700|         0|            0|            0|  0.00%|        self.alpha = alpha
   701|         0|            0|            0|  0.00%|        self.cs = []
   702|         0|            0|            0|  0.00%|        self.ds = []
   703|         0|            0|            0|  0.00%|        self.n = n
   704|         0|            0|            0|  0.00%|        self.dtype = dtype
   705|         0|            0|            0|  0.00%|        self.collapsed = None
   706|         0|            0|            0|  0.00%|
   707|         0|            0|            0|  0.00%|    @staticmethod
   708|         0|            0|            0|  0.00%|    def _matvec(v, alpha, cs, ds):
   709|         0|            0|            0|  0.00%|        axpy, scal, dotc = get_blas_funcs(['axpy', 'scal', 'dotc'],
   710|         0|            0|            0|  0.00%|                                          cs[:1] + [v])
   711|         0|            0|            0|  0.00%|        w = alpha * v
   712|         0|            0|            0|  0.00%|        for c, d in zip(cs, ds):
   713|         0|            0|            0|  0.00%|            a = dotc(d, v)
   714|         0|            0|            0|  0.00%|            w = axpy(c, w, w.size, a)
   715|         0|            0|            0|  0.00%|        return w
   716|         0|            0|            0|  0.00%|
   717|         0|            0|            0|  0.00%|    @staticmethod
   718|         0|            0|            0|  0.00%|    def _solve(v, alpha, cs, ds):
   719|         0|            0|            0|  0.00%|        """Evaluate w = M^-1 v"""
   720|         0|            0|            0|  0.00%|        if len(cs) == 0:
   721|         0|            0|            0|  0.00%|            return v/alpha
   722|         0|            0|            0|  0.00%|
   723|         0|            0|            0|  0.00%|        # (B + C D^H)^-1 = B^-1 - B^-1 C (I + D^H B^-1 C)^-1 D^H B^-1
   724|         0|            0|            0|  0.00%|
   725|         0|            0|            0|  0.00%|        axpy, dotc = get_blas_funcs(['axpy', 'dotc'], cs[:1] + [v])
   726|         0|            0|            0|  0.00%|
   727|         0|            0|            0|  0.00%|        c0 = cs[0]
   728|         0|            0|            0|  0.00%|        A = alpha * np.identity(len(cs), dtype=c0.dtype)
   729|         0|            0|            0|  0.00%|        for i, d in enumerate(ds):
   730|         0|            0|            0|  0.00%|            for j, c in enumerate(cs):
   731|         0|            0|            0|  0.00%|                A[i,j] += dotc(d, c)
   732|         0|            0|            0|  0.00%|
   733|         0|            0|            0|  0.00%|        q = np.zeros(len(cs), dtype=c0.dtype)
   734|         0|            0|            0|  0.00%|        for j, d in enumerate(ds):
   735|         0|            0|            0|  0.00%|            q[j] = dotc(d, v)
   736|         0|            0|            0|  0.00%|        q /= alpha
   737|         0|            0|            0|  0.00%|        q = solve(A, q)
   738|         0|            0|            0|  0.00%|
   739|         0|            0|            0|  0.00%|        w = v/alpha
   740|         0|            0|            0|  0.00%|        for c, qc in zip(cs, q):
   741|         0|            0|            0|  0.00%|            w = axpy(c, w, w.size, -qc)
   742|         0|            0|            0|  0.00%|
   743|         0|            0|            0|  0.00%|        return w
   744|         0|            0|            0|  0.00%|
   745|         0|            0|            0|  0.00%|    def matvec(self, v):
   746|         0|            0|            0|  0.00%|        """Evaluate w = M v"""
   747|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   748|         0|            0|            0|  0.00%|            return np.dot(self.collapsed, v)
   749|         0|            0|            0|  0.00%|        return LowRankMatrix._matvec(v, self.alpha, self.cs, self.ds)
   750|         0|            0|            0|  0.00%|
   751|         0|            0|            0|  0.00%|    def rmatvec(self, v):
   752|         0|            0|            0|  0.00%|        """Evaluate w = M^H v"""
   753|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   754|         0|            0|            0|  0.00%|            return np.dot(self.collapsed.T.conj(), v)
   755|         0|            0|            0|  0.00%|        return LowRankMatrix._matvec(v, np.conj(self.alpha), self.ds, self.cs)
   756|         0|            0|            0|  0.00%|
   757|         0|            0|            0|  0.00%|    def solve(self, v, tol=0):
   758|         0|            0|            0|  0.00%|        """Evaluate w = M^-1 v"""
   759|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   760|         0|            0|            0|  0.00%|            return solve(self.collapsed, v)
   761|         0|            0|            0|  0.00%|        return LowRankMatrix._solve(v, self.alpha, self.cs, self.ds)
   762|         0|            0|            0|  0.00%|
   763|         0|            0|            0|  0.00%|    def rsolve(self, v, tol=0):
   764|         0|            0|            0|  0.00%|        """Evaluate w = M^-H v"""
   765|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   766|         0|            0|            0|  0.00%|            return solve(self.collapsed.T.conj(), v)
   767|         0|            0|            0|  0.00%|        return LowRankMatrix._solve(v, np.conj(self.alpha), self.ds, self.cs)
   768|         0|            0|            0|  0.00%|
   769|         0|            0|            0|  0.00%|    def append(self, c, d):
   770|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   771|         0|            0|            0|  0.00%|            self.collapsed += c[:,None] * d[None,:].conj()
   772|         0|            0|            0|  0.00%|            return
   773|         0|            0|            0|  0.00%|
   774|         0|            0|            0|  0.00%|        self.cs.append(c)
   775|         0|            0|            0|  0.00%|        self.ds.append(d)
   776|         0|            0|            0|  0.00%|
   777|         0|            0|            0|  0.00%|        if len(self.cs) > c.size:
   778|         0|            0|            0|  0.00%|            self.collapse()
   779|         0|            0|            0|  0.00%|
   780|         0|            0|            0|  0.00%|    def __array__(self):
   781|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   782|         0|            0|            0|  0.00%|            return self.collapsed
   783|         0|            0|            0|  0.00%|
   784|         0|            0|            0|  0.00%|        Gm = self.alpha*np.identity(self.n, dtype=self.dtype)
   785|         0|            0|            0|  0.00%|        for c, d in zip(self.cs, self.ds):
   786|         0|            0|            0|  0.00%|            Gm += c[:,None]*d[None,:].conj()
   787|         0|            0|            0|  0.00%|        return Gm
   788|         0|            0|            0|  0.00%|
   789|         0|            0|            0|  0.00%|    def collapse(self):
   790|         0|            0|            0|  0.00%|        """Collapse the low-rank matrix to a full-rank one."""
   791|         0|            0|            0|  0.00%|        self.collapsed = np.array(self)
   792|         0|            0|            0|  0.00%|        self.cs = None
   793|         0|            0|            0|  0.00%|        self.ds = None
   794|         0|            0|            0|  0.00%|        self.alpha = None
   795|         0|            0|            0|  0.00%|
   796|         0|            0|            0|  0.00%|    def restart_reduce(self, rank):
   797|         0|            0|            0|  0.00%|        """
   798|         0|            0|            0|  0.00%|        Reduce the rank of the matrix by dropping all vectors.
   799|         0|            0|            0|  0.00%|        """
   800|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   801|         0|            0|            0|  0.00%|            return
   802|         0|            0|            0|  0.00%|        assert rank > 0
   803|         0|            0|            0|  0.00%|        if len(self.cs) > rank:
   804|         0|            0|            0|  0.00%|            del self.cs[:]
   805|         0|            0|            0|  0.00%|            del self.ds[:]
   806|         0|            0|            0|  0.00%|
   807|         0|            0|            0|  0.00%|    def simple_reduce(self, rank):
   808|         0|            0|            0|  0.00%|        """
   809|         0|            0|            0|  0.00%|        Reduce the rank of the matrix by dropping oldest vectors.
   810|         0|            0|            0|  0.00%|        """
   811|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   812|         0|            0|            0|  0.00%|            return
   813|         0|            0|            0|  0.00%|        assert rank > 0
   814|         0|            0|            0|  0.00%|        while len(self.cs) > rank:
   815|         0|            0|            0|  0.00%|            del self.cs[0]
   816|         0|            0|            0|  0.00%|            del self.ds[0]
   817|         0|            0|            0|  0.00%|
   818|         0|            0|            0|  0.00%|    def svd_reduce(self, max_rank, to_retain=None):
   819|         0|            0|            0|  0.00%|        """
   820|         0|            0|            0|  0.00%|        Reduce the rank of the matrix by retaining some SVD components.
   821|         0|            0|            0|  0.00%|
   822|         0|            0|            0|  0.00%|        This corresponds to the \"Broyden Rank Reduction Inverse\"
   823|         0|            0|            0|  0.00%|        algorithm described in [1]_.
   824|         0|            0|            0|  0.00%|
   825|         0|            0|            0|  0.00%|        Note that the SVD decomposition can be done by solving only a
   826|         0|            0|            0|  0.00%|        problem whose size is the effective rank of this matrix, which
   827|         0|            0|            0|  0.00%|        is viable even for large problems.
   828|         0|            0|            0|  0.00%|
   829|         0|            0|            0|  0.00%|        Parameters
   830|         0|            0|            0|  0.00%|        ----------
   831|         0|            0|            0|  0.00%|        max_rank : int
   832|         0|            0|            0|  0.00%|            Maximum rank of this matrix after reduction.
   833|         0|            0|            0|  0.00%|        to_retain : int, optional
   834|         0|            0|            0|  0.00%|            Number of SVD components to retain when reduction is done
   835|         0|            0|            0|  0.00%|            (ie. rank > max_rank). Default is ``max_rank - 2``.
   836|         0|            0|            0|  0.00%|
   837|         0|            0|            0|  0.00%|        References
   838|         0|            0|            0|  0.00%|        ----------
   839|         0|            0|            0|  0.00%|        .. [1] B.A. van der Rotten, PhD thesis,
   840|         0|            0|            0|  0.00%|           \"A limited memory Broyden method to solve high-dimensional
   841|         0|            0|            0|  0.00%|           systems of nonlinear equations\". Mathematisch Instituut,
   842|         0|            0|            0|  0.00%|           Universiteit Leiden, The Netherlands (2003).
   843|         0|            0|            0|  0.00%|
   844|         0|            0|            0|  0.00%|           https://web.archive.org/web/20161022015821/http://www.math.leidenuniv.nl/scripties/Rotten.pdf
   845|         0|            0|            0|  0.00%|
   846|         0|            0|            0|  0.00%|        """
   847|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   848|         0|            0|            0|  0.00%|            return
   849|         0|            0|            0|  0.00%|
   850|         0|            0|            0|  0.00%|        p = max_rank
   851|         0|            0|            0|  0.00%|        if to_retain is not None:
   852|         0|            0|            0|  0.00%|            q = to_retain
   853|         0|            0|            0|  0.00%|        else:
   854|         0|            0|            0|  0.00%|            q = p - 2
   855|         0|            0|            0|  0.00%|
   856|         0|            0|            0|  0.00%|        if self.cs:
   857|         0|            0|            0|  0.00%|            p = min(p, len(self.cs[0]))
   858|         0|            0|            0|  0.00%|        q = max(0, min(q, p-1))
   859|         0|            0|            0|  0.00%|
   860|         0|            0|            0|  0.00%|        m = len(self.cs)
   861|         0|            0|            0|  0.00%|        if m < p:
   862|         0|            0|            0|  0.00%|            # nothing to do
   863|         0|            0|            0|  0.00%|            return
   864|         0|            0|            0|  0.00%|
   865|         0|            0|            0|  0.00%|        C = np.array(self.cs).T
   866|         0|            0|            0|  0.00%|        D = np.array(self.ds).T
   867|         0|            0|            0|  0.00%|
   868|         0|            0|            0|  0.00%|        D, R = qr(D, mode='economic')
   869|         0|            0|            0|  0.00%|        C = dot(C, R.T.conj())
   870|         0|            0|            0|  0.00%|
   871|         0|            0|            0|  0.00%|        U, S, WH = svd(C, full_matrices=False, compute_uv=True)
   872|         0|            0|            0|  0.00%|
   873|         0|            0|            0|  0.00%|        C = dot(C, inv(WH))
   874|         0|            0|            0|  0.00%|        D = dot(D, WH.T.conj())
   875|         0|            0|            0|  0.00%|
   876|         0|            0|            0|  0.00%|        for k in range(q):
   877|         0|            0|            0|  0.00%|            self.cs[k] = C[:,k].copy()
   878|         0|            0|            0|  0.00%|            self.ds[k] = D[:,k].copy()
   879|         0|            0|            0|  0.00%|
   880|         0|            0|            0|  0.00%|        del self.cs[q:]
   881|         0|            0|            0|  0.00%|        del self.ds[q:]
   882|         0|            0|            0|  0.00%|
   883|         0|            0|            0|  0.00%|
   884|         0|            0|            0|  0.00%|_doc_parts['broyden_params'] = """
   885|         0|            0|            0|  0.00%|    alpha : float, optional
   886|         0|            0|            0|  0.00%|        Initial guess for the Jacobian is ``(-1/alpha)``.
   887|         0|            0|            0|  0.00%|    reduction_method : str or tuple, optional
   888|         0|            0|            0|  0.00%|        Method used in ensuring that the rank of the Broyden matrix
   889|         0|            0|            0|  0.00%|        stays low. Can either be a string giving the name of the method,
   890|         0|            0|            0|  0.00%|        or a tuple of the form ``(method, param1, param2, ...)``
   891|         0|            0|            0|  0.00%|        that gives the name of the method and values for additional parameters.
   892|         0|            0|            0|  0.00%|
   893|         0|            0|            0|  0.00%|        Methods available:
   894|         0|            0|            0|  0.00%|
   895|         0|            0|            0|  0.00%|            - ``restart``: drop all matrix columns. Has no extra parameters.
   896|         0|            0|            0|  0.00%|            - ``simple``: drop oldest matrix column. Has no extra parameters.
   897|         0|            0|            0|  0.00%|            - ``svd``: keep only the most significant SVD components.
   898|         0|            0|            0|  0.00%|              Takes an extra parameter, ``to_retain``, which determines the
   899|         0|            0|            0|  0.00%|              number of SVD components to retain when rank reduction is done.
   900|         0|            0|            0|  0.00%|              Default is ``max_rank - 2``.
   901|         0|            0|            0|  0.00%|
   902|         0|            0|            0|  0.00%|    max_rank : int, optional
   903|         0|            0|            0|  0.00%|        Maximum rank for the Broyden matrix.
   904|         0|            0|            0|  0.00%|        Default is infinity (i.e., no rank reduction).
   905|         0|            0|            0|  0.00%|    """.strip()
   906|         0|            0|            0|  0.00%|
   907|         0|            0|            0|  0.00%|
   908|         0|            0|            0|  0.00%|class BroydenFirst(GenericBroyden):
   909|         0|            0|            0|  0.00%|    r"""
   910|         0|            0|            0|  0.00%|    Find a root of a function, using Broyden's first Jacobian approximation.
   911|         0|            0|            0|  0.00%|
   912|         0|            0|            0|  0.00%|    This method is also known as \"Broyden's good method\".
   913|         0|            0|            0|  0.00%|
   914|         0|            0|            0|  0.00%|    Parameters
   915|         0|            0|            0|  0.00%|    ----------
   916|         0|            0|            0|  0.00%|    %(params_basic)s
   917|         0|            0|            0|  0.00%|    %(broyden_params)s
   918|         0|            0|            0|  0.00%|    %(params_extra)s
   919|         0|            0|            0|  0.00%|
   920|         0|            0|            0|  0.00%|    See Also
   921|         0|            0|            0|  0.00%|    --------
   922|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
   923|         0|            0|            0|  0.00%|           functions. See ``method=='broyden1'`` in particular.
   924|         0|            0|            0|  0.00%|
   925|         0|            0|            0|  0.00%|    Notes
   926|         0|            0|            0|  0.00%|    -----
   927|         0|            0|            0|  0.00%|    This algorithm implements the inverse Jacobian Quasi-Newton update
   928|         0|            0|            0|  0.00%|
   929|         0|            0|            0|  0.00%|    .. math:: H_+ = H + (dx - H df) dx^\dagger H / ( dx^\dagger H df)
   930|         0|            0|            0|  0.00%|
   931|         0|            0|            0|  0.00%|    which corresponds to Broyden's first Jacobian update
   932|         0|            0|            0|  0.00%|
   933|         0|            0|            0|  0.00%|    .. math:: J_+ = J + (df - J dx) dx^\dagger / dx^\dagger dx
   934|         0|            0|            0|  0.00%|
   935|         0|            0|            0|  0.00%|
   936|         0|            0|            0|  0.00%|    References
   937|         0|            0|            0|  0.00%|    ----------
   938|         0|            0|            0|  0.00%|    .. [1] B.A. van der Rotten, PhD thesis,
   939|         0|            0|            0|  0.00%|       \"A limited memory Broyden method to solve high-dimensional
   940|         0|            0|            0|  0.00%|       systems of nonlinear equations\". Mathematisch Instituut,
   941|         0|            0|            0|  0.00%|       Universiteit Leiden, The Netherlands (2003).
   942|         0|            0|            0|  0.00%|
   943|         0|            0|            0|  0.00%|       https://web.archive.org/web/20161022015821/http://www.math.leidenuniv.nl/scripties/Rotten.pdf
   944|         0|            0|            0|  0.00%|
   945|         0|            0|            0|  0.00%|    """
   946|         0|            0|            0|  0.00%|
   947|         0|            0|            0|  0.00%|    def __init__(self, alpha=None, reduction_method='restart', max_rank=None):
   948|         0|            0|            0|  0.00%|        GenericBroyden.__init__(self)
   949|         0|            0|            0|  0.00%|        self.alpha = alpha
   950|         0|            0|            0|  0.00%|        self.Gm = None
   951|         0|            0|            0|  0.00%|
   952|         0|            0|            0|  0.00%|        if max_rank is None:
   953|         0|            0|            0|  0.00%|            max_rank = np.inf
   954|         0|            0|            0|  0.00%|        self.max_rank = max_rank
   955|         0|            0|            0|  0.00%|
   956|         0|            0|            0|  0.00%|        if isinstance(reduction_method, str):
   957|         0|            0|            0|  0.00%|            reduce_params = ()
   958|         0|            0|            0|  0.00%|        else:
   959|         0|            0|            0|  0.00%|            reduce_params = reduction_method[1:]
   960|         0|            0|            0|  0.00%|            reduction_method = reduction_method[0]
   961|         0|            0|            0|  0.00%|        reduce_params = (max_rank - 1,) + reduce_params
   962|         0|            0|            0|  0.00%|
   963|         0|            0|            0|  0.00%|        if reduction_method == 'svd':
   964|         0|            0|            0|  0.00%|            self._reduce = lambda: self.Gm.svd_reduce(*reduce_params)
   965|         0|            0|            0|  0.00%|        elif reduction_method == 'simple':
   966|         0|            0|            0|  0.00%|            self._reduce = lambda: self.Gm.simple_reduce(*reduce_params)
   967|         0|            0|            0|  0.00%|        elif reduction_method == 'restart':
   968|         0|            0|            0|  0.00%|            self._reduce = lambda: self.Gm.restart_reduce(*reduce_params)
   969|         0|            0|            0|  0.00%|        else:
   970|         0|            0|            0|  0.00%|            raise ValueError("Unknown rank reduction method '%s'" %
   971|         0|            0|            0|  0.00%|                             reduction_method)
   972|         0|            0|            0|  0.00%|
   973|         0|            0|            0|  0.00%|    def setup(self, x, F, func):
   974|         0|            0|            0|  0.00%|        GenericBroyden.setup(self, x, F, func)
   975|         0|            0|            0|  0.00%|        self.Gm = LowRankMatrix(-self.alpha, self.shape[0], self.dtype)
   976|         0|            0|            0|  0.00%|
   977|         0|            0|            0|  0.00%|    def todense(self):
   978|         0|            0|            0|  0.00%|        return inv(self.Gm)
   979|         0|            0|            0|  0.00%|
   980|         0|            0|            0|  0.00%|    def solve(self, f, tol=0):
   981|         0|            0|            0|  0.00%|        r = self.Gm.matvec(f)
   982|         0|            0|            0|  0.00%|        if not np.isfinite(r).all():
   983|         0|            0|            0|  0.00%|            # singular; reset the Jacobian approximation
   984|         0|            0|            0|  0.00%|            self.setup(self.last_x, self.last_f, self.func)
   985|         0|            0|            0|  0.00%|        return self.Gm.matvec(f)
   986|         0|            0|            0|  0.00%|
   987|         0|            0|            0|  0.00%|    def matvec(self, f):
   988|         0|            0|            0|  0.00%|        return self.Gm.solve(f)
   989|         0|            0|            0|  0.00%|
   990|         0|            0|            0|  0.00%|    def rsolve(self, f, tol=0):
   991|         0|            0|            0|  0.00%|        return self.Gm.rmatvec(f)
   992|         0|            0|            0|  0.00%|
   993|         0|            0|            0|  0.00%|    def rmatvec(self, f):
   994|         0|            0|            0|  0.00%|        return self.Gm.rsolve(f)
   995|         0|            0|            0|  0.00%|
   996|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
   997|         0|            0|            0|  0.00%|        self._reduce()  # reduce first to preserve secant condition
   998|         0|            0|            0|  0.00%|
   999|         0|            0|            0|  0.00%|        v = self.Gm.rmatvec(dx)
  1000|         0|            0|            0|  0.00%|        c = dx - self.Gm.matvec(df)
  1001|         0|            0|            0|  0.00%|        d = v / vdot(df, v)
  1002|         0|            0|            0|  0.00%|
  1003|         0|            0|            0|  0.00%|        self.Gm.append(c, d)
  1004|         0|            0|            0|  0.00%|
  1005|         0|            0|            0|  0.00%|
  1006|         0|            0|            0|  0.00%|class BroydenSecond(BroydenFirst):
  1007|         0|            0|            0|  0.00%|    """
  1008|         0|            0|            0|  0.00%|    Find a root of a function, using Broyden\'s second Jacobian approximation.
  1009|         0|            0|            0|  0.00%|
  1010|         0|            0|            0|  0.00%|    This method is also known as \"Broyden's bad method\".
  1011|         0|            0|            0|  0.00%|
  1012|         0|            0|            0|  0.00%|    Parameters
  1013|         0|            0|            0|  0.00%|    ----------
  1014|         0|            0|            0|  0.00%|    %(params_basic)s
  1015|         0|            0|            0|  0.00%|    %(broyden_params)s
  1016|         0|            0|            0|  0.00%|    %(params_extra)s
  1017|         0|            0|            0|  0.00%|
  1018|         0|            0|            0|  0.00%|    See Also
  1019|         0|            0|            0|  0.00%|    --------
  1020|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1021|         0|            0|            0|  0.00%|           functions. See ``method=='broyden2'`` in particular.
  1022|         0|            0|            0|  0.00%|
  1023|         0|            0|            0|  0.00%|    Notes
  1024|         0|            0|            0|  0.00%|    -----
  1025|         0|            0|            0|  0.00%|    This algorithm implements the inverse Jacobian Quasi-Newton update
  1026|         0|            0|            0|  0.00%|
  1027|         0|            0|            0|  0.00%|    .. math:: H_+ = H + (dx - H df) df^\\dagger / ( df^\\dagger df)
  1028|         0|            0|            0|  0.00%|
  1029|         0|            0|            0|  0.00%|    corresponding to Broyden's second method.
  1030|         0|            0|            0|  0.00%|
  1031|         0|            0|            0|  0.00%|    References
  1032|         0|            0|            0|  0.00%|    ----------
  1033|         0|            0|            0|  0.00%|    .. [1] B.A. van der Rotten, PhD thesis,
  1034|         0|            0|            0|  0.00%|       \"A limited memory Broyden method to solve high-dimensional
  1035|         0|            0|            0|  0.00%|       systems of nonlinear equations\". Mathematisch Instituut,
  1036|         0|            0|            0|  0.00%|       Universiteit Leiden, The Netherlands (2003).
  1037|         0|            0|            0|  0.00%|
  1038|         0|            0|            0|  0.00%|       https://web.archive.org/web/20161022015821/http://www.math.leidenuniv.nl/scripties/Rotten.pdf
  1039|         0|            0|            0|  0.00%|
  1040|         0|            0|            0|  0.00%|    """
  1041|         0|            0|            0|  0.00%|
  1042|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
  1043|         0|            0|            0|  0.00%|        self._reduce()  # reduce first to preserve secant condition
  1044|         0|            0|            0|  0.00%|
  1045|         0|            0|            0|  0.00%|        v = df
  1046|         0|            0|            0|  0.00%|        c = dx - self.Gm.matvec(df)
  1047|         0|            0|            0|  0.00%|        d = v / df_norm**2
  1048|         0|            0|            0|  0.00%|        self.Gm.append(c, d)
  1049|         0|            0|            0|  0.00%|
  1050|         0|            0|            0|  0.00%|
  1051|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1052|         0|            0|            0|  0.00%|# Broyden-like (restricted memory)
  1053|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1054|         0|            0|            0|  0.00%|
  1055|         0|            0|            0|  0.00%|class Anderson(GenericBroyden):
  1056|         0|            0|            0|  0.00%|    """
  1057|         0|            0|            0|  0.00%|    Find a root of a function, using (extended) Anderson mixing.
  1058|         0|            0|            0|  0.00%|
  1059|         0|            0|            0|  0.00%|    The Jacobian is formed by for a 'best' solution in the space
  1060|         0|            0|            0|  0.00%|    spanned by last `M` vectors. As a result, only a MxM matrix
  1061|         0|            0|            0|  0.00%|    inversions and MxN multiplications are required. [Ey]_
  1062|         0|            0|            0|  0.00%|
  1063|         0|            0|            0|  0.00%|    Parameters
  1064|         0|            0|            0|  0.00%|    ----------
  1065|         0|            0|            0|  0.00%|    %(params_basic)s
  1066|         0|            0|            0|  0.00%|    alpha : float, optional
  1067|         0|            0|            0|  0.00%|        Initial guess for the Jacobian is (-1/alpha).
  1068|         0|            0|            0|  0.00%|    M : float, optional
  1069|         0|            0|            0|  0.00%|        Number of previous vectors to retain. Defaults to 5.
  1070|         0|            0|            0|  0.00%|    w0 : float, optional
  1071|         0|            0|            0|  0.00%|        Regularization parameter for numerical stability.
  1072|         0|            0|            0|  0.00%|        Compared to unity, good values of the order of 0.01.
  1073|         0|            0|            0|  0.00%|    %(params_extra)s
  1074|         0|            0|            0|  0.00%|
  1075|         0|            0|            0|  0.00%|    See Also
  1076|         0|            0|            0|  0.00%|    --------
  1077|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1078|         0|            0|            0|  0.00%|           functions. See ``method=='anderson'`` in particular.
  1079|         0|            0|            0|  0.00%|
  1080|         0|            0|            0|  0.00%|    References
  1081|         0|            0|            0|  0.00%|    ----------
  1082|         0|            0|            0|  0.00%|    .. [Ey] V. Eyert, J. Comp. Phys., 124, 271 (1996).
  1083|         0|            0|            0|  0.00%|
  1084|         0|            0|            0|  0.00%|    """
  1085|         0|            0|            0|  0.00%|
  1086|         0|            0|            0|  0.00%|    # Note:
  1087|         0|            0|            0|  0.00%|    #
  1088|         0|            0|            0|  0.00%|    # Anderson method maintains a rank M approximation of the inverse Jacobian,
  1089|         0|            0|            0|  0.00%|    #
  1090|         0|            0|            0|  0.00%|    #     J^-1 v ~ -v*alpha + (dX + alpha dF) A^-1 dF^H v
  1091|         0|            0|            0|  0.00%|    #     A      = W + dF^H dF
  1092|         0|            0|            0|  0.00%|    #     W      = w0^2 diag(dF^H dF)
  1093|         0|            0|            0|  0.00%|    #
  1094|         0|            0|            0|  0.00%|    # so that for w0 = 0 the secant condition applies for last M iterates, i.e.,
  1095|         0|            0|            0|  0.00%|    #
  1096|         0|            0|            0|  0.00%|    #     J^-1 df_j = dx_j
  1097|         0|            0|            0|  0.00%|    #
  1098|         0|            0|            0|  0.00%|    # for all j = 0 ... M-1.
  1099|         0|            0|            0|  0.00%|    #
  1100|         0|            0|            0|  0.00%|    # Moreover, (from Sherman-Morrison-Woodbury formula)
  1101|         0|            0|            0|  0.00%|    #
  1102|         0|            0|            0|  0.00%|    #    J v ~ [ b I - b^2 C (I + b dF^H A^-1 C)^-1 dF^H ] v
  1103|         0|            0|            0|  0.00%|    #    C   = (dX + alpha dF) A^-1
  1104|         0|            0|            0|  0.00%|    #    b   = -1/alpha
  1105|         0|            0|            0|  0.00%|    #
  1106|         0|            0|            0|  0.00%|    # and after simplification
  1107|         0|            0|            0|  0.00%|    #
  1108|         0|            0|            0|  0.00%|    #    J v ~ -v/alpha + (dX/alpha + dF) (dF^H dX - alpha W)^-1 dF^H v
  1109|         0|            0|            0|  0.00%|    #
  1110|         0|            0|            0|  0.00%|
  1111|         0|            0|            0|  0.00%|    def __init__(self, alpha=None, w0=0.01, M=5):
  1112|         0|            0|            0|  0.00%|        GenericBroyden.__init__(self)
  1113|         0|            0|            0|  0.00%|        self.alpha = alpha
  1114|         0|            0|            0|  0.00%|        self.M = M
  1115|         0|            0|            0|  0.00%|        self.dx = []
  1116|         0|            0|            0|  0.00%|        self.df = []
  1117|         0|            0|            0|  0.00%|        self.gamma = None
  1118|         0|            0|            0|  0.00%|        self.w0 = w0
  1119|         0|            0|            0|  0.00%|
  1120|         0|            0|            0|  0.00%|    def solve(self, f, tol=0):
  1121|         0|            0|            0|  0.00%|        dx = -self.alpha*f
  1122|         0|            0|            0|  0.00%|
  1123|         0|            0|            0|  0.00%|        n = len(self.dx)
  1124|         0|            0|            0|  0.00%|        if n == 0:
  1125|         0|            0|            0|  0.00%|            return dx
  1126|         0|            0|            0|  0.00%|
  1127|         0|            0|            0|  0.00%|        df_f = np.empty(n, dtype=f.dtype)
  1128|         0|            0|            0|  0.00%|        for k in range(n):
  1129|         0|            0|            0|  0.00%|            df_f[k] = vdot(self.df[k], f)
  1130|         0|            0|            0|  0.00%|
  1131|         0|            0|            0|  0.00%|        try:
  1132|         0|            0|            0|  0.00%|            gamma = solve(self.a, df_f)
  1133|         0|            0|            0|  0.00%|        except LinAlgError:
  1134|         0|            0|            0|  0.00%|            # singular; reset the Jacobian approximation
  1135|         0|            0|            0|  0.00%|            del self.dx[:]
  1136|         0|            0|            0|  0.00%|            del self.df[:]
  1137|         0|            0|            0|  0.00%|            return dx
  1138|         0|            0|            0|  0.00%|
  1139|         0|            0|            0|  0.00%|        for m in range(n):
  1140|         0|            0|            0|  0.00%|            dx += gamma[m]*(self.dx[m] + self.alpha*self.df[m])
  1141|         0|            0|            0|  0.00%|        return dx
  1142|         0|            0|            0|  0.00%|
  1143|         0|            0|            0|  0.00%|    def matvec(self, f):
  1144|         0|            0|            0|  0.00%|        dx = -f/self.alpha
  1145|         0|            0|            0|  0.00%|
  1146|         0|            0|            0|  0.00%|        n = len(self.dx)
  1147|         0|            0|            0|  0.00%|        if n == 0:
  1148|         0|            0|            0|  0.00%|            return dx
  1149|         0|            0|            0|  0.00%|
  1150|         0|            0|            0|  0.00%|        df_f = np.empty(n, dtype=f.dtype)
  1151|         0|            0|            0|  0.00%|        for k in range(n):
  1152|         0|            0|            0|  0.00%|            df_f[k] = vdot(self.df[k], f)
  1153|         0|            0|            0|  0.00%|
  1154|         0|            0|            0|  0.00%|        b = np.empty((n, n), dtype=f.dtype)
  1155|         0|            0|            0|  0.00%|        for i in range(n):
  1156|         0|            0|            0|  0.00%|            for j in range(n):
  1157|         0|            0|            0|  0.00%|                b[i,j] = vdot(self.df[i], self.dx[j])
  1158|         0|            0|            0|  0.00%|                if i == j and self.w0 != 0:
  1159|         0|            0|            0|  0.00%|                    b[i,j] -= vdot(self.df[i], self.df[i])*self.w0**2*self.alpha
  1160|         0|            0|            0|  0.00%|        gamma = solve(b, df_f)
  1161|         0|            0|            0|  0.00%|
  1162|         0|            0|            0|  0.00%|        for m in range(n):
  1163|         0|            0|            0|  0.00%|            dx += gamma[m]*(self.df[m] + self.dx[m]/self.alpha)
  1164|         0|            0|            0|  0.00%|        return dx
  1165|         0|            0|            0|  0.00%|
  1166|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
  1167|         0|            0|            0|  0.00%|        if self.M == 0:
  1168|         0|            0|            0|  0.00%|            return
  1169|         0|            0|            0|  0.00%|
  1170|         0|            0|            0|  0.00%|        self.dx.append(dx)
  1171|         0|            0|            0|  0.00%|        self.df.append(df)
  1172|         0|            0|            0|  0.00%|
  1173|         0|            0|            0|  0.00%|        while len(self.dx) > self.M:
  1174|         0|            0|            0|  0.00%|            self.dx.pop(0)
  1175|         0|            0|            0|  0.00%|            self.df.pop(0)
  1176|         0|            0|            0|  0.00%|
  1177|         0|            0|            0|  0.00%|        n = len(self.dx)
  1178|         0|            0|            0|  0.00%|        a = np.zeros((n, n), dtype=f.dtype)
  1179|         0|            0|            0|  0.00%|
  1180|         0|            0|            0|  0.00%|        for i in range(n):
  1181|         0|            0|            0|  0.00%|            for j in range(i, n):
  1182|         0|            0|            0|  0.00%|                if i == j:
  1183|         0|            0|            0|  0.00%|                    wd = self.w0**2
  1184|         0|            0|            0|  0.00%|                else:
  1185|         0|            0|            0|  0.00%|                    wd = 0
  1186|         0|            0|            0|  0.00%|                a[i,j] = (1+wd)*vdot(self.df[i], self.df[j])
  1187|         0|            0|            0|  0.00%|
  1188|         0|            0|            0|  0.00%|        a += np.triu(a, 1).T.conj()
  1189|         0|            0|            0|  0.00%|        self.a = a
  1190|         0|            0|            0|  0.00%|
  1191|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1192|         0|            0|            0|  0.00%|# Simple iterations
  1193|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1194|         0|            0|            0|  0.00%|
  1195|         0|            0|            0|  0.00%|
  1196|         0|            0|            0|  0.00%|class DiagBroyden(GenericBroyden):
  1197|         0|            0|            0|  0.00%|    """
  1198|         0|            0|            0|  0.00%|    Find a root of a function, using diagonal Broyden Jacobian approximation.
  1199|         0|            0|            0|  0.00%|
  1200|         0|            0|            0|  0.00%|    The Jacobian approximation is derived from previous iterations, by
  1201|         0|            0|            0|  0.00%|    retaining only the diagonal of Broyden matrices.
  1202|         0|            0|            0|  0.00%|
  1203|         0|            0|            0|  0.00%|    .. warning::
  1204|         0|            0|            0|  0.00%|
  1205|         0|            0|            0|  0.00%|       This algorithm may be useful for specific problems, but whether
  1206|         0|            0|            0|  0.00%|       it will work may depend strongly on the problem.
  1207|         0|            0|            0|  0.00%|
  1208|         0|            0|            0|  0.00%|    Parameters
  1209|         0|            0|            0|  0.00%|    ----------
  1210|         0|            0|            0|  0.00%|    %(params_basic)s
  1211|         0|            0|            0|  0.00%|    alpha : float, optional
  1212|         0|            0|            0|  0.00%|        Initial guess for the Jacobian is (-1/alpha).
  1213|         0|            0|            0|  0.00%|    %(params_extra)s
  1214|         0|            0|            0|  0.00%|
  1215|         0|            0|            0|  0.00%|    See Also
  1216|         0|            0|            0|  0.00%|    --------
  1217|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1218|         0|            0|            0|  0.00%|           functions. See ``method=='diagbroyden'`` in particular.
  1219|         0|            0|            0|  0.00%|    """
  1220|         0|            0|            0|  0.00%|
  1221|         0|            0|            0|  0.00%|    def __init__(self, alpha=None):
  1222|         0|            0|            0|  0.00%|        GenericBroyden.__init__(self)
  1223|         0|            0|            0|  0.00%|        self.alpha = alpha
  1224|         0|            0|            0|  0.00%|
  1225|         0|            0|            0|  0.00%|    def setup(self, x, F, func):
  1226|         0|            0|            0|  0.00%|        GenericBroyden.setup(self, x, F, func)
  1227|         0|            0|            0|  0.00%|        self.d = np.full((self.shape[0],), 1 / self.alpha, dtype=self.dtype)
  1228|         0|            0|            0|  0.00%|
  1229|         0|            0|            0|  0.00%|    def solve(self, f, tol=0):
  1230|         0|            0|            0|  0.00%|        return -f / self.d
  1231|         0|            0|            0|  0.00%|
  1232|         0|            0|            0|  0.00%|    def matvec(self, f):
  1233|         0|            0|            0|  0.00%|        return -f * self.d
  1234|         0|            0|            0|  0.00%|
  1235|         0|            0|            0|  0.00%|    def rsolve(self, f, tol=0):
  1236|         0|            0|            0|  0.00%|        return -f / self.d.conj()
  1237|         0|            0|            0|  0.00%|
  1238|         0|            0|            0|  0.00%|    def rmatvec(self, f):
  1239|         0|            0|            0|  0.00%|        return -f * self.d.conj()
  1240|         0|            0|            0|  0.00%|
  1241|         0|            0|            0|  0.00%|    def todense(self):
  1242|         0|            0|            0|  0.00%|        return np.diag(-self.d)
  1243|         0|            0|            0|  0.00%|
  1244|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
  1245|         0|            0|            0|  0.00%|        self.d -= (df + self.d*dx)*dx/dx_norm**2
  1246|         0|            0|            0|  0.00%|
  1247|         0|            0|            0|  0.00%|
  1248|         0|            0|            0|  0.00%|class LinearMixing(GenericBroyden):
  1249|         0|            0|            0|  0.00%|    """
  1250|         0|            0|            0|  0.00%|    Find a root of a function, using a scalar Jacobian approximation.
  1251|         0|            0|            0|  0.00%|
  1252|         0|            0|            0|  0.00%|    .. warning::
  1253|         0|            0|            0|  0.00%|
  1254|         0|            0|            0|  0.00%|       This algorithm may be useful for specific problems, but whether
  1255|         0|            0|            0|  0.00%|       it will work may depend strongly on the problem.
  1256|         0|            0|            0|  0.00%|
  1257|         0|            0|            0|  0.00%|    Parameters
  1258|         0|            0|            0|  0.00%|    ----------
  1259|         0|            0|            0|  0.00%|    %(params_basic)s
  1260|         0|            0|            0|  0.00%|    alpha : float, optional
  1261|         0|            0|            0|  0.00%|        The Jacobian approximation is (-1/alpha).
  1262|         0|            0|            0|  0.00%|    %(params_extra)s
  1263|         0|            0|            0|  0.00%|
  1264|         0|            0|            0|  0.00%|    See Also
  1265|         0|            0|            0|  0.00%|    --------
  1266|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1267|         0|            0|            0|  0.00%|           functions. See ``method=='linearmixing'`` in particular.
  1268|         0|            0|            0|  0.00%|
  1269|         0|            0|            0|  0.00%|    """
  1270|         0|            0|            0|  0.00%|
  1271|         0|            0|            0|  0.00%|    def __init__(self, alpha=None):
  1272|         0|            0|            0|  0.00%|        GenericBroyden.__init__(self)
  1273|         0|            0|            0|  0.00%|        self.alpha = alpha
  1274|         0|            0|            0|  0.00%|
  1275|         0|            0|            0|  0.00%|    def solve(self, f, tol=0):
  1276|         0|            0|            0|  0.00%|        return -f*self.alpha
  1277|         0|            0|            0|  0.00%|
  1278|         0|            0|            0|  0.00%|    def matvec(self, f):
  1279|         0|            0|            0|  0.00%|        return -f/self.alpha
  1280|         0|            0|            0|  0.00%|
  1281|         0|            0|            0|  0.00%|    def rsolve(self, f, tol=0):
  1282|         0|            0|            0|  0.00%|        return -f*np.conj(self.alpha)
  1283|         0|            0|            0|  0.00%|
  1284|         0|            0|            0|  0.00%|    def rmatvec(self, f):
  1285|         0|            0|            0|  0.00%|        return -f/np.conj(self.alpha)
  1286|         0|            0|            0|  0.00%|
  1287|         0|            0|            0|  0.00%|    def todense(self):
  1288|         0|            0|            0|  0.00%|        return np.diag(np.full(self.shape[0], -1/self.alpha))
  1289|         0|            0|            0|  0.00%|
  1290|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
  1291|         0|            0|            0|  0.00%|        pass
  1292|         0|            0|            0|  0.00%|
  1293|         0|            0|            0|  0.00%|
  1294|         0|            0|            0|  0.00%|class ExcitingMixing(GenericBroyden):
  1295|         0|            0|            0|  0.00%|    """
  1296|         0|            0|            0|  0.00%|    Find a root of a function, using a tuned diagonal Jacobian approximation.
  1297|         0|            0|            0|  0.00%|
  1298|         0|            0|            0|  0.00%|    The Jacobian matrix is diagonal and is tuned on each iteration.
  1299|         0|            0|            0|  0.00%|
  1300|         0|            0|            0|  0.00%|    .. warning::
  1301|         0|            0|            0|  0.00%|
  1302|         0|            0|            0|  0.00%|       This algorithm may be useful for specific problems, but whether
  1303|         0|            0|            0|  0.00%|       it will work may depend strongly on the problem.
  1304|         0|            0|            0|  0.00%|
  1305|         0|            0|            0|  0.00%|    See Also
  1306|         0|            0|            0|  0.00%|    --------
  1307|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1308|         0|            0|            0|  0.00%|           functions. See ``method=='excitingmixing'`` in particular.
  1309|         0|            0|            0|  0.00%|
  1310|         0|            0|            0|  0.00%|    Parameters
  1311|         0|            0|            0|  0.00%|    ----------
  1312|         0|            0|            0|  0.00%|    %(params_basic)s
  1313|         0|            0|            0|  0.00%|    alpha : float, optional
  1314|         0|            0|            0|  0.00%|        Initial Jacobian approximation is (-1/alpha).
  1315|         0|            0|            0|  0.00%|    alphamax : float, optional
  1316|         0|            0|            0|  0.00%|        The entries of the diagonal Jacobian are kept in the range
  1317|         0|            0|            0|  0.00%|        ``[alpha, alphamax]``.
  1318|         0|            0|            0|  0.00%|    %(params_extra)s
  1319|         0|            0|            0|  0.00%|    """
  1320|         0|            0|            0|  0.00%|
  1321|         0|            0|            0|  0.00%|    def __init__(self, alpha=None, alphamax=1.0):
  1322|         0|            0|            0|  0.00%|        GenericBroyden.__init__(self)
  1323|         0|            0|            0|  0.00%|        self.alpha = alpha
  1324|         0|            0|            0|  0.00%|        self.alphamax = alphamax
  1325|         0|            0|            0|  0.00%|        self.beta = None
  1326|         0|            0|            0|  0.00%|
  1327|         0|            0|            0|  0.00%|    def setup(self, x, F, func):
  1328|         0|            0|            0|  0.00%|        GenericBroyden.setup(self, x, F, func)
  1329|         0|            0|            0|  0.00%|        self.beta = np.full((self.shape[0],), self.alpha, dtype=self.dtype)
  1330|         0|            0|            0|  0.00%|
  1331|         0|            0|            0|  0.00%|    def solve(self, f, tol=0):
  1332|         0|            0|            0|  0.00%|        return -f*self.beta
  1333|         0|            0|            0|  0.00%|
  1334|         0|            0|            0|  0.00%|    def matvec(self, f):
  1335|         0|            0|            0|  0.00%|        return -f/self.beta
  1336|         0|            0|            0|  0.00%|
  1337|         0|            0|            0|  0.00%|    def rsolve(self, f, tol=0):
  1338|         0|            0|            0|  0.00%|        return -f*self.beta.conj()
  1339|         0|            0|            0|  0.00%|
  1340|         0|            0|            0|  0.00%|    def rmatvec(self, f):
  1341|         0|            0|            0|  0.00%|        return -f/self.beta.conj()
  1342|         0|            0|            0|  0.00%|
  1343|         0|            0|            0|  0.00%|    def todense(self):
  1344|         0|            0|            0|  0.00%|        return np.diag(-1/self.beta)
  1345|         0|            0|            0|  0.00%|
  1346|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
  1347|         0|            0|            0|  0.00%|        incr = f*self.last_f > 0
  1348|         0|            0|            0|  0.00%|        self.beta[incr] += self.alpha
  1349|         0|            0|            0|  0.00%|        self.beta[~incr] = self.alpha
  1350|         0|            0|            0|  0.00%|        np.clip(self.beta, 0, self.alphamax, out=self.beta)
  1351|         0|            0|            0|  0.00%|
  1352|         0|            0|            0|  0.00%|
  1353|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1354|         0|            0|            0|  0.00%|# Iterative/Krylov approximated Jacobians
  1355|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1356|         0|            0|            0|  0.00%|
  1357|         0|            0|            0|  0.00%|class KrylovJacobian(Jacobian):
  1358|         0|            0|            0|  0.00%|    r"""
  1359|         0|            0|            0|  0.00%|    Find a root of a function, using Krylov approximation for inverse Jacobian.
  1360|         0|            0|            0|  0.00%|
  1361|         0|            0|            0|  0.00%|    This method is suitable for solving large-scale problems.
  1362|         0|            0|            0|  0.00%|
  1363|         0|            0|            0|  0.00%|    Parameters
  1364|         0|            0|            0|  0.00%|    ----------
  1365|         0|            0|            0|  0.00%|    %(params_basic)s
  1366|         0|            0|            0|  0.00%|    rdiff : float, optional
  1367|         0|            0|            0|  0.00%|        Relative step size to use in numerical differentiation.
  1368|         0|            0|            0|  0.00%|    method : {'lgmres', 'gmres', 'bicgstab', 'cgs', 'minres'} or function
  1369|         0|            0|            0|  0.00%|        Krylov method to use to approximate the Jacobian.
  1370|         0|            0|            0|  0.00%|        Can be a string, or a function implementing the same interface as
  1371|         0|            0|            0|  0.00%|        the iterative solvers in `scipy.sparse.linalg`.
  1372|         0|            0|            0|  0.00%|
  1373|         0|            0|            0|  0.00%|        The default is `scipy.sparse.linalg.lgmres`.
  1374|         0|            0|            0|  0.00%|    inner_maxiter : int, optional
  1375|         0|            0|            0|  0.00%|        Parameter to pass to the "inner" Krylov solver: maximum number of
  1376|         0|            0|            0|  0.00%|        iterations. Iteration will stop after maxiter steps even if the
  1377|         0|            0|            0|  0.00%|        specified tolerance has not been achieved.
  1378|         0|            0|            0|  0.00%|    inner_M : LinearOperator or InverseJacobian
  1379|         0|            0|            0|  0.00%|        Preconditioner for the inner Krylov iteration.
  1380|         0|            0|            0|  0.00%|        Note that you can use also inverse Jacobians as (adaptive)
  1381|         0|            0|            0|  0.00%|        preconditioners. For example,
  1382|         0|            0|            0|  0.00%|
  1383|         0|            0|            0|  0.00%|        >>> from scipy.optimize.nonlin import BroydenFirst, KrylovJacobian
  1384|         0|            0|            0|  0.00%|        >>> from scipy.optimize.nonlin import InverseJacobian
  1385|         0|            0|            0|  0.00%|        >>> jac = BroydenFirst()
  1386|         0|            0|            0|  0.00%|        >>> kjac = KrylovJacobian(inner_M=InverseJacobian(jac))
  1387|         0|            0|            0|  0.00%|
  1388|         0|            0|            0|  0.00%|        If the preconditioner has a method named 'update', it will be called
  1389|         0|            0|            0|  0.00%|        as ``update(x, f)`` after each nonlinear step, with ``x`` giving
  1390|         0|            0|            0|  0.00%|        the current point, and ``f`` the current function value.
  1391|         0|            0|            0|  0.00%|    outer_k : int, optional
  1392|         0|            0|            0|  0.00%|        Size of the subspace kept across LGMRES nonlinear iterations.
  1393|         0|            0|            0|  0.00%|        See `scipy.sparse.linalg.lgmres` for details.
  1394|         0|            0|            0|  0.00%|    inner_kwargs : kwargs
  1395|         0|            0|            0|  0.00%|        Keyword parameters for the "inner" Krylov solver
  1396|         0|            0|            0|  0.00%|        (defined with `method`). Parameter names must start with
  1397|         0|            0|            0|  0.00%|        the `inner_` prefix which will be stripped before passing on
  1398|         0|            0|            0|  0.00%|        the inner method. See, e.g., `scipy.sparse.linalg.gmres` for details.
  1399|         0|            0|            0|  0.00%|    %(params_extra)s
  1400|         0|            0|            0|  0.00%|
  1401|         0|            0|            0|  0.00%|    See Also
  1402|         0|            0|            0|  0.00%|    --------
  1403|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1404|         0|            0|            0|  0.00%|           functions. See ``method=='krylov'`` in particular.
  1405|         0|            0|            0|  0.00%|    scipy.sparse.linalg.gmres
  1406|         0|            0|            0|  0.00%|    scipy.sparse.linalg.lgmres
  1407|         0|            0|            0|  0.00%|
  1408|         0|            0|            0|  0.00%|    Notes
  1409|         0|            0|            0|  0.00%|    -----
  1410|         0|            0|            0|  0.00%|    This function implements a Newton-Krylov solver. The basic idea is
  1411|         0|            0|            0|  0.00%|    to compute the inverse of the Jacobian with an iterative Krylov
  1412|         0|            0|            0|  0.00%|    method. These methods require only evaluating the Jacobian-vector
  1413|         0|            0|            0|  0.00%|    products, which are conveniently approximated by a finite difference:
  1414|         0|            0|            0|  0.00%|
  1415|         0|            0|            0|  0.00%|    .. math:: J v \approx (f(x + \omega*v/|v|) - f(x)) / \omega
  1416|         0|            0|            0|  0.00%|
  1417|         0|            0|            0|  0.00%|    Due to the use of iterative matrix inverses, these methods can
  1418|         0|            0|            0|  0.00%|    deal with large nonlinear problems.
  1419|         0|            0|            0|  0.00%|
  1420|         0|            0|            0|  0.00%|    SciPy's `scipy.sparse.linalg` module offers a selection of Krylov
  1421|         0|            0|            0|  0.00%|    solvers to choose from. The default here is `lgmres`, which is a
  1422|         0|            0|            0|  0.00%|    variant of restarted GMRES iteration that reuses some of the
  1423|         0|            0|            0|  0.00%|    information obtained in the previous Newton steps to invert
  1424|         0|            0|            0|  0.00%|    Jacobians in subsequent steps.
  1425|         0|            0|            0|  0.00%|
  1426|         0|            0|            0|  0.00%|    For a review on Newton-Krylov methods, see for example [1]_,
  1427|         0|            0|            0|  0.00%|    and for the LGMRES sparse inverse method, see [2]_.
  1428|         0|            0|            0|  0.00%|
  1429|         0|            0|            0|  0.00%|    References
  1430|         0|            0|            0|  0.00%|    ----------
  1431|         0|            0|            0|  0.00%|    .. [1] D.A. Knoll and D.E. Keyes, J. Comp. Phys. 193, 357 (2004).
  1432|         0|            0|            0|  0.00%|           :doi:`10.1016/j.jcp.2003.08.010`
  1433|         0|            0|            0|  0.00%|    .. [2] A.H. Baker and E.R. Jessup and T. Manteuffel,
  1434|         0|            0|            0|  0.00%|           SIAM J. Matrix Anal. Appl. 26, 962 (2005).
  1435|         0|            0|            0|  0.00%|           :doi:`10.1137/S0895479803422014`
  1436|         0|            0|            0|  0.00%|
  1437|         0|            0|            0|  0.00%|    """
  1438|         0|            0|            0|  0.00%|
  1439|         0|            0|            0|  0.00%|    def __init__(self, rdiff=None, method='lgmres', inner_maxiter=20,
  1440|         0|            0|            0|  0.00%|                 inner_M=None, outer_k=10, **kw):
  1441|         0|            0|            0|  0.00%|        self.preconditioner = inner_M
  1442|         0|            0|            0|  0.00%|        self.rdiff = rdiff
  1443|         0|            0|            0|  0.00%|        self.method = dict(
  1444|         0|            0|            0|  0.00%|            bicgstab=scipy.sparse.linalg.bicgstab,
  1445|         0|            0|            0|  0.00%|            gmres=scipy.sparse.linalg.gmres,
  1446|         0|            0|            0|  0.00%|            lgmres=scipy.sparse.linalg.lgmres,
  1447|         0|            0|            0|  0.00%|            cgs=scipy.sparse.linalg.cgs,
  1448|         0|            0|            0|  0.00%|            minres=scipy.sparse.linalg.minres,
  1449|         0|            0|            0|  0.00%|            ).get(method, method)
  1450|         0|            0|            0|  0.00%|
  1451|         0|            0|            0|  0.00%|        self.method_kw = dict(maxiter=inner_maxiter, M=self.preconditioner)
  1452|         0|            0|            0|  0.00%|
  1453|         0|            0|            0|  0.00%|        if self.method is scipy.sparse.linalg.gmres:
  1454|         0|            0|            0|  0.00%|            # Replace GMRES's outer iteration with Newton steps
  1455|         0|            0|            0|  0.00%|            self.method_kw['restrt'] = inner_maxiter
  1456|         0|            0|            0|  0.00%|            self.method_kw['maxiter'] = 1
  1457|         0|            0|            0|  0.00%|            self.method_kw.setdefault('atol', 0)
  1458|         0|            0|            0|  0.00%|        elif self.method is scipy.sparse.linalg.gcrotmk:
  1459|         0|            0|            0|  0.00%|            self.method_kw.setdefault('atol', 0)
  1460|         0|            0|            0|  0.00%|        elif self.method is scipy.sparse.linalg.lgmres:
  1461|         0|            0|            0|  0.00%|            self.method_kw['outer_k'] = outer_k
  1462|         0|            0|            0|  0.00%|            # Replace LGMRES's outer iteration with Newton steps
  1463|         0|            0|            0|  0.00%|            self.method_kw['maxiter'] = 1
  1464|         0|            0|            0|  0.00%|            # Carry LGMRES's `outer_v` vectors across nonlinear iterations
  1465|         0|            0|            0|  0.00%|            self.method_kw.setdefault('outer_v', [])
  1466|         0|            0|            0|  0.00%|            self.method_kw.setdefault('prepend_outer_v', True)
  1467|         0|            0|            0|  0.00%|            # But don't carry the corresponding Jacobian*v products, in case
  1468|         0|            0|            0|  0.00%|            # the Jacobian changes a lot in the nonlinear step
  1469|         0|            0|            0|  0.00%|            #
  1470|         0|            0|            0|  0.00%|            # XXX: some trust-region inspired ideas might be more efficient...
  1471|         0|            0|            0|  0.00%|            #      See e.g., Brown & Saad. But needs to be implemented separately
  1472|         0|            0|            0|  0.00%|            #      since it's not an inexact Newton method.
  1473|         0|            0|            0|  0.00%|            self.method_kw.setdefault('store_outer_Av', False)
  1474|         0|            0|            0|  0.00%|            self.method_kw.setdefault('atol', 0)
  1475|         0|            0|            0|  0.00%|
  1476|         0|            0|            0|  0.00%|        for key, value in kw.items():
  1477|         0|            0|            0|  0.00%|            if not key.startswith('inner_'):
  1478|         0|            0|            0|  0.00%|                raise ValueError("Unknown parameter %s" % key)
  1479|         0|            0|            0|  0.00%|            self.method_kw[key[6:]] = value
  1480|         0|            0|            0|  0.00%|
  1481|         0|            0|            0|  0.00%|    def _update_diff_step(self):
  1482|         0|            0|            0|  0.00%|        mx = abs(self.x0).max()
  1483|         0|            0|            0|  0.00%|        mf = abs(self.f0).max()
  1484|         0|            0|            0|  0.00%|        self.omega = self.rdiff * max(1, mx) / max(1, mf)
  1485|         0|            0|            0|  0.00%|
  1486|         0|            0|            0|  0.00%|    def matvec(self, v):
  1487|         0|            0|            0|  0.00%|        nv = norm(v)
  1488|         0|            0|            0|  0.00%|        if nv == 0:
  1489|         0|            0|            0|  0.00%|            return 0*v
  1490|         0|            0|            0|  0.00%|        sc = self.omega / nv
  1491|         0|            0|            0|  0.00%|        r = (self.func(self.x0 + sc*v) - self.f0) / sc
  1492|         0|            0|            0|  0.00%|        if not np.all(np.isfinite(r)) and np.all(np.isfinite(v)):
  1493|         0|            0|            0|  0.00%|            raise ValueError('Function returned non-finite results')
  1494|         0|            0|            0|  0.00%|        return r
  1495|         0|            0|            0|  0.00%|
  1496|         0|            0|            0|  0.00%|    def solve(self, rhs, tol=0):
  1497|         0|            0|            0|  0.00%|        if 'tol' in self.method_kw:
  1498|         0|            0|            0|  0.00%|            sol, info = self.method(self.op, rhs, **self.method_kw)
  1499|         0|            0|            0|  0.00%|        else:
  1500|         0|            0|            0|  0.00%|            sol, info = self.method(self.op, rhs, tol=tol, **self.method_kw)
  1501|         0|            0|            0|  0.00%|        return sol
  1502|         0|            0|            0|  0.00%|
  1503|         0|            0|            0|  0.00%|    def update(self, x, f):
  1504|         0|            0|            0|  0.00%|        self.x0 = x
  1505|         0|            0|            0|  0.00%|        self.f0 = f
  1506|         0|            0|            0|  0.00%|        self._update_diff_step()
  1507|         0|            0|            0|  0.00%|
  1508|         0|            0|            0|  0.00%|        # Update also the preconditioner, if possible
  1509|         0|            0|            0|  0.00%|        if self.preconditioner is not None:
  1510|         0|            0|            0|  0.00%|            if hasattr(self.preconditioner, 'update'):
  1511|         0|            0|            0|  0.00%|                self.preconditioner.update(x, f)
  1512|         0|            0|            0|  0.00%|
  1513|         0|            0|            0|  0.00%|    def setup(self, x, f, func):
  1514|         0|            0|            0|  0.00%|        Jacobian.setup(self, x, f, func)
  1515|         0|            0|            0|  0.00%|        self.x0 = x
  1516|         0|            0|            0|  0.00%|        self.f0 = f
  1517|         0|            0|            0|  0.00%|        self.op = scipy.sparse.linalg.aslinearoperator(self)
  1518|         0|            0|            0|  0.00%|
  1519|         0|            0|            0|  0.00%|        if self.rdiff is None:
  1520|         0|            0|            0|  0.00%|            self.rdiff = np.finfo(x.dtype).eps ** (1./2)
  1521|         0|            0|            0|  0.00%|
  1522|         0|            0|            0|  0.00%|        self._update_diff_step()
  1523|         0|            0|            0|  0.00%|
  1524|         0|            0|            0|  0.00%|        # Setup also the preconditioner, if possible
  1525|         0|            0|            0|  0.00%|        if self.preconditioner is not None:
  1526|         0|            0|            0|  0.00%|            if hasattr(self.preconditioner, 'setup'):
  1527|         0|            0|            0|  0.00%|                self.preconditioner.setup(x, f, func)
  1528|         0|            0|            0|  0.00%|
  1529|         0|            0|            0|  0.00%|
  1530|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1531|         0|            0|            0|  0.00%|# Wrapper functions
  1532|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1533|         0|            0|            0|  0.00%|
  1534|         0|            0|            0|  0.00%|def _nonlin_wrapper(name, jac):
  1535|         0|            0|            0|  0.00%|    """
  1536|         0|            0|            0|  0.00%|    Construct a solver wrapper with given name and Jacobian approx.
  1537|         0|            0|            0|  0.00%|
  1538|         0|            0|            0|  0.00%|    It inspects the keyword arguments of ``jac.__init__``, and allows to
  1539|         0|            0|            0|  0.00%|    use the same arguments in the wrapper function, in addition to the
  1540|         0|            0|            0|  0.00%|    keyword arguments of `nonlin_solve`
  1541|         0|            0|            0|  0.00%|
  1542|         0|            0|            0|  0.00%|    """
  1543|         0|            0|            0|  0.00%|    signature = _getfullargspec(jac.__init__)
  1544|         0|            0|            0|  0.00%|    args, varargs, varkw, defaults, kwonlyargs, kwdefaults, _ = signature
  1545|         0|            0|            0|  0.00%|    kwargs = list(zip(args[-len(defaults):], defaults))
  1546|         0|            0|            0|  0.00%|    kw_str = ", ".join(["%s=%r" % (k, v) for k, v in kwargs])
  1547|         0|            0|            0|  0.00%|    if kw_str:
  1548|         0|            0|            0|  0.00%|        kw_str = ", " + kw_str
  1549|         0|            0|            0|  0.00%|    kwkw_str = ", ".join(["%s=%s" % (k, k) for k, v in kwargs])
  1550|         0|            0|            0|  0.00%|    if kwkw_str:
  1551|         0|            0|            0|  0.00%|        kwkw_str = kwkw_str + ", "
  1552|         0|            0|            0|  0.00%|    if kwonlyargs:
  1553|         0|            0|            0|  0.00%|        raise ValueError('Unexpected signature %s' % signature)
  1554|         0|            0|            0|  0.00%|
  1555|         0|            0|            0|  0.00%|    # Construct the wrapper function so that its keyword arguments
  1556|         0|            0|            0|  0.00%|    # are visible in pydoc.help etc.
  1557|         0|            0|            0|  0.00%|    wrapper = """
  1558|         0|            0|            0|  0.00%|def %(name)s(F, xin, iter=None %(kw)s, verbose=False, maxiter=None,
  1559|         0|            0|            0|  0.00%|             f_tol=None, f_rtol=None, x_tol=None, x_rtol=None,
  1560|         0|            0|            0|  0.00%|             tol_norm=None, line_search='armijo', callback=None, **kw):
  1561|         0|            0|            0|  0.00%|    jac = %(jac)s(%(kwkw)s **kw)
  1562|         0|            0|            0|  0.00%|    return nonlin_solve(F, xin, jac, iter, verbose, maxiter,
  1563|         0|            0|            0|  0.00%|                        f_tol, f_rtol, x_tol, x_rtol, tol_norm, line_search,
  1564|         0|            0|            0|  0.00%|                        callback)
  1565|         0|            0|            0|  0.00%|"""
  1566|         0|            0|            0|  0.00%|
  1567|         0|            0|            0|  0.00%|    wrapper = wrapper % dict(name=name, kw=kw_str, jac=jac.__name__,
  1568|         0|            0|            0|  0.00%|                             kwkw=kwkw_str)
  1569|         0|            0|            0|  0.00%|    ns = {}
  1570|         0|            0|            0|  0.00%|    ns.update(globals())
  1571|         0|            0|            0|  0.00%|    exec(wrapper, ns)
  1572|         0|            0|            0|  0.00%|    func = ns[name]
  1573|         0|            0|            0|  0.00%|    func.__doc__ = jac.__doc__
  1574|         0|            0|            0|  0.00%|    _set_doc(func)
  1575|         0|            0|            0|  0.00%|    return func
  1576|         0|            0|            0|  0.00%|
  1577|         0|            0|            0|  0.00%|
  1578|         0|            0|            0|  0.00%|broyden1 = _nonlin_wrapper('broyden1', BroydenFirst)
  1579|         0|            0|            0|  0.00%|broyden2 = _nonlin_wrapper('broyden2', BroydenSecond)
  1580|         0|            0|            0|  0.00%|anderson = _nonlin_wrapper('anderson', Anderson)
  1581|         0|            0|            0|  0.00%|linearmixing = _nonlin_wrapper('linearmixing', LinearMixing)
  1582|         0|            0|            0|  0.00%|diagbroyden = _nonlin_wrapper('diagbroyden', DiagBroyden)
  1583|         0|            0|            0|  0.00%|excitingmixing = _nonlin_wrapper('excitingmixing', ExcitingMixing)
  1584|         0|            0|            0|  0.00%|newton_krylov = _nonlin_wrapper('newton_krylov', KrylovJacobian)
File: <string>_235
File duration: 5.03063e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  4.22001e-05|     2.11e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.05312e-06|  4.05312e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.05312e-06|  4.05312e-06|  0.00%|
File: <string>_176
File duration: 4.95911e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  4.19617e-05|  2.09808e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  3.57628e-06|  3.57628e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.05312e-06|  4.05312e-06|  0.00%|
File: <__array_function__ internals>_197
File duration: 4.95911e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  4.95911e-05|  2.47955e-05|  0.00%|
(call)|         1|  1.07288e-05|  1.07288e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.89437e-05|  9.89437e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_96
File duration: 4.91142e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  4.91142e-05|  2.45571e-05|  0.00%|
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.27448e-05|  9.27448e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_121
File duration: 4.88758e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  4.88758e-05|  2.44379e-05|  0.00%|
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000104904|  0.000104904|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_14
File duration: 4.86374e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         8|  4.86374e-05|  6.07967e-06|  0.00%|
File: <__array_function__ internals>_226
File duration: 4.8399e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|   4.8399e-05|  2.41995e-05|  0.00%|
(call)|         1|  3.45707e-05|  3.45707e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000114441|  0.000114441|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_209
File duration: 4.81606e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.40803e-05|  1.20401e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  1.90735e-05|  1.90735e-05|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.00679e-06|  5.00679e-06|  0.00%|
File: <string>_242
File duration: 4.81606e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.88622e-05|  1.94311e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.76837e-06|  4.76837e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.52995e-06|  4.52995e-06|  0.00%|
File: <string>_267
File duration: 4.79221e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.88622e-05|  1.94311e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.29153e-06|  4.29153e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.76837e-06|  4.76837e-06|  0.00%|
File: <string>_120
File duration: 4.79221e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         4|  4.79221e-05|  1.19805e-05|  0.00%|
File: <__array_function__ internals>_196
File duration: 4.74453e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  4.74453e-05|  2.37226e-05|  0.00%|
(call)|         1|   1.0252e-05|   1.0252e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000129461|  0.000129461|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_252
File duration: 4.74453e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  4.74453e-05|  2.37226e-05|  0.00%|
(call)|         1|  1.04904e-05|  1.04904e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000109434|  0.000109434|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_218
File duration: 4.74453e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  4.74453e-05|  2.37226e-05|  0.00%|
(call)|         1|  1.07288e-05|  1.07288e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.36849e-05|  8.36849e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_141
File duration: 4.74453e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  4.74453e-05|  2.37226e-05|  0.00%|
(call)|         1|  2.81334e-05|  2.81334e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000114202|  0.000114202|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_134
File duration: 4.72069e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  4.72069e-05|  2.36034e-05|  0.00%|
(call)|         1|   1.0252e-05|   1.0252e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.27312e-05|  8.27312e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_178
File duration: 4.72069e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  4.72069e-05|  2.36034e-05|  0.00%|
(call)|         1|  1.04904e-05|  1.04904e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.98974e-05|  9.98974e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_243
File duration: 4.673e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|    4.673e-05|   2.3365e-05|  0.00%|
(call)|         1|  1.12057e-05|  1.12057e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000118732|  0.000118732|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_194
File duration: 4.64916e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.83854e-05|  1.91927e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|   3.8147e-06|   3.8147e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.29153e-06|  4.29153e-06|  0.00%|
File: <__array_function__ internals>_136
File duration: 4.64916e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  4.64916e-05|  2.32458e-05|  0.00%|
(call)|         1|  1.07288e-05|  1.07288e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|   0.00012517|   0.00012517|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_257
File duration: 4.62532e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.79086e-05|  1.89543e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.05312e-06|  4.05312e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.29153e-06|  4.29153e-06|  0.00%|
File: <__array_function__ internals>_312
File duration: 4.62532e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  4.62532e-05|  2.31266e-05|  0.00%|
(call)|         1|  1.04904e-05|  1.04904e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.55923e-05|  8.55923e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_292
File duration: 4.62532e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  4.62532e-05|  2.31266e-05|  0.00%|
File: <string>_24
File duration: 4.60148e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.31266e-05|  1.15633e-05|  0.00%|
     2|         1|  4.52995e-06|  4.52995e-06|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         1|  1.35899e-05|  1.35899e-05|  0.00%|
(call)|         1|   2.3365e-05|   2.3365e-05|  0.00%|# /opt/anaconda3/lib/python3.7/abc.py:130 register
     5|         1|  4.76837e-06|  4.76837e-06|  0.00%|
File: <string>_21
File duration: 4.57764e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.31266e-05|  1.15633e-05|  0.00%|
     2|         1|  4.05312e-06|  4.05312e-06|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         1|  1.43051e-05|  1.43051e-05|  0.00%|
(call)|         1|  2.64645e-05|  2.64645e-05|  0.00%|# /opt/anaconda3/lib/python3.7/abc.py:130 register
     5|         1|  4.29153e-06|  4.29153e-06|  0.00%|
File: <string>_275
File duration: 4.57764e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.26498e-05|  1.13249e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  1.85966e-05|  1.85966e-05|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.52995e-06|  4.52995e-06|  0.00%|
File: <__array_function__ internals>_115
File duration: 4.52995e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  4.52995e-05|  2.26498e-05|  0.00%|
(call)|         1|  1.19209e-05|  1.19209e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.65595e-05|  9.65595e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_87
File duration: 4.50611e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         4|  4.50611e-05|  1.12653e-05|  0.00%|
File: <string>_173
File duration: 4.50611e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.67165e-05|  1.83582e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|   3.8147e-06|   3.8147e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.52995e-06|  4.52995e-06|  0.00%|
File: <string>_210
File duration: 4.50611e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.31402e-05|  1.65701e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  5.00679e-06|  5.00679e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  6.91414e-06|  6.91414e-06|  0.00%|
File: <string>_274
File duration: 4.48227e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.71933e-05|  1.85966e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  3.57628e-06|  3.57628e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.05312e-06|  4.05312e-06|  0.00%|
File: <string>_183
File duration: 4.48227e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|   3.6478e-05|   1.8239e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.05312e-06|  4.05312e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.29153e-06|  4.29153e-06|  0.00%|
File: <__array_function__ internals>_165
File duration: 4.48227e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  4.48227e-05|  2.24113e-05|  0.00%|
(call)|         1|   1.0252e-05|   1.0252e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000129223|  0.000129223|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_246
File duration: 4.45843e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  4.45843e-05|  2.22921e-05|  0.00%|
(call)|         1|  1.04904e-05|  1.04904e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.32081e-05|  8.32081e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_239
File duration: 4.36306e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  4.36306e-05|  2.18153e-05|  0.00%|
(call)|         1|  2.76566e-05|  2.76566e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.34601e-05|  9.34601e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_247
File duration: 4.33922e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.43323e-05|  1.71661e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.05312e-06|  4.05312e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.00679e-06|  5.00679e-06|  0.00%|
File: <__array_function__ internals>_63
File duration: 4.33922e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  4.33922e-05|  2.16961e-05|  0.00%|
(call)|         1|  1.00136e-05|  1.00136e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.32081e-05|  8.32081e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_20
File duration: 4.29153e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.95503e-05|  9.77516e-06|  0.00%|
     2|         1|   3.8147e-06|   3.8147e-06|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         1|  1.50204e-05|  1.50204e-05|  0.00%|
(call)|         1|  0.000172853|  0.000172853|  0.00%|# /opt/anaconda3/lib/python3.7/abc.py:130 register
     5|         1|  4.52995e-06|  4.52995e-06|  0.00%|
File: <string>_226
File duration: 4.29153e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.38554e-05|  1.69277e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.29153e-06|  4.29153e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.76837e-06|  4.76837e-06|  0.00%|
File: <string>_250
File duration: 4.29153e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.31402e-05|  1.65701e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.29153e-06|  4.29153e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.48363e-06|  5.48363e-06|  0.00%|
File: <__array_function__ internals>_277
File duration: 4.29153e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  4.29153e-05|  2.14577e-05|  0.00%|
(call)|         1|  1.09673e-05|  1.09673e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.36849e-05|  8.36849e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_93
File duration: 4.24385e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         6|  4.24385e-05|  7.07308e-06|  0.00%|
File: <string>_338
File duration: 4.22001e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|        10|  4.22001e-05|  4.22001e-06|  0.00%|
File: <string>_175
File duration: 4.22001e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.29018e-05|  1.64509e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.52995e-06|  4.52995e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.76837e-06|  4.76837e-06|  0.00%|
File: <__array_function__ internals>_8
File duration: 4.22001e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  4.22001e-05|     2.11e-05|  0.00%|
(call)|         1|  1.19209e-05|  1.19209e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000107527|  0.000107527|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_211
File duration: 4.19617e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.29018e-05|  1.64509e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.05312e-06|  4.05312e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.00679e-06|  5.00679e-06|  0.00%|
File: <string>_227
File duration: 4.19617e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.26633e-05|  1.63317e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.52995e-06|  4.52995e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.76837e-06|  4.76837e-06|  0.00%|
File: <string>_265
File duration: 4.14848e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.19481e-05|   1.5974e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.52995e-06|  4.52995e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.00679e-06|  5.00679e-06|  0.00%|
File: <string>_246
File duration: 4.12464e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.26633e-05|  1.63317e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.05312e-06|  4.05312e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.52995e-06|  4.52995e-06|  0.00%|
File: <string>_252
File duration: 4.12464e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.19481e-05|   1.5974e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.05312e-06|  4.05312e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.24521e-06|  5.24521e-06|  0.00%|
File: <string>_190
File duration: 4.1008e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.19481e-05|   1.5974e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.29153e-06|  4.29153e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.76837e-06|  4.76837e-06|  0.00%|
File: <string>_46
File duration: 4.1008e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|   4.1008e-05|   2.0504e-05|  0.00%|
File: <string>_184
File duration: 4.07696e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.17097e-05|  1.58548e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.29153e-06|  4.29153e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.76837e-06|  4.76837e-06|  0.00%|
File: <string>_249
File duration: 4.07696e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.19481e-05|   1.5974e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.05312e-06|  4.05312e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.76837e-06|  4.76837e-06|  0.00%|
File: <__array_function__ internals>_222
File duration: 4.07696e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  4.07696e-05|  2.03848e-05|  0.00%|
(call)|         1|  1.12057e-05|  1.12057e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.60827e-05|  9.60827e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_233
File duration: 4.02927e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.19481e-05|   1.5974e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.05312e-06|  4.05312e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.29153e-06|  4.29153e-06|  0.00%|
File: <string>_200
File duration: 4.00543e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.17097e-05|  1.58548e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|   3.8147e-06|   3.8147e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.52995e-06|  4.52995e-06|  0.00%|
File: <string>_188
File duration: 3.98159e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.26633e-05|  1.63317e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  3.33786e-06|  3.33786e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|   3.8147e-06|   3.8147e-06|  0.00%|
File: <string>_219
File duration: 3.98159e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.12328e-05|  1.56164e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.05312e-06|  4.05312e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.52995e-06|  4.52995e-06|  0.00%|
File: <__array_function__ internals>_223
File duration: 3.98159e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.98159e-05|   1.9908e-05|  0.00%|
(call)|         1|  1.07288e-05|  1.07288e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.13007e-05|  8.13007e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_283
File duration: 3.98159e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  3.98159e-05|   1.9908e-05|  0.00%|
File: <string>_169
File duration: 3.95775e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.14713e-05|  1.57356e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|   3.8147e-06|   3.8147e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.29153e-06|  4.29153e-06|  0.00%|
File: <string>_231
File duration: 3.95775e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.14713e-05|  1.57356e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|   3.8147e-06|   3.8147e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.29153e-06|  4.29153e-06|  0.00%|
File: <string>_254
File duration: 3.95775e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.09944e-05|  1.54972e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.05312e-06|  4.05312e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.52995e-06|  4.52995e-06|  0.00%|
File: <string>_241
File duration: 3.95775e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.12328e-05|  1.56164e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|   3.8147e-06|   3.8147e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.52995e-06|  4.52995e-06|  0.00%|
File: <__array_function__ internals>_280
File duration: 3.95775e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.95775e-05|  1.97887e-05|  0.00%|
(call)|         1|  1.04904e-05|  1.04904e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000129461|  0.000129461|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <attrs generated init attr._version_info.VersionInfo>
File duration: 3.93391e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         3|  1.85966e-05|  6.19888e-06|  0.00%|def __init__(self, year, minor, micro, releaselevel):
     2|         1|  5.00679e-06|  5.00679e-06|  0.00%|    _setattr = _cached_setattr.__get__(self, self.__class__)
     3|         1|  4.76837e-06|  4.76837e-06|  0.00%|    _setattr('year', year)
     4|         1|   3.8147e-06|   3.8147e-06|  0.00%|    _setattr('minor', minor)
     5|         1|  3.57628e-06|  3.57628e-06|  0.00%|    _setattr('micro', micro)
     6|         1|  3.57628e-06|  3.57628e-06|  0.00%|    _setattr('releaselevel', releaselevel)
File: <string>_223
File duration: 3.93391e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.02792e-05|  1.51396e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.29153e-06|  4.29153e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.76837e-06|  4.76837e-06|  0.00%|
File: <string>_195
File duration: 3.93391e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.09944e-05|  1.54972e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|   3.8147e-06|   3.8147e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.52995e-06|  4.52995e-06|  0.00%|
File: <string>_215
File duration: 3.93391e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.00407e-05|  1.50204e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.29153e-06|  4.29153e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.00679e-06|  5.00679e-06|  0.00%|
File: <string>_166
File duration: 3.93391e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.00407e-05|  1.50204e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.52995e-06|  4.52995e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.76837e-06|  4.76837e-06|  0.00%|
File: <string>_111
File duration: 3.93391e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         4|  3.93391e-05|  9.83477e-06|  0.00%|
File: <__array_function__ internals>_147
File duration: 3.93391e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.93391e-05|  1.96695e-05|  0.00%|
(call)|         1|   1.0252e-05|   1.0252e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.32081e-05|  8.32081e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_206
File duration: 3.93391e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.93391e-05|  1.96695e-05|  0.00%|
(call)|         1|  1.16825e-05|  1.16825e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.39233e-05|  8.39233e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_260
File duration: 3.91006e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.91006e-05|  1.95503e-05|  0.00%|
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000141382|  0.000141382|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_81
File duration: 3.91006e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  3.91006e-05|  1.95503e-05|  0.00%|
File: <string>_168
File duration: 3.88622e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.02792e-05|  1.51396e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.05312e-06|  4.05312e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.52995e-06|  4.52995e-06|  0.00%|
File: <string>_212
File duration: 3.88622e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.02792e-05|  1.51396e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.05312e-06|  4.05312e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.52995e-06|  4.52995e-06|  0.00%|
File: <string>_203
File duration: 3.88622e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.95639e-05|   1.4782e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.29153e-06|  4.29153e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.00679e-06|  5.00679e-06|  0.00%|
File: <__array_function__ internals>_284
File duration: 3.88622e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.88622e-05|  1.94311e-05|  0.00%|
(call)|         1|  1.23978e-05|  1.23978e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.56059e-05|  9.56059e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_172
File duration: 3.86238e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.02792e-05|  1.51396e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|   3.8147e-06|   3.8147e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.52995e-06|  4.52995e-06|  0.00%|
File: <string>_177
File duration: 3.86238e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.95639e-05|   1.4782e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.05312e-06|  4.05312e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.00679e-06|  5.00679e-06|  0.00%|
File: <string>_238
File duration: 3.86238e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.02792e-05|  1.51396e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.05312e-06|  4.05312e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.29153e-06|  4.29153e-06|  0.00%|
File: <string>_91
File duration: 3.83854e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         8|  3.83854e-05|  4.79817e-06|  0.00%|
File: <string>_222
File duration: 3.83854e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.00407e-05|  1.50204e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|   3.8147e-06|   3.8147e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.52995e-06|  4.52995e-06|  0.00%|
File: <string>_186
File duration: 3.83854e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.00407e-05|  1.50204e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|   3.8147e-06|   3.8147e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.52995e-06|  4.52995e-06|  0.00%|
File: <string>_198
File duration: 3.83854e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.00407e-05|  1.50204e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|   3.8147e-06|   3.8147e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.52995e-06|  4.52995e-06|  0.00%|
File: <string>_232
File duration: 3.83854e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.00407e-05|  1.50204e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|   3.8147e-06|   3.8147e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.52995e-06|  4.52995e-06|  0.00%|
File: <string>_234
File duration: 3.83854e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.00407e-05|  1.50204e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|   3.8147e-06|   3.8147e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.52995e-06|  4.52995e-06|  0.00%|
File: <string>_140
File duration: 3.83854e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  3.83854e-05|  1.91927e-05|  0.00%|
(call)|         2|  2.31266e-05|  1.15633e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/jit/annotations.py:48 __getitem__
(call)|         1|  2.71797e-05|  2.71797e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
File: <string>_244
File duration: 3.8147e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.02792e-05|  1.51396e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  3.57628e-06|  3.57628e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.29153e-06|  4.29153e-06|  0.00%|
File: <string>_163
File duration: 3.8147e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.93255e-05|  1.46627e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.05312e-06|  4.05312e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.76837e-06|  4.76837e-06|  0.00%|
File: <attrs generated init attr.validators._IsCallableValidator>
File duration: 3.79086e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         7|  2.31266e-05|   3.3038e-06|  0.00%|def __init__(self, ):
     2|         5|   1.4782e-05|  2.95639e-06|  0.00%|    pass
File: <string>_197
File duration: 3.79086e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.00407e-05|  1.50204e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  3.57628e-06|  3.57628e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.29153e-06|  4.29153e-06|  0.00%|
File: <string>_199
File duration: 3.79086e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.95639e-05|   1.4782e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|   3.8147e-06|   3.8147e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.52995e-06|  4.52995e-06|  0.00%|
File: <__array_function__ internals>_299
File duration: 3.79086e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.79086e-05|  1.89543e-05|  0.00%|
(call)|         1|  1.21593e-05|  1.21593e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.44138e-05|  9.44138e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_30
File duration: 3.79086e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.79086e-05|  1.89543e-05|  0.00%|
(call)|         1|  1.12057e-05|  1.12057e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000113249|  0.000113249|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_256
File duration: 3.76701e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.95639e-05|   1.4782e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|   3.8147e-06|   3.8147e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.29153e-06|  4.29153e-06|  0.00%|
File: <string>_68
File duration: 3.76701e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  3.76701e-05|  1.88351e-05|  0.00%|
File: <string>_69
File duration: 3.76701e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  3.76701e-05|  1.88351e-05|  0.00%|
File: <string>_112
File duration: 3.76701e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  3.76701e-05|  1.88351e-05|  0.00%|
File: <string>_239
File duration: 3.74317e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.88486e-05|  1.44243e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.05312e-06|  4.05312e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.52995e-06|  4.52995e-06|  0.00%|
File: <string>_192
File duration: 3.74317e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.90871e-05|  1.45435e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|   3.8147e-06|   3.8147e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.52995e-06|  4.52995e-06|  0.00%|
File: <string>_236
File duration: 3.74317e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.98023e-05|  1.49012e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  3.57628e-06|  3.57628e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.05312e-06|  4.05312e-06|  0.00%|
File: <string>_214
File duration: 3.74317e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.90871e-05|  1.45435e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|   3.8147e-06|   3.8147e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.52995e-06|  4.52995e-06|  0.00%|
File: <string>_207
File duration: 3.74317e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.93255e-05|  1.46627e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|   3.8147e-06|   3.8147e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.29153e-06|  4.29153e-06|  0.00%|
File: <string>_136
File duration: 3.74317e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  3.74317e-05|  1.87159e-05|  0.00%|
(call)|         2|   2.3365e-05|  1.16825e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/jit/annotations.py:48 __getitem__
(call)|         1|  2.71797e-05|  2.71797e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
File: <__array_function__ internals>_240
File duration: 3.74317e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.74317e-05|  1.87159e-05|  0.00%|
(call)|         1|  1.16825e-05|  1.16825e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000133514|  0.000133514|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_331
File duration: 3.74317e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  3.74317e-05|  1.87159e-05|  0.00%|
File: <string>_271
File duration: 3.71933e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.76566e-05|  1.38283e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.29153e-06|  4.29153e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.24521e-06|  5.24521e-06|  0.00%|
File: <string>_258
File duration: 3.71933e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.88486e-05|  1.44243e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|   3.8147e-06|   3.8147e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.52995e-06|  4.52995e-06|  0.00%|
File: <__array_function__ internals>_228
File duration: 3.71933e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.71933e-05|  1.85966e-05|  0.00%|
(call)|         1|  1.21593e-05|  1.21593e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.58443e-05|  9.58443e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_204
File duration: 3.69549e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.83718e-05|  1.41859e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|   3.8147e-06|   3.8147e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.76837e-06|  4.76837e-06|  0.00%|
File: <string>_201
File duration: 3.69549e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.86102e-05|  1.43051e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|   3.8147e-06|   3.8147e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.52995e-06|  4.52995e-06|  0.00%|
File: <string>_191
File duration: 3.69549e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.83718e-05|  1.41859e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.29153e-06|  4.29153e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.29153e-06|  4.29153e-06|  0.00%|
File: <string>_243
File duration: 3.67165e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.86102e-05|  1.43051e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  3.57628e-06|  3.57628e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.52995e-06|  4.52995e-06|  0.00%|
File: <string>_144
File duration: 3.67165e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  3.67165e-05|  1.83582e-05|  0.00%|
(call)|         1|  9.29832e-06|  9.29832e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/jit/annotations.py:48 __getitem__
File: <string>_282
File duration: 3.67165e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  3.67165e-05|  1.83582e-05|  0.00%|
File: <string>_255
File duration: 3.6478e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.86102e-05|  1.43051e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  3.57628e-06|  3.57628e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.29153e-06|  4.29153e-06|  0.00%|
File: <string>_213
File duration: 3.62396e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.81334e-05|  1.40667e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|   3.8147e-06|   3.8147e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.29153e-06|  4.29153e-06|  0.00%|
File: <string>_314
File duration: 3.62396e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  3.62396e-05|  1.81198e-05|  0.00%|
File: <__array_function__ internals>_308
File duration: 3.62396e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.62396e-05|  1.81198e-05|  0.00%|
(call)|         1|  1.12057e-05|  1.12057e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|   8.9407e-05|   8.9407e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_196
File duration: 3.60012e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|   2.7895e-05|  1.39475e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|   3.8147e-06|   3.8147e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.29153e-06|  4.29153e-06|  0.00%|
File: <string>_202
File duration: 3.60012e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|   2.7895e-05|  1.39475e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|   3.8147e-06|   3.8147e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.29153e-06|  4.29153e-06|  0.00%|
File: <string>_187
File duration: 3.60012e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|   2.7895e-05|  1.39475e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  3.57628e-06|  3.57628e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.52995e-06|  4.52995e-06|  0.00%|
File: <__array_function__ internals>_124
File duration: 3.60012e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.60012e-05|  1.80006e-05|  0.00%|
(call)|         1|  1.16825e-05|  1.16825e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.03606e-05|  9.03606e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_227
File duration: 3.60012e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.60012e-05|  1.80006e-05|  0.00%|
(call)|         1|  1.21593e-05|  1.21593e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|   9.5129e-05|   9.5129e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_266
File duration: 3.60012e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.60012e-05|  1.80006e-05|  0.00%|
(call)|         1|  1.19209e-05|  1.19209e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.39369e-05|  9.39369e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_161
File duration: 3.57628e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.76566e-05|  1.38283e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|   3.8147e-06|   3.8147e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.29153e-06|  4.29153e-06|  0.00%|
File: <__array_function__ internals>_56
File duration: 3.57628e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.57628e-05|  1.78814e-05|  0.00%|
(call)|         1|  2.12193e-05|  2.12193e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000136375|  0.000136375|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_185
File duration: 3.55244e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.59876e-05|  1.29938e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.29153e-06|  4.29153e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.24521e-06|  5.24521e-06|  0.00%|
File: <string>_220
File duration: 3.55244e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.76566e-05|  1.38283e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|   3.8147e-06|   3.8147e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.05312e-06|  4.05312e-06|  0.00%|
File: <string>_179
File duration: 3.55244e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.71797e-05|  1.35899e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.05312e-06|  4.05312e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.29153e-06|  4.29153e-06|  0.00%|
File: <__array_function__ internals>_116
File duration: 3.55244e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.55244e-05|  1.77622e-05|  0.00%|
(call)|         1|  1.09673e-05|  1.09673e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.13143e-05|  9.13143e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_317
File duration: 3.55244e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  3.55244e-05|  1.77622e-05|  0.00%|
File: <__array_function__ internals>_104
File duration: 3.55244e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.55244e-05|  1.77622e-05|  0.00%|
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.25064e-05|  9.25064e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_214
File duration: 3.55244e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.55244e-05|  1.77622e-05|  0.00%|
(call)|         1|  1.21593e-05|  1.21593e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000118256|  0.000118256|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_185
File duration: 3.55244e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.55244e-05|  1.77622e-05|  0.00%|
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.44138e-05|  9.44138e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_266
File duration: 3.52859e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|   2.6226e-05|   1.3113e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.05312e-06|  4.05312e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.00679e-06|  5.00679e-06|  0.00%|
File: <string>_273
File duration: 3.52859e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.71797e-05|  1.35899e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.05312e-06|  4.05312e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.05312e-06|  4.05312e-06|  0.00%|
File: <__array_function__ internals>_105
File duration: 3.52859e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.52859e-05|   1.7643e-05|  0.00%|
(call)|         1|  1.12057e-05|  1.12057e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|   0.00012517|   0.00012517|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_182
File duration: 3.52859e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.52859e-05|   1.7643e-05|  0.00%|
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000110865|  0.000110865|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_171
File duration: 3.52859e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.52859e-05|   1.7643e-05|  0.00%|
(call)|         1|  1.07288e-05|  1.07288e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|   0.00013566|   0.00013566|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_112
File duration: 3.52859e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.52859e-05|   1.7643e-05|  0.00%|
(call)|         1|  1.19209e-05|  1.19209e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.53674e-05|  9.53674e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_263
File duration: 3.50475e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.55108e-05|  1.27554e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.29153e-06|  4.29153e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.24521e-06|  5.24521e-06|  0.00%|
File: <__array_function__ internals>_188
File duration: 3.50475e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.50475e-05|  1.75238e-05|  0.00%|
(call)|         1|  1.23978e-05|  1.23978e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.63211e-05|  9.63211e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_187
File duration: 3.50475e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.50475e-05|  1.75238e-05|  0.00%|
(call)|         1|  1.19209e-05|  1.19209e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000109911|  0.000109911|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_261
File duration: 3.50475e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.50475e-05|  1.75238e-05|  0.00%|
(call)|         1|  1.85966e-05|  1.85966e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.89301e-05|  8.89301e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_138
File duration: 3.50475e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  3.50475e-05|  1.75238e-05|  0.00%|
(call)|         2|  2.09808e-05|  1.04904e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/jit/annotations.py:48 __getitem__
(call)|         1|  2.45571e-05|  2.45571e-05|  0.00%|# /opt/anaconda3/lib/python3.7/typing.py:248 inner
File: <__array_function__ internals>_242
File duration: 3.50475e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.50475e-05|  1.75238e-05|  0.00%|
(call)|         1|  1.16825e-05|  1.16825e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000158072|  0.000158072|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_167
File duration: 3.48091e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.55108e-05|  1.27554e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.29153e-06|  4.29153e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.00679e-06|  5.00679e-06|  0.00%|
File: <__array_function__ internals>_111
File duration: 3.48091e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.48091e-05|  1.74046e-05|  0.00%|
(call)|         1|  1.16825e-05|  1.16825e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.44138e-05|  9.44138e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_307
File duration: 3.48091e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.48091e-05|  1.74046e-05|  0.00%|
(call)|         1|  1.19209e-05|  1.19209e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.98838e-05|  8.98838e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_102
File duration: 3.48091e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.48091e-05|  1.74046e-05|  0.00%|
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000108004|  0.000108004|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_291
File duration: 3.48091e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.48091e-05|  1.74046e-05|  0.00%|
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000106812|  0.000106812|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_122
File duration: 3.48091e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.48091e-05|  1.74046e-05|  0.00%|
(call)|         1|  1.12057e-05|  1.12057e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000121832|  0.000121832|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_96
File duration: 3.48091e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  3.48091e-05|  1.74046e-05|  0.00%|
(call)|         1|   0.00449705|   0.00449705|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/rcsetup.py:775 cycler
File: <__array_function__ internals>_92
File duration: 3.48091e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.48091e-05|  1.74046e-05|  0.00%|
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.29832e-05|  9.29832e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_260
File duration: 3.45707e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.52724e-05|  1.26362e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.29153e-06|  4.29153e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.00679e-06|  5.00679e-06|  0.00%|
File: <string>_237
File duration: 3.45707e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.55108e-05|  1.27554e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.52995e-06|  4.52995e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.52995e-06|  4.52995e-06|  0.00%|
File: <__array_function__ internals>_213
File duration: 3.45707e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.45707e-05|  1.72853e-05|  0.00%|
(call)|         1|  1.16825e-05|  1.16825e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000108242|  0.000108242|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_103
File duration: 3.45707e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.45707e-05|  1.72853e-05|  0.00%|
(call)|         1|  1.12057e-05|  1.12057e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000106812|  0.000106812|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_267
File duration: 3.45707e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.45707e-05|  1.72853e-05|  0.00%|
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.44138e-05|  9.44138e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_189
File duration: 3.45707e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.45707e-05|  1.72853e-05|  0.00%|
(call)|         1|  1.19209e-05|  1.19209e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000103712|  0.000103712|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_119
File duration: 3.45707e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.45707e-05|  1.72853e-05|  0.00%|
(call)|         1|  1.04904e-05|  1.04904e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.98838e-05|  8.98838e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_151
File duration: 3.45707e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.45707e-05|  1.72853e-05|  0.00%|
(call)|         1|  1.09673e-05|  1.09673e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.05991e-05|  9.05991e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_186
File duration: 3.45707e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.45707e-05|  1.72853e-05|  0.00%|
(call)|         1|  1.09673e-05|  1.09673e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000178576|  0.000178576|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <attrs generated eq attr.validators._OptionalValidator>
File duration: 3.43323e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  3.43323e-05|  1.71661e-05|  0.00%|def __eq__(self, other):
     2|         0|            0|            0|  0.00%|    if other.__class__ is not self.__class__:
     3|         0|            0|            0|  0.00%|        return NotImplemented
     4|         0|            0|            0|  0.00%|    return  (
     5|         0|            0|            0|  0.00%|        self.validator,
     6|         0|            0|            0|  0.00%|    ) == (
     7|         0|            0|            0|  0.00%|        other.validator,
     8|         0|            0|            0|  0.00%|    )
File: <__array_function__ internals>_268
File duration: 3.43323e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.43323e-05|  1.71661e-05|  0.00%|
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.10759e-05|  9.10759e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_108
File duration: 3.43323e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.43323e-05|  1.71661e-05|  0.00%|
(call)|         1|  1.21593e-05|  1.21593e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.39369e-05|  9.39369e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_259
File duration: 3.43323e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.43323e-05|  1.71661e-05|  0.00%|
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.29832e-05|  9.29832e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_138
File duration: 3.43323e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.43323e-05|  1.71661e-05|  0.00%|
(call)|         1|  1.09673e-05|  1.09673e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.72748e-05|  9.72748e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_232
File duration: 3.43323e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.43323e-05|  1.71661e-05|  0.00%|
(call)|         1|  1.04904e-05|  1.04904e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000107288|  0.000107288|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_275
File duration: 3.43323e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.43323e-05|  1.71661e-05|  0.00%|
(call)|         1|  1.07288e-05|  1.07288e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000111341|  0.000111341|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_262
File duration: 3.40939e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|   2.5034e-05|   1.2517e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.29153e-06|  4.29153e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.76837e-06|  4.76837e-06|  0.00%|
File: <string>_261
File duration: 3.40939e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|   2.5034e-05|   1.2517e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.05312e-06|  4.05312e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  5.00679e-06|  5.00679e-06|  0.00%|
File: <__array_function__ internals>_78
File duration: 3.40939e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.40939e-05|  1.70469e-05|  0.00%|
(call)|         1|  1.09673e-05|  1.09673e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000115871|  0.000115871|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_58
File duration: 3.40939e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.40939e-05|  1.70469e-05|  0.00%|
(call)|         1|  2.69413e-05|  2.69413e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000105619|  0.000105619|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_110
File duration: 3.40939e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.40939e-05|  1.70469e-05|  0.00%|
(call)|         1|  1.19209e-05|  1.19209e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.46522e-05|  9.46522e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <attrs generated init attr.validators._DeepIterable>
File duration: 3.40939e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  3.40939e-05|  1.70469e-05|  0.00%|def __init__(self, member_validator, iterable_validator=attr_dict['iterable_validator'].default):
     2|         0|            0|            0|  0.00%|    self.member_validator = member_validator
     3|         0|            0|            0|  0.00%|    self.iterable_validator = iterable_validator
     4|         0|            0|            0|  0.00%|    if _config._run_validators is True:
     5|         0|            0|            0|  0.00%|        __attr_validator_member_validator(self, __attr_member_validator, self.member_validator)
     6|         0|            0|            0|  0.00%|        __attr_validator_iterable_validator(self, __attr_iterable_validator, self.iterable_validator)
File: <__array_function__ internals>_286
File duration: 3.40939e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.40939e-05|  1.70469e-05|  0.00%|
(call)|         1|  1.09673e-05|  1.09673e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000102282|  0.000102282|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_35
File duration: 3.40939e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.40939e-05|  1.70469e-05|  0.00%|
(call)|         1|  1.16825e-05|  1.16825e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.67979e-05|  9.67979e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_314
File duration: 3.38554e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.38554e-05|  1.69277e-05|  0.00%|
(call)|         1|  1.09673e-05|  1.09673e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.58307e-05|  8.58307e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_101
File duration: 3.38554e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.38554e-05|  1.69277e-05|  0.00%|
(call)|         1|  1.12057e-05|  1.12057e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000101089|  0.000101089|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_281
File duration: 3.38554e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.38554e-05|  1.69277e-05|  0.00%|
(call)|         1|   1.0252e-05|   1.0252e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000398159|  0.000398159|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_183
File duration: 3.38554e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.38554e-05|  1.69277e-05|  0.00%|
(call)|         1|  1.09673e-05|  1.09673e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.10759e-05|  9.10759e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_240
File duration: 3.3617e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|   2.6226e-05|   1.3113e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  3.33786e-06|  3.33786e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.05312e-06|  4.05312e-06|  0.00%|
File: <__array_function__ internals>_107
File duration: 3.3617e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|   3.3617e-05|  1.68085e-05|  0.00%|
(call)|         1|  1.12057e-05|  1.12057e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.20296e-05|  9.20296e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_145
File duration: 3.3617e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|   3.3617e-05|  1.68085e-05|  0.00%|
(call)|         1|  1.07288e-05|  1.07288e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000119925|  0.000119925|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_94
File duration: 3.3617e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|   3.3617e-05|  1.68085e-05|  0.00%|
(call)|         1|  1.12057e-05|  1.12057e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|    9.799e-05|    9.799e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_97
File duration: 3.3617e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|   3.3617e-05|  1.68085e-05|  0.00%|
(call)|         1|  2.69413e-05|  2.69413e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.91685e-05|  8.91685e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_73
File duration: 3.3617e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|   3.3617e-05|  1.68085e-05|  0.00%|
(call)|         1|   2.6226e-05|   2.6226e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000102997|  0.000102997|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_106
File duration: 3.3617e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|   3.3617e-05|  1.68085e-05|  0.00%|
(call)|         1|  1.12057e-05|  1.12057e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.36985e-05|  9.36985e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_245
File duration: 3.33786e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|   2.6226e-05|   1.3113e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  3.33786e-06|  3.33786e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|   3.8147e-06|   3.8147e-06|  0.00%|
File: <string>_216
File duration: 3.33786e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.59876e-05|  1.29938e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  3.57628e-06|  3.57628e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|   3.8147e-06|   3.8147e-06|  0.00%|
File: <string>_182
File duration: 3.33786e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.45571e-05|  1.22786e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.05312e-06|  4.05312e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.76837e-06|  4.76837e-06|  0.00%|
File: <__array_function__ internals>_80
File duration: 3.33786e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.33786e-05|  1.66893e-05|  0.00%|
(call)|         1|  1.09673e-05|  1.09673e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.86917e-05|  8.86917e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_109
File duration: 3.33786e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.33786e-05|  1.66893e-05|  0.00%|
(call)|         1|  1.09673e-05|  1.09673e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.17912e-05|  9.17912e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_22
File duration: 3.33786e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.33786e-05|  1.66893e-05|  0.00%|
(call)|         1|  1.21593e-05|  1.21593e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.84533e-05|  8.84533e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_139
File duration: 3.33786e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.33786e-05|  1.66893e-05|  0.00%|
(call)|         1|  1.12057e-05|  1.12057e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.79765e-05|  8.79765e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_272
File duration: 3.33786e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.33786e-05|  1.66893e-05|  0.00%|
(call)|         1|  1.12057e-05|  1.12057e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000108242|  0.000108242|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_91
File duration: 3.33786e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.33786e-05|  1.66893e-05|  0.00%|
(call)|         1|  1.09673e-05|  1.09673e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000130415|  0.000130415|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_258
File duration: 3.33786e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.33786e-05|  1.66893e-05|  0.00%|
(call)|         1|  2.76566e-05|  2.76566e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000128746|  0.000128746|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_81
File duration: 3.33786e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.33786e-05|  1.66893e-05|  0.00%|
(call)|         1|  1.04904e-05|  1.04904e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.03606e-05|  9.03606e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_137
File duration: 3.33786e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.33786e-05|  1.66893e-05|  0.00%|
(call)|         1|  1.07288e-05|  1.07288e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.60691e-05|  8.60691e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_292
File duration: 3.33786e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.33786e-05|  1.66893e-05|  0.00%|
(call)|         1|  1.09673e-05|  1.09673e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.91685e-05|  8.91685e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_287
File duration: 3.31402e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.31402e-05|  1.65701e-05|  0.00%|
(call)|         1|  1.07288e-05|  1.07288e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.65459e-05|  8.65459e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_99
File duration: 3.31402e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.31402e-05|  1.65701e-05|  0.00%|
(call)|         1|  1.09673e-05|  1.09673e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.91685e-05|  8.91685e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_273
File duration: 3.31402e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.31402e-05|  1.65701e-05|  0.00%|
(call)|         1|  1.12057e-05|  1.12057e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.01222e-05|  9.01222e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_244
File duration: 3.31402e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.31402e-05|  1.65701e-05|  0.00%|
(call)|         1|  3.26633e-05|  3.26633e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.53539e-05|  8.53539e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_268
File duration: 3.29018e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.43187e-05|  1.21593e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.05312e-06|  4.05312e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.52995e-06|  4.52995e-06|  0.00%|
File: <__array_function__ internals>_306
File duration: 3.29018e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.29018e-05|  1.64509e-05|  0.00%|
(call)|         1|  1.07288e-05|  1.07288e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000128269|  0.000128269|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_148
File duration: 3.29018e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.29018e-05|  1.64509e-05|  0.00%|
(call)|         1|  1.07288e-05|  1.07288e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|   8.9407e-05|   8.9407e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_303
File duration: 3.29018e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.29018e-05|  1.64509e-05|  0.00%|
(call)|         1|  1.07288e-05|  1.07288e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.82149e-05|  8.82149e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_77
File duration: 3.29018e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.29018e-05|  1.64509e-05|  0.00%|
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.01222e-05|  9.01222e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_79
File duration: 3.29018e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.29018e-05|  1.64509e-05|  0.00%|
(call)|         1|  1.09673e-05|  1.09673e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000120163|  0.000120163|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_97
File duration: 3.29018e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  3.29018e-05|  1.64509e-05|  0.00%|
(call)|         1|    0.0053215|    0.0053215|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/rcsetup.py:775 cycler
File: <string>_228
File duration: 3.26633e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.38419e-05|  1.19209e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.05312e-06|  4.05312e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.76837e-06|  4.76837e-06|  0.00%|
File: <string>_193
File duration: 3.26633e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.40803e-05|  1.20401e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.05312e-06|  4.05312e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.52995e-06|  4.52995e-06|  0.00%|
File: <__array_function__ internals>_300
File duration: 3.26633e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.26633e-05|  1.63317e-05|  0.00%|
(call)|         1|  1.12057e-05|  1.12057e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.72612e-05|  8.72612e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_120
File duration: 3.26633e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.26633e-05|  1.63317e-05|  0.00%|
(call)|         1|  1.09673e-05|  1.09673e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000106096|  0.000106096|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_298
File duration: 3.26633e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.26633e-05|  1.63317e-05|  0.00%|
(call)|         1|  1.07288e-05|  1.07288e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.44002e-05|  8.44002e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_155
File duration: 3.26633e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.26633e-05|  1.63317e-05|  0.00%|
(call)|         1|  1.04904e-05|  1.04904e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|    0.0001297|    0.0001297|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_245
File duration: 3.26633e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.26633e-05|  1.63317e-05|  0.00%|
(call)|         1|  1.04904e-05|  1.04904e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000110626|  0.000110626|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_129
File duration: 3.24249e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.24249e-05|  1.62125e-05|  0.00%|
(call)|         1|  1.07288e-05|  1.07288e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.84533e-05|  8.84533e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_221
File duration: 3.24249e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.24249e-05|  1.62125e-05|  0.00%|
(call)|         1|  1.09673e-05|  1.09673e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.91821e-05|  9.91821e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_293
File duration: 3.24249e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.24249e-05|  1.62125e-05|  0.00%|
(call)|         1|  1.09673e-05|  1.09673e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|   8.7738e-05|   8.7738e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_123
File duration: 3.24249e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.24249e-05|  1.62125e-05|  0.00%|
(call)|         1|  1.07288e-05|  1.07288e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000119686|  0.000119686|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_313
File duration: 3.24249e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.24249e-05|  1.62125e-05|  0.00%|
(call)|         1|  1.09673e-05|  1.09673e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.63075e-05|  8.63075e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_311
File duration: 3.24249e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.24249e-05|  1.62125e-05|  0.00%|
(call)|         1|   1.0252e-05|   1.0252e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.53674e-05|  9.53674e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_83
File duration: 3.24249e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.24249e-05|  1.62125e-05|  0.00%|
(call)|         1|  1.04904e-05|  1.04904e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000119686|  0.000119686|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_208
File duration: 3.21865e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|   2.3365e-05|  1.16825e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.29153e-06|  4.29153e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.52995e-06|  4.52995e-06|  0.00%|
File: <string>_259
File duration: 3.21865e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.38419e-05|  1.19209e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.05312e-06|  4.05312e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.29153e-06|  4.29153e-06|  0.00%|
File: <string>_270
File duration: 3.21865e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.40803e-05|  1.20401e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  3.57628e-06|  3.57628e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.52995e-06|  4.52995e-06|  0.00%|
File: <string>_251
File duration: 3.21865e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|   2.3365e-05|  1.16825e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.29153e-06|  4.29153e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.52995e-06|  4.52995e-06|  0.00%|
File: <__array_function__ internals>_153
File duration: 3.21865e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.21865e-05|  1.60933e-05|  0.00%|
(call)|         1|  1.09673e-05|  1.09673e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.60691e-05|  8.60691e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_254
File duration: 3.21865e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.21865e-05|  1.60933e-05|  0.00%|
(call)|         1|  1.07288e-05|  1.07288e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000144005|  0.000144005|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_270
File duration: 3.21865e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.21865e-05|  1.60933e-05|  0.00%|
(call)|         1|  1.07288e-05|  1.07288e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.82149e-05|  8.82149e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_310
File duration: 3.21865e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.21865e-05|  1.60933e-05|  0.00%|
(call)|         1|  1.04904e-05|  1.04904e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.63075e-05|  8.63075e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_95
File duration: 3.21865e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.21865e-05|  1.60933e-05|  0.00%|
(call)|         1|  1.04904e-05|  1.04904e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.79765e-05|  8.79765e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_225
File duration: 3.21865e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.21865e-05|  1.60933e-05|  0.00%|
(call)|         1|  1.00136e-05|  1.00136e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.63075e-05|  8.63075e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_126
File duration: 3.21865e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.21865e-05|  1.60933e-05|  0.00%|
(call)|         1|  1.07288e-05|  1.07288e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.84533e-05|  8.84533e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_215
File duration: 3.21865e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.21865e-05|  1.60933e-05|  0.00%|
(call)|         1|  1.04904e-05|  1.04904e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000101328|  0.000101328|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_87
File duration: 3.21865e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.21865e-05|  1.60933e-05|  0.00%|
(call)|         1|  1.07288e-05|  1.07288e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000100851|  0.000100851|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_118
File duration: 3.21865e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.21865e-05|  1.60933e-05|  0.00%|
(call)|         1|  1.12057e-05|  1.12057e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.01222e-05|  9.01222e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_269
File duration: 3.21865e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.21865e-05|  1.60933e-05|  0.00%|
(call)|         1|  1.14441e-05|  1.14441e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.70228e-05|  8.70228e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_309
File duration: 3.21865e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.21865e-05|  1.60933e-05|  0.00%|
(call)|         1|  1.07288e-05|  1.07288e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.70228e-05|  8.70228e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_288
File duration: 3.21865e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.21865e-05|  1.60933e-05|  0.00%|
(call)|         1|  1.04904e-05|  1.04904e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.53539e-05|  8.53539e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_202
File duration: 3.21865e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.21865e-05|  1.60933e-05|  0.00%|
(call)|         1|   1.0252e-05|   1.0252e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.44002e-05|  8.44002e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_164
File duration: 3.19481e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.36034e-05|  1.18017e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|   3.8147e-06|   3.8147e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.52995e-06|  4.52995e-06|  0.00%|
File: <__array_function__ internals>_201
File duration: 3.19481e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.19481e-05|   1.5974e-05|  0.00%|
(call)|         1|  1.04904e-05|  1.04904e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.91821e-05|  9.91821e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_296
File duration: 3.19481e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.19481e-05|   1.5974e-05|  0.00%|
(call)|         1|  1.07288e-05|  1.07288e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.13007e-05|  8.13007e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_127
File duration: 3.19481e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.19481e-05|   1.5974e-05|  0.00%|
(call)|         1|  1.07288e-05|  1.07288e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|   8.9407e-05|   8.9407e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_144
File duration: 3.19481e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.19481e-05|   1.5974e-05|  0.00%|
(call)|         1|  1.09673e-05|  1.09673e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.63075e-05|  8.63075e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_290
File duration: 3.19481e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.19481e-05|   1.5974e-05|  0.00%|
(call)|         1|  1.04904e-05|  1.04904e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.53539e-05|  8.53539e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_241
File duration: 3.19481e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.19481e-05|   1.5974e-05|  0.00%|
(call)|         1|   1.7643e-05|   1.7643e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.72748e-05|  9.72748e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_305
File duration: 3.19481e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.19481e-05|   1.5974e-05|  0.00%|
(call)|         1|  1.09673e-05|  1.09673e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000100613|  0.000100613|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_207
File duration: 3.19481e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.19481e-05|   1.5974e-05|  0.00%|
(call)|         1|  1.07288e-05|  1.07288e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.44002e-05|  8.44002e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_295
File duration: 3.19481e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.19481e-05|   1.5974e-05|  0.00%|
(call)|         1|  1.04904e-05|  1.04904e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.84669e-05|  9.84669e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_34
File duration: 3.19481e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.19481e-05|   1.5974e-05|  0.00%|
(call)|         1|  1.07288e-05|  1.07288e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|    9.799e-05|    9.799e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_128
File duration: 3.19481e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.19481e-05|   1.5974e-05|  0.00%|
(call)|         1|  1.09673e-05|  1.09673e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.84533e-05|  8.84533e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_304
File duration: 3.19481e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.19481e-05|   1.5974e-05|  0.00%|
(call)|         1|  1.09673e-05|  1.09673e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|   8.4877e-05|   8.4877e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_282
File duration: 3.19481e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.19481e-05|   1.5974e-05|  0.00%|
(call)|         1|  1.07288e-05|  1.07288e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.53539e-05|  8.53539e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <attrs generated eq attr.validators._DeepMapping>
File duration: 3.19481e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  3.19481e-05|   1.5974e-05|  0.00%|def __eq__(self, other):
     2|         0|            0|            0|  0.00%|    if other.__class__ is not self.__class__:
     3|         0|            0|            0|  0.00%|        return NotImplemented
     4|         0|            0|            0|  0.00%|    return  (
     5|         0|            0|            0|  0.00%|        self.key_validator,
     6|         0|            0|            0|  0.00%|        self.value_validator,
     7|         0|            0|            0|  0.00%|        self.mapping_validator,
     8|         0|            0|            0|  0.00%|    ) == (
     9|         0|            0|            0|  0.00%|        other.key_validator,
    10|         0|            0|            0|  0.00%|        other.value_validator,
    11|         0|            0|            0|  0.00%|        other.mapping_validator,
    12|         0|            0|            0|  0.00%|    )
File: <string>_230
File duration: 3.17097e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.28882e-05|  1.14441e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.29153e-06|  4.29153e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.52995e-06|  4.52995e-06|  0.00%|
File: <string>_253
File duration: 3.17097e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|   2.3365e-05|  1.16825e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|   3.8147e-06|   3.8147e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.52995e-06|  4.52995e-06|  0.00%|
File: <string>_174
File duration: 3.17097e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|   2.3365e-05|  1.16825e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|   3.8147e-06|   3.8147e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.52995e-06|  4.52995e-06|  0.00%|
File: <__array_function__ internals>_274
File duration: 3.17097e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.17097e-05|  1.58548e-05|  0.00%|
(call)|         1|  1.12057e-05|  1.12057e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.74996e-05|  8.74996e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_149
File duration: 3.17097e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.17097e-05|  1.58548e-05|  0.00%|
(call)|         1|  1.04904e-05|  1.04904e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000114918|  0.000114918|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_159
File duration: 3.17097e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.17097e-05|  1.58548e-05|  0.00%|
(call)|         1|   1.0252e-05|   1.0252e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.17912e-05|  9.17912e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_169
File duration: 3.17097e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.17097e-05|  1.58548e-05|  0.00%|
(call)|         1|  1.04904e-05|  1.04904e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000115395|  0.000115395|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_248
File duration: 3.17097e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.17097e-05|  1.58548e-05|  0.00%|
(call)|         1|  1.09673e-05|  1.09673e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.70364e-05|  9.70364e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_152
File duration: 3.17097e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.17097e-05|  1.58548e-05|  0.00%|
(call)|         1|  1.07288e-05|  1.07288e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.63075e-05|  8.63075e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_21
File duration: 3.17097e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.17097e-05|  1.58548e-05|  0.00%|
(call)|         1|  1.09673e-05|  1.09673e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.70364e-05|  9.70364e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_203
File duration: 3.17097e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.17097e-05|  1.58548e-05|  0.00%|
(call)|         1|  1.07288e-05|  1.07288e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.55923e-05|  8.55923e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_190
File duration: 3.17097e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.17097e-05|  1.58548e-05|  0.00%|
(call)|         1|  1.04904e-05|  1.04904e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.58443e-05|  9.58443e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_146
File duration: 3.17097e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.17097e-05|  1.58548e-05|  0.00%|
(call)|         1|  1.07288e-05|  1.07288e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.17776e-05|  8.17776e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_177
File duration: 3.17097e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.17097e-05|  1.58548e-05|  0.00%|
(call)|         1|  1.07288e-05|  1.07288e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.98838e-05|  8.98838e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_283
File duration: 3.17097e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.17097e-05|  1.58548e-05|  0.00%|
(call)|         1|  1.07288e-05|  1.07288e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.39233e-05|  8.39233e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_192
File duration: 3.17097e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.17097e-05|  1.58548e-05|  0.00%|
(call)|         1|  1.07288e-05|  1.07288e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000105381|  0.000105381|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_229
File duration: 3.14713e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|   2.3365e-05|  1.16825e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|   3.8147e-06|   3.8147e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.29153e-06|  4.29153e-06|  0.00%|
File: <__array_function__ internals>_191
File duration: 3.14713e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.14713e-05|  1.57356e-05|  0.00%|
(call)|         1|  1.04904e-05|  1.04904e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.63075e-05|  8.63075e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_125
File duration: 3.14713e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.14713e-05|  1.57356e-05|  0.00%|
(call)|         1|  1.07288e-05|  1.07288e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.72612e-05|  8.72612e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_289
File duration: 3.14713e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.14713e-05|  1.57356e-05|  0.00%|
(call)|         1|  1.04904e-05|  1.04904e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|   8.4877e-05|   8.4877e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_341
File duration: 3.14713e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  3.14713e-05|  1.57356e-05|  0.00%|
File: <__array_function__ internals>_271
File duration: 3.14713e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.14713e-05|  1.57356e-05|  0.00%|
(call)|         1|  1.09673e-05|  1.09673e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000121593|  0.000121593|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_278
File duration: 3.14713e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.14713e-05|  1.57356e-05|  0.00%|
(call)|         1|  1.04904e-05|  1.04904e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.32081e-05|  8.32081e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_162
File duration: 3.14713e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.14713e-05|  1.57356e-05|  0.00%|
(call)|         1|   1.0252e-05|   1.0252e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000100374|  0.000100374|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_131
File duration: 3.14713e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.14713e-05|  1.57356e-05|  0.00%|
(call)|         1|  1.12057e-05|  1.12057e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.63075e-05|  8.63075e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_193
File duration: 3.12328e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.12328e-05|  1.56164e-05|  0.00%|
(call)|         1|   1.0252e-05|   1.0252e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.44002e-05|  8.44002e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_84
File duration: 3.12328e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.12328e-05|  1.56164e-05|  0.00%|
(call)|         1|  1.07288e-05|  1.07288e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.63075e-05|  8.63075e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_127
File duration: 3.12328e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  3.12328e-05|  1.56164e-05|  0.00%|
File: <__array_function__ internals>_13
File duration: 3.12328e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.12328e-05|  1.56164e-05|  0.00%|
(call)|         1|  1.12057e-05|  1.12057e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|   9.5129e-05|   9.5129e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_262
File duration: 3.12328e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.12328e-05|  1.56164e-05|  0.00%|
(call)|         1|  1.07288e-05|  1.07288e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000102043|  0.000102043|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_174
File duration: 3.12328e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.12328e-05|  1.56164e-05|  0.00%|
(call)|         1|  1.09673e-05|  1.09673e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.24928e-05|  8.24928e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <attrs generated init jsonschema.exceptions.RefResolutionError>
File duration: 3.12328e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  3.12328e-05|  1.56164e-05|  0.00%|def __init__(self, cause):
     2|         0|            0|            0|  0.00%|    self._cause = cause
File: <__array_function__ internals>_229
File duration: 3.12328e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.12328e-05|  1.56164e-05|  0.00%|
(call)|         1|   1.0252e-05|   1.0252e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.13007e-05|  8.13007e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_263
File duration: 3.12328e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.12328e-05|  1.56164e-05|  0.00%|
(call)|         1|   1.0252e-05|   1.0252e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|   8.4877e-05|   8.4877e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_235
File duration: 3.12328e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.12328e-05|  1.56164e-05|  0.00%|
(call)|         1|   1.0252e-05|   1.0252e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.36849e-05|  8.36849e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_206
File duration: 3.09944e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.26498e-05|  1.13249e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|   3.8147e-06|   3.8147e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.52995e-06|  4.52995e-06|  0.00%|
File: <string>_162
File duration: 3.09944e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.24113e-05|  1.12057e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  4.29153e-06|  4.29153e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.29153e-06|  4.29153e-06|  0.00%|
File: <string>_180
File duration: 3.09944e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.28882e-05|  1.14441e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|   3.8147e-06|   3.8147e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.29153e-06|  4.29153e-06|  0.00%|
File: <__array_function__ internals>_154
File duration: 3.09944e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.09944e-05|  1.54972e-05|  0.00%|
(call)|         1|  1.04904e-05|  1.04904e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.72612e-05|  8.72612e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_82
File duration: 3.09944e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.09944e-05|  1.54972e-05|  0.00%|
(call)|         1|  1.04904e-05|  1.04904e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|   8.7738e-05|   8.7738e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_1
File duration: 3.09944e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.09944e-05|  1.54972e-05|  0.00%|
(call)|         1|  1.07288e-05|  1.07288e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000103951|  0.000103951|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_219
File duration: 3.09944e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.09944e-05|  1.54972e-05|  0.00%|
(call)|         1|  1.04904e-05|  1.04904e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.13007e-05|  8.13007e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_140
File duration: 3.09944e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.09944e-05|  1.54972e-05|  0.00%|
(call)|         1|  1.04904e-05|  1.04904e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|   8.4877e-05|   8.4877e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_18
File duration: 3.09944e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.09944e-05|  1.54972e-05|  0.00%|
(call)|         1|  1.04904e-05|  1.04904e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.60827e-05|  9.60827e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_279
File duration: 3.09944e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.09944e-05|  1.54972e-05|  0.00%|
(call)|         1|  1.12057e-05|  1.12057e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.53539e-05|  8.53539e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_150
File duration: 3.09944e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.09944e-05|  1.54972e-05|  0.00%|
(call)|         1|  1.04904e-05|  1.04904e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.72612e-05|  8.72612e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_166
File duration: 3.09944e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.09944e-05|  1.54972e-05|  0.00%|
(call)|         1|   1.0252e-05|   1.0252e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.89437e-05|  9.89437e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_157
File duration: 3.09944e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.09944e-05|  1.54972e-05|  0.00%|
(call)|         1|  1.12057e-05|  1.12057e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.65459e-05|  8.65459e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_156
File duration: 3.09944e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.09944e-05|  1.54972e-05|  0.00%|
(call)|         1|  1.04904e-05|  1.04904e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.72612e-05|  8.72612e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_194
File duration: 3.09944e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.09944e-05|  1.54972e-05|  0.00%|
(call)|         1|  1.07288e-05|  1.07288e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.51154e-05|  8.51154e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_269
File duration: 3.0756e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.24113e-05|  1.12057e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|   3.8147e-06|   3.8147e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.52995e-06|  4.52995e-06|  0.00%|
File: <__array_function__ internals>_180
File duration: 3.0756e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|   3.0756e-05|   1.5378e-05|  0.00%|
(call)|         1|   1.0252e-05|   1.0252e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.91821e-05|  9.91821e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_236
File duration: 3.0756e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|   3.0756e-05|   1.5378e-05|  0.00%|
(call)|         1|  2.52724e-05|  2.52724e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.75132e-05|  9.75132e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_210
File duration: 3.0756e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|   3.0756e-05|   1.5378e-05|  0.00%|
(call)|         1|   1.0252e-05|   1.0252e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.17776e-05|  8.17776e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_89
File duration: 3.0756e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|   3.0756e-05|   1.5378e-05|  0.00%|
(call)|         1|   1.0252e-05|   1.0252e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.53539e-05|  8.53539e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_179
File duration: 3.0756e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|   3.0756e-05|   1.5378e-05|  0.00%|
(call)|         1|  1.07288e-05|  1.07288e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.22544e-05|  8.22544e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_195
File duration: 3.0756e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|   3.0756e-05|   1.5378e-05|  0.00%|
(call)|         1|   1.0252e-05|   1.0252e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.15527e-05|  9.15527e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_38
File duration: 3.0756e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|   3.0756e-05|   1.5378e-05|  0.00%|
(call)|         1|  1.04904e-05|  1.04904e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000114441|  0.000114441|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_237
File duration: 3.0756e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|   3.0756e-05|   1.5378e-05|  0.00%|
(call)|         1|  1.07288e-05|  1.07288e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000112534|  0.000112534|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_198
File duration: 3.0756e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|   3.0756e-05|   1.5378e-05|  0.00%|
(call)|         1|   1.0252e-05|   1.0252e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000112057|  0.000112057|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_200
File duration: 3.0756e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|   3.0756e-05|   1.5378e-05|  0.00%|
(call)|         1|  1.04904e-05|  1.04904e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.13007e-05|  8.13007e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_230
File duration: 3.0756e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|   3.0756e-05|   1.5378e-05|  0.00%|
(call)|         1|   1.0252e-05|   1.0252e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  7.98702e-05|  7.98702e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_9
File duration: 3.0756e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|   3.0756e-05|   1.5378e-05|  0.00%|
(call)|         1|   1.0252e-05|   1.0252e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.41753e-05|  9.41753e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_217
File duration: 3.0756e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|   3.0756e-05|   1.5378e-05|  0.00%|
(call)|         1|  1.04904e-05|  1.04904e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.15392e-05|  8.15392e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_160
File duration: 3.0756e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|   3.0756e-05|   1.5378e-05|  0.00%|
(call)|         1|  1.07288e-05|  1.07288e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.82149e-05|  8.82149e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_160
File duration: 3.05176e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.24113e-05|  1.12057e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|   3.8147e-06|   3.8147e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.29153e-06|  4.29153e-06|  0.00%|
File: <__array_function__ internals>_3
File duration: 3.05176e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.05176e-05|  1.52588e-05|  0.00%|
(call)|         1|  1.07288e-05|  1.07288e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|   9.5129e-05|   9.5129e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_20
File duration: 3.05176e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.05176e-05|  1.52588e-05|  0.00%|
(call)|         1|  1.12057e-05|  1.12057e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|   0.00013876|   0.00013876|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_247
File duration: 3.05176e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.05176e-05|  1.52588e-05|  0.00%|
(call)|         1|  1.07288e-05|  1.07288e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.34465e-05|  8.34465e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_25
File duration: 3.05176e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.05176e-05|  1.52588e-05|  0.00%|
(call)|         1|  1.04904e-05|  1.04904e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.84669e-05|  9.84669e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_158
File duration: 3.05176e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.05176e-05|  1.52588e-05|  0.00%|
(call)|         1|   1.0252e-05|   1.0252e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.36849e-05|  8.36849e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_135
File duration: 3.05176e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.05176e-05|  1.52588e-05|  0.00%|
(call)|         1|  1.04904e-05|  1.04904e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.17776e-05|  8.17776e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_220
File duration: 3.05176e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.05176e-05|  1.52588e-05|  0.00%|
(call)|         1|  1.00136e-05|  1.00136e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|   7.9155e-05|   7.9155e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_59
File duration: 3.05176e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.05176e-05|  1.52588e-05|  0.00%|
(call)|         1|  1.04904e-05|  1.04904e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.41618e-05|  8.41618e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_208
File duration: 3.05176e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.05176e-05|  1.52588e-05|  0.00%|
(call)|         1|  9.77516e-06|  9.77516e-06|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  7.96318e-05|  7.96318e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_224
File duration: 3.05176e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.05176e-05|  1.52588e-05|  0.00%|
(call)|         1|  9.77516e-06|  9.77516e-06|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  7.82013e-05|  7.82013e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_39
File duration: 3.05176e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.05176e-05|  1.52588e-05|  0.00%|
(call)|         1|   1.0252e-05|   1.0252e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.41618e-05|  8.41618e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_17
File duration: 3.05176e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.05176e-05|  1.52588e-05|  0.00%|
(call)|         1|   1.0252e-05|   1.0252e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.46522e-05|  9.46522e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_251
File duration: 3.05176e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.05176e-05|  1.52588e-05|  0.00%|
(call)|         1|   1.0252e-05|   1.0252e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.36849e-05|  8.36849e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_161
File duration: 3.02792e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.02792e-05|  1.51396e-05|  0.00%|
(call)|         1|  2.43187e-05|  2.43187e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.39233e-05|  8.39233e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_130
File duration: 3.02792e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.02792e-05|  1.51396e-05|  0.00%|
(call)|         1|  1.04904e-05|  1.04904e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.70228e-05|  8.70228e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_51
File duration: 3.02792e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  3.02792e-05|  1.51396e-05|  0.00%|
File: <__array_function__ internals>_133
File duration: 3.02792e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.02792e-05|  1.51396e-05|  0.00%|
(call)|         1|  1.07288e-05|  1.07288e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.36849e-05|  8.36849e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_24
File duration: 3.02792e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.02792e-05|  1.51396e-05|  0.00%|
(call)|         1|  9.53674e-06|  9.53674e-06|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.01222e-05|  9.01222e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_29
File duration: 3.02792e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.02792e-05|  1.51396e-05|  0.00%|
(call)|         1|   1.0252e-05|   1.0252e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000159502|  0.000159502|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_264
File duration: 3.02792e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.02792e-05|  1.51396e-05|  0.00%|
(call)|         1|   1.0252e-05|   1.0252e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000130892|  0.000130892|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_224
File duration: 3.00407e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.26498e-05|  1.13249e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  3.33786e-06|  3.33786e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.05312e-06|  4.05312e-06|  0.00%|
File: <__array_function__ internals>_176
File duration: 3.00407e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.00407e-05|  1.50204e-05|  0.00%|
(call)|         1|  1.04904e-05|  1.04904e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.44002e-05|  8.44002e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_255
File duration: 3.00407e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.00407e-05|  1.50204e-05|  0.00%|
(call)|         1|   1.0252e-05|   1.0252e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.05855e-05|  8.05855e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_60
File duration: 3.00407e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.00407e-05|  1.50204e-05|  0.00%|
(call)|         1|  9.77516e-06|  9.77516e-06|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.10623e-05|  8.10623e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_175
File duration: 3.00407e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  3.00407e-05|  1.50204e-05|  0.00%|
(call)|         1|  1.12057e-05|  1.12057e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.46386e-05|  8.46386e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <attrs generated eq attr._make._AndValidator>
File duration: 3.00407e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  3.00407e-05|  1.50204e-05|  0.00%|def __eq__(self, other):
     2|         0|            0|            0|  0.00%|    if other.__class__ is not self.__class__:
     3|         0|            0|            0|  0.00%|        return NotImplemented
     4|         0|            0|            0|  0.00%|    return  (
     5|         0|            0|            0|  0.00%|        self._validators,
     6|         0|            0|            0|  0.00%|    ) == (
     7|         0|            0|            0|  0.00%|        other._validators,
     8|         0|            0|            0|  0.00%|    )
File: <attrs generated eq jsonschema._types.TypeChecker>
File duration: 2.98023e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.98023e-05|  1.49012e-05|  0.00%|def __eq__(self, other):
     2|         0|            0|            0|  0.00%|    if other.__class__ is not self.__class__:
     3|         0|            0|            0|  0.00%|        return NotImplemented
     4|         0|            0|            0|  0.00%|    return  (
     5|         0|            0|            0|  0.00%|        self._type_checkers,
     6|         0|            0|            0|  0.00%|    ) == (
     7|         0|            0|            0|  0.00%|        other._type_checkers,
     8|         0|            0|            0|  0.00%|    )
File: <__array_function__ internals>_53
File duration: 2.98023e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.98023e-05|  1.49012e-05|  0.00%|
(call)|         1|   1.0252e-05|   1.0252e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  7.98702e-05|  7.98702e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_100
File duration: 2.98023e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.98023e-05|  1.49012e-05|  0.00%|
(call)|         1|    0.0018537|    0.0018537|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/rcsetup.py:775 cycler
File: <__array_function__ internals>_132
File duration: 2.98023e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.98023e-05|  1.49012e-05|  0.00%|
(call)|         1|   1.0252e-05|   1.0252e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.41618e-05|  8.41618e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_142
File duration: 2.98023e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.98023e-05|  1.49012e-05|  0.00%|
(call)|         1|  1.00136e-05|  1.00136e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.41618e-05|  8.41618e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_72
File duration: 2.98023e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.98023e-05|  1.49012e-05|  0.00%|
(call)|         1|  9.53674e-06|  9.53674e-06|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  7.93934e-05|  7.93934e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_168
File duration: 2.98023e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.98023e-05|  1.49012e-05|  0.00%|
(call)|         1|   1.0252e-05|   1.0252e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.13007e-05|  8.13007e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_272
File duration: 2.95639e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.16961e-05|   1.0848e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  3.57628e-06|  3.57628e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.29153e-06|  4.29153e-06|  0.00%|
File: <string>_221
File duration: 2.95639e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.21729e-05|  1.10865e-05|  0.00%|
     3|         0|            0|            0|  0.00%|
     4|         0|            0|            0|  0.00%|
     5|         1|  3.33786e-06|  3.33786e-06|  0.00%|
     6|         0|            0|            0|  0.00%|
     7|         0|            0|            0|  0.00%|
     8|         1|  4.05312e-06|  4.05312e-06|  0.00%|
File: <__array_function__ internals>_15
File duration: 2.95639e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.95639e-05|   1.4782e-05|  0.00%|
(call)|         1|   1.0252e-05|   1.0252e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.34601e-05|  9.34601e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_98
File duration: 2.95639e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.95639e-05|   1.4782e-05|  0.00%|
(call)|         1|   0.00531912|   0.00531912|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/rcsetup.py:775 cycler
File: <string>_18
File duration: 2.93255e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         4|  2.93255e-05|  7.33137e-06|  0.00%|
File: <__array_function__ internals>_90
File duration: 2.93255e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.93255e-05|  1.46627e-05|  0.00%|
(call)|         1|  1.00136e-05|  1.00136e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.08239e-05|  8.08239e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_288
File duration: 2.93255e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.93255e-05|  1.46627e-05|  0.00%|
File: <string>_95
File duration: 2.93255e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.93255e-05|  1.46627e-05|  0.00%|
(call)|         1|   0.00454712|   0.00454712|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/rcsetup.py:775 cycler
File: <__array_function__ internals>_27
File duration: 2.93255e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.93255e-05|  1.46627e-05|  0.00%|
(call)|         1|  9.29832e-06|  9.29832e-06|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  7.96318e-05|  7.96318e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_253
File duration: 2.93255e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.93255e-05|  1.46627e-05|  0.00%|
(call)|         1|   1.0252e-05|   1.0252e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.05855e-05|  8.05855e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_163
File duration: 2.93255e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.93255e-05|  1.46627e-05|  0.00%|
(call)|         1|  1.04904e-05|  1.04904e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  7.86781e-05|  7.86781e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_14
File duration: 2.93255e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.93255e-05|  1.46627e-05|  0.00%|
(call)|         1|  1.04904e-05|  1.04904e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.32217e-05|  9.32217e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_62
File duration: 2.93255e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.93255e-05|  1.46627e-05|  0.00%|
(call)|         1|  9.53674e-06|  9.53674e-06|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.05855e-05|  8.05855e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_45
File duration: 2.90871e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.90871e-05|  1.45435e-05|  0.00%|
(call)|         1|  1.00136e-05|  1.00136e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.44138e-05|  9.44138e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_43
File duration: 2.90871e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.90871e-05|  1.45435e-05|  0.00%|
(call)|         1|  9.77516e-06|  9.77516e-06|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.84533e-05|  8.84533e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_164
File duration: 2.90871e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.90871e-05|  1.45435e-05|  0.00%|
(call)|         1|  9.77516e-06|  9.77516e-06|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.01086e-05|  8.01086e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_107
File duration: 2.90871e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.90871e-05|  1.45435e-05|  0.00%|
(call)|         1|   0.00810218|   0.00810218|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/rcsetup.py:775 cycler
File: <__array_function__ internals>_19
File duration: 2.90871e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.90871e-05|  1.45435e-05|  0.00%|
(call)|         1|  1.04904e-05|  1.04904e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000123739|  0.000123739|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_26
File duration: 2.90871e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.90871e-05|  1.45435e-05|  0.00%|
(call)|         1|  1.00136e-05|  1.00136e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|   7.9155e-05|   7.9155e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_99
File duration: 2.88486e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.88486e-05|  1.44243e-05|  0.00%|
(call)|         1|   0.00275636|   0.00275636|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/rcsetup.py:775 cycler
File: <__array_function__ internals>_36
File duration: 2.86102e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.86102e-05|  1.43051e-05|  0.00%|
(call)|         1|  9.77516e-06|  9.77516e-06|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  8.01086e-05|  8.01086e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_52
File duration: 2.86102e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.86102e-05|  1.43051e-05|  0.00%|
(call)|         1|  1.00136e-05|  1.00136e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  0.000109911|  0.000109911|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <__array_function__ internals>_54
File duration: 2.86102e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.86102e-05|  1.43051e-05|  0.00%|
(call)|         1|  9.29832e-06|  9.29832e-06|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|  9.27448e-05|  9.27448e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_106
File duration: 2.86102e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.86102e-05|  1.43051e-05|  0.00%|
(call)|         1|   0.00306487|   0.00306487|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/rcsetup.py:775 cycler
File: <string>_105
File duration: 2.83718e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.83718e-05|  1.41859e-05|  0.00%|
(call)|         1|   0.00370264|   0.00370264|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/rcsetup.py:775 cycler
File: <__array_function__ internals>_64
File duration: 2.81334e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.81334e-05|  1.40667e-05|  0.00%|
(call)|         1|  9.53674e-06|  9.53674e-06|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|   7.9155e-05|   7.9155e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_92
File duration: 2.81334e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.81334e-05|  1.40667e-05|  0.00%|
File: <string>_102
File duration: 2.7895e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|   2.7895e-05|  1.39475e-05|  0.00%|
(call)|         1|   0.00335169|   0.00335169|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/rcsetup.py:775 cycler
File: <__array_function__ internals>_32
File duration: 2.7895e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|   2.7895e-05|  1.39475e-05|  0.00%|
(call)|         1|  9.77516e-06|  9.77516e-06|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|   7.7486e-05|   7.7486e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_103
File duration: 2.76566e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.76566e-05|  1.38283e-05|  0.00%|
(call)|         1|    0.0048027|    0.0048027|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/rcsetup.py:775 cycler
File: <__array_function__ internals>_65
File duration: 2.76566e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|
     2|         2|  2.76566e-05|  1.38283e-05|  0.00%|
(call)|         1|  9.29832e-06|  9.29832e-06|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:67 wraps
(call)|         1|   7.9155e-05|   7.9155e-05|  0.00%|# /opt/anaconda3/lib/python3.7/functools.py:37 update_wrapper
File: <string>_101
File duration: 2.67029e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.67029e-05|  1.33514e-05|  0.00%|
(call)|         1|   0.00277376|   0.00277376|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/rcsetup.py:775 cycler
File: <string>_108
File duration: 2.67029e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.67029e-05|  1.33514e-05|  0.00%|
(call)|         1|   0.00302219|   0.00302219|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/rcsetup.py:775 cycler
File: <string>_109
File duration: 2.64645e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.64645e-05|  1.32322e-05|  0.00%|
(call)|         1|   0.00175071|   0.00175071|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/rcsetup.py:775 cycler
File: <attrs generated init attr.validators._OptionalValidator>
File duration: 2.6226e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         4|  1.95503e-05|  4.88758e-06|  0.00%|def __init__(self, validator):
     2|         2|  6.67572e-06|  3.33786e-06|  0.00%|    self.validator = validator
File: <string>_126
File duration: 2.6226e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         4|   2.6226e-05|  6.55651e-06|  0.00%|
File: <string>_104
File duration: 2.59876e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.59876e-05|  1.29938e-05|  0.00%|
(call)|         1|   0.00295472|   0.00295472|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/matplotlib/rcsetup.py:775 cycler
File: <string>_11
File duration: 2.55108e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.55108e-05|  1.27554e-05|  0.00%|
File: <string>_343
File duration: 2.55108e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.55108e-05|  1.27554e-05|  0.00%|
File: <string>_280
File duration: 2.52724e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.52724e-05|  1.26362e-05|  0.00%|
File: <string>_129
File duration: 2.52724e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.52724e-05|  1.26362e-05|  0.00%|
File: <string>_45
File duration: 2.52724e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.52724e-05|  1.26362e-05|  0.00%|
File: <string>_296
File duration: 2.5034e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|   2.5034e-05|   1.2517e-05|  0.00%|
File: <string>_342
File duration: 2.47955e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.47955e-05|  1.23978e-05|  0.00%|
File: <string>_7
File duration: 2.47955e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.47955e-05|  1.23978e-05|  0.00%|
File: <string>_37
File duration: 2.47955e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.47955e-05|  1.23978e-05|  0.00%|
File: <string>_26
File duration: 2.47955e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.47955e-05|  1.23978e-05|  0.00%|
File: <string>_157
File duration: 2.45571e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|r"""
     2|         1|  9.53674e-06|  9.53674e-06|  0.00%|
     3|         0|            0|            0|  0.00%|Nonlinear solvers
     4|         1|  1.50204e-05|  1.50204e-05|  0.00%|-----------------
     5|         0|            0|            0|  0.00%|
     6|         0|            0|            0|  0.00%|.. currentmodule:: scipy.optimize
     7|         0|            0|            0|  0.00%|
     8|         0|            0|            0|  0.00%|This is a collection of general-purpose nonlinear multidimensional
     9|         0|            0|            0|  0.00%|solvers. These solvers find *x* for which *F(x) = 0*. Both *x*
    10|         0|            0|            0|  0.00%|and *F* can be multidimensional.
    11|         0|            0|            0|  0.00%|
    12|         0|            0|            0|  0.00%|Routines
    13|         0|            0|            0|  0.00%|~~~~~~~~
    14|         0|            0|            0|  0.00%|
    15|         0|            0|            0|  0.00%|Large-scale nonlinear solvers:
    16|         0|            0|            0|  0.00%|
    17|         0|            0|            0|  0.00%|.. autosummary::
    18|         0|            0|            0|  0.00%|
    19|         0|            0|            0|  0.00%|   newton_krylov
    20|         0|            0|            0|  0.00%|   anderson
    21|         0|            0|            0|  0.00%|
    22|         0|            0|            0|  0.00%|General nonlinear solvers:
    23|         0|            0|            0|  0.00%|
    24|         0|            0|            0|  0.00%|.. autosummary::
    25|         0|            0|            0|  0.00%|
    26|         0|            0|            0|  0.00%|   broyden1
    27|         0|            0|            0|  0.00%|   broyden2
    28|         0|            0|            0|  0.00%|
    29|         0|            0|            0|  0.00%|Simple iterations:
    30|         0|            0|            0|  0.00%|
    31|         0|            0|            0|  0.00%|.. autosummary::
    32|         0|            0|            0|  0.00%|
    33|         0|            0|            0|  0.00%|   excitingmixing
    34|         0|            0|            0|  0.00%|   linearmixing
    35|         0|            0|            0|  0.00%|   diagbroyden
    36|         0|            0|            0|  0.00%|
    37|         0|            0|            0|  0.00%|
    38|         0|            0|            0|  0.00%|Examples
    39|         0|            0|            0|  0.00%|~~~~~~~~
    40|         0|            0|            0|  0.00%|
    41|         0|            0|            0|  0.00%|**Small problem**
    42|         0|            0|            0|  0.00%|
    43|         0|            0|            0|  0.00%|>>> def F(x):
    44|         0|            0|            0|  0.00%|...    return np.cos(x) + x[::-1] - [1, 2, 3, 4]
    45|         0|            0|            0|  0.00%|>>> import scipy.optimize
    46|         0|            0|            0|  0.00%|>>> x = scipy.optimize.broyden1(F, [1,1,1,1], f_tol=1e-14)
    47|         0|            0|            0|  0.00%|>>> x
    48|         0|            0|            0|  0.00%|array([ 4.04674914,  3.91158389,  2.71791677,  1.61756251])
    49|         0|            0|            0|  0.00%|>>> np.cos(x) + x[::-1]
    50|         0|            0|            0|  0.00%|array([ 1.,  2.,  3.,  4.])
    51|         0|            0|            0|  0.00%|
    52|         0|            0|            0|  0.00%|
    53|         0|            0|            0|  0.00%|**Large problem**
    54|         0|            0|            0|  0.00%|
    55|         0|            0|            0|  0.00%|Suppose that we needed to solve the following integrodifferential
    56|         0|            0|            0|  0.00%|equation on the square :math:`[0,1]\times[0,1]`:
    57|         0|            0|            0|  0.00%|
    58|         0|            0|            0|  0.00%|.. math::
    59|         0|            0|            0|  0.00%|
    60|         0|            0|            0|  0.00%|   \nabla^2 P = 10 \left(\int_0^1\int_0^1\cosh(P)\,dx\,dy\right)^2
    61|         0|            0|            0|  0.00%|
    62|         0|            0|            0|  0.00%|with :math:`P(x,1) = 1` and :math:`P=0` elsewhere on the boundary of
    63|         0|            0|            0|  0.00%|the square.
    64|         0|            0|            0|  0.00%|
    65|         0|            0|            0|  0.00%|The solution can be found using the `newton_krylov` solver:
    66|         0|            0|            0|  0.00%|
    67|         0|            0|            0|  0.00%|.. plot::
    68|         0|            0|            0|  0.00%|
    69|         0|            0|            0|  0.00%|   import numpy as np
    70|         0|            0|            0|  0.00%|   from scipy.optimize import newton_krylov
    71|         0|            0|            0|  0.00%|   from numpy import cosh, zeros_like, mgrid, zeros
    72|         0|            0|            0|  0.00%|
    73|         0|            0|            0|  0.00%|   # parameters
    74|         0|            0|            0|  0.00%|   nx, ny = 75, 75
    75|         0|            0|            0|  0.00%|   hx, hy = 1./(nx-1), 1./(ny-1)
    76|         0|            0|            0|  0.00%|
    77|         0|            0|            0|  0.00%|   P_left, P_right = 0, 0
    78|         0|            0|            0|  0.00%|   P_top, P_bottom = 1, 0
    79|         0|            0|            0|  0.00%|
    80|         0|            0|            0|  0.00%|   def residual(P):
    81|         0|            0|            0|  0.00%|       d2x = zeros_like(P)
    82|         0|            0|            0|  0.00%|       d2y = zeros_like(P)
    83|         0|            0|            0|  0.00%|
    84|         0|            0|            0|  0.00%|       d2x[1:-1] = (P[2:]   - 2*P[1:-1] + P[:-2]) / hx/hx
    85|         0|            0|            0|  0.00%|       d2x[0]    = (P[1]    - 2*P[0]    + P_left)/hx/hx
    86|         0|            0|            0|  0.00%|       d2x[-1]   = (P_right - 2*P[-1]   + P[-2])/hx/hx
    87|         0|            0|            0|  0.00%|
    88|         0|            0|            0|  0.00%|       d2y[:,1:-1] = (P[:,2:] - 2*P[:,1:-1] + P[:,:-2])/hy/hy
    89|         0|            0|            0|  0.00%|       d2y[:,0]    = (P[:,1]  - 2*P[:,0]    + P_bottom)/hy/hy
    90|         0|            0|            0|  0.00%|       d2y[:,-1]   = (P_top   - 2*P[:,-1]   + P[:,-2])/hy/hy
    91|         0|            0|            0|  0.00%|
    92|         0|            0|            0|  0.00%|       return d2x + d2y - 10*cosh(P).mean()**2
    93|         0|            0|            0|  0.00%|
    94|         0|            0|            0|  0.00%|   # solve
    95|         0|            0|            0|  0.00%|   guess = zeros((nx, ny), float)
    96|         0|            0|            0|  0.00%|   sol = newton_krylov(residual, guess, method='lgmres', verbose=1)
    97|         0|            0|            0|  0.00%|   print('Residual: %g' % abs(residual(sol)).max())
    98|         0|            0|            0|  0.00%|
    99|         0|            0|            0|  0.00%|   # visualize
   100|         0|            0|            0|  0.00%|   import matplotlib.pyplot as plt
   101|         0|            0|            0|  0.00%|   x, y = mgrid[0:1:(nx*1j), 0:1:(ny*1j)]
   102|         0|            0|            0|  0.00%|   plt.pcolormesh(x, y, sol, shading='gouraud')
   103|         0|            0|            0|  0.00%|   plt.colorbar()
   104|         0|            0|            0|  0.00%|   plt.show()
   105|         0|            0|            0|  0.00%|
   106|         0|            0|            0|  0.00%|"""
   107|         0|            0|            0|  0.00%|# Copyright (C) 2009, Pauli Virtanen <pav@iki.fi>
   108|         0|            0|            0|  0.00%|# Distributed under the same license as SciPy.
   109|         0|            0|            0|  0.00%|
   110|         0|            0|            0|  0.00%|import sys
   111|         0|            0|            0|  0.00%|import numpy as np
   112|         0|            0|            0|  0.00%|from scipy.linalg import norm, solve, inv, qr, svd, LinAlgError
   113|         0|            0|            0|  0.00%|from numpy import asarray, dot, vdot
   114|         0|            0|            0|  0.00%|import scipy.sparse.linalg
   115|         0|            0|            0|  0.00%|import scipy.sparse
   116|         0|            0|            0|  0.00%|from scipy.linalg import get_blas_funcs
   117|         0|            0|            0|  0.00%|import inspect
   118|         0|            0|            0|  0.00%|from scipy._lib._util import getfullargspec_no_self as _getfullargspec
   119|         0|            0|            0|  0.00%|from .linesearch import scalar_search_wolfe1, scalar_search_armijo
   120|         0|            0|            0|  0.00%|
   121|         0|            0|            0|  0.00%|
   122|         0|            0|            0|  0.00%|__all__ = [
   123|         0|            0|            0|  0.00%|    'broyden1', 'broyden2', 'anderson', 'linearmixing',
   124|         0|            0|            0|  0.00%|    'diagbroyden', 'excitingmixing', 'newton_krylov']
   125|         0|            0|            0|  0.00%|
   126|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   127|         0|            0|            0|  0.00%|# Utility functions
   128|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   129|         0|            0|            0|  0.00%|
   130|         0|            0|            0|  0.00%|
   131|         0|            0|            0|  0.00%|class NoConvergence(Exception):
   132|         0|            0|            0|  0.00%|    pass
   133|         0|            0|            0|  0.00%|
   134|         0|            0|            0|  0.00%|
   135|         0|            0|            0|  0.00%|def maxnorm(x):
   136|         0|            0|            0|  0.00%|    return np.absolute(x).max()
   137|         0|            0|            0|  0.00%|
   138|         0|            0|            0|  0.00%|
   139|         0|            0|            0|  0.00%|def _as_inexact(x):
   140|         0|            0|            0|  0.00%|    """Return `x` as an array, of either floats or complex floats"""
   141|         0|            0|            0|  0.00%|    x = asarray(x)
   142|         0|            0|            0|  0.00%|    if not np.issubdtype(x.dtype, np.inexact):
   143|         0|            0|            0|  0.00%|        return asarray(x, dtype=np.float_)
   144|         0|            0|            0|  0.00%|    return x
   145|         0|            0|            0|  0.00%|
   146|         0|            0|            0|  0.00%|
   147|         0|            0|            0|  0.00%|def _array_like(x, x0):
   148|         0|            0|            0|  0.00%|    """Return ndarray `x` as same array subclass and shape as `x0`"""
   149|         0|            0|            0|  0.00%|    x = np.reshape(x, np.shape(x0))
   150|         0|            0|            0|  0.00%|    wrap = getattr(x0, '__array_wrap__', x.__array_wrap__)
   151|         0|            0|            0|  0.00%|    return wrap(x)
   152|         0|            0|            0|  0.00%|
   153|         0|            0|            0|  0.00%|
   154|         0|            0|            0|  0.00%|def _safe_norm(v):
   155|         0|            0|            0|  0.00%|    if not np.isfinite(v).all():
   156|         0|            0|            0|  0.00%|        return np.array(np.inf)
   157|         0|            0|            0|  0.00%|    return norm(v)
   158|         0|            0|            0|  0.00%|
   159|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   160|         0|            0|            0|  0.00%|# Generic nonlinear solver machinery
   161|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   162|         0|            0|            0|  0.00%|
   163|         0|            0|            0|  0.00%|
   164|         0|            0|            0|  0.00%|_doc_parts = dict(
   165|         0|            0|            0|  0.00%|    params_basic="""
   166|         0|            0|            0|  0.00%|    F : function(x) -> f
   167|         0|            0|            0|  0.00%|        Function whose root to find; should take and return an array-like
   168|         0|            0|            0|  0.00%|        object.
   169|         0|            0|            0|  0.00%|    xin : array_like
   170|         0|            0|            0|  0.00%|        Initial guess for the solution
   171|         0|            0|            0|  0.00%|    """.strip(),
   172|         0|            0|            0|  0.00%|    params_extra="""
   173|         0|            0|            0|  0.00%|    iter : int, optional
   174|         0|            0|            0|  0.00%|        Number of iterations to make. If omitted (default), make as many
   175|         0|            0|            0|  0.00%|        as required to meet tolerances.
   176|         0|            0|            0|  0.00%|    verbose : bool, optional
   177|         0|            0|            0|  0.00%|        Print status to stdout on every iteration.
   178|         0|            0|            0|  0.00%|    maxiter : int, optional
   179|         0|            0|            0|  0.00%|        Maximum number of iterations to make. If more are needed to
   180|         0|            0|            0|  0.00%|        meet convergence, `NoConvergence` is raised.
   181|         0|            0|            0|  0.00%|    f_tol : float, optional
   182|         0|            0|            0|  0.00%|        Absolute tolerance (in max-norm) for the residual.
   183|         0|            0|            0|  0.00%|        If omitted, default is 6e-6.
   184|         0|            0|            0|  0.00%|    f_rtol : float, optional
   185|         0|            0|            0|  0.00%|        Relative tolerance for the residual. If omitted, not used.
   186|         0|            0|            0|  0.00%|    x_tol : float, optional
   187|         0|            0|            0|  0.00%|        Absolute minimum step size, as determined from the Jacobian
   188|         0|            0|            0|  0.00%|        approximation. If the step size is smaller than this, optimization
   189|         0|            0|            0|  0.00%|        is terminated as successful. If omitted, not used.
   190|         0|            0|            0|  0.00%|    x_rtol : float, optional
   191|         0|            0|            0|  0.00%|        Relative minimum step size. If omitted, not used.
   192|         0|            0|            0|  0.00%|    tol_norm : function(vector) -> scalar, optional
   193|         0|            0|            0|  0.00%|        Norm to use in convergence check. Default is the maximum norm.
   194|         0|            0|            0|  0.00%|    line_search : {None, 'armijo' (default), 'wolfe'}, optional
   195|         0|            0|            0|  0.00%|        Which type of a line search to use to determine the step size in the
   196|         0|            0|            0|  0.00%|        direction given by the Jacobian approximation. Defaults to 'armijo'.
   197|         0|            0|            0|  0.00%|    callback : function, optional
   198|         0|            0|            0|  0.00%|        Optional callback function. It is called on every iteration as
   199|         0|            0|            0|  0.00%|        ``callback(x, f)`` where `x` is the current solution and `f`
   200|         0|            0|            0|  0.00%|        the corresponding residual.
   201|         0|            0|            0|  0.00%|
   202|         0|            0|            0|  0.00%|    Returns
   203|         0|            0|            0|  0.00%|    -------
   204|         0|            0|            0|  0.00%|    sol : ndarray
   205|         0|            0|            0|  0.00%|        An array (of similar array type as `x0`) containing the final solution.
   206|         0|            0|            0|  0.00%|
   207|         0|            0|            0|  0.00%|    Raises
   208|         0|            0|            0|  0.00%|    ------
   209|         0|            0|            0|  0.00%|    NoConvergence
   210|         0|            0|            0|  0.00%|        When a solution was not found.
   211|         0|            0|            0|  0.00%|
   212|         0|            0|            0|  0.00%|    """.strip()
   213|         0|            0|            0|  0.00%|)
   214|         0|            0|            0|  0.00%|
   215|         0|            0|            0|  0.00%|
   216|         0|            0|            0|  0.00%|def _set_doc(obj):
   217|         0|            0|            0|  0.00%|    if obj.__doc__:
   218|         0|            0|            0|  0.00%|        obj.__doc__ = obj.__doc__ % _doc_parts
   219|         0|            0|            0|  0.00%|
   220|         0|            0|            0|  0.00%|
   221|         0|            0|            0|  0.00%|def nonlin_solve(F, x0, jacobian='krylov', iter=None, verbose=False,
   222|         0|            0|            0|  0.00%|                 maxiter=None, f_tol=None, f_rtol=None, x_tol=None, x_rtol=None,
   223|         0|            0|            0|  0.00%|                 tol_norm=None, line_search='armijo', callback=None,
   224|         0|            0|            0|  0.00%|                 full_output=False, raise_exception=True):
   225|         0|            0|            0|  0.00%|    """
   226|         0|            0|            0|  0.00%|    Find a root of a function, in a way suitable for large-scale problems.
   227|         0|            0|            0|  0.00%|
   228|         0|            0|            0|  0.00%|    Parameters
   229|         0|            0|            0|  0.00%|    ----------
   230|         0|            0|            0|  0.00%|    %(params_basic)s
   231|         0|            0|            0|  0.00%|    jacobian : Jacobian
   232|         0|            0|            0|  0.00%|        A Jacobian approximation: `Jacobian` object or something that
   233|         0|            0|            0|  0.00%|        `asjacobian` can transform to one. Alternatively, a string specifying
   234|         0|            0|            0|  0.00%|        which of the builtin Jacobian approximations to use:
   235|         0|            0|            0|  0.00%|
   236|         0|            0|            0|  0.00%|            krylov, broyden1, broyden2, anderson
   237|         0|            0|            0|  0.00%|            diagbroyden, linearmixing, excitingmixing
   238|         0|            0|            0|  0.00%|
   239|         0|            0|            0|  0.00%|    %(params_extra)s
   240|         0|            0|            0|  0.00%|    full_output : bool
   241|         0|            0|            0|  0.00%|        If true, returns a dictionary `info` containing convergence
   242|         0|            0|            0|  0.00%|        information.
   243|         0|            0|            0|  0.00%|    raise_exception : bool
   244|         0|            0|            0|  0.00%|        If True, a `NoConvergence` exception is raise if no solution is found.
   245|         0|            0|            0|  0.00%|
   246|         0|            0|            0|  0.00%|    See Also
   247|         0|            0|            0|  0.00%|    --------
   248|         0|            0|            0|  0.00%|    asjacobian, Jacobian
   249|         0|            0|            0|  0.00%|
   250|         0|            0|            0|  0.00%|    Notes
   251|         0|            0|            0|  0.00%|    -----
   252|         0|            0|            0|  0.00%|    This algorithm implements the inexact Newton method, with
   253|         0|            0|            0|  0.00%|    backtracking or full line searches. Several Jacobian
   254|         0|            0|            0|  0.00%|    approximations are available, including Krylov and Quasi-Newton
   255|         0|            0|            0|  0.00%|    methods.
   256|         0|            0|            0|  0.00%|
   257|         0|            0|            0|  0.00%|    References
   258|         0|            0|            0|  0.00%|    ----------
   259|         0|            0|            0|  0.00%|    .. [KIM] C. T. Kelley, \"Iterative Methods for Linear and Nonlinear
   260|         0|            0|            0|  0.00%|       Equations\". Society for Industrial and Applied Mathematics. (1995)
   261|         0|            0|            0|  0.00%|       https://archive.siam.org/books/kelley/fr16/
   262|         0|            0|            0|  0.00%|
   263|         0|            0|            0|  0.00%|    """
   264|         0|            0|            0|  0.00%|    # Can't use default parameters because it's being explicitly passed as None
   265|         0|            0|            0|  0.00%|    # from the calling function, so we need to set it here.
   266|         0|            0|            0|  0.00%|    tol_norm = maxnorm if tol_norm is None else tol_norm
   267|         0|            0|            0|  0.00%|    condition = TerminationCondition(f_tol=f_tol, f_rtol=f_rtol,
   268|         0|            0|            0|  0.00%|                                     x_tol=x_tol, x_rtol=x_rtol,
   269|         0|            0|            0|  0.00%|                                     iter=iter, norm=tol_norm)
   270|         0|            0|            0|  0.00%|
   271|         0|            0|            0|  0.00%|    x0 = _as_inexact(x0)
   272|         0|            0|            0|  0.00%|    func = lambda z: _as_inexact(F(_array_like(z, x0))).flatten()
   273|         0|            0|            0|  0.00%|    x = x0.flatten()
   274|         0|            0|            0|  0.00%|
   275|         0|            0|            0|  0.00%|    dx = np.inf
   276|         0|            0|            0|  0.00%|    Fx = func(x)
   277|         0|            0|            0|  0.00%|    Fx_norm = norm(Fx)
   278|         0|            0|            0|  0.00%|
   279|         0|            0|            0|  0.00%|    jacobian = asjacobian(jacobian)
   280|         0|            0|            0|  0.00%|    jacobian.setup(x.copy(), Fx, func)
   281|         0|            0|            0|  0.00%|
   282|         0|            0|            0|  0.00%|    if maxiter is None:
   283|         0|            0|            0|  0.00%|        if iter is not None:
   284|         0|            0|            0|  0.00%|            maxiter = iter + 1
   285|         0|            0|            0|  0.00%|        else:
   286|         0|            0|            0|  0.00%|            maxiter = 100*(x.size+1)
   287|         0|            0|            0|  0.00%|
   288|         0|            0|            0|  0.00%|    if line_search is True:
   289|         0|            0|            0|  0.00%|        line_search = 'armijo'
   290|         0|            0|            0|  0.00%|    elif line_search is False:
   291|         0|            0|            0|  0.00%|        line_search = None
   292|         0|            0|            0|  0.00%|
   293|         0|            0|            0|  0.00%|    if line_search not in (None, 'armijo', 'wolfe'):
   294|         0|            0|            0|  0.00%|        raise ValueError("Invalid line search")
   295|         0|            0|            0|  0.00%|
   296|         0|            0|            0|  0.00%|    # Solver tolerance selection
   297|         0|            0|            0|  0.00%|    gamma = 0.9
   298|         0|            0|            0|  0.00%|    eta_max = 0.9999
   299|         0|            0|            0|  0.00%|    eta_treshold = 0.1
   300|         0|            0|            0|  0.00%|    eta = 1e-3
   301|         0|            0|            0|  0.00%|
   302|         0|            0|            0|  0.00%|    for n in range(maxiter):
   303|         0|            0|            0|  0.00%|        status = condition.check(Fx, x, dx)
   304|         0|            0|            0|  0.00%|        if status:
   305|         0|            0|            0|  0.00%|            break
   306|         0|            0|            0|  0.00%|
   307|         0|            0|            0|  0.00%|        # The tolerance, as computed for scipy.sparse.linalg.* routines
   308|         0|            0|            0|  0.00%|        tol = min(eta, eta*Fx_norm)
   309|         0|            0|            0|  0.00%|        dx = -jacobian.solve(Fx, tol=tol)
   310|         0|            0|            0|  0.00%|
   311|         0|            0|            0|  0.00%|        if norm(dx) == 0:
   312|         0|            0|            0|  0.00%|            raise ValueError("Jacobian inversion yielded zero vector. "
   313|         0|            0|            0|  0.00%|                             "This indicates a bug in the Jacobian "
   314|         0|            0|            0|  0.00%|                             "approximation.")
   315|         0|            0|            0|  0.00%|
   316|         0|            0|            0|  0.00%|        # Line search, or Newton step
   317|         0|            0|            0|  0.00%|        if line_search:
   318|         0|            0|            0|  0.00%|            s, x, Fx, Fx_norm_new = _nonlin_line_search(func, x, Fx, dx,
   319|         0|            0|            0|  0.00%|                                                        line_search)
   320|         0|            0|            0|  0.00%|        else:
   321|         0|            0|            0|  0.00%|            s = 1.0
   322|         0|            0|            0|  0.00%|            x = x + dx
   323|         0|            0|            0|  0.00%|            Fx = func(x)
   324|         0|            0|            0|  0.00%|            Fx_norm_new = norm(Fx)
   325|         0|            0|            0|  0.00%|
   326|         0|            0|            0|  0.00%|        jacobian.update(x.copy(), Fx)
   327|         0|            0|            0|  0.00%|
   328|         0|            0|            0|  0.00%|        if callback:
   329|         0|            0|            0|  0.00%|            callback(x, Fx)
   330|         0|            0|            0|  0.00%|
   331|         0|            0|            0|  0.00%|        # Adjust forcing parameters for inexact methods
   332|         0|            0|            0|  0.00%|        eta_A = gamma * Fx_norm_new**2 / Fx_norm**2
   333|         0|            0|            0|  0.00%|        if gamma * eta**2 < eta_treshold:
   334|         0|            0|            0|  0.00%|            eta = min(eta_max, eta_A)
   335|         0|            0|            0|  0.00%|        else:
   336|         0|            0|            0|  0.00%|            eta = min(eta_max, max(eta_A, gamma*eta**2))
   337|         0|            0|            0|  0.00%|
   338|         0|            0|            0|  0.00%|        Fx_norm = Fx_norm_new
   339|         0|            0|            0|  0.00%|
   340|         0|            0|            0|  0.00%|        # Print status
   341|         0|            0|            0|  0.00%|        if verbose:
   342|         0|            0|            0|  0.00%|            sys.stdout.write("%d:  |F(x)| = %g; step %g\n" % (
   343|         0|            0|            0|  0.00%|                n, tol_norm(Fx), s))
   344|         0|            0|            0|  0.00%|            sys.stdout.flush()
   345|         0|            0|            0|  0.00%|    else:
   346|         0|            0|            0|  0.00%|        if raise_exception:
   347|         0|            0|            0|  0.00%|            raise NoConvergence(_array_like(x, x0))
   348|         0|            0|            0|  0.00%|        else:
   349|         0|            0|            0|  0.00%|            status = 2
   350|         0|            0|            0|  0.00%|
   351|         0|            0|            0|  0.00%|    if full_output:
   352|         0|            0|            0|  0.00%|        info = {'nit': condition.iteration,
   353|         0|            0|            0|  0.00%|                'fun': Fx,
   354|         0|            0|            0|  0.00%|                'status': status,
   355|         0|            0|            0|  0.00%|                'success': status == 1,
   356|         0|            0|            0|  0.00%|                'message': {1: 'A solution was found at the specified '
   357|         0|            0|            0|  0.00%|                               'tolerance.',
   358|         0|            0|            0|  0.00%|                            2: 'The maximum number of iterations allowed '
   359|         0|            0|            0|  0.00%|                               'has been reached.'
   360|         0|            0|            0|  0.00%|                            }[status]
   361|         0|            0|            0|  0.00%|                }
   362|         0|            0|            0|  0.00%|        return _array_like(x, x0), info
   363|         0|            0|            0|  0.00%|    else:
   364|         0|            0|            0|  0.00%|        return _array_like(x, x0)
   365|         0|            0|            0|  0.00%|
   366|         0|            0|            0|  0.00%|
   367|         0|            0|            0|  0.00%|_set_doc(nonlin_solve)
   368|         0|            0|            0|  0.00%|
   369|         0|            0|            0|  0.00%|
   370|         0|            0|            0|  0.00%|def _nonlin_line_search(func, x, Fx, dx, search_type='armijo', rdiff=1e-8,
   371|         0|            0|            0|  0.00%|                        smin=1e-2):
   372|         0|            0|            0|  0.00%|    tmp_s = [0]
   373|         0|            0|            0|  0.00%|    tmp_Fx = [Fx]
   374|         0|            0|            0|  0.00%|    tmp_phi = [norm(Fx)**2]
   375|         0|            0|            0|  0.00%|    s_norm = norm(x) / norm(dx)
   376|         0|            0|            0|  0.00%|
   377|         0|            0|            0|  0.00%|    def phi(s, store=True):
   378|         0|            0|            0|  0.00%|        if s == tmp_s[0]:
   379|         0|            0|            0|  0.00%|            return tmp_phi[0]
   380|         0|            0|            0|  0.00%|        xt = x + s*dx
   381|         0|            0|            0|  0.00%|        v = func(xt)
   382|         0|            0|            0|  0.00%|        p = _safe_norm(v)**2
   383|         0|            0|            0|  0.00%|        if store:
   384|         0|            0|            0|  0.00%|            tmp_s[0] = s
   385|         0|            0|            0|  0.00%|            tmp_phi[0] = p
   386|         0|            0|            0|  0.00%|            tmp_Fx[0] = v
   387|         0|            0|            0|  0.00%|        return p
   388|         0|            0|            0|  0.00%|
   389|         0|            0|            0|  0.00%|    def derphi(s):
   390|         0|            0|            0|  0.00%|        ds = (abs(s) + s_norm + 1) * rdiff
   391|         0|            0|            0|  0.00%|        return (phi(s+ds, store=False) - phi(s)) / ds
   392|         0|            0|            0|  0.00%|
   393|         0|            0|            0|  0.00%|    if search_type == 'wolfe':
   394|         0|            0|            0|  0.00%|        s, phi1, phi0 = scalar_search_wolfe1(phi, derphi, tmp_phi[0],
   395|         0|            0|            0|  0.00%|                                             xtol=1e-2, amin=smin)
   396|         0|            0|            0|  0.00%|    elif search_type == 'armijo':
   397|         0|            0|            0|  0.00%|        s, phi1 = scalar_search_armijo(phi, tmp_phi[0], -tmp_phi[0],
   398|         0|            0|            0|  0.00%|                                       amin=smin)
   399|         0|            0|            0|  0.00%|
   400|         0|            0|            0|  0.00%|    if s is None:
   401|         0|            0|            0|  0.00%|        # XXX: No suitable step length found. Take the full Newton step,
   402|         0|            0|            0|  0.00%|        #      and hope for the best.
   403|         0|            0|            0|  0.00%|        s = 1.0
   404|         0|            0|            0|  0.00%|
   405|         0|            0|            0|  0.00%|    x = x + s*dx
   406|         0|            0|            0|  0.00%|    if s == tmp_s[0]:
   407|         0|            0|            0|  0.00%|        Fx = tmp_Fx[0]
   408|         0|            0|            0|  0.00%|    else:
   409|         0|            0|            0|  0.00%|        Fx = func(x)
   410|         0|            0|            0|  0.00%|    Fx_norm = norm(Fx)
   411|         0|            0|            0|  0.00%|
   412|         0|            0|            0|  0.00%|    return s, x, Fx, Fx_norm
   413|         0|            0|            0|  0.00%|
   414|         0|            0|            0|  0.00%|
   415|         0|            0|            0|  0.00%|class TerminationCondition(object):
   416|         0|            0|            0|  0.00%|    """
   417|         0|            0|            0|  0.00%|    Termination condition for an iteration. It is terminated if
   418|         0|            0|            0|  0.00%|
   419|         0|            0|            0|  0.00%|    - |F| < f_rtol*|F_0|, AND
   420|         0|            0|            0|  0.00%|    - |F| < f_tol
   421|         0|            0|            0|  0.00%|
   422|         0|            0|            0|  0.00%|    AND
   423|         0|            0|            0|  0.00%|
   424|         0|            0|            0|  0.00%|    - |dx| < x_rtol*|x|, AND
   425|         0|            0|            0|  0.00%|    - |dx| < x_tol
   426|         0|            0|            0|  0.00%|
   427|         0|            0|            0|  0.00%|    """
   428|         0|            0|            0|  0.00%|    def __init__(self, f_tol=None, f_rtol=None, x_tol=None, x_rtol=None,
   429|         0|            0|            0|  0.00%|                 iter=None, norm=maxnorm):
   430|         0|            0|            0|  0.00%|
   431|         0|            0|            0|  0.00%|        if f_tol is None:
   432|         0|            0|            0|  0.00%|            f_tol = np.finfo(np.float_).eps ** (1./3)
   433|         0|            0|            0|  0.00%|        if f_rtol is None:
   434|         0|            0|            0|  0.00%|            f_rtol = np.inf
   435|         0|            0|            0|  0.00%|        if x_tol is None:
   436|         0|            0|            0|  0.00%|            x_tol = np.inf
   437|         0|            0|            0|  0.00%|        if x_rtol is None:
   438|         0|            0|            0|  0.00%|            x_rtol = np.inf
   439|         0|            0|            0|  0.00%|
   440|         0|            0|            0|  0.00%|        self.x_tol = x_tol
   441|         0|            0|            0|  0.00%|        self.x_rtol = x_rtol
   442|         0|            0|            0|  0.00%|        self.f_tol = f_tol
   443|         0|            0|            0|  0.00%|        self.f_rtol = f_rtol
   444|         0|            0|            0|  0.00%|
   445|         0|            0|            0|  0.00%|        self.norm = norm
   446|         0|            0|            0|  0.00%|
   447|         0|            0|            0|  0.00%|        self.iter = iter
   448|         0|            0|            0|  0.00%|
   449|         0|            0|            0|  0.00%|        self.f0_norm = None
   450|         0|            0|            0|  0.00%|        self.iteration = 0
   451|         0|            0|            0|  0.00%|
   452|         0|            0|            0|  0.00%|    def check(self, f, x, dx):
   453|         0|            0|            0|  0.00%|        self.iteration += 1
   454|         0|            0|            0|  0.00%|        f_norm = self.norm(f)
   455|         0|            0|            0|  0.00%|        x_norm = self.norm(x)
   456|         0|            0|            0|  0.00%|        dx_norm = self.norm(dx)
   457|         0|            0|            0|  0.00%|
   458|         0|            0|            0|  0.00%|        if self.f0_norm is None:
   459|         0|            0|            0|  0.00%|            self.f0_norm = f_norm
   460|         0|            0|            0|  0.00%|
   461|         0|            0|            0|  0.00%|        if f_norm == 0:
   462|         0|            0|            0|  0.00%|            return 1
   463|         0|            0|            0|  0.00%|
   464|         0|            0|            0|  0.00%|        if self.iter is not None:
   465|         0|            0|            0|  0.00%|            # backwards compatibility with SciPy 0.6.0
   466|         0|            0|            0|  0.00%|            return 2 * (self.iteration > self.iter)
   467|         0|            0|            0|  0.00%|
   468|         0|            0|            0|  0.00%|        # NB: condition must succeed for rtol=inf even if norm == 0
   469|         0|            0|            0|  0.00%|        return int((f_norm <= self.f_tol
   470|         0|            0|            0|  0.00%|                    and f_norm/self.f_rtol <= self.f0_norm)
   471|         0|            0|            0|  0.00%|                   and (dx_norm <= self.x_tol
   472|         0|            0|            0|  0.00%|                        and dx_norm/self.x_rtol <= x_norm))
   473|         0|            0|            0|  0.00%|
   474|         0|            0|            0|  0.00%|
   475|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   476|         0|            0|            0|  0.00%|# Generic Jacobian approximation
   477|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   478|         0|            0|            0|  0.00%|
   479|         0|            0|            0|  0.00%|class Jacobian(object):
   480|         0|            0|            0|  0.00%|    """
   481|         0|            0|            0|  0.00%|    Common interface for Jacobians or Jacobian approximations.
   482|         0|            0|            0|  0.00%|
   483|         0|            0|            0|  0.00%|    The optional methods come useful when implementing trust region
   484|         0|            0|            0|  0.00%|    etc., algorithms that often require evaluating transposes of the
   485|         0|            0|            0|  0.00%|    Jacobian.
   486|         0|            0|            0|  0.00%|
   487|         0|            0|            0|  0.00%|    Methods
   488|         0|            0|            0|  0.00%|    -------
   489|         0|            0|            0|  0.00%|    solve
   490|         0|            0|            0|  0.00%|        Returns J^-1 * v
   491|         0|            0|            0|  0.00%|    update
   492|         0|            0|            0|  0.00%|        Updates Jacobian to point `x` (where the function has residual `Fx`)
   493|         0|            0|            0|  0.00%|
   494|         0|            0|            0|  0.00%|    matvec : optional
   495|         0|            0|            0|  0.00%|        Returns J * v
   496|         0|            0|            0|  0.00%|    rmatvec : optional
   497|         0|            0|            0|  0.00%|        Returns A^H * v
   498|         0|            0|            0|  0.00%|    rsolve : optional
   499|         0|            0|            0|  0.00%|        Returns A^-H * v
   500|         0|            0|            0|  0.00%|    matmat : optional
   501|         0|            0|            0|  0.00%|        Returns A * V, where V is a dense matrix with dimensions (N,K).
   502|         0|            0|            0|  0.00%|    todense : optional
   503|         0|            0|            0|  0.00%|        Form the dense Jacobian matrix. Necessary for dense trust region
   504|         0|            0|            0|  0.00%|        algorithms, and useful for testing.
   505|         0|            0|            0|  0.00%|
   506|         0|            0|            0|  0.00%|    Attributes
   507|         0|            0|            0|  0.00%|    ----------
   508|         0|            0|            0|  0.00%|    shape
   509|         0|            0|            0|  0.00%|        Matrix dimensions (M, N)
   510|         0|            0|            0|  0.00%|    dtype
   511|         0|            0|            0|  0.00%|        Data type of the matrix.
   512|         0|            0|            0|  0.00%|    func : callable, optional
   513|         0|            0|            0|  0.00%|        Function the Jacobian corresponds to
   514|         0|            0|            0|  0.00%|
   515|         0|            0|            0|  0.00%|    """
   516|         0|            0|            0|  0.00%|
   517|         0|            0|            0|  0.00%|    def __init__(self, **kw):
   518|         0|            0|            0|  0.00%|        names = ["solve", "update", "matvec", "rmatvec", "rsolve",
   519|         0|            0|            0|  0.00%|                 "matmat", "todense", "shape", "dtype"]
   520|         0|            0|            0|  0.00%|        for name, value in kw.items():
   521|         0|            0|            0|  0.00%|            if name not in names:
   522|         0|            0|            0|  0.00%|                raise ValueError("Unknown keyword argument %s" % name)
   523|         0|            0|            0|  0.00%|            if value is not None:
   524|         0|            0|            0|  0.00%|                setattr(self, name, kw[name])
   525|         0|            0|            0|  0.00%|
   526|         0|            0|            0|  0.00%|        if hasattr(self, 'todense'):
   527|         0|            0|            0|  0.00%|            self.__array__ = lambda: self.todense()
   528|         0|            0|            0|  0.00%|
   529|         0|            0|            0|  0.00%|    def aspreconditioner(self):
   530|         0|            0|            0|  0.00%|        return InverseJacobian(self)
   531|         0|            0|            0|  0.00%|
   532|         0|            0|            0|  0.00%|    def solve(self, v, tol=0):
   533|         0|            0|            0|  0.00%|        raise NotImplementedError
   534|         0|            0|            0|  0.00%|
   535|         0|            0|            0|  0.00%|    def update(self, x, F):
   536|         0|            0|            0|  0.00%|        pass
   537|         0|            0|            0|  0.00%|
   538|         0|            0|            0|  0.00%|    def setup(self, x, F, func):
   539|         0|            0|            0|  0.00%|        self.func = func
   540|         0|            0|            0|  0.00%|        self.shape = (F.size, x.size)
   541|         0|            0|            0|  0.00%|        self.dtype = F.dtype
   542|         0|            0|            0|  0.00%|        if self.__class__.setup is Jacobian.setup:
   543|         0|            0|            0|  0.00%|            # Call on the first point unless overridden
   544|         0|            0|            0|  0.00%|            self.update(x, F)
   545|         0|            0|            0|  0.00%|
   546|         0|            0|            0|  0.00%|
   547|         0|            0|            0|  0.00%|class InverseJacobian(object):
   548|         0|            0|            0|  0.00%|    def __init__(self, jacobian):
   549|         0|            0|            0|  0.00%|        self.jacobian = jacobian
   550|         0|            0|            0|  0.00%|        self.matvec = jacobian.solve
   551|         0|            0|            0|  0.00%|        self.update = jacobian.update
   552|         0|            0|            0|  0.00%|        if hasattr(jacobian, 'setup'):
   553|         0|            0|            0|  0.00%|            self.setup = jacobian.setup
   554|         0|            0|            0|  0.00%|        if hasattr(jacobian, 'rsolve'):
   555|         0|            0|            0|  0.00%|            self.rmatvec = jacobian.rsolve
   556|         0|            0|            0|  0.00%|
   557|         0|            0|            0|  0.00%|    @property
   558|         0|            0|            0|  0.00%|    def shape(self):
   559|         0|            0|            0|  0.00%|        return self.jacobian.shape
   560|         0|            0|            0|  0.00%|
   561|         0|            0|            0|  0.00%|    @property
   562|         0|            0|            0|  0.00%|    def dtype(self):
   563|         0|            0|            0|  0.00%|        return self.jacobian.dtype
   564|         0|            0|            0|  0.00%|
   565|         0|            0|            0|  0.00%|
   566|         0|            0|            0|  0.00%|def asjacobian(J):
   567|         0|            0|            0|  0.00%|    """
   568|         0|            0|            0|  0.00%|    Convert given object to one suitable for use as a Jacobian.
   569|         0|            0|            0|  0.00%|    """
   570|         0|            0|            0|  0.00%|    spsolve = scipy.sparse.linalg.spsolve
   571|         0|            0|            0|  0.00%|    if isinstance(J, Jacobian):
   572|         0|            0|            0|  0.00%|        return J
   573|         0|            0|            0|  0.00%|    elif inspect.isclass(J) and issubclass(J, Jacobian):
   574|         0|            0|            0|  0.00%|        return J()
   575|         0|            0|            0|  0.00%|    elif isinstance(J, np.ndarray):
   576|         0|            0|            0|  0.00%|        if J.ndim > 2:
   577|         0|            0|            0|  0.00%|            raise ValueError('array must have rank <= 2')
   578|         0|            0|            0|  0.00%|        J = np.atleast_2d(np.asarray(J))
   579|         0|            0|            0|  0.00%|        if J.shape[0] != J.shape[1]:
   580|         0|            0|            0|  0.00%|            raise ValueError('array must be square')
   581|         0|            0|            0|  0.00%|
   582|         0|            0|            0|  0.00%|        return Jacobian(matvec=lambda v: dot(J, v),
   583|         0|            0|            0|  0.00%|                        rmatvec=lambda v: dot(J.conj().T, v),
   584|         0|            0|            0|  0.00%|                        solve=lambda v: solve(J, v),
   585|         0|            0|            0|  0.00%|                        rsolve=lambda v: solve(J.conj().T, v),
   586|         0|            0|            0|  0.00%|                        dtype=J.dtype, shape=J.shape)
   587|         0|            0|            0|  0.00%|    elif scipy.sparse.isspmatrix(J):
   588|         0|            0|            0|  0.00%|        if J.shape[0] != J.shape[1]:
   589|         0|            0|            0|  0.00%|            raise ValueError('matrix must be square')
   590|         0|            0|            0|  0.00%|        return Jacobian(matvec=lambda v: J*v,
   591|         0|            0|            0|  0.00%|                        rmatvec=lambda v: J.conj().T * v,
   592|         0|            0|            0|  0.00%|                        solve=lambda v: spsolve(J, v),
   593|         0|            0|            0|  0.00%|                        rsolve=lambda v: spsolve(J.conj().T, v),
   594|         0|            0|            0|  0.00%|                        dtype=J.dtype, shape=J.shape)
   595|         0|            0|            0|  0.00%|    elif hasattr(J, 'shape') and hasattr(J, 'dtype') and hasattr(J, 'solve'):
   596|         0|            0|            0|  0.00%|        return Jacobian(matvec=getattr(J, 'matvec'),
   597|         0|            0|            0|  0.00%|                        rmatvec=getattr(J, 'rmatvec'),
   598|         0|            0|            0|  0.00%|                        solve=J.solve,
   599|         0|            0|            0|  0.00%|                        rsolve=getattr(J, 'rsolve'),
   600|         0|            0|            0|  0.00%|                        update=getattr(J, 'update'),
   601|         0|            0|            0|  0.00%|                        setup=getattr(J, 'setup'),
   602|         0|            0|            0|  0.00%|                        dtype=J.dtype,
   603|         0|            0|            0|  0.00%|                        shape=J.shape)
   604|         0|            0|            0|  0.00%|    elif callable(J):
   605|         0|            0|            0|  0.00%|        # Assume it's a function J(x) that returns the Jacobian
   606|         0|            0|            0|  0.00%|        class Jac(Jacobian):
   607|         0|            0|            0|  0.00%|            def update(self, x, F):
   608|         0|            0|            0|  0.00%|                self.x = x
   609|         0|            0|            0|  0.00%|
   610|         0|            0|            0|  0.00%|            def solve(self, v, tol=0):
   611|         0|            0|            0|  0.00%|                m = J(self.x)
   612|         0|            0|            0|  0.00%|                if isinstance(m, np.ndarray):
   613|         0|            0|            0|  0.00%|                    return solve(m, v)
   614|         0|            0|            0|  0.00%|                elif scipy.sparse.isspmatrix(m):
   615|         0|            0|            0|  0.00%|                    return spsolve(m, v)
   616|         0|            0|            0|  0.00%|                else:
   617|         0|            0|            0|  0.00%|                    raise ValueError("Unknown matrix type")
   618|         0|            0|            0|  0.00%|
   619|         0|            0|            0|  0.00%|            def matvec(self, v):
   620|         0|            0|            0|  0.00%|                m = J(self.x)
   621|         0|            0|            0|  0.00%|                if isinstance(m, np.ndarray):
   622|         0|            0|            0|  0.00%|                    return dot(m, v)
   623|         0|            0|            0|  0.00%|                elif scipy.sparse.isspmatrix(m):
   624|         0|            0|            0|  0.00%|                    return m*v
   625|         0|            0|            0|  0.00%|                else:
   626|         0|            0|            0|  0.00%|                    raise ValueError("Unknown matrix type")
   627|         0|            0|            0|  0.00%|
   628|         0|            0|            0|  0.00%|            def rsolve(self, v, tol=0):
   629|         0|            0|            0|  0.00%|                m = J(self.x)
   630|         0|            0|            0|  0.00%|                if isinstance(m, np.ndarray):
   631|         0|            0|            0|  0.00%|                    return solve(m.conj().T, v)
   632|         0|            0|            0|  0.00%|                elif scipy.sparse.isspmatrix(m):
   633|         0|            0|            0|  0.00%|                    return spsolve(m.conj().T, v)
   634|         0|            0|            0|  0.00%|                else:
   635|         0|            0|            0|  0.00%|                    raise ValueError("Unknown matrix type")
   636|         0|            0|            0|  0.00%|
   637|         0|            0|            0|  0.00%|            def rmatvec(self, v):
   638|         0|            0|            0|  0.00%|                m = J(self.x)
   639|         0|            0|            0|  0.00%|                if isinstance(m, np.ndarray):
   640|         0|            0|            0|  0.00%|                    return dot(m.conj().T, v)
   641|         0|            0|            0|  0.00%|                elif scipy.sparse.isspmatrix(m):
   642|         0|            0|            0|  0.00%|                    return m.conj().T * v
   643|         0|            0|            0|  0.00%|                else:
   644|         0|            0|            0|  0.00%|                    raise ValueError("Unknown matrix type")
   645|         0|            0|            0|  0.00%|        return Jac()
   646|         0|            0|            0|  0.00%|    elif isinstance(J, str):
   647|         0|            0|            0|  0.00%|        return dict(broyden1=BroydenFirst,
   648|         0|            0|            0|  0.00%|                    broyden2=BroydenSecond,
   649|         0|            0|            0|  0.00%|                    anderson=Anderson,
   650|         0|            0|            0|  0.00%|                    diagbroyden=DiagBroyden,
   651|         0|            0|            0|  0.00%|                    linearmixing=LinearMixing,
   652|         0|            0|            0|  0.00%|                    excitingmixing=ExcitingMixing,
   653|         0|            0|            0|  0.00%|                    krylov=KrylovJacobian)[J]()
   654|         0|            0|            0|  0.00%|    else:
   655|         0|            0|            0|  0.00%|        raise TypeError('Cannot convert object to a Jacobian')
   656|         0|            0|            0|  0.00%|
   657|         0|            0|            0|  0.00%|
   658|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   659|         0|            0|            0|  0.00%|# Broyden
   660|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   661|         0|            0|            0|  0.00%|
   662|         0|            0|            0|  0.00%|class GenericBroyden(Jacobian):
   663|         0|            0|            0|  0.00%|    def setup(self, x0, f0, func):
   664|         0|            0|            0|  0.00%|        Jacobian.setup(self, x0, f0, func)
   665|         0|            0|            0|  0.00%|        self.last_f = f0
   666|         0|            0|            0|  0.00%|        self.last_x = x0
   667|         0|            0|            0|  0.00%|
   668|         0|            0|            0|  0.00%|        if hasattr(self, 'alpha') and self.alpha is None:
   669|         0|            0|            0|  0.00%|            # Autoscale the initial Jacobian parameter
   670|         0|            0|            0|  0.00%|            # unless we have already guessed the solution.
   671|         0|            0|            0|  0.00%|            normf0 = norm(f0)
   672|         0|            0|            0|  0.00%|            if normf0:
   673|         0|            0|            0|  0.00%|                self.alpha = 0.5*max(norm(x0), 1) / normf0
   674|         0|            0|            0|  0.00%|            else:
   675|         0|            0|            0|  0.00%|                self.alpha = 1.0
   676|         0|            0|            0|  0.00%|
   677|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
   678|         0|            0|            0|  0.00%|        raise NotImplementedError
   679|         0|            0|            0|  0.00%|
   680|         0|            0|            0|  0.00%|    def update(self, x, f):
   681|         0|            0|            0|  0.00%|        df = f - self.last_f
   682|         0|            0|            0|  0.00%|        dx = x - self.last_x
   683|         0|            0|            0|  0.00%|        self._update(x, f, dx, df, norm(dx), norm(df))
   684|         0|            0|            0|  0.00%|        self.last_f = f
   685|         0|            0|            0|  0.00%|        self.last_x = x
   686|         0|            0|            0|  0.00%|
   687|         0|            0|            0|  0.00%|
   688|         0|            0|            0|  0.00%|class LowRankMatrix(object):
   689|         0|            0|            0|  0.00%|    r"""
   690|         0|            0|            0|  0.00%|    A matrix represented as
   691|         0|            0|            0|  0.00%|
   692|         0|            0|            0|  0.00%|    .. math:: \alpha I + \sum_{n=0}^{n=M} c_n d_n^\dagger
   693|         0|            0|            0|  0.00%|
   694|         0|            0|            0|  0.00%|    However, if the rank of the matrix reaches the dimension of the vectors,
   695|         0|            0|            0|  0.00%|    full matrix representation will be used thereon.
   696|         0|            0|            0|  0.00%|
   697|         0|            0|            0|  0.00%|    """
   698|         0|            0|            0|  0.00%|
   699|         0|            0|            0|  0.00%|    def __init__(self, alpha, n, dtype):
   700|         0|            0|            0|  0.00%|        self.alpha = alpha
   701|         0|            0|            0|  0.00%|        self.cs = []
   702|         0|            0|            0|  0.00%|        self.ds = []
   703|         0|            0|            0|  0.00%|        self.n = n
   704|         0|            0|            0|  0.00%|        self.dtype = dtype
   705|         0|            0|            0|  0.00%|        self.collapsed = None
   706|         0|            0|            0|  0.00%|
   707|         0|            0|            0|  0.00%|    @staticmethod
   708|         0|            0|            0|  0.00%|    def _matvec(v, alpha, cs, ds):
   709|         0|            0|            0|  0.00%|        axpy, scal, dotc = get_blas_funcs(['axpy', 'scal', 'dotc'],
   710|         0|            0|            0|  0.00%|                                          cs[:1] + [v])
   711|         0|            0|            0|  0.00%|        w = alpha * v
   712|         0|            0|            0|  0.00%|        for c, d in zip(cs, ds):
   713|         0|            0|            0|  0.00%|            a = dotc(d, v)
   714|         0|            0|            0|  0.00%|            w = axpy(c, w, w.size, a)
   715|         0|            0|            0|  0.00%|        return w
   716|         0|            0|            0|  0.00%|
   717|         0|            0|            0|  0.00%|    @staticmethod
   718|         0|            0|            0|  0.00%|    def _solve(v, alpha, cs, ds):
   719|         0|            0|            0|  0.00%|        """Evaluate w = M^-1 v"""
   720|         0|            0|            0|  0.00%|        if len(cs) == 0:
   721|         0|            0|            0|  0.00%|            return v/alpha
   722|         0|            0|            0|  0.00%|
   723|         0|            0|            0|  0.00%|        # (B + C D^H)^-1 = B^-1 - B^-1 C (I + D^H B^-1 C)^-1 D^H B^-1
   724|         0|            0|            0|  0.00%|
   725|         0|            0|            0|  0.00%|        axpy, dotc = get_blas_funcs(['axpy', 'dotc'], cs[:1] + [v])
   726|         0|            0|            0|  0.00%|
   727|         0|            0|            0|  0.00%|        c0 = cs[0]
   728|         0|            0|            0|  0.00%|        A = alpha * np.identity(len(cs), dtype=c0.dtype)
   729|         0|            0|            0|  0.00%|        for i, d in enumerate(ds):
   730|         0|            0|            0|  0.00%|            for j, c in enumerate(cs):
   731|         0|            0|            0|  0.00%|                A[i,j] += dotc(d, c)
   732|         0|            0|            0|  0.00%|
   733|         0|            0|            0|  0.00%|        q = np.zeros(len(cs), dtype=c0.dtype)
   734|         0|            0|            0|  0.00%|        for j, d in enumerate(ds):
   735|         0|            0|            0|  0.00%|            q[j] = dotc(d, v)
   736|         0|            0|            0|  0.00%|        q /= alpha
   737|         0|            0|            0|  0.00%|        q = solve(A, q)
   738|         0|            0|            0|  0.00%|
   739|         0|            0|            0|  0.00%|        w = v/alpha
   740|         0|            0|            0|  0.00%|        for c, qc in zip(cs, q):
   741|         0|            0|            0|  0.00%|            w = axpy(c, w, w.size, -qc)
   742|         0|            0|            0|  0.00%|
   743|         0|            0|            0|  0.00%|        return w
   744|         0|            0|            0|  0.00%|
   745|         0|            0|            0|  0.00%|    def matvec(self, v):
   746|         0|            0|            0|  0.00%|        """Evaluate w = M v"""
   747|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   748|         0|            0|            0|  0.00%|            return np.dot(self.collapsed, v)
   749|         0|            0|            0|  0.00%|        return LowRankMatrix._matvec(v, self.alpha, self.cs, self.ds)
   750|         0|            0|            0|  0.00%|
   751|         0|            0|            0|  0.00%|    def rmatvec(self, v):
   752|         0|            0|            0|  0.00%|        """Evaluate w = M^H v"""
   753|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   754|         0|            0|            0|  0.00%|            return np.dot(self.collapsed.T.conj(), v)
   755|         0|            0|            0|  0.00%|        return LowRankMatrix._matvec(v, np.conj(self.alpha), self.ds, self.cs)
   756|         0|            0|            0|  0.00%|
   757|         0|            0|            0|  0.00%|    def solve(self, v, tol=0):
   758|         0|            0|            0|  0.00%|        """Evaluate w = M^-1 v"""
   759|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   760|         0|            0|            0|  0.00%|            return solve(self.collapsed, v)
   761|         0|            0|            0|  0.00%|        return LowRankMatrix._solve(v, self.alpha, self.cs, self.ds)
   762|         0|            0|            0|  0.00%|
   763|         0|            0|            0|  0.00%|    def rsolve(self, v, tol=0):
   764|         0|            0|            0|  0.00%|        """Evaluate w = M^-H v"""
   765|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   766|         0|            0|            0|  0.00%|            return solve(self.collapsed.T.conj(), v)
   767|         0|            0|            0|  0.00%|        return LowRankMatrix._solve(v, np.conj(self.alpha), self.ds, self.cs)
   768|         0|            0|            0|  0.00%|
   769|         0|            0|            0|  0.00%|    def append(self, c, d):
   770|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   771|         0|            0|            0|  0.00%|            self.collapsed += c[:,None] * d[None,:].conj()
   772|         0|            0|            0|  0.00%|            return
   773|         0|            0|            0|  0.00%|
   774|         0|            0|            0|  0.00%|        self.cs.append(c)
   775|         0|            0|            0|  0.00%|        self.ds.append(d)
   776|         0|            0|            0|  0.00%|
   777|         0|            0|            0|  0.00%|        if len(self.cs) > c.size:
   778|         0|            0|            0|  0.00%|            self.collapse()
   779|         0|            0|            0|  0.00%|
   780|         0|            0|            0|  0.00%|    def __array__(self):
   781|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   782|         0|            0|            0|  0.00%|            return self.collapsed
   783|         0|            0|            0|  0.00%|
   784|         0|            0|            0|  0.00%|        Gm = self.alpha*np.identity(self.n, dtype=self.dtype)
   785|         0|            0|            0|  0.00%|        for c, d in zip(self.cs, self.ds):
   786|         0|            0|            0|  0.00%|            Gm += c[:,None]*d[None,:].conj()
   787|         0|            0|            0|  0.00%|        return Gm
   788|         0|            0|            0|  0.00%|
   789|         0|            0|            0|  0.00%|    def collapse(self):
   790|         0|            0|            0|  0.00%|        """Collapse the low-rank matrix to a full-rank one."""
   791|         0|            0|            0|  0.00%|        self.collapsed = np.array(self)
   792|         0|            0|            0|  0.00%|        self.cs = None
   793|         0|            0|            0|  0.00%|        self.ds = None
   794|         0|            0|            0|  0.00%|        self.alpha = None
   795|         0|            0|            0|  0.00%|
   796|         0|            0|            0|  0.00%|    def restart_reduce(self, rank):
   797|         0|            0|            0|  0.00%|        """
   798|         0|            0|            0|  0.00%|        Reduce the rank of the matrix by dropping all vectors.
   799|         0|            0|            0|  0.00%|        """
   800|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   801|         0|            0|            0|  0.00%|            return
   802|         0|            0|            0|  0.00%|        assert rank > 0
   803|         0|            0|            0|  0.00%|        if len(self.cs) > rank:
   804|         0|            0|            0|  0.00%|            del self.cs[:]
   805|         0|            0|            0|  0.00%|            del self.ds[:]
   806|         0|            0|            0|  0.00%|
   807|         0|            0|            0|  0.00%|    def simple_reduce(self, rank):
   808|         0|            0|            0|  0.00%|        """
   809|         0|            0|            0|  0.00%|        Reduce the rank of the matrix by dropping oldest vectors.
   810|         0|            0|            0|  0.00%|        """
   811|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   812|         0|            0|            0|  0.00%|            return
   813|         0|            0|            0|  0.00%|        assert rank > 0
   814|         0|            0|            0|  0.00%|        while len(self.cs) > rank:
   815|         0|            0|            0|  0.00%|            del self.cs[0]
   816|         0|            0|            0|  0.00%|            del self.ds[0]
   817|         0|            0|            0|  0.00%|
   818|         0|            0|            0|  0.00%|    def svd_reduce(self, max_rank, to_retain=None):
   819|         0|            0|            0|  0.00%|        """
   820|         0|            0|            0|  0.00%|        Reduce the rank of the matrix by retaining some SVD components.
   821|         0|            0|            0|  0.00%|
   822|         0|            0|            0|  0.00%|        This corresponds to the \"Broyden Rank Reduction Inverse\"
   823|         0|            0|            0|  0.00%|        algorithm described in [1]_.
   824|         0|            0|            0|  0.00%|
   825|         0|            0|            0|  0.00%|        Note that the SVD decomposition can be done by solving only a
   826|         0|            0|            0|  0.00%|        problem whose size is the effective rank of this matrix, which
   827|         0|            0|            0|  0.00%|        is viable even for large problems.
   828|         0|            0|            0|  0.00%|
   829|         0|            0|            0|  0.00%|        Parameters
   830|         0|            0|            0|  0.00%|        ----------
   831|         0|            0|            0|  0.00%|        max_rank : int
   832|         0|            0|            0|  0.00%|            Maximum rank of this matrix after reduction.
   833|         0|            0|            0|  0.00%|        to_retain : int, optional
   834|         0|            0|            0|  0.00%|            Number of SVD components to retain when reduction is done
   835|         0|            0|            0|  0.00%|            (ie. rank > max_rank). Default is ``max_rank - 2``.
   836|         0|            0|            0|  0.00%|
   837|         0|            0|            0|  0.00%|        References
   838|         0|            0|            0|  0.00%|        ----------
   839|         0|            0|            0|  0.00%|        .. [1] B.A. van der Rotten, PhD thesis,
   840|         0|            0|            0|  0.00%|           \"A limited memory Broyden method to solve high-dimensional
   841|         0|            0|            0|  0.00%|           systems of nonlinear equations\". Mathematisch Instituut,
   842|         0|            0|            0|  0.00%|           Universiteit Leiden, The Netherlands (2003).
   843|         0|            0|            0|  0.00%|
   844|         0|            0|            0|  0.00%|           https://web.archive.org/web/20161022015821/http://www.math.leidenuniv.nl/scripties/Rotten.pdf
   845|         0|            0|            0|  0.00%|
   846|         0|            0|            0|  0.00%|        """
   847|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   848|         0|            0|            0|  0.00%|            return
   849|         0|            0|            0|  0.00%|
   850|         0|            0|            0|  0.00%|        p = max_rank
   851|         0|            0|            0|  0.00%|        if to_retain is not None:
   852|         0|            0|            0|  0.00%|            q = to_retain
   853|         0|            0|            0|  0.00%|        else:
   854|         0|            0|            0|  0.00%|            q = p - 2
   855|         0|            0|            0|  0.00%|
   856|         0|            0|            0|  0.00%|        if self.cs:
   857|         0|            0|            0|  0.00%|            p = min(p, len(self.cs[0]))
   858|         0|            0|            0|  0.00%|        q = max(0, min(q, p-1))
   859|         0|            0|            0|  0.00%|
   860|         0|            0|            0|  0.00%|        m = len(self.cs)
   861|         0|            0|            0|  0.00%|        if m < p:
   862|         0|            0|            0|  0.00%|            # nothing to do
   863|         0|            0|            0|  0.00%|            return
   864|         0|            0|            0|  0.00%|
   865|         0|            0|            0|  0.00%|        C = np.array(self.cs).T
   866|         0|            0|            0|  0.00%|        D = np.array(self.ds).T
   867|         0|            0|            0|  0.00%|
   868|         0|            0|            0|  0.00%|        D, R = qr(D, mode='economic')
   869|         0|            0|            0|  0.00%|        C = dot(C, R.T.conj())
   870|         0|            0|            0|  0.00%|
   871|         0|            0|            0|  0.00%|        U, S, WH = svd(C, full_matrices=False, compute_uv=True)
   872|         0|            0|            0|  0.00%|
   873|         0|            0|            0|  0.00%|        C = dot(C, inv(WH))
   874|         0|            0|            0|  0.00%|        D = dot(D, WH.T.conj())
   875|         0|            0|            0|  0.00%|
   876|         0|            0|            0|  0.00%|        for k in range(q):
   877|         0|            0|            0|  0.00%|            self.cs[k] = C[:,k].copy()
   878|         0|            0|            0|  0.00%|            self.ds[k] = D[:,k].copy()
   879|         0|            0|            0|  0.00%|
   880|         0|            0|            0|  0.00%|        del self.cs[q:]
   881|         0|            0|            0|  0.00%|        del self.ds[q:]
   882|         0|            0|            0|  0.00%|
   883|         0|            0|            0|  0.00%|
   884|         0|            0|            0|  0.00%|_doc_parts['broyden_params'] = """
   885|         0|            0|            0|  0.00%|    alpha : float, optional
   886|         0|            0|            0|  0.00%|        Initial guess for the Jacobian is ``(-1/alpha)``.
   887|         0|            0|            0|  0.00%|    reduction_method : str or tuple, optional
   888|         0|            0|            0|  0.00%|        Method used in ensuring that the rank of the Broyden matrix
   889|         0|            0|            0|  0.00%|        stays low. Can either be a string giving the name of the method,
   890|         0|            0|            0|  0.00%|        or a tuple of the form ``(method, param1, param2, ...)``
   891|         0|            0|            0|  0.00%|        that gives the name of the method and values for additional parameters.
   892|         0|            0|            0|  0.00%|
   893|         0|            0|            0|  0.00%|        Methods available:
   894|         0|            0|            0|  0.00%|
   895|         0|            0|            0|  0.00%|            - ``restart``: drop all matrix columns. Has no extra parameters.
   896|         0|            0|            0|  0.00%|            - ``simple``: drop oldest matrix column. Has no extra parameters.
   897|         0|            0|            0|  0.00%|            - ``svd``: keep only the most significant SVD components.
   898|         0|            0|            0|  0.00%|              Takes an extra parameter, ``to_retain``, which determines the
   899|         0|            0|            0|  0.00%|              number of SVD components to retain when rank reduction is done.
   900|         0|            0|            0|  0.00%|              Default is ``max_rank - 2``.
   901|         0|            0|            0|  0.00%|
   902|         0|            0|            0|  0.00%|    max_rank : int, optional
   903|         0|            0|            0|  0.00%|        Maximum rank for the Broyden matrix.
   904|         0|            0|            0|  0.00%|        Default is infinity (i.e., no rank reduction).
   905|         0|            0|            0|  0.00%|    """.strip()
   906|         0|            0|            0|  0.00%|
   907|         0|            0|            0|  0.00%|
   908|         0|            0|            0|  0.00%|class BroydenFirst(GenericBroyden):
   909|         0|            0|            0|  0.00%|    r"""
   910|         0|            0|            0|  0.00%|    Find a root of a function, using Broyden's first Jacobian approximation.
   911|         0|            0|            0|  0.00%|
   912|         0|            0|            0|  0.00%|    This method is also known as \"Broyden's good method\".
   913|         0|            0|            0|  0.00%|
   914|         0|            0|            0|  0.00%|    Parameters
   915|         0|            0|            0|  0.00%|    ----------
   916|         0|            0|            0|  0.00%|    %(params_basic)s
   917|         0|            0|            0|  0.00%|    %(broyden_params)s
   918|         0|            0|            0|  0.00%|    %(params_extra)s
   919|         0|            0|            0|  0.00%|
   920|         0|            0|            0|  0.00%|    See Also
   921|         0|            0|            0|  0.00%|    --------
   922|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
   923|         0|            0|            0|  0.00%|           functions. See ``method=='broyden1'`` in particular.
   924|         0|            0|            0|  0.00%|
   925|         0|            0|            0|  0.00%|    Notes
   926|         0|            0|            0|  0.00%|    -----
   927|         0|            0|            0|  0.00%|    This algorithm implements the inverse Jacobian Quasi-Newton update
   928|         0|            0|            0|  0.00%|
   929|         0|            0|            0|  0.00%|    .. math:: H_+ = H + (dx - H df) dx^\dagger H / ( dx^\dagger H df)
   930|         0|            0|            0|  0.00%|
   931|         0|            0|            0|  0.00%|    which corresponds to Broyden's first Jacobian update
   932|         0|            0|            0|  0.00%|
   933|         0|            0|            0|  0.00%|    .. math:: J_+ = J + (df - J dx) dx^\dagger / dx^\dagger dx
   934|         0|            0|            0|  0.00%|
   935|         0|            0|            0|  0.00%|
   936|         0|            0|            0|  0.00%|    References
   937|         0|            0|            0|  0.00%|    ----------
   938|         0|            0|            0|  0.00%|    .. [1] B.A. van der Rotten, PhD thesis,
   939|         0|            0|            0|  0.00%|       \"A limited memory Broyden method to solve high-dimensional
   940|         0|            0|            0|  0.00%|       systems of nonlinear equations\". Mathematisch Instituut,
   941|         0|            0|            0|  0.00%|       Universiteit Leiden, The Netherlands (2003).
   942|         0|            0|            0|  0.00%|
   943|         0|            0|            0|  0.00%|       https://web.archive.org/web/20161022015821/http://www.math.leidenuniv.nl/scripties/Rotten.pdf
   944|         0|            0|            0|  0.00%|
   945|         0|            0|            0|  0.00%|    """
   946|         0|            0|            0|  0.00%|
   947|         0|            0|            0|  0.00%|    def __init__(self, alpha=None, reduction_method='restart', max_rank=None):
   948|         0|            0|            0|  0.00%|        GenericBroyden.__init__(self)
   949|         0|            0|            0|  0.00%|        self.alpha = alpha
   950|         0|            0|            0|  0.00%|        self.Gm = None
   951|         0|            0|            0|  0.00%|
   952|         0|            0|            0|  0.00%|        if max_rank is None:
   953|         0|            0|            0|  0.00%|            max_rank = np.inf
   954|         0|            0|            0|  0.00%|        self.max_rank = max_rank
   955|         0|            0|            0|  0.00%|
   956|         0|            0|            0|  0.00%|        if isinstance(reduction_method, str):
   957|         0|            0|            0|  0.00%|            reduce_params = ()
   958|         0|            0|            0|  0.00%|        else:
   959|         0|            0|            0|  0.00%|            reduce_params = reduction_method[1:]
   960|         0|            0|            0|  0.00%|            reduction_method = reduction_method[0]
   961|         0|            0|            0|  0.00%|        reduce_params = (max_rank - 1,) + reduce_params
   962|         0|            0|            0|  0.00%|
   963|         0|            0|            0|  0.00%|        if reduction_method == 'svd':
   964|         0|            0|            0|  0.00%|            self._reduce = lambda: self.Gm.svd_reduce(*reduce_params)
   965|         0|            0|            0|  0.00%|        elif reduction_method == 'simple':
   966|         0|            0|            0|  0.00%|            self._reduce = lambda: self.Gm.simple_reduce(*reduce_params)
   967|         0|            0|            0|  0.00%|        elif reduction_method == 'restart':
   968|         0|            0|            0|  0.00%|            self._reduce = lambda: self.Gm.restart_reduce(*reduce_params)
   969|         0|            0|            0|  0.00%|        else:
   970|         0|            0|            0|  0.00%|            raise ValueError("Unknown rank reduction method '%s'" %
   971|         0|            0|            0|  0.00%|                             reduction_method)
   972|         0|            0|            0|  0.00%|
   973|         0|            0|            0|  0.00%|    def setup(self, x, F, func):
   974|         0|            0|            0|  0.00%|        GenericBroyden.setup(self, x, F, func)
   975|         0|            0|            0|  0.00%|        self.Gm = LowRankMatrix(-self.alpha, self.shape[0], self.dtype)
   976|         0|            0|            0|  0.00%|
   977|         0|            0|            0|  0.00%|    def todense(self):
   978|         0|            0|            0|  0.00%|        return inv(self.Gm)
   979|         0|            0|            0|  0.00%|
   980|         0|            0|            0|  0.00%|    def solve(self, f, tol=0):
   981|         0|            0|            0|  0.00%|        r = self.Gm.matvec(f)
   982|         0|            0|            0|  0.00%|        if not np.isfinite(r).all():
   983|         0|            0|            0|  0.00%|            # singular; reset the Jacobian approximation
   984|         0|            0|            0|  0.00%|            self.setup(self.last_x, self.last_f, self.func)
   985|         0|            0|            0|  0.00%|        return self.Gm.matvec(f)
   986|         0|            0|            0|  0.00%|
   987|         0|            0|            0|  0.00%|    def matvec(self, f):
   988|         0|            0|            0|  0.00%|        return self.Gm.solve(f)
   989|         0|            0|            0|  0.00%|
   990|         0|            0|            0|  0.00%|    def rsolve(self, f, tol=0):
   991|         0|            0|            0|  0.00%|        return self.Gm.rmatvec(f)
   992|         0|            0|            0|  0.00%|
   993|         0|            0|            0|  0.00%|    def rmatvec(self, f):
   994|         0|            0|            0|  0.00%|        return self.Gm.rsolve(f)
   995|         0|            0|            0|  0.00%|
   996|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
   997|         0|            0|            0|  0.00%|        self._reduce()  # reduce first to preserve secant condition
   998|         0|            0|            0|  0.00%|
   999|         0|            0|            0|  0.00%|        v = self.Gm.rmatvec(dx)
  1000|         0|            0|            0|  0.00%|        c = dx - self.Gm.matvec(df)
  1001|         0|            0|            0|  0.00%|        d = v / vdot(df, v)
  1002|         0|            0|            0|  0.00%|
  1003|         0|            0|            0|  0.00%|        self.Gm.append(c, d)
  1004|         0|            0|            0|  0.00%|
  1005|         0|            0|            0|  0.00%|
  1006|         0|            0|            0|  0.00%|class BroydenSecond(BroydenFirst):
  1007|         0|            0|            0|  0.00%|    """
  1008|         0|            0|            0|  0.00%|    Find a root of a function, using Broyden\'s second Jacobian approximation.
  1009|         0|            0|            0|  0.00%|
  1010|         0|            0|            0|  0.00%|    This method is also known as \"Broyden's bad method\".
  1011|         0|            0|            0|  0.00%|
  1012|         0|            0|            0|  0.00%|    Parameters
  1013|         0|            0|            0|  0.00%|    ----------
  1014|         0|            0|            0|  0.00%|    %(params_basic)s
  1015|         0|            0|            0|  0.00%|    %(broyden_params)s
  1016|         0|            0|            0|  0.00%|    %(params_extra)s
  1017|         0|            0|            0|  0.00%|
  1018|         0|            0|            0|  0.00%|    See Also
  1019|         0|            0|            0|  0.00%|    --------
  1020|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1021|         0|            0|            0|  0.00%|           functions. See ``method=='broyden2'`` in particular.
  1022|         0|            0|            0|  0.00%|
  1023|         0|            0|            0|  0.00%|    Notes
  1024|         0|            0|            0|  0.00%|    -----
  1025|         0|            0|            0|  0.00%|    This algorithm implements the inverse Jacobian Quasi-Newton update
  1026|         0|            0|            0|  0.00%|
  1027|         0|            0|            0|  0.00%|    .. math:: H_+ = H + (dx - H df) df^\\dagger / ( df^\\dagger df)
  1028|         0|            0|            0|  0.00%|
  1029|         0|            0|            0|  0.00%|    corresponding to Broyden's second method.
  1030|         0|            0|            0|  0.00%|
  1031|         0|            0|            0|  0.00%|    References
  1032|         0|            0|            0|  0.00%|    ----------
  1033|         0|            0|            0|  0.00%|    .. [1] B.A. van der Rotten, PhD thesis,
  1034|         0|            0|            0|  0.00%|       \"A limited memory Broyden method to solve high-dimensional
  1035|         0|            0|            0|  0.00%|       systems of nonlinear equations\". Mathematisch Instituut,
  1036|         0|            0|            0|  0.00%|       Universiteit Leiden, The Netherlands (2003).
  1037|         0|            0|            0|  0.00%|
  1038|         0|            0|            0|  0.00%|       https://web.archive.org/web/20161022015821/http://www.math.leidenuniv.nl/scripties/Rotten.pdf
  1039|         0|            0|            0|  0.00%|
  1040|         0|            0|            0|  0.00%|    """
  1041|         0|            0|            0|  0.00%|
  1042|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
  1043|         0|            0|            0|  0.00%|        self._reduce()  # reduce first to preserve secant condition
  1044|         0|            0|            0|  0.00%|
  1045|         0|            0|            0|  0.00%|        v = df
  1046|         0|            0|            0|  0.00%|        c = dx - self.Gm.matvec(df)
  1047|         0|            0|            0|  0.00%|        d = v / df_norm**2
  1048|         0|            0|            0|  0.00%|        self.Gm.append(c, d)
  1049|         0|            0|            0|  0.00%|
  1050|         0|            0|            0|  0.00%|
  1051|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1052|         0|            0|            0|  0.00%|# Broyden-like (restricted memory)
  1053|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1054|         0|            0|            0|  0.00%|
  1055|         0|            0|            0|  0.00%|class Anderson(GenericBroyden):
  1056|         0|            0|            0|  0.00%|    """
  1057|         0|            0|            0|  0.00%|    Find a root of a function, using (extended) Anderson mixing.
  1058|         0|            0|            0|  0.00%|
  1059|         0|            0|            0|  0.00%|    The Jacobian is formed by for a 'best' solution in the space
  1060|         0|            0|            0|  0.00%|    spanned by last `M` vectors. As a result, only a MxM matrix
  1061|         0|            0|            0|  0.00%|    inversions and MxN multiplications are required. [Ey]_
  1062|         0|            0|            0|  0.00%|
  1063|         0|            0|            0|  0.00%|    Parameters
  1064|         0|            0|            0|  0.00%|    ----------
  1065|         0|            0|            0|  0.00%|    %(params_basic)s
  1066|         0|            0|            0|  0.00%|    alpha : float, optional
  1067|         0|            0|            0|  0.00%|        Initial guess for the Jacobian is (-1/alpha).
  1068|         0|            0|            0|  0.00%|    M : float, optional
  1069|         0|            0|            0|  0.00%|        Number of previous vectors to retain. Defaults to 5.
  1070|         0|            0|            0|  0.00%|    w0 : float, optional
  1071|         0|            0|            0|  0.00%|        Regularization parameter for numerical stability.
  1072|         0|            0|            0|  0.00%|        Compared to unity, good values of the order of 0.01.
  1073|         0|            0|            0|  0.00%|    %(params_extra)s
  1074|         0|            0|            0|  0.00%|
  1075|         0|            0|            0|  0.00%|    See Also
  1076|         0|            0|            0|  0.00%|    --------
  1077|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1078|         0|            0|            0|  0.00%|           functions. See ``method=='anderson'`` in particular.
  1079|         0|            0|            0|  0.00%|
  1080|         0|            0|            0|  0.00%|    References
  1081|         0|            0|            0|  0.00%|    ----------
  1082|         0|            0|            0|  0.00%|    .. [Ey] V. Eyert, J. Comp. Phys., 124, 271 (1996).
  1083|         0|            0|            0|  0.00%|
  1084|         0|            0|            0|  0.00%|    """
  1085|         0|            0|            0|  0.00%|
  1086|         0|            0|            0|  0.00%|    # Note:
  1087|         0|            0|            0|  0.00%|    #
  1088|         0|            0|            0|  0.00%|    # Anderson method maintains a rank M approximation of the inverse Jacobian,
  1089|         0|            0|            0|  0.00%|    #
  1090|         0|            0|            0|  0.00%|    #     J^-1 v ~ -v*alpha + (dX + alpha dF) A^-1 dF^H v
  1091|         0|            0|            0|  0.00%|    #     A      = W + dF^H dF
  1092|         0|            0|            0|  0.00%|    #     W      = w0^2 diag(dF^H dF)
  1093|         0|            0|            0|  0.00%|    #
  1094|         0|            0|            0|  0.00%|    # so that for w0 = 0 the secant condition applies for last M iterates, i.e.,
  1095|         0|            0|            0|  0.00%|    #
  1096|         0|            0|            0|  0.00%|    #     J^-1 df_j = dx_j
  1097|         0|            0|            0|  0.00%|    #
  1098|         0|            0|            0|  0.00%|    # for all j = 0 ... M-1.
  1099|         0|            0|            0|  0.00%|    #
  1100|         0|            0|            0|  0.00%|    # Moreover, (from Sherman-Morrison-Woodbury formula)
  1101|         0|            0|            0|  0.00%|    #
  1102|         0|            0|            0|  0.00%|    #    J v ~ [ b I - b^2 C (I + b dF^H A^-1 C)^-1 dF^H ] v
  1103|         0|            0|            0|  0.00%|    #    C   = (dX + alpha dF) A^-1
  1104|         0|            0|            0|  0.00%|    #    b   = -1/alpha
  1105|         0|            0|            0|  0.00%|    #
  1106|         0|            0|            0|  0.00%|    # and after simplification
  1107|         0|            0|            0|  0.00%|    #
  1108|         0|            0|            0|  0.00%|    #    J v ~ -v/alpha + (dX/alpha + dF) (dF^H dX - alpha W)^-1 dF^H v
  1109|         0|            0|            0|  0.00%|    #
  1110|         0|            0|            0|  0.00%|
  1111|         0|            0|            0|  0.00%|    def __init__(self, alpha=None, w0=0.01, M=5):
  1112|         0|            0|            0|  0.00%|        GenericBroyden.__init__(self)
  1113|         0|            0|            0|  0.00%|        self.alpha = alpha
  1114|         0|            0|            0|  0.00%|        self.M = M
  1115|         0|            0|            0|  0.00%|        self.dx = []
  1116|         0|            0|            0|  0.00%|        self.df = []
  1117|         0|            0|            0|  0.00%|        self.gamma = None
  1118|         0|            0|            0|  0.00%|        self.w0 = w0
  1119|         0|            0|            0|  0.00%|
  1120|         0|            0|            0|  0.00%|    def solve(self, f, tol=0):
  1121|         0|            0|            0|  0.00%|        dx = -self.alpha*f
  1122|         0|            0|            0|  0.00%|
  1123|         0|            0|            0|  0.00%|        n = len(self.dx)
  1124|         0|            0|            0|  0.00%|        if n == 0:
  1125|         0|            0|            0|  0.00%|            return dx
  1126|         0|            0|            0|  0.00%|
  1127|         0|            0|            0|  0.00%|        df_f = np.empty(n, dtype=f.dtype)
  1128|         0|            0|            0|  0.00%|        for k in range(n):
  1129|         0|            0|            0|  0.00%|            df_f[k] = vdot(self.df[k], f)
  1130|         0|            0|            0|  0.00%|
  1131|         0|            0|            0|  0.00%|        try:
  1132|         0|            0|            0|  0.00%|            gamma = solve(self.a, df_f)
  1133|         0|            0|            0|  0.00%|        except LinAlgError:
  1134|         0|            0|            0|  0.00%|            # singular; reset the Jacobian approximation
  1135|         0|            0|            0|  0.00%|            del self.dx[:]
  1136|         0|            0|            0|  0.00%|            del self.df[:]
  1137|         0|            0|            0|  0.00%|            return dx
  1138|         0|            0|            0|  0.00%|
  1139|         0|            0|            0|  0.00%|        for m in range(n):
  1140|         0|            0|            0|  0.00%|            dx += gamma[m]*(self.dx[m] + self.alpha*self.df[m])
  1141|         0|            0|            0|  0.00%|        return dx
  1142|         0|            0|            0|  0.00%|
  1143|         0|            0|            0|  0.00%|    def matvec(self, f):
  1144|         0|            0|            0|  0.00%|        dx = -f/self.alpha
  1145|         0|            0|            0|  0.00%|
  1146|         0|            0|            0|  0.00%|        n = len(self.dx)
  1147|         0|            0|            0|  0.00%|        if n == 0:
  1148|         0|            0|            0|  0.00%|            return dx
  1149|         0|            0|            0|  0.00%|
  1150|         0|            0|            0|  0.00%|        df_f = np.empty(n, dtype=f.dtype)
  1151|         0|            0|            0|  0.00%|        for k in range(n):
  1152|         0|            0|            0|  0.00%|            df_f[k] = vdot(self.df[k], f)
  1153|         0|            0|            0|  0.00%|
  1154|         0|            0|            0|  0.00%|        b = np.empty((n, n), dtype=f.dtype)
  1155|         0|            0|            0|  0.00%|        for i in range(n):
  1156|         0|            0|            0|  0.00%|            for j in range(n):
  1157|         0|            0|            0|  0.00%|                b[i,j] = vdot(self.df[i], self.dx[j])
  1158|         0|            0|            0|  0.00%|                if i == j and self.w0 != 0:
  1159|         0|            0|            0|  0.00%|                    b[i,j] -= vdot(self.df[i], self.df[i])*self.w0**2*self.alpha
  1160|         0|            0|            0|  0.00%|        gamma = solve(b, df_f)
  1161|         0|            0|            0|  0.00%|
  1162|         0|            0|            0|  0.00%|        for m in range(n):
  1163|         0|            0|            0|  0.00%|            dx += gamma[m]*(self.df[m] + self.dx[m]/self.alpha)
  1164|         0|            0|            0|  0.00%|        return dx
  1165|         0|            0|            0|  0.00%|
  1166|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
  1167|         0|            0|            0|  0.00%|        if self.M == 0:
  1168|         0|            0|            0|  0.00%|            return
  1169|         0|            0|            0|  0.00%|
  1170|         0|            0|            0|  0.00%|        self.dx.append(dx)
  1171|         0|            0|            0|  0.00%|        self.df.append(df)
  1172|         0|            0|            0|  0.00%|
  1173|         0|            0|            0|  0.00%|        while len(self.dx) > self.M:
  1174|         0|            0|            0|  0.00%|            self.dx.pop(0)
  1175|         0|            0|            0|  0.00%|            self.df.pop(0)
  1176|         0|            0|            0|  0.00%|
  1177|         0|            0|            0|  0.00%|        n = len(self.dx)
  1178|         0|            0|            0|  0.00%|        a = np.zeros((n, n), dtype=f.dtype)
  1179|         0|            0|            0|  0.00%|
  1180|         0|            0|            0|  0.00%|        for i in range(n):
  1181|         0|            0|            0|  0.00%|            for j in range(i, n):
  1182|         0|            0|            0|  0.00%|                if i == j:
  1183|         0|            0|            0|  0.00%|                    wd = self.w0**2
  1184|         0|            0|            0|  0.00%|                else:
  1185|         0|            0|            0|  0.00%|                    wd = 0
  1186|         0|            0|            0|  0.00%|                a[i,j] = (1+wd)*vdot(self.df[i], self.df[j])
  1187|         0|            0|            0|  0.00%|
  1188|         0|            0|            0|  0.00%|        a += np.triu(a, 1).T.conj()
  1189|         0|            0|            0|  0.00%|        self.a = a
  1190|         0|            0|            0|  0.00%|
  1191|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1192|         0|            0|            0|  0.00%|# Simple iterations
  1193|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1194|         0|            0|            0|  0.00%|
  1195|         0|            0|            0|  0.00%|
  1196|         0|            0|            0|  0.00%|class DiagBroyden(GenericBroyden):
  1197|         0|            0|            0|  0.00%|    """
  1198|         0|            0|            0|  0.00%|    Find a root of a function, using diagonal Broyden Jacobian approximation.
  1199|         0|            0|            0|  0.00%|
  1200|         0|            0|            0|  0.00%|    The Jacobian approximation is derived from previous iterations, by
  1201|         0|            0|            0|  0.00%|    retaining only the diagonal of Broyden matrices.
  1202|         0|            0|            0|  0.00%|
  1203|         0|            0|            0|  0.00%|    .. warning::
  1204|         0|            0|            0|  0.00%|
  1205|         0|            0|            0|  0.00%|       This algorithm may be useful for specific problems, but whether
  1206|         0|            0|            0|  0.00%|       it will work may depend strongly on the problem.
  1207|         0|            0|            0|  0.00%|
  1208|         0|            0|            0|  0.00%|    Parameters
  1209|         0|            0|            0|  0.00%|    ----------
  1210|         0|            0|            0|  0.00%|    %(params_basic)s
  1211|         0|            0|            0|  0.00%|    alpha : float, optional
  1212|         0|            0|            0|  0.00%|        Initial guess for the Jacobian is (-1/alpha).
  1213|         0|            0|            0|  0.00%|    %(params_extra)s
  1214|         0|            0|            0|  0.00%|
  1215|         0|            0|            0|  0.00%|    See Also
  1216|         0|            0|            0|  0.00%|    --------
  1217|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1218|         0|            0|            0|  0.00%|           functions. See ``method=='diagbroyden'`` in particular.
  1219|         0|            0|            0|  0.00%|    """
  1220|         0|            0|            0|  0.00%|
  1221|         0|            0|            0|  0.00%|    def __init__(self, alpha=None):
  1222|         0|            0|            0|  0.00%|        GenericBroyden.__init__(self)
  1223|         0|            0|            0|  0.00%|        self.alpha = alpha
  1224|         0|            0|            0|  0.00%|
  1225|         0|            0|            0|  0.00%|    def setup(self, x, F, func):
  1226|         0|            0|            0|  0.00%|        GenericBroyden.setup(self, x, F, func)
  1227|         0|            0|            0|  0.00%|        self.d = np.full((self.shape[0],), 1 / self.alpha, dtype=self.dtype)
  1228|         0|            0|            0|  0.00%|
  1229|         0|            0|            0|  0.00%|    def solve(self, f, tol=0):
  1230|         0|            0|            0|  0.00%|        return -f / self.d
  1231|         0|            0|            0|  0.00%|
  1232|         0|            0|            0|  0.00%|    def matvec(self, f):
  1233|         0|            0|            0|  0.00%|        return -f * self.d
  1234|         0|            0|            0|  0.00%|
  1235|         0|            0|            0|  0.00%|    def rsolve(self, f, tol=0):
  1236|         0|            0|            0|  0.00%|        return -f / self.d.conj()
  1237|         0|            0|            0|  0.00%|
  1238|         0|            0|            0|  0.00%|    def rmatvec(self, f):
  1239|         0|            0|            0|  0.00%|        return -f * self.d.conj()
  1240|         0|            0|            0|  0.00%|
  1241|         0|            0|            0|  0.00%|    def todense(self):
  1242|         0|            0|            0|  0.00%|        return np.diag(-self.d)
  1243|         0|            0|            0|  0.00%|
  1244|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
  1245|         0|            0|            0|  0.00%|        self.d -= (df + self.d*dx)*dx/dx_norm**2
  1246|         0|            0|            0|  0.00%|
  1247|         0|            0|            0|  0.00%|
  1248|         0|            0|            0|  0.00%|class LinearMixing(GenericBroyden):
  1249|         0|            0|            0|  0.00%|    """
  1250|         0|            0|            0|  0.00%|    Find a root of a function, using a scalar Jacobian approximation.
  1251|         0|            0|            0|  0.00%|
  1252|         0|            0|            0|  0.00%|    .. warning::
  1253|         0|            0|            0|  0.00%|
  1254|         0|            0|            0|  0.00%|       This algorithm may be useful for specific problems, but whether
  1255|         0|            0|            0|  0.00%|       it will work may depend strongly on the problem.
  1256|         0|            0|            0|  0.00%|
  1257|         0|            0|            0|  0.00%|    Parameters
  1258|         0|            0|            0|  0.00%|    ----------
  1259|         0|            0|            0|  0.00%|    %(params_basic)s
  1260|         0|            0|            0|  0.00%|    alpha : float, optional
  1261|         0|            0|            0|  0.00%|        The Jacobian approximation is (-1/alpha).
  1262|         0|            0|            0|  0.00%|    %(params_extra)s
  1263|         0|            0|            0|  0.00%|
  1264|         0|            0|            0|  0.00%|    See Also
  1265|         0|            0|            0|  0.00%|    --------
  1266|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1267|         0|            0|            0|  0.00%|           functions. See ``method=='linearmixing'`` in particular.
  1268|         0|            0|            0|  0.00%|
  1269|         0|            0|            0|  0.00%|    """
  1270|         0|            0|            0|  0.00%|
  1271|         0|            0|            0|  0.00%|    def __init__(self, alpha=None):
  1272|         0|            0|            0|  0.00%|        GenericBroyden.__init__(self)
  1273|         0|            0|            0|  0.00%|        self.alpha = alpha
  1274|         0|            0|            0|  0.00%|
  1275|         0|            0|            0|  0.00%|    def solve(self, f, tol=0):
  1276|         0|            0|            0|  0.00%|        return -f*self.alpha
  1277|         0|            0|            0|  0.00%|
  1278|         0|            0|            0|  0.00%|    def matvec(self, f):
  1279|         0|            0|            0|  0.00%|        return -f/self.alpha
  1280|         0|            0|            0|  0.00%|
  1281|         0|            0|            0|  0.00%|    def rsolve(self, f, tol=0):
  1282|         0|            0|            0|  0.00%|        return -f*np.conj(self.alpha)
  1283|         0|            0|            0|  0.00%|
  1284|         0|            0|            0|  0.00%|    def rmatvec(self, f):
  1285|         0|            0|            0|  0.00%|        return -f/np.conj(self.alpha)
  1286|         0|            0|            0|  0.00%|
  1287|         0|            0|            0|  0.00%|    def todense(self):
  1288|         0|            0|            0|  0.00%|        return np.diag(np.full(self.shape[0], -1/self.alpha))
  1289|         0|            0|            0|  0.00%|
  1290|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
  1291|         0|            0|            0|  0.00%|        pass
  1292|         0|            0|            0|  0.00%|
  1293|         0|            0|            0|  0.00%|
  1294|         0|            0|            0|  0.00%|class ExcitingMixing(GenericBroyden):
  1295|         0|            0|            0|  0.00%|    """
  1296|         0|            0|            0|  0.00%|    Find a root of a function, using a tuned diagonal Jacobian approximation.
  1297|         0|            0|            0|  0.00%|
  1298|         0|            0|            0|  0.00%|    The Jacobian matrix is diagonal and is tuned on each iteration.
  1299|         0|            0|            0|  0.00%|
  1300|         0|            0|            0|  0.00%|    .. warning::
  1301|         0|            0|            0|  0.00%|
  1302|         0|            0|            0|  0.00%|       This algorithm may be useful for specific problems, but whether
  1303|         0|            0|            0|  0.00%|       it will work may depend strongly on the problem.
  1304|         0|            0|            0|  0.00%|
  1305|         0|            0|            0|  0.00%|    See Also
  1306|         0|            0|            0|  0.00%|    --------
  1307|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1308|         0|            0|            0|  0.00%|           functions. See ``method=='excitingmixing'`` in particular.
  1309|         0|            0|            0|  0.00%|
  1310|         0|            0|            0|  0.00%|    Parameters
  1311|         0|            0|            0|  0.00%|    ----------
  1312|         0|            0|            0|  0.00%|    %(params_basic)s
  1313|         0|            0|            0|  0.00%|    alpha : float, optional
  1314|         0|            0|            0|  0.00%|        Initial Jacobian approximation is (-1/alpha).
  1315|         0|            0|            0|  0.00%|    alphamax : float, optional
  1316|         0|            0|            0|  0.00%|        The entries of the diagonal Jacobian are kept in the range
  1317|         0|            0|            0|  0.00%|        ``[alpha, alphamax]``.
  1318|         0|            0|            0|  0.00%|    %(params_extra)s
  1319|         0|            0|            0|  0.00%|    """
  1320|         0|            0|            0|  0.00%|
  1321|         0|            0|            0|  0.00%|    def __init__(self, alpha=None, alphamax=1.0):
  1322|         0|            0|            0|  0.00%|        GenericBroyden.__init__(self)
  1323|         0|            0|            0|  0.00%|        self.alpha = alpha
  1324|         0|            0|            0|  0.00%|        self.alphamax = alphamax
  1325|         0|            0|            0|  0.00%|        self.beta = None
  1326|         0|            0|            0|  0.00%|
  1327|         0|            0|            0|  0.00%|    def setup(self, x, F, func):
  1328|         0|            0|            0|  0.00%|        GenericBroyden.setup(self, x, F, func)
  1329|         0|            0|            0|  0.00%|        self.beta = np.full((self.shape[0],), self.alpha, dtype=self.dtype)
  1330|         0|            0|            0|  0.00%|
  1331|         0|            0|            0|  0.00%|    def solve(self, f, tol=0):
  1332|         0|            0|            0|  0.00%|        return -f*self.beta
  1333|         0|            0|            0|  0.00%|
  1334|         0|            0|            0|  0.00%|    def matvec(self, f):
  1335|         0|            0|            0|  0.00%|        return -f/self.beta
  1336|         0|            0|            0|  0.00%|
  1337|         0|            0|            0|  0.00%|    def rsolve(self, f, tol=0):
  1338|         0|            0|            0|  0.00%|        return -f*self.beta.conj()
  1339|         0|            0|            0|  0.00%|
  1340|         0|            0|            0|  0.00%|    def rmatvec(self, f):
  1341|         0|            0|            0|  0.00%|        return -f/self.beta.conj()
  1342|         0|            0|            0|  0.00%|
  1343|         0|            0|            0|  0.00%|    def todense(self):
  1344|         0|            0|            0|  0.00%|        return np.diag(-1/self.beta)
  1345|         0|            0|            0|  0.00%|
  1346|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
  1347|         0|            0|            0|  0.00%|        incr = f*self.last_f > 0
  1348|         0|            0|            0|  0.00%|        self.beta[incr] += self.alpha
  1349|         0|            0|            0|  0.00%|        self.beta[~incr] = self.alpha
  1350|         0|            0|            0|  0.00%|        np.clip(self.beta, 0, self.alphamax, out=self.beta)
  1351|         0|            0|            0|  0.00%|
  1352|         0|            0|            0|  0.00%|
  1353|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1354|         0|            0|            0|  0.00%|# Iterative/Krylov approximated Jacobians
  1355|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1356|         0|            0|            0|  0.00%|
  1357|         0|            0|            0|  0.00%|class KrylovJacobian(Jacobian):
  1358|         0|            0|            0|  0.00%|    r"""
  1359|         0|            0|            0|  0.00%|    Find a root of a function, using Krylov approximation for inverse Jacobian.
  1360|         0|            0|            0|  0.00%|
  1361|         0|            0|            0|  0.00%|    This method is suitable for solving large-scale problems.
  1362|         0|            0|            0|  0.00%|
  1363|         0|            0|            0|  0.00%|    Parameters
  1364|         0|            0|            0|  0.00%|    ----------
  1365|         0|            0|            0|  0.00%|    %(params_basic)s
  1366|         0|            0|            0|  0.00%|    rdiff : float, optional
  1367|         0|            0|            0|  0.00%|        Relative step size to use in numerical differentiation.
  1368|         0|            0|            0|  0.00%|    method : {'lgmres', 'gmres', 'bicgstab', 'cgs', 'minres'} or function
  1369|         0|            0|            0|  0.00%|        Krylov method to use to approximate the Jacobian.
  1370|         0|            0|            0|  0.00%|        Can be a string, or a function implementing the same interface as
  1371|         0|            0|            0|  0.00%|        the iterative solvers in `scipy.sparse.linalg`.
  1372|         0|            0|            0|  0.00%|
  1373|         0|            0|            0|  0.00%|        The default is `scipy.sparse.linalg.lgmres`.
  1374|         0|            0|            0|  0.00%|    inner_maxiter : int, optional
  1375|         0|            0|            0|  0.00%|        Parameter to pass to the "inner" Krylov solver: maximum number of
  1376|         0|            0|            0|  0.00%|        iterations. Iteration will stop after maxiter steps even if the
  1377|         0|            0|            0|  0.00%|        specified tolerance has not been achieved.
  1378|         0|            0|            0|  0.00%|    inner_M : LinearOperator or InverseJacobian
  1379|         0|            0|            0|  0.00%|        Preconditioner for the inner Krylov iteration.
  1380|         0|            0|            0|  0.00%|        Note that you can use also inverse Jacobians as (adaptive)
  1381|         0|            0|            0|  0.00%|        preconditioners. For example,
  1382|         0|            0|            0|  0.00%|
  1383|         0|            0|            0|  0.00%|        >>> from scipy.optimize.nonlin import BroydenFirst, KrylovJacobian
  1384|         0|            0|            0|  0.00%|        >>> from scipy.optimize.nonlin import InverseJacobian
  1385|         0|            0|            0|  0.00%|        >>> jac = BroydenFirst()
  1386|         0|            0|            0|  0.00%|        >>> kjac = KrylovJacobian(inner_M=InverseJacobian(jac))
  1387|         0|            0|            0|  0.00%|
  1388|         0|            0|            0|  0.00%|        If the preconditioner has a method named 'update', it will be called
  1389|         0|            0|            0|  0.00%|        as ``update(x, f)`` after each nonlinear step, with ``x`` giving
  1390|         0|            0|            0|  0.00%|        the current point, and ``f`` the current function value.
  1391|         0|            0|            0|  0.00%|    outer_k : int, optional
  1392|         0|            0|            0|  0.00%|        Size of the subspace kept across LGMRES nonlinear iterations.
  1393|         0|            0|            0|  0.00%|        See `scipy.sparse.linalg.lgmres` for details.
  1394|         0|            0|            0|  0.00%|    inner_kwargs : kwargs
  1395|         0|            0|            0|  0.00%|        Keyword parameters for the "inner" Krylov solver
  1396|         0|            0|            0|  0.00%|        (defined with `method`). Parameter names must start with
  1397|         0|            0|            0|  0.00%|        the `inner_` prefix which will be stripped before passing on
  1398|         0|            0|            0|  0.00%|        the inner method. See, e.g., `scipy.sparse.linalg.gmres` for details.
  1399|         0|            0|            0|  0.00%|    %(params_extra)s
  1400|         0|            0|            0|  0.00%|
  1401|         0|            0|            0|  0.00%|    See Also
  1402|         0|            0|            0|  0.00%|    --------
  1403|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1404|         0|            0|            0|  0.00%|           functions. See ``method=='krylov'`` in particular.
  1405|         0|            0|            0|  0.00%|    scipy.sparse.linalg.gmres
  1406|         0|            0|            0|  0.00%|    scipy.sparse.linalg.lgmres
  1407|         0|            0|            0|  0.00%|
  1408|         0|            0|            0|  0.00%|    Notes
  1409|         0|            0|            0|  0.00%|    -----
  1410|         0|            0|            0|  0.00%|    This function implements a Newton-Krylov solver. The basic idea is
  1411|         0|            0|            0|  0.00%|    to compute the inverse of the Jacobian with an iterative Krylov
  1412|         0|            0|            0|  0.00%|    method. These methods require only evaluating the Jacobian-vector
  1413|         0|            0|            0|  0.00%|    products, which are conveniently approximated by a finite difference:
  1414|         0|            0|            0|  0.00%|
  1415|         0|            0|            0|  0.00%|    .. math:: J v \approx (f(x + \omega*v/|v|) - f(x)) / \omega
  1416|         0|            0|            0|  0.00%|
  1417|         0|            0|            0|  0.00%|    Due to the use of iterative matrix inverses, these methods can
  1418|         0|            0|            0|  0.00%|    deal with large nonlinear problems.
  1419|         0|            0|            0|  0.00%|
  1420|         0|            0|            0|  0.00%|    SciPy's `scipy.sparse.linalg` module offers a selection of Krylov
  1421|         0|            0|            0|  0.00%|    solvers to choose from. The default here is `lgmres`, which is a
  1422|         0|            0|            0|  0.00%|    variant of restarted GMRES iteration that reuses some of the
  1423|         0|            0|            0|  0.00%|    information obtained in the previous Newton steps to invert
  1424|         0|            0|            0|  0.00%|    Jacobians in subsequent steps.
  1425|         0|            0|            0|  0.00%|
  1426|         0|            0|            0|  0.00%|    For a review on Newton-Krylov methods, see for example [1]_,
  1427|         0|            0|            0|  0.00%|    and for the LGMRES sparse inverse method, see [2]_.
  1428|         0|            0|            0|  0.00%|
  1429|         0|            0|            0|  0.00%|    References
  1430|         0|            0|            0|  0.00%|    ----------
  1431|         0|            0|            0|  0.00%|    .. [1] D.A. Knoll and D.E. Keyes, J. Comp. Phys. 193, 357 (2004).
  1432|         0|            0|            0|  0.00%|           :doi:`10.1016/j.jcp.2003.08.010`
  1433|         0|            0|            0|  0.00%|    .. [2] A.H. Baker and E.R. Jessup and T. Manteuffel,
  1434|         0|            0|            0|  0.00%|           SIAM J. Matrix Anal. Appl. 26, 962 (2005).
  1435|         0|            0|            0|  0.00%|           :doi:`10.1137/S0895479803422014`
  1436|         0|            0|            0|  0.00%|
  1437|         0|            0|            0|  0.00%|    """
  1438|         0|            0|            0|  0.00%|
  1439|         0|            0|            0|  0.00%|    def __init__(self, rdiff=None, method='lgmres', inner_maxiter=20,
  1440|         0|            0|            0|  0.00%|                 inner_M=None, outer_k=10, **kw):
  1441|         0|            0|            0|  0.00%|        self.preconditioner = inner_M
  1442|         0|            0|            0|  0.00%|        self.rdiff = rdiff
  1443|         0|            0|            0|  0.00%|        self.method = dict(
  1444|         0|            0|            0|  0.00%|            bicgstab=scipy.sparse.linalg.bicgstab,
  1445|         0|            0|            0|  0.00%|            gmres=scipy.sparse.linalg.gmres,
  1446|         0|            0|            0|  0.00%|            lgmres=scipy.sparse.linalg.lgmres,
  1447|         0|            0|            0|  0.00%|            cgs=scipy.sparse.linalg.cgs,
  1448|         0|            0|            0|  0.00%|            minres=scipy.sparse.linalg.minres,
  1449|         0|            0|            0|  0.00%|            ).get(method, method)
  1450|         0|            0|            0|  0.00%|
  1451|         0|            0|            0|  0.00%|        self.method_kw = dict(maxiter=inner_maxiter, M=self.preconditioner)
  1452|         0|            0|            0|  0.00%|
  1453|         0|            0|            0|  0.00%|        if self.method is scipy.sparse.linalg.gmres:
  1454|         0|            0|            0|  0.00%|            # Replace GMRES's outer iteration with Newton steps
  1455|         0|            0|            0|  0.00%|            self.method_kw['restrt'] = inner_maxiter
  1456|         0|            0|            0|  0.00%|            self.method_kw['maxiter'] = 1
  1457|         0|            0|            0|  0.00%|            self.method_kw.setdefault('atol', 0)
  1458|         0|            0|            0|  0.00%|        elif self.method is scipy.sparse.linalg.gcrotmk:
  1459|         0|            0|            0|  0.00%|            self.method_kw.setdefault('atol', 0)
  1460|         0|            0|            0|  0.00%|        elif self.method is scipy.sparse.linalg.lgmres:
  1461|         0|            0|            0|  0.00%|            self.method_kw['outer_k'] = outer_k
  1462|         0|            0|            0|  0.00%|            # Replace LGMRES's outer iteration with Newton steps
  1463|         0|            0|            0|  0.00%|            self.method_kw['maxiter'] = 1
  1464|         0|            0|            0|  0.00%|            # Carry LGMRES's `outer_v` vectors across nonlinear iterations
  1465|         0|            0|            0|  0.00%|            self.method_kw.setdefault('outer_v', [])
  1466|         0|            0|            0|  0.00%|            self.method_kw.setdefault('prepend_outer_v', True)
  1467|         0|            0|            0|  0.00%|            # But don't carry the corresponding Jacobian*v products, in case
  1468|         0|            0|            0|  0.00%|            # the Jacobian changes a lot in the nonlinear step
  1469|         0|            0|            0|  0.00%|            #
  1470|         0|            0|            0|  0.00%|            # XXX: some trust-region inspired ideas might be more efficient...
  1471|         0|            0|            0|  0.00%|            #      See e.g., Brown & Saad. But needs to be implemented separately
  1472|         0|            0|            0|  0.00%|            #      since it's not an inexact Newton method.
  1473|         0|            0|            0|  0.00%|            self.method_kw.setdefault('store_outer_Av', False)
  1474|         0|            0|            0|  0.00%|            self.method_kw.setdefault('atol', 0)
  1475|         0|            0|            0|  0.00%|
  1476|         0|            0|            0|  0.00%|        for key, value in kw.items():
  1477|         0|            0|            0|  0.00%|            if not key.startswith('inner_'):
  1478|         0|            0|            0|  0.00%|                raise ValueError("Unknown parameter %s" % key)
  1479|         0|            0|            0|  0.00%|            self.method_kw[key[6:]] = value
  1480|         0|            0|            0|  0.00%|
  1481|         0|            0|            0|  0.00%|    def _update_diff_step(self):
  1482|         0|            0|            0|  0.00%|        mx = abs(self.x0).max()
  1483|         0|            0|            0|  0.00%|        mf = abs(self.f0).max()
  1484|         0|            0|            0|  0.00%|        self.omega = self.rdiff * max(1, mx) / max(1, mf)
  1485|         0|            0|            0|  0.00%|
  1486|         0|            0|            0|  0.00%|    def matvec(self, v):
  1487|         0|            0|            0|  0.00%|        nv = norm(v)
  1488|         0|            0|            0|  0.00%|        if nv == 0:
  1489|         0|            0|            0|  0.00%|            return 0*v
  1490|         0|            0|            0|  0.00%|        sc = self.omega / nv
  1491|         0|            0|            0|  0.00%|        r = (self.func(self.x0 + sc*v) - self.f0) / sc
  1492|         0|            0|            0|  0.00%|        if not np.all(np.isfinite(r)) and np.all(np.isfinite(v)):
  1493|         0|            0|            0|  0.00%|            raise ValueError('Function returned non-finite results')
  1494|         0|            0|            0|  0.00%|        return r
  1495|         0|            0|            0|  0.00%|
  1496|         0|            0|            0|  0.00%|    def solve(self, rhs, tol=0):
  1497|         0|            0|            0|  0.00%|        if 'tol' in self.method_kw:
  1498|         0|            0|            0|  0.00%|            sol, info = self.method(self.op, rhs, **self.method_kw)
  1499|         0|            0|            0|  0.00%|        else:
  1500|         0|            0|            0|  0.00%|            sol, info = self.method(self.op, rhs, tol=tol, **self.method_kw)
  1501|         0|            0|            0|  0.00%|        return sol
  1502|         0|            0|            0|  0.00%|
  1503|         0|            0|            0|  0.00%|    def update(self, x, f):
  1504|         0|            0|            0|  0.00%|        self.x0 = x
  1505|         0|            0|            0|  0.00%|        self.f0 = f
  1506|         0|            0|            0|  0.00%|        self._update_diff_step()
  1507|         0|            0|            0|  0.00%|
  1508|         0|            0|            0|  0.00%|        # Update also the preconditioner, if possible
  1509|         0|            0|            0|  0.00%|        if self.preconditioner is not None:
  1510|         0|            0|            0|  0.00%|            if hasattr(self.preconditioner, 'update'):
  1511|         0|            0|            0|  0.00%|                self.preconditioner.update(x, f)
  1512|         0|            0|            0|  0.00%|
  1513|         0|            0|            0|  0.00%|    def setup(self, x, f, func):
  1514|         0|            0|            0|  0.00%|        Jacobian.setup(self, x, f, func)
  1515|         0|            0|            0|  0.00%|        self.x0 = x
  1516|         0|            0|            0|  0.00%|        self.f0 = f
  1517|         0|            0|            0|  0.00%|        self.op = scipy.sparse.linalg.aslinearoperator(self)
  1518|         0|            0|            0|  0.00%|
  1519|         0|            0|            0|  0.00%|        if self.rdiff is None:
  1520|         0|            0|            0|  0.00%|            self.rdiff = np.finfo(x.dtype).eps ** (1./2)
  1521|         0|            0|            0|  0.00%|
  1522|         0|            0|            0|  0.00%|        self._update_diff_step()
  1523|         0|            0|            0|  0.00%|
  1524|         0|            0|            0|  0.00%|        # Setup also the preconditioner, if possible
  1525|         0|            0|            0|  0.00%|        if self.preconditioner is not None:
  1526|         0|            0|            0|  0.00%|            if hasattr(self.preconditioner, 'setup'):
  1527|         0|            0|            0|  0.00%|                self.preconditioner.setup(x, f, func)
  1528|         0|            0|            0|  0.00%|
  1529|         0|            0|            0|  0.00%|
  1530|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1531|         0|            0|            0|  0.00%|# Wrapper functions
  1532|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1533|         0|            0|            0|  0.00%|
  1534|         0|            0|            0|  0.00%|def _nonlin_wrapper(name, jac):
  1535|         0|            0|            0|  0.00%|    """
  1536|         0|            0|            0|  0.00%|    Construct a solver wrapper with given name and Jacobian approx.
  1537|         0|            0|            0|  0.00%|
  1538|         0|            0|            0|  0.00%|    It inspects the keyword arguments of ``jac.__init__``, and allows to
  1539|         0|            0|            0|  0.00%|    use the same arguments in the wrapper function, in addition to the
  1540|         0|            0|            0|  0.00%|    keyword arguments of `nonlin_solve`
  1541|         0|            0|            0|  0.00%|
  1542|         0|            0|            0|  0.00%|    """
  1543|         0|            0|            0|  0.00%|    signature = _getfullargspec(jac.__init__)
  1544|         0|            0|            0|  0.00%|    args, varargs, varkw, defaults, kwonlyargs, kwdefaults, _ = signature
  1545|         0|            0|            0|  0.00%|    kwargs = list(zip(args[-len(defaults):], defaults))
  1546|         0|            0|            0|  0.00%|    kw_str = ", ".join(["%s=%r" % (k, v) for k, v in kwargs])
  1547|         0|            0|            0|  0.00%|    if kw_str:
  1548|         0|            0|            0|  0.00%|        kw_str = ", " + kw_str
  1549|         0|            0|            0|  0.00%|    kwkw_str = ", ".join(["%s=%s" % (k, k) for k, v in kwargs])
  1550|         0|            0|            0|  0.00%|    if kwkw_str:
  1551|         0|            0|            0|  0.00%|        kwkw_str = kwkw_str + ", "
  1552|         0|            0|            0|  0.00%|    if kwonlyargs:
  1553|         0|            0|            0|  0.00%|        raise ValueError('Unexpected signature %s' % signature)
  1554|         0|            0|            0|  0.00%|
  1555|         0|            0|            0|  0.00%|    # Construct the wrapper function so that its keyword arguments
  1556|         0|            0|            0|  0.00%|    # are visible in pydoc.help etc.
  1557|         0|            0|            0|  0.00%|    wrapper = """
  1558|         0|            0|            0|  0.00%|def %(name)s(F, xin, iter=None %(kw)s, verbose=False, maxiter=None,
  1559|         0|            0|            0|  0.00%|             f_tol=None, f_rtol=None, x_tol=None, x_rtol=None,
  1560|         0|            0|            0|  0.00%|             tol_norm=None, line_search='armijo', callback=None, **kw):
  1561|         0|            0|            0|  0.00%|    jac = %(jac)s(%(kwkw)s **kw)
  1562|         0|            0|            0|  0.00%|    return nonlin_solve(F, xin, jac, iter, verbose, maxiter,
  1563|         0|            0|            0|  0.00%|                        f_tol, f_rtol, x_tol, x_rtol, tol_norm, line_search,
  1564|         0|            0|            0|  0.00%|                        callback)
  1565|         0|            0|            0|  0.00%|"""
  1566|         0|            0|            0|  0.00%|
  1567|         0|            0|            0|  0.00%|    wrapper = wrapper % dict(name=name, kw=kw_str, jac=jac.__name__,
  1568|         0|            0|            0|  0.00%|                             kwkw=kwkw_str)
  1569|         0|            0|            0|  0.00%|    ns = {}
  1570|         0|            0|            0|  0.00%|    ns.update(globals())
  1571|         0|            0|            0|  0.00%|    exec(wrapper, ns)
  1572|         0|            0|            0|  0.00%|    func = ns[name]
  1573|         0|            0|            0|  0.00%|    func.__doc__ = jac.__doc__
  1574|         0|            0|            0|  0.00%|    _set_doc(func)
  1575|         0|            0|            0|  0.00%|    return func
  1576|         0|            0|            0|  0.00%|
  1577|         0|            0|            0|  0.00%|
  1578|         0|            0|            0|  0.00%|broyden1 = _nonlin_wrapper('broyden1', BroydenFirst)
  1579|         0|            0|            0|  0.00%|broyden2 = _nonlin_wrapper('broyden2', BroydenSecond)
  1580|         0|            0|            0|  0.00%|anderson = _nonlin_wrapper('anderson', Anderson)
  1581|         0|            0|            0|  0.00%|linearmixing = _nonlin_wrapper('linearmixing', LinearMixing)
  1582|         0|            0|            0|  0.00%|diagbroyden = _nonlin_wrapper('diagbroyden', DiagBroyden)
  1583|         0|            0|            0|  0.00%|excitingmixing = _nonlin_wrapper('excitingmixing', ExcitingMixing)
  1584|         0|            0|            0|  0.00%|newton_krylov = _nonlin_wrapper('newton_krylov', KrylovJacobian)
File: <string>_340
File duration: 2.45571e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.45571e-05|  1.22786e-05|  0.00%|
File: <string>_33
File duration: 2.43187e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.43187e-05|  1.21593e-05|  0.00%|
File: <string>_80
File duration: 2.38419e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.38419e-05|  1.19209e-05|  0.00%|
File: <string>_294
File duration: 2.38419e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.38419e-05|  1.19209e-05|  0.00%|
File: <string>_142
File duration: 2.36034e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.36034e-05|  1.18017e-05|  0.00%|
(call)|         1|   1.0252e-05|   1.0252e-05|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/jit/annotations.py:48 __getitem__
File: <string>_72
File duration: 2.36034e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.36034e-05|  1.18017e-05|  0.00%|
File: <string>_39
File duration: 2.3365e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|   2.3365e-05|  1.16825e-05|  0.00%|
File: <string>_82
File duration: 2.31266e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.31266e-05|  1.15633e-05|  0.00%|
File: <string>_281
File duration: 2.31266e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.31266e-05|  1.15633e-05|  0.00%|
File: <string>_128
File duration: 2.31266e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.31266e-05|  1.15633e-05|  0.00%|
File: <string>_36
File duration: 2.28882e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.28882e-05|  1.14441e-05|  0.00%|
File: <string>_85
File duration: 2.28882e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.28882e-05|  1.14441e-05|  0.00%|
File: <string>_156
File duration: 2.28882e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|r"""
     2|         1|  9.29832e-06|  9.29832e-06|  0.00%|
     3|         0|            0|            0|  0.00%|Nonlinear solvers
     4|         1|  1.35899e-05|  1.35899e-05|  0.00%|-----------------
     5|         0|            0|            0|  0.00%|
     6|         0|            0|            0|  0.00%|.. currentmodule:: scipy.optimize
     7|         0|            0|            0|  0.00%|
     8|         0|            0|            0|  0.00%|This is a collection of general-purpose nonlinear multidimensional
     9|         0|            0|            0|  0.00%|solvers. These solvers find *x* for which *F(x) = 0*. Both *x*
    10|         0|            0|            0|  0.00%|and *F* can be multidimensional.
    11|         0|            0|            0|  0.00%|
    12|         0|            0|            0|  0.00%|Routines
    13|         0|            0|            0|  0.00%|~~~~~~~~
    14|         0|            0|            0|  0.00%|
    15|         0|            0|            0|  0.00%|Large-scale nonlinear solvers:
    16|         0|            0|            0|  0.00%|
    17|         0|            0|            0|  0.00%|.. autosummary::
    18|         0|            0|            0|  0.00%|
    19|         0|            0|            0|  0.00%|   newton_krylov
    20|         0|            0|            0|  0.00%|   anderson
    21|         0|            0|            0|  0.00%|
    22|         0|            0|            0|  0.00%|General nonlinear solvers:
    23|         0|            0|            0|  0.00%|
    24|         0|            0|            0|  0.00%|.. autosummary::
    25|         0|            0|            0|  0.00%|
    26|         0|            0|            0|  0.00%|   broyden1
    27|         0|            0|            0|  0.00%|   broyden2
    28|         0|            0|            0|  0.00%|
    29|         0|            0|            0|  0.00%|Simple iterations:
    30|         0|            0|            0|  0.00%|
    31|         0|            0|            0|  0.00%|.. autosummary::
    32|         0|            0|            0|  0.00%|
    33|         0|            0|            0|  0.00%|   excitingmixing
    34|         0|            0|            0|  0.00%|   linearmixing
    35|         0|            0|            0|  0.00%|   diagbroyden
    36|         0|            0|            0|  0.00%|
    37|         0|            0|            0|  0.00%|
    38|         0|            0|            0|  0.00%|Examples
    39|         0|            0|            0|  0.00%|~~~~~~~~
    40|         0|            0|            0|  0.00%|
    41|         0|            0|            0|  0.00%|**Small problem**
    42|         0|            0|            0|  0.00%|
    43|         0|            0|            0|  0.00%|>>> def F(x):
    44|         0|            0|            0|  0.00%|...    return np.cos(x) + x[::-1] - [1, 2, 3, 4]
    45|         0|            0|            0|  0.00%|>>> import scipy.optimize
    46|         0|            0|            0|  0.00%|>>> x = scipy.optimize.broyden1(F, [1,1,1,1], f_tol=1e-14)
    47|         0|            0|            0|  0.00%|>>> x
    48|         0|            0|            0|  0.00%|array([ 4.04674914,  3.91158389,  2.71791677,  1.61756251])
    49|         0|            0|            0|  0.00%|>>> np.cos(x) + x[::-1]
    50|         0|            0|            0|  0.00%|array([ 1.,  2.,  3.,  4.])
    51|         0|            0|            0|  0.00%|
    52|         0|            0|            0|  0.00%|
    53|         0|            0|            0|  0.00%|**Large problem**
    54|         0|            0|            0|  0.00%|
    55|         0|            0|            0|  0.00%|Suppose that we needed to solve the following integrodifferential
    56|         0|            0|            0|  0.00%|equation on the square :math:`[0,1]\times[0,1]`:
    57|         0|            0|            0|  0.00%|
    58|         0|            0|            0|  0.00%|.. math::
    59|         0|            0|            0|  0.00%|
    60|         0|            0|            0|  0.00%|   \nabla^2 P = 10 \left(\int_0^1\int_0^1\cosh(P)\,dx\,dy\right)^2
    61|         0|            0|            0|  0.00%|
    62|         0|            0|            0|  0.00%|with :math:`P(x,1) = 1` and :math:`P=0` elsewhere on the boundary of
    63|         0|            0|            0|  0.00%|the square.
    64|         0|            0|            0|  0.00%|
    65|         0|            0|            0|  0.00%|The solution can be found using the `newton_krylov` solver:
    66|         0|            0|            0|  0.00%|
    67|         0|            0|            0|  0.00%|.. plot::
    68|         0|            0|            0|  0.00%|
    69|         0|            0|            0|  0.00%|   import numpy as np
    70|         0|            0|            0|  0.00%|   from scipy.optimize import newton_krylov
    71|         0|            0|            0|  0.00%|   from numpy import cosh, zeros_like, mgrid, zeros
    72|         0|            0|            0|  0.00%|
    73|         0|            0|            0|  0.00%|   # parameters
    74|         0|            0|            0|  0.00%|   nx, ny = 75, 75
    75|         0|            0|            0|  0.00%|   hx, hy = 1./(nx-1), 1./(ny-1)
    76|         0|            0|            0|  0.00%|
    77|         0|            0|            0|  0.00%|   P_left, P_right = 0, 0
    78|         0|            0|            0|  0.00%|   P_top, P_bottom = 1, 0
    79|         0|            0|            0|  0.00%|
    80|         0|            0|            0|  0.00%|   def residual(P):
    81|         0|            0|            0|  0.00%|       d2x = zeros_like(P)
    82|         0|            0|            0|  0.00%|       d2y = zeros_like(P)
    83|         0|            0|            0|  0.00%|
    84|         0|            0|            0|  0.00%|       d2x[1:-1] = (P[2:]   - 2*P[1:-1] + P[:-2]) / hx/hx
    85|         0|            0|            0|  0.00%|       d2x[0]    = (P[1]    - 2*P[0]    + P_left)/hx/hx
    86|         0|            0|            0|  0.00%|       d2x[-1]   = (P_right - 2*P[-1]   + P[-2])/hx/hx
    87|         0|            0|            0|  0.00%|
    88|         0|            0|            0|  0.00%|       d2y[:,1:-1] = (P[:,2:] - 2*P[:,1:-1] + P[:,:-2])/hy/hy
    89|         0|            0|            0|  0.00%|       d2y[:,0]    = (P[:,1]  - 2*P[:,0]    + P_bottom)/hy/hy
    90|         0|            0|            0|  0.00%|       d2y[:,-1]   = (P_top   - 2*P[:,-1]   + P[:,-2])/hy/hy
    91|         0|            0|            0|  0.00%|
    92|         0|            0|            0|  0.00%|       return d2x + d2y - 10*cosh(P).mean()**2
    93|         0|            0|            0|  0.00%|
    94|         0|            0|            0|  0.00%|   # solve
    95|         0|            0|            0|  0.00%|   guess = zeros((nx, ny), float)
    96|         0|            0|            0|  0.00%|   sol = newton_krylov(residual, guess, method='lgmres', verbose=1)
    97|         0|            0|            0|  0.00%|   print('Residual: %g' % abs(residual(sol)).max())
    98|         0|            0|            0|  0.00%|
    99|         0|            0|            0|  0.00%|   # visualize
   100|         0|            0|            0|  0.00%|   import matplotlib.pyplot as plt
   101|         0|            0|            0|  0.00%|   x, y = mgrid[0:1:(nx*1j), 0:1:(ny*1j)]
   102|         0|            0|            0|  0.00%|   plt.pcolormesh(x, y, sol, shading='gouraud')
   103|         0|            0|            0|  0.00%|   plt.colorbar()
   104|         0|            0|            0|  0.00%|   plt.show()
   105|         0|            0|            0|  0.00%|
   106|         0|            0|            0|  0.00%|"""
   107|         0|            0|            0|  0.00%|# Copyright (C) 2009, Pauli Virtanen <pav@iki.fi>
   108|         0|            0|            0|  0.00%|# Distributed under the same license as SciPy.
   109|         0|            0|            0|  0.00%|
   110|         0|            0|            0|  0.00%|import sys
   111|         0|            0|            0|  0.00%|import numpy as np
   112|         0|            0|            0|  0.00%|from scipy.linalg import norm, solve, inv, qr, svd, LinAlgError
   113|         0|            0|            0|  0.00%|from numpy import asarray, dot, vdot
   114|         0|            0|            0|  0.00%|import scipy.sparse.linalg
   115|         0|            0|            0|  0.00%|import scipy.sparse
   116|         0|            0|            0|  0.00%|from scipy.linalg import get_blas_funcs
   117|         0|            0|            0|  0.00%|import inspect
   118|         0|            0|            0|  0.00%|from scipy._lib._util import getfullargspec_no_self as _getfullargspec
   119|         0|            0|            0|  0.00%|from .linesearch import scalar_search_wolfe1, scalar_search_armijo
   120|         0|            0|            0|  0.00%|
   121|         0|            0|            0|  0.00%|
   122|         0|            0|            0|  0.00%|__all__ = [
   123|         0|            0|            0|  0.00%|    'broyden1', 'broyden2', 'anderson', 'linearmixing',
   124|         0|            0|            0|  0.00%|    'diagbroyden', 'excitingmixing', 'newton_krylov']
   125|         0|            0|            0|  0.00%|
   126|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   127|         0|            0|            0|  0.00%|# Utility functions
   128|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   129|         0|            0|            0|  0.00%|
   130|         0|            0|            0|  0.00%|
   131|         0|            0|            0|  0.00%|class NoConvergence(Exception):
   132|         0|            0|            0|  0.00%|    pass
   133|         0|            0|            0|  0.00%|
   134|         0|            0|            0|  0.00%|
   135|         0|            0|            0|  0.00%|def maxnorm(x):
   136|         0|            0|            0|  0.00%|    return np.absolute(x).max()
   137|         0|            0|            0|  0.00%|
   138|         0|            0|            0|  0.00%|
   139|         0|            0|            0|  0.00%|def _as_inexact(x):
   140|         0|            0|            0|  0.00%|    """Return `x` as an array, of either floats or complex floats"""
   141|         0|            0|            0|  0.00%|    x = asarray(x)
   142|         0|            0|            0|  0.00%|    if not np.issubdtype(x.dtype, np.inexact):
   143|         0|            0|            0|  0.00%|        return asarray(x, dtype=np.float_)
   144|         0|            0|            0|  0.00%|    return x
   145|         0|            0|            0|  0.00%|
   146|         0|            0|            0|  0.00%|
   147|         0|            0|            0|  0.00%|def _array_like(x, x0):
   148|         0|            0|            0|  0.00%|    """Return ndarray `x` as same array subclass and shape as `x0`"""
   149|         0|            0|            0|  0.00%|    x = np.reshape(x, np.shape(x0))
   150|         0|            0|            0|  0.00%|    wrap = getattr(x0, '__array_wrap__', x.__array_wrap__)
   151|         0|            0|            0|  0.00%|    return wrap(x)
   152|         0|            0|            0|  0.00%|
   153|         0|            0|            0|  0.00%|
   154|         0|            0|            0|  0.00%|def _safe_norm(v):
   155|         0|            0|            0|  0.00%|    if not np.isfinite(v).all():
   156|         0|            0|            0|  0.00%|        return np.array(np.inf)
   157|         0|            0|            0|  0.00%|    return norm(v)
   158|         0|            0|            0|  0.00%|
   159|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   160|         0|            0|            0|  0.00%|# Generic nonlinear solver machinery
   161|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   162|         0|            0|            0|  0.00%|
   163|         0|            0|            0|  0.00%|
   164|         0|            0|            0|  0.00%|_doc_parts = dict(
   165|         0|            0|            0|  0.00%|    params_basic="""
   166|         0|            0|            0|  0.00%|    F : function(x) -> f
   167|         0|            0|            0|  0.00%|        Function whose root to find; should take and return an array-like
   168|         0|            0|            0|  0.00%|        object.
   169|         0|            0|            0|  0.00%|    xin : array_like
   170|         0|            0|            0|  0.00%|        Initial guess for the solution
   171|         0|            0|            0|  0.00%|    """.strip(),
   172|         0|            0|            0|  0.00%|    params_extra="""
   173|         0|            0|            0|  0.00%|    iter : int, optional
   174|         0|            0|            0|  0.00%|        Number of iterations to make. If omitted (default), make as many
   175|         0|            0|            0|  0.00%|        as required to meet tolerances.
   176|         0|            0|            0|  0.00%|    verbose : bool, optional
   177|         0|            0|            0|  0.00%|        Print status to stdout on every iteration.
   178|         0|            0|            0|  0.00%|    maxiter : int, optional
   179|         0|            0|            0|  0.00%|        Maximum number of iterations to make. If more are needed to
   180|         0|            0|            0|  0.00%|        meet convergence, `NoConvergence` is raised.
   181|         0|            0|            0|  0.00%|    f_tol : float, optional
   182|         0|            0|            0|  0.00%|        Absolute tolerance (in max-norm) for the residual.
   183|         0|            0|            0|  0.00%|        If omitted, default is 6e-6.
   184|         0|            0|            0|  0.00%|    f_rtol : float, optional
   185|         0|            0|            0|  0.00%|        Relative tolerance for the residual. If omitted, not used.
   186|         0|            0|            0|  0.00%|    x_tol : float, optional
   187|         0|            0|            0|  0.00%|        Absolute minimum step size, as determined from the Jacobian
   188|         0|            0|            0|  0.00%|        approximation. If the step size is smaller than this, optimization
   189|         0|            0|            0|  0.00%|        is terminated as successful. If omitted, not used.
   190|         0|            0|            0|  0.00%|    x_rtol : float, optional
   191|         0|            0|            0|  0.00%|        Relative minimum step size. If omitted, not used.
   192|         0|            0|            0|  0.00%|    tol_norm : function(vector) -> scalar, optional
   193|         0|            0|            0|  0.00%|        Norm to use in convergence check. Default is the maximum norm.
   194|         0|            0|            0|  0.00%|    line_search : {None, 'armijo' (default), 'wolfe'}, optional
   195|         0|            0|            0|  0.00%|        Which type of a line search to use to determine the step size in the
   196|         0|            0|            0|  0.00%|        direction given by the Jacobian approximation. Defaults to 'armijo'.
   197|         0|            0|            0|  0.00%|    callback : function, optional
   198|         0|            0|            0|  0.00%|        Optional callback function. It is called on every iteration as
   199|         0|            0|            0|  0.00%|        ``callback(x, f)`` where `x` is the current solution and `f`
   200|         0|            0|            0|  0.00%|        the corresponding residual.
   201|         0|            0|            0|  0.00%|
   202|         0|            0|            0|  0.00%|    Returns
   203|         0|            0|            0|  0.00%|    -------
   204|         0|            0|            0|  0.00%|    sol : ndarray
   205|         0|            0|            0|  0.00%|        An array (of similar array type as `x0`) containing the final solution.
   206|         0|            0|            0|  0.00%|
   207|         0|            0|            0|  0.00%|    Raises
   208|         0|            0|            0|  0.00%|    ------
   209|         0|            0|            0|  0.00%|    NoConvergence
   210|         0|            0|            0|  0.00%|        When a solution was not found.
   211|         0|            0|            0|  0.00%|
   212|         0|            0|            0|  0.00%|    """.strip()
   213|         0|            0|            0|  0.00%|)
   214|         0|            0|            0|  0.00%|
   215|         0|            0|            0|  0.00%|
   216|         0|            0|            0|  0.00%|def _set_doc(obj):
   217|         0|            0|            0|  0.00%|    if obj.__doc__:
   218|         0|            0|            0|  0.00%|        obj.__doc__ = obj.__doc__ % _doc_parts
   219|         0|            0|            0|  0.00%|
   220|         0|            0|            0|  0.00%|
   221|         0|            0|            0|  0.00%|def nonlin_solve(F, x0, jacobian='krylov', iter=None, verbose=False,
   222|         0|            0|            0|  0.00%|                 maxiter=None, f_tol=None, f_rtol=None, x_tol=None, x_rtol=None,
   223|         0|            0|            0|  0.00%|                 tol_norm=None, line_search='armijo', callback=None,
   224|         0|            0|            0|  0.00%|                 full_output=False, raise_exception=True):
   225|         0|            0|            0|  0.00%|    """
   226|         0|            0|            0|  0.00%|    Find a root of a function, in a way suitable for large-scale problems.
   227|         0|            0|            0|  0.00%|
   228|         0|            0|            0|  0.00%|    Parameters
   229|         0|            0|            0|  0.00%|    ----------
   230|         0|            0|            0|  0.00%|    %(params_basic)s
   231|         0|            0|            0|  0.00%|    jacobian : Jacobian
   232|         0|            0|            0|  0.00%|        A Jacobian approximation: `Jacobian` object or something that
   233|         0|            0|            0|  0.00%|        `asjacobian` can transform to one. Alternatively, a string specifying
   234|         0|            0|            0|  0.00%|        which of the builtin Jacobian approximations to use:
   235|         0|            0|            0|  0.00%|
   236|         0|            0|            0|  0.00%|            krylov, broyden1, broyden2, anderson
   237|         0|            0|            0|  0.00%|            diagbroyden, linearmixing, excitingmixing
   238|         0|            0|            0|  0.00%|
   239|         0|            0|            0|  0.00%|    %(params_extra)s
   240|         0|            0|            0|  0.00%|    full_output : bool
   241|         0|            0|            0|  0.00%|        If true, returns a dictionary `info` containing convergence
   242|         0|            0|            0|  0.00%|        information.
   243|         0|            0|            0|  0.00%|    raise_exception : bool
   244|         0|            0|            0|  0.00%|        If True, a `NoConvergence` exception is raise if no solution is found.
   245|         0|            0|            0|  0.00%|
   246|         0|            0|            0|  0.00%|    See Also
   247|         0|            0|            0|  0.00%|    --------
   248|         0|            0|            0|  0.00%|    asjacobian, Jacobian
   249|         0|            0|            0|  0.00%|
   250|         0|            0|            0|  0.00%|    Notes
   251|         0|            0|            0|  0.00%|    -----
   252|         0|            0|            0|  0.00%|    This algorithm implements the inexact Newton method, with
   253|         0|            0|            0|  0.00%|    backtracking or full line searches. Several Jacobian
   254|         0|            0|            0|  0.00%|    approximations are available, including Krylov and Quasi-Newton
   255|         0|            0|            0|  0.00%|    methods.
   256|         0|            0|            0|  0.00%|
   257|         0|            0|            0|  0.00%|    References
   258|         0|            0|            0|  0.00%|    ----------
   259|         0|            0|            0|  0.00%|    .. [KIM] C. T. Kelley, \"Iterative Methods for Linear and Nonlinear
   260|         0|            0|            0|  0.00%|       Equations\". Society for Industrial and Applied Mathematics. (1995)
   261|         0|            0|            0|  0.00%|       https://archive.siam.org/books/kelley/fr16/
   262|         0|            0|            0|  0.00%|
   263|         0|            0|            0|  0.00%|    """
   264|         0|            0|            0|  0.00%|    # Can't use default parameters because it's being explicitly passed as None
   265|         0|            0|            0|  0.00%|    # from the calling function, so we need to set it here.
   266|         0|            0|            0|  0.00%|    tol_norm = maxnorm if tol_norm is None else tol_norm
   267|         0|            0|            0|  0.00%|    condition = TerminationCondition(f_tol=f_tol, f_rtol=f_rtol,
   268|         0|            0|            0|  0.00%|                                     x_tol=x_tol, x_rtol=x_rtol,
   269|         0|            0|            0|  0.00%|                                     iter=iter, norm=tol_norm)
   270|         0|            0|            0|  0.00%|
   271|         0|            0|            0|  0.00%|    x0 = _as_inexact(x0)
   272|         0|            0|            0|  0.00%|    func = lambda z: _as_inexact(F(_array_like(z, x0))).flatten()
   273|         0|            0|            0|  0.00%|    x = x0.flatten()
   274|         0|            0|            0|  0.00%|
   275|         0|            0|            0|  0.00%|    dx = np.inf
   276|         0|            0|            0|  0.00%|    Fx = func(x)
   277|         0|            0|            0|  0.00%|    Fx_norm = norm(Fx)
   278|         0|            0|            0|  0.00%|
   279|         0|            0|            0|  0.00%|    jacobian = asjacobian(jacobian)
   280|         0|            0|            0|  0.00%|    jacobian.setup(x.copy(), Fx, func)
   281|         0|            0|            0|  0.00%|
   282|         0|            0|            0|  0.00%|    if maxiter is None:
   283|         0|            0|            0|  0.00%|        if iter is not None:
   284|         0|            0|            0|  0.00%|            maxiter = iter + 1
   285|         0|            0|            0|  0.00%|        else:
   286|         0|            0|            0|  0.00%|            maxiter = 100*(x.size+1)
   287|         0|            0|            0|  0.00%|
   288|         0|            0|            0|  0.00%|    if line_search is True:
   289|         0|            0|            0|  0.00%|        line_search = 'armijo'
   290|         0|            0|            0|  0.00%|    elif line_search is False:
   291|         0|            0|            0|  0.00%|        line_search = None
   292|         0|            0|            0|  0.00%|
   293|         0|            0|            0|  0.00%|    if line_search not in (None, 'armijo', 'wolfe'):
   294|         0|            0|            0|  0.00%|        raise ValueError("Invalid line search")
   295|         0|            0|            0|  0.00%|
   296|         0|            0|            0|  0.00%|    # Solver tolerance selection
   297|         0|            0|            0|  0.00%|    gamma = 0.9
   298|         0|            0|            0|  0.00%|    eta_max = 0.9999
   299|         0|            0|            0|  0.00%|    eta_treshold = 0.1
   300|         0|            0|            0|  0.00%|    eta = 1e-3
   301|         0|            0|            0|  0.00%|
   302|         0|            0|            0|  0.00%|    for n in range(maxiter):
   303|         0|            0|            0|  0.00%|        status = condition.check(Fx, x, dx)
   304|         0|            0|            0|  0.00%|        if status:
   305|         0|            0|            0|  0.00%|            break
   306|         0|            0|            0|  0.00%|
   307|         0|            0|            0|  0.00%|        # The tolerance, as computed for scipy.sparse.linalg.* routines
   308|         0|            0|            0|  0.00%|        tol = min(eta, eta*Fx_norm)
   309|         0|            0|            0|  0.00%|        dx = -jacobian.solve(Fx, tol=tol)
   310|         0|            0|            0|  0.00%|
   311|         0|            0|            0|  0.00%|        if norm(dx) == 0:
   312|         0|            0|            0|  0.00%|            raise ValueError("Jacobian inversion yielded zero vector. "
   313|         0|            0|            0|  0.00%|                             "This indicates a bug in the Jacobian "
   314|         0|            0|            0|  0.00%|                             "approximation.")
   315|         0|            0|            0|  0.00%|
   316|         0|            0|            0|  0.00%|        # Line search, or Newton step
   317|         0|            0|            0|  0.00%|        if line_search:
   318|         0|            0|            0|  0.00%|            s, x, Fx, Fx_norm_new = _nonlin_line_search(func, x, Fx, dx,
   319|         0|            0|            0|  0.00%|                                                        line_search)
   320|         0|            0|            0|  0.00%|        else:
   321|         0|            0|            0|  0.00%|            s = 1.0
   322|         0|            0|            0|  0.00%|            x = x + dx
   323|         0|            0|            0|  0.00%|            Fx = func(x)
   324|         0|            0|            0|  0.00%|            Fx_norm_new = norm(Fx)
   325|         0|            0|            0|  0.00%|
   326|         0|            0|            0|  0.00%|        jacobian.update(x.copy(), Fx)
   327|         0|            0|            0|  0.00%|
   328|         0|            0|            0|  0.00%|        if callback:
   329|         0|            0|            0|  0.00%|            callback(x, Fx)
   330|         0|            0|            0|  0.00%|
   331|         0|            0|            0|  0.00%|        # Adjust forcing parameters for inexact methods
   332|         0|            0|            0|  0.00%|        eta_A = gamma * Fx_norm_new**2 / Fx_norm**2
   333|         0|            0|            0|  0.00%|        if gamma * eta**2 < eta_treshold:
   334|         0|            0|            0|  0.00%|            eta = min(eta_max, eta_A)
   335|         0|            0|            0|  0.00%|        else:
   336|         0|            0|            0|  0.00%|            eta = min(eta_max, max(eta_A, gamma*eta**2))
   337|         0|            0|            0|  0.00%|
   338|         0|            0|            0|  0.00%|        Fx_norm = Fx_norm_new
   339|         0|            0|            0|  0.00%|
   340|         0|            0|            0|  0.00%|        # Print status
   341|         0|            0|            0|  0.00%|        if verbose:
   342|         0|            0|            0|  0.00%|            sys.stdout.write("%d:  |F(x)| = %g; step %g\n" % (
   343|         0|            0|            0|  0.00%|                n, tol_norm(Fx), s))
   344|         0|            0|            0|  0.00%|            sys.stdout.flush()
   345|         0|            0|            0|  0.00%|    else:
   346|         0|            0|            0|  0.00%|        if raise_exception:
   347|         0|            0|            0|  0.00%|            raise NoConvergence(_array_like(x, x0))
   348|         0|            0|            0|  0.00%|        else:
   349|         0|            0|            0|  0.00%|            status = 2
   350|         0|            0|            0|  0.00%|
   351|         0|            0|            0|  0.00%|    if full_output:
   352|         0|            0|            0|  0.00%|        info = {'nit': condition.iteration,
   353|         0|            0|            0|  0.00%|                'fun': Fx,
   354|         0|            0|            0|  0.00%|                'status': status,
   355|         0|            0|            0|  0.00%|                'success': status == 1,
   356|         0|            0|            0|  0.00%|                'message': {1: 'A solution was found at the specified '
   357|         0|            0|            0|  0.00%|                               'tolerance.',
   358|         0|            0|            0|  0.00%|                            2: 'The maximum number of iterations allowed '
   359|         0|            0|            0|  0.00%|                               'has been reached.'
   360|         0|            0|            0|  0.00%|                            }[status]
   361|         0|            0|            0|  0.00%|                }
   362|         0|            0|            0|  0.00%|        return _array_like(x, x0), info
   363|         0|            0|            0|  0.00%|    else:
   364|         0|            0|            0|  0.00%|        return _array_like(x, x0)
   365|         0|            0|            0|  0.00%|
   366|         0|            0|            0|  0.00%|
   367|         0|            0|            0|  0.00%|_set_doc(nonlin_solve)
   368|         0|            0|            0|  0.00%|
   369|         0|            0|            0|  0.00%|
   370|         0|            0|            0|  0.00%|def _nonlin_line_search(func, x, Fx, dx, search_type='armijo', rdiff=1e-8,
   371|         0|            0|            0|  0.00%|                        smin=1e-2):
   372|         0|            0|            0|  0.00%|    tmp_s = [0]
   373|         0|            0|            0|  0.00%|    tmp_Fx = [Fx]
   374|         0|            0|            0|  0.00%|    tmp_phi = [norm(Fx)**2]
   375|         0|            0|            0|  0.00%|    s_norm = norm(x) / norm(dx)
   376|         0|            0|            0|  0.00%|
   377|         0|            0|            0|  0.00%|    def phi(s, store=True):
   378|         0|            0|            0|  0.00%|        if s == tmp_s[0]:
   379|         0|            0|            0|  0.00%|            return tmp_phi[0]
   380|         0|            0|            0|  0.00%|        xt = x + s*dx
   381|         0|            0|            0|  0.00%|        v = func(xt)
   382|         0|            0|            0|  0.00%|        p = _safe_norm(v)**2
   383|         0|            0|            0|  0.00%|        if store:
   384|         0|            0|            0|  0.00%|            tmp_s[0] = s
   385|         0|            0|            0|  0.00%|            tmp_phi[0] = p
   386|         0|            0|            0|  0.00%|            tmp_Fx[0] = v
   387|         0|            0|            0|  0.00%|        return p
   388|         0|            0|            0|  0.00%|
   389|         0|            0|            0|  0.00%|    def derphi(s):
   390|         0|            0|            0|  0.00%|        ds = (abs(s) + s_norm + 1) * rdiff
   391|         0|            0|            0|  0.00%|        return (phi(s+ds, store=False) - phi(s)) / ds
   392|         0|            0|            0|  0.00%|
   393|         0|            0|            0|  0.00%|    if search_type == 'wolfe':
   394|         0|            0|            0|  0.00%|        s, phi1, phi0 = scalar_search_wolfe1(phi, derphi, tmp_phi[0],
   395|         0|            0|            0|  0.00%|                                             xtol=1e-2, amin=smin)
   396|         0|            0|            0|  0.00%|    elif search_type == 'armijo':
   397|         0|            0|            0|  0.00%|        s, phi1 = scalar_search_armijo(phi, tmp_phi[0], -tmp_phi[0],
   398|         0|            0|            0|  0.00%|                                       amin=smin)
   399|         0|            0|            0|  0.00%|
   400|         0|            0|            0|  0.00%|    if s is None:
   401|         0|            0|            0|  0.00%|        # XXX: No suitable step length found. Take the full Newton step,
   402|         0|            0|            0|  0.00%|        #      and hope for the best.
   403|         0|            0|            0|  0.00%|        s = 1.0
   404|         0|            0|            0|  0.00%|
   405|         0|            0|            0|  0.00%|    x = x + s*dx
   406|         0|            0|            0|  0.00%|    if s == tmp_s[0]:
   407|         0|            0|            0|  0.00%|        Fx = tmp_Fx[0]
   408|         0|            0|            0|  0.00%|    else:
   409|         0|            0|            0|  0.00%|        Fx = func(x)
   410|         0|            0|            0|  0.00%|    Fx_norm = norm(Fx)
   411|         0|            0|            0|  0.00%|
   412|         0|            0|            0|  0.00%|    return s, x, Fx, Fx_norm
   413|         0|            0|            0|  0.00%|
   414|         0|            0|            0|  0.00%|
   415|         0|            0|            0|  0.00%|class TerminationCondition(object):
   416|         0|            0|            0|  0.00%|    """
   417|         0|            0|            0|  0.00%|    Termination condition for an iteration. It is terminated if
   418|         0|            0|            0|  0.00%|
   419|         0|            0|            0|  0.00%|    - |F| < f_rtol*|F_0|, AND
   420|         0|            0|            0|  0.00%|    - |F| < f_tol
   421|         0|            0|            0|  0.00%|
   422|         0|            0|            0|  0.00%|    AND
   423|         0|            0|            0|  0.00%|
   424|         0|            0|            0|  0.00%|    - |dx| < x_rtol*|x|, AND
   425|         0|            0|            0|  0.00%|    - |dx| < x_tol
   426|         0|            0|            0|  0.00%|
   427|         0|            0|            0|  0.00%|    """
   428|         0|            0|            0|  0.00%|    def __init__(self, f_tol=None, f_rtol=None, x_tol=None, x_rtol=None,
   429|         0|            0|            0|  0.00%|                 iter=None, norm=maxnorm):
   430|         0|            0|            0|  0.00%|
   431|         0|            0|            0|  0.00%|        if f_tol is None:
   432|         0|            0|            0|  0.00%|            f_tol = np.finfo(np.float_).eps ** (1./3)
   433|         0|            0|            0|  0.00%|        if f_rtol is None:
   434|         0|            0|            0|  0.00%|            f_rtol = np.inf
   435|         0|            0|            0|  0.00%|        if x_tol is None:
   436|         0|            0|            0|  0.00%|            x_tol = np.inf
   437|         0|            0|            0|  0.00%|        if x_rtol is None:
   438|         0|            0|            0|  0.00%|            x_rtol = np.inf
   439|         0|            0|            0|  0.00%|
   440|         0|            0|            0|  0.00%|        self.x_tol = x_tol
   441|         0|            0|            0|  0.00%|        self.x_rtol = x_rtol
   442|         0|            0|            0|  0.00%|        self.f_tol = f_tol
   443|         0|            0|            0|  0.00%|        self.f_rtol = f_rtol
   444|         0|            0|            0|  0.00%|
   445|         0|            0|            0|  0.00%|        self.norm = norm
   446|         0|            0|            0|  0.00%|
   447|         0|            0|            0|  0.00%|        self.iter = iter
   448|         0|            0|            0|  0.00%|
   449|         0|            0|            0|  0.00%|        self.f0_norm = None
   450|         0|            0|            0|  0.00%|        self.iteration = 0
   451|         0|            0|            0|  0.00%|
   452|         0|            0|            0|  0.00%|    def check(self, f, x, dx):
   453|         0|            0|            0|  0.00%|        self.iteration += 1
   454|         0|            0|            0|  0.00%|        f_norm = self.norm(f)
   455|         0|            0|            0|  0.00%|        x_norm = self.norm(x)
   456|         0|            0|            0|  0.00%|        dx_norm = self.norm(dx)
   457|         0|            0|            0|  0.00%|
   458|         0|            0|            0|  0.00%|        if self.f0_norm is None:
   459|         0|            0|            0|  0.00%|            self.f0_norm = f_norm
   460|         0|            0|            0|  0.00%|
   461|         0|            0|            0|  0.00%|        if f_norm == 0:
   462|         0|            0|            0|  0.00%|            return 1
   463|         0|            0|            0|  0.00%|
   464|         0|            0|            0|  0.00%|        if self.iter is not None:
   465|         0|            0|            0|  0.00%|            # backwards compatibility with SciPy 0.6.0
   466|         0|            0|            0|  0.00%|            return 2 * (self.iteration > self.iter)
   467|         0|            0|            0|  0.00%|
   468|         0|            0|            0|  0.00%|        # NB: condition must succeed for rtol=inf even if norm == 0
   469|         0|            0|            0|  0.00%|        return int((f_norm <= self.f_tol
   470|         0|            0|            0|  0.00%|                    and f_norm/self.f_rtol <= self.f0_norm)
   471|         0|            0|            0|  0.00%|                   and (dx_norm <= self.x_tol
   472|         0|            0|            0|  0.00%|                        and dx_norm/self.x_rtol <= x_norm))
   473|         0|            0|            0|  0.00%|
   474|         0|            0|            0|  0.00%|
   475|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   476|         0|            0|            0|  0.00%|# Generic Jacobian approximation
   477|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   478|         0|            0|            0|  0.00%|
   479|         0|            0|            0|  0.00%|class Jacobian(object):
   480|         0|            0|            0|  0.00%|    """
   481|         0|            0|            0|  0.00%|    Common interface for Jacobians or Jacobian approximations.
   482|         0|            0|            0|  0.00%|
   483|         0|            0|            0|  0.00%|    The optional methods come useful when implementing trust region
   484|         0|            0|            0|  0.00%|    etc., algorithms that often require evaluating transposes of the
   485|         0|            0|            0|  0.00%|    Jacobian.
   486|         0|            0|            0|  0.00%|
   487|         0|            0|            0|  0.00%|    Methods
   488|         0|            0|            0|  0.00%|    -------
   489|         0|            0|            0|  0.00%|    solve
   490|         0|            0|            0|  0.00%|        Returns J^-1 * v
   491|         0|            0|            0|  0.00%|    update
   492|         0|            0|            0|  0.00%|        Updates Jacobian to point `x` (where the function has residual `Fx`)
   493|         0|            0|            0|  0.00%|
   494|         0|            0|            0|  0.00%|    matvec : optional
   495|         0|            0|            0|  0.00%|        Returns J * v
   496|         0|            0|            0|  0.00%|    rmatvec : optional
   497|         0|            0|            0|  0.00%|        Returns A^H * v
   498|         0|            0|            0|  0.00%|    rsolve : optional
   499|         0|            0|            0|  0.00%|        Returns A^-H * v
   500|         0|            0|            0|  0.00%|    matmat : optional
   501|         0|            0|            0|  0.00%|        Returns A * V, where V is a dense matrix with dimensions (N,K).
   502|         0|            0|            0|  0.00%|    todense : optional
   503|         0|            0|            0|  0.00%|        Form the dense Jacobian matrix. Necessary for dense trust region
   504|         0|            0|            0|  0.00%|        algorithms, and useful for testing.
   505|         0|            0|            0|  0.00%|
   506|         0|            0|            0|  0.00%|    Attributes
   507|         0|            0|            0|  0.00%|    ----------
   508|         0|            0|            0|  0.00%|    shape
   509|         0|            0|            0|  0.00%|        Matrix dimensions (M, N)
   510|         0|            0|            0|  0.00%|    dtype
   511|         0|            0|            0|  0.00%|        Data type of the matrix.
   512|         0|            0|            0|  0.00%|    func : callable, optional
   513|         0|            0|            0|  0.00%|        Function the Jacobian corresponds to
   514|         0|            0|            0|  0.00%|
   515|         0|            0|            0|  0.00%|    """
   516|         0|            0|            0|  0.00%|
   517|         0|            0|            0|  0.00%|    def __init__(self, **kw):
   518|         0|            0|            0|  0.00%|        names = ["solve", "update", "matvec", "rmatvec", "rsolve",
   519|         0|            0|            0|  0.00%|                 "matmat", "todense", "shape", "dtype"]
   520|         0|            0|            0|  0.00%|        for name, value in kw.items():
   521|         0|            0|            0|  0.00%|            if name not in names:
   522|         0|            0|            0|  0.00%|                raise ValueError("Unknown keyword argument %s" % name)
   523|         0|            0|            0|  0.00%|            if value is not None:
   524|         0|            0|            0|  0.00%|                setattr(self, name, kw[name])
   525|         0|            0|            0|  0.00%|
   526|         0|            0|            0|  0.00%|        if hasattr(self, 'todense'):
   527|         0|            0|            0|  0.00%|            self.__array__ = lambda: self.todense()
   528|         0|            0|            0|  0.00%|
   529|         0|            0|            0|  0.00%|    def aspreconditioner(self):
   530|         0|            0|            0|  0.00%|        return InverseJacobian(self)
   531|         0|            0|            0|  0.00%|
   532|         0|            0|            0|  0.00%|    def solve(self, v, tol=0):
   533|         0|            0|            0|  0.00%|        raise NotImplementedError
   534|         0|            0|            0|  0.00%|
   535|         0|            0|            0|  0.00%|    def update(self, x, F):
   536|         0|            0|            0|  0.00%|        pass
   537|         0|            0|            0|  0.00%|
   538|         0|            0|            0|  0.00%|    def setup(self, x, F, func):
   539|         0|            0|            0|  0.00%|        self.func = func
   540|         0|            0|            0|  0.00%|        self.shape = (F.size, x.size)
   541|         0|            0|            0|  0.00%|        self.dtype = F.dtype
   542|         0|            0|            0|  0.00%|        if self.__class__.setup is Jacobian.setup:
   543|         0|            0|            0|  0.00%|            # Call on the first point unless overridden
   544|         0|            0|            0|  0.00%|            self.update(x, F)
   545|         0|            0|            0|  0.00%|
   546|         0|            0|            0|  0.00%|
   547|         0|            0|            0|  0.00%|class InverseJacobian(object):
   548|         0|            0|            0|  0.00%|    def __init__(self, jacobian):
   549|         0|            0|            0|  0.00%|        self.jacobian = jacobian
   550|         0|            0|            0|  0.00%|        self.matvec = jacobian.solve
   551|         0|            0|            0|  0.00%|        self.update = jacobian.update
   552|         0|            0|            0|  0.00%|        if hasattr(jacobian, 'setup'):
   553|         0|            0|            0|  0.00%|            self.setup = jacobian.setup
   554|         0|            0|            0|  0.00%|        if hasattr(jacobian, 'rsolve'):
   555|         0|            0|            0|  0.00%|            self.rmatvec = jacobian.rsolve
   556|         0|            0|            0|  0.00%|
   557|         0|            0|            0|  0.00%|    @property
   558|         0|            0|            0|  0.00%|    def shape(self):
   559|         0|            0|            0|  0.00%|        return self.jacobian.shape
   560|         0|            0|            0|  0.00%|
   561|         0|            0|            0|  0.00%|    @property
   562|         0|            0|            0|  0.00%|    def dtype(self):
   563|         0|            0|            0|  0.00%|        return self.jacobian.dtype
   564|         0|            0|            0|  0.00%|
   565|         0|            0|            0|  0.00%|
   566|         0|            0|            0|  0.00%|def asjacobian(J):
   567|         0|            0|            0|  0.00%|    """
   568|         0|            0|            0|  0.00%|    Convert given object to one suitable for use as a Jacobian.
   569|         0|            0|            0|  0.00%|    """
   570|         0|            0|            0|  0.00%|    spsolve = scipy.sparse.linalg.spsolve
   571|         0|            0|            0|  0.00%|    if isinstance(J, Jacobian):
   572|         0|            0|            0|  0.00%|        return J
   573|         0|            0|            0|  0.00%|    elif inspect.isclass(J) and issubclass(J, Jacobian):
   574|         0|            0|            0|  0.00%|        return J()
   575|         0|            0|            0|  0.00%|    elif isinstance(J, np.ndarray):
   576|         0|            0|            0|  0.00%|        if J.ndim > 2:
   577|         0|            0|            0|  0.00%|            raise ValueError('array must have rank <= 2')
   578|         0|            0|            0|  0.00%|        J = np.atleast_2d(np.asarray(J))
   579|         0|            0|            0|  0.00%|        if J.shape[0] != J.shape[1]:
   580|         0|            0|            0|  0.00%|            raise ValueError('array must be square')
   581|         0|            0|            0|  0.00%|
   582|         0|            0|            0|  0.00%|        return Jacobian(matvec=lambda v: dot(J, v),
   583|         0|            0|            0|  0.00%|                        rmatvec=lambda v: dot(J.conj().T, v),
   584|         0|            0|            0|  0.00%|                        solve=lambda v: solve(J, v),
   585|         0|            0|            0|  0.00%|                        rsolve=lambda v: solve(J.conj().T, v),
   586|         0|            0|            0|  0.00%|                        dtype=J.dtype, shape=J.shape)
   587|         0|            0|            0|  0.00%|    elif scipy.sparse.isspmatrix(J):
   588|         0|            0|            0|  0.00%|        if J.shape[0] != J.shape[1]:
   589|         0|            0|            0|  0.00%|            raise ValueError('matrix must be square')
   590|         0|            0|            0|  0.00%|        return Jacobian(matvec=lambda v: J*v,
   591|         0|            0|            0|  0.00%|                        rmatvec=lambda v: J.conj().T * v,
   592|         0|            0|            0|  0.00%|                        solve=lambda v: spsolve(J, v),
   593|         0|            0|            0|  0.00%|                        rsolve=lambda v: spsolve(J.conj().T, v),
   594|         0|            0|            0|  0.00%|                        dtype=J.dtype, shape=J.shape)
   595|         0|            0|            0|  0.00%|    elif hasattr(J, 'shape') and hasattr(J, 'dtype') and hasattr(J, 'solve'):
   596|         0|            0|            0|  0.00%|        return Jacobian(matvec=getattr(J, 'matvec'),
   597|         0|            0|            0|  0.00%|                        rmatvec=getattr(J, 'rmatvec'),
   598|         0|            0|            0|  0.00%|                        solve=J.solve,
   599|         0|            0|            0|  0.00%|                        rsolve=getattr(J, 'rsolve'),
   600|         0|            0|            0|  0.00%|                        update=getattr(J, 'update'),
   601|         0|            0|            0|  0.00%|                        setup=getattr(J, 'setup'),
   602|         0|            0|            0|  0.00%|                        dtype=J.dtype,
   603|         0|            0|            0|  0.00%|                        shape=J.shape)
   604|         0|            0|            0|  0.00%|    elif callable(J):
   605|         0|            0|            0|  0.00%|        # Assume it's a function J(x) that returns the Jacobian
   606|         0|            0|            0|  0.00%|        class Jac(Jacobian):
   607|         0|            0|            0|  0.00%|            def update(self, x, F):
   608|         0|            0|            0|  0.00%|                self.x = x
   609|         0|            0|            0|  0.00%|
   610|         0|            0|            0|  0.00%|            def solve(self, v, tol=0):
   611|         0|            0|            0|  0.00%|                m = J(self.x)
   612|         0|            0|            0|  0.00%|                if isinstance(m, np.ndarray):
   613|         0|            0|            0|  0.00%|                    return solve(m, v)
   614|         0|            0|            0|  0.00%|                elif scipy.sparse.isspmatrix(m):
   615|         0|            0|            0|  0.00%|                    return spsolve(m, v)
   616|         0|            0|            0|  0.00%|                else:
   617|         0|            0|            0|  0.00%|                    raise ValueError("Unknown matrix type")
   618|         0|            0|            0|  0.00%|
   619|         0|            0|            0|  0.00%|            def matvec(self, v):
   620|         0|            0|            0|  0.00%|                m = J(self.x)
   621|         0|            0|            0|  0.00%|                if isinstance(m, np.ndarray):
   622|         0|            0|            0|  0.00%|                    return dot(m, v)
   623|         0|            0|            0|  0.00%|                elif scipy.sparse.isspmatrix(m):
   624|         0|            0|            0|  0.00%|                    return m*v
   625|         0|            0|            0|  0.00%|                else:
   626|         0|            0|            0|  0.00%|                    raise ValueError("Unknown matrix type")
   627|         0|            0|            0|  0.00%|
   628|         0|            0|            0|  0.00%|            def rsolve(self, v, tol=0):
   629|         0|            0|            0|  0.00%|                m = J(self.x)
   630|         0|            0|            0|  0.00%|                if isinstance(m, np.ndarray):
   631|         0|            0|            0|  0.00%|                    return solve(m.conj().T, v)
   632|         0|            0|            0|  0.00%|                elif scipy.sparse.isspmatrix(m):
   633|         0|            0|            0|  0.00%|                    return spsolve(m.conj().T, v)
   634|         0|            0|            0|  0.00%|                else:
   635|         0|            0|            0|  0.00%|                    raise ValueError("Unknown matrix type")
   636|         0|            0|            0|  0.00%|
   637|         0|            0|            0|  0.00%|            def rmatvec(self, v):
   638|         0|            0|            0|  0.00%|                m = J(self.x)
   639|         0|            0|            0|  0.00%|                if isinstance(m, np.ndarray):
   640|         0|            0|            0|  0.00%|                    return dot(m.conj().T, v)
   641|         0|            0|            0|  0.00%|                elif scipy.sparse.isspmatrix(m):
   642|         0|            0|            0|  0.00%|                    return m.conj().T * v
   643|         0|            0|            0|  0.00%|                else:
   644|         0|            0|            0|  0.00%|                    raise ValueError("Unknown matrix type")
   645|         0|            0|            0|  0.00%|        return Jac()
   646|         0|            0|            0|  0.00%|    elif isinstance(J, str):
   647|         0|            0|            0|  0.00%|        return dict(broyden1=BroydenFirst,
   648|         0|            0|            0|  0.00%|                    broyden2=BroydenSecond,
   649|         0|            0|            0|  0.00%|                    anderson=Anderson,
   650|         0|            0|            0|  0.00%|                    diagbroyden=DiagBroyden,
   651|         0|            0|            0|  0.00%|                    linearmixing=LinearMixing,
   652|         0|            0|            0|  0.00%|                    excitingmixing=ExcitingMixing,
   653|         0|            0|            0|  0.00%|                    krylov=KrylovJacobian)[J]()
   654|         0|            0|            0|  0.00%|    else:
   655|         0|            0|            0|  0.00%|        raise TypeError('Cannot convert object to a Jacobian')
   656|         0|            0|            0|  0.00%|
   657|         0|            0|            0|  0.00%|
   658|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   659|         0|            0|            0|  0.00%|# Broyden
   660|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   661|         0|            0|            0|  0.00%|
   662|         0|            0|            0|  0.00%|class GenericBroyden(Jacobian):
   663|         0|            0|            0|  0.00%|    def setup(self, x0, f0, func):
   664|         0|            0|            0|  0.00%|        Jacobian.setup(self, x0, f0, func)
   665|         0|            0|            0|  0.00%|        self.last_f = f0
   666|         0|            0|            0|  0.00%|        self.last_x = x0
   667|         0|            0|            0|  0.00%|
   668|         0|            0|            0|  0.00%|        if hasattr(self, 'alpha') and self.alpha is None:
   669|         0|            0|            0|  0.00%|            # Autoscale the initial Jacobian parameter
   670|         0|            0|            0|  0.00%|            # unless we have already guessed the solution.
   671|         0|            0|            0|  0.00%|            normf0 = norm(f0)
   672|         0|            0|            0|  0.00%|            if normf0:
   673|         0|            0|            0|  0.00%|                self.alpha = 0.5*max(norm(x0), 1) / normf0
   674|         0|            0|            0|  0.00%|            else:
   675|         0|            0|            0|  0.00%|                self.alpha = 1.0
   676|         0|            0|            0|  0.00%|
   677|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
   678|         0|            0|            0|  0.00%|        raise NotImplementedError
   679|         0|            0|            0|  0.00%|
   680|         0|            0|            0|  0.00%|    def update(self, x, f):
   681|         0|            0|            0|  0.00%|        df = f - self.last_f
   682|         0|            0|            0|  0.00%|        dx = x - self.last_x
   683|         0|            0|            0|  0.00%|        self._update(x, f, dx, df, norm(dx), norm(df))
   684|         0|            0|            0|  0.00%|        self.last_f = f
   685|         0|            0|            0|  0.00%|        self.last_x = x
   686|         0|            0|            0|  0.00%|
   687|         0|            0|            0|  0.00%|
   688|         0|            0|            0|  0.00%|class LowRankMatrix(object):
   689|         0|            0|            0|  0.00%|    r"""
   690|         0|            0|            0|  0.00%|    A matrix represented as
   691|         0|            0|            0|  0.00%|
   692|         0|            0|            0|  0.00%|    .. math:: \alpha I + \sum_{n=0}^{n=M} c_n d_n^\dagger
   693|         0|            0|            0|  0.00%|
   694|         0|            0|            0|  0.00%|    However, if the rank of the matrix reaches the dimension of the vectors,
   695|         0|            0|            0|  0.00%|    full matrix representation will be used thereon.
   696|         0|            0|            0|  0.00%|
   697|         0|            0|            0|  0.00%|    """
   698|         0|            0|            0|  0.00%|
   699|         0|            0|            0|  0.00%|    def __init__(self, alpha, n, dtype):
   700|         0|            0|            0|  0.00%|        self.alpha = alpha
   701|         0|            0|            0|  0.00%|        self.cs = []
   702|         0|            0|            0|  0.00%|        self.ds = []
   703|         0|            0|            0|  0.00%|        self.n = n
   704|         0|            0|            0|  0.00%|        self.dtype = dtype
   705|         0|            0|            0|  0.00%|        self.collapsed = None
   706|         0|            0|            0|  0.00%|
   707|         0|            0|            0|  0.00%|    @staticmethod
   708|         0|            0|            0|  0.00%|    def _matvec(v, alpha, cs, ds):
   709|         0|            0|            0|  0.00%|        axpy, scal, dotc = get_blas_funcs(['axpy', 'scal', 'dotc'],
   710|         0|            0|            0|  0.00%|                                          cs[:1] + [v])
   711|         0|            0|            0|  0.00%|        w = alpha * v
   712|         0|            0|            0|  0.00%|        for c, d in zip(cs, ds):
   713|         0|            0|            0|  0.00%|            a = dotc(d, v)
   714|         0|            0|            0|  0.00%|            w = axpy(c, w, w.size, a)
   715|         0|            0|            0|  0.00%|        return w
   716|         0|            0|            0|  0.00%|
   717|         0|            0|            0|  0.00%|    @staticmethod
   718|         0|            0|            0|  0.00%|    def _solve(v, alpha, cs, ds):
   719|         0|            0|            0|  0.00%|        """Evaluate w = M^-1 v"""
   720|         0|            0|            0|  0.00%|        if len(cs) == 0:
   721|         0|            0|            0|  0.00%|            return v/alpha
   722|         0|            0|            0|  0.00%|
   723|         0|            0|            0|  0.00%|        # (B + C D^H)^-1 = B^-1 - B^-1 C (I + D^H B^-1 C)^-1 D^H B^-1
   724|         0|            0|            0|  0.00%|
   725|         0|            0|            0|  0.00%|        axpy, dotc = get_blas_funcs(['axpy', 'dotc'], cs[:1] + [v])
   726|         0|            0|            0|  0.00%|
   727|         0|            0|            0|  0.00%|        c0 = cs[0]
   728|         0|            0|            0|  0.00%|        A = alpha * np.identity(len(cs), dtype=c0.dtype)
   729|         0|            0|            0|  0.00%|        for i, d in enumerate(ds):
   730|         0|            0|            0|  0.00%|            for j, c in enumerate(cs):
   731|         0|            0|            0|  0.00%|                A[i,j] += dotc(d, c)
   732|         0|            0|            0|  0.00%|
   733|         0|            0|            0|  0.00%|        q = np.zeros(len(cs), dtype=c0.dtype)
   734|         0|            0|            0|  0.00%|        for j, d in enumerate(ds):
   735|         0|            0|            0|  0.00%|            q[j] = dotc(d, v)
   736|         0|            0|            0|  0.00%|        q /= alpha
   737|         0|            0|            0|  0.00%|        q = solve(A, q)
   738|         0|            0|            0|  0.00%|
   739|         0|            0|            0|  0.00%|        w = v/alpha
   740|         0|            0|            0|  0.00%|        for c, qc in zip(cs, q):
   741|         0|            0|            0|  0.00%|            w = axpy(c, w, w.size, -qc)
   742|         0|            0|            0|  0.00%|
   743|         0|            0|            0|  0.00%|        return w
   744|         0|            0|            0|  0.00%|
   745|         0|            0|            0|  0.00%|    def matvec(self, v):
   746|         0|            0|            0|  0.00%|        """Evaluate w = M v"""
   747|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   748|         0|            0|            0|  0.00%|            return np.dot(self.collapsed, v)
   749|         0|            0|            0|  0.00%|        return LowRankMatrix._matvec(v, self.alpha, self.cs, self.ds)
   750|         0|            0|            0|  0.00%|
   751|         0|            0|            0|  0.00%|    def rmatvec(self, v):
   752|         0|            0|            0|  0.00%|        """Evaluate w = M^H v"""
   753|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   754|         0|            0|            0|  0.00%|            return np.dot(self.collapsed.T.conj(), v)
   755|         0|            0|            0|  0.00%|        return LowRankMatrix._matvec(v, np.conj(self.alpha), self.ds, self.cs)
   756|         0|            0|            0|  0.00%|
   757|         0|            0|            0|  0.00%|    def solve(self, v, tol=0):
   758|         0|            0|            0|  0.00%|        """Evaluate w = M^-1 v"""
   759|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   760|         0|            0|            0|  0.00%|            return solve(self.collapsed, v)
   761|         0|            0|            0|  0.00%|        return LowRankMatrix._solve(v, self.alpha, self.cs, self.ds)
   762|         0|            0|            0|  0.00%|
   763|         0|            0|            0|  0.00%|    def rsolve(self, v, tol=0):
   764|         0|            0|            0|  0.00%|        """Evaluate w = M^-H v"""
   765|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   766|         0|            0|            0|  0.00%|            return solve(self.collapsed.T.conj(), v)
   767|         0|            0|            0|  0.00%|        return LowRankMatrix._solve(v, np.conj(self.alpha), self.ds, self.cs)
   768|         0|            0|            0|  0.00%|
   769|         0|            0|            0|  0.00%|    def append(self, c, d):
   770|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   771|         0|            0|            0|  0.00%|            self.collapsed += c[:,None] * d[None,:].conj()
   772|         0|            0|            0|  0.00%|            return
   773|         0|            0|            0|  0.00%|
   774|         0|            0|            0|  0.00%|        self.cs.append(c)
   775|         0|            0|            0|  0.00%|        self.ds.append(d)
   776|         0|            0|            0|  0.00%|
   777|         0|            0|            0|  0.00%|        if len(self.cs) > c.size:
   778|         0|            0|            0|  0.00%|            self.collapse()
   779|         0|            0|            0|  0.00%|
   780|         0|            0|            0|  0.00%|    def __array__(self):
   781|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   782|         0|            0|            0|  0.00%|            return self.collapsed
   783|         0|            0|            0|  0.00%|
   784|         0|            0|            0|  0.00%|        Gm = self.alpha*np.identity(self.n, dtype=self.dtype)
   785|         0|            0|            0|  0.00%|        for c, d in zip(self.cs, self.ds):
   786|         0|            0|            0|  0.00%|            Gm += c[:,None]*d[None,:].conj()
   787|         0|            0|            0|  0.00%|        return Gm
   788|         0|            0|            0|  0.00%|
   789|         0|            0|            0|  0.00%|    def collapse(self):
   790|         0|            0|            0|  0.00%|        """Collapse the low-rank matrix to a full-rank one."""
   791|         0|            0|            0|  0.00%|        self.collapsed = np.array(self)
   792|         0|            0|            0|  0.00%|        self.cs = None
   793|         0|            0|            0|  0.00%|        self.ds = None
   794|         0|            0|            0|  0.00%|        self.alpha = None
   795|         0|            0|            0|  0.00%|
   796|         0|            0|            0|  0.00%|    def restart_reduce(self, rank):
   797|         0|            0|            0|  0.00%|        """
   798|         0|            0|            0|  0.00%|        Reduce the rank of the matrix by dropping all vectors.
   799|         0|            0|            0|  0.00%|        """
   800|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   801|         0|            0|            0|  0.00%|            return
   802|         0|            0|            0|  0.00%|        assert rank > 0
   803|         0|            0|            0|  0.00%|        if len(self.cs) > rank:
   804|         0|            0|            0|  0.00%|            del self.cs[:]
   805|         0|            0|            0|  0.00%|            del self.ds[:]
   806|         0|            0|            0|  0.00%|
   807|         0|            0|            0|  0.00%|    def simple_reduce(self, rank):
   808|         0|            0|            0|  0.00%|        """
   809|         0|            0|            0|  0.00%|        Reduce the rank of the matrix by dropping oldest vectors.
   810|         0|            0|            0|  0.00%|        """
   811|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   812|         0|            0|            0|  0.00%|            return
   813|         0|            0|            0|  0.00%|        assert rank > 0
   814|         0|            0|            0|  0.00%|        while len(self.cs) > rank:
   815|         0|            0|            0|  0.00%|            del self.cs[0]
   816|         0|            0|            0|  0.00%|            del self.ds[0]
   817|         0|            0|            0|  0.00%|
   818|         0|            0|            0|  0.00%|    def svd_reduce(self, max_rank, to_retain=None):
   819|         0|            0|            0|  0.00%|        """
   820|         0|            0|            0|  0.00%|        Reduce the rank of the matrix by retaining some SVD components.
   821|         0|            0|            0|  0.00%|
   822|         0|            0|            0|  0.00%|        This corresponds to the \"Broyden Rank Reduction Inverse\"
   823|         0|            0|            0|  0.00%|        algorithm described in [1]_.
   824|         0|            0|            0|  0.00%|
   825|         0|            0|            0|  0.00%|        Note that the SVD decomposition can be done by solving only a
   826|         0|            0|            0|  0.00%|        problem whose size is the effective rank of this matrix, which
   827|         0|            0|            0|  0.00%|        is viable even for large problems.
   828|         0|            0|            0|  0.00%|
   829|         0|            0|            0|  0.00%|        Parameters
   830|         0|            0|            0|  0.00%|        ----------
   831|         0|            0|            0|  0.00%|        max_rank : int
   832|         0|            0|            0|  0.00%|            Maximum rank of this matrix after reduction.
   833|         0|            0|            0|  0.00%|        to_retain : int, optional
   834|         0|            0|            0|  0.00%|            Number of SVD components to retain when reduction is done
   835|         0|            0|            0|  0.00%|            (ie. rank > max_rank). Default is ``max_rank - 2``.
   836|         0|            0|            0|  0.00%|
   837|         0|            0|            0|  0.00%|        References
   838|         0|            0|            0|  0.00%|        ----------
   839|         0|            0|            0|  0.00%|        .. [1] B.A. van der Rotten, PhD thesis,
   840|         0|            0|            0|  0.00%|           \"A limited memory Broyden method to solve high-dimensional
   841|         0|            0|            0|  0.00%|           systems of nonlinear equations\". Mathematisch Instituut,
   842|         0|            0|            0|  0.00%|           Universiteit Leiden, The Netherlands (2003).
   843|         0|            0|            0|  0.00%|
   844|         0|            0|            0|  0.00%|           https://web.archive.org/web/20161022015821/http://www.math.leidenuniv.nl/scripties/Rotten.pdf
   845|         0|            0|            0|  0.00%|
   846|         0|            0|            0|  0.00%|        """
   847|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   848|         0|            0|            0|  0.00%|            return
   849|         0|            0|            0|  0.00%|
   850|         0|            0|            0|  0.00%|        p = max_rank
   851|         0|            0|            0|  0.00%|        if to_retain is not None:
   852|         0|            0|            0|  0.00%|            q = to_retain
   853|         0|            0|            0|  0.00%|        else:
   854|         0|            0|            0|  0.00%|            q = p - 2
   855|         0|            0|            0|  0.00%|
   856|         0|            0|            0|  0.00%|        if self.cs:
   857|         0|            0|            0|  0.00%|            p = min(p, len(self.cs[0]))
   858|         0|            0|            0|  0.00%|        q = max(0, min(q, p-1))
   859|         0|            0|            0|  0.00%|
   860|         0|            0|            0|  0.00%|        m = len(self.cs)
   861|         0|            0|            0|  0.00%|        if m < p:
   862|         0|            0|            0|  0.00%|            # nothing to do
   863|         0|            0|            0|  0.00%|            return
   864|         0|            0|            0|  0.00%|
   865|         0|            0|            0|  0.00%|        C = np.array(self.cs).T
   866|         0|            0|            0|  0.00%|        D = np.array(self.ds).T
   867|         0|            0|            0|  0.00%|
   868|         0|            0|            0|  0.00%|        D, R = qr(D, mode='economic')
   869|         0|            0|            0|  0.00%|        C = dot(C, R.T.conj())
   870|         0|            0|            0|  0.00%|
   871|         0|            0|            0|  0.00%|        U, S, WH = svd(C, full_matrices=False, compute_uv=True)
   872|         0|            0|            0|  0.00%|
   873|         0|            0|            0|  0.00%|        C = dot(C, inv(WH))
   874|         0|            0|            0|  0.00%|        D = dot(D, WH.T.conj())
   875|         0|            0|            0|  0.00%|
   876|         0|            0|            0|  0.00%|        for k in range(q):
   877|         0|            0|            0|  0.00%|            self.cs[k] = C[:,k].copy()
   878|         0|            0|            0|  0.00%|            self.ds[k] = D[:,k].copy()
   879|         0|            0|            0|  0.00%|
   880|         0|            0|            0|  0.00%|        del self.cs[q:]
   881|         0|            0|            0|  0.00%|        del self.ds[q:]
   882|         0|            0|            0|  0.00%|
   883|         0|            0|            0|  0.00%|
   884|         0|            0|            0|  0.00%|_doc_parts['broyden_params'] = """
   885|         0|            0|            0|  0.00%|    alpha : float, optional
   886|         0|            0|            0|  0.00%|        Initial guess for the Jacobian is ``(-1/alpha)``.
   887|         0|            0|            0|  0.00%|    reduction_method : str or tuple, optional
   888|         0|            0|            0|  0.00%|        Method used in ensuring that the rank of the Broyden matrix
   889|         0|            0|            0|  0.00%|        stays low. Can either be a string giving the name of the method,
   890|         0|            0|            0|  0.00%|        or a tuple of the form ``(method, param1, param2, ...)``
   891|         0|            0|            0|  0.00%|        that gives the name of the method and values for additional parameters.
   892|         0|            0|            0|  0.00%|
   893|         0|            0|            0|  0.00%|        Methods available:
   894|         0|            0|            0|  0.00%|
   895|         0|            0|            0|  0.00%|            - ``restart``: drop all matrix columns. Has no extra parameters.
   896|         0|            0|            0|  0.00%|            - ``simple``: drop oldest matrix column. Has no extra parameters.
   897|         0|            0|            0|  0.00%|            - ``svd``: keep only the most significant SVD components.
   898|         0|            0|            0|  0.00%|              Takes an extra parameter, ``to_retain``, which determines the
   899|         0|            0|            0|  0.00%|              number of SVD components to retain when rank reduction is done.
   900|         0|            0|            0|  0.00%|              Default is ``max_rank - 2``.
   901|         0|            0|            0|  0.00%|
   902|         0|            0|            0|  0.00%|    max_rank : int, optional
   903|         0|            0|            0|  0.00%|        Maximum rank for the Broyden matrix.
   904|         0|            0|            0|  0.00%|        Default is infinity (i.e., no rank reduction).
   905|         0|            0|            0|  0.00%|    """.strip()
   906|         0|            0|            0|  0.00%|
   907|         0|            0|            0|  0.00%|
   908|         0|            0|            0|  0.00%|class BroydenFirst(GenericBroyden):
   909|         0|            0|            0|  0.00%|    r"""
   910|         0|            0|            0|  0.00%|    Find a root of a function, using Broyden's first Jacobian approximation.
   911|         0|            0|            0|  0.00%|
   912|         0|            0|            0|  0.00%|    This method is also known as \"Broyden's good method\".
   913|         0|            0|            0|  0.00%|
   914|         0|            0|            0|  0.00%|    Parameters
   915|         0|            0|            0|  0.00%|    ----------
   916|         0|            0|            0|  0.00%|    %(params_basic)s
   917|         0|            0|            0|  0.00%|    %(broyden_params)s
   918|         0|            0|            0|  0.00%|    %(params_extra)s
   919|         0|            0|            0|  0.00%|
   920|         0|            0|            0|  0.00%|    See Also
   921|         0|            0|            0|  0.00%|    --------
   922|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
   923|         0|            0|            0|  0.00%|           functions. See ``method=='broyden1'`` in particular.
   924|         0|            0|            0|  0.00%|
   925|         0|            0|            0|  0.00%|    Notes
   926|         0|            0|            0|  0.00%|    -----
   927|         0|            0|            0|  0.00%|    This algorithm implements the inverse Jacobian Quasi-Newton update
   928|         0|            0|            0|  0.00%|
   929|         0|            0|            0|  0.00%|    .. math:: H_+ = H + (dx - H df) dx^\dagger H / ( dx^\dagger H df)
   930|         0|            0|            0|  0.00%|
   931|         0|            0|            0|  0.00%|    which corresponds to Broyden's first Jacobian update
   932|         0|            0|            0|  0.00%|
   933|         0|            0|            0|  0.00%|    .. math:: J_+ = J + (df - J dx) dx^\dagger / dx^\dagger dx
   934|         0|            0|            0|  0.00%|
   935|         0|            0|            0|  0.00%|
   936|         0|            0|            0|  0.00%|    References
   937|         0|            0|            0|  0.00%|    ----------
   938|         0|            0|            0|  0.00%|    .. [1] B.A. van der Rotten, PhD thesis,
   939|         0|            0|            0|  0.00%|       \"A limited memory Broyden method to solve high-dimensional
   940|         0|            0|            0|  0.00%|       systems of nonlinear equations\". Mathematisch Instituut,
   941|         0|            0|            0|  0.00%|       Universiteit Leiden, The Netherlands (2003).
   942|         0|            0|            0|  0.00%|
   943|         0|            0|            0|  0.00%|       https://web.archive.org/web/20161022015821/http://www.math.leidenuniv.nl/scripties/Rotten.pdf
   944|         0|            0|            0|  0.00%|
   945|         0|            0|            0|  0.00%|    """
   946|         0|            0|            0|  0.00%|
   947|         0|            0|            0|  0.00%|    def __init__(self, alpha=None, reduction_method='restart', max_rank=None):
   948|         0|            0|            0|  0.00%|        GenericBroyden.__init__(self)
   949|         0|            0|            0|  0.00%|        self.alpha = alpha
   950|         0|            0|            0|  0.00%|        self.Gm = None
   951|         0|            0|            0|  0.00%|
   952|         0|            0|            0|  0.00%|        if max_rank is None:
   953|         0|            0|            0|  0.00%|            max_rank = np.inf
   954|         0|            0|            0|  0.00%|        self.max_rank = max_rank
   955|         0|            0|            0|  0.00%|
   956|         0|            0|            0|  0.00%|        if isinstance(reduction_method, str):
   957|         0|            0|            0|  0.00%|            reduce_params = ()
   958|         0|            0|            0|  0.00%|        else:
   959|         0|            0|            0|  0.00%|            reduce_params = reduction_method[1:]
   960|         0|            0|            0|  0.00%|            reduction_method = reduction_method[0]
   961|         0|            0|            0|  0.00%|        reduce_params = (max_rank - 1,) + reduce_params
   962|         0|            0|            0|  0.00%|
   963|         0|            0|            0|  0.00%|        if reduction_method == 'svd':
   964|         0|            0|            0|  0.00%|            self._reduce = lambda: self.Gm.svd_reduce(*reduce_params)
   965|         0|            0|            0|  0.00%|        elif reduction_method == 'simple':
   966|         0|            0|            0|  0.00%|            self._reduce = lambda: self.Gm.simple_reduce(*reduce_params)
   967|         0|            0|            0|  0.00%|        elif reduction_method == 'restart':
   968|         0|            0|            0|  0.00%|            self._reduce = lambda: self.Gm.restart_reduce(*reduce_params)
   969|         0|            0|            0|  0.00%|        else:
   970|         0|            0|            0|  0.00%|            raise ValueError("Unknown rank reduction method '%s'" %
   971|         0|            0|            0|  0.00%|                             reduction_method)
   972|         0|            0|            0|  0.00%|
   973|         0|            0|            0|  0.00%|    def setup(self, x, F, func):
   974|         0|            0|            0|  0.00%|        GenericBroyden.setup(self, x, F, func)
   975|         0|            0|            0|  0.00%|        self.Gm = LowRankMatrix(-self.alpha, self.shape[0], self.dtype)
   976|         0|            0|            0|  0.00%|
   977|         0|            0|            0|  0.00%|    def todense(self):
   978|         0|            0|            0|  0.00%|        return inv(self.Gm)
   979|         0|            0|            0|  0.00%|
   980|         0|            0|            0|  0.00%|    def solve(self, f, tol=0):
   981|         0|            0|            0|  0.00%|        r = self.Gm.matvec(f)
   982|         0|            0|            0|  0.00%|        if not np.isfinite(r).all():
   983|         0|            0|            0|  0.00%|            # singular; reset the Jacobian approximation
   984|         0|            0|            0|  0.00%|            self.setup(self.last_x, self.last_f, self.func)
   985|         0|            0|            0|  0.00%|        return self.Gm.matvec(f)
   986|         0|            0|            0|  0.00%|
   987|         0|            0|            0|  0.00%|    def matvec(self, f):
   988|         0|            0|            0|  0.00%|        return self.Gm.solve(f)
   989|         0|            0|            0|  0.00%|
   990|         0|            0|            0|  0.00%|    def rsolve(self, f, tol=0):
   991|         0|            0|            0|  0.00%|        return self.Gm.rmatvec(f)
   992|         0|            0|            0|  0.00%|
   993|         0|            0|            0|  0.00%|    def rmatvec(self, f):
   994|         0|            0|            0|  0.00%|        return self.Gm.rsolve(f)
   995|         0|            0|            0|  0.00%|
   996|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
   997|         0|            0|            0|  0.00%|        self._reduce()  # reduce first to preserve secant condition
   998|         0|            0|            0|  0.00%|
   999|         0|            0|            0|  0.00%|        v = self.Gm.rmatvec(dx)
  1000|         0|            0|            0|  0.00%|        c = dx - self.Gm.matvec(df)
  1001|         0|            0|            0|  0.00%|        d = v / vdot(df, v)
  1002|         0|            0|            0|  0.00%|
  1003|         0|            0|            0|  0.00%|        self.Gm.append(c, d)
  1004|         0|            0|            0|  0.00%|
  1005|         0|            0|            0|  0.00%|
  1006|         0|            0|            0|  0.00%|class BroydenSecond(BroydenFirst):
  1007|         0|            0|            0|  0.00%|    """
  1008|         0|            0|            0|  0.00%|    Find a root of a function, using Broyden\'s second Jacobian approximation.
  1009|         0|            0|            0|  0.00%|
  1010|         0|            0|            0|  0.00%|    This method is also known as \"Broyden's bad method\".
  1011|         0|            0|            0|  0.00%|
  1012|         0|            0|            0|  0.00%|    Parameters
  1013|         0|            0|            0|  0.00%|    ----------
  1014|         0|            0|            0|  0.00%|    %(params_basic)s
  1015|         0|            0|            0|  0.00%|    %(broyden_params)s
  1016|         0|            0|            0|  0.00%|    %(params_extra)s
  1017|         0|            0|            0|  0.00%|
  1018|         0|            0|            0|  0.00%|    See Also
  1019|         0|            0|            0|  0.00%|    --------
  1020|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1021|         0|            0|            0|  0.00%|           functions. See ``method=='broyden2'`` in particular.
  1022|         0|            0|            0|  0.00%|
  1023|         0|            0|            0|  0.00%|    Notes
  1024|         0|            0|            0|  0.00%|    -----
  1025|         0|            0|            0|  0.00%|    This algorithm implements the inverse Jacobian Quasi-Newton update
  1026|         0|            0|            0|  0.00%|
  1027|         0|            0|            0|  0.00%|    .. math:: H_+ = H + (dx - H df) df^\\dagger / ( df^\\dagger df)
  1028|         0|            0|            0|  0.00%|
  1029|         0|            0|            0|  0.00%|    corresponding to Broyden's second method.
  1030|         0|            0|            0|  0.00%|
  1031|         0|            0|            0|  0.00%|    References
  1032|         0|            0|            0|  0.00%|    ----------
  1033|         0|            0|            0|  0.00%|    .. [1] B.A. van der Rotten, PhD thesis,
  1034|         0|            0|            0|  0.00%|       \"A limited memory Broyden method to solve high-dimensional
  1035|         0|            0|            0|  0.00%|       systems of nonlinear equations\". Mathematisch Instituut,
  1036|         0|            0|            0|  0.00%|       Universiteit Leiden, The Netherlands (2003).
  1037|         0|            0|            0|  0.00%|
  1038|         0|            0|            0|  0.00%|       https://web.archive.org/web/20161022015821/http://www.math.leidenuniv.nl/scripties/Rotten.pdf
  1039|         0|            0|            0|  0.00%|
  1040|         0|            0|            0|  0.00%|    """
  1041|         0|            0|            0|  0.00%|
  1042|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
  1043|         0|            0|            0|  0.00%|        self._reduce()  # reduce first to preserve secant condition
  1044|         0|            0|            0|  0.00%|
  1045|         0|            0|            0|  0.00%|        v = df
  1046|         0|            0|            0|  0.00%|        c = dx - self.Gm.matvec(df)
  1047|         0|            0|            0|  0.00%|        d = v / df_norm**2
  1048|         0|            0|            0|  0.00%|        self.Gm.append(c, d)
  1049|         0|            0|            0|  0.00%|
  1050|         0|            0|            0|  0.00%|
  1051|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1052|         0|            0|            0|  0.00%|# Broyden-like (restricted memory)
  1053|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1054|         0|            0|            0|  0.00%|
  1055|         0|            0|            0|  0.00%|class Anderson(GenericBroyden):
  1056|         0|            0|            0|  0.00%|    """
  1057|         0|            0|            0|  0.00%|    Find a root of a function, using (extended) Anderson mixing.
  1058|         0|            0|            0|  0.00%|
  1059|         0|            0|            0|  0.00%|    The Jacobian is formed by for a 'best' solution in the space
  1060|         0|            0|            0|  0.00%|    spanned by last `M` vectors. As a result, only a MxM matrix
  1061|         0|            0|            0|  0.00%|    inversions and MxN multiplications are required. [Ey]_
  1062|         0|            0|            0|  0.00%|
  1063|         0|            0|            0|  0.00%|    Parameters
  1064|         0|            0|            0|  0.00%|    ----------
  1065|         0|            0|            0|  0.00%|    %(params_basic)s
  1066|         0|            0|            0|  0.00%|    alpha : float, optional
  1067|         0|            0|            0|  0.00%|        Initial guess for the Jacobian is (-1/alpha).
  1068|         0|            0|            0|  0.00%|    M : float, optional
  1069|         0|            0|            0|  0.00%|        Number of previous vectors to retain. Defaults to 5.
  1070|         0|            0|            0|  0.00%|    w0 : float, optional
  1071|         0|            0|            0|  0.00%|        Regularization parameter for numerical stability.
  1072|         0|            0|            0|  0.00%|        Compared to unity, good values of the order of 0.01.
  1073|         0|            0|            0|  0.00%|    %(params_extra)s
  1074|         0|            0|            0|  0.00%|
  1075|         0|            0|            0|  0.00%|    See Also
  1076|         0|            0|            0|  0.00%|    --------
  1077|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1078|         0|            0|            0|  0.00%|           functions. See ``method=='anderson'`` in particular.
  1079|         0|            0|            0|  0.00%|
  1080|         0|            0|            0|  0.00%|    References
  1081|         0|            0|            0|  0.00%|    ----------
  1082|         0|            0|            0|  0.00%|    .. [Ey] V. Eyert, J. Comp. Phys., 124, 271 (1996).
  1083|         0|            0|            0|  0.00%|
  1084|         0|            0|            0|  0.00%|    """
  1085|         0|            0|            0|  0.00%|
  1086|         0|            0|            0|  0.00%|    # Note:
  1087|         0|            0|            0|  0.00%|    #
  1088|         0|            0|            0|  0.00%|    # Anderson method maintains a rank M approximation of the inverse Jacobian,
  1089|         0|            0|            0|  0.00%|    #
  1090|         0|            0|            0|  0.00%|    #     J^-1 v ~ -v*alpha + (dX + alpha dF) A^-1 dF^H v
  1091|         0|            0|            0|  0.00%|    #     A      = W + dF^H dF
  1092|         0|            0|            0|  0.00%|    #     W      = w0^2 diag(dF^H dF)
  1093|         0|            0|            0|  0.00%|    #
  1094|         0|            0|            0|  0.00%|    # so that for w0 = 0 the secant condition applies for last M iterates, i.e.,
  1095|         0|            0|            0|  0.00%|    #
  1096|         0|            0|            0|  0.00%|    #     J^-1 df_j = dx_j
  1097|         0|            0|            0|  0.00%|    #
  1098|         0|            0|            0|  0.00%|    # for all j = 0 ... M-1.
  1099|         0|            0|            0|  0.00%|    #
  1100|         0|            0|            0|  0.00%|    # Moreover, (from Sherman-Morrison-Woodbury formula)
  1101|         0|            0|            0|  0.00%|    #
  1102|         0|            0|            0|  0.00%|    #    J v ~ [ b I - b^2 C (I + b dF^H A^-1 C)^-1 dF^H ] v
  1103|         0|            0|            0|  0.00%|    #    C   = (dX + alpha dF) A^-1
  1104|         0|            0|            0|  0.00%|    #    b   = -1/alpha
  1105|         0|            0|            0|  0.00%|    #
  1106|         0|            0|            0|  0.00%|    # and after simplification
  1107|         0|            0|            0|  0.00%|    #
  1108|         0|            0|            0|  0.00%|    #    J v ~ -v/alpha + (dX/alpha + dF) (dF^H dX - alpha W)^-1 dF^H v
  1109|         0|            0|            0|  0.00%|    #
  1110|         0|            0|            0|  0.00%|
  1111|         0|            0|            0|  0.00%|    def __init__(self, alpha=None, w0=0.01, M=5):
  1112|         0|            0|            0|  0.00%|        GenericBroyden.__init__(self)
  1113|         0|            0|            0|  0.00%|        self.alpha = alpha
  1114|         0|            0|            0|  0.00%|        self.M = M
  1115|         0|            0|            0|  0.00%|        self.dx = []
  1116|         0|            0|            0|  0.00%|        self.df = []
  1117|         0|            0|            0|  0.00%|        self.gamma = None
  1118|         0|            0|            0|  0.00%|        self.w0 = w0
  1119|         0|            0|            0|  0.00%|
  1120|         0|            0|            0|  0.00%|    def solve(self, f, tol=0):
  1121|         0|            0|            0|  0.00%|        dx = -self.alpha*f
  1122|         0|            0|            0|  0.00%|
  1123|         0|            0|            0|  0.00%|        n = len(self.dx)
  1124|         0|            0|            0|  0.00%|        if n == 0:
  1125|         0|            0|            0|  0.00%|            return dx
  1126|         0|            0|            0|  0.00%|
  1127|         0|            0|            0|  0.00%|        df_f = np.empty(n, dtype=f.dtype)
  1128|         0|            0|            0|  0.00%|        for k in range(n):
  1129|         0|            0|            0|  0.00%|            df_f[k] = vdot(self.df[k], f)
  1130|         0|            0|            0|  0.00%|
  1131|         0|            0|            0|  0.00%|        try:
  1132|         0|            0|            0|  0.00%|            gamma = solve(self.a, df_f)
  1133|         0|            0|            0|  0.00%|        except LinAlgError:
  1134|         0|            0|            0|  0.00%|            # singular; reset the Jacobian approximation
  1135|         0|            0|            0|  0.00%|            del self.dx[:]
  1136|         0|            0|            0|  0.00%|            del self.df[:]
  1137|         0|            0|            0|  0.00%|            return dx
  1138|         0|            0|            0|  0.00%|
  1139|         0|            0|            0|  0.00%|        for m in range(n):
  1140|         0|            0|            0|  0.00%|            dx += gamma[m]*(self.dx[m] + self.alpha*self.df[m])
  1141|         0|            0|            0|  0.00%|        return dx
  1142|         0|            0|            0|  0.00%|
  1143|         0|            0|            0|  0.00%|    def matvec(self, f):
  1144|         0|            0|            0|  0.00%|        dx = -f/self.alpha
  1145|         0|            0|            0|  0.00%|
  1146|         0|            0|            0|  0.00%|        n = len(self.dx)
  1147|         0|            0|            0|  0.00%|        if n == 0:
  1148|         0|            0|            0|  0.00%|            return dx
  1149|         0|            0|            0|  0.00%|
  1150|         0|            0|            0|  0.00%|        df_f = np.empty(n, dtype=f.dtype)
  1151|         0|            0|            0|  0.00%|        for k in range(n):
  1152|         0|            0|            0|  0.00%|            df_f[k] = vdot(self.df[k], f)
  1153|         0|            0|            0|  0.00%|
  1154|         0|            0|            0|  0.00%|        b = np.empty((n, n), dtype=f.dtype)
  1155|         0|            0|            0|  0.00%|        for i in range(n):
  1156|         0|            0|            0|  0.00%|            for j in range(n):
  1157|         0|            0|            0|  0.00%|                b[i,j] = vdot(self.df[i], self.dx[j])
  1158|         0|            0|            0|  0.00%|                if i == j and self.w0 != 0:
  1159|         0|            0|            0|  0.00%|                    b[i,j] -= vdot(self.df[i], self.df[i])*self.w0**2*self.alpha
  1160|         0|            0|            0|  0.00%|        gamma = solve(b, df_f)
  1161|         0|            0|            0|  0.00%|
  1162|         0|            0|            0|  0.00%|        for m in range(n):
  1163|         0|            0|            0|  0.00%|            dx += gamma[m]*(self.df[m] + self.dx[m]/self.alpha)
  1164|         0|            0|            0|  0.00%|        return dx
  1165|         0|            0|            0|  0.00%|
  1166|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
  1167|         0|            0|            0|  0.00%|        if self.M == 0:
  1168|         0|            0|            0|  0.00%|            return
  1169|         0|            0|            0|  0.00%|
  1170|         0|            0|            0|  0.00%|        self.dx.append(dx)
  1171|         0|            0|            0|  0.00%|        self.df.append(df)
  1172|         0|            0|            0|  0.00%|
  1173|         0|            0|            0|  0.00%|        while len(self.dx) > self.M:
  1174|         0|            0|            0|  0.00%|            self.dx.pop(0)
  1175|         0|            0|            0|  0.00%|            self.df.pop(0)
  1176|         0|            0|            0|  0.00%|
  1177|         0|            0|            0|  0.00%|        n = len(self.dx)
  1178|         0|            0|            0|  0.00%|        a = np.zeros((n, n), dtype=f.dtype)
  1179|         0|            0|            0|  0.00%|
  1180|         0|            0|            0|  0.00%|        for i in range(n):
  1181|         0|            0|            0|  0.00%|            for j in range(i, n):
  1182|         0|            0|            0|  0.00%|                if i == j:
  1183|         0|            0|            0|  0.00%|                    wd = self.w0**2
  1184|         0|            0|            0|  0.00%|                else:
  1185|         0|            0|            0|  0.00%|                    wd = 0
  1186|         0|            0|            0|  0.00%|                a[i,j] = (1+wd)*vdot(self.df[i], self.df[j])
  1187|         0|            0|            0|  0.00%|
  1188|         0|            0|            0|  0.00%|        a += np.triu(a, 1).T.conj()
  1189|         0|            0|            0|  0.00%|        self.a = a
  1190|         0|            0|            0|  0.00%|
  1191|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1192|         0|            0|            0|  0.00%|# Simple iterations
  1193|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1194|         0|            0|            0|  0.00%|
  1195|         0|            0|            0|  0.00%|
  1196|         0|            0|            0|  0.00%|class DiagBroyden(GenericBroyden):
  1197|         0|            0|            0|  0.00%|    """
  1198|         0|            0|            0|  0.00%|    Find a root of a function, using diagonal Broyden Jacobian approximation.
  1199|         0|            0|            0|  0.00%|
  1200|         0|            0|            0|  0.00%|    The Jacobian approximation is derived from previous iterations, by
  1201|         0|            0|            0|  0.00%|    retaining only the diagonal of Broyden matrices.
  1202|         0|            0|            0|  0.00%|
  1203|         0|            0|            0|  0.00%|    .. warning::
  1204|         0|            0|            0|  0.00%|
  1205|         0|            0|            0|  0.00%|       This algorithm may be useful for specific problems, but whether
  1206|         0|            0|            0|  0.00%|       it will work may depend strongly on the problem.
  1207|         0|            0|            0|  0.00%|
  1208|         0|            0|            0|  0.00%|    Parameters
  1209|         0|            0|            0|  0.00%|    ----------
  1210|         0|            0|            0|  0.00%|    %(params_basic)s
  1211|         0|            0|            0|  0.00%|    alpha : float, optional
  1212|         0|            0|            0|  0.00%|        Initial guess for the Jacobian is (-1/alpha).
  1213|         0|            0|            0|  0.00%|    %(params_extra)s
  1214|         0|            0|            0|  0.00%|
  1215|         0|            0|            0|  0.00%|    See Also
  1216|         0|            0|            0|  0.00%|    --------
  1217|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1218|         0|            0|            0|  0.00%|           functions. See ``method=='diagbroyden'`` in particular.
  1219|         0|            0|            0|  0.00%|    """
  1220|         0|            0|            0|  0.00%|
  1221|         0|            0|            0|  0.00%|    def __init__(self, alpha=None):
  1222|         0|            0|            0|  0.00%|        GenericBroyden.__init__(self)
  1223|         0|            0|            0|  0.00%|        self.alpha = alpha
  1224|         0|            0|            0|  0.00%|
  1225|         0|            0|            0|  0.00%|    def setup(self, x, F, func):
  1226|         0|            0|            0|  0.00%|        GenericBroyden.setup(self, x, F, func)
  1227|         0|            0|            0|  0.00%|        self.d = np.full((self.shape[0],), 1 / self.alpha, dtype=self.dtype)
  1228|         0|            0|            0|  0.00%|
  1229|         0|            0|            0|  0.00%|    def solve(self, f, tol=0):
  1230|         0|            0|            0|  0.00%|        return -f / self.d
  1231|         0|            0|            0|  0.00%|
  1232|         0|            0|            0|  0.00%|    def matvec(self, f):
  1233|         0|            0|            0|  0.00%|        return -f * self.d
  1234|         0|            0|            0|  0.00%|
  1235|         0|            0|            0|  0.00%|    def rsolve(self, f, tol=0):
  1236|         0|            0|            0|  0.00%|        return -f / self.d.conj()
  1237|         0|            0|            0|  0.00%|
  1238|         0|            0|            0|  0.00%|    def rmatvec(self, f):
  1239|         0|            0|            0|  0.00%|        return -f * self.d.conj()
  1240|         0|            0|            0|  0.00%|
  1241|         0|            0|            0|  0.00%|    def todense(self):
  1242|         0|            0|            0|  0.00%|        return np.diag(-self.d)
  1243|         0|            0|            0|  0.00%|
  1244|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
  1245|         0|            0|            0|  0.00%|        self.d -= (df + self.d*dx)*dx/dx_norm**2
  1246|         0|            0|            0|  0.00%|
  1247|         0|            0|            0|  0.00%|
  1248|         0|            0|            0|  0.00%|class LinearMixing(GenericBroyden):
  1249|         0|            0|            0|  0.00%|    """
  1250|         0|            0|            0|  0.00%|    Find a root of a function, using a scalar Jacobian approximation.
  1251|         0|            0|            0|  0.00%|
  1252|         0|            0|            0|  0.00%|    .. warning::
  1253|         0|            0|            0|  0.00%|
  1254|         0|            0|            0|  0.00%|       This algorithm may be useful for specific problems, but whether
  1255|         0|            0|            0|  0.00%|       it will work may depend strongly on the problem.
  1256|         0|            0|            0|  0.00%|
  1257|         0|            0|            0|  0.00%|    Parameters
  1258|         0|            0|            0|  0.00%|    ----------
  1259|         0|            0|            0|  0.00%|    %(params_basic)s
  1260|         0|            0|            0|  0.00%|    alpha : float, optional
  1261|         0|            0|            0|  0.00%|        The Jacobian approximation is (-1/alpha).
  1262|         0|            0|            0|  0.00%|    %(params_extra)s
  1263|         0|            0|            0|  0.00%|
  1264|         0|            0|            0|  0.00%|    See Also
  1265|         0|            0|            0|  0.00%|    --------
  1266|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1267|         0|            0|            0|  0.00%|           functions. See ``method=='linearmixing'`` in particular.
  1268|         0|            0|            0|  0.00%|
  1269|         0|            0|            0|  0.00%|    """
  1270|         0|            0|            0|  0.00%|
  1271|         0|            0|            0|  0.00%|    def __init__(self, alpha=None):
  1272|         0|            0|            0|  0.00%|        GenericBroyden.__init__(self)
  1273|         0|            0|            0|  0.00%|        self.alpha = alpha
  1274|         0|            0|            0|  0.00%|
  1275|         0|            0|            0|  0.00%|    def solve(self, f, tol=0):
  1276|         0|            0|            0|  0.00%|        return -f*self.alpha
  1277|         0|            0|            0|  0.00%|
  1278|         0|            0|            0|  0.00%|    def matvec(self, f):
  1279|         0|            0|            0|  0.00%|        return -f/self.alpha
  1280|         0|            0|            0|  0.00%|
  1281|         0|            0|            0|  0.00%|    def rsolve(self, f, tol=0):
  1282|         0|            0|            0|  0.00%|        return -f*np.conj(self.alpha)
  1283|         0|            0|            0|  0.00%|
  1284|         0|            0|            0|  0.00%|    def rmatvec(self, f):
  1285|         0|            0|            0|  0.00%|        return -f/np.conj(self.alpha)
  1286|         0|            0|            0|  0.00%|
  1287|         0|            0|            0|  0.00%|    def todense(self):
  1288|         0|            0|            0|  0.00%|        return np.diag(np.full(self.shape[0], -1/self.alpha))
  1289|         0|            0|            0|  0.00%|
  1290|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
  1291|         0|            0|            0|  0.00%|        pass
  1292|         0|            0|            0|  0.00%|
  1293|         0|            0|            0|  0.00%|
  1294|         0|            0|            0|  0.00%|class ExcitingMixing(GenericBroyden):
  1295|         0|            0|            0|  0.00%|    """
  1296|         0|            0|            0|  0.00%|    Find a root of a function, using a tuned diagonal Jacobian approximation.
  1297|         0|            0|            0|  0.00%|
  1298|         0|            0|            0|  0.00%|    The Jacobian matrix is diagonal and is tuned on each iteration.
  1299|         0|            0|            0|  0.00%|
  1300|         0|            0|            0|  0.00%|    .. warning::
  1301|         0|            0|            0|  0.00%|
  1302|         0|            0|            0|  0.00%|       This algorithm may be useful for specific problems, but whether
  1303|         0|            0|            0|  0.00%|       it will work may depend strongly on the problem.
  1304|         0|            0|            0|  0.00%|
  1305|         0|            0|            0|  0.00%|    See Also
  1306|         0|            0|            0|  0.00%|    --------
  1307|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1308|         0|            0|            0|  0.00%|           functions. See ``method=='excitingmixing'`` in particular.
  1309|         0|            0|            0|  0.00%|
  1310|         0|            0|            0|  0.00%|    Parameters
  1311|         0|            0|            0|  0.00%|    ----------
  1312|         0|            0|            0|  0.00%|    %(params_basic)s
  1313|         0|            0|            0|  0.00%|    alpha : float, optional
  1314|         0|            0|            0|  0.00%|        Initial Jacobian approximation is (-1/alpha).
  1315|         0|            0|            0|  0.00%|    alphamax : float, optional
  1316|         0|            0|            0|  0.00%|        The entries of the diagonal Jacobian are kept in the range
  1317|         0|            0|            0|  0.00%|        ``[alpha, alphamax]``.
  1318|         0|            0|            0|  0.00%|    %(params_extra)s
  1319|         0|            0|            0|  0.00%|    """
  1320|         0|            0|            0|  0.00%|
  1321|         0|            0|            0|  0.00%|    def __init__(self, alpha=None, alphamax=1.0):
  1322|         0|            0|            0|  0.00%|        GenericBroyden.__init__(self)
  1323|         0|            0|            0|  0.00%|        self.alpha = alpha
  1324|         0|            0|            0|  0.00%|        self.alphamax = alphamax
  1325|         0|            0|            0|  0.00%|        self.beta = None
  1326|         0|            0|            0|  0.00%|
  1327|         0|            0|            0|  0.00%|    def setup(self, x, F, func):
  1328|         0|            0|            0|  0.00%|        GenericBroyden.setup(self, x, F, func)
  1329|         0|            0|            0|  0.00%|        self.beta = np.full((self.shape[0],), self.alpha, dtype=self.dtype)
  1330|         0|            0|            0|  0.00%|
  1331|         0|            0|            0|  0.00%|    def solve(self, f, tol=0):
  1332|         0|            0|            0|  0.00%|        return -f*self.beta
  1333|         0|            0|            0|  0.00%|
  1334|         0|            0|            0|  0.00%|    def matvec(self, f):
  1335|         0|            0|            0|  0.00%|        return -f/self.beta
  1336|         0|            0|            0|  0.00%|
  1337|         0|            0|            0|  0.00%|    def rsolve(self, f, tol=0):
  1338|         0|            0|            0|  0.00%|        return -f*self.beta.conj()
  1339|         0|            0|            0|  0.00%|
  1340|         0|            0|            0|  0.00%|    def rmatvec(self, f):
  1341|         0|            0|            0|  0.00%|        return -f/self.beta.conj()
  1342|         0|            0|            0|  0.00%|
  1343|         0|            0|            0|  0.00%|    def todense(self):
  1344|         0|            0|            0|  0.00%|        return np.diag(-1/self.beta)
  1345|         0|            0|            0|  0.00%|
  1346|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
  1347|         0|            0|            0|  0.00%|        incr = f*self.last_f > 0
  1348|         0|            0|            0|  0.00%|        self.beta[incr] += self.alpha
  1349|         0|            0|            0|  0.00%|        self.beta[~incr] = self.alpha
  1350|         0|            0|            0|  0.00%|        np.clip(self.beta, 0, self.alphamax, out=self.beta)
  1351|         0|            0|            0|  0.00%|
  1352|         0|            0|            0|  0.00%|
  1353|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1354|         0|            0|            0|  0.00%|# Iterative/Krylov approximated Jacobians
  1355|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1356|         0|            0|            0|  0.00%|
  1357|         0|            0|            0|  0.00%|class KrylovJacobian(Jacobian):
  1358|         0|            0|            0|  0.00%|    r"""
  1359|         0|            0|            0|  0.00%|    Find a root of a function, using Krylov approximation for inverse Jacobian.
  1360|         0|            0|            0|  0.00%|
  1361|         0|            0|            0|  0.00%|    This method is suitable for solving large-scale problems.
  1362|         0|            0|            0|  0.00%|
  1363|         0|            0|            0|  0.00%|    Parameters
  1364|         0|            0|            0|  0.00%|    ----------
  1365|         0|            0|            0|  0.00%|    %(params_basic)s
  1366|         0|            0|            0|  0.00%|    rdiff : float, optional
  1367|         0|            0|            0|  0.00%|        Relative step size to use in numerical differentiation.
  1368|         0|            0|            0|  0.00%|    method : {'lgmres', 'gmres', 'bicgstab', 'cgs', 'minres'} or function
  1369|         0|            0|            0|  0.00%|        Krylov method to use to approximate the Jacobian.
  1370|         0|            0|            0|  0.00%|        Can be a string, or a function implementing the same interface as
  1371|         0|            0|            0|  0.00%|        the iterative solvers in `scipy.sparse.linalg`.
  1372|         0|            0|            0|  0.00%|
  1373|         0|            0|            0|  0.00%|        The default is `scipy.sparse.linalg.lgmres`.
  1374|         0|            0|            0|  0.00%|    inner_maxiter : int, optional
  1375|         0|            0|            0|  0.00%|        Parameter to pass to the "inner" Krylov solver: maximum number of
  1376|         0|            0|            0|  0.00%|        iterations. Iteration will stop after maxiter steps even if the
  1377|         0|            0|            0|  0.00%|        specified tolerance has not been achieved.
  1378|         0|            0|            0|  0.00%|    inner_M : LinearOperator or InverseJacobian
  1379|         0|            0|            0|  0.00%|        Preconditioner for the inner Krylov iteration.
  1380|         0|            0|            0|  0.00%|        Note that you can use also inverse Jacobians as (adaptive)
  1381|         0|            0|            0|  0.00%|        preconditioners. For example,
  1382|         0|            0|            0|  0.00%|
  1383|         0|            0|            0|  0.00%|        >>> from scipy.optimize.nonlin import BroydenFirst, KrylovJacobian
  1384|         0|            0|            0|  0.00%|        >>> from scipy.optimize.nonlin import InverseJacobian
  1385|         0|            0|            0|  0.00%|        >>> jac = BroydenFirst()
  1386|         0|            0|            0|  0.00%|        >>> kjac = KrylovJacobian(inner_M=InverseJacobian(jac))
  1387|         0|            0|            0|  0.00%|
  1388|         0|            0|            0|  0.00%|        If the preconditioner has a method named 'update', it will be called
  1389|         0|            0|            0|  0.00%|        as ``update(x, f)`` after each nonlinear step, with ``x`` giving
  1390|         0|            0|            0|  0.00%|        the current point, and ``f`` the current function value.
  1391|         0|            0|            0|  0.00%|    outer_k : int, optional
  1392|         0|            0|            0|  0.00%|        Size of the subspace kept across LGMRES nonlinear iterations.
  1393|         0|            0|            0|  0.00%|        See `scipy.sparse.linalg.lgmres` for details.
  1394|         0|            0|            0|  0.00%|    inner_kwargs : kwargs
  1395|         0|            0|            0|  0.00%|        Keyword parameters for the "inner" Krylov solver
  1396|         0|            0|            0|  0.00%|        (defined with `method`). Parameter names must start with
  1397|         0|            0|            0|  0.00%|        the `inner_` prefix which will be stripped before passing on
  1398|         0|            0|            0|  0.00%|        the inner method. See, e.g., `scipy.sparse.linalg.gmres` for details.
  1399|         0|            0|            0|  0.00%|    %(params_extra)s
  1400|         0|            0|            0|  0.00%|
  1401|         0|            0|            0|  0.00%|    See Also
  1402|         0|            0|            0|  0.00%|    --------
  1403|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1404|         0|            0|            0|  0.00%|           functions. See ``method=='krylov'`` in particular.
  1405|         0|            0|            0|  0.00%|    scipy.sparse.linalg.gmres
  1406|         0|            0|            0|  0.00%|    scipy.sparse.linalg.lgmres
  1407|         0|            0|            0|  0.00%|
  1408|         0|            0|            0|  0.00%|    Notes
  1409|         0|            0|            0|  0.00%|    -----
  1410|         0|            0|            0|  0.00%|    This function implements a Newton-Krylov solver. The basic idea is
  1411|         0|            0|            0|  0.00%|    to compute the inverse of the Jacobian with an iterative Krylov
  1412|         0|            0|            0|  0.00%|    method. These methods require only evaluating the Jacobian-vector
  1413|         0|            0|            0|  0.00%|    products, which are conveniently approximated by a finite difference:
  1414|         0|            0|            0|  0.00%|
  1415|         0|            0|            0|  0.00%|    .. math:: J v \approx (f(x + \omega*v/|v|) - f(x)) / \omega
  1416|         0|            0|            0|  0.00%|
  1417|         0|            0|            0|  0.00%|    Due to the use of iterative matrix inverses, these methods can
  1418|         0|            0|            0|  0.00%|    deal with large nonlinear problems.
  1419|         0|            0|            0|  0.00%|
  1420|         0|            0|            0|  0.00%|    SciPy's `scipy.sparse.linalg` module offers a selection of Krylov
  1421|         0|            0|            0|  0.00%|    solvers to choose from. The default here is `lgmres`, which is a
  1422|         0|            0|            0|  0.00%|    variant of restarted GMRES iteration that reuses some of the
  1423|         0|            0|            0|  0.00%|    information obtained in the previous Newton steps to invert
  1424|         0|            0|            0|  0.00%|    Jacobians in subsequent steps.
  1425|         0|            0|            0|  0.00%|
  1426|         0|            0|            0|  0.00%|    For a review on Newton-Krylov methods, see for example [1]_,
  1427|         0|            0|            0|  0.00%|    and for the LGMRES sparse inverse method, see [2]_.
  1428|         0|            0|            0|  0.00%|
  1429|         0|            0|            0|  0.00%|    References
  1430|         0|            0|            0|  0.00%|    ----------
  1431|         0|            0|            0|  0.00%|    .. [1] D.A. Knoll and D.E. Keyes, J. Comp. Phys. 193, 357 (2004).
  1432|         0|            0|            0|  0.00%|           :doi:`10.1016/j.jcp.2003.08.010`
  1433|         0|            0|            0|  0.00%|    .. [2] A.H. Baker and E.R. Jessup and T. Manteuffel,
  1434|         0|            0|            0|  0.00%|           SIAM J. Matrix Anal. Appl. 26, 962 (2005).
  1435|         0|            0|            0|  0.00%|           :doi:`10.1137/S0895479803422014`
  1436|         0|            0|            0|  0.00%|
  1437|         0|            0|            0|  0.00%|    """
  1438|         0|            0|            0|  0.00%|
  1439|         0|            0|            0|  0.00%|    def __init__(self, rdiff=None, method='lgmres', inner_maxiter=20,
  1440|         0|            0|            0|  0.00%|                 inner_M=None, outer_k=10, **kw):
  1441|         0|            0|            0|  0.00%|        self.preconditioner = inner_M
  1442|         0|            0|            0|  0.00%|        self.rdiff = rdiff
  1443|         0|            0|            0|  0.00%|        self.method = dict(
  1444|         0|            0|            0|  0.00%|            bicgstab=scipy.sparse.linalg.bicgstab,
  1445|         0|            0|            0|  0.00%|            gmres=scipy.sparse.linalg.gmres,
  1446|         0|            0|            0|  0.00%|            lgmres=scipy.sparse.linalg.lgmres,
  1447|         0|            0|            0|  0.00%|            cgs=scipy.sparse.linalg.cgs,
  1448|         0|            0|            0|  0.00%|            minres=scipy.sparse.linalg.minres,
  1449|         0|            0|            0|  0.00%|            ).get(method, method)
  1450|         0|            0|            0|  0.00%|
  1451|         0|            0|            0|  0.00%|        self.method_kw = dict(maxiter=inner_maxiter, M=self.preconditioner)
  1452|         0|            0|            0|  0.00%|
  1453|         0|            0|            0|  0.00%|        if self.method is scipy.sparse.linalg.gmres:
  1454|         0|            0|            0|  0.00%|            # Replace GMRES's outer iteration with Newton steps
  1455|         0|            0|            0|  0.00%|            self.method_kw['restrt'] = inner_maxiter
  1456|         0|            0|            0|  0.00%|            self.method_kw['maxiter'] = 1
  1457|         0|            0|            0|  0.00%|            self.method_kw.setdefault('atol', 0)
  1458|         0|            0|            0|  0.00%|        elif self.method is scipy.sparse.linalg.gcrotmk:
  1459|         0|            0|            0|  0.00%|            self.method_kw.setdefault('atol', 0)
  1460|         0|            0|            0|  0.00%|        elif self.method is scipy.sparse.linalg.lgmres:
  1461|         0|            0|            0|  0.00%|            self.method_kw['outer_k'] = outer_k
  1462|         0|            0|            0|  0.00%|            # Replace LGMRES's outer iteration with Newton steps
  1463|         0|            0|            0|  0.00%|            self.method_kw['maxiter'] = 1
  1464|         0|            0|            0|  0.00%|            # Carry LGMRES's `outer_v` vectors across nonlinear iterations
  1465|         0|            0|            0|  0.00%|            self.method_kw.setdefault('outer_v', [])
  1466|         0|            0|            0|  0.00%|            self.method_kw.setdefault('prepend_outer_v', True)
  1467|         0|            0|            0|  0.00%|            # But don't carry the corresponding Jacobian*v products, in case
  1468|         0|            0|            0|  0.00%|            # the Jacobian changes a lot in the nonlinear step
  1469|         0|            0|            0|  0.00%|            #
  1470|         0|            0|            0|  0.00%|            # XXX: some trust-region inspired ideas might be more efficient...
  1471|         0|            0|            0|  0.00%|            #      See e.g., Brown & Saad. But needs to be implemented separately
  1472|         0|            0|            0|  0.00%|            #      since it's not an inexact Newton method.
  1473|         0|            0|            0|  0.00%|            self.method_kw.setdefault('store_outer_Av', False)
  1474|         0|            0|            0|  0.00%|            self.method_kw.setdefault('atol', 0)
  1475|         0|            0|            0|  0.00%|
  1476|         0|            0|            0|  0.00%|        for key, value in kw.items():
  1477|         0|            0|            0|  0.00%|            if not key.startswith('inner_'):
  1478|         0|            0|            0|  0.00%|                raise ValueError("Unknown parameter %s" % key)
  1479|         0|            0|            0|  0.00%|            self.method_kw[key[6:]] = value
  1480|         0|            0|            0|  0.00%|
  1481|         0|            0|            0|  0.00%|    def _update_diff_step(self):
  1482|         0|            0|            0|  0.00%|        mx = abs(self.x0).max()
  1483|         0|            0|            0|  0.00%|        mf = abs(self.f0).max()
  1484|         0|            0|            0|  0.00%|        self.omega = self.rdiff * max(1, mx) / max(1, mf)
  1485|         0|            0|            0|  0.00%|
  1486|         0|            0|            0|  0.00%|    def matvec(self, v):
  1487|         0|            0|            0|  0.00%|        nv = norm(v)
  1488|         0|            0|            0|  0.00%|        if nv == 0:
  1489|         0|            0|            0|  0.00%|            return 0*v
  1490|         0|            0|            0|  0.00%|        sc = self.omega / nv
  1491|         0|            0|            0|  0.00%|        r = (self.func(self.x0 + sc*v) - self.f0) / sc
  1492|         0|            0|            0|  0.00%|        if not np.all(np.isfinite(r)) and np.all(np.isfinite(v)):
  1493|         0|            0|            0|  0.00%|            raise ValueError('Function returned non-finite results')
  1494|         0|            0|            0|  0.00%|        return r
  1495|         0|            0|            0|  0.00%|
  1496|         0|            0|            0|  0.00%|    def solve(self, rhs, tol=0):
  1497|         0|            0|            0|  0.00%|        if 'tol' in self.method_kw:
  1498|         0|            0|            0|  0.00%|            sol, info = self.method(self.op, rhs, **self.method_kw)
  1499|         0|            0|            0|  0.00%|        else:
  1500|         0|            0|            0|  0.00%|            sol, info = self.method(self.op, rhs, tol=tol, **self.method_kw)
  1501|         0|            0|            0|  0.00%|        return sol
  1502|         0|            0|            0|  0.00%|
  1503|         0|            0|            0|  0.00%|    def update(self, x, f):
  1504|         0|            0|            0|  0.00%|        self.x0 = x
  1505|         0|            0|            0|  0.00%|        self.f0 = f
  1506|         0|            0|            0|  0.00%|        self._update_diff_step()
  1507|         0|            0|            0|  0.00%|
  1508|         0|            0|            0|  0.00%|        # Update also the preconditioner, if possible
  1509|         0|            0|            0|  0.00%|        if self.preconditioner is not None:
  1510|         0|            0|            0|  0.00%|            if hasattr(self.preconditioner, 'update'):
  1511|         0|            0|            0|  0.00%|                self.preconditioner.update(x, f)
  1512|         0|            0|            0|  0.00%|
  1513|         0|            0|            0|  0.00%|    def setup(self, x, f, func):
  1514|         0|            0|            0|  0.00%|        Jacobian.setup(self, x, f, func)
  1515|         0|            0|            0|  0.00%|        self.x0 = x
  1516|         0|            0|            0|  0.00%|        self.f0 = f
  1517|         0|            0|            0|  0.00%|        self.op = scipy.sparse.linalg.aslinearoperator(self)
  1518|         0|            0|            0|  0.00%|
  1519|         0|            0|            0|  0.00%|        if self.rdiff is None:
  1520|         0|            0|            0|  0.00%|            self.rdiff = np.finfo(x.dtype).eps ** (1./2)
  1521|         0|            0|            0|  0.00%|
  1522|         0|            0|            0|  0.00%|        self._update_diff_step()
  1523|         0|            0|            0|  0.00%|
  1524|         0|            0|            0|  0.00%|        # Setup also the preconditioner, if possible
  1525|         0|            0|            0|  0.00%|        if self.preconditioner is not None:
  1526|         0|            0|            0|  0.00%|            if hasattr(self.preconditioner, 'setup'):
  1527|         0|            0|            0|  0.00%|                self.preconditioner.setup(x, f, func)
  1528|         0|            0|            0|  0.00%|
  1529|         0|            0|            0|  0.00%|
  1530|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1531|         0|            0|            0|  0.00%|# Wrapper functions
  1532|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1533|         0|            0|            0|  0.00%|
  1534|         0|            0|            0|  0.00%|def _nonlin_wrapper(name, jac):
  1535|         0|            0|            0|  0.00%|    """
  1536|         0|            0|            0|  0.00%|    Construct a solver wrapper with given name and Jacobian approx.
  1537|         0|            0|            0|  0.00%|
  1538|         0|            0|            0|  0.00%|    It inspects the keyword arguments of ``jac.__init__``, and allows to
  1539|         0|            0|            0|  0.00%|    use the same arguments in the wrapper function, in addition to the
  1540|         0|            0|            0|  0.00%|    keyword arguments of `nonlin_solve`
  1541|         0|            0|            0|  0.00%|
  1542|         0|            0|            0|  0.00%|    """
  1543|         0|            0|            0|  0.00%|    signature = _getfullargspec(jac.__init__)
  1544|         0|            0|            0|  0.00%|    args, varargs, varkw, defaults, kwonlyargs, kwdefaults, _ = signature
  1545|         0|            0|            0|  0.00%|    kwargs = list(zip(args[-len(defaults):], defaults))
  1546|         0|            0|            0|  0.00%|    kw_str = ", ".join(["%s=%r" % (k, v) for k, v in kwargs])
  1547|         0|            0|            0|  0.00%|    if kw_str:
  1548|         0|            0|            0|  0.00%|        kw_str = ", " + kw_str
  1549|         0|            0|            0|  0.00%|    kwkw_str = ", ".join(["%s=%s" % (k, k) for k, v in kwargs])
  1550|         0|            0|            0|  0.00%|    if kwkw_str:
  1551|         0|            0|            0|  0.00%|        kwkw_str = kwkw_str + ", "
  1552|         0|            0|            0|  0.00%|    if kwonlyargs:
  1553|         0|            0|            0|  0.00%|        raise ValueError('Unexpected signature %s' % signature)
  1554|         0|            0|            0|  0.00%|
  1555|         0|            0|            0|  0.00%|    # Construct the wrapper function so that its keyword arguments
  1556|         0|            0|            0|  0.00%|    # are visible in pydoc.help etc.
  1557|         0|            0|            0|  0.00%|    wrapper = """
  1558|         0|            0|            0|  0.00%|def %(name)s(F, xin, iter=None %(kw)s, verbose=False, maxiter=None,
  1559|         0|            0|            0|  0.00%|             f_tol=None, f_rtol=None, x_tol=None, x_rtol=None,
  1560|         0|            0|            0|  0.00%|             tol_norm=None, line_search='armijo', callback=None, **kw):
  1561|         0|            0|            0|  0.00%|    jac = %(jac)s(%(kwkw)s **kw)
  1562|         0|            0|            0|  0.00%|    return nonlin_solve(F, xin, jac, iter, verbose, maxiter,
  1563|         0|            0|            0|  0.00%|                        f_tol, f_rtol, x_tol, x_rtol, tol_norm, line_search,
  1564|         0|            0|            0|  0.00%|                        callback)
  1565|         0|            0|            0|  0.00%|"""
  1566|         0|            0|            0|  0.00%|
  1567|         0|            0|            0|  0.00%|    wrapper = wrapper % dict(name=name, kw=kw_str, jac=jac.__name__,
  1568|         0|            0|            0|  0.00%|                             kwkw=kwkw_str)
  1569|         0|            0|            0|  0.00%|    ns = {}
  1570|         0|            0|            0|  0.00%|    ns.update(globals())
  1571|         0|            0|            0|  0.00%|    exec(wrapper, ns)
  1572|         0|            0|            0|  0.00%|    func = ns[name]
  1573|         0|            0|            0|  0.00%|    func.__doc__ = jac.__doc__
  1574|         0|            0|            0|  0.00%|    _set_doc(func)
  1575|         0|            0|            0|  0.00%|    return func
  1576|         0|            0|            0|  0.00%|
  1577|         0|            0|            0|  0.00%|
  1578|         0|            0|            0|  0.00%|broyden1 = _nonlin_wrapper('broyden1', BroydenFirst)
  1579|         0|            0|            0|  0.00%|broyden2 = _nonlin_wrapper('broyden2', BroydenSecond)
  1580|         0|            0|            0|  0.00%|anderson = _nonlin_wrapper('anderson', Anderson)
  1581|         0|            0|            0|  0.00%|linearmixing = _nonlin_wrapper('linearmixing', LinearMixing)
  1582|         0|            0|            0|  0.00%|diagbroyden = _nonlin_wrapper('diagbroyden', DiagBroyden)
  1583|         0|            0|            0|  0.00%|excitingmixing = _nonlin_wrapper('excitingmixing', ExcitingMixing)
  1584|         0|            0|            0|  0.00%|newton_krylov = _nonlin_wrapper('newton_krylov', KrylovJacobian)
File: <string>_71
File duration: 2.28882e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.28882e-05|  1.14441e-05|  0.00%|
File: <string>_73
File duration: 2.28882e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.28882e-05|  1.14441e-05|  0.00%|
File: <string>_287
File duration: 2.28882e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.28882e-05|  1.14441e-05|  0.00%|
File: <string>_84
File duration: 2.28882e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.28882e-05|  1.14441e-05|  0.00%|
File: <string>_28
File duration: 2.26498e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.26498e-05|  1.13249e-05|  0.00%|
File: <string>_154
File duration: 2.26498e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|r"""
     2|         1|  9.05991e-06|  9.05991e-06|  0.00%|
     3|         0|            0|            0|  0.00%|Nonlinear solvers
     4|         1|  1.35899e-05|  1.35899e-05|  0.00%|-----------------
     5|         0|            0|            0|  0.00%|
     6|         0|            0|            0|  0.00%|.. currentmodule:: scipy.optimize
     7|         0|            0|            0|  0.00%|
     8|         0|            0|            0|  0.00%|This is a collection of general-purpose nonlinear multidimensional
     9|         0|            0|            0|  0.00%|solvers. These solvers find *x* for which *F(x) = 0*. Both *x*
    10|         0|            0|            0|  0.00%|and *F* can be multidimensional.
    11|         0|            0|            0|  0.00%|
    12|         0|            0|            0|  0.00%|Routines
    13|         0|            0|            0|  0.00%|~~~~~~~~
    14|         0|            0|            0|  0.00%|
    15|         0|            0|            0|  0.00%|Large-scale nonlinear solvers:
    16|         0|            0|            0|  0.00%|
    17|         0|            0|            0|  0.00%|.. autosummary::
    18|         0|            0|            0|  0.00%|
    19|         0|            0|            0|  0.00%|   newton_krylov
    20|         0|            0|            0|  0.00%|   anderson
    21|         0|            0|            0|  0.00%|
    22|         0|            0|            0|  0.00%|General nonlinear solvers:
    23|         0|            0|            0|  0.00%|
    24|         0|            0|            0|  0.00%|.. autosummary::
    25|         0|            0|            0|  0.00%|
    26|         0|            0|            0|  0.00%|   broyden1
    27|         0|            0|            0|  0.00%|   broyden2
    28|         0|            0|            0|  0.00%|
    29|         0|            0|            0|  0.00%|Simple iterations:
    30|         0|            0|            0|  0.00%|
    31|         0|            0|            0|  0.00%|.. autosummary::
    32|         0|            0|            0|  0.00%|
    33|         0|            0|            0|  0.00%|   excitingmixing
    34|         0|            0|            0|  0.00%|   linearmixing
    35|         0|            0|            0|  0.00%|   diagbroyden
    36|         0|            0|            0|  0.00%|
    37|         0|            0|            0|  0.00%|
    38|         0|            0|            0|  0.00%|Examples
    39|         0|            0|            0|  0.00%|~~~~~~~~
    40|         0|            0|            0|  0.00%|
    41|         0|            0|            0|  0.00%|**Small problem**
    42|         0|            0|            0|  0.00%|
    43|         0|            0|            0|  0.00%|>>> def F(x):
    44|         0|            0|            0|  0.00%|...    return np.cos(x) + x[::-1] - [1, 2, 3, 4]
    45|         0|            0|            0|  0.00%|>>> import scipy.optimize
    46|         0|            0|            0|  0.00%|>>> x = scipy.optimize.broyden1(F, [1,1,1,1], f_tol=1e-14)
    47|         0|            0|            0|  0.00%|>>> x
    48|         0|            0|            0|  0.00%|array([ 4.04674914,  3.91158389,  2.71791677,  1.61756251])
    49|         0|            0|            0|  0.00%|>>> np.cos(x) + x[::-1]
    50|         0|            0|            0|  0.00%|array([ 1.,  2.,  3.,  4.])
    51|         0|            0|            0|  0.00%|
    52|         0|            0|            0|  0.00%|
    53|         0|            0|            0|  0.00%|**Large problem**
    54|         0|            0|            0|  0.00%|
    55|         0|            0|            0|  0.00%|Suppose that we needed to solve the following integrodifferential
    56|         0|            0|            0|  0.00%|equation on the square :math:`[0,1]\times[0,1]`:
    57|         0|            0|            0|  0.00%|
    58|         0|            0|            0|  0.00%|.. math::
    59|         0|            0|            0|  0.00%|
    60|         0|            0|            0|  0.00%|   \nabla^2 P = 10 \left(\int_0^1\int_0^1\cosh(P)\,dx\,dy\right)^2
    61|         0|            0|            0|  0.00%|
    62|         0|            0|            0|  0.00%|with :math:`P(x,1) = 1` and :math:`P=0` elsewhere on the boundary of
    63|         0|            0|            0|  0.00%|the square.
    64|         0|            0|            0|  0.00%|
    65|         0|            0|            0|  0.00%|The solution can be found using the `newton_krylov` solver:
    66|         0|            0|            0|  0.00%|
    67|         0|            0|            0|  0.00%|.. plot::
    68|         0|            0|            0|  0.00%|
    69|         0|            0|            0|  0.00%|   import numpy as np
    70|         0|            0|            0|  0.00%|   from scipy.optimize import newton_krylov
    71|         0|            0|            0|  0.00%|   from numpy import cosh, zeros_like, mgrid, zeros
    72|         0|            0|            0|  0.00%|
    73|         0|            0|            0|  0.00%|   # parameters
    74|         0|            0|            0|  0.00%|   nx, ny = 75, 75
    75|         0|            0|            0|  0.00%|   hx, hy = 1./(nx-1), 1./(ny-1)
    76|         0|            0|            0|  0.00%|
    77|         0|            0|            0|  0.00%|   P_left, P_right = 0, 0
    78|         0|            0|            0|  0.00%|   P_top, P_bottom = 1, 0
    79|         0|            0|            0|  0.00%|
    80|         0|            0|            0|  0.00%|   def residual(P):
    81|         0|            0|            0|  0.00%|       d2x = zeros_like(P)
    82|         0|            0|            0|  0.00%|       d2y = zeros_like(P)
    83|         0|            0|            0|  0.00%|
    84|         0|            0|            0|  0.00%|       d2x[1:-1] = (P[2:]   - 2*P[1:-1] + P[:-2]) / hx/hx
    85|         0|            0|            0|  0.00%|       d2x[0]    = (P[1]    - 2*P[0]    + P_left)/hx/hx
    86|         0|            0|            0|  0.00%|       d2x[-1]   = (P_right - 2*P[-1]   + P[-2])/hx/hx
    87|         0|            0|            0|  0.00%|
    88|         0|            0|            0|  0.00%|       d2y[:,1:-1] = (P[:,2:] - 2*P[:,1:-1] + P[:,:-2])/hy/hy
    89|         0|            0|            0|  0.00%|       d2y[:,0]    = (P[:,1]  - 2*P[:,0]    + P_bottom)/hy/hy
    90|         0|            0|            0|  0.00%|       d2y[:,-1]   = (P_top   - 2*P[:,-1]   + P[:,-2])/hy/hy
    91|         0|            0|            0|  0.00%|
    92|         0|            0|            0|  0.00%|       return d2x + d2y - 10*cosh(P).mean()**2
    93|         0|            0|            0|  0.00%|
    94|         0|            0|            0|  0.00%|   # solve
    95|         0|            0|            0|  0.00%|   guess = zeros((nx, ny), float)
    96|         0|            0|            0|  0.00%|   sol = newton_krylov(residual, guess, method='lgmres', verbose=1)
    97|         0|            0|            0|  0.00%|   print('Residual: %g' % abs(residual(sol)).max())
    98|         0|            0|            0|  0.00%|
    99|         0|            0|            0|  0.00%|   # visualize
   100|         0|            0|            0|  0.00%|   import matplotlib.pyplot as plt
   101|         0|            0|            0|  0.00%|   x, y = mgrid[0:1:(nx*1j), 0:1:(ny*1j)]
   102|         0|            0|            0|  0.00%|   plt.pcolormesh(x, y, sol, shading='gouraud')
   103|         0|            0|            0|  0.00%|   plt.colorbar()
   104|         0|            0|            0|  0.00%|   plt.show()
   105|         0|            0|            0|  0.00%|
   106|         0|            0|            0|  0.00%|"""
   107|         0|            0|            0|  0.00%|# Copyright (C) 2009, Pauli Virtanen <pav@iki.fi>
   108|         0|            0|            0|  0.00%|# Distributed under the same license as SciPy.
   109|         0|            0|            0|  0.00%|
   110|         0|            0|            0|  0.00%|import sys
   111|         0|            0|            0|  0.00%|import numpy as np
   112|         0|            0|            0|  0.00%|from scipy.linalg import norm, solve, inv, qr, svd, LinAlgError
   113|         0|            0|            0|  0.00%|from numpy import asarray, dot, vdot
   114|         0|            0|            0|  0.00%|import scipy.sparse.linalg
   115|         0|            0|            0|  0.00%|import scipy.sparse
   116|         0|            0|            0|  0.00%|from scipy.linalg import get_blas_funcs
   117|         0|            0|            0|  0.00%|import inspect
   118|         0|            0|            0|  0.00%|from scipy._lib._util import getfullargspec_no_self as _getfullargspec
   119|         0|            0|            0|  0.00%|from .linesearch import scalar_search_wolfe1, scalar_search_armijo
   120|         0|            0|            0|  0.00%|
   121|         0|            0|            0|  0.00%|
   122|         0|            0|            0|  0.00%|__all__ = [
   123|         0|            0|            0|  0.00%|    'broyden1', 'broyden2', 'anderson', 'linearmixing',
   124|         0|            0|            0|  0.00%|    'diagbroyden', 'excitingmixing', 'newton_krylov']
   125|         0|            0|            0|  0.00%|
   126|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   127|         0|            0|            0|  0.00%|# Utility functions
   128|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   129|         0|            0|            0|  0.00%|
   130|         0|            0|            0|  0.00%|
   131|         0|            0|            0|  0.00%|class NoConvergence(Exception):
   132|         0|            0|            0|  0.00%|    pass
   133|         0|            0|            0|  0.00%|
   134|         0|            0|            0|  0.00%|
   135|         0|            0|            0|  0.00%|def maxnorm(x):
   136|         0|            0|            0|  0.00%|    return np.absolute(x).max()
   137|         0|            0|            0|  0.00%|
   138|         0|            0|            0|  0.00%|
   139|         0|            0|            0|  0.00%|def _as_inexact(x):
   140|         0|            0|            0|  0.00%|    """Return `x` as an array, of either floats or complex floats"""
   141|         0|            0|            0|  0.00%|    x = asarray(x)
   142|         0|            0|            0|  0.00%|    if not np.issubdtype(x.dtype, np.inexact):
   143|         0|            0|            0|  0.00%|        return asarray(x, dtype=np.float_)
   144|         0|            0|            0|  0.00%|    return x
   145|         0|            0|            0|  0.00%|
   146|         0|            0|            0|  0.00%|
   147|         0|            0|            0|  0.00%|def _array_like(x, x0):
   148|         0|            0|            0|  0.00%|    """Return ndarray `x` as same array subclass and shape as `x0`"""
   149|         0|            0|            0|  0.00%|    x = np.reshape(x, np.shape(x0))
   150|         0|            0|            0|  0.00%|    wrap = getattr(x0, '__array_wrap__', x.__array_wrap__)
   151|         0|            0|            0|  0.00%|    return wrap(x)
   152|         0|            0|            0|  0.00%|
   153|         0|            0|            0|  0.00%|
   154|         0|            0|            0|  0.00%|def _safe_norm(v):
   155|         0|            0|            0|  0.00%|    if not np.isfinite(v).all():
   156|         0|            0|            0|  0.00%|        return np.array(np.inf)
   157|         0|            0|            0|  0.00%|    return norm(v)
   158|         0|            0|            0|  0.00%|
   159|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   160|         0|            0|            0|  0.00%|# Generic nonlinear solver machinery
   161|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   162|         0|            0|            0|  0.00%|
   163|         0|            0|            0|  0.00%|
   164|         0|            0|            0|  0.00%|_doc_parts = dict(
   165|         0|            0|            0|  0.00%|    params_basic="""
   166|         0|            0|            0|  0.00%|    F : function(x) -> f
   167|         0|            0|            0|  0.00%|        Function whose root to find; should take and return an array-like
   168|         0|            0|            0|  0.00%|        object.
   169|         0|            0|            0|  0.00%|    xin : array_like
   170|         0|            0|            0|  0.00%|        Initial guess for the solution
   171|         0|            0|            0|  0.00%|    """.strip(),
   172|         0|            0|            0|  0.00%|    params_extra="""
   173|         0|            0|            0|  0.00%|    iter : int, optional
   174|         0|            0|            0|  0.00%|        Number of iterations to make. If omitted (default), make as many
   175|         0|            0|            0|  0.00%|        as required to meet tolerances.
   176|         0|            0|            0|  0.00%|    verbose : bool, optional
   177|         0|            0|            0|  0.00%|        Print status to stdout on every iteration.
   178|         0|            0|            0|  0.00%|    maxiter : int, optional
   179|         0|            0|            0|  0.00%|        Maximum number of iterations to make. If more are needed to
   180|         0|            0|            0|  0.00%|        meet convergence, `NoConvergence` is raised.
   181|         0|            0|            0|  0.00%|    f_tol : float, optional
   182|         0|            0|            0|  0.00%|        Absolute tolerance (in max-norm) for the residual.
   183|         0|            0|            0|  0.00%|        If omitted, default is 6e-6.
   184|         0|            0|            0|  0.00%|    f_rtol : float, optional
   185|         0|            0|            0|  0.00%|        Relative tolerance for the residual. If omitted, not used.
   186|         0|            0|            0|  0.00%|    x_tol : float, optional
   187|         0|            0|            0|  0.00%|        Absolute minimum step size, as determined from the Jacobian
   188|         0|            0|            0|  0.00%|        approximation. If the step size is smaller than this, optimization
   189|         0|            0|            0|  0.00%|        is terminated as successful. If omitted, not used.
   190|         0|            0|            0|  0.00%|    x_rtol : float, optional
   191|         0|            0|            0|  0.00%|        Relative minimum step size. If omitted, not used.
   192|         0|            0|            0|  0.00%|    tol_norm : function(vector) -> scalar, optional
   193|         0|            0|            0|  0.00%|        Norm to use in convergence check. Default is the maximum norm.
   194|         0|            0|            0|  0.00%|    line_search : {None, 'armijo' (default), 'wolfe'}, optional
   195|         0|            0|            0|  0.00%|        Which type of a line search to use to determine the step size in the
   196|         0|            0|            0|  0.00%|        direction given by the Jacobian approximation. Defaults to 'armijo'.
   197|         0|            0|            0|  0.00%|    callback : function, optional
   198|         0|            0|            0|  0.00%|        Optional callback function. It is called on every iteration as
   199|         0|            0|            0|  0.00%|        ``callback(x, f)`` where `x` is the current solution and `f`
   200|         0|            0|            0|  0.00%|        the corresponding residual.
   201|         0|            0|            0|  0.00%|
   202|         0|            0|            0|  0.00%|    Returns
   203|         0|            0|            0|  0.00%|    -------
   204|         0|            0|            0|  0.00%|    sol : ndarray
   205|         0|            0|            0|  0.00%|        An array (of similar array type as `x0`) containing the final solution.
   206|         0|            0|            0|  0.00%|
   207|         0|            0|            0|  0.00%|    Raises
   208|         0|            0|            0|  0.00%|    ------
   209|         0|            0|            0|  0.00%|    NoConvergence
   210|         0|            0|            0|  0.00%|        When a solution was not found.
   211|         0|            0|            0|  0.00%|
   212|         0|            0|            0|  0.00%|    """.strip()
   213|         0|            0|            0|  0.00%|)
   214|         0|            0|            0|  0.00%|
   215|         0|            0|            0|  0.00%|
   216|         0|            0|            0|  0.00%|def _set_doc(obj):
   217|         0|            0|            0|  0.00%|    if obj.__doc__:
   218|         0|            0|            0|  0.00%|        obj.__doc__ = obj.__doc__ % _doc_parts
   219|         0|            0|            0|  0.00%|
   220|         0|            0|            0|  0.00%|
   221|         0|            0|            0|  0.00%|def nonlin_solve(F, x0, jacobian='krylov', iter=None, verbose=False,
   222|         0|            0|            0|  0.00%|                 maxiter=None, f_tol=None, f_rtol=None, x_tol=None, x_rtol=None,
   223|         0|            0|            0|  0.00%|                 tol_norm=None, line_search='armijo', callback=None,
   224|         0|            0|            0|  0.00%|                 full_output=False, raise_exception=True):
   225|         0|            0|            0|  0.00%|    """
   226|         0|            0|            0|  0.00%|    Find a root of a function, in a way suitable for large-scale problems.
   227|         0|            0|            0|  0.00%|
   228|         0|            0|            0|  0.00%|    Parameters
   229|         0|            0|            0|  0.00%|    ----------
   230|         0|            0|            0|  0.00%|    %(params_basic)s
   231|         0|            0|            0|  0.00%|    jacobian : Jacobian
   232|         0|            0|            0|  0.00%|        A Jacobian approximation: `Jacobian` object or something that
   233|         0|            0|            0|  0.00%|        `asjacobian` can transform to one. Alternatively, a string specifying
   234|         0|            0|            0|  0.00%|        which of the builtin Jacobian approximations to use:
   235|         0|            0|            0|  0.00%|
   236|         0|            0|            0|  0.00%|            krylov, broyden1, broyden2, anderson
   237|         0|            0|            0|  0.00%|            diagbroyden, linearmixing, excitingmixing
   238|         0|            0|            0|  0.00%|
   239|         0|            0|            0|  0.00%|    %(params_extra)s
   240|         0|            0|            0|  0.00%|    full_output : bool
   241|         0|            0|            0|  0.00%|        If true, returns a dictionary `info` containing convergence
   242|         0|            0|            0|  0.00%|        information.
   243|         0|            0|            0|  0.00%|    raise_exception : bool
   244|         0|            0|            0|  0.00%|        If True, a `NoConvergence` exception is raise if no solution is found.
   245|         0|            0|            0|  0.00%|
   246|         0|            0|            0|  0.00%|    See Also
   247|         0|            0|            0|  0.00%|    --------
   248|         0|            0|            0|  0.00%|    asjacobian, Jacobian
   249|         0|            0|            0|  0.00%|
   250|         0|            0|            0|  0.00%|    Notes
   251|         0|            0|            0|  0.00%|    -----
   252|         0|            0|            0|  0.00%|    This algorithm implements the inexact Newton method, with
   253|         0|            0|            0|  0.00%|    backtracking or full line searches. Several Jacobian
   254|         0|            0|            0|  0.00%|    approximations are available, including Krylov and Quasi-Newton
   255|         0|            0|            0|  0.00%|    methods.
   256|         0|            0|            0|  0.00%|
   257|         0|            0|            0|  0.00%|    References
   258|         0|            0|            0|  0.00%|    ----------
   259|         0|            0|            0|  0.00%|    .. [KIM] C. T. Kelley, \"Iterative Methods for Linear and Nonlinear
   260|         0|            0|            0|  0.00%|       Equations\". Society for Industrial and Applied Mathematics. (1995)
   261|         0|            0|            0|  0.00%|       https://archive.siam.org/books/kelley/fr16/
   262|         0|            0|            0|  0.00%|
   263|         0|            0|            0|  0.00%|    """
   264|         0|            0|            0|  0.00%|    # Can't use default parameters because it's being explicitly passed as None
   265|         0|            0|            0|  0.00%|    # from the calling function, so we need to set it here.
   266|         0|            0|            0|  0.00%|    tol_norm = maxnorm if tol_norm is None else tol_norm
   267|         0|            0|            0|  0.00%|    condition = TerminationCondition(f_tol=f_tol, f_rtol=f_rtol,
   268|         0|            0|            0|  0.00%|                                     x_tol=x_tol, x_rtol=x_rtol,
   269|         0|            0|            0|  0.00%|                                     iter=iter, norm=tol_norm)
   270|         0|            0|            0|  0.00%|
   271|         0|            0|            0|  0.00%|    x0 = _as_inexact(x0)
   272|         0|            0|            0|  0.00%|    func = lambda z: _as_inexact(F(_array_like(z, x0))).flatten()
   273|         0|            0|            0|  0.00%|    x = x0.flatten()
   274|         0|            0|            0|  0.00%|
   275|         0|            0|            0|  0.00%|    dx = np.inf
   276|         0|            0|            0|  0.00%|    Fx = func(x)
   277|         0|            0|            0|  0.00%|    Fx_norm = norm(Fx)
   278|         0|            0|            0|  0.00%|
   279|         0|            0|            0|  0.00%|    jacobian = asjacobian(jacobian)
   280|         0|            0|            0|  0.00%|    jacobian.setup(x.copy(), Fx, func)
   281|         0|            0|            0|  0.00%|
   282|         0|            0|            0|  0.00%|    if maxiter is None:
   283|         0|            0|            0|  0.00%|        if iter is not None:
   284|         0|            0|            0|  0.00%|            maxiter = iter + 1
   285|         0|            0|            0|  0.00%|        else:
   286|         0|            0|            0|  0.00%|            maxiter = 100*(x.size+1)
   287|         0|            0|            0|  0.00%|
   288|         0|            0|            0|  0.00%|    if line_search is True:
   289|         0|            0|            0|  0.00%|        line_search = 'armijo'
   290|         0|            0|            0|  0.00%|    elif line_search is False:
   291|         0|            0|            0|  0.00%|        line_search = None
   292|         0|            0|            0|  0.00%|
   293|         0|            0|            0|  0.00%|    if line_search not in (None, 'armijo', 'wolfe'):
   294|         0|            0|            0|  0.00%|        raise ValueError("Invalid line search")
   295|         0|            0|            0|  0.00%|
   296|         0|            0|            0|  0.00%|    # Solver tolerance selection
   297|         0|            0|            0|  0.00%|    gamma = 0.9
   298|         0|            0|            0|  0.00%|    eta_max = 0.9999
   299|         0|            0|            0|  0.00%|    eta_treshold = 0.1
   300|         0|            0|            0|  0.00%|    eta = 1e-3
   301|         0|            0|            0|  0.00%|
   302|         0|            0|            0|  0.00%|    for n in range(maxiter):
   303|         0|            0|            0|  0.00%|        status = condition.check(Fx, x, dx)
   304|         0|            0|            0|  0.00%|        if status:
   305|         0|            0|            0|  0.00%|            break
   306|         0|            0|            0|  0.00%|
   307|         0|            0|            0|  0.00%|        # The tolerance, as computed for scipy.sparse.linalg.* routines
   308|         0|            0|            0|  0.00%|        tol = min(eta, eta*Fx_norm)
   309|         0|            0|            0|  0.00%|        dx = -jacobian.solve(Fx, tol=tol)
   310|         0|            0|            0|  0.00%|
   311|         0|            0|            0|  0.00%|        if norm(dx) == 0:
   312|         0|            0|            0|  0.00%|            raise ValueError("Jacobian inversion yielded zero vector. "
   313|         0|            0|            0|  0.00%|                             "This indicates a bug in the Jacobian "
   314|         0|            0|            0|  0.00%|                             "approximation.")
   315|         0|            0|            0|  0.00%|
   316|         0|            0|            0|  0.00%|        # Line search, or Newton step
   317|         0|            0|            0|  0.00%|        if line_search:
   318|         0|            0|            0|  0.00%|            s, x, Fx, Fx_norm_new = _nonlin_line_search(func, x, Fx, dx,
   319|         0|            0|            0|  0.00%|                                                        line_search)
   320|         0|            0|            0|  0.00%|        else:
   321|         0|            0|            0|  0.00%|            s = 1.0
   322|         0|            0|            0|  0.00%|            x = x + dx
   323|         0|            0|            0|  0.00%|            Fx = func(x)
   324|         0|            0|            0|  0.00%|            Fx_norm_new = norm(Fx)
   325|         0|            0|            0|  0.00%|
   326|         0|            0|            0|  0.00%|        jacobian.update(x.copy(), Fx)
   327|         0|            0|            0|  0.00%|
   328|         0|            0|            0|  0.00%|        if callback:
   329|         0|            0|            0|  0.00%|            callback(x, Fx)
   330|         0|            0|            0|  0.00%|
   331|         0|            0|            0|  0.00%|        # Adjust forcing parameters for inexact methods
   332|         0|            0|            0|  0.00%|        eta_A = gamma * Fx_norm_new**2 / Fx_norm**2
   333|         0|            0|            0|  0.00%|        if gamma * eta**2 < eta_treshold:
   334|         0|            0|            0|  0.00%|            eta = min(eta_max, eta_A)
   335|         0|            0|            0|  0.00%|        else:
   336|         0|            0|            0|  0.00%|            eta = min(eta_max, max(eta_A, gamma*eta**2))
   337|         0|            0|            0|  0.00%|
   338|         0|            0|            0|  0.00%|        Fx_norm = Fx_norm_new
   339|         0|            0|            0|  0.00%|
   340|         0|            0|            0|  0.00%|        # Print status
   341|         0|            0|            0|  0.00%|        if verbose:
   342|         0|            0|            0|  0.00%|            sys.stdout.write("%d:  |F(x)| = %g; step %g\n" % (
   343|         0|            0|            0|  0.00%|                n, tol_norm(Fx), s))
   344|         0|            0|            0|  0.00%|            sys.stdout.flush()
   345|         0|            0|            0|  0.00%|    else:
   346|         0|            0|            0|  0.00%|        if raise_exception:
   347|         0|            0|            0|  0.00%|            raise NoConvergence(_array_like(x, x0))
   348|         0|            0|            0|  0.00%|        else:
   349|         0|            0|            0|  0.00%|            status = 2
   350|         0|            0|            0|  0.00%|
   351|         0|            0|            0|  0.00%|    if full_output:
   352|         0|            0|            0|  0.00%|        info = {'nit': condition.iteration,
   353|         0|            0|            0|  0.00%|                'fun': Fx,
   354|         0|            0|            0|  0.00%|                'status': status,
   355|         0|            0|            0|  0.00%|                'success': status == 1,
   356|         0|            0|            0|  0.00%|                'message': {1: 'A solution was found at the specified '
   357|         0|            0|            0|  0.00%|                               'tolerance.',
   358|         0|            0|            0|  0.00%|                            2: 'The maximum number of iterations allowed '
   359|         0|            0|            0|  0.00%|                               'has been reached.'
   360|         0|            0|            0|  0.00%|                            }[status]
   361|         0|            0|            0|  0.00%|                }
   362|         0|            0|            0|  0.00%|        return _array_like(x, x0), info
   363|         0|            0|            0|  0.00%|    else:
   364|         0|            0|            0|  0.00%|        return _array_like(x, x0)
   365|         0|            0|            0|  0.00%|
   366|         0|            0|            0|  0.00%|
   367|         0|            0|            0|  0.00%|_set_doc(nonlin_solve)
   368|         0|            0|            0|  0.00%|
   369|         0|            0|            0|  0.00%|
   370|         0|            0|            0|  0.00%|def _nonlin_line_search(func, x, Fx, dx, search_type='armijo', rdiff=1e-8,
   371|         0|            0|            0|  0.00%|                        smin=1e-2):
   372|         0|            0|            0|  0.00%|    tmp_s = [0]
   373|         0|            0|            0|  0.00%|    tmp_Fx = [Fx]
   374|         0|            0|            0|  0.00%|    tmp_phi = [norm(Fx)**2]
   375|         0|            0|            0|  0.00%|    s_norm = norm(x) / norm(dx)
   376|         0|            0|            0|  0.00%|
   377|         0|            0|            0|  0.00%|    def phi(s, store=True):
   378|         0|            0|            0|  0.00%|        if s == tmp_s[0]:
   379|         0|            0|            0|  0.00%|            return tmp_phi[0]
   380|         0|            0|            0|  0.00%|        xt = x + s*dx
   381|         0|            0|            0|  0.00%|        v = func(xt)
   382|         0|            0|            0|  0.00%|        p = _safe_norm(v)**2
   383|         0|            0|            0|  0.00%|        if store:
   384|         0|            0|            0|  0.00%|            tmp_s[0] = s
   385|         0|            0|            0|  0.00%|            tmp_phi[0] = p
   386|         0|            0|            0|  0.00%|            tmp_Fx[0] = v
   387|         0|            0|            0|  0.00%|        return p
   388|         0|            0|            0|  0.00%|
   389|         0|            0|            0|  0.00%|    def derphi(s):
   390|         0|            0|            0|  0.00%|        ds = (abs(s) + s_norm + 1) * rdiff
   391|         0|            0|            0|  0.00%|        return (phi(s+ds, store=False) - phi(s)) / ds
   392|         0|            0|            0|  0.00%|
   393|         0|            0|            0|  0.00%|    if search_type == 'wolfe':
   394|         0|            0|            0|  0.00%|        s, phi1, phi0 = scalar_search_wolfe1(phi, derphi, tmp_phi[0],
   395|         0|            0|            0|  0.00%|                                             xtol=1e-2, amin=smin)
   396|         0|            0|            0|  0.00%|    elif search_type == 'armijo':
   397|         0|            0|            0|  0.00%|        s, phi1 = scalar_search_armijo(phi, tmp_phi[0], -tmp_phi[0],
   398|         0|            0|            0|  0.00%|                                       amin=smin)
   399|         0|            0|            0|  0.00%|
   400|         0|            0|            0|  0.00%|    if s is None:
   401|         0|            0|            0|  0.00%|        # XXX: No suitable step length found. Take the full Newton step,
   402|         0|            0|            0|  0.00%|        #      and hope for the best.
   403|         0|            0|            0|  0.00%|        s = 1.0
   404|         0|            0|            0|  0.00%|
   405|         0|            0|            0|  0.00%|    x = x + s*dx
   406|         0|            0|            0|  0.00%|    if s == tmp_s[0]:
   407|         0|            0|            0|  0.00%|        Fx = tmp_Fx[0]
   408|         0|            0|            0|  0.00%|    else:
   409|         0|            0|            0|  0.00%|        Fx = func(x)
   410|         0|            0|            0|  0.00%|    Fx_norm = norm(Fx)
   411|         0|            0|            0|  0.00%|
   412|         0|            0|            0|  0.00%|    return s, x, Fx, Fx_norm
   413|         0|            0|            0|  0.00%|
   414|         0|            0|            0|  0.00%|
   415|         0|            0|            0|  0.00%|class TerminationCondition(object):
   416|         0|            0|            0|  0.00%|    """
   417|         0|            0|            0|  0.00%|    Termination condition for an iteration. It is terminated if
   418|         0|            0|            0|  0.00%|
   419|         0|            0|            0|  0.00%|    - |F| < f_rtol*|F_0|, AND
   420|         0|            0|            0|  0.00%|    - |F| < f_tol
   421|         0|            0|            0|  0.00%|
   422|         0|            0|            0|  0.00%|    AND
   423|         0|            0|            0|  0.00%|
   424|         0|            0|            0|  0.00%|    - |dx| < x_rtol*|x|, AND
   425|         0|            0|            0|  0.00%|    - |dx| < x_tol
   426|         0|            0|            0|  0.00%|
   427|         0|            0|            0|  0.00%|    """
   428|         0|            0|            0|  0.00%|    def __init__(self, f_tol=None, f_rtol=None, x_tol=None, x_rtol=None,
   429|         0|            0|            0|  0.00%|                 iter=None, norm=maxnorm):
   430|         0|            0|            0|  0.00%|
   431|         0|            0|            0|  0.00%|        if f_tol is None:
   432|         0|            0|            0|  0.00%|            f_tol = np.finfo(np.float_).eps ** (1./3)
   433|         0|            0|            0|  0.00%|        if f_rtol is None:
   434|         0|            0|            0|  0.00%|            f_rtol = np.inf
   435|         0|            0|            0|  0.00%|        if x_tol is None:
   436|         0|            0|            0|  0.00%|            x_tol = np.inf
   437|         0|            0|            0|  0.00%|        if x_rtol is None:
   438|         0|            0|            0|  0.00%|            x_rtol = np.inf
   439|         0|            0|            0|  0.00%|
   440|         0|            0|            0|  0.00%|        self.x_tol = x_tol
   441|         0|            0|            0|  0.00%|        self.x_rtol = x_rtol
   442|         0|            0|            0|  0.00%|        self.f_tol = f_tol
   443|         0|            0|            0|  0.00%|        self.f_rtol = f_rtol
   444|         0|            0|            0|  0.00%|
   445|         0|            0|            0|  0.00%|        self.norm = norm
   446|         0|            0|            0|  0.00%|
   447|         0|            0|            0|  0.00%|        self.iter = iter
   448|         0|            0|            0|  0.00%|
   449|         0|            0|            0|  0.00%|        self.f0_norm = None
   450|         0|            0|            0|  0.00%|        self.iteration = 0
   451|         0|            0|            0|  0.00%|
   452|         0|            0|            0|  0.00%|    def check(self, f, x, dx):
   453|         0|            0|            0|  0.00%|        self.iteration += 1
   454|         0|            0|            0|  0.00%|        f_norm = self.norm(f)
   455|         0|            0|            0|  0.00%|        x_norm = self.norm(x)
   456|         0|            0|            0|  0.00%|        dx_norm = self.norm(dx)
   457|         0|            0|            0|  0.00%|
   458|         0|            0|            0|  0.00%|        if self.f0_norm is None:
   459|         0|            0|            0|  0.00%|            self.f0_norm = f_norm
   460|         0|            0|            0|  0.00%|
   461|         0|            0|            0|  0.00%|        if f_norm == 0:
   462|         0|            0|            0|  0.00%|            return 1
   463|         0|            0|            0|  0.00%|
   464|         0|            0|            0|  0.00%|        if self.iter is not None:
   465|         0|            0|            0|  0.00%|            # backwards compatibility with SciPy 0.6.0
   466|         0|            0|            0|  0.00%|            return 2 * (self.iteration > self.iter)
   467|         0|            0|            0|  0.00%|
   468|         0|            0|            0|  0.00%|        # NB: condition must succeed for rtol=inf even if norm == 0
   469|         0|            0|            0|  0.00%|        return int((f_norm <= self.f_tol
   470|         0|            0|            0|  0.00%|                    and f_norm/self.f_rtol <= self.f0_norm)
   471|         0|            0|            0|  0.00%|                   and (dx_norm <= self.x_tol
   472|         0|            0|            0|  0.00%|                        and dx_norm/self.x_rtol <= x_norm))
   473|         0|            0|            0|  0.00%|
   474|         0|            0|            0|  0.00%|
   475|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   476|         0|            0|            0|  0.00%|# Generic Jacobian approximation
   477|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   478|         0|            0|            0|  0.00%|
   479|         0|            0|            0|  0.00%|class Jacobian(object):
   480|         0|            0|            0|  0.00%|    """
   481|         0|            0|            0|  0.00%|    Common interface for Jacobians or Jacobian approximations.
   482|         0|            0|            0|  0.00%|
   483|         0|            0|            0|  0.00%|    The optional methods come useful when implementing trust region
   484|         0|            0|            0|  0.00%|    etc., algorithms that often require evaluating transposes of the
   485|         0|            0|            0|  0.00%|    Jacobian.
   486|         0|            0|            0|  0.00%|
   487|         0|            0|            0|  0.00%|    Methods
   488|         0|            0|            0|  0.00%|    -------
   489|         0|            0|            0|  0.00%|    solve
   490|         0|            0|            0|  0.00%|        Returns J^-1 * v
   491|         0|            0|            0|  0.00%|    update
   492|         0|            0|            0|  0.00%|        Updates Jacobian to point `x` (where the function has residual `Fx`)
   493|         0|            0|            0|  0.00%|
   494|         0|            0|            0|  0.00%|    matvec : optional
   495|         0|            0|            0|  0.00%|        Returns J * v
   496|         0|            0|            0|  0.00%|    rmatvec : optional
   497|         0|            0|            0|  0.00%|        Returns A^H * v
   498|         0|            0|            0|  0.00%|    rsolve : optional
   499|         0|            0|            0|  0.00%|        Returns A^-H * v
   500|         0|            0|            0|  0.00%|    matmat : optional
   501|         0|            0|            0|  0.00%|        Returns A * V, where V is a dense matrix with dimensions (N,K).
   502|         0|            0|            0|  0.00%|    todense : optional
   503|         0|            0|            0|  0.00%|        Form the dense Jacobian matrix. Necessary for dense trust region
   504|         0|            0|            0|  0.00%|        algorithms, and useful for testing.
   505|         0|            0|            0|  0.00%|
   506|         0|            0|            0|  0.00%|    Attributes
   507|         0|            0|            0|  0.00%|    ----------
   508|         0|            0|            0|  0.00%|    shape
   509|         0|            0|            0|  0.00%|        Matrix dimensions (M, N)
   510|         0|            0|            0|  0.00%|    dtype
   511|         0|            0|            0|  0.00%|        Data type of the matrix.
   512|         0|            0|            0|  0.00%|    func : callable, optional
   513|         0|            0|            0|  0.00%|        Function the Jacobian corresponds to
   514|         0|            0|            0|  0.00%|
   515|         0|            0|            0|  0.00%|    """
   516|         0|            0|            0|  0.00%|
   517|         0|            0|            0|  0.00%|    def __init__(self, **kw):
   518|         0|            0|            0|  0.00%|        names = ["solve", "update", "matvec", "rmatvec", "rsolve",
   519|         0|            0|            0|  0.00%|                 "matmat", "todense", "shape", "dtype"]
   520|         0|            0|            0|  0.00%|        for name, value in kw.items():
   521|         0|            0|            0|  0.00%|            if name not in names:
   522|         0|            0|            0|  0.00%|                raise ValueError("Unknown keyword argument %s" % name)
   523|         0|            0|            0|  0.00%|            if value is not None:
   524|         0|            0|            0|  0.00%|                setattr(self, name, kw[name])
   525|         0|            0|            0|  0.00%|
   526|         0|            0|            0|  0.00%|        if hasattr(self, 'todense'):
   527|         0|            0|            0|  0.00%|            self.__array__ = lambda: self.todense()
   528|         0|            0|            0|  0.00%|
   529|         0|            0|            0|  0.00%|    def aspreconditioner(self):
   530|         0|            0|            0|  0.00%|        return InverseJacobian(self)
   531|         0|            0|            0|  0.00%|
   532|         0|            0|            0|  0.00%|    def solve(self, v, tol=0):
   533|         0|            0|            0|  0.00%|        raise NotImplementedError
   534|         0|            0|            0|  0.00%|
   535|         0|            0|            0|  0.00%|    def update(self, x, F):
   536|         0|            0|            0|  0.00%|        pass
   537|         0|            0|            0|  0.00%|
   538|         0|            0|            0|  0.00%|    def setup(self, x, F, func):
   539|         0|            0|            0|  0.00%|        self.func = func
   540|         0|            0|            0|  0.00%|        self.shape = (F.size, x.size)
   541|         0|            0|            0|  0.00%|        self.dtype = F.dtype
   542|         0|            0|            0|  0.00%|        if self.__class__.setup is Jacobian.setup:
   543|         0|            0|            0|  0.00%|            # Call on the first point unless overridden
   544|         0|            0|            0|  0.00%|            self.update(x, F)
   545|         0|            0|            0|  0.00%|
   546|         0|            0|            0|  0.00%|
   547|         0|            0|            0|  0.00%|class InverseJacobian(object):
   548|         0|            0|            0|  0.00%|    def __init__(self, jacobian):
   549|         0|            0|            0|  0.00%|        self.jacobian = jacobian
   550|         0|            0|            0|  0.00%|        self.matvec = jacobian.solve
   551|         0|            0|            0|  0.00%|        self.update = jacobian.update
   552|         0|            0|            0|  0.00%|        if hasattr(jacobian, 'setup'):
   553|         0|            0|            0|  0.00%|            self.setup = jacobian.setup
   554|         0|            0|            0|  0.00%|        if hasattr(jacobian, 'rsolve'):
   555|         0|            0|            0|  0.00%|            self.rmatvec = jacobian.rsolve
   556|         0|            0|            0|  0.00%|
   557|         0|            0|            0|  0.00%|    @property
   558|         0|            0|            0|  0.00%|    def shape(self):
   559|         0|            0|            0|  0.00%|        return self.jacobian.shape
   560|         0|            0|            0|  0.00%|
   561|         0|            0|            0|  0.00%|    @property
   562|         0|            0|            0|  0.00%|    def dtype(self):
   563|         0|            0|            0|  0.00%|        return self.jacobian.dtype
   564|         0|            0|            0|  0.00%|
   565|         0|            0|            0|  0.00%|
   566|         0|            0|            0|  0.00%|def asjacobian(J):
   567|         0|            0|            0|  0.00%|    """
   568|         0|            0|            0|  0.00%|    Convert given object to one suitable for use as a Jacobian.
   569|         0|            0|            0|  0.00%|    """
   570|         0|            0|            0|  0.00%|    spsolve = scipy.sparse.linalg.spsolve
   571|         0|            0|            0|  0.00%|    if isinstance(J, Jacobian):
   572|         0|            0|            0|  0.00%|        return J
   573|         0|            0|            0|  0.00%|    elif inspect.isclass(J) and issubclass(J, Jacobian):
   574|         0|            0|            0|  0.00%|        return J()
   575|         0|            0|            0|  0.00%|    elif isinstance(J, np.ndarray):
   576|         0|            0|            0|  0.00%|        if J.ndim > 2:
   577|         0|            0|            0|  0.00%|            raise ValueError('array must have rank <= 2')
   578|         0|            0|            0|  0.00%|        J = np.atleast_2d(np.asarray(J))
   579|         0|            0|            0|  0.00%|        if J.shape[0] != J.shape[1]:
   580|         0|            0|            0|  0.00%|            raise ValueError('array must be square')
   581|         0|            0|            0|  0.00%|
   582|         0|            0|            0|  0.00%|        return Jacobian(matvec=lambda v: dot(J, v),
   583|         0|            0|            0|  0.00%|                        rmatvec=lambda v: dot(J.conj().T, v),
   584|         0|            0|            0|  0.00%|                        solve=lambda v: solve(J, v),
   585|         0|            0|            0|  0.00%|                        rsolve=lambda v: solve(J.conj().T, v),
   586|         0|            0|            0|  0.00%|                        dtype=J.dtype, shape=J.shape)
   587|         0|            0|            0|  0.00%|    elif scipy.sparse.isspmatrix(J):
   588|         0|            0|            0|  0.00%|        if J.shape[0] != J.shape[1]:
   589|         0|            0|            0|  0.00%|            raise ValueError('matrix must be square')
   590|         0|            0|            0|  0.00%|        return Jacobian(matvec=lambda v: J*v,
   591|         0|            0|            0|  0.00%|                        rmatvec=lambda v: J.conj().T * v,
   592|         0|            0|            0|  0.00%|                        solve=lambda v: spsolve(J, v),
   593|         0|            0|            0|  0.00%|                        rsolve=lambda v: spsolve(J.conj().T, v),
   594|         0|            0|            0|  0.00%|                        dtype=J.dtype, shape=J.shape)
   595|         0|            0|            0|  0.00%|    elif hasattr(J, 'shape') and hasattr(J, 'dtype') and hasattr(J, 'solve'):
   596|         0|            0|            0|  0.00%|        return Jacobian(matvec=getattr(J, 'matvec'),
   597|         0|            0|            0|  0.00%|                        rmatvec=getattr(J, 'rmatvec'),
   598|         0|            0|            0|  0.00%|                        solve=J.solve,
   599|         0|            0|            0|  0.00%|                        rsolve=getattr(J, 'rsolve'),
   600|         0|            0|            0|  0.00%|                        update=getattr(J, 'update'),
   601|         0|            0|            0|  0.00%|                        setup=getattr(J, 'setup'),
   602|         0|            0|            0|  0.00%|                        dtype=J.dtype,
   603|         0|            0|            0|  0.00%|                        shape=J.shape)
   604|         0|            0|            0|  0.00%|    elif callable(J):
   605|         0|            0|            0|  0.00%|        # Assume it's a function J(x) that returns the Jacobian
   606|         0|            0|            0|  0.00%|        class Jac(Jacobian):
   607|         0|            0|            0|  0.00%|            def update(self, x, F):
   608|         0|            0|            0|  0.00%|                self.x = x
   609|         0|            0|            0|  0.00%|
   610|         0|            0|            0|  0.00%|            def solve(self, v, tol=0):
   611|         0|            0|            0|  0.00%|                m = J(self.x)
   612|         0|            0|            0|  0.00%|                if isinstance(m, np.ndarray):
   613|         0|            0|            0|  0.00%|                    return solve(m, v)
   614|         0|            0|            0|  0.00%|                elif scipy.sparse.isspmatrix(m):
   615|         0|            0|            0|  0.00%|                    return spsolve(m, v)
   616|         0|            0|            0|  0.00%|                else:
   617|         0|            0|            0|  0.00%|                    raise ValueError("Unknown matrix type")
   618|         0|            0|            0|  0.00%|
   619|         0|            0|            0|  0.00%|            def matvec(self, v):
   620|         0|            0|            0|  0.00%|                m = J(self.x)
   621|         0|            0|            0|  0.00%|                if isinstance(m, np.ndarray):
   622|         0|            0|            0|  0.00%|                    return dot(m, v)
   623|         0|            0|            0|  0.00%|                elif scipy.sparse.isspmatrix(m):
   624|         0|            0|            0|  0.00%|                    return m*v
   625|         0|            0|            0|  0.00%|                else:
   626|         0|            0|            0|  0.00%|                    raise ValueError("Unknown matrix type")
   627|         0|            0|            0|  0.00%|
   628|         0|            0|            0|  0.00%|            def rsolve(self, v, tol=0):
   629|         0|            0|            0|  0.00%|                m = J(self.x)
   630|         0|            0|            0|  0.00%|                if isinstance(m, np.ndarray):
   631|         0|            0|            0|  0.00%|                    return solve(m.conj().T, v)
   632|         0|            0|            0|  0.00%|                elif scipy.sparse.isspmatrix(m):
   633|         0|            0|            0|  0.00%|                    return spsolve(m.conj().T, v)
   634|         0|            0|            0|  0.00%|                else:
   635|         0|            0|            0|  0.00%|                    raise ValueError("Unknown matrix type")
   636|         0|            0|            0|  0.00%|
   637|         0|            0|            0|  0.00%|            def rmatvec(self, v):
   638|         0|            0|            0|  0.00%|                m = J(self.x)
   639|         0|            0|            0|  0.00%|                if isinstance(m, np.ndarray):
   640|         0|            0|            0|  0.00%|                    return dot(m.conj().T, v)
   641|         0|            0|            0|  0.00%|                elif scipy.sparse.isspmatrix(m):
   642|         0|            0|            0|  0.00%|                    return m.conj().T * v
   643|         0|            0|            0|  0.00%|                else:
   644|         0|            0|            0|  0.00%|                    raise ValueError("Unknown matrix type")
   645|         0|            0|            0|  0.00%|        return Jac()
   646|         0|            0|            0|  0.00%|    elif isinstance(J, str):
   647|         0|            0|            0|  0.00%|        return dict(broyden1=BroydenFirst,
   648|         0|            0|            0|  0.00%|                    broyden2=BroydenSecond,
   649|         0|            0|            0|  0.00%|                    anderson=Anderson,
   650|         0|            0|            0|  0.00%|                    diagbroyden=DiagBroyden,
   651|         0|            0|            0|  0.00%|                    linearmixing=LinearMixing,
   652|         0|            0|            0|  0.00%|                    excitingmixing=ExcitingMixing,
   653|         0|            0|            0|  0.00%|                    krylov=KrylovJacobian)[J]()
   654|         0|            0|            0|  0.00%|    else:
   655|         0|            0|            0|  0.00%|        raise TypeError('Cannot convert object to a Jacobian')
   656|         0|            0|            0|  0.00%|
   657|         0|            0|            0|  0.00%|
   658|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   659|         0|            0|            0|  0.00%|# Broyden
   660|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   661|         0|            0|            0|  0.00%|
   662|         0|            0|            0|  0.00%|class GenericBroyden(Jacobian):
   663|         0|            0|            0|  0.00%|    def setup(self, x0, f0, func):
   664|         0|            0|            0|  0.00%|        Jacobian.setup(self, x0, f0, func)
   665|         0|            0|            0|  0.00%|        self.last_f = f0
   666|         0|            0|            0|  0.00%|        self.last_x = x0
   667|         0|            0|            0|  0.00%|
   668|         0|            0|            0|  0.00%|        if hasattr(self, 'alpha') and self.alpha is None:
   669|         0|            0|            0|  0.00%|            # Autoscale the initial Jacobian parameter
   670|         0|            0|            0|  0.00%|            # unless we have already guessed the solution.
   671|         0|            0|            0|  0.00%|            normf0 = norm(f0)
   672|         0|            0|            0|  0.00%|            if normf0:
   673|         0|            0|            0|  0.00%|                self.alpha = 0.5*max(norm(x0), 1) / normf0
   674|         0|            0|            0|  0.00%|            else:
   675|         0|            0|            0|  0.00%|                self.alpha = 1.0
   676|         0|            0|            0|  0.00%|
   677|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
   678|         0|            0|            0|  0.00%|        raise NotImplementedError
   679|         0|            0|            0|  0.00%|
   680|         0|            0|            0|  0.00%|    def update(self, x, f):
   681|         0|            0|            0|  0.00%|        df = f - self.last_f
   682|         0|            0|            0|  0.00%|        dx = x - self.last_x
   683|         0|            0|            0|  0.00%|        self._update(x, f, dx, df, norm(dx), norm(df))
   684|         0|            0|            0|  0.00%|        self.last_f = f
   685|         0|            0|            0|  0.00%|        self.last_x = x
   686|         0|            0|            0|  0.00%|
   687|         0|            0|            0|  0.00%|
   688|         0|            0|            0|  0.00%|class LowRankMatrix(object):
   689|         0|            0|            0|  0.00%|    r"""
   690|         0|            0|            0|  0.00%|    A matrix represented as
   691|         0|            0|            0|  0.00%|
   692|         0|            0|            0|  0.00%|    .. math:: \alpha I + \sum_{n=0}^{n=M} c_n d_n^\dagger
   693|         0|            0|            0|  0.00%|
   694|         0|            0|            0|  0.00%|    However, if the rank of the matrix reaches the dimension of the vectors,
   695|         0|            0|            0|  0.00%|    full matrix representation will be used thereon.
   696|         0|            0|            0|  0.00%|
   697|         0|            0|            0|  0.00%|    """
   698|         0|            0|            0|  0.00%|
   699|         0|            0|            0|  0.00%|    def __init__(self, alpha, n, dtype):
   700|         0|            0|            0|  0.00%|        self.alpha = alpha
   701|         0|            0|            0|  0.00%|        self.cs = []
   702|         0|            0|            0|  0.00%|        self.ds = []
   703|         0|            0|            0|  0.00%|        self.n = n
   704|         0|            0|            0|  0.00%|        self.dtype = dtype
   705|         0|            0|            0|  0.00%|        self.collapsed = None
   706|         0|            0|            0|  0.00%|
   707|         0|            0|            0|  0.00%|    @staticmethod
   708|         0|            0|            0|  0.00%|    def _matvec(v, alpha, cs, ds):
   709|         0|            0|            0|  0.00%|        axpy, scal, dotc = get_blas_funcs(['axpy', 'scal', 'dotc'],
   710|         0|            0|            0|  0.00%|                                          cs[:1] + [v])
   711|         0|            0|            0|  0.00%|        w = alpha * v
   712|         0|            0|            0|  0.00%|        for c, d in zip(cs, ds):
   713|         0|            0|            0|  0.00%|            a = dotc(d, v)
   714|         0|            0|            0|  0.00%|            w = axpy(c, w, w.size, a)
   715|         0|            0|            0|  0.00%|        return w
   716|         0|            0|            0|  0.00%|
   717|         0|            0|            0|  0.00%|    @staticmethod
   718|         0|            0|            0|  0.00%|    def _solve(v, alpha, cs, ds):
   719|         0|            0|            0|  0.00%|        """Evaluate w = M^-1 v"""
   720|         0|            0|            0|  0.00%|        if len(cs) == 0:
   721|         0|            0|            0|  0.00%|            return v/alpha
   722|         0|            0|            0|  0.00%|
   723|         0|            0|            0|  0.00%|        # (B + C D^H)^-1 = B^-1 - B^-1 C (I + D^H B^-1 C)^-1 D^H B^-1
   724|         0|            0|            0|  0.00%|
   725|         0|            0|            0|  0.00%|        axpy, dotc = get_blas_funcs(['axpy', 'dotc'], cs[:1] + [v])
   726|         0|            0|            0|  0.00%|
   727|         0|            0|            0|  0.00%|        c0 = cs[0]
   728|         0|            0|            0|  0.00%|        A = alpha * np.identity(len(cs), dtype=c0.dtype)
   729|         0|            0|            0|  0.00%|        for i, d in enumerate(ds):
   730|         0|            0|            0|  0.00%|            for j, c in enumerate(cs):
   731|         0|            0|            0|  0.00%|                A[i,j] += dotc(d, c)
   732|         0|            0|            0|  0.00%|
   733|         0|            0|            0|  0.00%|        q = np.zeros(len(cs), dtype=c0.dtype)
   734|         0|            0|            0|  0.00%|        for j, d in enumerate(ds):
   735|         0|            0|            0|  0.00%|            q[j] = dotc(d, v)
   736|         0|            0|            0|  0.00%|        q /= alpha
   737|         0|            0|            0|  0.00%|        q = solve(A, q)
   738|         0|            0|            0|  0.00%|
   739|         0|            0|            0|  0.00%|        w = v/alpha
   740|         0|            0|            0|  0.00%|        for c, qc in zip(cs, q):
   741|         0|            0|            0|  0.00%|            w = axpy(c, w, w.size, -qc)
   742|         0|            0|            0|  0.00%|
   743|         0|            0|            0|  0.00%|        return w
   744|         0|            0|            0|  0.00%|
   745|         0|            0|            0|  0.00%|    def matvec(self, v):
   746|         0|            0|            0|  0.00%|        """Evaluate w = M v"""
   747|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   748|         0|            0|            0|  0.00%|            return np.dot(self.collapsed, v)
   749|         0|            0|            0|  0.00%|        return LowRankMatrix._matvec(v, self.alpha, self.cs, self.ds)
   750|         0|            0|            0|  0.00%|
   751|         0|            0|            0|  0.00%|    def rmatvec(self, v):
   752|         0|            0|            0|  0.00%|        """Evaluate w = M^H v"""
   753|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   754|         0|            0|            0|  0.00%|            return np.dot(self.collapsed.T.conj(), v)
   755|         0|            0|            0|  0.00%|        return LowRankMatrix._matvec(v, np.conj(self.alpha), self.ds, self.cs)
   756|         0|            0|            0|  0.00%|
   757|         0|            0|            0|  0.00%|    def solve(self, v, tol=0):
   758|         0|            0|            0|  0.00%|        """Evaluate w = M^-1 v"""
   759|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   760|         0|            0|            0|  0.00%|            return solve(self.collapsed, v)
   761|         0|            0|            0|  0.00%|        return LowRankMatrix._solve(v, self.alpha, self.cs, self.ds)
   762|         0|            0|            0|  0.00%|
   763|         0|            0|            0|  0.00%|    def rsolve(self, v, tol=0):
   764|         0|            0|            0|  0.00%|        """Evaluate w = M^-H v"""
   765|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   766|         0|            0|            0|  0.00%|            return solve(self.collapsed.T.conj(), v)
   767|         0|            0|            0|  0.00%|        return LowRankMatrix._solve(v, np.conj(self.alpha), self.ds, self.cs)
   768|         0|            0|            0|  0.00%|
   769|         0|            0|            0|  0.00%|    def append(self, c, d):
   770|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   771|         0|            0|            0|  0.00%|            self.collapsed += c[:,None] * d[None,:].conj()
   772|         0|            0|            0|  0.00%|            return
   773|         0|            0|            0|  0.00%|
   774|         0|            0|            0|  0.00%|        self.cs.append(c)
   775|         0|            0|            0|  0.00%|        self.ds.append(d)
   776|         0|            0|            0|  0.00%|
   777|         0|            0|            0|  0.00%|        if len(self.cs) > c.size:
   778|         0|            0|            0|  0.00%|            self.collapse()
   779|         0|            0|            0|  0.00%|
   780|         0|            0|            0|  0.00%|    def __array__(self):
   781|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   782|         0|            0|            0|  0.00%|            return self.collapsed
   783|         0|            0|            0|  0.00%|
   784|         0|            0|            0|  0.00%|        Gm = self.alpha*np.identity(self.n, dtype=self.dtype)
   785|         0|            0|            0|  0.00%|        for c, d in zip(self.cs, self.ds):
   786|         0|            0|            0|  0.00%|            Gm += c[:,None]*d[None,:].conj()
   787|         0|            0|            0|  0.00%|        return Gm
   788|         0|            0|            0|  0.00%|
   789|         0|            0|            0|  0.00%|    def collapse(self):
   790|         0|            0|            0|  0.00%|        """Collapse the low-rank matrix to a full-rank one."""
   791|         0|            0|            0|  0.00%|        self.collapsed = np.array(self)
   792|         0|            0|            0|  0.00%|        self.cs = None
   793|         0|            0|            0|  0.00%|        self.ds = None
   794|         0|            0|            0|  0.00%|        self.alpha = None
   795|         0|            0|            0|  0.00%|
   796|         0|            0|            0|  0.00%|    def restart_reduce(self, rank):
   797|         0|            0|            0|  0.00%|        """
   798|         0|            0|            0|  0.00%|        Reduce the rank of the matrix by dropping all vectors.
   799|         0|            0|            0|  0.00%|        """
   800|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   801|         0|            0|            0|  0.00%|            return
   802|         0|            0|            0|  0.00%|        assert rank > 0
   803|         0|            0|            0|  0.00%|        if len(self.cs) > rank:
   804|         0|            0|            0|  0.00%|            del self.cs[:]
   805|         0|            0|            0|  0.00%|            del self.ds[:]
   806|         0|            0|            0|  0.00%|
   807|         0|            0|            0|  0.00%|    def simple_reduce(self, rank):
   808|         0|            0|            0|  0.00%|        """
   809|         0|            0|            0|  0.00%|        Reduce the rank of the matrix by dropping oldest vectors.
   810|         0|            0|            0|  0.00%|        """
   811|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   812|         0|            0|            0|  0.00%|            return
   813|         0|            0|            0|  0.00%|        assert rank > 0
   814|         0|            0|            0|  0.00%|        while len(self.cs) > rank:
   815|         0|            0|            0|  0.00%|            del self.cs[0]
   816|         0|            0|            0|  0.00%|            del self.ds[0]
   817|         0|            0|            0|  0.00%|
   818|         0|            0|            0|  0.00%|    def svd_reduce(self, max_rank, to_retain=None):
   819|         0|            0|            0|  0.00%|        """
   820|         0|            0|            0|  0.00%|        Reduce the rank of the matrix by retaining some SVD components.
   821|         0|            0|            0|  0.00%|
   822|         0|            0|            0|  0.00%|        This corresponds to the \"Broyden Rank Reduction Inverse\"
   823|         0|            0|            0|  0.00%|        algorithm described in [1]_.
   824|         0|            0|            0|  0.00%|
   825|         0|            0|            0|  0.00%|        Note that the SVD decomposition can be done by solving only a
   826|         0|            0|            0|  0.00%|        problem whose size is the effective rank of this matrix, which
   827|         0|            0|            0|  0.00%|        is viable even for large problems.
   828|         0|            0|            0|  0.00%|
   829|         0|            0|            0|  0.00%|        Parameters
   830|         0|            0|            0|  0.00%|        ----------
   831|         0|            0|            0|  0.00%|        max_rank : int
   832|         0|            0|            0|  0.00%|            Maximum rank of this matrix after reduction.
   833|         0|            0|            0|  0.00%|        to_retain : int, optional
   834|         0|            0|            0|  0.00%|            Number of SVD components to retain when reduction is done
   835|         0|            0|            0|  0.00%|            (ie. rank > max_rank). Default is ``max_rank - 2``.
   836|         0|            0|            0|  0.00%|
   837|         0|            0|            0|  0.00%|        References
   838|         0|            0|            0|  0.00%|        ----------
   839|         0|            0|            0|  0.00%|        .. [1] B.A. van der Rotten, PhD thesis,
   840|         0|            0|            0|  0.00%|           \"A limited memory Broyden method to solve high-dimensional
   841|         0|            0|            0|  0.00%|           systems of nonlinear equations\". Mathematisch Instituut,
   842|         0|            0|            0|  0.00%|           Universiteit Leiden, The Netherlands (2003).
   843|         0|            0|            0|  0.00%|
   844|         0|            0|            0|  0.00%|           https://web.archive.org/web/20161022015821/http://www.math.leidenuniv.nl/scripties/Rotten.pdf
   845|         0|            0|            0|  0.00%|
   846|         0|            0|            0|  0.00%|        """
   847|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   848|         0|            0|            0|  0.00%|            return
   849|         0|            0|            0|  0.00%|
   850|         0|            0|            0|  0.00%|        p = max_rank
   851|         0|            0|            0|  0.00%|        if to_retain is not None:
   852|         0|            0|            0|  0.00%|            q = to_retain
   853|         0|            0|            0|  0.00%|        else:
   854|         0|            0|            0|  0.00%|            q = p - 2
   855|         0|            0|            0|  0.00%|
   856|         0|            0|            0|  0.00%|        if self.cs:
   857|         0|            0|            0|  0.00%|            p = min(p, len(self.cs[0]))
   858|         0|            0|            0|  0.00%|        q = max(0, min(q, p-1))
   859|         0|            0|            0|  0.00%|
   860|         0|            0|            0|  0.00%|        m = len(self.cs)
   861|         0|            0|            0|  0.00%|        if m < p:
   862|         0|            0|            0|  0.00%|            # nothing to do
   863|         0|            0|            0|  0.00%|            return
   864|         0|            0|            0|  0.00%|
   865|         0|            0|            0|  0.00%|        C = np.array(self.cs).T
   866|         0|            0|            0|  0.00%|        D = np.array(self.ds).T
   867|         0|            0|            0|  0.00%|
   868|         0|            0|            0|  0.00%|        D, R = qr(D, mode='economic')
   869|         0|            0|            0|  0.00%|        C = dot(C, R.T.conj())
   870|         0|            0|            0|  0.00%|
   871|         0|            0|            0|  0.00%|        U, S, WH = svd(C, full_matrices=False, compute_uv=True)
   872|         0|            0|            0|  0.00%|
   873|         0|            0|            0|  0.00%|        C = dot(C, inv(WH))
   874|         0|            0|            0|  0.00%|        D = dot(D, WH.T.conj())
   875|         0|            0|            0|  0.00%|
   876|         0|            0|            0|  0.00%|        for k in range(q):
   877|         0|            0|            0|  0.00%|            self.cs[k] = C[:,k].copy()
   878|         0|            0|            0|  0.00%|            self.ds[k] = D[:,k].copy()
   879|         0|            0|            0|  0.00%|
   880|         0|            0|            0|  0.00%|        del self.cs[q:]
   881|         0|            0|            0|  0.00%|        del self.ds[q:]
   882|         0|            0|            0|  0.00%|
   883|         0|            0|            0|  0.00%|
   884|         0|            0|            0|  0.00%|_doc_parts['broyden_params'] = """
   885|         0|            0|            0|  0.00%|    alpha : float, optional
   886|         0|            0|            0|  0.00%|        Initial guess for the Jacobian is ``(-1/alpha)``.
   887|         0|            0|            0|  0.00%|    reduction_method : str or tuple, optional
   888|         0|            0|            0|  0.00%|        Method used in ensuring that the rank of the Broyden matrix
   889|         0|            0|            0|  0.00%|        stays low. Can either be a string giving the name of the method,
   890|         0|            0|            0|  0.00%|        or a tuple of the form ``(method, param1, param2, ...)``
   891|         0|            0|            0|  0.00%|        that gives the name of the method and values for additional parameters.
   892|         0|            0|            0|  0.00%|
   893|         0|            0|            0|  0.00%|        Methods available:
   894|         0|            0|            0|  0.00%|
   895|         0|            0|            0|  0.00%|            - ``restart``: drop all matrix columns. Has no extra parameters.
   896|         0|            0|            0|  0.00%|            - ``simple``: drop oldest matrix column. Has no extra parameters.
   897|         0|            0|            0|  0.00%|            - ``svd``: keep only the most significant SVD components.
   898|         0|            0|            0|  0.00%|              Takes an extra parameter, ``to_retain``, which determines the
   899|         0|            0|            0|  0.00%|              number of SVD components to retain when rank reduction is done.
   900|         0|            0|            0|  0.00%|              Default is ``max_rank - 2``.
   901|         0|            0|            0|  0.00%|
   902|         0|            0|            0|  0.00%|    max_rank : int, optional
   903|         0|            0|            0|  0.00%|        Maximum rank for the Broyden matrix.
   904|         0|            0|            0|  0.00%|        Default is infinity (i.e., no rank reduction).
   905|         0|            0|            0|  0.00%|    """.strip()
   906|         0|            0|            0|  0.00%|
   907|         0|            0|            0|  0.00%|
   908|         0|            0|            0|  0.00%|class BroydenFirst(GenericBroyden):
   909|         0|            0|            0|  0.00%|    r"""
   910|         0|            0|            0|  0.00%|    Find a root of a function, using Broyden's first Jacobian approximation.
   911|         0|            0|            0|  0.00%|
   912|         0|            0|            0|  0.00%|    This method is also known as \"Broyden's good method\".
   913|         0|            0|            0|  0.00%|
   914|         0|            0|            0|  0.00%|    Parameters
   915|         0|            0|            0|  0.00%|    ----------
   916|         0|            0|            0|  0.00%|    %(params_basic)s
   917|         0|            0|            0|  0.00%|    %(broyden_params)s
   918|         0|            0|            0|  0.00%|    %(params_extra)s
   919|         0|            0|            0|  0.00%|
   920|         0|            0|            0|  0.00%|    See Also
   921|         0|            0|            0|  0.00%|    --------
   922|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
   923|         0|            0|            0|  0.00%|           functions. See ``method=='broyden1'`` in particular.
   924|         0|            0|            0|  0.00%|
   925|         0|            0|            0|  0.00%|    Notes
   926|         0|            0|            0|  0.00%|    -----
   927|         0|            0|            0|  0.00%|    This algorithm implements the inverse Jacobian Quasi-Newton update
   928|         0|            0|            0|  0.00%|
   929|         0|            0|            0|  0.00%|    .. math:: H_+ = H + (dx - H df) dx^\dagger H / ( dx^\dagger H df)
   930|         0|            0|            0|  0.00%|
   931|         0|            0|            0|  0.00%|    which corresponds to Broyden's first Jacobian update
   932|         0|            0|            0|  0.00%|
   933|         0|            0|            0|  0.00%|    .. math:: J_+ = J + (df - J dx) dx^\dagger / dx^\dagger dx
   934|         0|            0|            0|  0.00%|
   935|         0|            0|            0|  0.00%|
   936|         0|            0|            0|  0.00%|    References
   937|         0|            0|            0|  0.00%|    ----------
   938|         0|            0|            0|  0.00%|    .. [1] B.A. van der Rotten, PhD thesis,
   939|         0|            0|            0|  0.00%|       \"A limited memory Broyden method to solve high-dimensional
   940|         0|            0|            0|  0.00%|       systems of nonlinear equations\". Mathematisch Instituut,
   941|         0|            0|            0|  0.00%|       Universiteit Leiden, The Netherlands (2003).
   942|         0|            0|            0|  0.00%|
   943|         0|            0|            0|  0.00%|       https://web.archive.org/web/20161022015821/http://www.math.leidenuniv.nl/scripties/Rotten.pdf
   944|         0|            0|            0|  0.00%|
   945|         0|            0|            0|  0.00%|    """
   946|         0|            0|            0|  0.00%|
   947|         0|            0|            0|  0.00%|    def __init__(self, alpha=None, reduction_method='restart', max_rank=None):
   948|         0|            0|            0|  0.00%|        GenericBroyden.__init__(self)
   949|         0|            0|            0|  0.00%|        self.alpha = alpha
   950|         0|            0|            0|  0.00%|        self.Gm = None
   951|         0|            0|            0|  0.00%|
   952|         0|            0|            0|  0.00%|        if max_rank is None:
   953|         0|            0|            0|  0.00%|            max_rank = np.inf
   954|         0|            0|            0|  0.00%|        self.max_rank = max_rank
   955|         0|            0|            0|  0.00%|
   956|         0|            0|            0|  0.00%|        if isinstance(reduction_method, str):
   957|         0|            0|            0|  0.00%|            reduce_params = ()
   958|         0|            0|            0|  0.00%|        else:
   959|         0|            0|            0|  0.00%|            reduce_params = reduction_method[1:]
   960|         0|            0|            0|  0.00%|            reduction_method = reduction_method[0]
   961|         0|            0|            0|  0.00%|        reduce_params = (max_rank - 1,) + reduce_params
   962|         0|            0|            0|  0.00%|
   963|         0|            0|            0|  0.00%|        if reduction_method == 'svd':
   964|         0|            0|            0|  0.00%|            self._reduce = lambda: self.Gm.svd_reduce(*reduce_params)
   965|         0|            0|            0|  0.00%|        elif reduction_method == 'simple':
   966|         0|            0|            0|  0.00%|            self._reduce = lambda: self.Gm.simple_reduce(*reduce_params)
   967|         0|            0|            0|  0.00%|        elif reduction_method == 'restart':
   968|         0|            0|            0|  0.00%|            self._reduce = lambda: self.Gm.restart_reduce(*reduce_params)
   969|         0|            0|            0|  0.00%|        else:
   970|         0|            0|            0|  0.00%|            raise ValueError("Unknown rank reduction method '%s'" %
   971|         0|            0|            0|  0.00%|                             reduction_method)
   972|         0|            0|            0|  0.00%|
   973|         0|            0|            0|  0.00%|    def setup(self, x, F, func):
   974|         0|            0|            0|  0.00%|        GenericBroyden.setup(self, x, F, func)
   975|         0|            0|            0|  0.00%|        self.Gm = LowRankMatrix(-self.alpha, self.shape[0], self.dtype)
   976|         0|            0|            0|  0.00%|
   977|         0|            0|            0|  0.00%|    def todense(self):
   978|         0|            0|            0|  0.00%|        return inv(self.Gm)
   979|         0|            0|            0|  0.00%|
   980|         0|            0|            0|  0.00%|    def solve(self, f, tol=0):
   981|         0|            0|            0|  0.00%|        r = self.Gm.matvec(f)
   982|         0|            0|            0|  0.00%|        if not np.isfinite(r).all():
   983|         0|            0|            0|  0.00%|            # singular; reset the Jacobian approximation
   984|         0|            0|            0|  0.00%|            self.setup(self.last_x, self.last_f, self.func)
   985|         0|            0|            0|  0.00%|        return self.Gm.matvec(f)
   986|         0|            0|            0|  0.00%|
   987|         0|            0|            0|  0.00%|    def matvec(self, f):
   988|         0|            0|            0|  0.00%|        return self.Gm.solve(f)
   989|         0|            0|            0|  0.00%|
   990|         0|            0|            0|  0.00%|    def rsolve(self, f, tol=0):
   991|         0|            0|            0|  0.00%|        return self.Gm.rmatvec(f)
   992|         0|            0|            0|  0.00%|
   993|         0|            0|            0|  0.00%|    def rmatvec(self, f):
   994|         0|            0|            0|  0.00%|        return self.Gm.rsolve(f)
   995|         0|            0|            0|  0.00%|
   996|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
   997|         0|            0|            0|  0.00%|        self._reduce()  # reduce first to preserve secant condition
   998|         0|            0|            0|  0.00%|
   999|         0|            0|            0|  0.00%|        v = self.Gm.rmatvec(dx)
  1000|         0|            0|            0|  0.00%|        c = dx - self.Gm.matvec(df)
  1001|         0|            0|            0|  0.00%|        d = v / vdot(df, v)
  1002|         0|            0|            0|  0.00%|
  1003|         0|            0|            0|  0.00%|        self.Gm.append(c, d)
  1004|         0|            0|            0|  0.00%|
  1005|         0|            0|            0|  0.00%|
  1006|         0|            0|            0|  0.00%|class BroydenSecond(BroydenFirst):
  1007|         0|            0|            0|  0.00%|    """
  1008|         0|            0|            0|  0.00%|    Find a root of a function, using Broyden\'s second Jacobian approximation.
  1009|         0|            0|            0|  0.00%|
  1010|         0|            0|            0|  0.00%|    This method is also known as \"Broyden's bad method\".
  1011|         0|            0|            0|  0.00%|
  1012|         0|            0|            0|  0.00%|    Parameters
  1013|         0|            0|            0|  0.00%|    ----------
  1014|         0|            0|            0|  0.00%|    %(params_basic)s
  1015|         0|            0|            0|  0.00%|    %(broyden_params)s
  1016|         0|            0|            0|  0.00%|    %(params_extra)s
  1017|         0|            0|            0|  0.00%|
  1018|         0|            0|            0|  0.00%|    See Also
  1019|         0|            0|            0|  0.00%|    --------
  1020|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1021|         0|            0|            0|  0.00%|           functions. See ``method=='broyden2'`` in particular.
  1022|         0|            0|            0|  0.00%|
  1023|         0|            0|            0|  0.00%|    Notes
  1024|         0|            0|            0|  0.00%|    -----
  1025|         0|            0|            0|  0.00%|    This algorithm implements the inverse Jacobian Quasi-Newton update
  1026|         0|            0|            0|  0.00%|
  1027|         0|            0|            0|  0.00%|    .. math:: H_+ = H + (dx - H df) df^\\dagger / ( df^\\dagger df)
  1028|         0|            0|            0|  0.00%|
  1029|         0|            0|            0|  0.00%|    corresponding to Broyden's second method.
  1030|         0|            0|            0|  0.00%|
  1031|         0|            0|            0|  0.00%|    References
  1032|         0|            0|            0|  0.00%|    ----------
  1033|         0|            0|            0|  0.00%|    .. [1] B.A. van der Rotten, PhD thesis,
  1034|         0|            0|            0|  0.00%|       \"A limited memory Broyden method to solve high-dimensional
  1035|         0|            0|            0|  0.00%|       systems of nonlinear equations\". Mathematisch Instituut,
  1036|         0|            0|            0|  0.00%|       Universiteit Leiden, The Netherlands (2003).
  1037|         0|            0|            0|  0.00%|
  1038|         0|            0|            0|  0.00%|       https://web.archive.org/web/20161022015821/http://www.math.leidenuniv.nl/scripties/Rotten.pdf
  1039|         0|            0|            0|  0.00%|
  1040|         0|            0|            0|  0.00%|    """
  1041|         0|            0|            0|  0.00%|
  1042|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
  1043|         0|            0|            0|  0.00%|        self._reduce()  # reduce first to preserve secant condition
  1044|         0|            0|            0|  0.00%|
  1045|         0|            0|            0|  0.00%|        v = df
  1046|         0|            0|            0|  0.00%|        c = dx - self.Gm.matvec(df)
  1047|         0|            0|            0|  0.00%|        d = v / df_norm**2
  1048|         0|            0|            0|  0.00%|        self.Gm.append(c, d)
  1049|         0|            0|            0|  0.00%|
  1050|         0|            0|            0|  0.00%|
  1051|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1052|         0|            0|            0|  0.00%|# Broyden-like (restricted memory)
  1053|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1054|         0|            0|            0|  0.00%|
  1055|         0|            0|            0|  0.00%|class Anderson(GenericBroyden):
  1056|         0|            0|            0|  0.00%|    """
  1057|         0|            0|            0|  0.00%|    Find a root of a function, using (extended) Anderson mixing.
  1058|         0|            0|            0|  0.00%|
  1059|         0|            0|            0|  0.00%|    The Jacobian is formed by for a 'best' solution in the space
  1060|         0|            0|            0|  0.00%|    spanned by last `M` vectors. As a result, only a MxM matrix
  1061|         0|            0|            0|  0.00%|    inversions and MxN multiplications are required. [Ey]_
  1062|         0|            0|            0|  0.00%|
  1063|         0|            0|            0|  0.00%|    Parameters
  1064|         0|            0|            0|  0.00%|    ----------
  1065|         0|            0|            0|  0.00%|    %(params_basic)s
  1066|         0|            0|            0|  0.00%|    alpha : float, optional
  1067|         0|            0|            0|  0.00%|        Initial guess for the Jacobian is (-1/alpha).
  1068|         0|            0|            0|  0.00%|    M : float, optional
  1069|         0|            0|            0|  0.00%|        Number of previous vectors to retain. Defaults to 5.
  1070|         0|            0|            0|  0.00%|    w0 : float, optional
  1071|         0|            0|            0|  0.00%|        Regularization parameter for numerical stability.
  1072|         0|            0|            0|  0.00%|        Compared to unity, good values of the order of 0.01.
  1073|         0|            0|            0|  0.00%|    %(params_extra)s
  1074|         0|            0|            0|  0.00%|
  1075|         0|            0|            0|  0.00%|    See Also
  1076|         0|            0|            0|  0.00%|    --------
  1077|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1078|         0|            0|            0|  0.00%|           functions. See ``method=='anderson'`` in particular.
  1079|         0|            0|            0|  0.00%|
  1080|         0|            0|            0|  0.00%|    References
  1081|         0|            0|            0|  0.00%|    ----------
  1082|         0|            0|            0|  0.00%|    .. [Ey] V. Eyert, J. Comp. Phys., 124, 271 (1996).
  1083|         0|            0|            0|  0.00%|
  1084|         0|            0|            0|  0.00%|    """
  1085|         0|            0|            0|  0.00%|
  1086|         0|            0|            0|  0.00%|    # Note:
  1087|         0|            0|            0|  0.00%|    #
  1088|         0|            0|            0|  0.00%|    # Anderson method maintains a rank M approximation of the inverse Jacobian,
  1089|         0|            0|            0|  0.00%|    #
  1090|         0|            0|            0|  0.00%|    #     J^-1 v ~ -v*alpha + (dX + alpha dF) A^-1 dF^H v
  1091|         0|            0|            0|  0.00%|    #     A      = W + dF^H dF
  1092|         0|            0|            0|  0.00%|    #     W      = w0^2 diag(dF^H dF)
  1093|         0|            0|            0|  0.00%|    #
  1094|         0|            0|            0|  0.00%|    # so that for w0 = 0 the secant condition applies for last M iterates, i.e.,
  1095|         0|            0|            0|  0.00%|    #
  1096|         0|            0|            0|  0.00%|    #     J^-1 df_j = dx_j
  1097|         0|            0|            0|  0.00%|    #
  1098|         0|            0|            0|  0.00%|    # for all j = 0 ... M-1.
  1099|         0|            0|            0|  0.00%|    #
  1100|         0|            0|            0|  0.00%|    # Moreover, (from Sherman-Morrison-Woodbury formula)
  1101|         0|            0|            0|  0.00%|    #
  1102|         0|            0|            0|  0.00%|    #    J v ~ [ b I - b^2 C (I + b dF^H A^-1 C)^-1 dF^H ] v
  1103|         0|            0|            0|  0.00%|    #    C   = (dX + alpha dF) A^-1
  1104|         0|            0|            0|  0.00%|    #    b   = -1/alpha
  1105|         0|            0|            0|  0.00%|    #
  1106|         0|            0|            0|  0.00%|    # and after simplification
  1107|         0|            0|            0|  0.00%|    #
  1108|         0|            0|            0|  0.00%|    #    J v ~ -v/alpha + (dX/alpha + dF) (dF^H dX - alpha W)^-1 dF^H v
  1109|         0|            0|            0|  0.00%|    #
  1110|         0|            0|            0|  0.00%|
  1111|         0|            0|            0|  0.00%|    def __init__(self, alpha=None, w0=0.01, M=5):
  1112|         0|            0|            0|  0.00%|        GenericBroyden.__init__(self)
  1113|         0|            0|            0|  0.00%|        self.alpha = alpha
  1114|         0|            0|            0|  0.00%|        self.M = M
  1115|         0|            0|            0|  0.00%|        self.dx = []
  1116|         0|            0|            0|  0.00%|        self.df = []
  1117|         0|            0|            0|  0.00%|        self.gamma = None
  1118|         0|            0|            0|  0.00%|        self.w0 = w0
  1119|         0|            0|            0|  0.00%|
  1120|         0|            0|            0|  0.00%|    def solve(self, f, tol=0):
  1121|         0|            0|            0|  0.00%|        dx = -self.alpha*f
  1122|         0|            0|            0|  0.00%|
  1123|         0|            0|            0|  0.00%|        n = len(self.dx)
  1124|         0|            0|            0|  0.00%|        if n == 0:
  1125|         0|            0|            0|  0.00%|            return dx
  1126|         0|            0|            0|  0.00%|
  1127|         0|            0|            0|  0.00%|        df_f = np.empty(n, dtype=f.dtype)
  1128|         0|            0|            0|  0.00%|        for k in range(n):
  1129|         0|            0|            0|  0.00%|            df_f[k] = vdot(self.df[k], f)
  1130|         0|            0|            0|  0.00%|
  1131|         0|            0|            0|  0.00%|        try:
  1132|         0|            0|            0|  0.00%|            gamma = solve(self.a, df_f)
  1133|         0|            0|            0|  0.00%|        except LinAlgError:
  1134|         0|            0|            0|  0.00%|            # singular; reset the Jacobian approximation
  1135|         0|            0|            0|  0.00%|            del self.dx[:]
  1136|         0|            0|            0|  0.00%|            del self.df[:]
  1137|         0|            0|            0|  0.00%|            return dx
  1138|         0|            0|            0|  0.00%|
  1139|         0|            0|            0|  0.00%|        for m in range(n):
  1140|         0|            0|            0|  0.00%|            dx += gamma[m]*(self.dx[m] + self.alpha*self.df[m])
  1141|         0|            0|            0|  0.00%|        return dx
  1142|         0|            0|            0|  0.00%|
  1143|         0|            0|            0|  0.00%|    def matvec(self, f):
  1144|         0|            0|            0|  0.00%|        dx = -f/self.alpha
  1145|         0|            0|            0|  0.00%|
  1146|         0|            0|            0|  0.00%|        n = len(self.dx)
  1147|         0|            0|            0|  0.00%|        if n == 0:
  1148|         0|            0|            0|  0.00%|            return dx
  1149|         0|            0|            0|  0.00%|
  1150|         0|            0|            0|  0.00%|        df_f = np.empty(n, dtype=f.dtype)
  1151|         0|            0|            0|  0.00%|        for k in range(n):
  1152|         0|            0|            0|  0.00%|            df_f[k] = vdot(self.df[k], f)
  1153|         0|            0|            0|  0.00%|
  1154|         0|            0|            0|  0.00%|        b = np.empty((n, n), dtype=f.dtype)
  1155|         0|            0|            0|  0.00%|        for i in range(n):
  1156|         0|            0|            0|  0.00%|            for j in range(n):
  1157|         0|            0|            0|  0.00%|                b[i,j] = vdot(self.df[i], self.dx[j])
  1158|         0|            0|            0|  0.00%|                if i == j and self.w0 != 0:
  1159|         0|            0|            0|  0.00%|                    b[i,j] -= vdot(self.df[i], self.df[i])*self.w0**2*self.alpha
  1160|         0|            0|            0|  0.00%|        gamma = solve(b, df_f)
  1161|         0|            0|            0|  0.00%|
  1162|         0|            0|            0|  0.00%|        for m in range(n):
  1163|         0|            0|            0|  0.00%|            dx += gamma[m]*(self.df[m] + self.dx[m]/self.alpha)
  1164|         0|            0|            0|  0.00%|        return dx
  1165|         0|            0|            0|  0.00%|
  1166|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
  1167|         0|            0|            0|  0.00%|        if self.M == 0:
  1168|         0|            0|            0|  0.00%|            return
  1169|         0|            0|            0|  0.00%|
  1170|         0|            0|            0|  0.00%|        self.dx.append(dx)
  1171|         0|            0|            0|  0.00%|        self.df.append(df)
  1172|         0|            0|            0|  0.00%|
  1173|         0|            0|            0|  0.00%|        while len(self.dx) > self.M:
  1174|         0|            0|            0|  0.00%|            self.dx.pop(0)
  1175|         0|            0|            0|  0.00%|            self.df.pop(0)
  1176|         0|            0|            0|  0.00%|
  1177|         0|            0|            0|  0.00%|        n = len(self.dx)
  1178|         0|            0|            0|  0.00%|        a = np.zeros((n, n), dtype=f.dtype)
  1179|         0|            0|            0|  0.00%|
  1180|         0|            0|            0|  0.00%|        for i in range(n):
  1181|         0|            0|            0|  0.00%|            for j in range(i, n):
  1182|         0|            0|            0|  0.00%|                if i == j:
  1183|         0|            0|            0|  0.00%|                    wd = self.w0**2
  1184|         0|            0|            0|  0.00%|                else:
  1185|         0|            0|            0|  0.00%|                    wd = 0
  1186|         0|            0|            0|  0.00%|                a[i,j] = (1+wd)*vdot(self.df[i], self.df[j])
  1187|         0|            0|            0|  0.00%|
  1188|         0|            0|            0|  0.00%|        a += np.triu(a, 1).T.conj()
  1189|         0|            0|            0|  0.00%|        self.a = a
  1190|         0|            0|            0|  0.00%|
  1191|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1192|         0|            0|            0|  0.00%|# Simple iterations
  1193|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1194|         0|            0|            0|  0.00%|
  1195|         0|            0|            0|  0.00%|
  1196|         0|            0|            0|  0.00%|class DiagBroyden(GenericBroyden):
  1197|         0|            0|            0|  0.00%|    """
  1198|         0|            0|            0|  0.00%|    Find a root of a function, using diagonal Broyden Jacobian approximation.
  1199|         0|            0|            0|  0.00%|
  1200|         0|            0|            0|  0.00%|    The Jacobian approximation is derived from previous iterations, by
  1201|         0|            0|            0|  0.00%|    retaining only the diagonal of Broyden matrices.
  1202|         0|            0|            0|  0.00%|
  1203|         0|            0|            0|  0.00%|    .. warning::
  1204|         0|            0|            0|  0.00%|
  1205|         0|            0|            0|  0.00%|       This algorithm may be useful for specific problems, but whether
  1206|         0|            0|            0|  0.00%|       it will work may depend strongly on the problem.
  1207|         0|            0|            0|  0.00%|
  1208|         0|            0|            0|  0.00%|    Parameters
  1209|         0|            0|            0|  0.00%|    ----------
  1210|         0|            0|            0|  0.00%|    %(params_basic)s
  1211|         0|            0|            0|  0.00%|    alpha : float, optional
  1212|         0|            0|            0|  0.00%|        Initial guess for the Jacobian is (-1/alpha).
  1213|         0|            0|            0|  0.00%|    %(params_extra)s
  1214|         0|            0|            0|  0.00%|
  1215|         0|            0|            0|  0.00%|    See Also
  1216|         0|            0|            0|  0.00%|    --------
  1217|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1218|         0|            0|            0|  0.00%|           functions. See ``method=='diagbroyden'`` in particular.
  1219|         0|            0|            0|  0.00%|    """
  1220|         0|            0|            0|  0.00%|
  1221|         0|            0|            0|  0.00%|    def __init__(self, alpha=None):
  1222|         0|            0|            0|  0.00%|        GenericBroyden.__init__(self)
  1223|         0|            0|            0|  0.00%|        self.alpha = alpha
  1224|         0|            0|            0|  0.00%|
  1225|         0|            0|            0|  0.00%|    def setup(self, x, F, func):
  1226|         0|            0|            0|  0.00%|        GenericBroyden.setup(self, x, F, func)
  1227|         0|            0|            0|  0.00%|        self.d = np.full((self.shape[0],), 1 / self.alpha, dtype=self.dtype)
  1228|         0|            0|            0|  0.00%|
  1229|         0|            0|            0|  0.00%|    def solve(self, f, tol=0):
  1230|         0|            0|            0|  0.00%|        return -f / self.d
  1231|         0|            0|            0|  0.00%|
  1232|         0|            0|            0|  0.00%|    def matvec(self, f):
  1233|         0|            0|            0|  0.00%|        return -f * self.d
  1234|         0|            0|            0|  0.00%|
  1235|         0|            0|            0|  0.00%|    def rsolve(self, f, tol=0):
  1236|         0|            0|            0|  0.00%|        return -f / self.d.conj()
  1237|         0|            0|            0|  0.00%|
  1238|         0|            0|            0|  0.00%|    def rmatvec(self, f):
  1239|         0|            0|            0|  0.00%|        return -f * self.d.conj()
  1240|         0|            0|            0|  0.00%|
  1241|         0|            0|            0|  0.00%|    def todense(self):
  1242|         0|            0|            0|  0.00%|        return np.diag(-self.d)
  1243|         0|            0|            0|  0.00%|
  1244|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
  1245|         0|            0|            0|  0.00%|        self.d -= (df + self.d*dx)*dx/dx_norm**2
  1246|         0|            0|            0|  0.00%|
  1247|         0|            0|            0|  0.00%|
  1248|         0|            0|            0|  0.00%|class LinearMixing(GenericBroyden):
  1249|         0|            0|            0|  0.00%|    """
  1250|         0|            0|            0|  0.00%|    Find a root of a function, using a scalar Jacobian approximation.
  1251|         0|            0|            0|  0.00%|
  1252|         0|            0|            0|  0.00%|    .. warning::
  1253|         0|            0|            0|  0.00%|
  1254|         0|            0|            0|  0.00%|       This algorithm may be useful for specific problems, but whether
  1255|         0|            0|            0|  0.00%|       it will work may depend strongly on the problem.
  1256|         0|            0|            0|  0.00%|
  1257|         0|            0|            0|  0.00%|    Parameters
  1258|         0|            0|            0|  0.00%|    ----------
  1259|         0|            0|            0|  0.00%|    %(params_basic)s
  1260|         0|            0|            0|  0.00%|    alpha : float, optional
  1261|         0|            0|            0|  0.00%|        The Jacobian approximation is (-1/alpha).
  1262|         0|            0|            0|  0.00%|    %(params_extra)s
  1263|         0|            0|            0|  0.00%|
  1264|         0|            0|            0|  0.00%|    See Also
  1265|         0|            0|            0|  0.00%|    --------
  1266|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1267|         0|            0|            0|  0.00%|           functions. See ``method=='linearmixing'`` in particular.
  1268|         0|            0|            0|  0.00%|
  1269|         0|            0|            0|  0.00%|    """
  1270|         0|            0|            0|  0.00%|
  1271|         0|            0|            0|  0.00%|    def __init__(self, alpha=None):
  1272|         0|            0|            0|  0.00%|        GenericBroyden.__init__(self)
  1273|         0|            0|            0|  0.00%|        self.alpha = alpha
  1274|         0|            0|            0|  0.00%|
  1275|         0|            0|            0|  0.00%|    def solve(self, f, tol=0):
  1276|         0|            0|            0|  0.00%|        return -f*self.alpha
  1277|         0|            0|            0|  0.00%|
  1278|         0|            0|            0|  0.00%|    def matvec(self, f):
  1279|         0|            0|            0|  0.00%|        return -f/self.alpha
  1280|         0|            0|            0|  0.00%|
  1281|         0|            0|            0|  0.00%|    def rsolve(self, f, tol=0):
  1282|         0|            0|            0|  0.00%|        return -f*np.conj(self.alpha)
  1283|         0|            0|            0|  0.00%|
  1284|         0|            0|            0|  0.00%|    def rmatvec(self, f):
  1285|         0|            0|            0|  0.00%|        return -f/np.conj(self.alpha)
  1286|         0|            0|            0|  0.00%|
  1287|         0|            0|            0|  0.00%|    def todense(self):
  1288|         0|            0|            0|  0.00%|        return np.diag(np.full(self.shape[0], -1/self.alpha))
  1289|         0|            0|            0|  0.00%|
  1290|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
  1291|         0|            0|            0|  0.00%|        pass
  1292|         0|            0|            0|  0.00%|
  1293|         0|            0|            0|  0.00%|
  1294|         0|            0|            0|  0.00%|class ExcitingMixing(GenericBroyden):
  1295|         0|            0|            0|  0.00%|    """
  1296|         0|            0|            0|  0.00%|    Find a root of a function, using a tuned diagonal Jacobian approximation.
  1297|         0|            0|            0|  0.00%|
  1298|         0|            0|            0|  0.00%|    The Jacobian matrix is diagonal and is tuned on each iteration.
  1299|         0|            0|            0|  0.00%|
  1300|         0|            0|            0|  0.00%|    .. warning::
  1301|         0|            0|            0|  0.00%|
  1302|         0|            0|            0|  0.00%|       This algorithm may be useful for specific problems, but whether
  1303|         0|            0|            0|  0.00%|       it will work may depend strongly on the problem.
  1304|         0|            0|            0|  0.00%|
  1305|         0|            0|            0|  0.00%|    See Also
  1306|         0|            0|            0|  0.00%|    --------
  1307|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1308|         0|            0|            0|  0.00%|           functions. See ``method=='excitingmixing'`` in particular.
  1309|         0|            0|            0|  0.00%|
  1310|         0|            0|            0|  0.00%|    Parameters
  1311|         0|            0|            0|  0.00%|    ----------
  1312|         0|            0|            0|  0.00%|    %(params_basic)s
  1313|         0|            0|            0|  0.00%|    alpha : float, optional
  1314|         0|            0|            0|  0.00%|        Initial Jacobian approximation is (-1/alpha).
  1315|         0|            0|            0|  0.00%|    alphamax : float, optional
  1316|         0|            0|            0|  0.00%|        The entries of the diagonal Jacobian are kept in the range
  1317|         0|            0|            0|  0.00%|        ``[alpha, alphamax]``.
  1318|         0|            0|            0|  0.00%|    %(params_extra)s
  1319|         0|            0|            0|  0.00%|    """
  1320|         0|            0|            0|  0.00%|
  1321|         0|            0|            0|  0.00%|    def __init__(self, alpha=None, alphamax=1.0):
  1322|         0|            0|            0|  0.00%|        GenericBroyden.__init__(self)
  1323|         0|            0|            0|  0.00%|        self.alpha = alpha
  1324|         0|            0|            0|  0.00%|        self.alphamax = alphamax
  1325|         0|            0|            0|  0.00%|        self.beta = None
  1326|         0|            0|            0|  0.00%|
  1327|         0|            0|            0|  0.00%|    def setup(self, x, F, func):
  1328|         0|            0|            0|  0.00%|        GenericBroyden.setup(self, x, F, func)
  1329|         0|            0|            0|  0.00%|        self.beta = np.full((self.shape[0],), self.alpha, dtype=self.dtype)
  1330|         0|            0|            0|  0.00%|
  1331|         0|            0|            0|  0.00%|    def solve(self, f, tol=0):
  1332|         0|            0|            0|  0.00%|        return -f*self.beta
  1333|         0|            0|            0|  0.00%|
  1334|         0|            0|            0|  0.00%|    def matvec(self, f):
  1335|         0|            0|            0|  0.00%|        return -f/self.beta
  1336|         0|            0|            0|  0.00%|
  1337|         0|            0|            0|  0.00%|    def rsolve(self, f, tol=0):
  1338|         0|            0|            0|  0.00%|        return -f*self.beta.conj()
  1339|         0|            0|            0|  0.00%|
  1340|         0|            0|            0|  0.00%|    def rmatvec(self, f):
  1341|         0|            0|            0|  0.00%|        return -f/self.beta.conj()
  1342|         0|            0|            0|  0.00%|
  1343|         0|            0|            0|  0.00%|    def todense(self):
  1344|         0|            0|            0|  0.00%|        return np.diag(-1/self.beta)
  1345|         0|            0|            0|  0.00%|
  1346|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
  1347|         0|            0|            0|  0.00%|        incr = f*self.last_f > 0
  1348|         0|            0|            0|  0.00%|        self.beta[incr] += self.alpha
  1349|         0|            0|            0|  0.00%|        self.beta[~incr] = self.alpha
  1350|         0|            0|            0|  0.00%|        np.clip(self.beta, 0, self.alphamax, out=self.beta)
  1351|         0|            0|            0|  0.00%|
  1352|         0|            0|            0|  0.00%|
  1353|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1354|         0|            0|            0|  0.00%|# Iterative/Krylov approximated Jacobians
  1355|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1356|         0|            0|            0|  0.00%|
  1357|         0|            0|            0|  0.00%|class KrylovJacobian(Jacobian):
  1358|         0|            0|            0|  0.00%|    r"""
  1359|         0|            0|            0|  0.00%|    Find a root of a function, using Krylov approximation for inverse Jacobian.
  1360|         0|            0|            0|  0.00%|
  1361|         0|            0|            0|  0.00%|    This method is suitable for solving large-scale problems.
  1362|         0|            0|            0|  0.00%|
  1363|         0|            0|            0|  0.00%|    Parameters
  1364|         0|            0|            0|  0.00%|    ----------
  1365|         0|            0|            0|  0.00%|    %(params_basic)s
  1366|         0|            0|            0|  0.00%|    rdiff : float, optional
  1367|         0|            0|            0|  0.00%|        Relative step size to use in numerical differentiation.
  1368|         0|            0|            0|  0.00%|    method : {'lgmres', 'gmres', 'bicgstab', 'cgs', 'minres'} or function
  1369|         0|            0|            0|  0.00%|        Krylov method to use to approximate the Jacobian.
  1370|         0|            0|            0|  0.00%|        Can be a string, or a function implementing the same interface as
  1371|         0|            0|            0|  0.00%|        the iterative solvers in `scipy.sparse.linalg`.
  1372|         0|            0|            0|  0.00%|
  1373|         0|            0|            0|  0.00%|        The default is `scipy.sparse.linalg.lgmres`.
  1374|         0|            0|            0|  0.00%|    inner_maxiter : int, optional
  1375|         0|            0|            0|  0.00%|        Parameter to pass to the "inner" Krylov solver: maximum number of
  1376|         0|            0|            0|  0.00%|        iterations. Iteration will stop after maxiter steps even if the
  1377|         0|            0|            0|  0.00%|        specified tolerance has not been achieved.
  1378|         0|            0|            0|  0.00%|    inner_M : LinearOperator or InverseJacobian
  1379|         0|            0|            0|  0.00%|        Preconditioner for the inner Krylov iteration.
  1380|         0|            0|            0|  0.00%|        Note that you can use also inverse Jacobians as (adaptive)
  1381|         0|            0|            0|  0.00%|        preconditioners. For example,
  1382|         0|            0|            0|  0.00%|
  1383|         0|            0|            0|  0.00%|        >>> from scipy.optimize.nonlin import BroydenFirst, KrylovJacobian
  1384|         0|            0|            0|  0.00%|        >>> from scipy.optimize.nonlin import InverseJacobian
  1385|         0|            0|            0|  0.00%|        >>> jac = BroydenFirst()
  1386|         0|            0|            0|  0.00%|        >>> kjac = KrylovJacobian(inner_M=InverseJacobian(jac))
  1387|         0|            0|            0|  0.00%|
  1388|         0|            0|            0|  0.00%|        If the preconditioner has a method named 'update', it will be called
  1389|         0|            0|            0|  0.00%|        as ``update(x, f)`` after each nonlinear step, with ``x`` giving
  1390|         0|            0|            0|  0.00%|        the current point, and ``f`` the current function value.
  1391|         0|            0|            0|  0.00%|    outer_k : int, optional
  1392|         0|            0|            0|  0.00%|        Size of the subspace kept across LGMRES nonlinear iterations.
  1393|         0|            0|            0|  0.00%|        See `scipy.sparse.linalg.lgmres` for details.
  1394|         0|            0|            0|  0.00%|    inner_kwargs : kwargs
  1395|         0|            0|            0|  0.00%|        Keyword parameters for the "inner" Krylov solver
  1396|         0|            0|            0|  0.00%|        (defined with `method`). Parameter names must start with
  1397|         0|            0|            0|  0.00%|        the `inner_` prefix which will be stripped before passing on
  1398|         0|            0|            0|  0.00%|        the inner method. See, e.g., `scipy.sparse.linalg.gmres` for details.
  1399|         0|            0|            0|  0.00%|    %(params_extra)s
  1400|         0|            0|            0|  0.00%|
  1401|         0|            0|            0|  0.00%|    See Also
  1402|         0|            0|            0|  0.00%|    --------
  1403|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1404|         0|            0|            0|  0.00%|           functions. See ``method=='krylov'`` in particular.
  1405|         0|            0|            0|  0.00%|    scipy.sparse.linalg.gmres
  1406|         0|            0|            0|  0.00%|    scipy.sparse.linalg.lgmres
  1407|         0|            0|            0|  0.00%|
  1408|         0|            0|            0|  0.00%|    Notes
  1409|         0|            0|            0|  0.00%|    -----
  1410|         0|            0|            0|  0.00%|    This function implements a Newton-Krylov solver. The basic idea is
  1411|         0|            0|            0|  0.00%|    to compute the inverse of the Jacobian with an iterative Krylov
  1412|         0|            0|            0|  0.00%|    method. These methods require only evaluating the Jacobian-vector
  1413|         0|            0|            0|  0.00%|    products, which are conveniently approximated by a finite difference:
  1414|         0|            0|            0|  0.00%|
  1415|         0|            0|            0|  0.00%|    .. math:: J v \approx (f(x + \omega*v/|v|) - f(x)) / \omega
  1416|         0|            0|            0|  0.00%|
  1417|         0|            0|            0|  0.00%|    Due to the use of iterative matrix inverses, these methods can
  1418|         0|            0|            0|  0.00%|    deal with large nonlinear problems.
  1419|         0|            0|            0|  0.00%|
  1420|         0|            0|            0|  0.00%|    SciPy's `scipy.sparse.linalg` module offers a selection of Krylov
  1421|         0|            0|            0|  0.00%|    solvers to choose from. The default here is `lgmres`, which is a
  1422|         0|            0|            0|  0.00%|    variant of restarted GMRES iteration that reuses some of the
  1423|         0|            0|            0|  0.00%|    information obtained in the previous Newton steps to invert
  1424|         0|            0|            0|  0.00%|    Jacobians in subsequent steps.
  1425|         0|            0|            0|  0.00%|
  1426|         0|            0|            0|  0.00%|    For a review on Newton-Krylov methods, see for example [1]_,
  1427|         0|            0|            0|  0.00%|    and for the LGMRES sparse inverse method, see [2]_.
  1428|         0|            0|            0|  0.00%|
  1429|         0|            0|            0|  0.00%|    References
  1430|         0|            0|            0|  0.00%|    ----------
  1431|         0|            0|            0|  0.00%|    .. [1] D.A. Knoll and D.E. Keyes, J. Comp. Phys. 193, 357 (2004).
  1432|         0|            0|            0|  0.00%|           :doi:`10.1016/j.jcp.2003.08.010`
  1433|         0|            0|            0|  0.00%|    .. [2] A.H. Baker and E.R. Jessup and T. Manteuffel,
  1434|         0|            0|            0|  0.00%|           SIAM J. Matrix Anal. Appl. 26, 962 (2005).
  1435|         0|            0|            0|  0.00%|           :doi:`10.1137/S0895479803422014`
  1436|         0|            0|            0|  0.00%|
  1437|         0|            0|            0|  0.00%|    """
  1438|         0|            0|            0|  0.00%|
  1439|         0|            0|            0|  0.00%|    def __init__(self, rdiff=None, method='lgmres', inner_maxiter=20,
  1440|         0|            0|            0|  0.00%|                 inner_M=None, outer_k=10, **kw):
  1441|         0|            0|            0|  0.00%|        self.preconditioner = inner_M
  1442|         0|            0|            0|  0.00%|        self.rdiff = rdiff
  1443|         0|            0|            0|  0.00%|        self.method = dict(
  1444|         0|            0|            0|  0.00%|            bicgstab=scipy.sparse.linalg.bicgstab,
  1445|         0|            0|            0|  0.00%|            gmres=scipy.sparse.linalg.gmres,
  1446|         0|            0|            0|  0.00%|            lgmres=scipy.sparse.linalg.lgmres,
  1447|         0|            0|            0|  0.00%|            cgs=scipy.sparse.linalg.cgs,
  1448|         0|            0|            0|  0.00%|            minres=scipy.sparse.linalg.minres,
  1449|         0|            0|            0|  0.00%|            ).get(method, method)
  1450|         0|            0|            0|  0.00%|
  1451|         0|            0|            0|  0.00%|        self.method_kw = dict(maxiter=inner_maxiter, M=self.preconditioner)
  1452|         0|            0|            0|  0.00%|
  1453|         0|            0|            0|  0.00%|        if self.method is scipy.sparse.linalg.gmres:
  1454|         0|            0|            0|  0.00%|            # Replace GMRES's outer iteration with Newton steps
  1455|         0|            0|            0|  0.00%|            self.method_kw['restrt'] = inner_maxiter
  1456|         0|            0|            0|  0.00%|            self.method_kw['maxiter'] = 1
  1457|         0|            0|            0|  0.00%|            self.method_kw.setdefault('atol', 0)
  1458|         0|            0|            0|  0.00%|        elif self.method is scipy.sparse.linalg.gcrotmk:
  1459|         0|            0|            0|  0.00%|            self.method_kw.setdefault('atol', 0)
  1460|         0|            0|            0|  0.00%|        elif self.method is scipy.sparse.linalg.lgmres:
  1461|         0|            0|            0|  0.00%|            self.method_kw['outer_k'] = outer_k
  1462|         0|            0|            0|  0.00%|            # Replace LGMRES's outer iteration with Newton steps
  1463|         0|            0|            0|  0.00%|            self.method_kw['maxiter'] = 1
  1464|         0|            0|            0|  0.00%|            # Carry LGMRES's `outer_v` vectors across nonlinear iterations
  1465|         0|            0|            0|  0.00%|            self.method_kw.setdefault('outer_v', [])
  1466|         0|            0|            0|  0.00%|            self.method_kw.setdefault('prepend_outer_v', True)
  1467|         0|            0|            0|  0.00%|            # But don't carry the corresponding Jacobian*v products, in case
  1468|         0|            0|            0|  0.00%|            # the Jacobian changes a lot in the nonlinear step
  1469|         0|            0|            0|  0.00%|            #
  1470|         0|            0|            0|  0.00%|            # XXX: some trust-region inspired ideas might be more efficient...
  1471|         0|            0|            0|  0.00%|            #      See e.g., Brown & Saad. But needs to be implemented separately
  1472|         0|            0|            0|  0.00%|            #      since it's not an inexact Newton method.
  1473|         0|            0|            0|  0.00%|            self.method_kw.setdefault('store_outer_Av', False)
  1474|         0|            0|            0|  0.00%|            self.method_kw.setdefault('atol', 0)
  1475|         0|            0|            0|  0.00%|
  1476|         0|            0|            0|  0.00%|        for key, value in kw.items():
  1477|         0|            0|            0|  0.00%|            if not key.startswith('inner_'):
  1478|         0|            0|            0|  0.00%|                raise ValueError("Unknown parameter %s" % key)
  1479|         0|            0|            0|  0.00%|            self.method_kw[key[6:]] = value
  1480|         0|            0|            0|  0.00%|
  1481|         0|            0|            0|  0.00%|    def _update_diff_step(self):
  1482|         0|            0|            0|  0.00%|        mx = abs(self.x0).max()
  1483|         0|            0|            0|  0.00%|        mf = abs(self.f0).max()
  1484|         0|            0|            0|  0.00%|        self.omega = self.rdiff * max(1, mx) / max(1, mf)
  1485|         0|            0|            0|  0.00%|
  1486|         0|            0|            0|  0.00%|    def matvec(self, v):
  1487|         0|            0|            0|  0.00%|        nv = norm(v)
  1488|         0|            0|            0|  0.00%|        if nv == 0:
  1489|         0|            0|            0|  0.00%|            return 0*v
  1490|         0|            0|            0|  0.00%|        sc = self.omega / nv
  1491|         0|            0|            0|  0.00%|        r = (self.func(self.x0 + sc*v) - self.f0) / sc
  1492|         0|            0|            0|  0.00%|        if not np.all(np.isfinite(r)) and np.all(np.isfinite(v)):
  1493|         0|            0|            0|  0.00%|            raise ValueError('Function returned non-finite results')
  1494|         0|            0|            0|  0.00%|        return r
  1495|         0|            0|            0|  0.00%|
  1496|         0|            0|            0|  0.00%|    def solve(self, rhs, tol=0):
  1497|         0|            0|            0|  0.00%|        if 'tol' in self.method_kw:
  1498|         0|            0|            0|  0.00%|            sol, info = self.method(self.op, rhs, **self.method_kw)
  1499|         0|            0|            0|  0.00%|        else:
  1500|         0|            0|            0|  0.00%|            sol, info = self.method(self.op, rhs, tol=tol, **self.method_kw)
  1501|         0|            0|            0|  0.00%|        return sol
  1502|         0|            0|            0|  0.00%|
  1503|         0|            0|            0|  0.00%|    def update(self, x, f):
  1504|         0|            0|            0|  0.00%|        self.x0 = x
  1505|         0|            0|            0|  0.00%|        self.f0 = f
  1506|         0|            0|            0|  0.00%|        self._update_diff_step()
  1507|         0|            0|            0|  0.00%|
  1508|         0|            0|            0|  0.00%|        # Update also the preconditioner, if possible
  1509|         0|            0|            0|  0.00%|        if self.preconditioner is not None:
  1510|         0|            0|            0|  0.00%|            if hasattr(self.preconditioner, 'update'):
  1511|         0|            0|            0|  0.00%|                self.preconditioner.update(x, f)
  1512|         0|            0|            0|  0.00%|
  1513|         0|            0|            0|  0.00%|    def setup(self, x, f, func):
  1514|         0|            0|            0|  0.00%|        Jacobian.setup(self, x, f, func)
  1515|         0|            0|            0|  0.00%|        self.x0 = x
  1516|         0|            0|            0|  0.00%|        self.f0 = f
  1517|         0|            0|            0|  0.00%|        self.op = scipy.sparse.linalg.aslinearoperator(self)
  1518|         0|            0|            0|  0.00%|
  1519|         0|            0|            0|  0.00%|        if self.rdiff is None:
  1520|         0|            0|            0|  0.00%|            self.rdiff = np.finfo(x.dtype).eps ** (1./2)
  1521|         0|            0|            0|  0.00%|
  1522|         0|            0|            0|  0.00%|        self._update_diff_step()
  1523|         0|            0|            0|  0.00%|
  1524|         0|            0|            0|  0.00%|        # Setup also the preconditioner, if possible
  1525|         0|            0|            0|  0.00%|        if self.preconditioner is not None:
  1526|         0|            0|            0|  0.00%|            if hasattr(self.preconditioner, 'setup'):
  1527|         0|            0|            0|  0.00%|                self.preconditioner.setup(x, f, func)
  1528|         0|            0|            0|  0.00%|
  1529|         0|            0|            0|  0.00%|
  1530|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1531|         0|            0|            0|  0.00%|# Wrapper functions
  1532|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1533|         0|            0|            0|  0.00%|
  1534|         0|            0|            0|  0.00%|def _nonlin_wrapper(name, jac):
  1535|         0|            0|            0|  0.00%|    """
  1536|         0|            0|            0|  0.00%|    Construct a solver wrapper with given name and Jacobian approx.
  1537|         0|            0|            0|  0.00%|
  1538|         0|            0|            0|  0.00%|    It inspects the keyword arguments of ``jac.__init__``, and allows to
  1539|         0|            0|            0|  0.00%|    use the same arguments in the wrapper function, in addition to the
  1540|         0|            0|            0|  0.00%|    keyword arguments of `nonlin_solve`
  1541|         0|            0|            0|  0.00%|
  1542|         0|            0|            0|  0.00%|    """
  1543|         0|            0|            0|  0.00%|    signature = _getfullargspec(jac.__init__)
  1544|         0|            0|            0|  0.00%|    args, varargs, varkw, defaults, kwonlyargs, kwdefaults, _ = signature
  1545|         0|            0|            0|  0.00%|    kwargs = list(zip(args[-len(defaults):], defaults))
  1546|         0|            0|            0|  0.00%|    kw_str = ", ".join(["%s=%r" % (k, v) for k, v in kwargs])
  1547|         0|            0|            0|  0.00%|    if kw_str:
  1548|         0|            0|            0|  0.00%|        kw_str = ", " + kw_str
  1549|         0|            0|            0|  0.00%|    kwkw_str = ", ".join(["%s=%s" % (k, k) for k, v in kwargs])
  1550|         0|            0|            0|  0.00%|    if kwkw_str:
  1551|         0|            0|            0|  0.00%|        kwkw_str = kwkw_str + ", "
  1552|         0|            0|            0|  0.00%|    if kwonlyargs:
  1553|         0|            0|            0|  0.00%|        raise ValueError('Unexpected signature %s' % signature)
  1554|         0|            0|            0|  0.00%|
  1555|         0|            0|            0|  0.00%|    # Construct the wrapper function so that its keyword arguments
  1556|         0|            0|            0|  0.00%|    # are visible in pydoc.help etc.
  1557|         0|            0|            0|  0.00%|    wrapper = """
  1558|         0|            0|            0|  0.00%|def %(name)s(F, xin, iter=None %(kw)s, verbose=False, maxiter=None,
  1559|         0|            0|            0|  0.00%|             f_tol=None, f_rtol=None, x_tol=None, x_rtol=None,
  1560|         0|            0|            0|  0.00%|             tol_norm=None, line_search='armijo', callback=None, **kw):
  1561|         0|            0|            0|  0.00%|    jac = %(jac)s(%(kwkw)s **kw)
  1562|         0|            0|            0|  0.00%|    return nonlin_solve(F, xin, jac, iter, verbose, maxiter,
  1563|         0|            0|            0|  0.00%|                        f_tol, f_rtol, x_tol, x_rtol, tol_norm, line_search,
  1564|         0|            0|            0|  0.00%|                        callback)
  1565|         0|            0|            0|  0.00%|"""
  1566|         0|            0|            0|  0.00%|
  1567|         0|            0|            0|  0.00%|    wrapper = wrapper % dict(name=name, kw=kw_str, jac=jac.__name__,
  1568|         0|            0|            0|  0.00%|                             kwkw=kwkw_str)
  1569|         0|            0|            0|  0.00%|    ns = {}
  1570|         0|            0|            0|  0.00%|    ns.update(globals())
  1571|         0|            0|            0|  0.00%|    exec(wrapper, ns)
  1572|         0|            0|            0|  0.00%|    func = ns[name]
  1573|         0|            0|            0|  0.00%|    func.__doc__ = jac.__doc__
  1574|         0|            0|            0|  0.00%|    _set_doc(func)
  1575|         0|            0|            0|  0.00%|    return func
  1576|         0|            0|            0|  0.00%|
  1577|         0|            0|            0|  0.00%|
  1578|         0|            0|            0|  0.00%|broyden1 = _nonlin_wrapper('broyden1', BroydenFirst)
  1579|         0|            0|            0|  0.00%|broyden2 = _nonlin_wrapper('broyden2', BroydenSecond)
  1580|         0|            0|            0|  0.00%|anderson = _nonlin_wrapper('anderson', Anderson)
  1581|         0|            0|            0|  0.00%|linearmixing = _nonlin_wrapper('linearmixing', LinearMixing)
  1582|         0|            0|            0|  0.00%|diagbroyden = _nonlin_wrapper('diagbroyden', DiagBroyden)
  1583|         0|            0|            0|  0.00%|excitingmixing = _nonlin_wrapper('excitingmixing', ExcitingMixing)
  1584|         0|            0|            0|  0.00%|newton_krylov = _nonlin_wrapper('newton_krylov', KrylovJacobian)
File: <string>_278
File duration: 2.26498e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.26498e-05|  1.13249e-05|  0.00%|
File: <string>_119
File duration: 2.26498e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.26498e-05|  1.13249e-05|  0.00%|
File: <string>_326
File duration: 2.26498e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.26498e-05|  1.13249e-05|  0.00%|
File: <string>_303
File duration: 2.26498e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.26498e-05|  1.13249e-05|  0.00%|
File: <string>_328
File duration: 2.24113e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.24113e-05|  1.12057e-05|  0.00%|
File: <string>_146
File duration: 2.24113e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.24113e-05|  1.12057e-05|  0.00%|
(call)|         1|  9.77516e-06|  9.77516e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/jit/annotations.py:48 __getitem__
File: <string>_34
File duration: 2.24113e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.24113e-05|  1.12057e-05|  0.00%|
File: <string>_297
File duration: 2.21729e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.21729e-05|  1.10865e-05|  0.00%|
File: <string>_151
File duration: 2.21729e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|r"""
     2|         1|  9.05991e-06|  9.05991e-06|  0.00%|
     3|         0|            0|            0|  0.00%|Nonlinear solvers
     4|         1|   1.3113e-05|   1.3113e-05|  0.00%|-----------------
     5|         0|            0|            0|  0.00%|
     6|         0|            0|            0|  0.00%|.. currentmodule:: scipy.optimize
     7|         0|            0|            0|  0.00%|
     8|         0|            0|            0|  0.00%|This is a collection of general-purpose nonlinear multidimensional
     9|         0|            0|            0|  0.00%|solvers. These solvers find *x* for which *F(x) = 0*. Both *x*
    10|         0|            0|            0|  0.00%|and *F* can be multidimensional.
    11|         0|            0|            0|  0.00%|
    12|         0|            0|            0|  0.00%|Routines
    13|         0|            0|            0|  0.00%|~~~~~~~~
    14|         0|            0|            0|  0.00%|
    15|         0|            0|            0|  0.00%|Large-scale nonlinear solvers:
    16|         0|            0|            0|  0.00%|
    17|         0|            0|            0|  0.00%|.. autosummary::
    18|         0|            0|            0|  0.00%|
    19|         0|            0|            0|  0.00%|   newton_krylov
    20|         0|            0|            0|  0.00%|   anderson
    21|         0|            0|            0|  0.00%|
    22|         0|            0|            0|  0.00%|General nonlinear solvers:
    23|         0|            0|            0|  0.00%|
    24|         0|            0|            0|  0.00%|.. autosummary::
    25|         0|            0|            0|  0.00%|
    26|         0|            0|            0|  0.00%|   broyden1
    27|         0|            0|            0|  0.00%|   broyden2
    28|         0|            0|            0|  0.00%|
    29|         0|            0|            0|  0.00%|Simple iterations:
    30|         0|            0|            0|  0.00%|
    31|         0|            0|            0|  0.00%|.. autosummary::
    32|         0|            0|            0|  0.00%|
    33|         0|            0|            0|  0.00%|   excitingmixing
    34|         0|            0|            0|  0.00%|   linearmixing
    35|         0|            0|            0|  0.00%|   diagbroyden
    36|         0|            0|            0|  0.00%|
    37|         0|            0|            0|  0.00%|
    38|         0|            0|            0|  0.00%|Examples
    39|         0|            0|            0|  0.00%|~~~~~~~~
    40|         0|            0|            0|  0.00%|
    41|         0|            0|            0|  0.00%|**Small problem**
    42|         0|            0|            0|  0.00%|
    43|         0|            0|            0|  0.00%|>>> def F(x):
    44|         0|            0|            0|  0.00%|...    return np.cos(x) + x[::-1] - [1, 2, 3, 4]
    45|         0|            0|            0|  0.00%|>>> import scipy.optimize
    46|         0|            0|            0|  0.00%|>>> x = scipy.optimize.broyden1(F, [1,1,1,1], f_tol=1e-14)
    47|         0|            0|            0|  0.00%|>>> x
    48|         0|            0|            0|  0.00%|array([ 4.04674914,  3.91158389,  2.71791677,  1.61756251])
    49|         0|            0|            0|  0.00%|>>> np.cos(x) + x[::-1]
    50|         0|            0|            0|  0.00%|array([ 1.,  2.,  3.,  4.])
    51|         0|            0|            0|  0.00%|
    52|         0|            0|            0|  0.00%|
    53|         0|            0|            0|  0.00%|**Large problem**
    54|         0|            0|            0|  0.00%|
    55|         0|            0|            0|  0.00%|Suppose that we needed to solve the following integrodifferential
    56|         0|            0|            0|  0.00%|equation on the square :math:`[0,1]\times[0,1]`:
    57|         0|            0|            0|  0.00%|
    58|         0|            0|            0|  0.00%|.. math::
    59|         0|            0|            0|  0.00%|
    60|         0|            0|            0|  0.00%|   \nabla^2 P = 10 \left(\int_0^1\int_0^1\cosh(P)\,dx\,dy\right)^2
    61|         0|            0|            0|  0.00%|
    62|         0|            0|            0|  0.00%|with :math:`P(x,1) = 1` and :math:`P=0` elsewhere on the boundary of
    63|         0|            0|            0|  0.00%|the square.
    64|         0|            0|            0|  0.00%|
    65|         0|            0|            0|  0.00%|The solution can be found using the `newton_krylov` solver:
    66|         0|            0|            0|  0.00%|
    67|         0|            0|            0|  0.00%|.. plot::
    68|         0|            0|            0|  0.00%|
    69|         0|            0|            0|  0.00%|   import numpy as np
    70|         0|            0|            0|  0.00%|   from scipy.optimize import newton_krylov
    71|         0|            0|            0|  0.00%|   from numpy import cosh, zeros_like, mgrid, zeros
    72|         0|            0|            0|  0.00%|
    73|         0|            0|            0|  0.00%|   # parameters
    74|         0|            0|            0|  0.00%|   nx, ny = 75, 75
    75|         0|            0|            0|  0.00%|   hx, hy = 1./(nx-1), 1./(ny-1)
    76|         0|            0|            0|  0.00%|
    77|         0|            0|            0|  0.00%|   P_left, P_right = 0, 0
    78|         0|            0|            0|  0.00%|   P_top, P_bottom = 1, 0
    79|         0|            0|            0|  0.00%|
    80|         0|            0|            0|  0.00%|   def residual(P):
    81|         0|            0|            0|  0.00%|       d2x = zeros_like(P)
    82|         0|            0|            0|  0.00%|       d2y = zeros_like(P)
    83|         0|            0|            0|  0.00%|
    84|         0|            0|            0|  0.00%|       d2x[1:-1] = (P[2:]   - 2*P[1:-1] + P[:-2]) / hx/hx
    85|         0|            0|            0|  0.00%|       d2x[0]    = (P[1]    - 2*P[0]    + P_left)/hx/hx
    86|         0|            0|            0|  0.00%|       d2x[-1]   = (P_right - 2*P[-1]   + P[-2])/hx/hx
    87|         0|            0|            0|  0.00%|
    88|         0|            0|            0|  0.00%|       d2y[:,1:-1] = (P[:,2:] - 2*P[:,1:-1] + P[:,:-2])/hy/hy
    89|         0|            0|            0|  0.00%|       d2y[:,0]    = (P[:,1]  - 2*P[:,0]    + P_bottom)/hy/hy
    90|         0|            0|            0|  0.00%|       d2y[:,-1]   = (P_top   - 2*P[:,-1]   + P[:,-2])/hy/hy
    91|         0|            0|            0|  0.00%|
    92|         0|            0|            0|  0.00%|       return d2x + d2y - 10*cosh(P).mean()**2
    93|         0|            0|            0|  0.00%|
    94|         0|            0|            0|  0.00%|   # solve
    95|         0|            0|            0|  0.00%|   guess = zeros((nx, ny), float)
    96|         0|            0|            0|  0.00%|   sol = newton_krylov(residual, guess, method='lgmres', verbose=1)
    97|         0|            0|            0|  0.00%|   print('Residual: %g' % abs(residual(sol)).max())
    98|         0|            0|            0|  0.00%|
    99|         0|            0|            0|  0.00%|   # visualize
   100|         0|            0|            0|  0.00%|   import matplotlib.pyplot as plt
   101|         0|            0|            0|  0.00%|   x, y = mgrid[0:1:(nx*1j), 0:1:(ny*1j)]
   102|         0|            0|            0|  0.00%|   plt.pcolormesh(x, y, sol, shading='gouraud')
   103|         0|            0|            0|  0.00%|   plt.colorbar()
   104|         0|            0|            0|  0.00%|   plt.show()
   105|         0|            0|            0|  0.00%|
   106|         0|            0|            0|  0.00%|"""
   107|         0|            0|            0|  0.00%|# Copyright (C) 2009, Pauli Virtanen <pav@iki.fi>
   108|         0|            0|            0|  0.00%|# Distributed under the same license as SciPy.
   109|         0|            0|            0|  0.00%|
   110|         0|            0|            0|  0.00%|import sys
   111|         0|            0|            0|  0.00%|import numpy as np
   112|         0|            0|            0|  0.00%|from scipy.linalg import norm, solve, inv, qr, svd, LinAlgError
   113|         0|            0|            0|  0.00%|from numpy import asarray, dot, vdot
   114|         0|            0|            0|  0.00%|import scipy.sparse.linalg
   115|         0|            0|            0|  0.00%|import scipy.sparse
   116|         0|            0|            0|  0.00%|from scipy.linalg import get_blas_funcs
   117|         0|            0|            0|  0.00%|import inspect
   118|         0|            0|            0|  0.00%|from scipy._lib._util import getfullargspec_no_self as _getfullargspec
   119|         0|            0|            0|  0.00%|from .linesearch import scalar_search_wolfe1, scalar_search_armijo
   120|         0|            0|            0|  0.00%|
   121|         0|            0|            0|  0.00%|
   122|         0|            0|            0|  0.00%|__all__ = [
   123|         0|            0|            0|  0.00%|    'broyden1', 'broyden2', 'anderson', 'linearmixing',
   124|         0|            0|            0|  0.00%|    'diagbroyden', 'excitingmixing', 'newton_krylov']
   125|         0|            0|            0|  0.00%|
   126|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   127|         0|            0|            0|  0.00%|# Utility functions
   128|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   129|         0|            0|            0|  0.00%|
   130|         0|            0|            0|  0.00%|
   131|         0|            0|            0|  0.00%|class NoConvergence(Exception):
   132|         0|            0|            0|  0.00%|    pass
   133|         0|            0|            0|  0.00%|
   134|         0|            0|            0|  0.00%|
   135|         0|            0|            0|  0.00%|def maxnorm(x):
   136|         0|            0|            0|  0.00%|    return np.absolute(x).max()
   137|         0|            0|            0|  0.00%|
   138|         0|            0|            0|  0.00%|
   139|         0|            0|            0|  0.00%|def _as_inexact(x):
   140|         0|            0|            0|  0.00%|    """Return `x` as an array, of either floats or complex floats"""
   141|         0|            0|            0|  0.00%|    x = asarray(x)
   142|         0|            0|            0|  0.00%|    if not np.issubdtype(x.dtype, np.inexact):
   143|         0|            0|            0|  0.00%|        return asarray(x, dtype=np.float_)
   144|         0|            0|            0|  0.00%|    return x
   145|         0|            0|            0|  0.00%|
   146|         0|            0|            0|  0.00%|
   147|         0|            0|            0|  0.00%|def _array_like(x, x0):
   148|         0|            0|            0|  0.00%|    """Return ndarray `x` as same array subclass and shape as `x0`"""
   149|         0|            0|            0|  0.00%|    x = np.reshape(x, np.shape(x0))
   150|         0|            0|            0|  0.00%|    wrap = getattr(x0, '__array_wrap__', x.__array_wrap__)
   151|         0|            0|            0|  0.00%|    return wrap(x)
   152|         0|            0|            0|  0.00%|
   153|         0|            0|            0|  0.00%|
   154|         0|            0|            0|  0.00%|def _safe_norm(v):
   155|         0|            0|            0|  0.00%|    if not np.isfinite(v).all():
   156|         0|            0|            0|  0.00%|        return np.array(np.inf)
   157|         0|            0|            0|  0.00%|    return norm(v)
   158|         0|            0|            0|  0.00%|
   159|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   160|         0|            0|            0|  0.00%|# Generic nonlinear solver machinery
   161|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   162|         0|            0|            0|  0.00%|
   163|         0|            0|            0|  0.00%|
   164|         0|            0|            0|  0.00%|_doc_parts = dict(
   165|         0|            0|            0|  0.00%|    params_basic="""
   166|         0|            0|            0|  0.00%|    F : function(x) -> f
   167|         0|            0|            0|  0.00%|        Function whose root to find; should take and return an array-like
   168|         0|            0|            0|  0.00%|        object.
   169|         0|            0|            0|  0.00%|    xin : array_like
   170|         0|            0|            0|  0.00%|        Initial guess for the solution
   171|         0|            0|            0|  0.00%|    """.strip(),
   172|         0|            0|            0|  0.00%|    params_extra="""
   173|         0|            0|            0|  0.00%|    iter : int, optional
   174|         0|            0|            0|  0.00%|        Number of iterations to make. If omitted (default), make as many
   175|         0|            0|            0|  0.00%|        as required to meet tolerances.
   176|         0|            0|            0|  0.00%|    verbose : bool, optional
   177|         0|            0|            0|  0.00%|        Print status to stdout on every iteration.
   178|         0|            0|            0|  0.00%|    maxiter : int, optional
   179|         0|            0|            0|  0.00%|        Maximum number of iterations to make. If more are needed to
   180|         0|            0|            0|  0.00%|        meet convergence, `NoConvergence` is raised.
   181|         0|            0|            0|  0.00%|    f_tol : float, optional
   182|         0|            0|            0|  0.00%|        Absolute tolerance (in max-norm) for the residual.
   183|         0|            0|            0|  0.00%|        If omitted, default is 6e-6.
   184|         0|            0|            0|  0.00%|    f_rtol : float, optional
   185|         0|            0|            0|  0.00%|        Relative tolerance for the residual. If omitted, not used.
   186|         0|            0|            0|  0.00%|    x_tol : float, optional
   187|         0|            0|            0|  0.00%|        Absolute minimum step size, as determined from the Jacobian
   188|         0|            0|            0|  0.00%|        approximation. If the step size is smaller than this, optimization
   189|         0|            0|            0|  0.00%|        is terminated as successful. If omitted, not used.
   190|         0|            0|            0|  0.00%|    x_rtol : float, optional
   191|         0|            0|            0|  0.00%|        Relative minimum step size. If omitted, not used.
   192|         0|            0|            0|  0.00%|    tol_norm : function(vector) -> scalar, optional
   193|         0|            0|            0|  0.00%|        Norm to use in convergence check. Default is the maximum norm.
   194|         0|            0|            0|  0.00%|    line_search : {None, 'armijo' (default), 'wolfe'}, optional
   195|         0|            0|            0|  0.00%|        Which type of a line search to use to determine the step size in the
   196|         0|            0|            0|  0.00%|        direction given by the Jacobian approximation. Defaults to 'armijo'.
   197|         0|            0|            0|  0.00%|    callback : function, optional
   198|         0|            0|            0|  0.00%|        Optional callback function. It is called on every iteration as
   199|         0|            0|            0|  0.00%|        ``callback(x, f)`` where `x` is the current solution and `f`
   200|         0|            0|            0|  0.00%|        the corresponding residual.
   201|         0|            0|            0|  0.00%|
   202|         0|            0|            0|  0.00%|    Returns
   203|         0|            0|            0|  0.00%|    -------
   204|         0|            0|            0|  0.00%|    sol : ndarray
   205|         0|            0|            0|  0.00%|        An array (of similar array type as `x0`) containing the final solution.
   206|         0|            0|            0|  0.00%|
   207|         0|            0|            0|  0.00%|    Raises
   208|         0|            0|            0|  0.00%|    ------
   209|         0|            0|            0|  0.00%|    NoConvergence
   210|         0|            0|            0|  0.00%|        When a solution was not found.
   211|         0|            0|            0|  0.00%|
   212|         0|            0|            0|  0.00%|    """.strip()
   213|         0|            0|            0|  0.00%|)
   214|         0|            0|            0|  0.00%|
   215|         0|            0|            0|  0.00%|
   216|         0|            0|            0|  0.00%|def _set_doc(obj):
   217|         0|            0|            0|  0.00%|    if obj.__doc__:
   218|         0|            0|            0|  0.00%|        obj.__doc__ = obj.__doc__ % _doc_parts
   219|         0|            0|            0|  0.00%|
   220|         0|            0|            0|  0.00%|
   221|         0|            0|            0|  0.00%|def nonlin_solve(F, x0, jacobian='krylov', iter=None, verbose=False,
   222|         0|            0|            0|  0.00%|                 maxiter=None, f_tol=None, f_rtol=None, x_tol=None, x_rtol=None,
   223|         0|            0|            0|  0.00%|                 tol_norm=None, line_search='armijo', callback=None,
   224|         0|            0|            0|  0.00%|                 full_output=False, raise_exception=True):
   225|         0|            0|            0|  0.00%|    """
   226|         0|            0|            0|  0.00%|    Find a root of a function, in a way suitable for large-scale problems.
   227|         0|            0|            0|  0.00%|
   228|         0|            0|            0|  0.00%|    Parameters
   229|         0|            0|            0|  0.00%|    ----------
   230|         0|            0|            0|  0.00%|    %(params_basic)s
   231|         0|            0|            0|  0.00%|    jacobian : Jacobian
   232|         0|            0|            0|  0.00%|        A Jacobian approximation: `Jacobian` object or something that
   233|         0|            0|            0|  0.00%|        `asjacobian` can transform to one. Alternatively, a string specifying
   234|         0|            0|            0|  0.00%|        which of the builtin Jacobian approximations to use:
   235|         0|            0|            0|  0.00%|
   236|         0|            0|            0|  0.00%|            krylov, broyden1, broyden2, anderson
   237|         0|            0|            0|  0.00%|            diagbroyden, linearmixing, excitingmixing
   238|         0|            0|            0|  0.00%|
   239|         0|            0|            0|  0.00%|    %(params_extra)s
   240|         0|            0|            0|  0.00%|    full_output : bool
   241|         0|            0|            0|  0.00%|        If true, returns a dictionary `info` containing convergence
   242|         0|            0|            0|  0.00%|        information.
   243|         0|            0|            0|  0.00%|    raise_exception : bool
   244|         0|            0|            0|  0.00%|        If True, a `NoConvergence` exception is raise if no solution is found.
   245|         0|            0|            0|  0.00%|
   246|         0|            0|            0|  0.00%|    See Also
   247|         0|            0|            0|  0.00%|    --------
   248|         0|            0|            0|  0.00%|    asjacobian, Jacobian
   249|         0|            0|            0|  0.00%|
   250|         0|            0|            0|  0.00%|    Notes
   251|         0|            0|            0|  0.00%|    -----
   252|         0|            0|            0|  0.00%|    This algorithm implements the inexact Newton method, with
   253|         0|            0|            0|  0.00%|    backtracking or full line searches. Several Jacobian
   254|         0|            0|            0|  0.00%|    approximations are available, including Krylov and Quasi-Newton
   255|         0|            0|            0|  0.00%|    methods.
   256|         0|            0|            0|  0.00%|
   257|         0|            0|            0|  0.00%|    References
   258|         0|            0|            0|  0.00%|    ----------
   259|         0|            0|            0|  0.00%|    .. [KIM] C. T. Kelley, \"Iterative Methods for Linear and Nonlinear
   260|         0|            0|            0|  0.00%|       Equations\". Society for Industrial and Applied Mathematics. (1995)
   261|         0|            0|            0|  0.00%|       https://archive.siam.org/books/kelley/fr16/
   262|         0|            0|            0|  0.00%|
   263|         0|            0|            0|  0.00%|    """
   264|         0|            0|            0|  0.00%|    # Can't use default parameters because it's being explicitly passed as None
   265|         0|            0|            0|  0.00%|    # from the calling function, so we need to set it here.
   266|         0|            0|            0|  0.00%|    tol_norm = maxnorm if tol_norm is None else tol_norm
   267|         0|            0|            0|  0.00%|    condition = TerminationCondition(f_tol=f_tol, f_rtol=f_rtol,
   268|         0|            0|            0|  0.00%|                                     x_tol=x_tol, x_rtol=x_rtol,
   269|         0|            0|            0|  0.00%|                                     iter=iter, norm=tol_norm)
   270|         0|            0|            0|  0.00%|
   271|         0|            0|            0|  0.00%|    x0 = _as_inexact(x0)
   272|         0|            0|            0|  0.00%|    func = lambda z: _as_inexact(F(_array_like(z, x0))).flatten()
   273|         0|            0|            0|  0.00%|    x = x0.flatten()
   274|         0|            0|            0|  0.00%|
   275|         0|            0|            0|  0.00%|    dx = np.inf
   276|         0|            0|            0|  0.00%|    Fx = func(x)
   277|         0|            0|            0|  0.00%|    Fx_norm = norm(Fx)
   278|         0|            0|            0|  0.00%|
   279|         0|            0|            0|  0.00%|    jacobian = asjacobian(jacobian)
   280|         0|            0|            0|  0.00%|    jacobian.setup(x.copy(), Fx, func)
   281|         0|            0|            0|  0.00%|
   282|         0|            0|            0|  0.00%|    if maxiter is None:
   283|         0|            0|            0|  0.00%|        if iter is not None:
   284|         0|            0|            0|  0.00%|            maxiter = iter + 1
   285|         0|            0|            0|  0.00%|        else:
   286|         0|            0|            0|  0.00%|            maxiter = 100*(x.size+1)
   287|         0|            0|            0|  0.00%|
   288|         0|            0|            0|  0.00%|    if line_search is True:
   289|         0|            0|            0|  0.00%|        line_search = 'armijo'
   290|         0|            0|            0|  0.00%|    elif line_search is False:
   291|         0|            0|            0|  0.00%|        line_search = None
   292|         0|            0|            0|  0.00%|
   293|         0|            0|            0|  0.00%|    if line_search not in (None, 'armijo', 'wolfe'):
   294|         0|            0|            0|  0.00%|        raise ValueError("Invalid line search")
   295|         0|            0|            0|  0.00%|
   296|         0|            0|            0|  0.00%|    # Solver tolerance selection
   297|         0|            0|            0|  0.00%|    gamma = 0.9
   298|         0|            0|            0|  0.00%|    eta_max = 0.9999
   299|         0|            0|            0|  0.00%|    eta_treshold = 0.1
   300|         0|            0|            0|  0.00%|    eta = 1e-3
   301|         0|            0|            0|  0.00%|
   302|         0|            0|            0|  0.00%|    for n in range(maxiter):
   303|         0|            0|            0|  0.00%|        status = condition.check(Fx, x, dx)
   304|         0|            0|            0|  0.00%|        if status:
   305|         0|            0|            0|  0.00%|            break
   306|         0|            0|            0|  0.00%|
   307|         0|            0|            0|  0.00%|        # The tolerance, as computed for scipy.sparse.linalg.* routines
   308|         0|            0|            0|  0.00%|        tol = min(eta, eta*Fx_norm)
   309|         0|            0|            0|  0.00%|        dx = -jacobian.solve(Fx, tol=tol)
   310|         0|            0|            0|  0.00%|
   311|         0|            0|            0|  0.00%|        if norm(dx) == 0:
   312|         0|            0|            0|  0.00%|            raise ValueError("Jacobian inversion yielded zero vector. "
   313|         0|            0|            0|  0.00%|                             "This indicates a bug in the Jacobian "
   314|         0|            0|            0|  0.00%|                             "approximation.")
   315|         0|            0|            0|  0.00%|
   316|         0|            0|            0|  0.00%|        # Line search, or Newton step
   317|         0|            0|            0|  0.00%|        if line_search:
   318|         0|            0|            0|  0.00%|            s, x, Fx, Fx_norm_new = _nonlin_line_search(func, x, Fx, dx,
   319|         0|            0|            0|  0.00%|                                                        line_search)
   320|         0|            0|            0|  0.00%|        else:
   321|         0|            0|            0|  0.00%|            s = 1.0
   322|         0|            0|            0|  0.00%|            x = x + dx
   323|         0|            0|            0|  0.00%|            Fx = func(x)
   324|         0|            0|            0|  0.00%|            Fx_norm_new = norm(Fx)
   325|         0|            0|            0|  0.00%|
   326|         0|            0|            0|  0.00%|        jacobian.update(x.copy(), Fx)
   327|         0|            0|            0|  0.00%|
   328|         0|            0|            0|  0.00%|        if callback:
   329|         0|            0|            0|  0.00%|            callback(x, Fx)
   330|         0|            0|            0|  0.00%|
   331|         0|            0|            0|  0.00%|        # Adjust forcing parameters for inexact methods
   332|         0|            0|            0|  0.00%|        eta_A = gamma * Fx_norm_new**2 / Fx_norm**2
   333|         0|            0|            0|  0.00%|        if gamma * eta**2 < eta_treshold:
   334|         0|            0|            0|  0.00%|            eta = min(eta_max, eta_A)
   335|         0|            0|            0|  0.00%|        else:
   336|         0|            0|            0|  0.00%|            eta = min(eta_max, max(eta_A, gamma*eta**2))
   337|         0|            0|            0|  0.00%|
   338|         0|            0|            0|  0.00%|        Fx_norm = Fx_norm_new
   339|         0|            0|            0|  0.00%|
   340|         0|            0|            0|  0.00%|        # Print status
   341|         0|            0|            0|  0.00%|        if verbose:
   342|         0|            0|            0|  0.00%|            sys.stdout.write("%d:  |F(x)| = %g; step %g\n" % (
   343|         0|            0|            0|  0.00%|                n, tol_norm(Fx), s))
   344|         0|            0|            0|  0.00%|            sys.stdout.flush()
   345|         0|            0|            0|  0.00%|    else:
   346|         0|            0|            0|  0.00%|        if raise_exception:
   347|         0|            0|            0|  0.00%|            raise NoConvergence(_array_like(x, x0))
   348|         0|            0|            0|  0.00%|        else:
   349|         0|            0|            0|  0.00%|            status = 2
   350|         0|            0|            0|  0.00%|
   351|         0|            0|            0|  0.00%|    if full_output:
   352|         0|            0|            0|  0.00%|        info = {'nit': condition.iteration,
   353|         0|            0|            0|  0.00%|                'fun': Fx,
   354|         0|            0|            0|  0.00%|                'status': status,
   355|         0|            0|            0|  0.00%|                'success': status == 1,
   356|         0|            0|            0|  0.00%|                'message': {1: 'A solution was found at the specified '
   357|         0|            0|            0|  0.00%|                               'tolerance.',
   358|         0|            0|            0|  0.00%|                            2: 'The maximum number of iterations allowed '
   359|         0|            0|            0|  0.00%|                               'has been reached.'
   360|         0|            0|            0|  0.00%|                            }[status]
   361|         0|            0|            0|  0.00%|                }
   362|         0|            0|            0|  0.00%|        return _array_like(x, x0), info
   363|         0|            0|            0|  0.00%|    else:
   364|         0|            0|            0|  0.00%|        return _array_like(x, x0)
   365|         0|            0|            0|  0.00%|
   366|         0|            0|            0|  0.00%|
   367|         0|            0|            0|  0.00%|_set_doc(nonlin_solve)
   368|         0|            0|            0|  0.00%|
   369|         0|            0|            0|  0.00%|
   370|         0|            0|            0|  0.00%|def _nonlin_line_search(func, x, Fx, dx, search_type='armijo', rdiff=1e-8,
   371|         0|            0|            0|  0.00%|                        smin=1e-2):
   372|         0|            0|            0|  0.00%|    tmp_s = [0]
   373|         0|            0|            0|  0.00%|    tmp_Fx = [Fx]
   374|         0|            0|            0|  0.00%|    tmp_phi = [norm(Fx)**2]
   375|         0|            0|            0|  0.00%|    s_norm = norm(x) / norm(dx)
   376|         0|            0|            0|  0.00%|
   377|         0|            0|            0|  0.00%|    def phi(s, store=True):
   378|         0|            0|            0|  0.00%|        if s == tmp_s[0]:
   379|         0|            0|            0|  0.00%|            return tmp_phi[0]
   380|         0|            0|            0|  0.00%|        xt = x + s*dx
   381|         0|            0|            0|  0.00%|        v = func(xt)
   382|         0|            0|            0|  0.00%|        p = _safe_norm(v)**2
   383|         0|            0|            0|  0.00%|        if store:
   384|         0|            0|            0|  0.00%|            tmp_s[0] = s
   385|         0|            0|            0|  0.00%|            tmp_phi[0] = p
   386|         0|            0|            0|  0.00%|            tmp_Fx[0] = v
   387|         0|            0|            0|  0.00%|        return p
   388|         0|            0|            0|  0.00%|
   389|         0|            0|            0|  0.00%|    def derphi(s):
   390|         0|            0|            0|  0.00%|        ds = (abs(s) + s_norm + 1) * rdiff
   391|         0|            0|            0|  0.00%|        return (phi(s+ds, store=False) - phi(s)) / ds
   392|         0|            0|            0|  0.00%|
   393|         0|            0|            0|  0.00%|    if search_type == 'wolfe':
   394|         0|            0|            0|  0.00%|        s, phi1, phi0 = scalar_search_wolfe1(phi, derphi, tmp_phi[0],
   395|         0|            0|            0|  0.00%|                                             xtol=1e-2, amin=smin)
   396|         0|            0|            0|  0.00%|    elif search_type == 'armijo':
   397|         0|            0|            0|  0.00%|        s, phi1 = scalar_search_armijo(phi, tmp_phi[0], -tmp_phi[0],
   398|         0|            0|            0|  0.00%|                                       amin=smin)
   399|         0|            0|            0|  0.00%|
   400|         0|            0|            0|  0.00%|    if s is None:
   401|         0|            0|            0|  0.00%|        # XXX: No suitable step length found. Take the full Newton step,
   402|         0|            0|            0|  0.00%|        #      and hope for the best.
   403|         0|            0|            0|  0.00%|        s = 1.0
   404|         0|            0|            0|  0.00%|
   405|         0|            0|            0|  0.00%|    x = x + s*dx
   406|         0|            0|            0|  0.00%|    if s == tmp_s[0]:
   407|         0|            0|            0|  0.00%|        Fx = tmp_Fx[0]
   408|         0|            0|            0|  0.00%|    else:
   409|         0|            0|            0|  0.00%|        Fx = func(x)
   410|         0|            0|            0|  0.00%|    Fx_norm = norm(Fx)
   411|         0|            0|            0|  0.00%|
   412|         0|            0|            0|  0.00%|    return s, x, Fx, Fx_norm
   413|         0|            0|            0|  0.00%|
   414|         0|            0|            0|  0.00%|
   415|         0|            0|            0|  0.00%|class TerminationCondition(object):
   416|         0|            0|            0|  0.00%|    """
   417|         0|            0|            0|  0.00%|    Termination condition for an iteration. It is terminated if
   418|         0|            0|            0|  0.00%|
   419|         0|            0|            0|  0.00%|    - |F| < f_rtol*|F_0|, AND
   420|         0|            0|            0|  0.00%|    - |F| < f_tol
   421|         0|            0|            0|  0.00%|
   422|         0|            0|            0|  0.00%|    AND
   423|         0|            0|            0|  0.00%|
   424|         0|            0|            0|  0.00%|    - |dx| < x_rtol*|x|, AND
   425|         0|            0|            0|  0.00%|    - |dx| < x_tol
   426|         0|            0|            0|  0.00%|
   427|         0|            0|            0|  0.00%|    """
   428|         0|            0|            0|  0.00%|    def __init__(self, f_tol=None, f_rtol=None, x_tol=None, x_rtol=None,
   429|         0|            0|            0|  0.00%|                 iter=None, norm=maxnorm):
   430|         0|            0|            0|  0.00%|
   431|         0|            0|            0|  0.00%|        if f_tol is None:
   432|         0|            0|            0|  0.00%|            f_tol = np.finfo(np.float_).eps ** (1./3)
   433|         0|            0|            0|  0.00%|        if f_rtol is None:
   434|         0|            0|            0|  0.00%|            f_rtol = np.inf
   435|         0|            0|            0|  0.00%|        if x_tol is None:
   436|         0|            0|            0|  0.00%|            x_tol = np.inf
   437|         0|            0|            0|  0.00%|        if x_rtol is None:
   438|         0|            0|            0|  0.00%|            x_rtol = np.inf
   439|         0|            0|            0|  0.00%|
   440|         0|            0|            0|  0.00%|        self.x_tol = x_tol
   441|         0|            0|            0|  0.00%|        self.x_rtol = x_rtol
   442|         0|            0|            0|  0.00%|        self.f_tol = f_tol
   443|         0|            0|            0|  0.00%|        self.f_rtol = f_rtol
   444|         0|            0|            0|  0.00%|
   445|         0|            0|            0|  0.00%|        self.norm = norm
   446|         0|            0|            0|  0.00%|
   447|         0|            0|            0|  0.00%|        self.iter = iter
   448|         0|            0|            0|  0.00%|
   449|         0|            0|            0|  0.00%|        self.f0_norm = None
   450|         0|            0|            0|  0.00%|        self.iteration = 0
   451|         0|            0|            0|  0.00%|
   452|         0|            0|            0|  0.00%|    def check(self, f, x, dx):
   453|         0|            0|            0|  0.00%|        self.iteration += 1
   454|         0|            0|            0|  0.00%|        f_norm = self.norm(f)
   455|         0|            0|            0|  0.00%|        x_norm = self.norm(x)
   456|         0|            0|            0|  0.00%|        dx_norm = self.norm(dx)
   457|         0|            0|            0|  0.00%|
   458|         0|            0|            0|  0.00%|        if self.f0_norm is None:
   459|         0|            0|            0|  0.00%|            self.f0_norm = f_norm
   460|         0|            0|            0|  0.00%|
   461|         0|            0|            0|  0.00%|        if f_norm == 0:
   462|         0|            0|            0|  0.00%|            return 1
   463|         0|            0|            0|  0.00%|
   464|         0|            0|            0|  0.00%|        if self.iter is not None:
   465|         0|            0|            0|  0.00%|            # backwards compatibility with SciPy 0.6.0
   466|         0|            0|            0|  0.00%|            return 2 * (self.iteration > self.iter)
   467|         0|            0|            0|  0.00%|
   468|         0|            0|            0|  0.00%|        # NB: condition must succeed for rtol=inf even if norm == 0
   469|         0|            0|            0|  0.00%|        return int((f_norm <= self.f_tol
   470|         0|            0|            0|  0.00%|                    and f_norm/self.f_rtol <= self.f0_norm)
   471|         0|            0|            0|  0.00%|                   and (dx_norm <= self.x_tol
   472|         0|            0|            0|  0.00%|                        and dx_norm/self.x_rtol <= x_norm))
   473|         0|            0|            0|  0.00%|
   474|         0|            0|            0|  0.00%|
   475|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   476|         0|            0|            0|  0.00%|# Generic Jacobian approximation
   477|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   478|         0|            0|            0|  0.00%|
   479|         0|            0|            0|  0.00%|class Jacobian(object):
   480|         0|            0|            0|  0.00%|    """
   481|         0|            0|            0|  0.00%|    Common interface for Jacobians or Jacobian approximations.
   482|         0|            0|            0|  0.00%|
   483|         0|            0|            0|  0.00%|    The optional methods come useful when implementing trust region
   484|         0|            0|            0|  0.00%|    etc., algorithms that often require evaluating transposes of the
   485|         0|            0|            0|  0.00%|    Jacobian.
   486|         0|            0|            0|  0.00%|
   487|         0|            0|            0|  0.00%|    Methods
   488|         0|            0|            0|  0.00%|    -------
   489|         0|            0|            0|  0.00%|    solve
   490|         0|            0|            0|  0.00%|        Returns J^-1 * v
   491|         0|            0|            0|  0.00%|    update
   492|         0|            0|            0|  0.00%|        Updates Jacobian to point `x` (where the function has residual `Fx`)
   493|         0|            0|            0|  0.00%|
   494|         0|            0|            0|  0.00%|    matvec : optional
   495|         0|            0|            0|  0.00%|        Returns J * v
   496|         0|            0|            0|  0.00%|    rmatvec : optional
   497|         0|            0|            0|  0.00%|        Returns A^H * v
   498|         0|            0|            0|  0.00%|    rsolve : optional
   499|         0|            0|            0|  0.00%|        Returns A^-H * v
   500|         0|            0|            0|  0.00%|    matmat : optional
   501|         0|            0|            0|  0.00%|        Returns A * V, where V is a dense matrix with dimensions (N,K).
   502|         0|            0|            0|  0.00%|    todense : optional
   503|         0|            0|            0|  0.00%|        Form the dense Jacobian matrix. Necessary for dense trust region
   504|         0|            0|            0|  0.00%|        algorithms, and useful for testing.
   505|         0|            0|            0|  0.00%|
   506|         0|            0|            0|  0.00%|    Attributes
   507|         0|            0|            0|  0.00%|    ----------
   508|         0|            0|            0|  0.00%|    shape
   509|         0|            0|            0|  0.00%|        Matrix dimensions (M, N)
   510|         0|            0|            0|  0.00%|    dtype
   511|         0|            0|            0|  0.00%|        Data type of the matrix.
   512|         0|            0|            0|  0.00%|    func : callable, optional
   513|         0|            0|            0|  0.00%|        Function the Jacobian corresponds to
   514|         0|            0|            0|  0.00%|
   515|         0|            0|            0|  0.00%|    """
   516|         0|            0|            0|  0.00%|
   517|         0|            0|            0|  0.00%|    def __init__(self, **kw):
   518|         0|            0|            0|  0.00%|        names = ["solve", "update", "matvec", "rmatvec", "rsolve",
   519|         0|            0|            0|  0.00%|                 "matmat", "todense", "shape", "dtype"]
   520|         0|            0|            0|  0.00%|        for name, value in kw.items():
   521|         0|            0|            0|  0.00%|            if name not in names:
   522|         0|            0|            0|  0.00%|                raise ValueError("Unknown keyword argument %s" % name)
   523|         0|            0|            0|  0.00%|            if value is not None:
   524|         0|            0|            0|  0.00%|                setattr(self, name, kw[name])
   525|         0|            0|            0|  0.00%|
   526|         0|            0|            0|  0.00%|        if hasattr(self, 'todense'):
   527|         0|            0|            0|  0.00%|            self.__array__ = lambda: self.todense()
   528|         0|            0|            0|  0.00%|
   529|         0|            0|            0|  0.00%|    def aspreconditioner(self):
   530|         0|            0|            0|  0.00%|        return InverseJacobian(self)
   531|         0|            0|            0|  0.00%|
   532|         0|            0|            0|  0.00%|    def solve(self, v, tol=0):
   533|         0|            0|            0|  0.00%|        raise NotImplementedError
   534|         0|            0|            0|  0.00%|
   535|         0|            0|            0|  0.00%|    def update(self, x, F):
   536|         0|            0|            0|  0.00%|        pass
   537|         0|            0|            0|  0.00%|
   538|         0|            0|            0|  0.00%|    def setup(self, x, F, func):
   539|         0|            0|            0|  0.00%|        self.func = func
   540|         0|            0|            0|  0.00%|        self.shape = (F.size, x.size)
   541|         0|            0|            0|  0.00%|        self.dtype = F.dtype
   542|         0|            0|            0|  0.00%|        if self.__class__.setup is Jacobian.setup:
   543|         0|            0|            0|  0.00%|            # Call on the first point unless overridden
   544|         0|            0|            0|  0.00%|            self.update(x, F)
   545|         0|            0|            0|  0.00%|
   546|         0|            0|            0|  0.00%|
   547|         0|            0|            0|  0.00%|class InverseJacobian(object):
   548|         0|            0|            0|  0.00%|    def __init__(self, jacobian):
   549|         0|            0|            0|  0.00%|        self.jacobian = jacobian
   550|         0|            0|            0|  0.00%|        self.matvec = jacobian.solve
   551|         0|            0|            0|  0.00%|        self.update = jacobian.update
   552|         0|            0|            0|  0.00%|        if hasattr(jacobian, 'setup'):
   553|         0|            0|            0|  0.00%|            self.setup = jacobian.setup
   554|         0|            0|            0|  0.00%|        if hasattr(jacobian, 'rsolve'):
   555|         0|            0|            0|  0.00%|            self.rmatvec = jacobian.rsolve
   556|         0|            0|            0|  0.00%|
   557|         0|            0|            0|  0.00%|    @property
   558|         0|            0|            0|  0.00%|    def shape(self):
   559|         0|            0|            0|  0.00%|        return self.jacobian.shape
   560|         0|            0|            0|  0.00%|
   561|         0|            0|            0|  0.00%|    @property
   562|         0|            0|            0|  0.00%|    def dtype(self):
   563|         0|            0|            0|  0.00%|        return self.jacobian.dtype
   564|         0|            0|            0|  0.00%|
   565|         0|            0|            0|  0.00%|
   566|         0|            0|            0|  0.00%|def asjacobian(J):
   567|         0|            0|            0|  0.00%|    """
   568|         0|            0|            0|  0.00%|    Convert given object to one suitable for use as a Jacobian.
   569|         0|            0|            0|  0.00%|    """
   570|         0|            0|            0|  0.00%|    spsolve = scipy.sparse.linalg.spsolve
   571|         0|            0|            0|  0.00%|    if isinstance(J, Jacobian):
   572|         0|            0|            0|  0.00%|        return J
   573|         0|            0|            0|  0.00%|    elif inspect.isclass(J) and issubclass(J, Jacobian):
   574|         0|            0|            0|  0.00%|        return J()
   575|         0|            0|            0|  0.00%|    elif isinstance(J, np.ndarray):
   576|         0|            0|            0|  0.00%|        if J.ndim > 2:
   577|         0|            0|            0|  0.00%|            raise ValueError('array must have rank <= 2')
   578|         0|            0|            0|  0.00%|        J = np.atleast_2d(np.asarray(J))
   579|         0|            0|            0|  0.00%|        if J.shape[0] != J.shape[1]:
   580|         0|            0|            0|  0.00%|            raise ValueError('array must be square')
   581|         0|            0|            0|  0.00%|
   582|         0|            0|            0|  0.00%|        return Jacobian(matvec=lambda v: dot(J, v),
   583|         0|            0|            0|  0.00%|                        rmatvec=lambda v: dot(J.conj().T, v),
   584|         0|            0|            0|  0.00%|                        solve=lambda v: solve(J, v),
   585|         0|            0|            0|  0.00%|                        rsolve=lambda v: solve(J.conj().T, v),
   586|         0|            0|            0|  0.00%|                        dtype=J.dtype, shape=J.shape)
   587|         0|            0|            0|  0.00%|    elif scipy.sparse.isspmatrix(J):
   588|         0|            0|            0|  0.00%|        if J.shape[0] != J.shape[1]:
   589|         0|            0|            0|  0.00%|            raise ValueError('matrix must be square')
   590|         0|            0|            0|  0.00%|        return Jacobian(matvec=lambda v: J*v,
   591|         0|            0|            0|  0.00%|                        rmatvec=lambda v: J.conj().T * v,
   592|         0|            0|            0|  0.00%|                        solve=lambda v: spsolve(J, v),
   593|         0|            0|            0|  0.00%|                        rsolve=lambda v: spsolve(J.conj().T, v),
   594|         0|            0|            0|  0.00%|                        dtype=J.dtype, shape=J.shape)
   595|         0|            0|            0|  0.00%|    elif hasattr(J, 'shape') and hasattr(J, 'dtype') and hasattr(J, 'solve'):
   596|         0|            0|            0|  0.00%|        return Jacobian(matvec=getattr(J, 'matvec'),
   597|         0|            0|            0|  0.00%|                        rmatvec=getattr(J, 'rmatvec'),
   598|         0|            0|            0|  0.00%|                        solve=J.solve,
   599|         0|            0|            0|  0.00%|                        rsolve=getattr(J, 'rsolve'),
   600|         0|            0|            0|  0.00%|                        update=getattr(J, 'update'),
   601|         0|            0|            0|  0.00%|                        setup=getattr(J, 'setup'),
   602|         0|            0|            0|  0.00%|                        dtype=J.dtype,
   603|         0|            0|            0|  0.00%|                        shape=J.shape)
   604|         0|            0|            0|  0.00%|    elif callable(J):
   605|         0|            0|            0|  0.00%|        # Assume it's a function J(x) that returns the Jacobian
   606|         0|            0|            0|  0.00%|        class Jac(Jacobian):
   607|         0|            0|            0|  0.00%|            def update(self, x, F):
   608|         0|            0|            0|  0.00%|                self.x = x
   609|         0|            0|            0|  0.00%|
   610|         0|            0|            0|  0.00%|            def solve(self, v, tol=0):
   611|         0|            0|            0|  0.00%|                m = J(self.x)
   612|         0|            0|            0|  0.00%|                if isinstance(m, np.ndarray):
   613|         0|            0|            0|  0.00%|                    return solve(m, v)
   614|         0|            0|            0|  0.00%|                elif scipy.sparse.isspmatrix(m):
   615|         0|            0|            0|  0.00%|                    return spsolve(m, v)
   616|         0|            0|            0|  0.00%|                else:
   617|         0|            0|            0|  0.00%|                    raise ValueError("Unknown matrix type")
   618|         0|            0|            0|  0.00%|
   619|         0|            0|            0|  0.00%|            def matvec(self, v):
   620|         0|            0|            0|  0.00%|                m = J(self.x)
   621|         0|            0|            0|  0.00%|                if isinstance(m, np.ndarray):
   622|         0|            0|            0|  0.00%|                    return dot(m, v)
   623|         0|            0|            0|  0.00%|                elif scipy.sparse.isspmatrix(m):
   624|         0|            0|            0|  0.00%|                    return m*v
   625|         0|            0|            0|  0.00%|                else:
   626|         0|            0|            0|  0.00%|                    raise ValueError("Unknown matrix type")
   627|         0|            0|            0|  0.00%|
   628|         0|            0|            0|  0.00%|            def rsolve(self, v, tol=0):
   629|         0|            0|            0|  0.00%|                m = J(self.x)
   630|         0|            0|            0|  0.00%|                if isinstance(m, np.ndarray):
   631|         0|            0|            0|  0.00%|                    return solve(m.conj().T, v)
   632|         0|            0|            0|  0.00%|                elif scipy.sparse.isspmatrix(m):
   633|         0|            0|            0|  0.00%|                    return spsolve(m.conj().T, v)
   634|         0|            0|            0|  0.00%|                else:
   635|         0|            0|            0|  0.00%|                    raise ValueError("Unknown matrix type")
   636|         0|            0|            0|  0.00%|
   637|         0|            0|            0|  0.00%|            def rmatvec(self, v):
   638|         0|            0|            0|  0.00%|                m = J(self.x)
   639|         0|            0|            0|  0.00%|                if isinstance(m, np.ndarray):
   640|         0|            0|            0|  0.00%|                    return dot(m.conj().T, v)
   641|         0|            0|            0|  0.00%|                elif scipy.sparse.isspmatrix(m):
   642|         0|            0|            0|  0.00%|                    return m.conj().T * v
   643|         0|            0|            0|  0.00%|                else:
   644|         0|            0|            0|  0.00%|                    raise ValueError("Unknown matrix type")
   645|         0|            0|            0|  0.00%|        return Jac()
   646|         0|            0|            0|  0.00%|    elif isinstance(J, str):
   647|         0|            0|            0|  0.00%|        return dict(broyden1=BroydenFirst,
   648|         0|            0|            0|  0.00%|                    broyden2=BroydenSecond,
   649|         0|            0|            0|  0.00%|                    anderson=Anderson,
   650|         0|            0|            0|  0.00%|                    diagbroyden=DiagBroyden,
   651|         0|            0|            0|  0.00%|                    linearmixing=LinearMixing,
   652|         0|            0|            0|  0.00%|                    excitingmixing=ExcitingMixing,
   653|         0|            0|            0|  0.00%|                    krylov=KrylovJacobian)[J]()
   654|         0|            0|            0|  0.00%|    else:
   655|         0|            0|            0|  0.00%|        raise TypeError('Cannot convert object to a Jacobian')
   656|         0|            0|            0|  0.00%|
   657|         0|            0|            0|  0.00%|
   658|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   659|         0|            0|            0|  0.00%|# Broyden
   660|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   661|         0|            0|            0|  0.00%|
   662|         0|            0|            0|  0.00%|class GenericBroyden(Jacobian):
   663|         0|            0|            0|  0.00%|    def setup(self, x0, f0, func):
   664|         0|            0|            0|  0.00%|        Jacobian.setup(self, x0, f0, func)
   665|         0|            0|            0|  0.00%|        self.last_f = f0
   666|         0|            0|            0|  0.00%|        self.last_x = x0
   667|         0|            0|            0|  0.00%|
   668|         0|            0|            0|  0.00%|        if hasattr(self, 'alpha') and self.alpha is None:
   669|         0|            0|            0|  0.00%|            # Autoscale the initial Jacobian parameter
   670|         0|            0|            0|  0.00%|            # unless we have already guessed the solution.
   671|         0|            0|            0|  0.00%|            normf0 = norm(f0)
   672|         0|            0|            0|  0.00%|            if normf0:
   673|         0|            0|            0|  0.00%|                self.alpha = 0.5*max(norm(x0), 1) / normf0
   674|         0|            0|            0|  0.00%|            else:
   675|         0|            0|            0|  0.00%|                self.alpha = 1.0
   676|         0|            0|            0|  0.00%|
   677|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
   678|         0|            0|            0|  0.00%|        raise NotImplementedError
   679|         0|            0|            0|  0.00%|
   680|         0|            0|            0|  0.00%|    def update(self, x, f):
   681|         0|            0|            0|  0.00%|        df = f - self.last_f
   682|         0|            0|            0|  0.00%|        dx = x - self.last_x
   683|         0|            0|            0|  0.00%|        self._update(x, f, dx, df, norm(dx), norm(df))
   684|         0|            0|            0|  0.00%|        self.last_f = f
   685|         0|            0|            0|  0.00%|        self.last_x = x
   686|         0|            0|            0|  0.00%|
   687|         0|            0|            0|  0.00%|
   688|         0|            0|            0|  0.00%|class LowRankMatrix(object):
   689|         0|            0|            0|  0.00%|    r"""
   690|         0|            0|            0|  0.00%|    A matrix represented as
   691|         0|            0|            0|  0.00%|
   692|         0|            0|            0|  0.00%|    .. math:: \alpha I + \sum_{n=0}^{n=M} c_n d_n^\dagger
   693|         0|            0|            0|  0.00%|
   694|         0|            0|            0|  0.00%|    However, if the rank of the matrix reaches the dimension of the vectors,
   695|         0|            0|            0|  0.00%|    full matrix representation will be used thereon.
   696|         0|            0|            0|  0.00%|
   697|         0|            0|            0|  0.00%|    """
   698|         0|            0|            0|  0.00%|
   699|         0|            0|            0|  0.00%|    def __init__(self, alpha, n, dtype):
   700|         0|            0|            0|  0.00%|        self.alpha = alpha
   701|         0|            0|            0|  0.00%|        self.cs = []
   702|         0|            0|            0|  0.00%|        self.ds = []
   703|         0|            0|            0|  0.00%|        self.n = n
   704|         0|            0|            0|  0.00%|        self.dtype = dtype
   705|         0|            0|            0|  0.00%|        self.collapsed = None
   706|         0|            0|            0|  0.00%|
   707|         0|            0|            0|  0.00%|    @staticmethod
   708|         0|            0|            0|  0.00%|    def _matvec(v, alpha, cs, ds):
   709|         0|            0|            0|  0.00%|        axpy, scal, dotc = get_blas_funcs(['axpy', 'scal', 'dotc'],
   710|         0|            0|            0|  0.00%|                                          cs[:1] + [v])
   711|         0|            0|            0|  0.00%|        w = alpha * v
   712|         0|            0|            0|  0.00%|        for c, d in zip(cs, ds):
   713|         0|            0|            0|  0.00%|            a = dotc(d, v)
   714|         0|            0|            0|  0.00%|            w = axpy(c, w, w.size, a)
   715|         0|            0|            0|  0.00%|        return w
   716|         0|            0|            0|  0.00%|
   717|         0|            0|            0|  0.00%|    @staticmethod
   718|         0|            0|            0|  0.00%|    def _solve(v, alpha, cs, ds):
   719|         0|            0|            0|  0.00%|        """Evaluate w = M^-1 v"""
   720|         0|            0|            0|  0.00%|        if len(cs) == 0:
   721|         0|            0|            0|  0.00%|            return v/alpha
   722|         0|            0|            0|  0.00%|
   723|         0|            0|            0|  0.00%|        # (B + C D^H)^-1 = B^-1 - B^-1 C (I + D^H B^-1 C)^-1 D^H B^-1
   724|         0|            0|            0|  0.00%|
   725|         0|            0|            0|  0.00%|        axpy, dotc = get_blas_funcs(['axpy', 'dotc'], cs[:1] + [v])
   726|         0|            0|            0|  0.00%|
   727|         0|            0|            0|  0.00%|        c0 = cs[0]
   728|         0|            0|            0|  0.00%|        A = alpha * np.identity(len(cs), dtype=c0.dtype)
   729|         0|            0|            0|  0.00%|        for i, d in enumerate(ds):
   730|         0|            0|            0|  0.00%|            for j, c in enumerate(cs):
   731|         0|            0|            0|  0.00%|                A[i,j] += dotc(d, c)
   732|         0|            0|            0|  0.00%|
   733|         0|            0|            0|  0.00%|        q = np.zeros(len(cs), dtype=c0.dtype)
   734|         0|            0|            0|  0.00%|        for j, d in enumerate(ds):
   735|         0|            0|            0|  0.00%|            q[j] = dotc(d, v)
   736|         0|            0|            0|  0.00%|        q /= alpha
   737|         0|            0|            0|  0.00%|        q = solve(A, q)
   738|         0|            0|            0|  0.00%|
   739|         0|            0|            0|  0.00%|        w = v/alpha
   740|         0|            0|            0|  0.00%|        for c, qc in zip(cs, q):
   741|         0|            0|            0|  0.00%|            w = axpy(c, w, w.size, -qc)
   742|         0|            0|            0|  0.00%|
   743|         0|            0|            0|  0.00%|        return w
   744|         0|            0|            0|  0.00%|
   745|         0|            0|            0|  0.00%|    def matvec(self, v):
   746|         0|            0|            0|  0.00%|        """Evaluate w = M v"""
   747|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   748|         0|            0|            0|  0.00%|            return np.dot(self.collapsed, v)
   749|         0|            0|            0|  0.00%|        return LowRankMatrix._matvec(v, self.alpha, self.cs, self.ds)
   750|         0|            0|            0|  0.00%|
   751|         0|            0|            0|  0.00%|    def rmatvec(self, v):
   752|         0|            0|            0|  0.00%|        """Evaluate w = M^H v"""
   753|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   754|         0|            0|            0|  0.00%|            return np.dot(self.collapsed.T.conj(), v)
   755|         0|            0|            0|  0.00%|        return LowRankMatrix._matvec(v, np.conj(self.alpha), self.ds, self.cs)
   756|         0|            0|            0|  0.00%|
   757|         0|            0|            0|  0.00%|    def solve(self, v, tol=0):
   758|         0|            0|            0|  0.00%|        """Evaluate w = M^-1 v"""
   759|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   760|         0|            0|            0|  0.00%|            return solve(self.collapsed, v)
   761|         0|            0|            0|  0.00%|        return LowRankMatrix._solve(v, self.alpha, self.cs, self.ds)
   762|         0|            0|            0|  0.00%|
   763|         0|            0|            0|  0.00%|    def rsolve(self, v, tol=0):
   764|         0|            0|            0|  0.00%|        """Evaluate w = M^-H v"""
   765|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   766|         0|            0|            0|  0.00%|            return solve(self.collapsed.T.conj(), v)
   767|         0|            0|            0|  0.00%|        return LowRankMatrix._solve(v, np.conj(self.alpha), self.ds, self.cs)
   768|         0|            0|            0|  0.00%|
   769|         0|            0|            0|  0.00%|    def append(self, c, d):
   770|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   771|         0|            0|            0|  0.00%|            self.collapsed += c[:,None] * d[None,:].conj()
   772|         0|            0|            0|  0.00%|            return
   773|         0|            0|            0|  0.00%|
   774|         0|            0|            0|  0.00%|        self.cs.append(c)
   775|         0|            0|            0|  0.00%|        self.ds.append(d)
   776|         0|            0|            0|  0.00%|
   777|         0|            0|            0|  0.00%|        if len(self.cs) > c.size:
   778|         0|            0|            0|  0.00%|            self.collapse()
   779|         0|            0|            0|  0.00%|
   780|         0|            0|            0|  0.00%|    def __array__(self):
   781|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   782|         0|            0|            0|  0.00%|            return self.collapsed
   783|         0|            0|            0|  0.00%|
   784|         0|            0|            0|  0.00%|        Gm = self.alpha*np.identity(self.n, dtype=self.dtype)
   785|         0|            0|            0|  0.00%|        for c, d in zip(self.cs, self.ds):
   786|         0|            0|            0|  0.00%|            Gm += c[:,None]*d[None,:].conj()
   787|         0|            0|            0|  0.00%|        return Gm
   788|         0|            0|            0|  0.00%|
   789|         0|            0|            0|  0.00%|    def collapse(self):
   790|         0|            0|            0|  0.00%|        """Collapse the low-rank matrix to a full-rank one."""
   791|         0|            0|            0|  0.00%|        self.collapsed = np.array(self)
   792|         0|            0|            0|  0.00%|        self.cs = None
   793|         0|            0|            0|  0.00%|        self.ds = None
   794|         0|            0|            0|  0.00%|        self.alpha = None
   795|         0|            0|            0|  0.00%|
   796|         0|            0|            0|  0.00%|    def restart_reduce(self, rank):
   797|         0|            0|            0|  0.00%|        """
   798|         0|            0|            0|  0.00%|        Reduce the rank of the matrix by dropping all vectors.
   799|         0|            0|            0|  0.00%|        """
   800|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   801|         0|            0|            0|  0.00%|            return
   802|         0|            0|            0|  0.00%|        assert rank > 0
   803|         0|            0|            0|  0.00%|        if len(self.cs) > rank:
   804|         0|            0|            0|  0.00%|            del self.cs[:]
   805|         0|            0|            0|  0.00%|            del self.ds[:]
   806|         0|            0|            0|  0.00%|
   807|         0|            0|            0|  0.00%|    def simple_reduce(self, rank):
   808|         0|            0|            0|  0.00%|        """
   809|         0|            0|            0|  0.00%|        Reduce the rank of the matrix by dropping oldest vectors.
   810|         0|            0|            0|  0.00%|        """
   811|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   812|         0|            0|            0|  0.00%|            return
   813|         0|            0|            0|  0.00%|        assert rank > 0
   814|         0|            0|            0|  0.00%|        while len(self.cs) > rank:
   815|         0|            0|            0|  0.00%|            del self.cs[0]
   816|         0|            0|            0|  0.00%|            del self.ds[0]
   817|         0|            0|            0|  0.00%|
   818|         0|            0|            0|  0.00%|    def svd_reduce(self, max_rank, to_retain=None):
   819|         0|            0|            0|  0.00%|        """
   820|         0|            0|            0|  0.00%|        Reduce the rank of the matrix by retaining some SVD components.
   821|         0|            0|            0|  0.00%|
   822|         0|            0|            0|  0.00%|        This corresponds to the \"Broyden Rank Reduction Inverse\"
   823|         0|            0|            0|  0.00%|        algorithm described in [1]_.
   824|         0|            0|            0|  0.00%|
   825|         0|            0|            0|  0.00%|        Note that the SVD decomposition can be done by solving only a
   826|         0|            0|            0|  0.00%|        problem whose size is the effective rank of this matrix, which
   827|         0|            0|            0|  0.00%|        is viable even for large problems.
   828|         0|            0|            0|  0.00%|
   829|         0|            0|            0|  0.00%|        Parameters
   830|         0|            0|            0|  0.00%|        ----------
   831|         0|            0|            0|  0.00%|        max_rank : int
   832|         0|            0|            0|  0.00%|            Maximum rank of this matrix after reduction.
   833|         0|            0|            0|  0.00%|        to_retain : int, optional
   834|         0|            0|            0|  0.00%|            Number of SVD components to retain when reduction is done
   835|         0|            0|            0|  0.00%|            (ie. rank > max_rank). Default is ``max_rank - 2``.
   836|         0|            0|            0|  0.00%|
   837|         0|            0|            0|  0.00%|        References
   838|         0|            0|            0|  0.00%|        ----------
   839|         0|            0|            0|  0.00%|        .. [1] B.A. van der Rotten, PhD thesis,
   840|         0|            0|            0|  0.00%|           \"A limited memory Broyden method to solve high-dimensional
   841|         0|            0|            0|  0.00%|           systems of nonlinear equations\". Mathematisch Instituut,
   842|         0|            0|            0|  0.00%|           Universiteit Leiden, The Netherlands (2003).
   843|         0|            0|            0|  0.00%|
   844|         0|            0|            0|  0.00%|           https://web.archive.org/web/20161022015821/http://www.math.leidenuniv.nl/scripties/Rotten.pdf
   845|         0|            0|            0|  0.00%|
   846|         0|            0|            0|  0.00%|        """
   847|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   848|         0|            0|            0|  0.00%|            return
   849|         0|            0|            0|  0.00%|
   850|         0|            0|            0|  0.00%|        p = max_rank
   851|         0|            0|            0|  0.00%|        if to_retain is not None:
   852|         0|            0|            0|  0.00%|            q = to_retain
   853|         0|            0|            0|  0.00%|        else:
   854|         0|            0|            0|  0.00%|            q = p - 2
   855|         0|            0|            0|  0.00%|
   856|         0|            0|            0|  0.00%|        if self.cs:
   857|         0|            0|            0|  0.00%|            p = min(p, len(self.cs[0]))
   858|         0|            0|            0|  0.00%|        q = max(0, min(q, p-1))
   859|         0|            0|            0|  0.00%|
   860|         0|            0|            0|  0.00%|        m = len(self.cs)
   861|         0|            0|            0|  0.00%|        if m < p:
   862|         0|            0|            0|  0.00%|            # nothing to do
   863|         0|            0|            0|  0.00%|            return
   864|         0|            0|            0|  0.00%|
   865|         0|            0|            0|  0.00%|        C = np.array(self.cs).T
   866|         0|            0|            0|  0.00%|        D = np.array(self.ds).T
   867|         0|            0|            0|  0.00%|
   868|         0|            0|            0|  0.00%|        D, R = qr(D, mode='economic')
   869|         0|            0|            0|  0.00%|        C = dot(C, R.T.conj())
   870|         0|            0|            0|  0.00%|
   871|         0|            0|            0|  0.00%|        U, S, WH = svd(C, full_matrices=False, compute_uv=True)
   872|         0|            0|            0|  0.00%|
   873|         0|            0|            0|  0.00%|        C = dot(C, inv(WH))
   874|         0|            0|            0|  0.00%|        D = dot(D, WH.T.conj())
   875|         0|            0|            0|  0.00%|
   876|         0|            0|            0|  0.00%|        for k in range(q):
   877|         0|            0|            0|  0.00%|            self.cs[k] = C[:,k].copy()
   878|         0|            0|            0|  0.00%|            self.ds[k] = D[:,k].copy()
   879|         0|            0|            0|  0.00%|
   880|         0|            0|            0|  0.00%|        del self.cs[q:]
   881|         0|            0|            0|  0.00%|        del self.ds[q:]
   882|         0|            0|            0|  0.00%|
   883|         0|            0|            0|  0.00%|
   884|         0|            0|            0|  0.00%|_doc_parts['broyden_params'] = """
   885|         0|            0|            0|  0.00%|    alpha : float, optional
   886|         0|            0|            0|  0.00%|        Initial guess for the Jacobian is ``(-1/alpha)``.
   887|         0|            0|            0|  0.00%|    reduction_method : str or tuple, optional
   888|         0|            0|            0|  0.00%|        Method used in ensuring that the rank of the Broyden matrix
   889|         0|            0|            0|  0.00%|        stays low. Can either be a string giving the name of the method,
   890|         0|            0|            0|  0.00%|        or a tuple of the form ``(method, param1, param2, ...)``
   891|         0|            0|            0|  0.00%|        that gives the name of the method and values for additional parameters.
   892|         0|            0|            0|  0.00%|
   893|         0|            0|            0|  0.00%|        Methods available:
   894|         0|            0|            0|  0.00%|
   895|         0|            0|            0|  0.00%|            - ``restart``: drop all matrix columns. Has no extra parameters.
   896|         0|            0|            0|  0.00%|            - ``simple``: drop oldest matrix column. Has no extra parameters.
   897|         0|            0|            0|  0.00%|            - ``svd``: keep only the most significant SVD components.
   898|         0|            0|            0|  0.00%|              Takes an extra parameter, ``to_retain``, which determines the
   899|         0|            0|            0|  0.00%|              number of SVD components to retain when rank reduction is done.
   900|         0|            0|            0|  0.00%|              Default is ``max_rank - 2``.
   901|         0|            0|            0|  0.00%|
   902|         0|            0|            0|  0.00%|    max_rank : int, optional
   903|         0|            0|            0|  0.00%|        Maximum rank for the Broyden matrix.
   904|         0|            0|            0|  0.00%|        Default is infinity (i.e., no rank reduction).
   905|         0|            0|            0|  0.00%|    """.strip()
   906|         0|            0|            0|  0.00%|
   907|         0|            0|            0|  0.00%|
   908|         0|            0|            0|  0.00%|class BroydenFirst(GenericBroyden):
   909|         0|            0|            0|  0.00%|    r"""
   910|         0|            0|            0|  0.00%|    Find a root of a function, using Broyden's first Jacobian approximation.
   911|         0|            0|            0|  0.00%|
   912|         0|            0|            0|  0.00%|    This method is also known as \"Broyden's good method\".
   913|         0|            0|            0|  0.00%|
   914|         0|            0|            0|  0.00%|    Parameters
   915|         0|            0|            0|  0.00%|    ----------
   916|         0|            0|            0|  0.00%|    %(params_basic)s
   917|         0|            0|            0|  0.00%|    %(broyden_params)s
   918|         0|            0|            0|  0.00%|    %(params_extra)s
   919|         0|            0|            0|  0.00%|
   920|         0|            0|            0|  0.00%|    See Also
   921|         0|            0|            0|  0.00%|    --------
   922|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
   923|         0|            0|            0|  0.00%|           functions. See ``method=='broyden1'`` in particular.
   924|         0|            0|            0|  0.00%|
   925|         0|            0|            0|  0.00%|    Notes
   926|         0|            0|            0|  0.00%|    -----
   927|         0|            0|            0|  0.00%|    This algorithm implements the inverse Jacobian Quasi-Newton update
   928|         0|            0|            0|  0.00%|
   929|         0|            0|            0|  0.00%|    .. math:: H_+ = H + (dx - H df) dx^\dagger H / ( dx^\dagger H df)
   930|         0|            0|            0|  0.00%|
   931|         0|            0|            0|  0.00%|    which corresponds to Broyden's first Jacobian update
   932|         0|            0|            0|  0.00%|
   933|         0|            0|            0|  0.00%|    .. math:: J_+ = J + (df - J dx) dx^\dagger / dx^\dagger dx
   934|         0|            0|            0|  0.00%|
   935|         0|            0|            0|  0.00%|
   936|         0|            0|            0|  0.00%|    References
   937|         0|            0|            0|  0.00%|    ----------
   938|         0|            0|            0|  0.00%|    .. [1] B.A. van der Rotten, PhD thesis,
   939|         0|            0|            0|  0.00%|       \"A limited memory Broyden method to solve high-dimensional
   940|         0|            0|            0|  0.00%|       systems of nonlinear equations\". Mathematisch Instituut,
   941|         0|            0|            0|  0.00%|       Universiteit Leiden, The Netherlands (2003).
   942|         0|            0|            0|  0.00%|
   943|         0|            0|            0|  0.00%|       https://web.archive.org/web/20161022015821/http://www.math.leidenuniv.nl/scripties/Rotten.pdf
   944|         0|            0|            0|  0.00%|
   945|         0|            0|            0|  0.00%|    """
   946|         0|            0|            0|  0.00%|
   947|         0|            0|            0|  0.00%|    def __init__(self, alpha=None, reduction_method='restart', max_rank=None):
   948|         0|            0|            0|  0.00%|        GenericBroyden.__init__(self)
   949|         0|            0|            0|  0.00%|        self.alpha = alpha
   950|         0|            0|            0|  0.00%|        self.Gm = None
   951|         0|            0|            0|  0.00%|
   952|         0|            0|            0|  0.00%|        if max_rank is None:
   953|         0|            0|            0|  0.00%|            max_rank = np.inf
   954|         0|            0|            0|  0.00%|        self.max_rank = max_rank
   955|         0|            0|            0|  0.00%|
   956|         0|            0|            0|  0.00%|        if isinstance(reduction_method, str):
   957|         0|            0|            0|  0.00%|            reduce_params = ()
   958|         0|            0|            0|  0.00%|        else:
   959|         0|            0|            0|  0.00%|            reduce_params = reduction_method[1:]
   960|         0|            0|            0|  0.00%|            reduction_method = reduction_method[0]
   961|         0|            0|            0|  0.00%|        reduce_params = (max_rank - 1,) + reduce_params
   962|         0|            0|            0|  0.00%|
   963|         0|            0|            0|  0.00%|        if reduction_method == 'svd':
   964|         0|            0|            0|  0.00%|            self._reduce = lambda: self.Gm.svd_reduce(*reduce_params)
   965|         0|            0|            0|  0.00%|        elif reduction_method == 'simple':
   966|         0|            0|            0|  0.00%|            self._reduce = lambda: self.Gm.simple_reduce(*reduce_params)
   967|         0|            0|            0|  0.00%|        elif reduction_method == 'restart':
   968|         0|            0|            0|  0.00%|            self._reduce = lambda: self.Gm.restart_reduce(*reduce_params)
   969|         0|            0|            0|  0.00%|        else:
   970|         0|            0|            0|  0.00%|            raise ValueError("Unknown rank reduction method '%s'" %
   971|         0|            0|            0|  0.00%|                             reduction_method)
   972|         0|            0|            0|  0.00%|
   973|         0|            0|            0|  0.00%|    def setup(self, x, F, func):
   974|         0|            0|            0|  0.00%|        GenericBroyden.setup(self, x, F, func)
   975|         0|            0|            0|  0.00%|        self.Gm = LowRankMatrix(-self.alpha, self.shape[0], self.dtype)
   976|         0|            0|            0|  0.00%|
   977|         0|            0|            0|  0.00%|    def todense(self):
   978|         0|            0|            0|  0.00%|        return inv(self.Gm)
   979|         0|            0|            0|  0.00%|
   980|         0|            0|            0|  0.00%|    def solve(self, f, tol=0):
   981|         0|            0|            0|  0.00%|        r = self.Gm.matvec(f)
   982|         0|            0|            0|  0.00%|        if not np.isfinite(r).all():
   983|         0|            0|            0|  0.00%|            # singular; reset the Jacobian approximation
   984|         0|            0|            0|  0.00%|            self.setup(self.last_x, self.last_f, self.func)
   985|         0|            0|            0|  0.00%|        return self.Gm.matvec(f)
   986|         0|            0|            0|  0.00%|
   987|         0|            0|            0|  0.00%|    def matvec(self, f):
   988|         0|            0|            0|  0.00%|        return self.Gm.solve(f)
   989|         0|            0|            0|  0.00%|
   990|         0|            0|            0|  0.00%|    def rsolve(self, f, tol=0):
   991|         0|            0|            0|  0.00%|        return self.Gm.rmatvec(f)
   992|         0|            0|            0|  0.00%|
   993|         0|            0|            0|  0.00%|    def rmatvec(self, f):
   994|         0|            0|            0|  0.00%|        return self.Gm.rsolve(f)
   995|         0|            0|            0|  0.00%|
   996|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
   997|         0|            0|            0|  0.00%|        self._reduce()  # reduce first to preserve secant condition
   998|         0|            0|            0|  0.00%|
   999|         0|            0|            0|  0.00%|        v = self.Gm.rmatvec(dx)
  1000|         0|            0|            0|  0.00%|        c = dx - self.Gm.matvec(df)
  1001|         0|            0|            0|  0.00%|        d = v / vdot(df, v)
  1002|         0|            0|            0|  0.00%|
  1003|         0|            0|            0|  0.00%|        self.Gm.append(c, d)
  1004|         0|            0|            0|  0.00%|
  1005|         0|            0|            0|  0.00%|
  1006|         0|            0|            0|  0.00%|class BroydenSecond(BroydenFirst):
  1007|         0|            0|            0|  0.00%|    """
  1008|         0|            0|            0|  0.00%|    Find a root of a function, using Broyden\'s second Jacobian approximation.
  1009|         0|            0|            0|  0.00%|
  1010|         0|            0|            0|  0.00%|    This method is also known as \"Broyden's bad method\".
  1011|         0|            0|            0|  0.00%|
  1012|         0|            0|            0|  0.00%|    Parameters
  1013|         0|            0|            0|  0.00%|    ----------
  1014|         0|            0|            0|  0.00%|    %(params_basic)s
  1015|         0|            0|            0|  0.00%|    %(broyden_params)s
  1016|         0|            0|            0|  0.00%|    %(params_extra)s
  1017|         0|            0|            0|  0.00%|
  1018|         0|            0|            0|  0.00%|    See Also
  1019|         0|            0|            0|  0.00%|    --------
  1020|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1021|         0|            0|            0|  0.00%|           functions. See ``method=='broyden2'`` in particular.
  1022|         0|            0|            0|  0.00%|
  1023|         0|            0|            0|  0.00%|    Notes
  1024|         0|            0|            0|  0.00%|    -----
  1025|         0|            0|            0|  0.00%|    This algorithm implements the inverse Jacobian Quasi-Newton update
  1026|         0|            0|            0|  0.00%|
  1027|         0|            0|            0|  0.00%|    .. math:: H_+ = H + (dx - H df) df^\\dagger / ( df^\\dagger df)
  1028|         0|            0|            0|  0.00%|
  1029|         0|            0|            0|  0.00%|    corresponding to Broyden's second method.
  1030|         0|            0|            0|  0.00%|
  1031|         0|            0|            0|  0.00%|    References
  1032|         0|            0|            0|  0.00%|    ----------
  1033|         0|            0|            0|  0.00%|    .. [1] B.A. van der Rotten, PhD thesis,
  1034|         0|            0|            0|  0.00%|       \"A limited memory Broyden method to solve high-dimensional
  1035|         0|            0|            0|  0.00%|       systems of nonlinear equations\". Mathematisch Instituut,
  1036|         0|            0|            0|  0.00%|       Universiteit Leiden, The Netherlands (2003).
  1037|         0|            0|            0|  0.00%|
  1038|         0|            0|            0|  0.00%|       https://web.archive.org/web/20161022015821/http://www.math.leidenuniv.nl/scripties/Rotten.pdf
  1039|         0|            0|            0|  0.00%|
  1040|         0|            0|            0|  0.00%|    """
  1041|         0|            0|            0|  0.00%|
  1042|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
  1043|         0|            0|            0|  0.00%|        self._reduce()  # reduce first to preserve secant condition
  1044|         0|            0|            0|  0.00%|
  1045|         0|            0|            0|  0.00%|        v = df
  1046|         0|            0|            0|  0.00%|        c = dx - self.Gm.matvec(df)
  1047|         0|            0|            0|  0.00%|        d = v / df_norm**2
  1048|         0|            0|            0|  0.00%|        self.Gm.append(c, d)
  1049|         0|            0|            0|  0.00%|
  1050|         0|            0|            0|  0.00%|
  1051|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1052|         0|            0|            0|  0.00%|# Broyden-like (restricted memory)
  1053|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1054|         0|            0|            0|  0.00%|
  1055|         0|            0|            0|  0.00%|class Anderson(GenericBroyden):
  1056|         0|            0|            0|  0.00%|    """
  1057|         0|            0|            0|  0.00%|    Find a root of a function, using (extended) Anderson mixing.
  1058|         0|            0|            0|  0.00%|
  1059|         0|            0|            0|  0.00%|    The Jacobian is formed by for a 'best' solution in the space
  1060|         0|            0|            0|  0.00%|    spanned by last `M` vectors. As a result, only a MxM matrix
  1061|         0|            0|            0|  0.00%|    inversions and MxN multiplications are required. [Ey]_
  1062|         0|            0|            0|  0.00%|
  1063|         0|            0|            0|  0.00%|    Parameters
  1064|         0|            0|            0|  0.00%|    ----------
  1065|         0|            0|            0|  0.00%|    %(params_basic)s
  1066|         0|            0|            0|  0.00%|    alpha : float, optional
  1067|         0|            0|            0|  0.00%|        Initial guess for the Jacobian is (-1/alpha).
  1068|         0|            0|            0|  0.00%|    M : float, optional
  1069|         0|            0|            0|  0.00%|        Number of previous vectors to retain. Defaults to 5.
  1070|         0|            0|            0|  0.00%|    w0 : float, optional
  1071|         0|            0|            0|  0.00%|        Regularization parameter for numerical stability.
  1072|         0|            0|            0|  0.00%|        Compared to unity, good values of the order of 0.01.
  1073|         0|            0|            0|  0.00%|    %(params_extra)s
  1074|         0|            0|            0|  0.00%|
  1075|         0|            0|            0|  0.00%|    See Also
  1076|         0|            0|            0|  0.00%|    --------
  1077|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1078|         0|            0|            0|  0.00%|           functions. See ``method=='anderson'`` in particular.
  1079|         0|            0|            0|  0.00%|
  1080|         0|            0|            0|  0.00%|    References
  1081|         0|            0|            0|  0.00%|    ----------
  1082|         0|            0|            0|  0.00%|    .. [Ey] V. Eyert, J. Comp. Phys., 124, 271 (1996).
  1083|         0|            0|            0|  0.00%|
  1084|         0|            0|            0|  0.00%|    """
  1085|         0|            0|            0|  0.00%|
  1086|         0|            0|            0|  0.00%|    # Note:
  1087|         0|            0|            0|  0.00%|    #
  1088|         0|            0|            0|  0.00%|    # Anderson method maintains a rank M approximation of the inverse Jacobian,
  1089|         0|            0|            0|  0.00%|    #
  1090|         0|            0|            0|  0.00%|    #     J^-1 v ~ -v*alpha + (dX + alpha dF) A^-1 dF^H v
  1091|         0|            0|            0|  0.00%|    #     A      = W + dF^H dF
  1092|         0|            0|            0|  0.00%|    #     W      = w0^2 diag(dF^H dF)
  1093|         0|            0|            0|  0.00%|    #
  1094|         0|            0|            0|  0.00%|    # so that for w0 = 0 the secant condition applies for last M iterates, i.e.,
  1095|         0|            0|            0|  0.00%|    #
  1096|         0|            0|            0|  0.00%|    #     J^-1 df_j = dx_j
  1097|         0|            0|            0|  0.00%|    #
  1098|         0|            0|            0|  0.00%|    # for all j = 0 ... M-1.
  1099|         0|            0|            0|  0.00%|    #
  1100|         0|            0|            0|  0.00%|    # Moreover, (from Sherman-Morrison-Woodbury formula)
  1101|         0|            0|            0|  0.00%|    #
  1102|         0|            0|            0|  0.00%|    #    J v ~ [ b I - b^2 C (I + b dF^H A^-1 C)^-1 dF^H ] v
  1103|         0|            0|            0|  0.00%|    #    C   = (dX + alpha dF) A^-1
  1104|         0|            0|            0|  0.00%|    #    b   = -1/alpha
  1105|         0|            0|            0|  0.00%|    #
  1106|         0|            0|            0|  0.00%|    # and after simplification
  1107|         0|            0|            0|  0.00%|    #
  1108|         0|            0|            0|  0.00%|    #    J v ~ -v/alpha + (dX/alpha + dF) (dF^H dX - alpha W)^-1 dF^H v
  1109|         0|            0|            0|  0.00%|    #
  1110|         0|            0|            0|  0.00%|
  1111|         0|            0|            0|  0.00%|    def __init__(self, alpha=None, w0=0.01, M=5):
  1112|         0|            0|            0|  0.00%|        GenericBroyden.__init__(self)
  1113|         0|            0|            0|  0.00%|        self.alpha = alpha
  1114|         0|            0|            0|  0.00%|        self.M = M
  1115|         0|            0|            0|  0.00%|        self.dx = []
  1116|         0|            0|            0|  0.00%|        self.df = []
  1117|         0|            0|            0|  0.00%|        self.gamma = None
  1118|         0|            0|            0|  0.00%|        self.w0 = w0
  1119|         0|            0|            0|  0.00%|
  1120|         0|            0|            0|  0.00%|    def solve(self, f, tol=0):
  1121|         0|            0|            0|  0.00%|        dx = -self.alpha*f
  1122|         0|            0|            0|  0.00%|
  1123|         0|            0|            0|  0.00%|        n = len(self.dx)
  1124|         0|            0|            0|  0.00%|        if n == 0:
  1125|         0|            0|            0|  0.00%|            return dx
  1126|         0|            0|            0|  0.00%|
  1127|         0|            0|            0|  0.00%|        df_f = np.empty(n, dtype=f.dtype)
  1128|         0|            0|            0|  0.00%|        for k in range(n):
  1129|         0|            0|            0|  0.00%|            df_f[k] = vdot(self.df[k], f)
  1130|         0|            0|            0|  0.00%|
  1131|         0|            0|            0|  0.00%|        try:
  1132|         0|            0|            0|  0.00%|            gamma = solve(self.a, df_f)
  1133|         0|            0|            0|  0.00%|        except LinAlgError:
  1134|         0|            0|            0|  0.00%|            # singular; reset the Jacobian approximation
  1135|         0|            0|            0|  0.00%|            del self.dx[:]
  1136|         0|            0|            0|  0.00%|            del self.df[:]
  1137|         0|            0|            0|  0.00%|            return dx
  1138|         0|            0|            0|  0.00%|
  1139|         0|            0|            0|  0.00%|        for m in range(n):
  1140|         0|            0|            0|  0.00%|            dx += gamma[m]*(self.dx[m] + self.alpha*self.df[m])
  1141|         0|            0|            0|  0.00%|        return dx
  1142|         0|            0|            0|  0.00%|
  1143|         0|            0|            0|  0.00%|    def matvec(self, f):
  1144|         0|            0|            0|  0.00%|        dx = -f/self.alpha
  1145|         0|            0|            0|  0.00%|
  1146|         0|            0|            0|  0.00%|        n = len(self.dx)
  1147|         0|            0|            0|  0.00%|        if n == 0:
  1148|         0|            0|            0|  0.00%|            return dx
  1149|         0|            0|            0|  0.00%|
  1150|         0|            0|            0|  0.00%|        df_f = np.empty(n, dtype=f.dtype)
  1151|         0|            0|            0|  0.00%|        for k in range(n):
  1152|         0|            0|            0|  0.00%|            df_f[k] = vdot(self.df[k], f)
  1153|         0|            0|            0|  0.00%|
  1154|         0|            0|            0|  0.00%|        b = np.empty((n, n), dtype=f.dtype)
  1155|         0|            0|            0|  0.00%|        for i in range(n):
  1156|         0|            0|            0|  0.00%|            for j in range(n):
  1157|         0|            0|            0|  0.00%|                b[i,j] = vdot(self.df[i], self.dx[j])
  1158|         0|            0|            0|  0.00%|                if i == j and self.w0 != 0:
  1159|         0|            0|            0|  0.00%|                    b[i,j] -= vdot(self.df[i], self.df[i])*self.w0**2*self.alpha
  1160|         0|            0|            0|  0.00%|        gamma = solve(b, df_f)
  1161|         0|            0|            0|  0.00%|
  1162|         0|            0|            0|  0.00%|        for m in range(n):
  1163|         0|            0|            0|  0.00%|            dx += gamma[m]*(self.df[m] + self.dx[m]/self.alpha)
  1164|         0|            0|            0|  0.00%|        return dx
  1165|         0|            0|            0|  0.00%|
  1166|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
  1167|         0|            0|            0|  0.00%|        if self.M == 0:
  1168|         0|            0|            0|  0.00%|            return
  1169|         0|            0|            0|  0.00%|
  1170|         0|            0|            0|  0.00%|        self.dx.append(dx)
  1171|         0|            0|            0|  0.00%|        self.df.append(df)
  1172|         0|            0|            0|  0.00%|
  1173|         0|            0|            0|  0.00%|        while len(self.dx) > self.M:
  1174|         0|            0|            0|  0.00%|            self.dx.pop(0)
  1175|         0|            0|            0|  0.00%|            self.df.pop(0)
  1176|         0|            0|            0|  0.00%|
  1177|         0|            0|            0|  0.00%|        n = len(self.dx)
  1178|         0|            0|            0|  0.00%|        a = np.zeros((n, n), dtype=f.dtype)
  1179|         0|            0|            0|  0.00%|
  1180|         0|            0|            0|  0.00%|        for i in range(n):
  1181|         0|            0|            0|  0.00%|            for j in range(i, n):
  1182|         0|            0|            0|  0.00%|                if i == j:
  1183|         0|            0|            0|  0.00%|                    wd = self.w0**2
  1184|         0|            0|            0|  0.00%|                else:
  1185|         0|            0|            0|  0.00%|                    wd = 0
  1186|         0|            0|            0|  0.00%|                a[i,j] = (1+wd)*vdot(self.df[i], self.df[j])
  1187|         0|            0|            0|  0.00%|
  1188|         0|            0|            0|  0.00%|        a += np.triu(a, 1).T.conj()
  1189|         0|            0|            0|  0.00%|        self.a = a
  1190|         0|            0|            0|  0.00%|
  1191|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1192|         0|            0|            0|  0.00%|# Simple iterations
  1193|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1194|         0|            0|            0|  0.00%|
  1195|         0|            0|            0|  0.00%|
  1196|         0|            0|            0|  0.00%|class DiagBroyden(GenericBroyden):
  1197|         0|            0|            0|  0.00%|    """
  1198|         0|            0|            0|  0.00%|    Find a root of a function, using diagonal Broyden Jacobian approximation.
  1199|         0|            0|            0|  0.00%|
  1200|         0|            0|            0|  0.00%|    The Jacobian approximation is derived from previous iterations, by
  1201|         0|            0|            0|  0.00%|    retaining only the diagonal of Broyden matrices.
  1202|         0|            0|            0|  0.00%|
  1203|         0|            0|            0|  0.00%|    .. warning::
  1204|         0|            0|            0|  0.00%|
  1205|         0|            0|            0|  0.00%|       This algorithm may be useful for specific problems, but whether
  1206|         0|            0|            0|  0.00%|       it will work may depend strongly on the problem.
  1207|         0|            0|            0|  0.00%|
  1208|         0|            0|            0|  0.00%|    Parameters
  1209|         0|            0|            0|  0.00%|    ----------
  1210|         0|            0|            0|  0.00%|    %(params_basic)s
  1211|         0|            0|            0|  0.00%|    alpha : float, optional
  1212|         0|            0|            0|  0.00%|        Initial guess for the Jacobian is (-1/alpha).
  1213|         0|            0|            0|  0.00%|    %(params_extra)s
  1214|         0|            0|            0|  0.00%|
  1215|         0|            0|            0|  0.00%|    See Also
  1216|         0|            0|            0|  0.00%|    --------
  1217|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1218|         0|            0|            0|  0.00%|           functions. See ``method=='diagbroyden'`` in particular.
  1219|         0|            0|            0|  0.00%|    """
  1220|         0|            0|            0|  0.00%|
  1221|         0|            0|            0|  0.00%|    def __init__(self, alpha=None):
  1222|         0|            0|            0|  0.00%|        GenericBroyden.__init__(self)
  1223|         0|            0|            0|  0.00%|        self.alpha = alpha
  1224|         0|            0|            0|  0.00%|
  1225|         0|            0|            0|  0.00%|    def setup(self, x, F, func):
  1226|         0|            0|            0|  0.00%|        GenericBroyden.setup(self, x, F, func)
  1227|         0|            0|            0|  0.00%|        self.d = np.full((self.shape[0],), 1 / self.alpha, dtype=self.dtype)
  1228|         0|            0|            0|  0.00%|
  1229|         0|            0|            0|  0.00%|    def solve(self, f, tol=0):
  1230|         0|            0|            0|  0.00%|        return -f / self.d
  1231|         0|            0|            0|  0.00%|
  1232|         0|            0|            0|  0.00%|    def matvec(self, f):
  1233|         0|            0|            0|  0.00%|        return -f * self.d
  1234|         0|            0|            0|  0.00%|
  1235|         0|            0|            0|  0.00%|    def rsolve(self, f, tol=0):
  1236|         0|            0|            0|  0.00%|        return -f / self.d.conj()
  1237|         0|            0|            0|  0.00%|
  1238|         0|            0|            0|  0.00%|    def rmatvec(self, f):
  1239|         0|            0|            0|  0.00%|        return -f * self.d.conj()
  1240|         0|            0|            0|  0.00%|
  1241|         0|            0|            0|  0.00%|    def todense(self):
  1242|         0|            0|            0|  0.00%|        return np.diag(-self.d)
  1243|         0|            0|            0|  0.00%|
  1244|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
  1245|         0|            0|            0|  0.00%|        self.d -= (df + self.d*dx)*dx/dx_norm**2
  1246|         0|            0|            0|  0.00%|
  1247|         0|            0|            0|  0.00%|
  1248|         0|            0|            0|  0.00%|class LinearMixing(GenericBroyden):
  1249|         0|            0|            0|  0.00%|    """
  1250|         0|            0|            0|  0.00%|    Find a root of a function, using a scalar Jacobian approximation.
  1251|         0|            0|            0|  0.00%|
  1252|         0|            0|            0|  0.00%|    .. warning::
  1253|         0|            0|            0|  0.00%|
  1254|         0|            0|            0|  0.00%|       This algorithm may be useful for specific problems, but whether
  1255|         0|            0|            0|  0.00%|       it will work may depend strongly on the problem.
  1256|         0|            0|            0|  0.00%|
  1257|         0|            0|            0|  0.00%|    Parameters
  1258|         0|            0|            0|  0.00%|    ----------
  1259|         0|            0|            0|  0.00%|    %(params_basic)s
  1260|         0|            0|            0|  0.00%|    alpha : float, optional
  1261|         0|            0|            0|  0.00%|        The Jacobian approximation is (-1/alpha).
  1262|         0|            0|            0|  0.00%|    %(params_extra)s
  1263|         0|            0|            0|  0.00%|
  1264|         0|            0|            0|  0.00%|    See Also
  1265|         0|            0|            0|  0.00%|    --------
  1266|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1267|         0|            0|            0|  0.00%|           functions. See ``method=='linearmixing'`` in particular.
  1268|         0|            0|            0|  0.00%|
  1269|         0|            0|            0|  0.00%|    """
  1270|         0|            0|            0|  0.00%|
  1271|         0|            0|            0|  0.00%|    def __init__(self, alpha=None):
  1272|         0|            0|            0|  0.00%|        GenericBroyden.__init__(self)
  1273|         0|            0|            0|  0.00%|        self.alpha = alpha
  1274|         0|            0|            0|  0.00%|
  1275|         0|            0|            0|  0.00%|    def solve(self, f, tol=0):
  1276|         0|            0|            0|  0.00%|        return -f*self.alpha
  1277|         0|            0|            0|  0.00%|
  1278|         0|            0|            0|  0.00%|    def matvec(self, f):
  1279|         0|            0|            0|  0.00%|        return -f/self.alpha
  1280|         0|            0|            0|  0.00%|
  1281|         0|            0|            0|  0.00%|    def rsolve(self, f, tol=0):
  1282|         0|            0|            0|  0.00%|        return -f*np.conj(self.alpha)
  1283|         0|            0|            0|  0.00%|
  1284|         0|            0|            0|  0.00%|    def rmatvec(self, f):
  1285|         0|            0|            0|  0.00%|        return -f/np.conj(self.alpha)
  1286|         0|            0|            0|  0.00%|
  1287|         0|            0|            0|  0.00%|    def todense(self):
  1288|         0|            0|            0|  0.00%|        return np.diag(np.full(self.shape[0], -1/self.alpha))
  1289|         0|            0|            0|  0.00%|
  1290|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
  1291|         0|            0|            0|  0.00%|        pass
  1292|         0|            0|            0|  0.00%|
  1293|         0|            0|            0|  0.00%|
  1294|         0|            0|            0|  0.00%|class ExcitingMixing(GenericBroyden):
  1295|         0|            0|            0|  0.00%|    """
  1296|         0|            0|            0|  0.00%|    Find a root of a function, using a tuned diagonal Jacobian approximation.
  1297|         0|            0|            0|  0.00%|
  1298|         0|            0|            0|  0.00%|    The Jacobian matrix is diagonal and is tuned on each iteration.
  1299|         0|            0|            0|  0.00%|
  1300|         0|            0|            0|  0.00%|    .. warning::
  1301|         0|            0|            0|  0.00%|
  1302|         0|            0|            0|  0.00%|       This algorithm may be useful for specific problems, but whether
  1303|         0|            0|            0|  0.00%|       it will work may depend strongly on the problem.
  1304|         0|            0|            0|  0.00%|
  1305|         0|            0|            0|  0.00%|    See Also
  1306|         0|            0|            0|  0.00%|    --------
  1307|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1308|         0|            0|            0|  0.00%|           functions. See ``method=='excitingmixing'`` in particular.
  1309|         0|            0|            0|  0.00%|
  1310|         0|            0|            0|  0.00%|    Parameters
  1311|         0|            0|            0|  0.00%|    ----------
  1312|         0|            0|            0|  0.00%|    %(params_basic)s
  1313|         0|            0|            0|  0.00%|    alpha : float, optional
  1314|         0|            0|            0|  0.00%|        Initial Jacobian approximation is (-1/alpha).
  1315|         0|            0|            0|  0.00%|    alphamax : float, optional
  1316|         0|            0|            0|  0.00%|        The entries of the diagonal Jacobian are kept in the range
  1317|         0|            0|            0|  0.00%|        ``[alpha, alphamax]``.
  1318|         0|            0|            0|  0.00%|    %(params_extra)s
  1319|         0|            0|            0|  0.00%|    """
  1320|         0|            0|            0|  0.00%|
  1321|         0|            0|            0|  0.00%|    def __init__(self, alpha=None, alphamax=1.0):
  1322|         0|            0|            0|  0.00%|        GenericBroyden.__init__(self)
  1323|         0|            0|            0|  0.00%|        self.alpha = alpha
  1324|         0|            0|            0|  0.00%|        self.alphamax = alphamax
  1325|         0|            0|            0|  0.00%|        self.beta = None
  1326|         0|            0|            0|  0.00%|
  1327|         0|            0|            0|  0.00%|    def setup(self, x, F, func):
  1328|         0|            0|            0|  0.00%|        GenericBroyden.setup(self, x, F, func)
  1329|         0|            0|            0|  0.00%|        self.beta = np.full((self.shape[0],), self.alpha, dtype=self.dtype)
  1330|         0|            0|            0|  0.00%|
  1331|         0|            0|            0|  0.00%|    def solve(self, f, tol=0):
  1332|         0|            0|            0|  0.00%|        return -f*self.beta
  1333|         0|            0|            0|  0.00%|
  1334|         0|            0|            0|  0.00%|    def matvec(self, f):
  1335|         0|            0|            0|  0.00%|        return -f/self.beta
  1336|         0|            0|            0|  0.00%|
  1337|         0|            0|            0|  0.00%|    def rsolve(self, f, tol=0):
  1338|         0|            0|            0|  0.00%|        return -f*self.beta.conj()
  1339|         0|            0|            0|  0.00%|
  1340|         0|            0|            0|  0.00%|    def rmatvec(self, f):
  1341|         0|            0|            0|  0.00%|        return -f/self.beta.conj()
  1342|         0|            0|            0|  0.00%|
  1343|         0|            0|            0|  0.00%|    def todense(self):
  1344|         0|            0|            0|  0.00%|        return np.diag(-1/self.beta)
  1345|         0|            0|            0|  0.00%|
  1346|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
  1347|         0|            0|            0|  0.00%|        incr = f*self.last_f > 0
  1348|         0|            0|            0|  0.00%|        self.beta[incr] += self.alpha
  1349|         0|            0|            0|  0.00%|        self.beta[~incr] = self.alpha
  1350|         0|            0|            0|  0.00%|        np.clip(self.beta, 0, self.alphamax, out=self.beta)
  1351|         0|            0|            0|  0.00%|
  1352|         0|            0|            0|  0.00%|
  1353|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1354|         0|            0|            0|  0.00%|# Iterative/Krylov approximated Jacobians
  1355|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1356|         0|            0|            0|  0.00%|
  1357|         0|            0|            0|  0.00%|class KrylovJacobian(Jacobian):
  1358|         0|            0|            0|  0.00%|    r"""
  1359|         0|            0|            0|  0.00%|    Find a root of a function, using Krylov approximation for inverse Jacobian.
  1360|         0|            0|            0|  0.00%|
  1361|         0|            0|            0|  0.00%|    This method is suitable for solving large-scale problems.
  1362|         0|            0|            0|  0.00%|
  1363|         0|            0|            0|  0.00%|    Parameters
  1364|         0|            0|            0|  0.00%|    ----------
  1365|         0|            0|            0|  0.00%|    %(params_basic)s
  1366|         0|            0|            0|  0.00%|    rdiff : float, optional
  1367|         0|            0|            0|  0.00%|        Relative step size to use in numerical differentiation.
  1368|         0|            0|            0|  0.00%|    method : {'lgmres', 'gmres', 'bicgstab', 'cgs', 'minres'} or function
  1369|         0|            0|            0|  0.00%|        Krylov method to use to approximate the Jacobian.
  1370|         0|            0|            0|  0.00%|        Can be a string, or a function implementing the same interface as
  1371|         0|            0|            0|  0.00%|        the iterative solvers in `scipy.sparse.linalg`.
  1372|         0|            0|            0|  0.00%|
  1373|         0|            0|            0|  0.00%|        The default is `scipy.sparse.linalg.lgmres`.
  1374|         0|            0|            0|  0.00%|    inner_maxiter : int, optional
  1375|         0|            0|            0|  0.00%|        Parameter to pass to the "inner" Krylov solver: maximum number of
  1376|         0|            0|            0|  0.00%|        iterations. Iteration will stop after maxiter steps even if the
  1377|         0|            0|            0|  0.00%|        specified tolerance has not been achieved.
  1378|         0|            0|            0|  0.00%|    inner_M : LinearOperator or InverseJacobian
  1379|         0|            0|            0|  0.00%|        Preconditioner for the inner Krylov iteration.
  1380|         0|            0|            0|  0.00%|        Note that you can use also inverse Jacobians as (adaptive)
  1381|         0|            0|            0|  0.00%|        preconditioners. For example,
  1382|         0|            0|            0|  0.00%|
  1383|         0|            0|            0|  0.00%|        >>> from scipy.optimize.nonlin import BroydenFirst, KrylovJacobian
  1384|         0|            0|            0|  0.00%|        >>> from scipy.optimize.nonlin import InverseJacobian
  1385|         0|            0|            0|  0.00%|        >>> jac = BroydenFirst()
  1386|         0|            0|            0|  0.00%|        >>> kjac = KrylovJacobian(inner_M=InverseJacobian(jac))
  1387|         0|            0|            0|  0.00%|
  1388|         0|            0|            0|  0.00%|        If the preconditioner has a method named 'update', it will be called
  1389|         0|            0|            0|  0.00%|        as ``update(x, f)`` after each nonlinear step, with ``x`` giving
  1390|         0|            0|            0|  0.00%|        the current point, and ``f`` the current function value.
  1391|         0|            0|            0|  0.00%|    outer_k : int, optional
  1392|         0|            0|            0|  0.00%|        Size of the subspace kept across LGMRES nonlinear iterations.
  1393|         0|            0|            0|  0.00%|        See `scipy.sparse.linalg.lgmres` for details.
  1394|         0|            0|            0|  0.00%|    inner_kwargs : kwargs
  1395|         0|            0|            0|  0.00%|        Keyword parameters for the "inner" Krylov solver
  1396|         0|            0|            0|  0.00%|        (defined with `method`). Parameter names must start with
  1397|         0|            0|            0|  0.00%|        the `inner_` prefix which will be stripped before passing on
  1398|         0|            0|            0|  0.00%|        the inner method. See, e.g., `scipy.sparse.linalg.gmres` for details.
  1399|         0|            0|            0|  0.00%|    %(params_extra)s
  1400|         0|            0|            0|  0.00%|
  1401|         0|            0|            0|  0.00%|    See Also
  1402|         0|            0|            0|  0.00%|    --------
  1403|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1404|         0|            0|            0|  0.00%|           functions. See ``method=='krylov'`` in particular.
  1405|         0|            0|            0|  0.00%|    scipy.sparse.linalg.gmres
  1406|         0|            0|            0|  0.00%|    scipy.sparse.linalg.lgmres
  1407|         0|            0|            0|  0.00%|
  1408|         0|            0|            0|  0.00%|    Notes
  1409|         0|            0|            0|  0.00%|    -----
  1410|         0|            0|            0|  0.00%|    This function implements a Newton-Krylov solver. The basic idea is
  1411|         0|            0|            0|  0.00%|    to compute the inverse of the Jacobian with an iterative Krylov
  1412|         0|            0|            0|  0.00%|    method. These methods require only evaluating the Jacobian-vector
  1413|         0|            0|            0|  0.00%|    products, which are conveniently approximated by a finite difference:
  1414|         0|            0|            0|  0.00%|
  1415|         0|            0|            0|  0.00%|    .. math:: J v \approx (f(x + \omega*v/|v|) - f(x)) / \omega
  1416|         0|            0|            0|  0.00%|
  1417|         0|            0|            0|  0.00%|    Due to the use of iterative matrix inverses, these methods can
  1418|         0|            0|            0|  0.00%|    deal with large nonlinear problems.
  1419|         0|            0|            0|  0.00%|
  1420|         0|            0|            0|  0.00%|    SciPy's `scipy.sparse.linalg` module offers a selection of Krylov
  1421|         0|            0|            0|  0.00%|    solvers to choose from. The default here is `lgmres`, which is a
  1422|         0|            0|            0|  0.00%|    variant of restarted GMRES iteration that reuses some of the
  1423|         0|            0|            0|  0.00%|    information obtained in the previous Newton steps to invert
  1424|         0|            0|            0|  0.00%|    Jacobians in subsequent steps.
  1425|         0|            0|            0|  0.00%|
  1426|         0|            0|            0|  0.00%|    For a review on Newton-Krylov methods, see for example [1]_,
  1427|         0|            0|            0|  0.00%|    and for the LGMRES sparse inverse method, see [2]_.
  1428|         0|            0|            0|  0.00%|
  1429|         0|            0|            0|  0.00%|    References
  1430|         0|            0|            0|  0.00%|    ----------
  1431|         0|            0|            0|  0.00%|    .. [1] D.A. Knoll and D.E. Keyes, J. Comp. Phys. 193, 357 (2004).
  1432|         0|            0|            0|  0.00%|           :doi:`10.1016/j.jcp.2003.08.010`
  1433|         0|            0|            0|  0.00%|    .. [2] A.H. Baker and E.R. Jessup and T. Manteuffel,
  1434|         0|            0|            0|  0.00%|           SIAM J. Matrix Anal. Appl. 26, 962 (2005).
  1435|         0|            0|            0|  0.00%|           :doi:`10.1137/S0895479803422014`
  1436|         0|            0|            0|  0.00%|
  1437|         0|            0|            0|  0.00%|    """
  1438|         0|            0|            0|  0.00%|
  1439|         0|            0|            0|  0.00%|    def __init__(self, rdiff=None, method='lgmres', inner_maxiter=20,
  1440|         0|            0|            0|  0.00%|                 inner_M=None, outer_k=10, **kw):
  1441|         0|            0|            0|  0.00%|        self.preconditioner = inner_M
  1442|         0|            0|            0|  0.00%|        self.rdiff = rdiff
  1443|         0|            0|            0|  0.00%|        self.method = dict(
  1444|         0|            0|            0|  0.00%|            bicgstab=scipy.sparse.linalg.bicgstab,
  1445|         0|            0|            0|  0.00%|            gmres=scipy.sparse.linalg.gmres,
  1446|         0|            0|            0|  0.00%|            lgmres=scipy.sparse.linalg.lgmres,
  1447|         0|            0|            0|  0.00%|            cgs=scipy.sparse.linalg.cgs,
  1448|         0|            0|            0|  0.00%|            minres=scipy.sparse.linalg.minres,
  1449|         0|            0|            0|  0.00%|            ).get(method, method)
  1450|         0|            0|            0|  0.00%|
  1451|         0|            0|            0|  0.00%|        self.method_kw = dict(maxiter=inner_maxiter, M=self.preconditioner)
  1452|         0|            0|            0|  0.00%|
  1453|         0|            0|            0|  0.00%|        if self.method is scipy.sparse.linalg.gmres:
  1454|         0|            0|            0|  0.00%|            # Replace GMRES's outer iteration with Newton steps
  1455|         0|            0|            0|  0.00%|            self.method_kw['restrt'] = inner_maxiter
  1456|         0|            0|            0|  0.00%|            self.method_kw['maxiter'] = 1
  1457|         0|            0|            0|  0.00%|            self.method_kw.setdefault('atol', 0)
  1458|         0|            0|            0|  0.00%|        elif self.method is scipy.sparse.linalg.gcrotmk:
  1459|         0|            0|            0|  0.00%|            self.method_kw.setdefault('atol', 0)
  1460|         0|            0|            0|  0.00%|        elif self.method is scipy.sparse.linalg.lgmres:
  1461|         0|            0|            0|  0.00%|            self.method_kw['outer_k'] = outer_k
  1462|         0|            0|            0|  0.00%|            # Replace LGMRES's outer iteration with Newton steps
  1463|         0|            0|            0|  0.00%|            self.method_kw['maxiter'] = 1
  1464|         0|            0|            0|  0.00%|            # Carry LGMRES's `outer_v` vectors across nonlinear iterations
  1465|         0|            0|            0|  0.00%|            self.method_kw.setdefault('outer_v', [])
  1466|         0|            0|            0|  0.00%|            self.method_kw.setdefault('prepend_outer_v', True)
  1467|         0|            0|            0|  0.00%|            # But don't carry the corresponding Jacobian*v products, in case
  1468|         0|            0|            0|  0.00%|            # the Jacobian changes a lot in the nonlinear step
  1469|         0|            0|            0|  0.00%|            #
  1470|         0|            0|            0|  0.00%|            # XXX: some trust-region inspired ideas might be more efficient...
  1471|         0|            0|            0|  0.00%|            #      See e.g., Brown & Saad. But needs to be implemented separately
  1472|         0|            0|            0|  0.00%|            #      since it's not an inexact Newton method.
  1473|         0|            0|            0|  0.00%|            self.method_kw.setdefault('store_outer_Av', False)
  1474|         0|            0|            0|  0.00%|            self.method_kw.setdefault('atol', 0)
  1475|         0|            0|            0|  0.00%|
  1476|         0|            0|            0|  0.00%|        for key, value in kw.items():
  1477|         0|            0|            0|  0.00%|            if not key.startswith('inner_'):
  1478|         0|            0|            0|  0.00%|                raise ValueError("Unknown parameter %s" % key)
  1479|         0|            0|            0|  0.00%|            self.method_kw[key[6:]] = value
  1480|         0|            0|            0|  0.00%|
  1481|         0|            0|            0|  0.00%|    def _update_diff_step(self):
  1482|         0|            0|            0|  0.00%|        mx = abs(self.x0).max()
  1483|         0|            0|            0|  0.00%|        mf = abs(self.f0).max()
  1484|         0|            0|            0|  0.00%|        self.omega = self.rdiff * max(1, mx) / max(1, mf)
  1485|         0|            0|            0|  0.00%|
  1486|         0|            0|            0|  0.00%|    def matvec(self, v):
  1487|         0|            0|            0|  0.00%|        nv = norm(v)
  1488|         0|            0|            0|  0.00%|        if nv == 0:
  1489|         0|            0|            0|  0.00%|            return 0*v
  1490|         0|            0|            0|  0.00%|        sc = self.omega / nv
  1491|         0|            0|            0|  0.00%|        r = (self.func(self.x0 + sc*v) - self.f0) / sc
  1492|         0|            0|            0|  0.00%|        if not np.all(np.isfinite(r)) and np.all(np.isfinite(v)):
  1493|         0|            0|            0|  0.00%|            raise ValueError('Function returned non-finite results')
  1494|         0|            0|            0|  0.00%|        return r
  1495|         0|            0|            0|  0.00%|
  1496|         0|            0|            0|  0.00%|    def solve(self, rhs, tol=0):
  1497|         0|            0|            0|  0.00%|        if 'tol' in self.method_kw:
  1498|         0|            0|            0|  0.00%|            sol, info = self.method(self.op, rhs, **self.method_kw)
  1499|         0|            0|            0|  0.00%|        else:
  1500|         0|            0|            0|  0.00%|            sol, info = self.method(self.op, rhs, tol=tol, **self.method_kw)
  1501|         0|            0|            0|  0.00%|        return sol
  1502|         0|            0|            0|  0.00%|
  1503|         0|            0|            0|  0.00%|    def update(self, x, f):
  1504|         0|            0|            0|  0.00%|        self.x0 = x
  1505|         0|            0|            0|  0.00%|        self.f0 = f
  1506|         0|            0|            0|  0.00%|        self._update_diff_step()
  1507|         0|            0|            0|  0.00%|
  1508|         0|            0|            0|  0.00%|        # Update also the preconditioner, if possible
  1509|         0|            0|            0|  0.00%|        if self.preconditioner is not None:
  1510|         0|            0|            0|  0.00%|            if hasattr(self.preconditioner, 'update'):
  1511|         0|            0|            0|  0.00%|                self.preconditioner.update(x, f)
  1512|         0|            0|            0|  0.00%|
  1513|         0|            0|            0|  0.00%|    def setup(self, x, f, func):
  1514|         0|            0|            0|  0.00%|        Jacobian.setup(self, x, f, func)
  1515|         0|            0|            0|  0.00%|        self.x0 = x
  1516|         0|            0|            0|  0.00%|        self.f0 = f
  1517|         0|            0|            0|  0.00%|        self.op = scipy.sparse.linalg.aslinearoperator(self)
  1518|         0|            0|            0|  0.00%|
  1519|         0|            0|            0|  0.00%|        if self.rdiff is None:
  1520|         0|            0|            0|  0.00%|            self.rdiff = np.finfo(x.dtype).eps ** (1./2)
  1521|         0|            0|            0|  0.00%|
  1522|         0|            0|            0|  0.00%|        self._update_diff_step()
  1523|         0|            0|            0|  0.00%|
  1524|         0|            0|            0|  0.00%|        # Setup also the preconditioner, if possible
  1525|         0|            0|            0|  0.00%|        if self.preconditioner is not None:
  1526|         0|            0|            0|  0.00%|            if hasattr(self.preconditioner, 'setup'):
  1527|         0|            0|            0|  0.00%|                self.preconditioner.setup(x, f, func)
  1528|         0|            0|            0|  0.00%|
  1529|         0|            0|            0|  0.00%|
  1530|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1531|         0|            0|            0|  0.00%|# Wrapper functions
  1532|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1533|         0|            0|            0|  0.00%|
  1534|         0|            0|            0|  0.00%|def _nonlin_wrapper(name, jac):
  1535|         0|            0|            0|  0.00%|    """
  1536|         0|            0|            0|  0.00%|    Construct a solver wrapper with given name and Jacobian approx.
  1537|         0|            0|            0|  0.00%|
  1538|         0|            0|            0|  0.00%|    It inspects the keyword arguments of ``jac.__init__``, and allows to
  1539|         0|            0|            0|  0.00%|    use the same arguments in the wrapper function, in addition to the
  1540|         0|            0|            0|  0.00%|    keyword arguments of `nonlin_solve`
  1541|         0|            0|            0|  0.00%|
  1542|         0|            0|            0|  0.00%|    """
  1543|         0|            0|            0|  0.00%|    signature = _getfullargspec(jac.__init__)
  1544|         0|            0|            0|  0.00%|    args, varargs, varkw, defaults, kwonlyargs, kwdefaults, _ = signature
  1545|         0|            0|            0|  0.00%|    kwargs = list(zip(args[-len(defaults):], defaults))
  1546|         0|            0|            0|  0.00%|    kw_str = ", ".join(["%s=%r" % (k, v) for k, v in kwargs])
  1547|         0|            0|            0|  0.00%|    if kw_str:
  1548|         0|            0|            0|  0.00%|        kw_str = ", " + kw_str
  1549|         0|            0|            0|  0.00%|    kwkw_str = ", ".join(["%s=%s" % (k, k) for k, v in kwargs])
  1550|         0|            0|            0|  0.00%|    if kwkw_str:
  1551|         0|            0|            0|  0.00%|        kwkw_str = kwkw_str + ", "
  1552|         0|            0|            0|  0.00%|    if kwonlyargs:
  1553|         0|            0|            0|  0.00%|        raise ValueError('Unexpected signature %s' % signature)
  1554|         0|            0|            0|  0.00%|
  1555|         0|            0|            0|  0.00%|    # Construct the wrapper function so that its keyword arguments
  1556|         0|            0|            0|  0.00%|    # are visible in pydoc.help etc.
  1557|         0|            0|            0|  0.00%|    wrapper = """
  1558|         0|            0|            0|  0.00%|def %(name)s(F, xin, iter=None %(kw)s, verbose=False, maxiter=None,
  1559|         0|            0|            0|  0.00%|             f_tol=None, f_rtol=None, x_tol=None, x_rtol=None,
  1560|         0|            0|            0|  0.00%|             tol_norm=None, line_search='armijo', callback=None, **kw):
  1561|         0|            0|            0|  0.00%|    jac = %(jac)s(%(kwkw)s **kw)
  1562|         0|            0|            0|  0.00%|    return nonlin_solve(F, xin, jac, iter, verbose, maxiter,
  1563|         0|            0|            0|  0.00%|                        f_tol, f_rtol, x_tol, x_rtol, tol_norm, line_search,
  1564|         0|            0|            0|  0.00%|                        callback)
  1565|         0|            0|            0|  0.00%|"""
  1566|         0|            0|            0|  0.00%|
  1567|         0|            0|            0|  0.00%|    wrapper = wrapper % dict(name=name, kw=kw_str, jac=jac.__name__,
  1568|         0|            0|            0|  0.00%|                             kwkw=kwkw_str)
  1569|         0|            0|            0|  0.00%|    ns = {}
  1570|         0|            0|            0|  0.00%|    ns.update(globals())
  1571|         0|            0|            0|  0.00%|    exec(wrapper, ns)
  1572|         0|            0|            0|  0.00%|    func = ns[name]
  1573|         0|            0|            0|  0.00%|    func.__doc__ = jac.__doc__
  1574|         0|            0|            0|  0.00%|    _set_doc(func)
  1575|         0|            0|            0|  0.00%|    return func
  1576|         0|            0|            0|  0.00%|
  1577|         0|            0|            0|  0.00%|
  1578|         0|            0|            0|  0.00%|broyden1 = _nonlin_wrapper('broyden1', BroydenFirst)
  1579|         0|            0|            0|  0.00%|broyden2 = _nonlin_wrapper('broyden2', BroydenSecond)
  1580|         0|            0|            0|  0.00%|anderson = _nonlin_wrapper('anderson', Anderson)
  1581|         0|            0|            0|  0.00%|linearmixing = _nonlin_wrapper('linearmixing', LinearMixing)
  1582|         0|            0|            0|  0.00%|diagbroyden = _nonlin_wrapper('diagbroyden', DiagBroyden)
  1583|         0|            0|            0|  0.00%|excitingmixing = _nonlin_wrapper('excitingmixing', ExcitingMixing)
  1584|         0|            0|            0|  0.00%|newton_krylov = _nonlin_wrapper('newton_krylov', KrylovJacobian)
File: <string>_152
File duration: 2.21729e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         0|            0|            0|  0.00%|r"""
     2|         1|  9.05991e-06|  9.05991e-06|  0.00%|
     3|         0|            0|            0|  0.00%|Nonlinear solvers
     4|         1|   1.3113e-05|   1.3113e-05|  0.00%|-----------------
     5|         0|            0|            0|  0.00%|
     6|         0|            0|            0|  0.00%|.. currentmodule:: scipy.optimize
     7|         0|            0|            0|  0.00%|
     8|         0|            0|            0|  0.00%|This is a collection of general-purpose nonlinear multidimensional
     9|         0|            0|            0|  0.00%|solvers. These solvers find *x* for which *F(x) = 0*. Both *x*
    10|         0|            0|            0|  0.00%|and *F* can be multidimensional.
    11|         0|            0|            0|  0.00%|
    12|         0|            0|            0|  0.00%|Routines
    13|         0|            0|            0|  0.00%|~~~~~~~~
    14|         0|            0|            0|  0.00%|
    15|         0|            0|            0|  0.00%|Large-scale nonlinear solvers:
    16|         0|            0|            0|  0.00%|
    17|         0|            0|            0|  0.00%|.. autosummary::
    18|         0|            0|            0|  0.00%|
    19|         0|            0|            0|  0.00%|   newton_krylov
    20|         0|            0|            0|  0.00%|   anderson
    21|         0|            0|            0|  0.00%|
    22|         0|            0|            0|  0.00%|General nonlinear solvers:
    23|         0|            0|            0|  0.00%|
    24|         0|            0|            0|  0.00%|.. autosummary::
    25|         0|            0|            0|  0.00%|
    26|         0|            0|            0|  0.00%|   broyden1
    27|         0|            0|            0|  0.00%|   broyden2
    28|         0|            0|            0|  0.00%|
    29|         0|            0|            0|  0.00%|Simple iterations:
    30|         0|            0|            0|  0.00%|
    31|         0|            0|            0|  0.00%|.. autosummary::
    32|         0|            0|            0|  0.00%|
    33|         0|            0|            0|  0.00%|   excitingmixing
    34|         0|            0|            0|  0.00%|   linearmixing
    35|         0|            0|            0|  0.00%|   diagbroyden
    36|         0|            0|            0|  0.00%|
    37|         0|            0|            0|  0.00%|
    38|         0|            0|            0|  0.00%|Examples
    39|         0|            0|            0|  0.00%|~~~~~~~~
    40|         0|            0|            0|  0.00%|
    41|         0|            0|            0|  0.00%|**Small problem**
    42|         0|            0|            0|  0.00%|
    43|         0|            0|            0|  0.00%|>>> def F(x):
    44|         0|            0|            0|  0.00%|...    return np.cos(x) + x[::-1] - [1, 2, 3, 4]
    45|         0|            0|            0|  0.00%|>>> import scipy.optimize
    46|         0|            0|            0|  0.00%|>>> x = scipy.optimize.broyden1(F, [1,1,1,1], f_tol=1e-14)
    47|         0|            0|            0|  0.00%|>>> x
    48|         0|            0|            0|  0.00%|array([ 4.04674914,  3.91158389,  2.71791677,  1.61756251])
    49|         0|            0|            0|  0.00%|>>> np.cos(x) + x[::-1]
    50|         0|            0|            0|  0.00%|array([ 1.,  2.,  3.,  4.])
    51|         0|            0|            0|  0.00%|
    52|         0|            0|            0|  0.00%|
    53|         0|            0|            0|  0.00%|**Large problem**
    54|         0|            0|            0|  0.00%|
    55|         0|            0|            0|  0.00%|Suppose that we needed to solve the following integrodifferential
    56|         0|            0|            0|  0.00%|equation on the square :math:`[0,1]\times[0,1]`:
    57|         0|            0|            0|  0.00%|
    58|         0|            0|            0|  0.00%|.. math::
    59|         0|            0|            0|  0.00%|
    60|         0|            0|            0|  0.00%|   \nabla^2 P = 10 \left(\int_0^1\int_0^1\cosh(P)\,dx\,dy\right)^2
    61|         0|            0|            0|  0.00%|
    62|         0|            0|            0|  0.00%|with :math:`P(x,1) = 1` and :math:`P=0` elsewhere on the boundary of
    63|         0|            0|            0|  0.00%|the square.
    64|         0|            0|            0|  0.00%|
    65|         0|            0|            0|  0.00%|The solution can be found using the `newton_krylov` solver:
    66|         0|            0|            0|  0.00%|
    67|         0|            0|            0|  0.00%|.. plot::
    68|         0|            0|            0|  0.00%|
    69|         0|            0|            0|  0.00%|   import numpy as np
    70|         0|            0|            0|  0.00%|   from scipy.optimize import newton_krylov
    71|         0|            0|            0|  0.00%|   from numpy import cosh, zeros_like, mgrid, zeros
    72|         0|            0|            0|  0.00%|
    73|         0|            0|            0|  0.00%|   # parameters
    74|         0|            0|            0|  0.00%|   nx, ny = 75, 75
    75|         0|            0|            0|  0.00%|   hx, hy = 1./(nx-1), 1./(ny-1)
    76|         0|            0|            0|  0.00%|
    77|         0|            0|            0|  0.00%|   P_left, P_right = 0, 0
    78|         0|            0|            0|  0.00%|   P_top, P_bottom = 1, 0
    79|         0|            0|            0|  0.00%|
    80|         0|            0|            0|  0.00%|   def residual(P):
    81|         0|            0|            0|  0.00%|       d2x = zeros_like(P)
    82|         0|            0|            0|  0.00%|       d2y = zeros_like(P)
    83|         0|            0|            0|  0.00%|
    84|         0|            0|            0|  0.00%|       d2x[1:-1] = (P[2:]   - 2*P[1:-1] + P[:-2]) / hx/hx
    85|         0|            0|            0|  0.00%|       d2x[0]    = (P[1]    - 2*P[0]    + P_left)/hx/hx
    86|         0|            0|            0|  0.00%|       d2x[-1]   = (P_right - 2*P[-1]   + P[-2])/hx/hx
    87|         0|            0|            0|  0.00%|
    88|         0|            0|            0|  0.00%|       d2y[:,1:-1] = (P[:,2:] - 2*P[:,1:-1] + P[:,:-2])/hy/hy
    89|         0|            0|            0|  0.00%|       d2y[:,0]    = (P[:,1]  - 2*P[:,0]    + P_bottom)/hy/hy
    90|         0|            0|            0|  0.00%|       d2y[:,-1]   = (P_top   - 2*P[:,-1]   + P[:,-2])/hy/hy
    91|         0|            0|            0|  0.00%|
    92|         0|            0|            0|  0.00%|       return d2x + d2y - 10*cosh(P).mean()**2
    93|         0|            0|            0|  0.00%|
    94|         0|            0|            0|  0.00%|   # solve
    95|         0|            0|            0|  0.00%|   guess = zeros((nx, ny), float)
    96|         0|            0|            0|  0.00%|   sol = newton_krylov(residual, guess, method='lgmres', verbose=1)
    97|         0|            0|            0|  0.00%|   print('Residual: %g' % abs(residual(sol)).max())
    98|         0|            0|            0|  0.00%|
    99|         0|            0|            0|  0.00%|   # visualize
   100|         0|            0|            0|  0.00%|   import matplotlib.pyplot as plt
   101|         0|            0|            0|  0.00%|   x, y = mgrid[0:1:(nx*1j), 0:1:(ny*1j)]
   102|         0|            0|            0|  0.00%|   plt.pcolormesh(x, y, sol, shading='gouraud')
   103|         0|            0|            0|  0.00%|   plt.colorbar()
   104|         0|            0|            0|  0.00%|   plt.show()
   105|         0|            0|            0|  0.00%|
   106|         0|            0|            0|  0.00%|"""
   107|         0|            0|            0|  0.00%|# Copyright (C) 2009, Pauli Virtanen <pav@iki.fi>
   108|         0|            0|            0|  0.00%|# Distributed under the same license as SciPy.
   109|         0|            0|            0|  0.00%|
   110|         0|            0|            0|  0.00%|import sys
   111|         0|            0|            0|  0.00%|import numpy as np
   112|         0|            0|            0|  0.00%|from scipy.linalg import norm, solve, inv, qr, svd, LinAlgError
   113|         0|            0|            0|  0.00%|from numpy import asarray, dot, vdot
   114|         0|            0|            0|  0.00%|import scipy.sparse.linalg
   115|         0|            0|            0|  0.00%|import scipy.sparse
   116|         0|            0|            0|  0.00%|from scipy.linalg import get_blas_funcs
   117|         0|            0|            0|  0.00%|import inspect
   118|         0|            0|            0|  0.00%|from scipy._lib._util import getfullargspec_no_self as _getfullargspec
   119|         0|            0|            0|  0.00%|from .linesearch import scalar_search_wolfe1, scalar_search_armijo
   120|         0|            0|            0|  0.00%|
   121|         0|            0|            0|  0.00%|
   122|         0|            0|            0|  0.00%|__all__ = [
   123|         0|            0|            0|  0.00%|    'broyden1', 'broyden2', 'anderson', 'linearmixing',
   124|         0|            0|            0|  0.00%|    'diagbroyden', 'excitingmixing', 'newton_krylov']
   125|         0|            0|            0|  0.00%|
   126|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   127|         0|            0|            0|  0.00%|# Utility functions
   128|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   129|         0|            0|            0|  0.00%|
   130|         0|            0|            0|  0.00%|
   131|         0|            0|            0|  0.00%|class NoConvergence(Exception):
   132|         0|            0|            0|  0.00%|    pass
   133|         0|            0|            0|  0.00%|
   134|         0|            0|            0|  0.00%|
   135|         0|            0|            0|  0.00%|def maxnorm(x):
   136|         0|            0|            0|  0.00%|    return np.absolute(x).max()
   137|         0|            0|            0|  0.00%|
   138|         0|            0|            0|  0.00%|
   139|         0|            0|            0|  0.00%|def _as_inexact(x):
   140|         0|            0|            0|  0.00%|    """Return `x` as an array, of either floats or complex floats"""
   141|         0|            0|            0|  0.00%|    x = asarray(x)
   142|         0|            0|            0|  0.00%|    if not np.issubdtype(x.dtype, np.inexact):
   143|         0|            0|            0|  0.00%|        return asarray(x, dtype=np.float_)
   144|         0|            0|            0|  0.00%|    return x
   145|         0|            0|            0|  0.00%|
   146|         0|            0|            0|  0.00%|
   147|         0|            0|            0|  0.00%|def _array_like(x, x0):
   148|         0|            0|            0|  0.00%|    """Return ndarray `x` as same array subclass and shape as `x0`"""
   149|         0|            0|            0|  0.00%|    x = np.reshape(x, np.shape(x0))
   150|         0|            0|            0|  0.00%|    wrap = getattr(x0, '__array_wrap__', x.__array_wrap__)
   151|         0|            0|            0|  0.00%|    return wrap(x)
   152|         0|            0|            0|  0.00%|
   153|         0|            0|            0|  0.00%|
   154|         0|            0|            0|  0.00%|def _safe_norm(v):
   155|         0|            0|            0|  0.00%|    if not np.isfinite(v).all():
   156|         0|            0|            0|  0.00%|        return np.array(np.inf)
   157|         0|            0|            0|  0.00%|    return norm(v)
   158|         0|            0|            0|  0.00%|
   159|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   160|         0|            0|            0|  0.00%|# Generic nonlinear solver machinery
   161|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   162|         0|            0|            0|  0.00%|
   163|         0|            0|            0|  0.00%|
   164|         0|            0|            0|  0.00%|_doc_parts = dict(
   165|         0|            0|            0|  0.00%|    params_basic="""
   166|         0|            0|            0|  0.00%|    F : function(x) -> f
   167|         0|            0|            0|  0.00%|        Function whose root to find; should take and return an array-like
   168|         0|            0|            0|  0.00%|        object.
   169|         0|            0|            0|  0.00%|    xin : array_like
   170|         0|            0|            0|  0.00%|        Initial guess for the solution
   171|         0|            0|            0|  0.00%|    """.strip(),
   172|         0|            0|            0|  0.00%|    params_extra="""
   173|         0|            0|            0|  0.00%|    iter : int, optional
   174|         0|            0|            0|  0.00%|        Number of iterations to make. If omitted (default), make as many
   175|         0|            0|            0|  0.00%|        as required to meet tolerances.
   176|         0|            0|            0|  0.00%|    verbose : bool, optional
   177|         0|            0|            0|  0.00%|        Print status to stdout on every iteration.
   178|         0|            0|            0|  0.00%|    maxiter : int, optional
   179|         0|            0|            0|  0.00%|        Maximum number of iterations to make. If more are needed to
   180|         0|            0|            0|  0.00%|        meet convergence, `NoConvergence` is raised.
   181|         0|            0|            0|  0.00%|    f_tol : float, optional
   182|         0|            0|            0|  0.00%|        Absolute tolerance (in max-norm) for the residual.
   183|         0|            0|            0|  0.00%|        If omitted, default is 6e-6.
   184|         0|            0|            0|  0.00%|    f_rtol : float, optional
   185|         0|            0|            0|  0.00%|        Relative tolerance for the residual. If omitted, not used.
   186|         0|            0|            0|  0.00%|    x_tol : float, optional
   187|         0|            0|            0|  0.00%|        Absolute minimum step size, as determined from the Jacobian
   188|         0|            0|            0|  0.00%|        approximation. If the step size is smaller than this, optimization
   189|         0|            0|            0|  0.00%|        is terminated as successful. If omitted, not used.
   190|         0|            0|            0|  0.00%|    x_rtol : float, optional
   191|         0|            0|            0|  0.00%|        Relative minimum step size. If omitted, not used.
   192|         0|            0|            0|  0.00%|    tol_norm : function(vector) -> scalar, optional
   193|         0|            0|            0|  0.00%|        Norm to use in convergence check. Default is the maximum norm.
   194|         0|            0|            0|  0.00%|    line_search : {None, 'armijo' (default), 'wolfe'}, optional
   195|         0|            0|            0|  0.00%|        Which type of a line search to use to determine the step size in the
   196|         0|            0|            0|  0.00%|        direction given by the Jacobian approximation. Defaults to 'armijo'.
   197|         0|            0|            0|  0.00%|    callback : function, optional
   198|         0|            0|            0|  0.00%|        Optional callback function. It is called on every iteration as
   199|         0|            0|            0|  0.00%|        ``callback(x, f)`` where `x` is the current solution and `f`
   200|         0|            0|            0|  0.00%|        the corresponding residual.
   201|         0|            0|            0|  0.00%|
   202|         0|            0|            0|  0.00%|    Returns
   203|         0|            0|            0|  0.00%|    -------
   204|         0|            0|            0|  0.00%|    sol : ndarray
   205|         0|            0|            0|  0.00%|        An array (of similar array type as `x0`) containing the final solution.
   206|         0|            0|            0|  0.00%|
   207|         0|            0|            0|  0.00%|    Raises
   208|         0|            0|            0|  0.00%|    ------
   209|         0|            0|            0|  0.00%|    NoConvergence
   210|         0|            0|            0|  0.00%|        When a solution was not found.
   211|         0|            0|            0|  0.00%|
   212|         0|            0|            0|  0.00%|    """.strip()
   213|         0|            0|            0|  0.00%|)
   214|         0|            0|            0|  0.00%|
   215|         0|            0|            0|  0.00%|
   216|         0|            0|            0|  0.00%|def _set_doc(obj):
   217|         0|            0|            0|  0.00%|    if obj.__doc__:
   218|         0|            0|            0|  0.00%|        obj.__doc__ = obj.__doc__ % _doc_parts
   219|         0|            0|            0|  0.00%|
   220|         0|            0|            0|  0.00%|
   221|         0|            0|            0|  0.00%|def nonlin_solve(F, x0, jacobian='krylov', iter=None, verbose=False,
   222|         0|            0|            0|  0.00%|                 maxiter=None, f_tol=None, f_rtol=None, x_tol=None, x_rtol=None,
   223|         0|            0|            0|  0.00%|                 tol_norm=None, line_search='armijo', callback=None,
   224|         0|            0|            0|  0.00%|                 full_output=False, raise_exception=True):
   225|         0|            0|            0|  0.00%|    """
   226|         0|            0|            0|  0.00%|    Find a root of a function, in a way suitable for large-scale problems.
   227|         0|            0|            0|  0.00%|
   228|         0|            0|            0|  0.00%|    Parameters
   229|         0|            0|            0|  0.00%|    ----------
   230|         0|            0|            0|  0.00%|    %(params_basic)s
   231|         0|            0|            0|  0.00%|    jacobian : Jacobian
   232|         0|            0|            0|  0.00%|        A Jacobian approximation: `Jacobian` object or something that
   233|         0|            0|            0|  0.00%|        `asjacobian` can transform to one. Alternatively, a string specifying
   234|         0|            0|            0|  0.00%|        which of the builtin Jacobian approximations to use:
   235|         0|            0|            0|  0.00%|
   236|         0|            0|            0|  0.00%|            krylov, broyden1, broyden2, anderson
   237|         0|            0|            0|  0.00%|            diagbroyden, linearmixing, excitingmixing
   238|         0|            0|            0|  0.00%|
   239|         0|            0|            0|  0.00%|    %(params_extra)s
   240|         0|            0|            0|  0.00%|    full_output : bool
   241|         0|            0|            0|  0.00%|        If true, returns a dictionary `info` containing convergence
   242|         0|            0|            0|  0.00%|        information.
   243|         0|            0|            0|  0.00%|    raise_exception : bool
   244|         0|            0|            0|  0.00%|        If True, a `NoConvergence` exception is raise if no solution is found.
   245|         0|            0|            0|  0.00%|
   246|         0|            0|            0|  0.00%|    See Also
   247|         0|            0|            0|  0.00%|    --------
   248|         0|            0|            0|  0.00%|    asjacobian, Jacobian
   249|         0|            0|            0|  0.00%|
   250|         0|            0|            0|  0.00%|    Notes
   251|         0|            0|            0|  0.00%|    -----
   252|         0|            0|            0|  0.00%|    This algorithm implements the inexact Newton method, with
   253|         0|            0|            0|  0.00%|    backtracking or full line searches. Several Jacobian
   254|         0|            0|            0|  0.00%|    approximations are available, including Krylov and Quasi-Newton
   255|         0|            0|            0|  0.00%|    methods.
   256|         0|            0|            0|  0.00%|
   257|         0|            0|            0|  0.00%|    References
   258|         0|            0|            0|  0.00%|    ----------
   259|         0|            0|            0|  0.00%|    .. [KIM] C. T. Kelley, \"Iterative Methods for Linear and Nonlinear
   260|         0|            0|            0|  0.00%|       Equations\". Society for Industrial and Applied Mathematics. (1995)
   261|         0|            0|            0|  0.00%|       https://archive.siam.org/books/kelley/fr16/
   262|         0|            0|            0|  0.00%|
   263|         0|            0|            0|  0.00%|    """
   264|         0|            0|            0|  0.00%|    # Can't use default parameters because it's being explicitly passed as None
   265|         0|            0|            0|  0.00%|    # from the calling function, so we need to set it here.
   266|         0|            0|            0|  0.00%|    tol_norm = maxnorm if tol_norm is None else tol_norm
   267|         0|            0|            0|  0.00%|    condition = TerminationCondition(f_tol=f_tol, f_rtol=f_rtol,
   268|         0|            0|            0|  0.00%|                                     x_tol=x_tol, x_rtol=x_rtol,
   269|         0|            0|            0|  0.00%|                                     iter=iter, norm=tol_norm)
   270|         0|            0|            0|  0.00%|
   271|         0|            0|            0|  0.00%|    x0 = _as_inexact(x0)
   272|         0|            0|            0|  0.00%|    func = lambda z: _as_inexact(F(_array_like(z, x0))).flatten()
   273|         0|            0|            0|  0.00%|    x = x0.flatten()
   274|         0|            0|            0|  0.00%|
   275|         0|            0|            0|  0.00%|    dx = np.inf
   276|         0|            0|            0|  0.00%|    Fx = func(x)
   277|         0|            0|            0|  0.00%|    Fx_norm = norm(Fx)
   278|         0|            0|            0|  0.00%|
   279|         0|            0|            0|  0.00%|    jacobian = asjacobian(jacobian)
   280|         0|            0|            0|  0.00%|    jacobian.setup(x.copy(), Fx, func)
   281|         0|            0|            0|  0.00%|
   282|         0|            0|            0|  0.00%|    if maxiter is None:
   283|         0|            0|            0|  0.00%|        if iter is not None:
   284|         0|            0|            0|  0.00%|            maxiter = iter + 1
   285|         0|            0|            0|  0.00%|        else:
   286|         0|            0|            0|  0.00%|            maxiter = 100*(x.size+1)
   287|         0|            0|            0|  0.00%|
   288|         0|            0|            0|  0.00%|    if line_search is True:
   289|         0|            0|            0|  0.00%|        line_search = 'armijo'
   290|         0|            0|            0|  0.00%|    elif line_search is False:
   291|         0|            0|            0|  0.00%|        line_search = None
   292|         0|            0|            0|  0.00%|
   293|         0|            0|            0|  0.00%|    if line_search not in (None, 'armijo', 'wolfe'):
   294|         0|            0|            0|  0.00%|        raise ValueError("Invalid line search")
   295|         0|            0|            0|  0.00%|
   296|         0|            0|            0|  0.00%|    # Solver tolerance selection
   297|         0|            0|            0|  0.00%|    gamma = 0.9
   298|         0|            0|            0|  0.00%|    eta_max = 0.9999
   299|         0|            0|            0|  0.00%|    eta_treshold = 0.1
   300|         0|            0|            0|  0.00%|    eta = 1e-3
   301|         0|            0|            0|  0.00%|
   302|         0|            0|            0|  0.00%|    for n in range(maxiter):
   303|         0|            0|            0|  0.00%|        status = condition.check(Fx, x, dx)
   304|         0|            0|            0|  0.00%|        if status:
   305|         0|            0|            0|  0.00%|            break
   306|         0|            0|            0|  0.00%|
   307|         0|            0|            0|  0.00%|        # The tolerance, as computed for scipy.sparse.linalg.* routines
   308|         0|            0|            0|  0.00%|        tol = min(eta, eta*Fx_norm)
   309|         0|            0|            0|  0.00%|        dx = -jacobian.solve(Fx, tol=tol)
   310|         0|            0|            0|  0.00%|
   311|         0|            0|            0|  0.00%|        if norm(dx) == 0:
   312|         0|            0|            0|  0.00%|            raise ValueError("Jacobian inversion yielded zero vector. "
   313|         0|            0|            0|  0.00%|                             "This indicates a bug in the Jacobian "
   314|         0|            0|            0|  0.00%|                             "approximation.")
   315|         0|            0|            0|  0.00%|
   316|         0|            0|            0|  0.00%|        # Line search, or Newton step
   317|         0|            0|            0|  0.00%|        if line_search:
   318|         0|            0|            0|  0.00%|            s, x, Fx, Fx_norm_new = _nonlin_line_search(func, x, Fx, dx,
   319|         0|            0|            0|  0.00%|                                                        line_search)
   320|         0|            0|            0|  0.00%|        else:
   321|         0|            0|            0|  0.00%|            s = 1.0
   322|         0|            0|            0|  0.00%|            x = x + dx
   323|         0|            0|            0|  0.00%|            Fx = func(x)
   324|         0|            0|            0|  0.00%|            Fx_norm_new = norm(Fx)
   325|         0|            0|            0|  0.00%|
   326|         0|            0|            0|  0.00%|        jacobian.update(x.copy(), Fx)
   327|         0|            0|            0|  0.00%|
   328|         0|            0|            0|  0.00%|        if callback:
   329|         0|            0|            0|  0.00%|            callback(x, Fx)
   330|         0|            0|            0|  0.00%|
   331|         0|            0|            0|  0.00%|        # Adjust forcing parameters for inexact methods
   332|         0|            0|            0|  0.00%|        eta_A = gamma * Fx_norm_new**2 / Fx_norm**2
   333|         0|            0|            0|  0.00%|        if gamma * eta**2 < eta_treshold:
   334|         0|            0|            0|  0.00%|            eta = min(eta_max, eta_A)
   335|         0|            0|            0|  0.00%|        else:
   336|         0|            0|            0|  0.00%|            eta = min(eta_max, max(eta_A, gamma*eta**2))
   337|         0|            0|            0|  0.00%|
   338|         0|            0|            0|  0.00%|        Fx_norm = Fx_norm_new
   339|         0|            0|            0|  0.00%|
   340|         0|            0|            0|  0.00%|        # Print status
   341|         0|            0|            0|  0.00%|        if verbose:
   342|         0|            0|            0|  0.00%|            sys.stdout.write("%d:  |F(x)| = %g; step %g\n" % (
   343|         0|            0|            0|  0.00%|                n, tol_norm(Fx), s))
   344|         0|            0|            0|  0.00%|            sys.stdout.flush()
   345|         0|            0|            0|  0.00%|    else:
   346|         0|            0|            0|  0.00%|        if raise_exception:
   347|         0|            0|            0|  0.00%|            raise NoConvergence(_array_like(x, x0))
   348|         0|            0|            0|  0.00%|        else:
   349|         0|            0|            0|  0.00%|            status = 2
   350|         0|            0|            0|  0.00%|
   351|         0|            0|            0|  0.00%|    if full_output:
   352|         0|            0|            0|  0.00%|        info = {'nit': condition.iteration,
   353|         0|            0|            0|  0.00%|                'fun': Fx,
   354|         0|            0|            0|  0.00%|                'status': status,
   355|         0|            0|            0|  0.00%|                'success': status == 1,
   356|         0|            0|            0|  0.00%|                'message': {1: 'A solution was found at the specified '
   357|         0|            0|            0|  0.00%|                               'tolerance.',
   358|         0|            0|            0|  0.00%|                            2: 'The maximum number of iterations allowed '
   359|         0|            0|            0|  0.00%|                               'has been reached.'
   360|         0|            0|            0|  0.00%|                            }[status]
   361|         0|            0|            0|  0.00%|                }
   362|         0|            0|            0|  0.00%|        return _array_like(x, x0), info
   363|         0|            0|            0|  0.00%|    else:
   364|         0|            0|            0|  0.00%|        return _array_like(x, x0)
   365|         0|            0|            0|  0.00%|
   366|         0|            0|            0|  0.00%|
   367|         0|            0|            0|  0.00%|_set_doc(nonlin_solve)
   368|         0|            0|            0|  0.00%|
   369|         0|            0|            0|  0.00%|
   370|         0|            0|            0|  0.00%|def _nonlin_line_search(func, x, Fx, dx, search_type='armijo', rdiff=1e-8,
   371|         0|            0|            0|  0.00%|                        smin=1e-2):
   372|         0|            0|            0|  0.00%|    tmp_s = [0]
   373|         0|            0|            0|  0.00%|    tmp_Fx = [Fx]
   374|         0|            0|            0|  0.00%|    tmp_phi = [norm(Fx)**2]
   375|         0|            0|            0|  0.00%|    s_norm = norm(x) / norm(dx)
   376|         0|            0|            0|  0.00%|
   377|         0|            0|            0|  0.00%|    def phi(s, store=True):
   378|         0|            0|            0|  0.00%|        if s == tmp_s[0]:
   379|         0|            0|            0|  0.00%|            return tmp_phi[0]
   380|         0|            0|            0|  0.00%|        xt = x + s*dx
   381|         0|            0|            0|  0.00%|        v = func(xt)
   382|         0|            0|            0|  0.00%|        p = _safe_norm(v)**2
   383|         0|            0|            0|  0.00%|        if store:
   384|         0|            0|            0|  0.00%|            tmp_s[0] = s
   385|         0|            0|            0|  0.00%|            tmp_phi[0] = p
   386|         0|            0|            0|  0.00%|            tmp_Fx[0] = v
   387|         0|            0|            0|  0.00%|        return p
   388|         0|            0|            0|  0.00%|
   389|         0|            0|            0|  0.00%|    def derphi(s):
   390|         0|            0|            0|  0.00%|        ds = (abs(s) + s_norm + 1) * rdiff
   391|         0|            0|            0|  0.00%|        return (phi(s+ds, store=False) - phi(s)) / ds
   392|         0|            0|            0|  0.00%|
   393|         0|            0|            0|  0.00%|    if search_type == 'wolfe':
   394|         0|            0|            0|  0.00%|        s, phi1, phi0 = scalar_search_wolfe1(phi, derphi, tmp_phi[0],
   395|         0|            0|            0|  0.00%|                                             xtol=1e-2, amin=smin)
   396|         0|            0|            0|  0.00%|    elif search_type == 'armijo':
   397|         0|            0|            0|  0.00%|        s, phi1 = scalar_search_armijo(phi, tmp_phi[0], -tmp_phi[0],
   398|         0|            0|            0|  0.00%|                                       amin=smin)
   399|         0|            0|            0|  0.00%|
   400|         0|            0|            0|  0.00%|    if s is None:
   401|         0|            0|            0|  0.00%|        # XXX: No suitable step length found. Take the full Newton step,
   402|         0|            0|            0|  0.00%|        #      and hope for the best.
   403|         0|            0|            0|  0.00%|        s = 1.0
   404|         0|            0|            0|  0.00%|
   405|         0|            0|            0|  0.00%|    x = x + s*dx
   406|         0|            0|            0|  0.00%|    if s == tmp_s[0]:
   407|         0|            0|            0|  0.00%|        Fx = tmp_Fx[0]
   408|         0|            0|            0|  0.00%|    else:
   409|         0|            0|            0|  0.00%|        Fx = func(x)
   410|         0|            0|            0|  0.00%|    Fx_norm = norm(Fx)
   411|         0|            0|            0|  0.00%|
   412|         0|            0|            0|  0.00%|    return s, x, Fx, Fx_norm
   413|         0|            0|            0|  0.00%|
   414|         0|            0|            0|  0.00%|
   415|         0|            0|            0|  0.00%|class TerminationCondition(object):
   416|         0|            0|            0|  0.00%|    """
   417|         0|            0|            0|  0.00%|    Termination condition for an iteration. It is terminated if
   418|         0|            0|            0|  0.00%|
   419|         0|            0|            0|  0.00%|    - |F| < f_rtol*|F_0|, AND
   420|         0|            0|            0|  0.00%|    - |F| < f_tol
   421|         0|            0|            0|  0.00%|
   422|         0|            0|            0|  0.00%|    AND
   423|         0|            0|            0|  0.00%|
   424|         0|            0|            0|  0.00%|    - |dx| < x_rtol*|x|, AND
   425|         0|            0|            0|  0.00%|    - |dx| < x_tol
   426|         0|            0|            0|  0.00%|
   427|         0|            0|            0|  0.00%|    """
   428|         0|            0|            0|  0.00%|    def __init__(self, f_tol=None, f_rtol=None, x_tol=None, x_rtol=None,
   429|         0|            0|            0|  0.00%|                 iter=None, norm=maxnorm):
   430|         0|            0|            0|  0.00%|
   431|         0|            0|            0|  0.00%|        if f_tol is None:
   432|         0|            0|            0|  0.00%|            f_tol = np.finfo(np.float_).eps ** (1./3)
   433|         0|            0|            0|  0.00%|        if f_rtol is None:
   434|         0|            0|            0|  0.00%|            f_rtol = np.inf
   435|         0|            0|            0|  0.00%|        if x_tol is None:
   436|         0|            0|            0|  0.00%|            x_tol = np.inf
   437|         0|            0|            0|  0.00%|        if x_rtol is None:
   438|         0|            0|            0|  0.00%|            x_rtol = np.inf
   439|         0|            0|            0|  0.00%|
   440|         0|            0|            0|  0.00%|        self.x_tol = x_tol
   441|         0|            0|            0|  0.00%|        self.x_rtol = x_rtol
   442|         0|            0|            0|  0.00%|        self.f_tol = f_tol
   443|         0|            0|            0|  0.00%|        self.f_rtol = f_rtol
   444|         0|            0|            0|  0.00%|
   445|         0|            0|            0|  0.00%|        self.norm = norm
   446|         0|            0|            0|  0.00%|
   447|         0|            0|            0|  0.00%|        self.iter = iter
   448|         0|            0|            0|  0.00%|
   449|         0|            0|            0|  0.00%|        self.f0_norm = None
   450|         0|            0|            0|  0.00%|        self.iteration = 0
   451|         0|            0|            0|  0.00%|
   452|         0|            0|            0|  0.00%|    def check(self, f, x, dx):
   453|         0|            0|            0|  0.00%|        self.iteration += 1
   454|         0|            0|            0|  0.00%|        f_norm = self.norm(f)
   455|         0|            0|            0|  0.00%|        x_norm = self.norm(x)
   456|         0|            0|            0|  0.00%|        dx_norm = self.norm(dx)
   457|         0|            0|            0|  0.00%|
   458|         0|            0|            0|  0.00%|        if self.f0_norm is None:
   459|         0|            0|            0|  0.00%|            self.f0_norm = f_norm
   460|         0|            0|            0|  0.00%|
   461|         0|            0|            0|  0.00%|        if f_norm == 0:
   462|         0|            0|            0|  0.00%|            return 1
   463|         0|            0|            0|  0.00%|
   464|         0|            0|            0|  0.00%|        if self.iter is not None:
   465|         0|            0|            0|  0.00%|            # backwards compatibility with SciPy 0.6.0
   466|         0|            0|            0|  0.00%|            return 2 * (self.iteration > self.iter)
   467|         0|            0|            0|  0.00%|
   468|         0|            0|            0|  0.00%|        # NB: condition must succeed for rtol=inf even if norm == 0
   469|         0|            0|            0|  0.00%|        return int((f_norm <= self.f_tol
   470|         0|            0|            0|  0.00%|                    and f_norm/self.f_rtol <= self.f0_norm)
   471|         0|            0|            0|  0.00%|                   and (dx_norm <= self.x_tol
   472|         0|            0|            0|  0.00%|                        and dx_norm/self.x_rtol <= x_norm))
   473|         0|            0|            0|  0.00%|
   474|         0|            0|            0|  0.00%|
   475|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   476|         0|            0|            0|  0.00%|# Generic Jacobian approximation
   477|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   478|         0|            0|            0|  0.00%|
   479|         0|            0|            0|  0.00%|class Jacobian(object):
   480|         0|            0|            0|  0.00%|    """
   481|         0|            0|            0|  0.00%|    Common interface for Jacobians or Jacobian approximations.
   482|         0|            0|            0|  0.00%|
   483|         0|            0|            0|  0.00%|    The optional methods come useful when implementing trust region
   484|         0|            0|            0|  0.00%|    etc., algorithms that often require evaluating transposes of the
   485|         0|            0|            0|  0.00%|    Jacobian.
   486|         0|            0|            0|  0.00%|
   487|         0|            0|            0|  0.00%|    Methods
   488|         0|            0|            0|  0.00%|    -------
   489|         0|            0|            0|  0.00%|    solve
   490|         0|            0|            0|  0.00%|        Returns J^-1 * v
   491|         0|            0|            0|  0.00%|    update
   492|         0|            0|            0|  0.00%|        Updates Jacobian to point `x` (where the function has residual `Fx`)
   493|         0|            0|            0|  0.00%|
   494|         0|            0|            0|  0.00%|    matvec : optional
   495|         0|            0|            0|  0.00%|        Returns J * v
   496|         0|            0|            0|  0.00%|    rmatvec : optional
   497|         0|            0|            0|  0.00%|        Returns A^H * v
   498|         0|            0|            0|  0.00%|    rsolve : optional
   499|         0|            0|            0|  0.00%|        Returns A^-H * v
   500|         0|            0|            0|  0.00%|    matmat : optional
   501|         0|            0|            0|  0.00%|        Returns A * V, where V is a dense matrix with dimensions (N,K).
   502|         0|            0|            0|  0.00%|    todense : optional
   503|         0|            0|            0|  0.00%|        Form the dense Jacobian matrix. Necessary for dense trust region
   504|         0|            0|            0|  0.00%|        algorithms, and useful for testing.
   505|         0|            0|            0|  0.00%|
   506|         0|            0|            0|  0.00%|    Attributes
   507|         0|            0|            0|  0.00%|    ----------
   508|         0|            0|            0|  0.00%|    shape
   509|         0|            0|            0|  0.00%|        Matrix dimensions (M, N)
   510|         0|            0|            0|  0.00%|    dtype
   511|         0|            0|            0|  0.00%|        Data type of the matrix.
   512|         0|            0|            0|  0.00%|    func : callable, optional
   513|         0|            0|            0|  0.00%|        Function the Jacobian corresponds to
   514|         0|            0|            0|  0.00%|
   515|         0|            0|            0|  0.00%|    """
   516|         0|            0|            0|  0.00%|
   517|         0|            0|            0|  0.00%|    def __init__(self, **kw):
   518|         0|            0|            0|  0.00%|        names = ["solve", "update", "matvec", "rmatvec", "rsolve",
   519|         0|            0|            0|  0.00%|                 "matmat", "todense", "shape", "dtype"]
   520|         0|            0|            0|  0.00%|        for name, value in kw.items():
   521|         0|            0|            0|  0.00%|            if name not in names:
   522|         0|            0|            0|  0.00%|                raise ValueError("Unknown keyword argument %s" % name)
   523|         0|            0|            0|  0.00%|            if value is not None:
   524|         0|            0|            0|  0.00%|                setattr(self, name, kw[name])
   525|         0|            0|            0|  0.00%|
   526|         0|            0|            0|  0.00%|        if hasattr(self, 'todense'):
   527|         0|            0|            0|  0.00%|            self.__array__ = lambda: self.todense()
   528|         0|            0|            0|  0.00%|
   529|         0|            0|            0|  0.00%|    def aspreconditioner(self):
   530|         0|            0|            0|  0.00%|        return InverseJacobian(self)
   531|         0|            0|            0|  0.00%|
   532|         0|            0|            0|  0.00%|    def solve(self, v, tol=0):
   533|         0|            0|            0|  0.00%|        raise NotImplementedError
   534|         0|            0|            0|  0.00%|
   535|         0|            0|            0|  0.00%|    def update(self, x, F):
   536|         0|            0|            0|  0.00%|        pass
   537|         0|            0|            0|  0.00%|
   538|         0|            0|            0|  0.00%|    def setup(self, x, F, func):
   539|         0|            0|            0|  0.00%|        self.func = func
   540|         0|            0|            0|  0.00%|        self.shape = (F.size, x.size)
   541|         0|            0|            0|  0.00%|        self.dtype = F.dtype
   542|         0|            0|            0|  0.00%|        if self.__class__.setup is Jacobian.setup:
   543|         0|            0|            0|  0.00%|            # Call on the first point unless overridden
   544|         0|            0|            0|  0.00%|            self.update(x, F)
   545|         0|            0|            0|  0.00%|
   546|         0|            0|            0|  0.00%|
   547|         0|            0|            0|  0.00%|class InverseJacobian(object):
   548|         0|            0|            0|  0.00%|    def __init__(self, jacobian):
   549|         0|            0|            0|  0.00%|        self.jacobian = jacobian
   550|         0|            0|            0|  0.00%|        self.matvec = jacobian.solve
   551|         0|            0|            0|  0.00%|        self.update = jacobian.update
   552|         0|            0|            0|  0.00%|        if hasattr(jacobian, 'setup'):
   553|         0|            0|            0|  0.00%|            self.setup = jacobian.setup
   554|         0|            0|            0|  0.00%|        if hasattr(jacobian, 'rsolve'):
   555|         0|            0|            0|  0.00%|            self.rmatvec = jacobian.rsolve
   556|         0|            0|            0|  0.00%|
   557|         0|            0|            0|  0.00%|    @property
   558|         0|            0|            0|  0.00%|    def shape(self):
   559|         0|            0|            0|  0.00%|        return self.jacobian.shape
   560|         0|            0|            0|  0.00%|
   561|         0|            0|            0|  0.00%|    @property
   562|         0|            0|            0|  0.00%|    def dtype(self):
   563|         0|            0|            0|  0.00%|        return self.jacobian.dtype
   564|         0|            0|            0|  0.00%|
   565|         0|            0|            0|  0.00%|
   566|         0|            0|            0|  0.00%|def asjacobian(J):
   567|         0|            0|            0|  0.00%|    """
   568|         0|            0|            0|  0.00%|    Convert given object to one suitable for use as a Jacobian.
   569|         0|            0|            0|  0.00%|    """
   570|         0|            0|            0|  0.00%|    spsolve = scipy.sparse.linalg.spsolve
   571|         0|            0|            0|  0.00%|    if isinstance(J, Jacobian):
   572|         0|            0|            0|  0.00%|        return J
   573|         0|            0|            0|  0.00%|    elif inspect.isclass(J) and issubclass(J, Jacobian):
   574|         0|            0|            0|  0.00%|        return J()
   575|         0|            0|            0|  0.00%|    elif isinstance(J, np.ndarray):
   576|         0|            0|            0|  0.00%|        if J.ndim > 2:
   577|         0|            0|            0|  0.00%|            raise ValueError('array must have rank <= 2')
   578|         0|            0|            0|  0.00%|        J = np.atleast_2d(np.asarray(J))
   579|         0|            0|            0|  0.00%|        if J.shape[0] != J.shape[1]:
   580|         0|            0|            0|  0.00%|            raise ValueError('array must be square')
   581|         0|            0|            0|  0.00%|
   582|         0|            0|            0|  0.00%|        return Jacobian(matvec=lambda v: dot(J, v),
   583|         0|            0|            0|  0.00%|                        rmatvec=lambda v: dot(J.conj().T, v),
   584|         0|            0|            0|  0.00%|                        solve=lambda v: solve(J, v),
   585|         0|            0|            0|  0.00%|                        rsolve=lambda v: solve(J.conj().T, v),
   586|         0|            0|            0|  0.00%|                        dtype=J.dtype, shape=J.shape)
   587|         0|            0|            0|  0.00%|    elif scipy.sparse.isspmatrix(J):
   588|         0|            0|            0|  0.00%|        if J.shape[0] != J.shape[1]:
   589|         0|            0|            0|  0.00%|            raise ValueError('matrix must be square')
   590|         0|            0|            0|  0.00%|        return Jacobian(matvec=lambda v: J*v,
   591|         0|            0|            0|  0.00%|                        rmatvec=lambda v: J.conj().T * v,
   592|         0|            0|            0|  0.00%|                        solve=lambda v: spsolve(J, v),
   593|         0|            0|            0|  0.00%|                        rsolve=lambda v: spsolve(J.conj().T, v),
   594|         0|            0|            0|  0.00%|                        dtype=J.dtype, shape=J.shape)
   595|         0|            0|            0|  0.00%|    elif hasattr(J, 'shape') and hasattr(J, 'dtype') and hasattr(J, 'solve'):
   596|         0|            0|            0|  0.00%|        return Jacobian(matvec=getattr(J, 'matvec'),
   597|         0|            0|            0|  0.00%|                        rmatvec=getattr(J, 'rmatvec'),
   598|         0|            0|            0|  0.00%|                        solve=J.solve,
   599|         0|            0|            0|  0.00%|                        rsolve=getattr(J, 'rsolve'),
   600|         0|            0|            0|  0.00%|                        update=getattr(J, 'update'),
   601|         0|            0|            0|  0.00%|                        setup=getattr(J, 'setup'),
   602|         0|            0|            0|  0.00%|                        dtype=J.dtype,
   603|         0|            0|            0|  0.00%|                        shape=J.shape)
   604|         0|            0|            0|  0.00%|    elif callable(J):
   605|         0|            0|            0|  0.00%|        # Assume it's a function J(x) that returns the Jacobian
   606|         0|            0|            0|  0.00%|        class Jac(Jacobian):
   607|         0|            0|            0|  0.00%|            def update(self, x, F):
   608|         0|            0|            0|  0.00%|                self.x = x
   609|         0|            0|            0|  0.00%|
   610|         0|            0|            0|  0.00%|            def solve(self, v, tol=0):
   611|         0|            0|            0|  0.00%|                m = J(self.x)
   612|         0|            0|            0|  0.00%|                if isinstance(m, np.ndarray):
   613|         0|            0|            0|  0.00%|                    return solve(m, v)
   614|         0|            0|            0|  0.00%|                elif scipy.sparse.isspmatrix(m):
   615|         0|            0|            0|  0.00%|                    return spsolve(m, v)
   616|         0|            0|            0|  0.00%|                else:
   617|         0|            0|            0|  0.00%|                    raise ValueError("Unknown matrix type")
   618|         0|            0|            0|  0.00%|
   619|         0|            0|            0|  0.00%|            def matvec(self, v):
   620|         0|            0|            0|  0.00%|                m = J(self.x)
   621|         0|            0|            0|  0.00%|                if isinstance(m, np.ndarray):
   622|         0|            0|            0|  0.00%|                    return dot(m, v)
   623|         0|            0|            0|  0.00%|                elif scipy.sparse.isspmatrix(m):
   624|         0|            0|            0|  0.00%|                    return m*v
   625|         0|            0|            0|  0.00%|                else:
   626|         0|            0|            0|  0.00%|                    raise ValueError("Unknown matrix type")
   627|         0|            0|            0|  0.00%|
   628|         0|            0|            0|  0.00%|            def rsolve(self, v, tol=0):
   629|         0|            0|            0|  0.00%|                m = J(self.x)
   630|         0|            0|            0|  0.00%|                if isinstance(m, np.ndarray):
   631|         0|            0|            0|  0.00%|                    return solve(m.conj().T, v)
   632|         0|            0|            0|  0.00%|                elif scipy.sparse.isspmatrix(m):
   633|         0|            0|            0|  0.00%|                    return spsolve(m.conj().T, v)
   634|         0|            0|            0|  0.00%|                else:
   635|         0|            0|            0|  0.00%|                    raise ValueError("Unknown matrix type")
   636|         0|            0|            0|  0.00%|
   637|         0|            0|            0|  0.00%|            def rmatvec(self, v):
   638|         0|            0|            0|  0.00%|                m = J(self.x)
   639|         0|            0|            0|  0.00%|                if isinstance(m, np.ndarray):
   640|         0|            0|            0|  0.00%|                    return dot(m.conj().T, v)
   641|         0|            0|            0|  0.00%|                elif scipy.sparse.isspmatrix(m):
   642|         0|            0|            0|  0.00%|                    return m.conj().T * v
   643|         0|            0|            0|  0.00%|                else:
   644|         0|            0|            0|  0.00%|                    raise ValueError("Unknown matrix type")
   645|         0|            0|            0|  0.00%|        return Jac()
   646|         0|            0|            0|  0.00%|    elif isinstance(J, str):
   647|         0|            0|            0|  0.00%|        return dict(broyden1=BroydenFirst,
   648|         0|            0|            0|  0.00%|                    broyden2=BroydenSecond,
   649|         0|            0|            0|  0.00%|                    anderson=Anderson,
   650|         0|            0|            0|  0.00%|                    diagbroyden=DiagBroyden,
   651|         0|            0|            0|  0.00%|                    linearmixing=LinearMixing,
   652|         0|            0|            0|  0.00%|                    excitingmixing=ExcitingMixing,
   653|         0|            0|            0|  0.00%|                    krylov=KrylovJacobian)[J]()
   654|         0|            0|            0|  0.00%|    else:
   655|         0|            0|            0|  0.00%|        raise TypeError('Cannot convert object to a Jacobian')
   656|         0|            0|            0|  0.00%|
   657|         0|            0|            0|  0.00%|
   658|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   659|         0|            0|            0|  0.00%|# Broyden
   660|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
   661|         0|            0|            0|  0.00%|
   662|         0|            0|            0|  0.00%|class GenericBroyden(Jacobian):
   663|         0|            0|            0|  0.00%|    def setup(self, x0, f0, func):
   664|         0|            0|            0|  0.00%|        Jacobian.setup(self, x0, f0, func)
   665|         0|            0|            0|  0.00%|        self.last_f = f0
   666|         0|            0|            0|  0.00%|        self.last_x = x0
   667|         0|            0|            0|  0.00%|
   668|         0|            0|            0|  0.00%|        if hasattr(self, 'alpha') and self.alpha is None:
   669|         0|            0|            0|  0.00%|            # Autoscale the initial Jacobian parameter
   670|         0|            0|            0|  0.00%|            # unless we have already guessed the solution.
   671|         0|            0|            0|  0.00%|            normf0 = norm(f0)
   672|         0|            0|            0|  0.00%|            if normf0:
   673|         0|            0|            0|  0.00%|                self.alpha = 0.5*max(norm(x0), 1) / normf0
   674|         0|            0|            0|  0.00%|            else:
   675|         0|            0|            0|  0.00%|                self.alpha = 1.0
   676|         0|            0|            0|  0.00%|
   677|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
   678|         0|            0|            0|  0.00%|        raise NotImplementedError
   679|         0|            0|            0|  0.00%|
   680|         0|            0|            0|  0.00%|    def update(self, x, f):
   681|         0|            0|            0|  0.00%|        df = f - self.last_f
   682|         0|            0|            0|  0.00%|        dx = x - self.last_x
   683|         0|            0|            0|  0.00%|        self._update(x, f, dx, df, norm(dx), norm(df))
   684|         0|            0|            0|  0.00%|        self.last_f = f
   685|         0|            0|            0|  0.00%|        self.last_x = x
   686|         0|            0|            0|  0.00%|
   687|         0|            0|            0|  0.00%|
   688|         0|            0|            0|  0.00%|class LowRankMatrix(object):
   689|         0|            0|            0|  0.00%|    r"""
   690|         0|            0|            0|  0.00%|    A matrix represented as
   691|         0|            0|            0|  0.00%|
   692|         0|            0|            0|  0.00%|    .. math:: \alpha I + \sum_{n=0}^{n=M} c_n d_n^\dagger
   693|         0|            0|            0|  0.00%|
   694|         0|            0|            0|  0.00%|    However, if the rank of the matrix reaches the dimension of the vectors,
   695|         0|            0|            0|  0.00%|    full matrix representation will be used thereon.
   696|         0|            0|            0|  0.00%|
   697|         0|            0|            0|  0.00%|    """
   698|         0|            0|            0|  0.00%|
   699|         0|            0|            0|  0.00%|    def __init__(self, alpha, n, dtype):
   700|         0|            0|            0|  0.00%|        self.alpha = alpha
   701|         0|            0|            0|  0.00%|        self.cs = []
   702|         0|            0|            0|  0.00%|        self.ds = []
   703|         0|            0|            0|  0.00%|        self.n = n
   704|         0|            0|            0|  0.00%|        self.dtype = dtype
   705|         0|            0|            0|  0.00%|        self.collapsed = None
   706|         0|            0|            0|  0.00%|
   707|         0|            0|            0|  0.00%|    @staticmethod
   708|         0|            0|            0|  0.00%|    def _matvec(v, alpha, cs, ds):
   709|         0|            0|            0|  0.00%|        axpy, scal, dotc = get_blas_funcs(['axpy', 'scal', 'dotc'],
   710|         0|            0|            0|  0.00%|                                          cs[:1] + [v])
   711|         0|            0|            0|  0.00%|        w = alpha * v
   712|         0|            0|            0|  0.00%|        for c, d in zip(cs, ds):
   713|         0|            0|            0|  0.00%|            a = dotc(d, v)
   714|         0|            0|            0|  0.00%|            w = axpy(c, w, w.size, a)
   715|         0|            0|            0|  0.00%|        return w
   716|         0|            0|            0|  0.00%|
   717|         0|            0|            0|  0.00%|    @staticmethod
   718|         0|            0|            0|  0.00%|    def _solve(v, alpha, cs, ds):
   719|         0|            0|            0|  0.00%|        """Evaluate w = M^-1 v"""
   720|         0|            0|            0|  0.00%|        if len(cs) == 0:
   721|         0|            0|            0|  0.00%|            return v/alpha
   722|         0|            0|            0|  0.00%|
   723|         0|            0|            0|  0.00%|        # (B + C D^H)^-1 = B^-1 - B^-1 C (I + D^H B^-1 C)^-1 D^H B^-1
   724|         0|            0|            0|  0.00%|
   725|         0|            0|            0|  0.00%|        axpy, dotc = get_blas_funcs(['axpy', 'dotc'], cs[:1] + [v])
   726|         0|            0|            0|  0.00%|
   727|         0|            0|            0|  0.00%|        c0 = cs[0]
   728|         0|            0|            0|  0.00%|        A = alpha * np.identity(len(cs), dtype=c0.dtype)
   729|         0|            0|            0|  0.00%|        for i, d in enumerate(ds):
   730|         0|            0|            0|  0.00%|            for j, c in enumerate(cs):
   731|         0|            0|            0|  0.00%|                A[i,j] += dotc(d, c)
   732|         0|            0|            0|  0.00%|
   733|         0|            0|            0|  0.00%|        q = np.zeros(len(cs), dtype=c0.dtype)
   734|         0|            0|            0|  0.00%|        for j, d in enumerate(ds):
   735|         0|            0|            0|  0.00%|            q[j] = dotc(d, v)
   736|         0|            0|            0|  0.00%|        q /= alpha
   737|         0|            0|            0|  0.00%|        q = solve(A, q)
   738|         0|            0|            0|  0.00%|
   739|         0|            0|            0|  0.00%|        w = v/alpha
   740|         0|            0|            0|  0.00%|        for c, qc in zip(cs, q):
   741|         0|            0|            0|  0.00%|            w = axpy(c, w, w.size, -qc)
   742|         0|            0|            0|  0.00%|
   743|         0|            0|            0|  0.00%|        return w
   744|         0|            0|            0|  0.00%|
   745|         0|            0|            0|  0.00%|    def matvec(self, v):
   746|         0|            0|            0|  0.00%|        """Evaluate w = M v"""
   747|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   748|         0|            0|            0|  0.00%|            return np.dot(self.collapsed, v)
   749|         0|            0|            0|  0.00%|        return LowRankMatrix._matvec(v, self.alpha, self.cs, self.ds)
   750|         0|            0|            0|  0.00%|
   751|         0|            0|            0|  0.00%|    def rmatvec(self, v):
   752|         0|            0|            0|  0.00%|        """Evaluate w = M^H v"""
   753|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   754|         0|            0|            0|  0.00%|            return np.dot(self.collapsed.T.conj(), v)
   755|         0|            0|            0|  0.00%|        return LowRankMatrix._matvec(v, np.conj(self.alpha), self.ds, self.cs)
   756|         0|            0|            0|  0.00%|
   757|         0|            0|            0|  0.00%|    def solve(self, v, tol=0):
   758|         0|            0|            0|  0.00%|        """Evaluate w = M^-1 v"""
   759|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   760|         0|            0|            0|  0.00%|            return solve(self.collapsed, v)
   761|         0|            0|            0|  0.00%|        return LowRankMatrix._solve(v, self.alpha, self.cs, self.ds)
   762|         0|            0|            0|  0.00%|
   763|         0|            0|            0|  0.00%|    def rsolve(self, v, tol=0):
   764|         0|            0|            0|  0.00%|        """Evaluate w = M^-H v"""
   765|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   766|         0|            0|            0|  0.00%|            return solve(self.collapsed.T.conj(), v)
   767|         0|            0|            0|  0.00%|        return LowRankMatrix._solve(v, np.conj(self.alpha), self.ds, self.cs)
   768|         0|            0|            0|  0.00%|
   769|         0|            0|            0|  0.00%|    def append(self, c, d):
   770|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   771|         0|            0|            0|  0.00%|            self.collapsed += c[:,None] * d[None,:].conj()
   772|         0|            0|            0|  0.00%|            return
   773|         0|            0|            0|  0.00%|
   774|         0|            0|            0|  0.00%|        self.cs.append(c)
   775|         0|            0|            0|  0.00%|        self.ds.append(d)
   776|         0|            0|            0|  0.00%|
   777|         0|            0|            0|  0.00%|        if len(self.cs) > c.size:
   778|         0|            0|            0|  0.00%|            self.collapse()
   779|         0|            0|            0|  0.00%|
   780|         0|            0|            0|  0.00%|    def __array__(self):
   781|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   782|         0|            0|            0|  0.00%|            return self.collapsed
   783|         0|            0|            0|  0.00%|
   784|         0|            0|            0|  0.00%|        Gm = self.alpha*np.identity(self.n, dtype=self.dtype)
   785|         0|            0|            0|  0.00%|        for c, d in zip(self.cs, self.ds):
   786|         0|            0|            0|  0.00%|            Gm += c[:,None]*d[None,:].conj()
   787|         0|            0|            0|  0.00%|        return Gm
   788|         0|            0|            0|  0.00%|
   789|         0|            0|            0|  0.00%|    def collapse(self):
   790|         0|            0|            0|  0.00%|        """Collapse the low-rank matrix to a full-rank one."""
   791|         0|            0|            0|  0.00%|        self.collapsed = np.array(self)
   792|         0|            0|            0|  0.00%|        self.cs = None
   793|         0|            0|            0|  0.00%|        self.ds = None
   794|         0|            0|            0|  0.00%|        self.alpha = None
   795|         0|            0|            0|  0.00%|
   796|         0|            0|            0|  0.00%|    def restart_reduce(self, rank):
   797|         0|            0|            0|  0.00%|        """
   798|         0|            0|            0|  0.00%|        Reduce the rank of the matrix by dropping all vectors.
   799|         0|            0|            0|  0.00%|        """
   800|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   801|         0|            0|            0|  0.00%|            return
   802|         0|            0|            0|  0.00%|        assert rank > 0
   803|         0|            0|            0|  0.00%|        if len(self.cs) > rank:
   804|         0|            0|            0|  0.00%|            del self.cs[:]
   805|         0|            0|            0|  0.00%|            del self.ds[:]
   806|         0|            0|            0|  0.00%|
   807|         0|            0|            0|  0.00%|    def simple_reduce(self, rank):
   808|         0|            0|            0|  0.00%|        """
   809|         0|            0|            0|  0.00%|        Reduce the rank of the matrix by dropping oldest vectors.
   810|         0|            0|            0|  0.00%|        """
   811|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   812|         0|            0|            0|  0.00%|            return
   813|         0|            0|            0|  0.00%|        assert rank > 0
   814|         0|            0|            0|  0.00%|        while len(self.cs) > rank:
   815|         0|            0|            0|  0.00%|            del self.cs[0]
   816|         0|            0|            0|  0.00%|            del self.ds[0]
   817|         0|            0|            0|  0.00%|
   818|         0|            0|            0|  0.00%|    def svd_reduce(self, max_rank, to_retain=None):
   819|         0|            0|            0|  0.00%|        """
   820|         0|            0|            0|  0.00%|        Reduce the rank of the matrix by retaining some SVD components.
   821|         0|            0|            0|  0.00%|
   822|         0|            0|            0|  0.00%|        This corresponds to the \"Broyden Rank Reduction Inverse\"
   823|         0|            0|            0|  0.00%|        algorithm described in [1]_.
   824|         0|            0|            0|  0.00%|
   825|         0|            0|            0|  0.00%|        Note that the SVD decomposition can be done by solving only a
   826|         0|            0|            0|  0.00%|        problem whose size is the effective rank of this matrix, which
   827|         0|            0|            0|  0.00%|        is viable even for large problems.
   828|         0|            0|            0|  0.00%|
   829|         0|            0|            0|  0.00%|        Parameters
   830|         0|            0|            0|  0.00%|        ----------
   831|         0|            0|            0|  0.00%|        max_rank : int
   832|         0|            0|            0|  0.00%|            Maximum rank of this matrix after reduction.
   833|         0|            0|            0|  0.00%|        to_retain : int, optional
   834|         0|            0|            0|  0.00%|            Number of SVD components to retain when reduction is done
   835|         0|            0|            0|  0.00%|            (ie. rank > max_rank). Default is ``max_rank - 2``.
   836|         0|            0|            0|  0.00%|
   837|         0|            0|            0|  0.00%|        References
   838|         0|            0|            0|  0.00%|        ----------
   839|         0|            0|            0|  0.00%|        .. [1] B.A. van der Rotten, PhD thesis,
   840|         0|            0|            0|  0.00%|           \"A limited memory Broyden method to solve high-dimensional
   841|         0|            0|            0|  0.00%|           systems of nonlinear equations\". Mathematisch Instituut,
   842|         0|            0|            0|  0.00%|           Universiteit Leiden, The Netherlands (2003).
   843|         0|            0|            0|  0.00%|
   844|         0|            0|            0|  0.00%|           https://web.archive.org/web/20161022015821/http://www.math.leidenuniv.nl/scripties/Rotten.pdf
   845|         0|            0|            0|  0.00%|
   846|         0|            0|            0|  0.00%|        """
   847|         0|            0|            0|  0.00%|        if self.collapsed is not None:
   848|         0|            0|            0|  0.00%|            return
   849|         0|            0|            0|  0.00%|
   850|         0|            0|            0|  0.00%|        p = max_rank
   851|         0|            0|            0|  0.00%|        if to_retain is not None:
   852|         0|            0|            0|  0.00%|            q = to_retain
   853|         0|            0|            0|  0.00%|        else:
   854|         0|            0|            0|  0.00%|            q = p - 2
   855|         0|            0|            0|  0.00%|
   856|         0|            0|            0|  0.00%|        if self.cs:
   857|         0|            0|            0|  0.00%|            p = min(p, len(self.cs[0]))
   858|         0|            0|            0|  0.00%|        q = max(0, min(q, p-1))
   859|         0|            0|            0|  0.00%|
   860|         0|            0|            0|  0.00%|        m = len(self.cs)
   861|         0|            0|            0|  0.00%|        if m < p:
   862|         0|            0|            0|  0.00%|            # nothing to do
   863|         0|            0|            0|  0.00%|            return
   864|         0|            0|            0|  0.00%|
   865|         0|            0|            0|  0.00%|        C = np.array(self.cs).T
   866|         0|            0|            0|  0.00%|        D = np.array(self.ds).T
   867|         0|            0|            0|  0.00%|
   868|         0|            0|            0|  0.00%|        D, R = qr(D, mode='economic')
   869|         0|            0|            0|  0.00%|        C = dot(C, R.T.conj())
   870|         0|            0|            0|  0.00%|
   871|         0|            0|            0|  0.00%|        U, S, WH = svd(C, full_matrices=False, compute_uv=True)
   872|         0|            0|            0|  0.00%|
   873|         0|            0|            0|  0.00%|        C = dot(C, inv(WH))
   874|         0|            0|            0|  0.00%|        D = dot(D, WH.T.conj())
   875|         0|            0|            0|  0.00%|
   876|         0|            0|            0|  0.00%|        for k in range(q):
   877|         0|            0|            0|  0.00%|            self.cs[k] = C[:,k].copy()
   878|         0|            0|            0|  0.00%|            self.ds[k] = D[:,k].copy()
   879|         0|            0|            0|  0.00%|
   880|         0|            0|            0|  0.00%|        del self.cs[q:]
   881|         0|            0|            0|  0.00%|        del self.ds[q:]
   882|         0|            0|            0|  0.00%|
   883|         0|            0|            0|  0.00%|
   884|         0|            0|            0|  0.00%|_doc_parts['broyden_params'] = """
   885|         0|            0|            0|  0.00%|    alpha : float, optional
   886|         0|            0|            0|  0.00%|        Initial guess for the Jacobian is ``(-1/alpha)``.
   887|         0|            0|            0|  0.00%|    reduction_method : str or tuple, optional
   888|         0|            0|            0|  0.00%|        Method used in ensuring that the rank of the Broyden matrix
   889|         0|            0|            0|  0.00%|        stays low. Can either be a string giving the name of the method,
   890|         0|            0|            0|  0.00%|        or a tuple of the form ``(method, param1, param2, ...)``
   891|         0|            0|            0|  0.00%|        that gives the name of the method and values for additional parameters.
   892|         0|            0|            0|  0.00%|
   893|         0|            0|            0|  0.00%|        Methods available:
   894|         0|            0|            0|  0.00%|
   895|         0|            0|            0|  0.00%|            - ``restart``: drop all matrix columns. Has no extra parameters.
   896|         0|            0|            0|  0.00%|            - ``simple``: drop oldest matrix column. Has no extra parameters.
   897|         0|            0|            0|  0.00%|            - ``svd``: keep only the most significant SVD components.
   898|         0|            0|            0|  0.00%|              Takes an extra parameter, ``to_retain``, which determines the
   899|         0|            0|            0|  0.00%|              number of SVD components to retain when rank reduction is done.
   900|         0|            0|            0|  0.00%|              Default is ``max_rank - 2``.
   901|         0|            0|            0|  0.00%|
   902|         0|            0|            0|  0.00%|    max_rank : int, optional
   903|         0|            0|            0|  0.00%|        Maximum rank for the Broyden matrix.
   904|         0|            0|            0|  0.00%|        Default is infinity (i.e., no rank reduction).
   905|         0|            0|            0|  0.00%|    """.strip()
   906|         0|            0|            0|  0.00%|
   907|         0|            0|            0|  0.00%|
   908|         0|            0|            0|  0.00%|class BroydenFirst(GenericBroyden):
   909|         0|            0|            0|  0.00%|    r"""
   910|         0|            0|            0|  0.00%|    Find a root of a function, using Broyden's first Jacobian approximation.
   911|         0|            0|            0|  0.00%|
   912|         0|            0|            0|  0.00%|    This method is also known as \"Broyden's good method\".
   913|         0|            0|            0|  0.00%|
   914|         0|            0|            0|  0.00%|    Parameters
   915|         0|            0|            0|  0.00%|    ----------
   916|         0|            0|            0|  0.00%|    %(params_basic)s
   917|         0|            0|            0|  0.00%|    %(broyden_params)s
   918|         0|            0|            0|  0.00%|    %(params_extra)s
   919|         0|            0|            0|  0.00%|
   920|         0|            0|            0|  0.00%|    See Also
   921|         0|            0|            0|  0.00%|    --------
   922|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
   923|         0|            0|            0|  0.00%|           functions. See ``method=='broyden1'`` in particular.
   924|         0|            0|            0|  0.00%|
   925|         0|            0|            0|  0.00%|    Notes
   926|         0|            0|            0|  0.00%|    -----
   927|         0|            0|            0|  0.00%|    This algorithm implements the inverse Jacobian Quasi-Newton update
   928|         0|            0|            0|  0.00%|
   929|         0|            0|            0|  0.00%|    .. math:: H_+ = H + (dx - H df) dx^\dagger H / ( dx^\dagger H df)
   930|         0|            0|            0|  0.00%|
   931|         0|            0|            0|  0.00%|    which corresponds to Broyden's first Jacobian update
   932|         0|            0|            0|  0.00%|
   933|         0|            0|            0|  0.00%|    .. math:: J_+ = J + (df - J dx) dx^\dagger / dx^\dagger dx
   934|         0|            0|            0|  0.00%|
   935|         0|            0|            0|  0.00%|
   936|         0|            0|            0|  0.00%|    References
   937|         0|            0|            0|  0.00%|    ----------
   938|         0|            0|            0|  0.00%|    .. [1] B.A. van der Rotten, PhD thesis,
   939|         0|            0|            0|  0.00%|       \"A limited memory Broyden method to solve high-dimensional
   940|         0|            0|            0|  0.00%|       systems of nonlinear equations\". Mathematisch Instituut,
   941|         0|            0|            0|  0.00%|       Universiteit Leiden, The Netherlands (2003).
   942|         0|            0|            0|  0.00%|
   943|         0|            0|            0|  0.00%|       https://web.archive.org/web/20161022015821/http://www.math.leidenuniv.nl/scripties/Rotten.pdf
   944|         0|            0|            0|  0.00%|
   945|         0|            0|            0|  0.00%|    """
   946|         0|            0|            0|  0.00%|
   947|         0|            0|            0|  0.00%|    def __init__(self, alpha=None, reduction_method='restart', max_rank=None):
   948|         0|            0|            0|  0.00%|        GenericBroyden.__init__(self)
   949|         0|            0|            0|  0.00%|        self.alpha = alpha
   950|         0|            0|            0|  0.00%|        self.Gm = None
   951|         0|            0|            0|  0.00%|
   952|         0|            0|            0|  0.00%|        if max_rank is None:
   953|         0|            0|            0|  0.00%|            max_rank = np.inf
   954|         0|            0|            0|  0.00%|        self.max_rank = max_rank
   955|         0|            0|            0|  0.00%|
   956|         0|            0|            0|  0.00%|        if isinstance(reduction_method, str):
   957|         0|            0|            0|  0.00%|            reduce_params = ()
   958|         0|            0|            0|  0.00%|        else:
   959|         0|            0|            0|  0.00%|            reduce_params = reduction_method[1:]
   960|         0|            0|            0|  0.00%|            reduction_method = reduction_method[0]
   961|         0|            0|            0|  0.00%|        reduce_params = (max_rank - 1,) + reduce_params
   962|         0|            0|            0|  0.00%|
   963|         0|            0|            0|  0.00%|        if reduction_method == 'svd':
   964|         0|            0|            0|  0.00%|            self._reduce = lambda: self.Gm.svd_reduce(*reduce_params)
   965|         0|            0|            0|  0.00%|        elif reduction_method == 'simple':
   966|         0|            0|            0|  0.00%|            self._reduce = lambda: self.Gm.simple_reduce(*reduce_params)
   967|         0|            0|            0|  0.00%|        elif reduction_method == 'restart':
   968|         0|            0|            0|  0.00%|            self._reduce = lambda: self.Gm.restart_reduce(*reduce_params)
   969|         0|            0|            0|  0.00%|        else:
   970|         0|            0|            0|  0.00%|            raise ValueError("Unknown rank reduction method '%s'" %
   971|         0|            0|            0|  0.00%|                             reduction_method)
   972|         0|            0|            0|  0.00%|
   973|         0|            0|            0|  0.00%|    def setup(self, x, F, func):
   974|         0|            0|            0|  0.00%|        GenericBroyden.setup(self, x, F, func)
   975|         0|            0|            0|  0.00%|        self.Gm = LowRankMatrix(-self.alpha, self.shape[0], self.dtype)
   976|         0|            0|            0|  0.00%|
   977|         0|            0|            0|  0.00%|    def todense(self):
   978|         0|            0|            0|  0.00%|        return inv(self.Gm)
   979|         0|            0|            0|  0.00%|
   980|         0|            0|            0|  0.00%|    def solve(self, f, tol=0):
   981|         0|            0|            0|  0.00%|        r = self.Gm.matvec(f)
   982|         0|            0|            0|  0.00%|        if not np.isfinite(r).all():
   983|         0|            0|            0|  0.00%|            # singular; reset the Jacobian approximation
   984|         0|            0|            0|  0.00%|            self.setup(self.last_x, self.last_f, self.func)
   985|         0|            0|            0|  0.00%|        return self.Gm.matvec(f)
   986|         0|            0|            0|  0.00%|
   987|         0|            0|            0|  0.00%|    def matvec(self, f):
   988|         0|            0|            0|  0.00%|        return self.Gm.solve(f)
   989|         0|            0|            0|  0.00%|
   990|         0|            0|            0|  0.00%|    def rsolve(self, f, tol=0):
   991|         0|            0|            0|  0.00%|        return self.Gm.rmatvec(f)
   992|         0|            0|            0|  0.00%|
   993|         0|            0|            0|  0.00%|    def rmatvec(self, f):
   994|         0|            0|            0|  0.00%|        return self.Gm.rsolve(f)
   995|         0|            0|            0|  0.00%|
   996|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
   997|         0|            0|            0|  0.00%|        self._reduce()  # reduce first to preserve secant condition
   998|         0|            0|            0|  0.00%|
   999|         0|            0|            0|  0.00%|        v = self.Gm.rmatvec(dx)
  1000|         0|            0|            0|  0.00%|        c = dx - self.Gm.matvec(df)
  1001|         0|            0|            0|  0.00%|        d = v / vdot(df, v)
  1002|         0|            0|            0|  0.00%|
  1003|         0|            0|            0|  0.00%|        self.Gm.append(c, d)
  1004|         0|            0|            0|  0.00%|
  1005|         0|            0|            0|  0.00%|
  1006|         0|            0|            0|  0.00%|class BroydenSecond(BroydenFirst):
  1007|         0|            0|            0|  0.00%|    """
  1008|         0|            0|            0|  0.00%|    Find a root of a function, using Broyden\'s second Jacobian approximation.
  1009|         0|            0|            0|  0.00%|
  1010|         0|            0|            0|  0.00%|    This method is also known as \"Broyden's bad method\".
  1011|         0|            0|            0|  0.00%|
  1012|         0|            0|            0|  0.00%|    Parameters
  1013|         0|            0|            0|  0.00%|    ----------
  1014|         0|            0|            0|  0.00%|    %(params_basic)s
  1015|         0|            0|            0|  0.00%|    %(broyden_params)s
  1016|         0|            0|            0|  0.00%|    %(params_extra)s
  1017|         0|            0|            0|  0.00%|
  1018|         0|            0|            0|  0.00%|    See Also
  1019|         0|            0|            0|  0.00%|    --------
  1020|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1021|         0|            0|            0|  0.00%|           functions. See ``method=='broyden2'`` in particular.
  1022|         0|            0|            0|  0.00%|
  1023|         0|            0|            0|  0.00%|    Notes
  1024|         0|            0|            0|  0.00%|    -----
  1025|         0|            0|            0|  0.00%|    This algorithm implements the inverse Jacobian Quasi-Newton update
  1026|         0|            0|            0|  0.00%|
  1027|         0|            0|            0|  0.00%|    .. math:: H_+ = H + (dx - H df) df^\\dagger / ( df^\\dagger df)
  1028|         0|            0|            0|  0.00%|
  1029|         0|            0|            0|  0.00%|    corresponding to Broyden's second method.
  1030|         0|            0|            0|  0.00%|
  1031|         0|            0|            0|  0.00%|    References
  1032|         0|            0|            0|  0.00%|    ----------
  1033|         0|            0|            0|  0.00%|    .. [1] B.A. van der Rotten, PhD thesis,
  1034|         0|            0|            0|  0.00%|       \"A limited memory Broyden method to solve high-dimensional
  1035|         0|            0|            0|  0.00%|       systems of nonlinear equations\". Mathematisch Instituut,
  1036|         0|            0|            0|  0.00%|       Universiteit Leiden, The Netherlands (2003).
  1037|         0|            0|            0|  0.00%|
  1038|         0|            0|            0|  0.00%|       https://web.archive.org/web/20161022015821/http://www.math.leidenuniv.nl/scripties/Rotten.pdf
  1039|         0|            0|            0|  0.00%|
  1040|         0|            0|            0|  0.00%|    """
  1041|         0|            0|            0|  0.00%|
  1042|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
  1043|         0|            0|            0|  0.00%|        self._reduce()  # reduce first to preserve secant condition
  1044|         0|            0|            0|  0.00%|
  1045|         0|            0|            0|  0.00%|        v = df
  1046|         0|            0|            0|  0.00%|        c = dx - self.Gm.matvec(df)
  1047|         0|            0|            0|  0.00%|        d = v / df_norm**2
  1048|         0|            0|            0|  0.00%|        self.Gm.append(c, d)
  1049|         0|            0|            0|  0.00%|
  1050|         0|            0|            0|  0.00%|
  1051|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1052|         0|            0|            0|  0.00%|# Broyden-like (restricted memory)
  1053|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1054|         0|            0|            0|  0.00%|
  1055|         0|            0|            0|  0.00%|class Anderson(GenericBroyden):
  1056|         0|            0|            0|  0.00%|    """
  1057|         0|            0|            0|  0.00%|    Find a root of a function, using (extended) Anderson mixing.
  1058|         0|            0|            0|  0.00%|
  1059|         0|            0|            0|  0.00%|    The Jacobian is formed by for a 'best' solution in the space
  1060|         0|            0|            0|  0.00%|    spanned by last `M` vectors. As a result, only a MxM matrix
  1061|         0|            0|            0|  0.00%|    inversions and MxN multiplications are required. [Ey]_
  1062|         0|            0|            0|  0.00%|
  1063|         0|            0|            0|  0.00%|    Parameters
  1064|         0|            0|            0|  0.00%|    ----------
  1065|         0|            0|            0|  0.00%|    %(params_basic)s
  1066|         0|            0|            0|  0.00%|    alpha : float, optional
  1067|         0|            0|            0|  0.00%|        Initial guess for the Jacobian is (-1/alpha).
  1068|         0|            0|            0|  0.00%|    M : float, optional
  1069|         0|            0|            0|  0.00%|        Number of previous vectors to retain. Defaults to 5.
  1070|         0|            0|            0|  0.00%|    w0 : float, optional
  1071|         0|            0|            0|  0.00%|        Regularization parameter for numerical stability.
  1072|         0|            0|            0|  0.00%|        Compared to unity, good values of the order of 0.01.
  1073|         0|            0|            0|  0.00%|    %(params_extra)s
  1074|         0|            0|            0|  0.00%|
  1075|         0|            0|            0|  0.00%|    See Also
  1076|         0|            0|            0|  0.00%|    --------
  1077|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1078|         0|            0|            0|  0.00%|           functions. See ``method=='anderson'`` in particular.
  1079|         0|            0|            0|  0.00%|
  1080|         0|            0|            0|  0.00%|    References
  1081|         0|            0|            0|  0.00%|    ----------
  1082|         0|            0|            0|  0.00%|    .. [Ey] V. Eyert, J. Comp. Phys., 124, 271 (1996).
  1083|         0|            0|            0|  0.00%|
  1084|         0|            0|            0|  0.00%|    """
  1085|         0|            0|            0|  0.00%|
  1086|         0|            0|            0|  0.00%|    # Note:
  1087|         0|            0|            0|  0.00%|    #
  1088|         0|            0|            0|  0.00%|    # Anderson method maintains a rank M approximation of the inverse Jacobian,
  1089|         0|            0|            0|  0.00%|    #
  1090|         0|            0|            0|  0.00%|    #     J^-1 v ~ -v*alpha + (dX + alpha dF) A^-1 dF^H v
  1091|         0|            0|            0|  0.00%|    #     A      = W + dF^H dF
  1092|         0|            0|            0|  0.00%|    #     W      = w0^2 diag(dF^H dF)
  1093|         0|            0|            0|  0.00%|    #
  1094|         0|            0|            0|  0.00%|    # so that for w0 = 0 the secant condition applies for last M iterates, i.e.,
  1095|         0|            0|            0|  0.00%|    #
  1096|         0|            0|            0|  0.00%|    #     J^-1 df_j = dx_j
  1097|         0|            0|            0|  0.00%|    #
  1098|         0|            0|            0|  0.00%|    # for all j = 0 ... M-1.
  1099|         0|            0|            0|  0.00%|    #
  1100|         0|            0|            0|  0.00%|    # Moreover, (from Sherman-Morrison-Woodbury formula)
  1101|         0|            0|            0|  0.00%|    #
  1102|         0|            0|            0|  0.00%|    #    J v ~ [ b I - b^2 C (I + b dF^H A^-1 C)^-1 dF^H ] v
  1103|         0|            0|            0|  0.00%|    #    C   = (dX + alpha dF) A^-1
  1104|         0|            0|            0|  0.00%|    #    b   = -1/alpha
  1105|         0|            0|            0|  0.00%|    #
  1106|         0|            0|            0|  0.00%|    # and after simplification
  1107|         0|            0|            0|  0.00%|    #
  1108|         0|            0|            0|  0.00%|    #    J v ~ -v/alpha + (dX/alpha + dF) (dF^H dX - alpha W)^-1 dF^H v
  1109|         0|            0|            0|  0.00%|    #
  1110|         0|            0|            0|  0.00%|
  1111|         0|            0|            0|  0.00%|    def __init__(self, alpha=None, w0=0.01, M=5):
  1112|         0|            0|            0|  0.00%|        GenericBroyden.__init__(self)
  1113|         0|            0|            0|  0.00%|        self.alpha = alpha
  1114|         0|            0|            0|  0.00%|        self.M = M
  1115|         0|            0|            0|  0.00%|        self.dx = []
  1116|         0|            0|            0|  0.00%|        self.df = []
  1117|         0|            0|            0|  0.00%|        self.gamma = None
  1118|         0|            0|            0|  0.00%|        self.w0 = w0
  1119|         0|            0|            0|  0.00%|
  1120|         0|            0|            0|  0.00%|    def solve(self, f, tol=0):
  1121|         0|            0|            0|  0.00%|        dx = -self.alpha*f
  1122|         0|            0|            0|  0.00%|
  1123|         0|            0|            0|  0.00%|        n = len(self.dx)
  1124|         0|            0|            0|  0.00%|        if n == 0:
  1125|         0|            0|            0|  0.00%|            return dx
  1126|         0|            0|            0|  0.00%|
  1127|         0|            0|            0|  0.00%|        df_f = np.empty(n, dtype=f.dtype)
  1128|         0|            0|            0|  0.00%|        for k in range(n):
  1129|         0|            0|            0|  0.00%|            df_f[k] = vdot(self.df[k], f)
  1130|         0|            0|            0|  0.00%|
  1131|         0|            0|            0|  0.00%|        try:
  1132|         0|            0|            0|  0.00%|            gamma = solve(self.a, df_f)
  1133|         0|            0|            0|  0.00%|        except LinAlgError:
  1134|         0|            0|            0|  0.00%|            # singular; reset the Jacobian approximation
  1135|         0|            0|            0|  0.00%|            del self.dx[:]
  1136|         0|            0|            0|  0.00%|            del self.df[:]
  1137|         0|            0|            0|  0.00%|            return dx
  1138|         0|            0|            0|  0.00%|
  1139|         0|            0|            0|  0.00%|        for m in range(n):
  1140|         0|            0|            0|  0.00%|            dx += gamma[m]*(self.dx[m] + self.alpha*self.df[m])
  1141|         0|            0|            0|  0.00%|        return dx
  1142|         0|            0|            0|  0.00%|
  1143|         0|            0|            0|  0.00%|    def matvec(self, f):
  1144|         0|            0|            0|  0.00%|        dx = -f/self.alpha
  1145|         0|            0|            0|  0.00%|
  1146|         0|            0|            0|  0.00%|        n = len(self.dx)
  1147|         0|            0|            0|  0.00%|        if n == 0:
  1148|         0|            0|            0|  0.00%|            return dx
  1149|         0|            0|            0|  0.00%|
  1150|         0|            0|            0|  0.00%|        df_f = np.empty(n, dtype=f.dtype)
  1151|         0|            0|            0|  0.00%|        for k in range(n):
  1152|         0|            0|            0|  0.00%|            df_f[k] = vdot(self.df[k], f)
  1153|         0|            0|            0|  0.00%|
  1154|         0|            0|            0|  0.00%|        b = np.empty((n, n), dtype=f.dtype)
  1155|         0|            0|            0|  0.00%|        for i in range(n):
  1156|         0|            0|            0|  0.00%|            for j in range(n):
  1157|         0|            0|            0|  0.00%|                b[i,j] = vdot(self.df[i], self.dx[j])
  1158|         0|            0|            0|  0.00%|                if i == j and self.w0 != 0:
  1159|         0|            0|            0|  0.00%|                    b[i,j] -= vdot(self.df[i], self.df[i])*self.w0**2*self.alpha
  1160|         0|            0|            0|  0.00%|        gamma = solve(b, df_f)
  1161|         0|            0|            0|  0.00%|
  1162|         0|            0|            0|  0.00%|        for m in range(n):
  1163|         0|            0|            0|  0.00%|            dx += gamma[m]*(self.df[m] + self.dx[m]/self.alpha)
  1164|         0|            0|            0|  0.00%|        return dx
  1165|         0|            0|            0|  0.00%|
  1166|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
  1167|         0|            0|            0|  0.00%|        if self.M == 0:
  1168|         0|            0|            0|  0.00%|            return
  1169|         0|            0|            0|  0.00%|
  1170|         0|            0|            0|  0.00%|        self.dx.append(dx)
  1171|         0|            0|            0|  0.00%|        self.df.append(df)
  1172|         0|            0|            0|  0.00%|
  1173|         0|            0|            0|  0.00%|        while len(self.dx) > self.M:
  1174|         0|            0|            0|  0.00%|            self.dx.pop(0)
  1175|         0|            0|            0|  0.00%|            self.df.pop(0)
  1176|         0|            0|            0|  0.00%|
  1177|         0|            0|            0|  0.00%|        n = len(self.dx)
  1178|         0|            0|            0|  0.00%|        a = np.zeros((n, n), dtype=f.dtype)
  1179|         0|            0|            0|  0.00%|
  1180|         0|            0|            0|  0.00%|        for i in range(n):
  1181|         0|            0|            0|  0.00%|            for j in range(i, n):
  1182|         0|            0|            0|  0.00%|                if i == j:
  1183|         0|            0|            0|  0.00%|                    wd = self.w0**2
  1184|         0|            0|            0|  0.00%|                else:
  1185|         0|            0|            0|  0.00%|                    wd = 0
  1186|         0|            0|            0|  0.00%|                a[i,j] = (1+wd)*vdot(self.df[i], self.df[j])
  1187|         0|            0|            0|  0.00%|
  1188|         0|            0|            0|  0.00%|        a += np.triu(a, 1).T.conj()
  1189|         0|            0|            0|  0.00%|        self.a = a
  1190|         0|            0|            0|  0.00%|
  1191|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1192|         0|            0|            0|  0.00%|# Simple iterations
  1193|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1194|         0|            0|            0|  0.00%|
  1195|         0|            0|            0|  0.00%|
  1196|         0|            0|            0|  0.00%|class DiagBroyden(GenericBroyden):
  1197|         0|            0|            0|  0.00%|    """
  1198|         0|            0|            0|  0.00%|    Find a root of a function, using diagonal Broyden Jacobian approximation.
  1199|         0|            0|            0|  0.00%|
  1200|         0|            0|            0|  0.00%|    The Jacobian approximation is derived from previous iterations, by
  1201|         0|            0|            0|  0.00%|    retaining only the diagonal of Broyden matrices.
  1202|         0|            0|            0|  0.00%|
  1203|         0|            0|            0|  0.00%|    .. warning::
  1204|         0|            0|            0|  0.00%|
  1205|         0|            0|            0|  0.00%|       This algorithm may be useful for specific problems, but whether
  1206|         0|            0|            0|  0.00%|       it will work may depend strongly on the problem.
  1207|         0|            0|            0|  0.00%|
  1208|         0|            0|            0|  0.00%|    Parameters
  1209|         0|            0|            0|  0.00%|    ----------
  1210|         0|            0|            0|  0.00%|    %(params_basic)s
  1211|         0|            0|            0|  0.00%|    alpha : float, optional
  1212|         0|            0|            0|  0.00%|        Initial guess for the Jacobian is (-1/alpha).
  1213|         0|            0|            0|  0.00%|    %(params_extra)s
  1214|         0|            0|            0|  0.00%|
  1215|         0|            0|            0|  0.00%|    See Also
  1216|         0|            0|            0|  0.00%|    --------
  1217|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1218|         0|            0|            0|  0.00%|           functions. See ``method=='diagbroyden'`` in particular.
  1219|         0|            0|            0|  0.00%|    """
  1220|         0|            0|            0|  0.00%|
  1221|         0|            0|            0|  0.00%|    def __init__(self, alpha=None):
  1222|         0|            0|            0|  0.00%|        GenericBroyden.__init__(self)
  1223|         0|            0|            0|  0.00%|        self.alpha = alpha
  1224|         0|            0|            0|  0.00%|
  1225|         0|            0|            0|  0.00%|    def setup(self, x, F, func):
  1226|         0|            0|            0|  0.00%|        GenericBroyden.setup(self, x, F, func)
  1227|         0|            0|            0|  0.00%|        self.d = np.full((self.shape[0],), 1 / self.alpha, dtype=self.dtype)
  1228|         0|            0|            0|  0.00%|
  1229|         0|            0|            0|  0.00%|    def solve(self, f, tol=0):
  1230|         0|            0|            0|  0.00%|        return -f / self.d
  1231|         0|            0|            0|  0.00%|
  1232|         0|            0|            0|  0.00%|    def matvec(self, f):
  1233|         0|            0|            0|  0.00%|        return -f * self.d
  1234|         0|            0|            0|  0.00%|
  1235|         0|            0|            0|  0.00%|    def rsolve(self, f, tol=0):
  1236|         0|            0|            0|  0.00%|        return -f / self.d.conj()
  1237|         0|            0|            0|  0.00%|
  1238|         0|            0|            0|  0.00%|    def rmatvec(self, f):
  1239|         0|            0|            0|  0.00%|        return -f * self.d.conj()
  1240|         0|            0|            0|  0.00%|
  1241|         0|            0|            0|  0.00%|    def todense(self):
  1242|         0|            0|            0|  0.00%|        return np.diag(-self.d)
  1243|         0|            0|            0|  0.00%|
  1244|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
  1245|         0|            0|            0|  0.00%|        self.d -= (df + self.d*dx)*dx/dx_norm**2
  1246|         0|            0|            0|  0.00%|
  1247|         0|            0|            0|  0.00%|
  1248|         0|            0|            0|  0.00%|class LinearMixing(GenericBroyden):
  1249|         0|            0|            0|  0.00%|    """
  1250|         0|            0|            0|  0.00%|    Find a root of a function, using a scalar Jacobian approximation.
  1251|         0|            0|            0|  0.00%|
  1252|         0|            0|            0|  0.00%|    .. warning::
  1253|         0|            0|            0|  0.00%|
  1254|         0|            0|            0|  0.00%|       This algorithm may be useful for specific problems, but whether
  1255|         0|            0|            0|  0.00%|       it will work may depend strongly on the problem.
  1256|         0|            0|            0|  0.00%|
  1257|         0|            0|            0|  0.00%|    Parameters
  1258|         0|            0|            0|  0.00%|    ----------
  1259|         0|            0|            0|  0.00%|    %(params_basic)s
  1260|         0|            0|            0|  0.00%|    alpha : float, optional
  1261|         0|            0|            0|  0.00%|        The Jacobian approximation is (-1/alpha).
  1262|         0|            0|            0|  0.00%|    %(params_extra)s
  1263|         0|            0|            0|  0.00%|
  1264|         0|            0|            0|  0.00%|    See Also
  1265|         0|            0|            0|  0.00%|    --------
  1266|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1267|         0|            0|            0|  0.00%|           functions. See ``method=='linearmixing'`` in particular.
  1268|         0|            0|            0|  0.00%|
  1269|         0|            0|            0|  0.00%|    """
  1270|         0|            0|            0|  0.00%|
  1271|         0|            0|            0|  0.00%|    def __init__(self, alpha=None):
  1272|         0|            0|            0|  0.00%|        GenericBroyden.__init__(self)
  1273|         0|            0|            0|  0.00%|        self.alpha = alpha
  1274|         0|            0|            0|  0.00%|
  1275|         0|            0|            0|  0.00%|    def solve(self, f, tol=0):
  1276|         0|            0|            0|  0.00%|        return -f*self.alpha
  1277|         0|            0|            0|  0.00%|
  1278|         0|            0|            0|  0.00%|    def matvec(self, f):
  1279|         0|            0|            0|  0.00%|        return -f/self.alpha
  1280|         0|            0|            0|  0.00%|
  1281|         0|            0|            0|  0.00%|    def rsolve(self, f, tol=0):
  1282|         0|            0|            0|  0.00%|        return -f*np.conj(self.alpha)
  1283|         0|            0|            0|  0.00%|
  1284|         0|            0|            0|  0.00%|    def rmatvec(self, f):
  1285|         0|            0|            0|  0.00%|        return -f/np.conj(self.alpha)
  1286|         0|            0|            0|  0.00%|
  1287|         0|            0|            0|  0.00%|    def todense(self):
  1288|         0|            0|            0|  0.00%|        return np.diag(np.full(self.shape[0], -1/self.alpha))
  1289|         0|            0|            0|  0.00%|
  1290|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
  1291|         0|            0|            0|  0.00%|        pass
  1292|         0|            0|            0|  0.00%|
  1293|         0|            0|            0|  0.00%|
  1294|         0|            0|            0|  0.00%|class ExcitingMixing(GenericBroyden):
  1295|         0|            0|            0|  0.00%|    """
  1296|         0|            0|            0|  0.00%|    Find a root of a function, using a tuned diagonal Jacobian approximation.
  1297|         0|            0|            0|  0.00%|
  1298|         0|            0|            0|  0.00%|    The Jacobian matrix is diagonal and is tuned on each iteration.
  1299|         0|            0|            0|  0.00%|
  1300|         0|            0|            0|  0.00%|    .. warning::
  1301|         0|            0|            0|  0.00%|
  1302|         0|            0|            0|  0.00%|       This algorithm may be useful for specific problems, but whether
  1303|         0|            0|            0|  0.00%|       it will work may depend strongly on the problem.
  1304|         0|            0|            0|  0.00%|
  1305|         0|            0|            0|  0.00%|    See Also
  1306|         0|            0|            0|  0.00%|    --------
  1307|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1308|         0|            0|            0|  0.00%|           functions. See ``method=='excitingmixing'`` in particular.
  1309|         0|            0|            0|  0.00%|
  1310|         0|            0|            0|  0.00%|    Parameters
  1311|         0|            0|            0|  0.00%|    ----------
  1312|         0|            0|            0|  0.00%|    %(params_basic)s
  1313|         0|            0|            0|  0.00%|    alpha : float, optional
  1314|         0|            0|            0|  0.00%|        Initial Jacobian approximation is (-1/alpha).
  1315|         0|            0|            0|  0.00%|    alphamax : float, optional
  1316|         0|            0|            0|  0.00%|        The entries of the diagonal Jacobian are kept in the range
  1317|         0|            0|            0|  0.00%|        ``[alpha, alphamax]``.
  1318|         0|            0|            0|  0.00%|    %(params_extra)s
  1319|         0|            0|            0|  0.00%|    """
  1320|         0|            0|            0|  0.00%|
  1321|         0|            0|            0|  0.00%|    def __init__(self, alpha=None, alphamax=1.0):
  1322|         0|            0|            0|  0.00%|        GenericBroyden.__init__(self)
  1323|         0|            0|            0|  0.00%|        self.alpha = alpha
  1324|         0|            0|            0|  0.00%|        self.alphamax = alphamax
  1325|         0|            0|            0|  0.00%|        self.beta = None
  1326|         0|            0|            0|  0.00%|
  1327|         0|            0|            0|  0.00%|    def setup(self, x, F, func):
  1328|         0|            0|            0|  0.00%|        GenericBroyden.setup(self, x, F, func)
  1329|         0|            0|            0|  0.00%|        self.beta = np.full((self.shape[0],), self.alpha, dtype=self.dtype)
  1330|         0|            0|            0|  0.00%|
  1331|         0|            0|            0|  0.00%|    def solve(self, f, tol=0):
  1332|         0|            0|            0|  0.00%|        return -f*self.beta
  1333|         0|            0|            0|  0.00%|
  1334|         0|            0|            0|  0.00%|    def matvec(self, f):
  1335|         0|            0|            0|  0.00%|        return -f/self.beta
  1336|         0|            0|            0|  0.00%|
  1337|         0|            0|            0|  0.00%|    def rsolve(self, f, tol=0):
  1338|         0|            0|            0|  0.00%|        return -f*self.beta.conj()
  1339|         0|            0|            0|  0.00%|
  1340|         0|            0|            0|  0.00%|    def rmatvec(self, f):
  1341|         0|            0|            0|  0.00%|        return -f/self.beta.conj()
  1342|         0|            0|            0|  0.00%|
  1343|         0|            0|            0|  0.00%|    def todense(self):
  1344|         0|            0|            0|  0.00%|        return np.diag(-1/self.beta)
  1345|         0|            0|            0|  0.00%|
  1346|         0|            0|            0|  0.00%|    def _update(self, x, f, dx, df, dx_norm, df_norm):
  1347|         0|            0|            0|  0.00%|        incr = f*self.last_f > 0
  1348|         0|            0|            0|  0.00%|        self.beta[incr] += self.alpha
  1349|         0|            0|            0|  0.00%|        self.beta[~incr] = self.alpha
  1350|         0|            0|            0|  0.00%|        np.clip(self.beta, 0, self.alphamax, out=self.beta)
  1351|         0|            0|            0|  0.00%|
  1352|         0|            0|            0|  0.00%|
  1353|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1354|         0|            0|            0|  0.00%|# Iterative/Krylov approximated Jacobians
  1355|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1356|         0|            0|            0|  0.00%|
  1357|         0|            0|            0|  0.00%|class KrylovJacobian(Jacobian):
  1358|         0|            0|            0|  0.00%|    r"""
  1359|         0|            0|            0|  0.00%|    Find a root of a function, using Krylov approximation for inverse Jacobian.
  1360|         0|            0|            0|  0.00%|
  1361|         0|            0|            0|  0.00%|    This method is suitable for solving large-scale problems.
  1362|         0|            0|            0|  0.00%|
  1363|         0|            0|            0|  0.00%|    Parameters
  1364|         0|            0|            0|  0.00%|    ----------
  1365|         0|            0|            0|  0.00%|    %(params_basic)s
  1366|         0|            0|            0|  0.00%|    rdiff : float, optional
  1367|         0|            0|            0|  0.00%|        Relative step size to use in numerical differentiation.
  1368|         0|            0|            0|  0.00%|    method : {'lgmres', 'gmres', 'bicgstab', 'cgs', 'minres'} or function
  1369|         0|            0|            0|  0.00%|        Krylov method to use to approximate the Jacobian.
  1370|         0|            0|            0|  0.00%|        Can be a string, or a function implementing the same interface as
  1371|         0|            0|            0|  0.00%|        the iterative solvers in `scipy.sparse.linalg`.
  1372|         0|            0|            0|  0.00%|
  1373|         0|            0|            0|  0.00%|        The default is `scipy.sparse.linalg.lgmres`.
  1374|         0|            0|            0|  0.00%|    inner_maxiter : int, optional
  1375|         0|            0|            0|  0.00%|        Parameter to pass to the "inner" Krylov solver: maximum number of
  1376|         0|            0|            0|  0.00%|        iterations. Iteration will stop after maxiter steps even if the
  1377|         0|            0|            0|  0.00%|        specified tolerance has not been achieved.
  1378|         0|            0|            0|  0.00%|    inner_M : LinearOperator or InverseJacobian
  1379|         0|            0|            0|  0.00%|        Preconditioner for the inner Krylov iteration.
  1380|         0|            0|            0|  0.00%|        Note that you can use also inverse Jacobians as (adaptive)
  1381|         0|            0|            0|  0.00%|        preconditioners. For example,
  1382|         0|            0|            0|  0.00%|
  1383|         0|            0|            0|  0.00%|        >>> from scipy.optimize.nonlin import BroydenFirst, KrylovJacobian
  1384|         0|            0|            0|  0.00%|        >>> from scipy.optimize.nonlin import InverseJacobian
  1385|         0|            0|            0|  0.00%|        >>> jac = BroydenFirst()
  1386|         0|            0|            0|  0.00%|        >>> kjac = KrylovJacobian(inner_M=InverseJacobian(jac))
  1387|         0|            0|            0|  0.00%|
  1388|         0|            0|            0|  0.00%|        If the preconditioner has a method named 'update', it will be called
  1389|         0|            0|            0|  0.00%|        as ``update(x, f)`` after each nonlinear step, with ``x`` giving
  1390|         0|            0|            0|  0.00%|        the current point, and ``f`` the current function value.
  1391|         0|            0|            0|  0.00%|    outer_k : int, optional
  1392|         0|            0|            0|  0.00%|        Size of the subspace kept across LGMRES nonlinear iterations.
  1393|         0|            0|            0|  0.00%|        See `scipy.sparse.linalg.lgmres` for details.
  1394|         0|            0|            0|  0.00%|    inner_kwargs : kwargs
  1395|         0|            0|            0|  0.00%|        Keyword parameters for the "inner" Krylov solver
  1396|         0|            0|            0|  0.00%|        (defined with `method`). Parameter names must start with
  1397|         0|            0|            0|  0.00%|        the `inner_` prefix which will be stripped before passing on
  1398|         0|            0|            0|  0.00%|        the inner method. See, e.g., `scipy.sparse.linalg.gmres` for details.
  1399|         0|            0|            0|  0.00%|    %(params_extra)s
  1400|         0|            0|            0|  0.00%|
  1401|         0|            0|            0|  0.00%|    See Also
  1402|         0|            0|            0|  0.00%|    --------
  1403|         0|            0|            0|  0.00%|    root : Interface to root finding algorithms for multivariate
  1404|         0|            0|            0|  0.00%|           functions. See ``method=='krylov'`` in particular.
  1405|         0|            0|            0|  0.00%|    scipy.sparse.linalg.gmres
  1406|         0|            0|            0|  0.00%|    scipy.sparse.linalg.lgmres
  1407|         0|            0|            0|  0.00%|
  1408|         0|            0|            0|  0.00%|    Notes
  1409|         0|            0|            0|  0.00%|    -----
  1410|         0|            0|            0|  0.00%|    This function implements a Newton-Krylov solver. The basic idea is
  1411|         0|            0|            0|  0.00%|    to compute the inverse of the Jacobian with an iterative Krylov
  1412|         0|            0|            0|  0.00%|    method. These methods require only evaluating the Jacobian-vector
  1413|         0|            0|            0|  0.00%|    products, which are conveniently approximated by a finite difference:
  1414|         0|            0|            0|  0.00%|
  1415|         0|            0|            0|  0.00%|    .. math:: J v \approx (f(x + \omega*v/|v|) - f(x)) / \omega
  1416|         0|            0|            0|  0.00%|
  1417|         0|            0|            0|  0.00%|    Due to the use of iterative matrix inverses, these methods can
  1418|         0|            0|            0|  0.00%|    deal with large nonlinear problems.
  1419|         0|            0|            0|  0.00%|
  1420|         0|            0|            0|  0.00%|    SciPy's `scipy.sparse.linalg` module offers a selection of Krylov
  1421|         0|            0|            0|  0.00%|    solvers to choose from. The default here is `lgmres`, which is a
  1422|         0|            0|            0|  0.00%|    variant of restarted GMRES iteration that reuses some of the
  1423|         0|            0|            0|  0.00%|    information obtained in the previous Newton steps to invert
  1424|         0|            0|            0|  0.00%|    Jacobians in subsequent steps.
  1425|         0|            0|            0|  0.00%|
  1426|         0|            0|            0|  0.00%|    For a review on Newton-Krylov methods, see for example [1]_,
  1427|         0|            0|            0|  0.00%|    and for the LGMRES sparse inverse method, see [2]_.
  1428|         0|            0|            0|  0.00%|
  1429|         0|            0|            0|  0.00%|    References
  1430|         0|            0|            0|  0.00%|    ----------
  1431|         0|            0|            0|  0.00%|    .. [1] D.A. Knoll and D.E. Keyes, J. Comp. Phys. 193, 357 (2004).
  1432|         0|            0|            0|  0.00%|           :doi:`10.1016/j.jcp.2003.08.010`
  1433|         0|            0|            0|  0.00%|    .. [2] A.H. Baker and E.R. Jessup and T. Manteuffel,
  1434|         0|            0|            0|  0.00%|           SIAM J. Matrix Anal. Appl. 26, 962 (2005).
  1435|         0|            0|            0|  0.00%|           :doi:`10.1137/S0895479803422014`
  1436|         0|            0|            0|  0.00%|
  1437|         0|            0|            0|  0.00%|    """
  1438|         0|            0|            0|  0.00%|
  1439|         0|            0|            0|  0.00%|    def __init__(self, rdiff=None, method='lgmres', inner_maxiter=20,
  1440|         0|            0|            0|  0.00%|                 inner_M=None, outer_k=10, **kw):
  1441|         0|            0|            0|  0.00%|        self.preconditioner = inner_M
  1442|         0|            0|            0|  0.00%|        self.rdiff = rdiff
  1443|         0|            0|            0|  0.00%|        self.method = dict(
  1444|         0|            0|            0|  0.00%|            bicgstab=scipy.sparse.linalg.bicgstab,
  1445|         0|            0|            0|  0.00%|            gmres=scipy.sparse.linalg.gmres,
  1446|         0|            0|            0|  0.00%|            lgmres=scipy.sparse.linalg.lgmres,
  1447|         0|            0|            0|  0.00%|            cgs=scipy.sparse.linalg.cgs,
  1448|         0|            0|            0|  0.00%|            minres=scipy.sparse.linalg.minres,
  1449|         0|            0|            0|  0.00%|            ).get(method, method)
  1450|         0|            0|            0|  0.00%|
  1451|         0|            0|            0|  0.00%|        self.method_kw = dict(maxiter=inner_maxiter, M=self.preconditioner)
  1452|         0|            0|            0|  0.00%|
  1453|         0|            0|            0|  0.00%|        if self.method is scipy.sparse.linalg.gmres:
  1454|         0|            0|            0|  0.00%|            # Replace GMRES's outer iteration with Newton steps
  1455|         0|            0|            0|  0.00%|            self.method_kw['restrt'] = inner_maxiter
  1456|         0|            0|            0|  0.00%|            self.method_kw['maxiter'] = 1
  1457|         0|            0|            0|  0.00%|            self.method_kw.setdefault('atol', 0)
  1458|         0|            0|            0|  0.00%|        elif self.method is scipy.sparse.linalg.gcrotmk:
  1459|         0|            0|            0|  0.00%|            self.method_kw.setdefault('atol', 0)
  1460|         0|            0|            0|  0.00%|        elif self.method is scipy.sparse.linalg.lgmres:
  1461|         0|            0|            0|  0.00%|            self.method_kw['outer_k'] = outer_k
  1462|         0|            0|            0|  0.00%|            # Replace LGMRES's outer iteration with Newton steps
  1463|         0|            0|            0|  0.00%|            self.method_kw['maxiter'] = 1
  1464|         0|            0|            0|  0.00%|            # Carry LGMRES's `outer_v` vectors across nonlinear iterations
  1465|         0|            0|            0|  0.00%|            self.method_kw.setdefault('outer_v', [])
  1466|         0|            0|            0|  0.00%|            self.method_kw.setdefault('prepend_outer_v', True)
  1467|         0|            0|            0|  0.00%|            # But don't carry the corresponding Jacobian*v products, in case
  1468|         0|            0|            0|  0.00%|            # the Jacobian changes a lot in the nonlinear step
  1469|         0|            0|            0|  0.00%|            #
  1470|         0|            0|            0|  0.00%|            # XXX: some trust-region inspired ideas might be more efficient...
  1471|         0|            0|            0|  0.00%|            #      See e.g., Brown & Saad. But needs to be implemented separately
  1472|         0|            0|            0|  0.00%|            #      since it's not an inexact Newton method.
  1473|         0|            0|            0|  0.00%|            self.method_kw.setdefault('store_outer_Av', False)
  1474|         0|            0|            0|  0.00%|            self.method_kw.setdefault('atol', 0)
  1475|         0|            0|            0|  0.00%|
  1476|         0|            0|            0|  0.00%|        for key, value in kw.items():
  1477|         0|            0|            0|  0.00%|            if not key.startswith('inner_'):
  1478|         0|            0|            0|  0.00%|                raise ValueError("Unknown parameter %s" % key)
  1479|         0|            0|            0|  0.00%|            self.method_kw[key[6:]] = value
  1480|         0|            0|            0|  0.00%|
  1481|         0|            0|            0|  0.00%|    def _update_diff_step(self):
  1482|         0|            0|            0|  0.00%|        mx = abs(self.x0).max()
  1483|         0|            0|            0|  0.00%|        mf = abs(self.f0).max()
  1484|         0|            0|            0|  0.00%|        self.omega = self.rdiff * max(1, mx) / max(1, mf)
  1485|         0|            0|            0|  0.00%|
  1486|         0|            0|            0|  0.00%|    def matvec(self, v):
  1487|         0|            0|            0|  0.00%|        nv = norm(v)
  1488|         0|            0|            0|  0.00%|        if nv == 0:
  1489|         0|            0|            0|  0.00%|            return 0*v
  1490|         0|            0|            0|  0.00%|        sc = self.omega / nv
  1491|         0|            0|            0|  0.00%|        r = (self.func(self.x0 + sc*v) - self.f0) / sc
  1492|         0|            0|            0|  0.00%|        if not np.all(np.isfinite(r)) and np.all(np.isfinite(v)):
  1493|         0|            0|            0|  0.00%|            raise ValueError('Function returned non-finite results')
  1494|         0|            0|            0|  0.00%|        return r
  1495|         0|            0|            0|  0.00%|
  1496|         0|            0|            0|  0.00%|    def solve(self, rhs, tol=0):
  1497|         0|            0|            0|  0.00%|        if 'tol' in self.method_kw:
  1498|         0|            0|            0|  0.00%|            sol, info = self.method(self.op, rhs, **self.method_kw)
  1499|         0|            0|            0|  0.00%|        else:
  1500|         0|            0|            0|  0.00%|            sol, info = self.method(self.op, rhs, tol=tol, **self.method_kw)
  1501|         0|            0|            0|  0.00%|        return sol
  1502|         0|            0|            0|  0.00%|
  1503|         0|            0|            0|  0.00%|    def update(self, x, f):
  1504|         0|            0|            0|  0.00%|        self.x0 = x
  1505|         0|            0|            0|  0.00%|        self.f0 = f
  1506|         0|            0|            0|  0.00%|        self._update_diff_step()
  1507|         0|            0|            0|  0.00%|
  1508|         0|            0|            0|  0.00%|        # Update also the preconditioner, if possible
  1509|         0|            0|            0|  0.00%|        if self.preconditioner is not None:
  1510|         0|            0|            0|  0.00%|            if hasattr(self.preconditioner, 'update'):
  1511|         0|            0|            0|  0.00%|                self.preconditioner.update(x, f)
  1512|         0|            0|            0|  0.00%|
  1513|         0|            0|            0|  0.00%|    def setup(self, x, f, func):
  1514|         0|            0|            0|  0.00%|        Jacobian.setup(self, x, f, func)
  1515|         0|            0|            0|  0.00%|        self.x0 = x
  1516|         0|            0|            0|  0.00%|        self.f0 = f
  1517|         0|            0|            0|  0.00%|        self.op = scipy.sparse.linalg.aslinearoperator(self)
  1518|         0|            0|            0|  0.00%|
  1519|         0|            0|            0|  0.00%|        if self.rdiff is None:
  1520|         0|            0|            0|  0.00%|            self.rdiff = np.finfo(x.dtype).eps ** (1./2)
  1521|         0|            0|            0|  0.00%|
  1522|         0|            0|            0|  0.00%|        self._update_diff_step()
  1523|         0|            0|            0|  0.00%|
  1524|         0|            0|            0|  0.00%|        # Setup also the preconditioner, if possible
  1525|         0|            0|            0|  0.00%|        if self.preconditioner is not None:
  1526|         0|            0|            0|  0.00%|            if hasattr(self.preconditioner, 'setup'):
  1527|         0|            0|            0|  0.00%|                self.preconditioner.setup(x, f, func)
  1528|         0|            0|            0|  0.00%|
  1529|         0|            0|            0|  0.00%|
  1530|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1531|         0|            0|            0|  0.00%|# Wrapper functions
  1532|         0|            0|            0|  0.00%|#------------------------------------------------------------------------------
  1533|         0|            0|            0|  0.00%|
  1534|         0|            0|            0|  0.00%|def _nonlin_wrapper(name, jac):
  1535|         0|            0|            0|  0.00%|    """
  1536|         0|            0|            0|  0.00%|    Construct a solver wrapper with given name and Jacobian approx.
  1537|         0|            0|            0|  0.00%|
  1538|         0|            0|            0|  0.00%|    It inspects the keyword arguments of ``jac.__init__``, and allows to
  1539|         0|            0|            0|  0.00%|    use the same arguments in the wrapper function, in addition to the
  1540|         0|            0|            0|  0.00%|    keyword arguments of `nonlin_solve`
  1541|         0|            0|            0|  0.00%|
  1542|         0|            0|            0|  0.00%|    """
  1543|         0|            0|            0|  0.00%|    signature = _getfullargspec(jac.__init__)
  1544|         0|            0|            0|  0.00%|    args, varargs, varkw, defaults, kwonlyargs, kwdefaults, _ = signature
  1545|         0|            0|            0|  0.00%|    kwargs = list(zip(args[-len(defaults):], defaults))
  1546|         0|            0|            0|  0.00%|    kw_str = ", ".join(["%s=%r" % (k, v) for k, v in kwargs])
  1547|         0|            0|            0|  0.00%|    if kw_str:
  1548|         0|            0|            0|  0.00%|        kw_str = ", " + kw_str
  1549|         0|            0|            0|  0.00%|    kwkw_str = ", ".join(["%s=%s" % (k, k) for k, v in kwargs])
  1550|         0|            0|            0|  0.00%|    if kwkw_str:
  1551|         0|            0|            0|  0.00%|        kwkw_str = kwkw_str + ", "
  1552|         0|            0|            0|  0.00%|    if kwonlyargs:
  1553|         0|            0|            0|  0.00%|        raise ValueError('Unexpected signature %s' % signature)
  1554|         0|            0|            0|  0.00%|
  1555|         0|            0|            0|  0.00%|    # Construct the wrapper function so that its keyword arguments
  1556|         0|            0|            0|  0.00%|    # are visible in pydoc.help etc.
  1557|         0|            0|            0|  0.00%|    wrapper = """
  1558|         0|            0|            0|  0.00%|def %(name)s(F, xin, iter=None %(kw)s, verbose=False, maxiter=None,
  1559|         0|            0|            0|  0.00%|             f_tol=None, f_rtol=None, x_tol=None, x_rtol=None,
  1560|         0|            0|            0|  0.00%|             tol_norm=None, line_search='armijo', callback=None, **kw):
  1561|         0|            0|            0|  0.00%|    jac = %(jac)s(%(kwkw)s **kw)
  1562|         0|            0|            0|  0.00%|    return nonlin_solve(F, xin, jac, iter, verbose, maxiter,
  1563|         0|            0|            0|  0.00%|                        f_tol, f_rtol, x_tol, x_rtol, tol_norm, line_search,
  1564|         0|            0|            0|  0.00%|                        callback)
  1565|         0|            0|            0|  0.00%|"""
  1566|         0|            0|            0|  0.00%|
  1567|         0|            0|            0|  0.00%|    wrapper = wrapper % dict(name=name, kw=kw_str, jac=jac.__name__,
  1568|         0|            0|            0|  0.00%|                             kwkw=kwkw_str)
  1569|         0|            0|            0|  0.00%|    ns = {}
  1570|         0|            0|            0|  0.00%|    ns.update(globals())
  1571|         0|            0|            0|  0.00%|    exec(wrapper, ns)
  1572|         0|            0|            0|  0.00%|    func = ns[name]
  1573|         0|            0|            0|  0.00%|    func.__doc__ = jac.__doc__
  1574|         0|            0|            0|  0.00%|    _set_doc(func)
  1575|         0|            0|            0|  0.00%|    return func
  1576|         0|            0|            0|  0.00%|
  1577|         0|            0|            0|  0.00%|
  1578|         0|            0|            0|  0.00%|broyden1 = _nonlin_wrapper('broyden1', BroydenFirst)
  1579|         0|            0|            0|  0.00%|broyden2 = _nonlin_wrapper('broyden2', BroydenSecond)
  1580|         0|            0|            0|  0.00%|anderson = _nonlin_wrapper('anderson', Anderson)
  1581|         0|            0|            0|  0.00%|linearmixing = _nonlin_wrapper('linearmixing', LinearMixing)
  1582|         0|            0|            0|  0.00%|diagbroyden = _nonlin_wrapper('diagbroyden', DiagBroyden)
  1583|         0|            0|            0|  0.00%|excitingmixing = _nonlin_wrapper('excitingmixing', ExcitingMixing)
  1584|         0|            0|            0|  0.00%|newton_krylov = _nonlin_wrapper('newton_krylov', KrylovJacobian)
File: <string>_12
File duration: 2.21729e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.21729e-05|  1.10865e-05|  0.00%|
File: <string>_327
File duration: 2.21729e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.21729e-05|  1.10865e-05|  0.00%|
File: <string>_295
File duration: 2.21729e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.21729e-05|  1.10865e-05|  0.00%|
File: <string>_30
File duration: 2.21729e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.21729e-05|  1.10865e-05|  0.00%|
File: <string>_330
File duration: 2.19345e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.19345e-05|  1.09673e-05|  0.00%|
File: <string>_284
File duration: 2.19345e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.19345e-05|  1.09673e-05|  0.00%|
File: <string>_289
File duration: 2.19345e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.19345e-05|  1.09673e-05|  0.00%|
File: <string>_285
File duration: 2.19345e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.19345e-05|  1.09673e-05|  0.00%|
File: <string>_64
File duration: 2.19345e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.19345e-05|  1.09673e-05|  0.00%|
File: <string>_286
File duration: 2.19345e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.19345e-05|  1.09673e-05|  0.00%|
File: <string>_75
File duration: 2.19345e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.19345e-05|  1.09673e-05|  0.00%|
File: <string>_70
File duration: 2.19345e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.19345e-05|  1.09673e-05|  0.00%|
File: <string>_40
File duration: 2.19345e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.19345e-05|  1.09673e-05|  0.00%|
File: <string>_279
File duration: 2.16961e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.16961e-05|   1.0848e-05|  0.00%|
File: <string>_148
File duration: 2.16961e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.16961e-05|   1.0848e-05|  0.00%|
File: <string>_329
File duration: 2.16961e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.16961e-05|   1.0848e-05|  0.00%|
File: <string>_276
File duration: 2.16961e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.16961e-05|   1.0848e-05|  0.00%|
File: <string>_323
File duration: 2.16961e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.16961e-05|   1.0848e-05|  0.00%|
File: <string>_130
File duration: 2.16961e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.16961e-05|   1.0848e-05|  0.00%|
File: <string>_321
File duration: 2.14577e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.14577e-05|  1.07288e-05|  0.00%|
File: <string>_335
File duration: 2.14577e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.14577e-05|  1.07288e-05|  0.00%|
File: <string>_298
File duration: 2.14577e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.14577e-05|  1.07288e-05|  0.00%|
File: <string>_74
File duration: 2.14577e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.14577e-05|  1.07288e-05|  0.00%|
File: <string>_291
File duration: 2.14577e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.14577e-05|  1.07288e-05|  0.00%|
File: <string>_322
File duration: 2.14577e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.14577e-05|  1.07288e-05|  0.00%|
File: <attrs generated hash attr.validators._ProvidesValidator>
File duration: 2.14577e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.14577e-05|  1.07288e-05|  0.00%|def __hash__(self):
     2|         0|            0|            0|  0.00%|        return hash((
     3|         0|            0|            0|  0.00%|                7327662398415621884,
     4|         0|            0|            0|  0.00%|                self.interface,
     5|         0|            0|            0|  0.00%|            ))
File: <string>_333
File duration: 2.12193e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.12193e-05|  1.06096e-05|  0.00%|
File: <string>_308
File duration: 2.12193e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.12193e-05|  1.06096e-05|  0.00%|
File: <string>_22
File duration: 2.12193e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.12193e-05|  1.06096e-05|  0.00%|
File: <string>_17
File duration: 2.12193e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.12193e-05|  1.06096e-05|  0.00%|
File: <string>_290
File duration: 2.12193e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.12193e-05|  1.06096e-05|  0.00%|
File: <string>_31
File duration: 2.12193e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.12193e-05|  1.06096e-05|  0.00%|
File: <string>_83
File duration: 2.12193e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.12193e-05|  1.06096e-05|  0.00%|
File: <string>_277
File duration: 2.12193e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.12193e-05|  1.06096e-05|  0.00%|
File: <string>_311
File duration: 2.09808e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.09808e-05|  1.04904e-05|  0.00%|
File: <string>_299
File duration: 2.09808e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.09808e-05|  1.04904e-05|  0.00%|
File: <string>_132
File duration: 2.09808e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.09808e-05|  1.04904e-05|  0.00%|
(call)|         1|  9.05991e-06|  9.05991e-06|  0.00%|# /opt/anaconda3/lib/python3.7/site-packages/torch/jit/annotations.py:48 __getitem__
File: <string>_320
File duration: 2.09808e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.09808e-05|  1.04904e-05|  0.00%|
File: <string>_6
File duration: 2.09808e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.09808e-05|  1.04904e-05|  0.00%|
File: <string>_35
File duration: 2.09808e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.09808e-05|  1.04904e-05|  0.00%|
File: <string>_293
File duration: 2.09808e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.09808e-05|  1.04904e-05|  0.00%|
File: <string>_300
File duration: 2.07424e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.07424e-05|  1.03712e-05|  0.00%|
File: <string>_113
File duration: 2.07424e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.07424e-05|  1.03712e-05|  0.00%|
File: <string>_43
File duration: 2.07424e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.07424e-05|  1.03712e-05|  0.00%|
File: <string>_150
File duration: 2.07424e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.07424e-05|  1.03712e-05|  0.00%|
File: <string>_44
File duration: 2.07424e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.07424e-05|  1.03712e-05|  0.00%|
File: <string>_324
File duration: 2.0504e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|   2.0504e-05|   1.0252e-05|  0.00%|
File: <string>_306
File duration: 2.0504e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|   2.0504e-05|   1.0252e-05|  0.00%|
File: <string>_302
File duration: 2.0504e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|   2.0504e-05|   1.0252e-05|  0.00%|
File: <string>_114
File duration: 2.0504e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|   2.0504e-05|   1.0252e-05|  0.00%|
File: <string>_301
File duration: 2.0504e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|   2.0504e-05|   1.0252e-05|  0.00%|
File: <string>_149
File duration: 2.0504e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|   2.0504e-05|   1.0252e-05|  0.00%|
File: <string>_62
File duration: 2.02656e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.02656e-05|  1.01328e-05|  0.00%|
File: <string>_0
File duration: 2.02656e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.02656e-05|  1.01328e-05|  0.00%|
File: <string>_318
File duration: 2.02656e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.02656e-05|  1.01328e-05|  0.00%|
File: <string>_57
File duration: 2.02656e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.02656e-05|  1.01328e-05|  0.00%|
File: <string>_48
File duration: 2.02656e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.02656e-05|  1.01328e-05|  0.00%|
File: <string>_59
File duration: 2.02656e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.02656e-05|  1.01328e-05|  0.00%|
File: <string>_32
File duration: 2.00272e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.00272e-05|  1.00136e-05|  0.00%|
File: <string>_319
File duration: 2.00272e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.00272e-05|  1.00136e-05|  0.00%|
File: <string>_2
File duration: 2.00272e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.00272e-05|  1.00136e-05|  0.00%|
File: <string>_304
File duration: 2.00272e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.00272e-05|  1.00136e-05|  0.00%|
File: <string>_63
File duration: 2.00272e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.00272e-05|  1.00136e-05|  0.00%|
File: <string>_316
File duration: 2.00272e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  2.00272e-05|  1.00136e-05|  0.00%|
File: <string>_309
File duration: 1.97887e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.97887e-05|  9.89437e-06|  0.00%|
File: <string>_50
File duration: 1.97887e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.97887e-05|  9.89437e-06|  0.00%|
File: <string>_158
File duration: 1.97887e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.97887e-05|  9.89437e-06|  0.00%|
File: <string>_310
File duration: 1.97887e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.97887e-05|  9.89437e-06|  0.00%|
File: <string>_47
File duration: 1.97887e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.97887e-05|  9.89437e-06|  0.00%|
File: <string>_88
File duration: 1.95503e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.95503e-05|  9.77516e-06|  0.00%|
File: <decorator-gen-6>
File duration: 1.95503e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.95503e-05|  9.77516e-06|  0.00%|
File: <string>_334
File duration: 1.95503e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.95503e-05|  9.77516e-06|  0.00%|
File: <attrs generated hash attr.validators._IsCallableValidator>
File duration: 1.95503e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.95503e-05|  9.77516e-06|  0.00%|def __hash__(self):
     2|         0|            0|            0|  0.00%|        return hash((
     3|         0|            0|            0|  0.00%|                6032159077130137576,
     4|         0|            0|            0|  0.00%|            ))
File: <string>_89
File duration: 1.93119e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.93119e-05|  9.65595e-06|  0.00%|
File: <string>_58
File duration: 1.93119e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.93119e-05|  9.65595e-06|  0.00%|
File: <string>_61
File duration: 1.93119e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.93119e-05|  9.65595e-06|  0.00%|
File: <string>_60
File duration: 1.93119e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.93119e-05|  9.65595e-06|  0.00%|
File: <string>_52
File duration: 1.93119e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.93119e-05|  9.65595e-06|  0.00%|
File: <string>_305
File duration: 1.93119e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.93119e-05|  9.65595e-06|  0.00%|
File: <string>_313
File duration: 1.93119e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.93119e-05|  9.65595e-06|  0.00%|
File: <string>_65
File duration: 1.90735e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.90735e-05|  9.53674e-06|  0.00%|
File: <string>_29
File duration: 1.90735e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.90735e-05|  9.53674e-06|  0.00%|
File: <string>_66
File duration: 1.90735e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.90735e-05|  9.53674e-06|  0.00%|
File: <string>_307
File duration: 1.90735e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.90735e-05|  9.53674e-06|  0.00%|
File: <string>_315
File duration: 1.90735e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.90735e-05|  9.53674e-06|  0.00%|
File: <string>_312
File duration: 1.88351e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.88351e-05|  9.41753e-06|  0.00%|
File: <string>_55
File duration: 1.85966e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.85966e-05|  9.29832e-06|  0.00%|
File: <string>_53
File duration: 1.85966e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.85966e-05|  9.29832e-06|  0.00%|
File: <string>_54
File duration: 1.83582e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.83582e-05|  9.17912e-06|  0.00%|
File: <string>_56
File duration: 1.81198e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.81198e-05|  9.05991e-06|  0.00%|
File: <decorator-gen-5>
File duration: 1.81198e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.81198e-05|  9.05991e-06|  0.00%|
File: <decorator-gen-8>
File duration: 1.78814e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.78814e-05|   8.9407e-06|  0.00%|
File: <attrs generated hash jsonschema._types.TypeChecker>
File duration: 1.7643e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|   1.7643e-05|  8.82149e-06|  0.00%|def __hash__(self):
     2|         0|            0|            0|  0.00%|        return hash((
     3|         0|            0|            0|  0.00%|                -6823231206346395447,
     4|         0|            0|            0|  0.00%|                self._type_checkers,
     5|         0|            0|            0|  0.00%|            ))
File: <attrs generated eq jsonschema.exceptions.RefResolutionError>
File duration: 1.7643e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|   1.7643e-05|  8.82149e-06|  0.00%|def __eq__(self, other):
     2|         0|            0|            0|  0.00%|    if other.__class__ is not self.__class__:
     3|         0|            0|            0|  0.00%|        return NotImplemented
     4|         0|            0|            0|  0.00%|    return  (
     5|         0|            0|            0|  0.00%|        self._cause,
     6|         0|            0|            0|  0.00%|    ) == (
     7|         0|            0|            0|  0.00%|        other._cause,
     8|         0|            0|            0|  0.00%|    )
File: <attrs generated hash jsonschema.exceptions.RefResolutionError>
File duration: 1.7643e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|   1.7643e-05|  8.82149e-06|  0.00%|def __hash__(self):
     2|         0|            0|            0|  0.00%|        return hash((
     3|         0|            0|            0|  0.00%|                -8983870166726457924,
     4|         0|            0|            0|  0.00%|                self._cause,
     5|         0|            0|            0|  0.00%|            ))
File: <decorator-gen-3>
File duration: 1.74046e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.74046e-05|  8.70228e-06|  0.00%|
File: <decorator-gen-2>
File duration: 1.74046e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.74046e-05|  8.70228e-06|  0.00%|
File: <attrs generated hash attr.validators._DeepIterable>
File duration: 1.71661e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.71661e-05|  8.58307e-06|  0.00%|def __hash__(self):
     2|         0|            0|            0|  0.00%|        return hash((
     3|         0|            0|            0|  0.00%|                5413484499625827358,
     4|         0|            0|            0|  0.00%|                self.member_validator,
     5|         0|            0|            0|  0.00%|                self.iterable_validator,
     6|         0|            0|            0|  0.00%|            ))
File: <attrs generated eq attr.validators._ProvidesValidator>
File duration: 1.71661e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.71661e-05|  8.58307e-06|  0.00%|def __eq__(self, other):
     2|         0|            0|            0|  0.00%|    if other.__class__ is not self.__class__:
     3|         0|            0|            0|  0.00%|        return NotImplemented
     4|         0|            0|            0|  0.00%|    return  (
     5|         0|            0|            0|  0.00%|        self.interface,
     6|         0|            0|            0|  0.00%|    ) == (
     7|         0|            0|            0|  0.00%|        other.interface,
     8|         0|            0|            0|  0.00%|    )
File: <decorator-gen-4>
File duration: 1.69277e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.69277e-05|  8.46386e-06|  0.00%|
File: <decorator-gen-10>
File duration: 1.69277e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.69277e-05|  8.46386e-06|  0.00%|
File: <decorator-gen-1>
File duration: 1.69277e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.69277e-05|  8.46386e-06|  0.00%|
File: <attrs generated eq attr.validators._MatchesReValidator>
File duration: 1.64509e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.64509e-05|  8.22544e-06|  0.00%|def __eq__(self, other):
     2|         0|            0|            0|  0.00%|    if other.__class__ is not self.__class__:
     3|         0|            0|            0|  0.00%|        return NotImplemented
     4|         0|            0|            0|  0.00%|    return  (
     5|         0|            0|            0|  0.00%|        self.regex,
     6|         0|            0|            0|  0.00%|        self.flags,
     7|         0|            0|            0|  0.00%|        self.match_func,
     8|         0|            0|            0|  0.00%|    ) == (
     9|         0|            0|            0|  0.00%|        other.regex,
    10|         0|            0|            0|  0.00%|        other.flags,
    11|         0|            0|            0|  0.00%|        other.match_func,
    12|         0|            0|            0|  0.00%|    )
File: <attrs generated eq attr._make._CountingAttr>
File duration: 1.64509e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.64509e-05|  8.22544e-06|  0.00%|def __eq__(self, other):
     2|         0|            0|            0|  0.00%|    if other.__class__ is not self.__class__:
     3|         0|            0|            0|  0.00%|        return NotImplemented
     4|         0|            0|            0|  0.00%|    return  (
     5|         0|            0|            0|  0.00%|        self.counter,
     6|         0|            0|            0|  0.00%|        self._default,
     7|         0|            0|            0|  0.00%|        self.repr,
     8|         0|            0|            0|  0.00%|        self.eq,
     9|         0|            0|            0|  0.00%|        self.order,
    10|         0|            0|            0|  0.00%|        self.hash,
    11|         0|            0|            0|  0.00%|        self.init,
    12|         0|            0|            0|  0.00%|        self.metadata,
    13|         0|            0|            0|  0.00%|    ) == (
    14|         0|            0|            0|  0.00%|        other.counter,
    15|         0|            0|            0|  0.00%|        other._default,
    16|         0|            0|            0|  0.00%|        other.repr,
    17|         0|            0|            0|  0.00%|        other.eq,
    18|         0|            0|            0|  0.00%|        other.order,
    19|         0|            0|            0|  0.00%|        other.hash,
    20|         0|            0|            0|  0.00%|        other.init,
    21|         0|            0|            0|  0.00%|        other.metadata,
    22|         0|            0|            0|  0.00%|    )
File: <attrs generated hash attr.validators._MatchesReValidator>
File duration: 1.64509e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.64509e-05|  8.22544e-06|  0.00%|def __hash__(self):
     2|         0|            0|            0|  0.00%|        return hash((
     3|         0|            0|            0|  0.00%|                -8981048215068840731,
     4|         0|            0|            0|  0.00%|                self.regex,
     5|         0|            0|            0|  0.00%|                self.flags,
     6|         0|            0|            0|  0.00%|                self.match_func,
     7|         0|            0|            0|  0.00%|            ))
File: <attrs generated eq attr._make.Factory>
File duration: 1.62125e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.62125e-05|  8.10623e-06|  0.00%|def __eq__(self, other):
     2|         0|            0|            0|  0.00%|    if other.__class__ is not self.__class__:
     3|         0|            0|            0|  0.00%|        return NotImplemented
     4|         0|            0|            0|  0.00%|    return  (
     5|         0|            0|            0|  0.00%|        self.factory,
     6|         0|            0|            0|  0.00%|        self.takes_self,
     7|         0|            0|            0|  0.00%|    ) == (
     8|         0|            0|            0|  0.00%|        other.factory,
     9|         0|            0|            0|  0.00%|        other.takes_self,
    10|         0|            0|            0|  0.00%|    )
File: <decorator-gen-9>
File duration: 1.62125e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.62125e-05|  8.10623e-06|  0.00%|
File: <attrs generated init attr.validators._InstanceOfValidator>
File duration: 1.62125e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.62125e-05|  8.10623e-06|  0.00%|def __init__(self, type):
     2|         0|            0|            0|  0.00%|    self.type = type
File: <attrs generated eq attr.validators._InstanceOfValidator>
File duration: 1.62125e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.62125e-05|  8.10623e-06|  0.00%|def __eq__(self, other):
     2|         0|            0|            0|  0.00%|    if other.__class__ is not self.__class__:
     3|         0|            0|            0|  0.00%|        return NotImplemented
     4|         0|            0|            0|  0.00%|    return  (
     5|         0|            0|            0|  0.00%|        self.type,
     6|         0|            0|            0|  0.00%|    ) == (
     7|         0|            0|            0|  0.00%|        other.type,
     8|         0|            0|            0|  0.00%|    )
File: <attrs generated hash attr.validators._InstanceOfValidator>
File duration: 1.57356e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.57356e-05|  7.86781e-06|  0.00%|def __hash__(self):
     2|         0|            0|            0|  0.00%|        return hash((
     3|         0|            0|            0|  0.00%|                3764657723134199820,
     4|         0|            0|            0|  0.00%|                self.type,
     5|         0|            0|            0|  0.00%|            ))
File: <attrs generated hash attr.validators._OptionalValidator>
File duration: 1.57356e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.57356e-05|  7.86781e-06|  0.00%|def __hash__(self):
     2|         0|            0|            0|  0.00%|        return hash((
     3|         0|            0|            0|  0.00%|                64220931337272022,
     4|         0|            0|            0|  0.00%|                self.validator,
     5|         0|            0|            0|  0.00%|            ))
File: <attrs generated eq attr.validators._InValidator>
File duration: 1.54972e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.54972e-05|   7.7486e-06|  0.00%|def __eq__(self, other):
     2|         0|            0|            0|  0.00%|    if other.__class__ is not self.__class__:
     3|         0|            0|            0|  0.00%|        return NotImplemented
     4|         0|            0|            0|  0.00%|    return  (
     5|         0|            0|            0|  0.00%|        self.options,
     6|         0|            0|            0|  0.00%|    ) == (
     7|         0|            0|            0|  0.00%|        other.options,
     8|         0|            0|            0|  0.00%|    )
File: <attrs generated hash attr.validators._InValidator>
File duration: 1.54972e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.54972e-05|   7.7486e-06|  0.00%|def __hash__(self):
     2|         0|            0|            0|  0.00%|        return hash((
     3|         0|            0|            0|  0.00%|                -7515202603242845009,
     4|         0|            0|            0|  0.00%|                self.options,
     5|         0|            0|            0|  0.00%|            ))
File: <attrs generated init attr.validators._DeepMapping>
File duration: 1.52588e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.52588e-05|  7.62939e-06|  0.00%|def __init__(self, key_validator, value_validator, mapping_validator=attr_dict['mapping_validator'].default):
     2|         0|            0|            0|  0.00%|    self.key_validator = key_validator
     3|         0|            0|            0|  0.00%|    self.value_validator = value_validator
     4|         0|            0|            0|  0.00%|    self.mapping_validator = mapping_validator
     5|         0|            0|            0|  0.00%|    if _config._run_validators is True:
     6|         0|            0|            0|  0.00%|        __attr_validator_key_validator(self, __attr_key_validator, self.key_validator)
     7|         0|            0|            0|  0.00%|        __attr_validator_value_validator(self, __attr_value_validator, self.value_validator)
     8|         0|            0|            0|  0.00%|        __attr_validator_mapping_validator(self, __attr_mapping_validator, self.mapping_validator)
File: <attrs generated eq attr.validators._DeepIterable>
File duration: 1.50204e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.50204e-05|  7.51019e-06|  0.00%|def __eq__(self, other):
     2|         0|            0|            0|  0.00%|    if other.__class__ is not self.__class__:
     3|         0|            0|            0|  0.00%|        return NotImplemented
     4|         0|            0|            0|  0.00%|    return  (
     5|         0|            0|            0|  0.00%|        self.member_validator,
     6|         0|            0|            0|  0.00%|        self.iterable_validator,
     7|         0|            0|            0|  0.00%|    ) == (
     8|         0|            0|            0|  0.00%|        other.member_validator,
     9|         0|            0|            0|  0.00%|        other.iterable_validator,
    10|         0|            0|            0|  0.00%|    )
File: <attrs generated hash attr.validators._DeepMapping>
File duration: 1.4782e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|   1.4782e-05|  7.39098e-06|  0.00%|def __hash__(self):
     2|         0|            0|            0|  0.00%|        return hash((
     3|         0|            0|            0|  0.00%|                1111118602564981588,
     4|         0|            0|            0|  0.00%|                self.key_validator,
     5|         0|            0|            0|  0.00%|                self.value_validator,
     6|         0|            0|            0|  0.00%|                self.mapping_validator,
     7|         0|            0|            0|  0.00%|            ))
File: <attrs generated init attr.validators._ProvidesValidator>
File duration: 1.4782e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|   1.4782e-05|  7.39098e-06|  0.00%|def __init__(self, interface):
     2|         0|            0|            0|  0.00%|    self.interface = interface
File: <attrs generated init attr.validators._MatchesReValidator>
File duration: 1.4782e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|   1.4782e-05|  7.39098e-06|  0.00%|def __init__(self, regex, flags, match_func):
     2|         0|            0|            0|  0.00%|    _inst_dict = self.__dict__
     3|         0|            0|            0|  0.00%|    _inst_dict['regex'] = regex
     4|         0|            0|            0|  0.00%|    _inst_dict['flags'] = flags
     5|         0|            0|            0|  0.00%|    _inst_dict['match_func'] = match_func
File: <attrs generated hash attr._make.Attribute>
File duration: 1.4782e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|   1.4782e-05|  7.39098e-06|  0.00%|def __hash__(self):
     2|         0|            0|            0|  0.00%|        return hash((
     3|         0|            0|            0|  0.00%|                2177135701218275044,
     4|         0|            0|            0|  0.00%|                self.name,
     5|         0|            0|            0|  0.00%|                self.default,
     6|         0|            0|            0|  0.00%|                self.validator,
     7|         0|            0|            0|  0.00%|                self.repr,
     8|         0|            0|            0|  0.00%|                self.eq,
     9|         0|            0|            0|  0.00%|                self.order,
    10|         0|            0|            0|  0.00%|                self.hash,
    11|         0|            0|            0|  0.00%|                self.init,
    12|         0|            0|            0|  0.00%|                self.type,
    13|         0|            0|            0|  0.00%|                self.converter,
    14|         0|            0|            0|  0.00%|                self.kw_only,
    15|         0|            0|            0|  0.00%|            ))
File: <attrs generated eq attr._make.Attribute>
File duration: 1.45435e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.45435e-05|  7.27177e-06|  0.00%|def __eq__(self, other):
     2|         0|            0|            0|  0.00%|    if other.__class__ is not self.__class__:
     3|         0|            0|            0|  0.00%|        return NotImplemented
     4|         0|            0|            0|  0.00%|    return  (
     5|         0|            0|            0|  0.00%|        self.name,
     6|         0|            0|            0|  0.00%|        self.default,
     7|         0|            0|            0|  0.00%|        self.validator,
     8|         0|            0|            0|  0.00%|        self.repr,
     9|         0|            0|            0|  0.00%|        self.eq,
    10|         0|            0|            0|  0.00%|        self.order,
    11|         0|            0|            0|  0.00%|        self.hash,
    12|         0|            0|            0|  0.00%|        self.init,
    13|         0|            0|            0|  0.00%|        self.metadata,
    14|         0|            0|            0|  0.00%|        self.type,
    15|         0|            0|            0|  0.00%|        self.converter,
    16|         0|            0|            0|  0.00%|        self.kw_only,
    17|         0|            0|            0|  0.00%|    ) == (
    18|         0|            0|            0|  0.00%|        other.name,
    19|         0|            0|            0|  0.00%|        other.default,
    20|         0|            0|            0|  0.00%|        other.validator,
    21|         0|            0|            0|  0.00%|        other.repr,
    22|         0|            0|            0|  0.00%|        other.eq,
    23|         0|            0|            0|  0.00%|        other.order,
    24|         0|            0|            0|  0.00%|        other.hash,
    25|         0|            0|            0|  0.00%|        other.init,
    26|         0|            0|            0|  0.00%|        other.metadata,
    27|         0|            0|            0|  0.00%|        other.type,
    28|         0|            0|            0|  0.00%|        other.converter,
    29|         0|            0|            0|  0.00%|        other.kw_only,
    30|         0|            0|            0|  0.00%|    )
File: <attrs generated hash attr._make._AndValidator>
File duration: 1.43051e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.43051e-05|  7.15256e-06|  0.00%|def __hash__(self):
     2|         0|            0|            0|  0.00%|        return hash((
     3|         0|            0|            0|  0.00%|                -7922923910685122362,
     4|         0|            0|            0|  0.00%|                self._validators,
     5|         0|            0|            0|  0.00%|            ))
File: <attrs generated hash attr._make.Factory>
File duration: 1.43051e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.43051e-05|  7.15256e-06|  0.00%|def __hash__(self):
     2|         0|            0|            0|  0.00%|        return hash((
     3|         0|            0|            0|  0.00%|                -5549817694026912538,
     4|         0|            0|            0|  0.00%|                self.factory,
     5|         0|            0|            0|  0.00%|                self.takes_self,
     6|         0|            0|            0|  0.00%|            ))
File: <decorator-gen-0>
File duration: 1.43051e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.43051e-05|  7.15256e-06|  0.00%|
File: <attrs generated eq attr.validators._IsCallableValidator>
File duration: 1.40667e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.40667e-05|  7.03335e-06|  0.00%|def __eq__(self, other):
     2|         0|            0|            0|  0.00%|    if other.__class__ is not self.__class__:
     3|         0|            0|            0|  0.00%|        return NotImplemented
     4|         0|            0|            0|  0.00%|    return True
File: <attrs generated init attr.validators._InValidator>
File duration: 1.38283e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.38283e-05|  6.91414e-06|  0.00%|def __init__(self, options):
     2|         0|            0|            0|  0.00%|    self.options = options
File: <attrs generated init attr._make._AndValidator>
File duration: 1.12057e-05s (0.00%)
Line #|      Hits|         Time| Time per hit|      %|Source code
------+----------+-------------+-------------+-------+-----------
     1|         2|  1.12057e-05|  5.60284e-06|  0.00%|def __init__(self, validators):
     2|         0|            0|            0|  0.00%|    self._validators = validators
